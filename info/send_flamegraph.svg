<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="678" onload="init(evt)" viewBox="0 0 1200 678" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="678" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="661.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="661.00"> </text><svg id="frames" x="10" width="1180" total_samples="2401"><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.04%)</title><rect x="0.1666%" y="581" width="0.0416%" height="15" fill="rgb(227,0,7)" fg:x="4" fg:w="1"/><text x="0.4166%" y="591.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.04%)</title><rect x="0.1666%" y="565" width="0.0416%" height="15" fill="rgb(217,0,24)" fg:x="4" fg:w="1"/><text x="0.4166%" y="575.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.04%)</title><rect x="0.1666%" y="549" width="0.0416%" height="15" fill="rgb(221,193,54)" fg:x="4" fg:w="1"/><text x="0.4166%" y="559.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.04%)</title><rect x="0.1666%" y="533" width="0.0416%" height="15" fill="rgb(248,212,6)" fg:x="4" fg:w="1"/><text x="0.4166%" y="543.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.04%)</title><rect x="0.1666%" y="517" width="0.0416%" height="15" fill="rgb(208,68,35)" fg:x="4" fg:w="1"/><text x="0.4166%" y="527.50"></text></g><g><title>[ld-linux-x86-64.so.2] (6 samples, 0.25%)</title><rect x="0.0000%" y="597" width="0.2499%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="6"/><text x="0.2500%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="0.2082%" y="581" width="0.0416%" height="15" fill="rgb(207,160,47)" fg:x="5" fg:w="1"/><text x="0.4582%" y="591.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.12%)</title><rect x="2.5406%" y="101" width="0.1249%" height="15" fill="rgb(228,23,34)" fg:x="61" fg:w="3"/><text x="2.7906%" y="111.50"></text></g><g><title>&lt;tftp::packet::DataPacket as tftp::packet::ByteConverter&gt;::to_bytes (108 samples, 4.50%)</title><rect x="0.2499%" y="277" width="4.4981%" height="15" fill="rgb(218,30,26)" fg:x="6" fg:w="108"/><text x="0.4999%" y="287.50">&lt;tftp..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (108 samples, 4.50%)</title><rect x="0.2499%" y="261" width="4.4981%" height="15" fill="rgb(220,122,19)" fg:x="6" fg:w="108"/><text x="0.4999%" y="271.50">core:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (108 samples, 4.50%)</title><rect x="0.2499%" y="245" width="4.4981%" height="15" fill="rgb(250,228,42)" fg:x="6" fg:w="108"/><text x="0.4999%" y="255.50">&lt;allo..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (108 samples, 4.50%)</title><rect x="0.2499%" y="229" width="4.4981%" height="15" fill="rgb(240,193,28)" fg:x="6" fg:w="108"/><text x="0.4999%" y="239.50">&lt;allo..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (108 samples, 4.50%)</title><rect x="0.2499%" y="213" width="4.4981%" height="15" fill="rgb(216,20,37)" fg:x="6" fg:w="108"/><text x="0.4999%" y="223.50">&lt;allo..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (108 samples, 4.50%)</title><rect x="0.2499%" y="197" width="4.4981%" height="15" fill="rgb(206,188,39)" fg:x="6" fg:w="108"/><text x="0.4999%" y="207.50">&lt;allo..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (108 samples, 4.50%)</title><rect x="0.2499%" y="181" width="4.4981%" height="15" fill="rgb(217,207,13)" fg:x="6" fg:w="108"/><text x="0.4999%" y="191.50">alloc..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (108 samples, 4.50%)</title><rect x="0.2499%" y="165" width="4.4981%" height="15" fill="rgb(231,73,38)" fg:x="6" fg:w="108"/><text x="0.4999%" y="175.50">core:..</text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (108 samples, 4.50%)</title><rect x="0.2499%" y="149" width="4.4981%" height="15" fill="rgb(225,20,46)" fg:x="6" fg:w="108"/><text x="0.4999%" y="159.50">&lt;core..</text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (108 samples, 4.50%)</title><rect x="0.2499%" y="133" width="4.4981%" height="15" fill="rgb(210,31,41)" fg:x="6" fg:w="108"/><text x="0.4999%" y="143.50">&lt;core..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (108 samples, 4.50%)</title><rect x="0.2499%" y="117" width="4.4981%" height="15" fill="rgb(221,200,47)" fg:x="6" fg:w="108"/><text x="0.4999%" y="127.50">core:..</text></g><g><title>core::iter::adapters::copied::copy_fold::{{closure}} (50 samples, 2.08%)</title><rect x="2.6656%" y="101" width="2.0825%" height="15" fill="rgb(226,26,5)" fg:x="64" fg:w="50"/><text x="2.9156%" y="111.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (18 samples, 0.75%)</title><rect x="3.9983%" y="85" width="0.7497%" height="15" fill="rgb(249,33,26)" fg:x="96" fg:w="18"/><text x="4.2483%" y="95.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (4 samples, 0.17%)</title><rect x="6.3723%" y="117" width="0.1666%" height="15" fill="rgb(235,183,28)" fg:x="153" fg:w="4"/><text x="6.6223%" y="127.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (2 samples, 0.08%)</title><rect x="6.4556%" y="101" width="0.0833%" height="15" fill="rgb(221,5,38)" fg:x="155" fg:w="2"/><text x="6.7056%" y="111.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (52 samples, 2.17%)</title><rect x="4.7480%" y="133" width="2.1658%" height="15" fill="rgb(247,18,42)" fg:x="114" fg:w="52"/><text x="4.9980%" y="143.50">&lt;..</text></g><g><title>core::ptr::read (9 samples, 0.37%)</title><rect x="6.5389%" y="117" width="0.3748%" height="15" fill="rgb(241,131,45)" fg:x="157" fg:w="9"/><text x="6.7889%" y="127.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (2 samples, 0.08%)</title><rect x="6.8305%" y="101" width="0.0833%" height="15" fill="rgb(249,31,29)" fg:x="164" fg:w="2"/><text x="7.0805%" y="111.50"></text></g><g><title>alloc::vec::set_len_on_drop::SetLenOnDrop::current_len (5 samples, 0.21%)</title><rect x="7.4969%" y="101" width="0.2082%" height="15" fill="rgb(225,111,53)" fg:x="180" fg:w="5"/><text x="7.7469%" y="111.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (9 samples, 0.37%)</title><rect x="7.7051%" y="101" width="0.3748%" height="15" fill="rgb(238,160,17)" fg:x="185" fg:w="9"/><text x="7.9551%" y="111.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (9 samples, 0.37%)</title><rect x="7.7051%" y="85" width="0.3748%" height="15" fill="rgb(214,148,48)" fg:x="185" fg:w="9"/><text x="7.9551%" y="95.50"></text></g><g><title>&lt;tftp::packet::Packet as tftp::packet::ByteConverter&gt;::to_bytes (208 samples, 8.66%)</title><rect x="0.2499%" y="293" width="8.6631%" height="15" fill="rgb(232,36,49)" fg:x="6" fg:w="208"/><text x="0.4999%" y="303.50">&lt;tftp::packe..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (100 samples, 4.16%)</title><rect x="4.7480%" y="277" width="4.1649%" height="15" fill="rgb(209,103,24)" fg:x="114" fg:w="100"/><text x="4.9980%" y="287.50">core:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (100 samples, 4.16%)</title><rect x="4.7480%" y="261" width="4.1649%" height="15" fill="rgb(229,88,8)" fg:x="114" fg:w="100"/><text x="4.9980%" y="271.50">&lt;allo..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (100 samples, 4.16%)</title><rect x="4.7480%" y="245" width="4.1649%" height="15" fill="rgb(213,181,19)" fg:x="114" fg:w="100"/><text x="4.9980%" y="255.50">&lt;allo..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (100 samples, 4.16%)</title><rect x="4.7480%" y="229" width="4.1649%" height="15" fill="rgb(254,191,54)" fg:x="114" fg:w="100"/><text x="4.9980%" y="239.50">&lt;allo..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (100 samples, 4.16%)</title><rect x="4.7480%" y="213" width="4.1649%" height="15" fill="rgb(241,83,37)" fg:x="114" fg:w="100"/><text x="4.9980%" y="223.50">&lt;allo..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (100 samples, 4.16%)</title><rect x="4.7480%" y="197" width="4.1649%" height="15" fill="rgb(233,36,39)" fg:x="114" fg:w="100"/><text x="4.9980%" y="207.50">alloc..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (100 samples, 4.16%)</title><rect x="4.7480%" y="181" width="4.1649%" height="15" fill="rgb(226,3,54)" fg:x="114" fg:w="100"/><text x="4.9980%" y="191.50">core:..</text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (100 samples, 4.16%)</title><rect x="4.7480%" y="165" width="4.1649%" height="15" fill="rgb(245,192,40)" fg:x="114" fg:w="100"/><text x="4.9980%" y="175.50">&lt;core..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (100 samples, 4.16%)</title><rect x="4.7480%" y="149" width="4.1649%" height="15" fill="rgb(238,167,29)" fg:x="114" fg:w="100"/><text x="4.9980%" y="159.50">core:..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (48 samples, 2.00%)</title><rect x="6.9138%" y="133" width="1.9992%" height="15" fill="rgb(232,182,51)" fg:x="166" fg:w="48"/><text x="7.1638%" y="143.50">c..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::{{closure}} (48 samples, 2.00%)</title><rect x="6.9138%" y="117" width="1.9992%" height="15" fill="rgb(231,60,39)" fg:x="166" fg:w="48"/><text x="7.1638%" y="127.50">a..</text></g><g><title>core::ptr::write (20 samples, 0.83%)</title><rect x="8.0800%" y="101" width="0.8330%" height="15" fill="rgb(208,69,12)" fg:x="194" fg:w="20"/><text x="8.3300%" y="111.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as crypto_common::KeyIvInit&gt;::new (1 samples, 0.04%)</title><rect x="8.9130%" y="229" width="0.0416%" height="15" fill="rgb(235,93,37)" fg:x="214" fg:w="1"/><text x="9.1630%" y="239.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (1 samples, 0.04%)</title><rect x="8.9130%" y="213" width="0.0416%" height="15" fill="rgb(213,116,39)" fg:x="214" fg:w="1"/><text x="9.1630%" y="223.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.04%)</title><rect x="8.9130%" y="197" width="0.0416%" height="15" fill="rgb(222,207,29)" fg:x="214" fg:w="1"/><text x="9.1630%" y="207.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.04%)</title><rect x="8.9130%" y="181" width="0.0416%" height="15" fill="rgb(206,96,30)" fg:x="214" fg:w="1"/><text x="9.1630%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.04%)</title><rect x="8.9130%" y="165" width="0.0416%" height="15" fill="rgb(218,138,4)" fg:x="214" fg:w="1"/><text x="9.1630%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.04%)</title><rect x="8.9130%" y="149" width="0.0416%" height="15" fill="rgb(250,191,14)" fg:x="214" fg:w="1"/><text x="9.1630%" y="159.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.04%)</title><rect x="8.9130%" y="133" width="0.0416%" height="15" fill="rgb(239,60,40)" fg:x="214" fg:w="1"/><text x="9.1630%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.04%)</title><rect x="8.9130%" y="117" width="0.0416%" height="15" fill="rgb(206,27,48)" fg:x="214" fg:w="1"/><text x="9.1630%" y="127.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.04%)</title><rect x="8.9130%" y="101" width="0.0416%" height="15" fill="rgb(225,35,8)" fg:x="214" fg:w="1"/><text x="9.1630%" y="111.50"></text></g><g><title>&lt;tftp::socket::EncryptionBoundSocket&lt;S&gt; as tftp::socket::Socket&gt;::recv_from (2 samples, 0.08%)</title><rect x="8.9130%" y="293" width="0.0833%" height="15" fill="rgb(250,213,24)" fg:x="214" fg:w="2"/><text x="9.1630%" y="303.50"></text></g><g><title>tftp::encryption::Encryptor::decrypt (2 samples, 0.08%)</title><rect x="8.9130%" y="277" width="0.0833%" height="15" fill="rgb(247,123,22)" fg:x="214" fg:w="2"/><text x="9.1630%" y="287.50"></text></g><g><title>aead::AeadInPlace::decrypt_in_place (2 samples, 0.08%)</title><rect x="8.9130%" y="261" width="0.0833%" height="15" fill="rgb(231,138,38)" fg:x="214" fg:w="2"/><text x="9.1630%" y="271.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (2 samples, 0.08%)</title><rect x="8.9130%" y="245" width="0.0833%" height="15" fill="rgb(231,145,46)" fg:x="214" fg:w="2"/><text x="9.1630%" y="255.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::decrypt_in_place_detached (1 samples, 0.04%)</title><rect x="8.9546%" y="229" width="0.0416%" height="15" fill="rgb(251,118,11)" fg:x="215" fg:w="1"/><text x="9.2046%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;chacha20::xchacha::XChaChaCore&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm,typenum::bit::B1&gt;,typenum::bit::B0&gt;,typenum::bit::B1&gt;,typenum::bit::B0&gt;&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="8.9546%" y="213" width="0.0416%" height="15" fill="rgb(217,147,25)" fg:x="215" fg:w="1"/><text x="9.2046%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;chacha20::xchacha::XChaChaCore&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm,typenum::bit::B1&gt;,typenum::bit::B0&gt;,typenum::bit::B1&gt;,typenum::bit::B0&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="8.9546%" y="197" width="0.0416%" height="15" fill="rgb(247,81,37)" fg:x="215" fg:w="1"/><text x="9.2046%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;chacha20::ChaChaCore&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm,typenum::bit::B1&gt;,typenum::bit::B0&gt;,typenum::bit::B1&gt;,typenum::bit::B0&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="8.9546%" y="181" width="0.0416%" height="15" fill="rgb(209,12,38)" fg:x="215" fg:w="1"/><text x="9.2046%" y="191.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="8.9546%" y="165" width="0.0416%" height="15" fill="rgb(227,1,9)" fg:x="215" fg:w="1"/><text x="9.2046%" y="175.50"></text></g><g><title>&lt;[Z: N] as zeroize::Zeroize&gt;::zeroize (1 samples, 0.04%)</title><rect x="8.9546%" y="149" width="0.0416%" height="15" fill="rgb(248,47,43)" fg:x="215" fg:w="1"/><text x="9.2046%" y="159.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;Z&gt; as zeroize::Zeroize&gt;::zeroize (1 samples, 0.04%)</title><rect x="8.9546%" y="133" width="0.0416%" height="15" fill="rgb(221,10,30)" fg:x="215" fg:w="1"/><text x="9.2046%" y="143.50"></text></g><g><title>&lt;Z as zeroize::Zeroize&gt;::zeroize (1 samples, 0.04%)</title><rect x="8.9546%" y="117" width="0.0416%" height="15" fill="rgb(210,229,1)" fg:x="215" fg:w="1"/><text x="9.2046%" y="127.50"></text></g><g><title>zeroize::atomic_fence (1 samples, 0.04%)</title><rect x="8.9546%" y="101" width="0.0416%" height="15" fill="rgb(222,148,37)" fg:x="215" fg:w="1"/><text x="9.2046%" y="111.50"></text></g><g><title>core::sync::atomic::compiler_fence (1 samples, 0.04%)</title><rect x="8.9546%" y="85" width="0.0416%" height="15" fill="rgb(234,67,33)" fg:x="215" fg:w="1"/><text x="9.2046%" y="95.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as aead::Buffer&gt;::extend_from_slice (1 samples, 0.04%)</title><rect x="8.9963%" y="245" width="0.0416%" height="15" fill="rgb(247,98,35)" fg:x="216" fg:w="1"/><text x="9.2463%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.04%)</title><rect x="8.9963%" y="229" width="0.0416%" height="15" fill="rgb(247,138,52)" fg:x="216" fg:w="1"/><text x="9.2463%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.04%)</title><rect x="8.9963%" y="213" width="0.0416%" height="15" fill="rgb(213,79,30)" fg:x="216" fg:w="1"/><text x="9.2463%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.04%)</title><rect x="8.9963%" y="197" width="0.0416%" height="15" fill="rgb(246,177,23)" fg:x="216" fg:w="1"/><text x="9.2463%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="8.9963%" y="181" width="0.0416%" height="15" fill="rgb(230,62,27)" fg:x="216" fg:w="1"/><text x="9.2463%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="8.9963%" y="165" width="0.0416%" height="15" fill="rgb(216,154,8)" fg:x="216" fg:w="1"/><text x="9.2463%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.04%)</title><rect x="8.9963%" y="149" width="0.0416%" height="15" fill="rgb(244,35,45)" fg:x="216" fg:w="1"/><text x="9.2463%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.04%)</title><rect x="8.9963%" y="133" width="0.0416%" height="15" fill="rgb(251,115,12)" fg:x="216" fg:w="1"/><text x="9.2463%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.04%)</title><rect x="8.9963%" y="117" width="0.0416%" height="15" fill="rgb(240,54,50)" fg:x="216" fg:w="1"/><text x="9.2463%" y="127.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.04%)</title><rect x="8.9963%" y="101" width="0.0416%" height="15" fill="rgb(233,84,52)" fg:x="216" fg:w="1"/><text x="9.2463%" y="111.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (1 samples, 0.04%)</title><rect x="9.0379%" y="213" width="0.0416%" height="15" fill="rgb(207,117,47)" fg:x="217" fg:w="1"/><text x="9.2879%" y="223.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.04%)</title><rect x="9.0379%" y="197" width="0.0416%" height="15" fill="rgb(249,43,39)" fg:x="217" fg:w="1"/><text x="9.2879%" y="207.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.04%)</title><rect x="9.0379%" y="181" width="0.0416%" height="15" fill="rgb(209,38,44)" fg:x="217" fg:w="1"/><text x="9.2879%" y="191.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (1 samples, 0.04%)</title><rect x="9.0379%" y="165" width="0.0416%" height="15" fill="rgb(236,212,23)" fg:x="217" fg:w="1"/><text x="9.2879%" y="175.50"></text></g><g><title>core::ptr::read (1 samples, 0.04%)</title><rect x="9.0379%" y="149" width="0.0416%" height="15" fill="rgb(242,79,21)" fg:x="217" fg:w="1"/><text x="9.2879%" y="159.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.08%)</title><rect x="9.0796%" y="181" width="0.0833%" height="15" fill="rgb(211,96,35)" fg:x="218" fg:w="2"/><text x="9.3296%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.08%)</title><rect x="9.0796%" y="165" width="0.0833%" height="15" fill="rgb(253,215,40)" fg:x="218" fg:w="2"/><text x="9.3296%" y="175.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.08%)</title><rect x="9.0796%" y="149" width="0.0833%" height="15" fill="rgb(211,81,21)" fg:x="218" fg:w="2"/><text x="9.3296%" y="159.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (1 samples, 0.04%)</title><rect x="9.1628%" y="165" width="0.0416%" height="15" fill="rgb(208,190,38)" fg:x="220" fg:w="1"/><text x="9.4128%" y="175.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (1 samples, 0.04%)</title><rect x="9.1628%" y="149" width="0.0416%" height="15" fill="rgb(235,213,38)" fg:x="220" fg:w="1"/><text x="9.4128%" y="159.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="9.1628%" y="133" width="0.0416%" height="15" fill="rgb(237,122,38)" fg:x="220" fg:w="1"/><text x="9.4128%" y="143.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as crypto_common::KeyIvInit&gt;::new (5 samples, 0.21%)</title><rect x="9.0379%" y="229" width="0.2082%" height="15" fill="rgb(244,218,35)" fg:x="217" fg:w="5"/><text x="9.2879%" y="239.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (4 samples, 0.17%)</title><rect x="9.0796%" y="213" width="0.1666%" height="15" fill="rgb(240,68,47)" fg:x="218" fg:w="4"/><text x="9.3296%" y="223.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (4 samples, 0.17%)</title><rect x="9.0796%" y="197" width="0.1666%" height="15" fill="rgb(210,16,53)" fg:x="218" fg:w="4"/><text x="9.3296%" y="207.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (2 samples, 0.08%)</title><rect x="9.1628%" y="181" width="0.0833%" height="15" fill="rgb(235,124,12)" fg:x="220" fg:w="2"/><text x="9.4128%" y="191.50"></text></g><g><title>core::ptr::read (1 samples, 0.04%)</title><rect x="9.2045%" y="165" width="0.0416%" height="15" fill="rgb(224,169,11)" fg:x="221" fg:w="1"/><text x="9.4545%" y="175.50"></text></g><g><title>&lt;tftp::socket::EncryptionBoundSocket&lt;S&gt; as tftp::socket::Socket&gt;::send_to (7 samples, 0.29%)</title><rect x="8.9963%" y="293" width="0.2915%" height="15" fill="rgb(250,166,2)" fg:x="216" fg:w="7"/><text x="9.2463%" y="303.50"></text></g><g><title>tftp::encryption::Encryptor::encrypt (7 samples, 0.29%)</title><rect x="8.9963%" y="277" width="0.2915%" height="15" fill="rgb(242,216,29)" fg:x="216" fg:w="7"/><text x="9.2463%" y="287.50"></text></g><g><title>aead::AeadInPlace::encrypt_in_place (7 samples, 0.29%)</title><rect x="8.9963%" y="261" width="0.2915%" height="15" fill="rgb(230,116,27)" fg:x="216" fg:w="7"/><text x="9.2463%" y="271.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::encrypt_in_place_detached (6 samples, 0.25%)</title><rect x="9.0379%" y="245" width="0.2499%" height="15" fill="rgb(228,99,48)" fg:x="217" fg:w="6"/><text x="9.2879%" y="255.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::encrypt_in_place_detached (1 samples, 0.04%)</title><rect x="9.2461%" y="229" width="0.0416%" height="15" fill="rgb(253,11,6)" fg:x="222" fg:w="1"/><text x="9.4961%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="9.2878%" y="277" width="0.0416%" height="15" fill="rgb(247,143,39)" fg:x="223" fg:w="1"/><text x="9.5378%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.04%)</title><rect x="9.2878%" y="261" width="0.0416%" height="15" fill="rgb(236,97,10)" fg:x="223" fg:w="1"/><text x="9.5378%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.04%)</title><rect x="9.2878%" y="245" width="0.0416%" height="15" fill="rgb(233,208,19)" fg:x="223" fg:w="1"/><text x="9.5378%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.04%)</title><rect x="9.2878%" y="229" width="0.0416%" height="15" fill="rgb(216,164,2)" fg:x="223" fg:w="1"/><text x="9.5378%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="9.2878%" y="213" width="0.0416%" height="15" fill="rgb(220,129,5)" fg:x="223" fg:w="1"/><text x="9.5378%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="9.2878%" y="197" width="0.0416%" height="15" fill="rgb(242,17,10)" fg:x="223" fg:w="1"/><text x="9.5378%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.04%)</title><rect x="9.2878%" y="181" width="0.0416%" height="15" fill="rgb(242,107,0)" fg:x="223" fg:w="1"/><text x="9.5378%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="9.2878%" y="165" width="0.0416%" height="15" fill="rgb(251,28,31)" fg:x="223" fg:w="1"/><text x="9.5378%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="9.2878%" y="149" width="0.0416%" height="15" fill="rgb(233,223,10)" fg:x="223" fg:w="1"/><text x="9.5378%" y="159.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="9.2878%" y="133" width="0.0416%" height="15" fill="rgb(215,21,27)" fg:x="223" fg:w="1"/><text x="9.5378%" y="143.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="9.2878%" y="117" width="0.0416%" height="15" fill="rgb(232,23,21)" fg:x="223" fg:w="1"/><text x="9.5378%" y="127.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="9.2878%" y="101" width="0.0416%" height="15" fill="rgb(244,5,23)" fg:x="223" fg:w="1"/><text x="9.5378%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (1 samples, 0.04%)</title><rect x="9.3294%" y="165" width="0.0416%" height="15" fill="rgb(226,81,46)" fg:x="224" fg:w="1"/><text x="9.5794%" y="175.50"></text></g><g><title>core::cmp::max (1 samples, 0.04%)</title><rect x="9.3711%" y="165" width="0.0416%" height="15" fill="rgb(247,70,30)" fg:x="225" fg:w="1"/><text x="9.6211%" y="175.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.04%)</title><rect x="9.3711%" y="149" width="0.0416%" height="15" fill="rgb(212,68,19)" fg:x="225" fg:w="1"/><text x="9.6211%" y="159.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.04%)</title><rect x="9.3711%" y="133" width="0.0416%" height="15" fill="rgb(240,187,13)" fg:x="225" fg:w="1"/><text x="9.6211%" y="143.50"></text></g><g><title>[libc.so.6] (221 samples, 9.20%)</title><rect x="0.2499%" y="581" width="9.2045%" height="15" fill="rgb(223,113,26)" fg:x="6" fg:w="221"/><text x="0.4999%" y="591.50">[libc.so.6]</text></g><g><title>main (221 samples, 9.20%)</title><rect x="0.2499%" y="565" width="9.2045%" height="15" fill="rgb(206,192,2)" fg:x="6" fg:w="221"/><text x="0.4999%" y="575.50">main</text></g><g><title>std::rt::lang_start (221 samples, 9.20%)</title><rect x="0.2499%" y="549" width="9.2045%" height="15" fill="rgb(241,108,4)" fg:x="6" fg:w="221"/><text x="0.4999%" y="559.50">std::rt::lang..</text></g><g><title>std::rt::lang_start_internal (221 samples, 9.20%)</title><rect x="0.2499%" y="533" width="9.2045%" height="15" fill="rgb(247,173,49)" fg:x="6" fg:w="221"/><text x="0.4999%" y="543.50">std::rt::lang..</text></g><g><title>std::panic::catch_unwind (221 samples, 9.20%)</title><rect x="0.2499%" y="517" width="9.2045%" height="15" fill="rgb(224,114,35)" fg:x="6" fg:w="221"/><text x="0.4999%" y="527.50">std::panic::c..</text></g><g><title>std::panicking::try (221 samples, 9.20%)</title><rect x="0.2499%" y="501" width="9.2045%" height="15" fill="rgb(245,159,27)" fg:x="6" fg:w="221"/><text x="0.4999%" y="511.50">std::panickin..</text></g><g><title>std::panicking::try::do_call (221 samples, 9.20%)</title><rect x="0.2499%" y="485" width="9.2045%" height="15" fill="rgb(245,172,44)" fg:x="6" fg:w="221"/><text x="0.4999%" y="495.50">std::panickin..</text></g><g><title>std::rt::lang_start_internal::{{closure}} (221 samples, 9.20%)</title><rect x="0.2499%" y="469" width="9.2045%" height="15" fill="rgb(236,23,11)" fg:x="6" fg:w="221"/><text x="0.4999%" y="479.50">std::rt::lang..</text></g><g><title>std::panic::catch_unwind (221 samples, 9.20%)</title><rect x="0.2499%" y="453" width="9.2045%" height="15" fill="rgb(205,117,38)" fg:x="6" fg:w="221"/><text x="0.4999%" y="463.50">std::panic::c..</text></g><g><title>std::panicking::try (221 samples, 9.20%)</title><rect x="0.2499%" y="437" width="9.2045%" height="15" fill="rgb(237,72,25)" fg:x="6" fg:w="221"/><text x="0.4999%" y="447.50">std::panickin..</text></g><g><title>std::panicking::try::do_call (221 samples, 9.20%)</title><rect x="0.2499%" y="421" width="9.2045%" height="15" fill="rgb(244,70,9)" fg:x="6" fg:w="221"/><text x="0.4999%" y="431.50">std::panickin..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (221 samples, 9.20%)</title><rect x="0.2499%" y="405" width="9.2045%" height="15" fill="rgb(217,125,39)" fg:x="6" fg:w="221"/><text x="0.4999%" y="415.50">core::ops::fu..</text></g><g><title>std::rt::lang_start::{{closure}} (221 samples, 9.20%)</title><rect x="0.2499%" y="389" width="9.2045%" height="15" fill="rgb(235,36,10)" fg:x="6" fg:w="221"/><text x="0.4999%" y="399.50">std::rt::lang..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (221 samples, 9.20%)</title><rect x="0.2499%" y="373" width="9.2045%" height="15" fill="rgb(251,123,47)" fg:x="6" fg:w="221"/><text x="0.4999%" y="383.50">std::sys_comm..</text></g><g><title>core::ops::function::FnOnce::call_once (221 samples, 9.20%)</title><rect x="0.2499%" y="357" width="9.2045%" height="15" fill="rgb(221,13,13)" fg:x="6" fg:w="221"/><text x="0.4999%" y="367.50">core::ops::fu..</text></g><g><title>tftp::main (221 samples, 9.20%)</title><rect x="0.2499%" y="341" width="9.2045%" height="15" fill="rgb(238,131,9)" fg:x="6" fg:w="221"/><text x="0.4999%" y="351.50">tftp::main</text></g><g><title>tftp::start_send (221 samples, 9.20%)</title><rect x="0.2499%" y="325" width="9.2045%" height="15" fill="rgb(211,50,8)" fg:x="6" fg:w="221"/><text x="0.4999%" y="335.50">tftp::start_s..</text></g><g><title>tftp::client::client::send_file (221 samples, 9.20%)</title><rect x="0.2499%" y="309" width="9.2045%" height="15" fill="rgb(245,182,24)" fg:x="6" fg:w="221"/><text x="0.4999%" y="319.50">tftp::client:..</text></g><g><title>&lt;tftp::storage::FileReader&lt;T&gt; as tftp::storage::BlockReader&gt;::next (4 samples, 0.17%)</title><rect x="9.2878%" y="293" width="0.1666%" height="15" fill="rgb(242,14,37)" fg:x="223" fg:w="4"/><text x="9.5378%" y="303.50"></text></g><g><title>tftp::storage::FileReader&lt;T&gt;::read_block (3 samples, 0.12%)</title><rect x="9.3294%" y="277" width="0.1249%" height="15" fill="rgb(246,228,12)" fg:x="224" fg:w="3"/><text x="9.5794%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (3 samples, 0.12%)</title><rect x="9.3294%" y="261" width="0.1249%" height="15" fill="rgb(213,55,15)" fg:x="224" fg:w="3"/><text x="9.5794%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (3 samples, 0.12%)</title><rect x="9.3294%" y="245" width="0.1249%" height="15" fill="rgb(209,9,3)" fg:x="224" fg:w="3"/><text x="9.5794%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.12%)</title><rect x="9.3294%" y="229" width="0.1249%" height="15" fill="rgb(230,59,30)" fg:x="224" fg:w="3"/><text x="9.5794%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.12%)</title><rect x="9.3294%" y="213" width="0.1249%" height="15" fill="rgb(209,121,21)" fg:x="224" fg:w="3"/><text x="9.5794%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.12%)</title><rect x="9.3294%" y="197" width="0.1249%" height="15" fill="rgb(220,109,13)" fg:x="224" fg:w="3"/><text x="9.5794%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.12%)</title><rect x="9.3294%" y="181" width="0.1249%" height="15" fill="rgb(232,18,1)" fg:x="224" fg:w="3"/><text x="9.5794%" y="191.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (1 samples, 0.04%)</title><rect x="9.4127%" y="165" width="0.0416%" height="15" fill="rgb(215,41,42)" fg:x="226" fg:w="1"/><text x="9.6627%" y="175.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.08%)</title><rect x="9.4544%" y="165" width="0.0833%" height="15" fill="rgb(224,123,36)" fg:x="227" fg:w="2"/><text x="9.7044%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.08%)</title><rect x="9.4544%" y="149" width="0.0833%" height="15" fill="rgb(240,125,3)" fg:x="227" fg:w="2"/><text x="9.7044%" y="159.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.08%)</title><rect x="9.4544%" y="133" width="0.0833%" height="15" fill="rgb(205,98,50)" fg:x="227" fg:w="2"/><text x="9.7044%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (2 samples, 0.08%)</title><rect x="9.4544%" y="117" width="0.0833%" height="15" fill="rgb(205,185,37)" fg:x="227" fg:w="2"/><text x="9.7044%" y="127.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.08%)</title><rect x="9.4544%" y="101" width="0.0833%" height="15" fill="rgb(238,207,15)" fg:x="227" fg:w="2"/><text x="9.7044%" y="111.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (2 samples, 0.08%)</title><rect x="9.4544%" y="85" width="0.0833%" height="15" fill="rgb(213,199,42)" fg:x="227" fg:w="2"/><text x="9.7044%" y="95.50"></text></g><g><title>&lt;tftp::socket::EncryptionBoundSocket&lt;S&gt; as tftp::socket::Socket&gt;::recv_from (3 samples, 0.12%)</title><rect x="9.4544%" y="277" width="0.1249%" height="15" fill="rgb(235,201,11)" fg:x="227" fg:w="3"/><text x="9.7044%" y="287.50"></text></g><g><title>tftp::encryption::Encryptor::decrypt (3 samples, 0.12%)</title><rect x="9.4544%" y="261" width="0.1249%" height="15" fill="rgb(207,46,11)" fg:x="227" fg:w="3"/><text x="9.7044%" y="271.50"></text></g><g><title>aead::AeadInPlace::decrypt_in_place (3 samples, 0.12%)</title><rect x="9.4544%" y="245" width="0.1249%" height="15" fill="rgb(241,35,35)" fg:x="227" fg:w="3"/><text x="9.7044%" y="255.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (3 samples, 0.12%)</title><rect x="9.4544%" y="229" width="0.1249%" height="15" fill="rgb(243,32,47)" fg:x="227" fg:w="3"/><text x="9.7044%" y="239.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as crypto_common::KeyIvInit&gt;::new (3 samples, 0.12%)</title><rect x="9.4544%" y="213" width="0.1249%" height="15" fill="rgb(247,202,23)" fg:x="227" fg:w="3"/><text x="9.7044%" y="223.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (3 samples, 0.12%)</title><rect x="9.4544%" y="197" width="0.1249%" height="15" fill="rgb(219,102,11)" fg:x="227" fg:w="3"/><text x="9.7044%" y="207.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (3 samples, 0.12%)</title><rect x="9.4544%" y="181" width="0.1249%" height="15" fill="rgb(243,110,44)" fg:x="227" fg:w="3"/><text x="9.7044%" y="191.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (1 samples, 0.04%)</title><rect x="9.5377%" y="165" width="0.0416%" height="15" fill="rgb(222,74,54)" fg:x="229" fg:w="1"/><text x="9.7877%" y="175.50"></text></g><g><title>core::ptr::read (1 samples, 0.04%)</title><rect x="9.5377%" y="149" width="0.0416%" height="15" fill="rgb(216,99,12)" fg:x="229" fg:w="1"/><text x="9.7877%" y="159.50"></text></g><g><title>__libc_start_main (4 samples, 0.17%)</title><rect x="9.4544%" y="581" width="0.1666%" height="15" fill="rgb(226,22,26)" fg:x="227" fg:w="4"/><text x="9.7044%" y="591.50"></text></g><g><title>[libc.so.6] (4 samples, 0.17%)</title><rect x="9.4544%" y="565" width="0.1666%" height="15" fill="rgb(217,163,10)" fg:x="227" fg:w="4"/><text x="9.7044%" y="575.50"></text></g><g><title>main (4 samples, 0.17%)</title><rect x="9.4544%" y="549" width="0.1666%" height="15" fill="rgb(213,25,53)" fg:x="227" fg:w="4"/><text x="9.7044%" y="559.50"></text></g><g><title>std::rt::lang_start (4 samples, 0.17%)</title><rect x="9.4544%" y="533" width="0.1666%" height="15" fill="rgb(252,105,26)" fg:x="227" fg:w="4"/><text x="9.7044%" y="543.50"></text></g><g><title>std::rt::lang_start_internal (4 samples, 0.17%)</title><rect x="9.4544%" y="517" width="0.1666%" height="15" fill="rgb(220,39,43)" fg:x="227" fg:w="4"/><text x="9.7044%" y="527.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.17%)</title><rect x="9.4544%" y="501" width="0.1666%" height="15" fill="rgb(229,68,48)" fg:x="227" fg:w="4"/><text x="9.7044%" y="511.50"></text></g><g><title>std::panicking::try (4 samples, 0.17%)</title><rect x="9.4544%" y="485" width="0.1666%" height="15" fill="rgb(252,8,32)" fg:x="227" fg:w="4"/><text x="9.7044%" y="495.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.17%)</title><rect x="9.4544%" y="469" width="0.1666%" height="15" fill="rgb(223,20,43)" fg:x="227" fg:w="4"/><text x="9.7044%" y="479.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (4 samples, 0.17%)</title><rect x="9.4544%" y="453" width="0.1666%" height="15" fill="rgb(229,81,49)" fg:x="227" fg:w="4"/><text x="9.7044%" y="463.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.17%)</title><rect x="9.4544%" y="437" width="0.1666%" height="15" fill="rgb(236,28,36)" fg:x="227" fg:w="4"/><text x="9.7044%" y="447.50"></text></g><g><title>std::panicking::try (4 samples, 0.17%)</title><rect x="9.4544%" y="421" width="0.1666%" height="15" fill="rgb(249,185,26)" fg:x="227" fg:w="4"/><text x="9.7044%" y="431.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.17%)</title><rect x="9.4544%" y="405" width="0.1666%" height="15" fill="rgb(249,174,33)" fg:x="227" fg:w="4"/><text x="9.7044%" y="415.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (4 samples, 0.17%)</title><rect x="9.4544%" y="389" width="0.1666%" height="15" fill="rgb(233,201,37)" fg:x="227" fg:w="4"/><text x="9.7044%" y="399.50"></text></g><g><title>std::rt::lang_start::{{closure}} (4 samples, 0.17%)</title><rect x="9.4544%" y="373" width="0.1666%" height="15" fill="rgb(221,78,26)" fg:x="227" fg:w="4"/><text x="9.7044%" y="383.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (4 samples, 0.17%)</title><rect x="9.4544%" y="357" width="0.1666%" height="15" fill="rgb(250,127,30)" fg:x="227" fg:w="4"/><text x="9.7044%" y="367.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4 samples, 0.17%)</title><rect x="9.4544%" y="341" width="0.1666%" height="15" fill="rgb(230,49,44)" fg:x="227" fg:w="4"/><text x="9.7044%" y="351.50"></text></g><g><title>tftp::main (4 samples, 0.17%)</title><rect x="9.4544%" y="325" width="0.1666%" height="15" fill="rgb(229,67,23)" fg:x="227" fg:w="4"/><text x="9.7044%" y="335.50"></text></g><g><title>tftp::start_send (4 samples, 0.17%)</title><rect x="9.4544%" y="309" width="0.1666%" height="15" fill="rgb(249,83,47)" fg:x="227" fg:w="4"/><text x="9.7044%" y="319.50"></text></g><g><title>tftp::client::client::send_file (4 samples, 0.17%)</title><rect x="9.4544%" y="293" width="0.1666%" height="15" fill="rgb(215,43,3)" fg:x="227" fg:w="4"/><text x="9.7044%" y="303.50"></text></g><g><title>&lt;tftp::socket::EncryptionBoundSocket&lt;S&gt; as tftp::socket::Socket&gt;::send_to (1 samples, 0.04%)</title><rect x="9.5793%" y="277" width="0.0416%" height="15" fill="rgb(238,154,13)" fg:x="230" fg:w="1"/><text x="9.8293%" y="287.50"></text></g><g><title>tftp::encryption::Encryptor::encrypt (1 samples, 0.04%)</title><rect x="9.5793%" y="261" width="0.0416%" height="15" fill="rgb(219,56,2)" fg:x="230" fg:w="1"/><text x="9.8293%" y="271.50"></text></g><g><title>aead::AeadInPlace::encrypt_in_place (1 samples, 0.04%)</title><rect x="9.5793%" y="245" width="0.0416%" height="15" fill="rgb(233,0,4)" fg:x="230" fg:w="1"/><text x="9.8293%" y="255.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::encrypt_in_place_detached (1 samples, 0.04%)</title><rect x="9.5793%" y="229" width="0.0416%" height="15" fill="rgb(235,30,7)" fg:x="230" fg:w="1"/><text x="9.8293%" y="239.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as crypto_common::KeyIvInit&gt;::new (1 samples, 0.04%)</title><rect x="9.5793%" y="213" width="0.0416%" height="15" fill="rgb(250,79,13)" fg:x="230" fg:w="1"/><text x="9.8293%" y="223.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (1 samples, 0.04%)</title><rect x="9.5793%" y="197" width="0.0416%" height="15" fill="rgb(211,146,34)" fg:x="230" fg:w="1"/><text x="9.8293%" y="207.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.04%)</title><rect x="9.5793%" y="181" width="0.0416%" height="15" fill="rgb(228,22,38)" fg:x="230" fg:w="1"/><text x="9.8293%" y="191.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.04%)</title><rect x="9.5793%" y="165" width="0.0416%" height="15" fill="rgb(235,168,5)" fg:x="230" fg:w="1"/><text x="9.8293%" y="175.50"></text></g><g><title>clap::derive::Parser::parse (1 samples, 0.04%)</title><rect x="9.6210%" y="581" width="0.0416%" height="15" fill="rgb(221,155,16)" fg:x="231" fg:w="1"/><text x="9.8710%" y="591.50"></text></g><g><title>clap::builder::command::Command::get_matches (1 samples, 0.04%)</title><rect x="9.6210%" y="565" width="0.0416%" height="15" fill="rgb(215,215,53)" fg:x="231" fg:w="1"/><text x="9.8710%" y="575.50"></text></g><g><title>clap::builder::command::Command::get_matches_from (1 samples, 0.04%)</title><rect x="9.6210%" y="549" width="0.0416%" height="15" fill="rgb(223,4,10)" fg:x="231" fg:w="1"/><text x="9.8710%" y="559.50"></text></g><g><title>clap::builder::command::Command::try_get_matches_from_mut (1 samples, 0.04%)</title><rect x="9.6210%" y="533" width="0.0416%" height="15" fill="rgb(234,103,6)" fg:x="231" fg:w="1"/><text x="9.8710%" y="543.50"></text></g><g><title>clap::builder::command::Command::_do_parse (1 samples, 0.04%)</title><rect x="9.6210%" y="517" width="0.0416%" height="15" fill="rgb(227,97,0)" fg:x="231" fg:w="1"/><text x="9.8710%" y="527.50"></text></g><g><title>clap::builder::command::Command::_build_self (1 samples, 0.04%)</title><rect x="9.6210%" y="501" width="0.0416%" height="15" fill="rgb(234,150,53)" fg:x="231" fg:w="1"/><text x="9.8710%" y="511.50"></text></g><g><title>clap::builder::debug_asserts::assert_app (1 samples, 0.04%)</title><rect x="9.6210%" y="485" width="0.0416%" height="15" fill="rgb(228,201,54)" fg:x="231" fg:w="1"/><text x="9.8710%" y="495.50"></text></g><g><title>clap::builder::debug_asserts::_verify_positionals (1 samples, 0.04%)</title><rect x="9.6210%" y="469" width="0.0416%" height="15" fill="rgb(222,22,37)" fg:x="231" fg:w="1"/><text x="9.8710%" y="479.50"></text></g><g><title>clap::builder::arg::Arg::is_trailing_var_arg_set (1 samples, 0.04%)</title><rect x="9.6210%" y="453" width="0.0416%" height="15" fill="rgb(237,53,32)" fg:x="231" fg:w="1"/><text x="9.8710%" y="463.50"></text></g><g><title>clap::builder::arg::Arg::is_set (1 samples, 0.04%)</title><rect x="9.6210%" y="437" width="0.0416%" height="15" fill="rgb(233,25,53)" fg:x="231" fg:w="1"/><text x="9.8710%" y="447.50"></text></g><g><title>alloc::vec::set_len_on_drop::SetLenOnDrop::current_len (5 samples, 0.21%)</title><rect x="10.2874%" y="85" width="0.2082%" height="15" fill="rgb(210,40,34)" fg:x="247" fg:w="5"/><text x="10.5374%" y="95.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (11 samples, 0.46%)</title><rect x="10.4956%" y="85" width="0.4581%" height="15" fill="rgb(241,220,44)" fg:x="252" fg:w="11"/><text x="10.7456%" y="95.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (10 samples, 0.42%)</title><rect x="10.5373%" y="69" width="0.4165%" height="15" fill="rgb(235,28,35)" fg:x="253" fg:w="10"/><text x="10.7873%" y="79.50"></text></g><g><title>&lt;tftp::packet::Packet as tftp::packet::ByteConverter&gt;::to_bytes (53 samples, 2.21%)</title><rect x="9.6626%" y="325" width="2.2074%" height="15" fill="rgb(210,56,17)" fg:x="232" fg:w="53"/><text x="9.9126%" y="335.50">&lt;..</text></g><g><title>&lt;tftp::packet::DataPacket as tftp::packet::ByteConverter&gt;::to_bytes (53 samples, 2.21%)</title><rect x="9.6626%" y="309" width="2.2074%" height="15" fill="rgb(224,130,29)" fg:x="232" fg:w="53"/><text x="9.9126%" y="319.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (53 samples, 2.21%)</title><rect x="9.6626%" y="293" width="2.2074%" height="15" fill="rgb(235,212,8)" fg:x="232" fg:w="53"/><text x="9.9126%" y="303.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (53 samples, 2.21%)</title><rect x="9.6626%" y="277" width="2.2074%" height="15" fill="rgb(223,33,50)" fg:x="232" fg:w="53"/><text x="9.9126%" y="287.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (53 samples, 2.21%)</title><rect x="9.6626%" y="261" width="2.2074%" height="15" fill="rgb(219,149,13)" fg:x="232" fg:w="53"/><text x="9.9126%" y="271.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (53 samples, 2.21%)</title><rect x="9.6626%" y="245" width="2.2074%" height="15" fill="rgb(250,156,29)" fg:x="232" fg:w="53"/><text x="9.9126%" y="255.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (53 samples, 2.21%)</title><rect x="9.6626%" y="229" width="2.2074%" height="15" fill="rgb(216,193,19)" fg:x="232" fg:w="53"/><text x="9.9126%" y="239.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (53 samples, 2.21%)</title><rect x="9.6626%" y="213" width="2.2074%" height="15" fill="rgb(216,135,14)" fg:x="232" fg:w="53"/><text x="9.9126%" y="223.50">a..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (53 samples, 2.21%)</title><rect x="9.6626%" y="197" width="2.2074%" height="15" fill="rgb(241,47,5)" fg:x="232" fg:w="53"/><text x="9.9126%" y="207.50">c..</text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (53 samples, 2.21%)</title><rect x="9.6626%" y="181" width="2.2074%" height="15" fill="rgb(233,42,35)" fg:x="232" fg:w="53"/><text x="9.9126%" y="191.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (53 samples, 2.21%)</title><rect x="9.6626%" y="165" width="2.2074%" height="15" fill="rgb(231,13,6)" fg:x="232" fg:w="53"/><text x="9.9126%" y="175.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (53 samples, 2.21%)</title><rect x="9.6626%" y="149" width="2.2074%" height="15" fill="rgb(207,181,40)" fg:x="232" fg:w="53"/><text x="9.9126%" y="159.50">c..</text></g><g><title>core::iter::adapters::copied::copy_fold::{{closure}} (53 samples, 2.21%)</title><rect x="9.6626%" y="133" width="2.2074%" height="15" fill="rgb(254,173,49)" fg:x="232" fg:w="53"/><text x="9.9126%" y="143.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (53 samples, 2.21%)</title><rect x="9.6626%" y="117" width="2.2074%" height="15" fill="rgb(221,1,38)" fg:x="232" fg:w="53"/><text x="9.9126%" y="127.50">c..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::{{closure}} (53 samples, 2.21%)</title><rect x="9.6626%" y="101" width="2.2074%" height="15" fill="rgb(206,124,46)" fg:x="232" fg:w="53"/><text x="9.9126%" y="111.50">a..</text></g><g><title>core::ptr::write (22 samples, 0.92%)</title><rect x="10.9538%" y="85" width="0.9163%" height="15" fill="rgb(249,21,11)" fg:x="263" fg:w="22"/><text x="11.2038%" y="95.50"></text></g><g><title>&lt;tftp::socket::EncryptionBoundSocket&lt;S&gt; as tftp::socket::Socket&gt;::send_to (2 samples, 0.08%)</title><rect x="11.8701%" y="325" width="0.0833%" height="15" fill="rgb(222,201,40)" fg:x="285" fg:w="2"/><text x="12.1201%" y="335.50"></text></g><g><title>tftp::encryption::Encryptor::encrypt (2 samples, 0.08%)</title><rect x="11.8701%" y="309" width="0.0833%" height="15" fill="rgb(235,61,29)" fg:x="285" fg:w="2"/><text x="12.1201%" y="319.50"></text></g><g><title>aead::AeadInPlace::encrypt_in_place (2 samples, 0.08%)</title><rect x="11.8701%" y="293" width="0.0833%" height="15" fill="rgb(219,207,3)" fg:x="285" fg:w="2"/><text x="12.1201%" y="303.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::encrypt_in_place_detached (2 samples, 0.08%)</title><rect x="11.8701%" y="277" width="0.0833%" height="15" fill="rgb(222,56,46)" fg:x="285" fg:w="2"/><text x="12.1201%" y="287.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as crypto_common::KeyIvInit&gt;::new (2 samples, 0.08%)</title><rect x="11.8701%" y="261" width="0.0833%" height="15" fill="rgb(239,76,54)" fg:x="285" fg:w="2"/><text x="12.1201%" y="271.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (2 samples, 0.08%)</title><rect x="11.8701%" y="245" width="0.0833%" height="15" fill="rgb(231,124,27)" fg:x="285" fg:w="2"/><text x="12.1201%" y="255.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (2 samples, 0.08%)</title><rect x="11.8701%" y="229" width="0.0833%" height="15" fill="rgb(249,195,6)" fg:x="285" fg:w="2"/><text x="12.1201%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.08%)</title><rect x="11.8701%" y="213" width="0.0833%" height="15" fill="rgb(237,174,47)" fg:x="285" fg:w="2"/><text x="12.1201%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.08%)</title><rect x="11.8701%" y="197" width="0.0833%" height="15" fill="rgb(206,201,31)" fg:x="285" fg:w="2"/><text x="12.1201%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.08%)</title><rect x="11.8701%" y="181" width="0.0833%" height="15" fill="rgb(231,57,52)" fg:x="285" fg:w="2"/><text x="12.1201%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (2 samples, 0.08%)</title><rect x="11.8701%" y="165" width="0.0833%" height="15" fill="rgb(248,177,22)" fg:x="285" fg:w="2"/><text x="12.1201%" y="175.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.04%)</title><rect x="11.9534%" y="309" width="0.0416%" height="15" fill="rgb(215,211,37)" fg:x="287" fg:w="1"/><text x="12.2034%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (1 samples, 0.04%)</title><rect x="11.9534%" y="293" width="0.0416%" height="15" fill="rgb(241,128,51)" fg:x="287" fg:w="1"/><text x="12.2034%" y="303.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1 samples, 0.04%)</title><rect x="11.9534%" y="277" width="0.0416%" height="15" fill="rgb(227,165,31)" fg:x="287" fg:w="1"/><text x="12.2034%" y="287.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1 samples, 0.04%)</title><rect x="11.9534%" y="261" width="0.0416%" height="15" fill="rgb(228,167,24)" fg:x="287" fg:w="1"/><text x="12.2034%" y="271.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1 samples, 0.04%)</title><rect x="11.9534%" y="245" width="0.0416%" height="15" fill="rgb(228,143,12)" fg:x="287" fg:w="1"/><text x="12.2034%" y="255.50"></text></g><g><title>std::rt::lang_start (57 samples, 2.37%)</title><rect x="9.6626%" y="581" width="2.3740%" height="15" fill="rgb(249,149,8)" fg:x="232" fg:w="57"/><text x="9.9126%" y="591.50">st..</text></g><g><title>std::rt::lang_start_internal (57 samples, 2.37%)</title><rect x="9.6626%" y="565" width="2.3740%" height="15" fill="rgb(243,35,44)" fg:x="232" fg:w="57"/><text x="9.9126%" y="575.50">st..</text></g><g><title>std::panic::catch_unwind (57 samples, 2.37%)</title><rect x="9.6626%" y="549" width="2.3740%" height="15" fill="rgb(246,89,9)" fg:x="232" fg:w="57"/><text x="9.9126%" y="559.50">st..</text></g><g><title>std::panicking::try (57 samples, 2.37%)</title><rect x="9.6626%" y="533" width="2.3740%" height="15" fill="rgb(233,213,13)" fg:x="232" fg:w="57"/><text x="9.9126%" y="543.50">st..</text></g><g><title>std::panicking::try::do_call (57 samples, 2.37%)</title><rect x="9.6626%" y="517" width="2.3740%" height="15" fill="rgb(233,141,41)" fg:x="232" fg:w="57"/><text x="9.9126%" y="527.50">st..</text></g><g><title>std::rt::lang_start_internal::{{closure}} (57 samples, 2.37%)</title><rect x="9.6626%" y="501" width="2.3740%" height="15" fill="rgb(239,167,4)" fg:x="232" fg:w="57"/><text x="9.9126%" y="511.50">st..</text></g><g><title>std::panic::catch_unwind (57 samples, 2.37%)</title><rect x="9.6626%" y="485" width="2.3740%" height="15" fill="rgb(209,217,16)" fg:x="232" fg:w="57"/><text x="9.9126%" y="495.50">st..</text></g><g><title>std::panicking::try (57 samples, 2.37%)</title><rect x="9.6626%" y="469" width="2.3740%" height="15" fill="rgb(219,88,35)" fg:x="232" fg:w="57"/><text x="9.9126%" y="479.50">st..</text></g><g><title>std::panicking::try::do_call (57 samples, 2.37%)</title><rect x="9.6626%" y="453" width="2.3740%" height="15" fill="rgb(220,193,23)" fg:x="232" fg:w="57"/><text x="9.9126%" y="463.50">st..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (57 samples, 2.37%)</title><rect x="9.6626%" y="437" width="2.3740%" height="15" fill="rgb(230,90,52)" fg:x="232" fg:w="57"/><text x="9.9126%" y="447.50">co..</text></g><g><title>std::rt::lang_start::{{closure}} (57 samples, 2.37%)</title><rect x="9.6626%" y="421" width="2.3740%" height="15" fill="rgb(252,106,19)" fg:x="232" fg:w="57"/><text x="9.9126%" y="431.50">st..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (57 samples, 2.37%)</title><rect x="9.6626%" y="405" width="2.3740%" height="15" fill="rgb(206,74,20)" fg:x="232" fg:w="57"/><text x="9.9126%" y="415.50">st..</text></g><g><title>core::ops::function::FnOnce::call_once (57 samples, 2.37%)</title><rect x="9.6626%" y="389" width="2.3740%" height="15" fill="rgb(230,138,44)" fg:x="232" fg:w="57"/><text x="9.9126%" y="399.50">co..</text></g><g><title>tftp::main (57 samples, 2.37%)</title><rect x="9.6626%" y="373" width="2.3740%" height="15" fill="rgb(235,182,43)" fg:x="232" fg:w="57"/><text x="9.9126%" y="383.50">tf..</text></g><g><title>tftp::start_send (57 samples, 2.37%)</title><rect x="9.6626%" y="357" width="2.3740%" height="15" fill="rgb(242,16,51)" fg:x="232" fg:w="57"/><text x="9.9126%" y="367.50">tf..</text></g><g><title>tftp::client::client::send_file (57 samples, 2.37%)</title><rect x="9.6626%" y="341" width="2.3740%" height="15" fill="rgb(248,9,4)" fg:x="232" fg:w="57"/><text x="9.9126%" y="351.50">tf..</text></g><g><title>&lt;tftp::storage::FileReader&lt;T&gt; as tftp::storage::BlockReader&gt;::next (2 samples, 0.08%)</title><rect x="11.9534%" y="325" width="0.0833%" height="15" fill="rgb(210,31,22)" fg:x="287" fg:w="2"/><text x="12.2034%" y="335.50"></text></g><g><title>tftp::storage::FileReader&lt;T&gt;::read_block (1 samples, 0.04%)</title><rect x="11.9950%" y="309" width="0.0416%" height="15" fill="rgb(239,54,39)" fg:x="288" fg:w="1"/><text x="12.2450%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (1 samples, 0.04%)</title><rect x="11.9950%" y="293" width="0.0416%" height="15" fill="rgb(230,99,41)" fg:x="288" fg:w="1"/><text x="12.2450%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (1 samples, 0.04%)</title><rect x="11.9950%" y="277" width="0.0416%" height="15" fill="rgb(253,106,12)" fg:x="288" fg:w="1"/><text x="12.2450%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="11.9950%" y="261" width="0.0416%" height="15" fill="rgb(213,46,41)" fg:x="288" fg:w="1"/><text x="12.2450%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="11.9950%" y="245" width="0.0416%" height="15" fill="rgb(215,133,35)" fg:x="288" fg:w="1"/><text x="12.2450%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.04%)</title><rect x="11.9950%" y="229" width="0.0416%" height="15" fill="rgb(213,28,5)" fg:x="288" fg:w="1"/><text x="12.2450%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.04%)</title><rect x="11.9950%" y="213" width="0.0416%" height="15" fill="rgb(215,77,49)" fg:x="288" fg:w="1"/><text x="12.2450%" y="223.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.04%)</title><rect x="11.9950%" y="197" width="0.0416%" height="15" fill="rgb(248,100,22)" fg:x="288" fg:w="1"/><text x="12.2450%" y="207.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.04%)</title><rect x="11.9950%" y="181" width="0.0416%" height="15" fill="rgb(208,67,9)" fg:x="288" fg:w="1"/><text x="12.2450%" y="191.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (2 samples, 0.08%)</title><rect x="13.0362%" y="133" width="0.0833%" height="15" fill="rgb(219,133,21)" fg:x="313" fg:w="2"/><text x="13.2862%" y="143.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (10 samples, 0.42%)</title><rect x="13.1195%" y="133" width="0.4165%" height="15" fill="rgb(246,46,29)" fg:x="315" fg:w="10"/><text x="13.3695%" y="143.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null::runtime_impl (3 samples, 0.12%)</title><rect x="13.4111%" y="117" width="0.1249%" height="15" fill="rgb(246,185,52)" fg:x="322" fg:w="3"/><text x="13.6611%" y="127.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::addr (3 samples, 0.12%)</title><rect x="13.4111%" y="101" width="0.1249%" height="15" fill="rgb(252,136,11)" fg:x="322" fg:w="3"/><text x="13.6611%" y="111.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (11 samples, 0.46%)</title><rect x="14.5356%" y="117" width="0.4581%" height="15" fill="rgb(219,138,53)" fg:x="349" fg:w="11"/><text x="14.7856%" y="127.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (11 samples, 0.46%)</title><rect x="14.5356%" y="101" width="0.4581%" height="15" fill="rgb(211,51,23)" fg:x="349" fg:w="11"/><text x="14.7856%" y="111.50"></text></g><g><title>&lt;tftp::packet::DataPacket as tftp::packet::ByteConverter&gt;::to_bytes (77 samples, 3.21%)</title><rect x="12.0367%" y="325" width="3.2070%" height="15" fill="rgb(247,221,28)" fg:x="289" fg:w="77"/><text x="12.2867%" y="335.50">&lt;tf..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (77 samples, 3.21%)</title><rect x="12.0367%" y="309" width="3.2070%" height="15" fill="rgb(251,222,45)" fg:x="289" fg:w="77"/><text x="12.2867%" y="319.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (77 samples, 3.21%)</title><rect x="12.0367%" y="293" width="3.2070%" height="15" fill="rgb(217,162,53)" fg:x="289" fg:w="77"/><text x="12.2867%" y="303.50">&lt;al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (77 samples, 3.21%)</title><rect x="12.0367%" y="277" width="3.2070%" height="15" fill="rgb(229,93,14)" fg:x="289" fg:w="77"/><text x="12.2867%" y="287.50">&lt;al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (77 samples, 3.21%)</title><rect x="12.0367%" y="261" width="3.2070%" height="15" fill="rgb(209,67,49)" fg:x="289" fg:w="77"/><text x="12.2867%" y="271.50">&lt;al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (77 samples, 3.21%)</title><rect x="12.0367%" y="245" width="3.2070%" height="15" fill="rgb(213,87,29)" fg:x="289" fg:w="77"/><text x="12.2867%" y="255.50">&lt;al..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (77 samples, 3.21%)</title><rect x="12.0367%" y="229" width="3.2070%" height="15" fill="rgb(205,151,52)" fg:x="289" fg:w="77"/><text x="12.2867%" y="239.50">all..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (77 samples, 3.21%)</title><rect x="12.0367%" y="213" width="3.2070%" height="15" fill="rgb(253,215,39)" fg:x="289" fg:w="77"/><text x="12.2867%" y="223.50">cor..</text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (77 samples, 3.21%)</title><rect x="12.0367%" y="197" width="3.2070%" height="15" fill="rgb(221,220,41)" fg:x="289" fg:w="77"/><text x="12.2867%" y="207.50">&lt;co..</text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (77 samples, 3.21%)</title><rect x="12.0367%" y="181" width="3.2070%" height="15" fill="rgb(218,133,21)" fg:x="289" fg:w="77"/><text x="12.2867%" y="191.50">&lt;co..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (77 samples, 3.21%)</title><rect x="12.0367%" y="165" width="3.2070%" height="15" fill="rgb(221,193,43)" fg:x="289" fg:w="77"/><text x="12.2867%" y="175.50">cor..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (77 samples, 3.21%)</title><rect x="12.0367%" y="149" width="3.2070%" height="15" fill="rgb(240,128,52)" fg:x="289" fg:w="77"/><text x="12.2867%" y="159.50">&lt;co..</text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (41 samples, 1.71%)</title><rect x="13.5360%" y="133" width="1.7076%" height="15" fill="rgb(253,114,12)" fg:x="325" fg:w="41"/><text x="13.7860%" y="143.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (6 samples, 0.25%)</title><rect x="14.9938%" y="117" width="0.2499%" height="15" fill="rgb(215,223,47)" fg:x="360" fg:w="6"/><text x="15.2438%" y="127.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.04%)</title><rect x="15.2436%" y="197" width="0.0416%" height="15" fill="rgb(248,225,23)" fg:x="366" fg:w="1"/><text x="15.4936%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::by_ref_sized::ByRefSized&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.04%)</title><rect x="15.2436%" y="181" width="0.0416%" height="15" fill="rgb(250,108,0)" fg:x="366" fg:w="1"/><text x="15.4936%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.04%)</title><rect x="15.2436%" y="165" width="0.0416%" height="15" fill="rgb(228,208,7)" fg:x="366" fg:w="1"/><text x="15.4936%" y="175.50"></text></g><g><title>&lt;core::const_closure::ConstFnMutClosure&lt;&amp;mut A,Function&gt; as core::ops::function::FnMut&lt;ClosureArguments&gt;&gt;::call_mut (1 samples, 0.04%)</title><rect x="15.2436%" y="149" width="0.0416%" height="15" fill="rgb(244,45,10)" fg:x="366" fg:w="1"/><text x="15.4936%" y="159.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.04%)</title><rect x="15.2436%" y="133" width="0.0416%" height="15" fill="rgb(207,125,25)" fg:x="366" fg:w="1"/><text x="15.4936%" y="143.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_2_imp (1 samples, 0.04%)</title><rect x="15.2436%" y="117" width="0.0416%" height="15" fill="rgb(210,195,18)" fg:x="366" fg:w="1"/><text x="15.4936%" y="127.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (1 samples, 0.04%)</title><rect x="15.2436%" y="101" width="0.0416%" height="15" fill="rgb(249,80,12)" fg:x="366" fg:w="1"/><text x="15.4936%" y="111.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.04%)</title><rect x="15.2436%" y="85" width="0.0416%" height="15" fill="rgb(221,65,9)" fg:x="366" fg:w="1"/><text x="15.4936%" y="95.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.04%)</title><rect x="15.2436%" y="69" width="0.0416%" height="15" fill="rgb(235,49,36)" fg:x="366" fg:w="1"/><text x="15.4936%" y="79.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::{{closure}} (1 samples, 0.04%)</title><rect x="15.2436%" y="53" width="0.0416%" height="15" fill="rgb(225,32,20)" fg:x="366" fg:w="1"/><text x="15.4936%" y="63.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (2 samples, 0.08%)</title><rect x="15.2853%" y="101" width="0.0833%" height="15" fill="rgb(215,141,46)" fg:x="367" fg:w="2"/><text x="15.5353%" y="111.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (1 samples, 0.04%)</title><rect x="15.3269%" y="85" width="0.0416%" height="15" fill="rgb(250,160,47)" fg:x="368" fg:w="1"/><text x="15.5769%" y="95.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (3 samples, 0.12%)</title><rect x="15.2853%" y="149" width="0.1249%" height="15" fill="rgb(216,222,40)" fg:x="367" fg:w="3"/><text x="15.5353%" y="159.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (3 samples, 0.12%)</title><rect x="15.2853%" y="133" width="0.1249%" height="15" fill="rgb(234,217,39)" fg:x="367" fg:w="3"/><text x="15.5353%" y="143.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (3 samples, 0.12%)</title><rect x="15.2853%" y="117" width="0.1249%" height="15" fill="rgb(207,178,40)" fg:x="367" fg:w="3"/><text x="15.5353%" y="127.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.04%)</title><rect x="15.3686%" y="101" width="0.0416%" height="15" fill="rgb(221,136,13)" fg:x="369" fg:w="1"/><text x="15.6186%" y="111.50"></text></g><g><title>&lt;T as core::option::SpecOptionPartialEq&gt;::eq (1 samples, 0.04%)</title><rect x="15.3686%" y="85" width="0.0416%" height="15" fill="rgb(249,199,10)" fg:x="369" fg:w="1"/><text x="15.6186%" y="95.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (1 samples, 0.04%)</title><rect x="15.3686%" y="69" width="0.0416%" height="15" fill="rgb(249,222,13)" fg:x="369" fg:w="1"/><text x="15.6186%" y="79.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.04%)</title><rect x="15.4102%" y="69" width="0.0416%" height="15" fill="rgb(244,185,38)" fg:x="370" fg:w="1"/><text x="15.6602%" y="79.50"></text></g><g><title>&lt;tftp::packet::Packet as tftp::packet::ByteConverter&gt;::to_bytes (83 samples, 3.46%)</title><rect x="12.0367%" y="341" width="3.4569%" height="15" fill="rgb(236,202,9)" fg:x="289" fg:w="83"/><text x="12.2867%" y="351.50">&lt;tf..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (6 samples, 0.25%)</title><rect x="15.2436%" y="325" width="0.2499%" height="15" fill="rgb(250,229,37)" fg:x="366" fg:w="6"/><text x="15.4936%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (6 samples, 0.25%)</title><rect x="15.2436%" y="309" width="0.2499%" height="15" fill="rgb(206,174,23)" fg:x="366" fg:w="6"/><text x="15.4936%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.25%)</title><rect x="15.2436%" y="293" width="0.2499%" height="15" fill="rgb(211,33,43)" fg:x="366" fg:w="6"/><text x="15.4936%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (6 samples, 0.25%)</title><rect x="15.2436%" y="277" width="0.2499%" height="15" fill="rgb(245,58,50)" fg:x="366" fg:w="6"/><text x="15.4936%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (6 samples, 0.25%)</title><rect x="15.2436%" y="261" width="0.2499%" height="15" fill="rgb(244,68,36)" fg:x="366" fg:w="6"/><text x="15.4936%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (6 samples, 0.25%)</title><rect x="15.2436%" y="245" width="0.2499%" height="15" fill="rgb(232,229,15)" fg:x="366" fg:w="6"/><text x="15.4936%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (6 samples, 0.25%)</title><rect x="15.2436%" y="229" width="0.2499%" height="15" fill="rgb(254,30,23)" fg:x="366" fg:w="6"/><text x="15.4936%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.25%)</title><rect x="15.2436%" y="213" width="0.2499%" height="15" fill="rgb(235,160,14)" fg:x="366" fg:w="6"/><text x="15.4936%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (5 samples, 0.21%)</title><rect x="15.2853%" y="197" width="0.2082%" height="15" fill="rgb(212,155,44)" fg:x="367" fg:w="5"/><text x="15.5353%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;u8&gt;&gt; (5 samples, 0.21%)</title><rect x="15.2853%" y="181" width="0.2082%" height="15" fill="rgb(226,2,50)" fg:x="367" fg:w="5"/><text x="15.5353%" y="191.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.21%)</title><rect x="15.2853%" y="165" width="0.2082%" height="15" fill="rgb(234,177,6)" fg:x="367" fg:w="5"/><text x="15.5353%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;u8,alloc::alloc::Global&gt;&gt; (2 samples, 0.08%)</title><rect x="15.4102%" y="149" width="0.0833%" height="15" fill="rgb(217,24,9)" fg:x="370" fg:w="2"/><text x="15.6602%" y="159.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="15.4102%" y="133" width="0.0833%" height="15" fill="rgb(220,13,46)" fg:x="370" fg:w="2"/><text x="15.6602%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.08%)</title><rect x="15.4102%" y="117" width="0.0833%" height="15" fill="rgb(239,221,27)" fg:x="370" fg:w="2"/><text x="15.6602%" y="127.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="15.4102%" y="101" width="0.0833%" height="15" fill="rgb(222,198,25)" fg:x="370" fg:w="2"/><text x="15.6602%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.08%)</title><rect x="15.4102%" y="85" width="0.0833%" height="15" fill="rgb(211,99,13)" fg:x="370" fg:w="2"/><text x="15.6602%" y="95.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.04%)</title><rect x="15.4519%" y="69" width="0.0416%" height="15" fill="rgb(232,111,31)" fg:x="371" fg:w="1"/><text x="15.7019%" y="79.50"></text></g><g><title>core::ptr::alignment::Alignment::of (1 samples, 0.04%)</title><rect x="15.4519%" y="53" width="0.0416%" height="15" fill="rgb(245,82,37)" fg:x="371" fg:w="1"/><text x="15.7019%" y="63.50"></text></g><g><title>core::ptr::alignment::Alignment::new_unchecked (1 samples, 0.04%)</title><rect x="15.4519%" y="37" width="0.0416%" height="15" fill="rgb(227,149,46)" fg:x="371" fg:w="1"/><text x="15.7019%" y="47.50"></text></g><g><title>&lt;tftp::socket::EncryptionBoundSocket&lt;S&gt; as tftp::socket::Socket&gt;::recv_from (1 samples, 0.04%)</title><rect x="15.4935%" y="341" width="0.0416%" height="15" fill="rgb(218,36,50)" fg:x="372" fg:w="1"/><text x="15.7435%" y="351.50"></text></g><g><title>tftp::encryption::Encryptor::decrypt (1 samples, 0.04%)</title><rect x="15.4935%" y="325" width="0.0416%" height="15" fill="rgb(226,80,48)" fg:x="372" fg:w="1"/><text x="15.7435%" y="335.50"></text></g><g><title>aead::AeadInPlace::decrypt_in_place (1 samples, 0.04%)</title><rect x="15.4935%" y="309" width="0.0416%" height="15" fill="rgb(238,224,15)" fg:x="372" fg:w="1"/><text x="15.7435%" y="319.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (1 samples, 0.04%)</title><rect x="15.4935%" y="293" width="0.0416%" height="15" fill="rgb(241,136,10)" fg:x="372" fg:w="1"/><text x="15.7435%" y="303.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as crypto_common::KeyIvInit&gt;::new (1 samples, 0.04%)</title><rect x="15.4935%" y="277" width="0.0416%" height="15" fill="rgb(208,32,45)" fg:x="372" fg:w="1"/><text x="15.7435%" y="287.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (1 samples, 0.04%)</title><rect x="15.4935%" y="261" width="0.0416%" height="15" fill="rgb(207,135,9)" fg:x="372" fg:w="1"/><text x="15.7435%" y="271.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (1 samples, 0.04%)</title><rect x="15.4935%" y="245" width="0.0416%" height="15" fill="rgb(206,86,44)" fg:x="372" fg:w="1"/><text x="15.7435%" y="255.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_le_bytes (1 samples, 0.04%)</title><rect x="15.4935%" y="229" width="0.0416%" height="15" fill="rgb(245,177,15)" fg:x="372" fg:w="1"/><text x="15.7435%" y="239.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (1 samples, 0.04%)</title><rect x="15.5352%" y="261" width="0.0416%" height="15" fill="rgb(206,64,50)" fg:x="373" fg:w="1"/><text x="15.7852%" y="271.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.04%)</title><rect x="15.5352%" y="245" width="0.0416%" height="15" fill="rgb(234,36,40)" fg:x="373" fg:w="1"/><text x="15.7852%" y="255.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.04%)</title><rect x="15.5352%" y="229" width="0.0416%" height="15" fill="rgb(213,64,8)" fg:x="373" fg:w="1"/><text x="15.7852%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.04%)</title><rect x="15.5352%" y="213" width="0.0416%" height="15" fill="rgb(210,75,36)" fg:x="373" fg:w="1"/><text x="15.7852%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.04%)</title><rect x="15.5352%" y="197" width="0.0416%" height="15" fill="rgb(229,88,21)" fg:x="373" fg:w="1"/><text x="15.7852%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.04%)</title><rect x="15.5352%" y="181" width="0.0416%" height="15" fill="rgb(252,204,47)" fg:x="373" fg:w="1"/><text x="15.7852%" y="191.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="15.5352%" y="165" width="0.0416%" height="15" fill="rgb(208,77,27)" fg:x="373" fg:w="1"/><text x="15.7852%" y="175.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="15.5352%" y="149" width="0.0416%" height="15" fill="rgb(221,76,26)" fg:x="373" fg:w="1"/><text x="15.7852%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (3 samples, 0.12%)</title><rect x="15.5768%" y="181" width="0.1249%" height="15" fill="rgb(225,139,18)" fg:x="374" fg:w="3"/><text x="15.8268%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (3 samples, 0.12%)</title><rect x="15.5768%" y="165" width="0.1249%" height="15" fill="rgb(230,137,11)" fg:x="374" fg:w="3"/><text x="15.8268%" y="175.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (1 samples, 0.04%)</title><rect x="15.6601%" y="149" width="0.0416%" height="15" fill="rgb(212,28,1)" fg:x="376" fg:w="1"/><text x="15.9101%" y="159.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (1 samples, 0.04%)</title><rect x="15.6601%" y="133" width="0.0416%" height="15" fill="rgb(248,164,17)" fg:x="376" fg:w="1"/><text x="15.9101%" y="143.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="15.7434%" y="165" width="0.0416%" height="15" fill="rgb(222,171,42)" fg:x="378" fg:w="1"/><text x="15.9934%" y="175.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null::runtime_impl (1 samples, 0.04%)</title><rect x="15.7434%" y="149" width="0.0416%" height="15" fill="rgb(243,84,45)" fg:x="378" fg:w="1"/><text x="15.9934%" y="159.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::addr (1 samples, 0.04%)</title><rect x="15.7434%" y="133" width="0.0416%" height="15" fill="rgb(252,49,23)" fg:x="378" fg:w="1"/><text x="15.9934%" y="143.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as crypto_common::KeyIvInit&gt;::new (8 samples, 0.33%)</title><rect x="15.5352%" y="277" width="0.3332%" height="15" fill="rgb(215,19,7)" fg:x="373" fg:w="8"/><text x="15.7852%" y="287.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (7 samples, 0.29%)</title><rect x="15.5768%" y="261" width="0.2915%" height="15" fill="rgb(238,81,41)" fg:x="374" fg:w="7"/><text x="15.8268%" y="271.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (7 samples, 0.29%)</title><rect x="15.5768%" y="245" width="0.2915%" height="15" fill="rgb(210,199,37)" fg:x="374" fg:w="7"/><text x="15.8268%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (7 samples, 0.29%)</title><rect x="15.5768%" y="229" width="0.2915%" height="15" fill="rgb(244,192,49)" fg:x="374" fg:w="7"/><text x="15.8268%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.29%)</title><rect x="15.5768%" y="213" width="0.2915%" height="15" fill="rgb(226,211,11)" fg:x="374" fg:w="7"/><text x="15.8268%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (7 samples, 0.29%)</title><rect x="15.5768%" y="197" width="0.2915%" height="15" fill="rgb(236,162,54)" fg:x="374" fg:w="7"/><text x="15.8268%" y="207.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.17%)</title><rect x="15.7018%" y="181" width="0.1666%" height="15" fill="rgb(220,229,9)" fg:x="377" fg:w="4"/><text x="15.9518%" y="191.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (2 samples, 0.08%)</title><rect x="15.7851%" y="165" width="0.0833%" height="15" fill="rgb(250,87,22)" fg:x="379" fg:w="2"/><text x="16.0351%" y="175.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.04%)</title><rect x="15.8267%" y="149" width="0.0416%" height="15" fill="rgb(239,43,17)" fg:x="380" fg:w="1"/><text x="16.0767%" y="159.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.04%)</title><rect x="15.8267%" y="133" width="0.0416%" height="15" fill="rgb(231,177,25)" fg:x="380" fg:w="1"/><text x="16.0767%" y="143.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4 samples, 0.17%)</title><rect x="15.9100%" y="197" width="0.1666%" height="15" fill="rgb(219,179,1)" fg:x="382" fg:w="4"/><text x="16.1600%" y="207.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4 samples, 0.17%)</title><rect x="15.9100%" y="181" width="0.1666%" height="15" fill="rgb(238,219,53)" fg:x="382" fg:w="4"/><text x="16.1600%" y="191.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (3 samples, 0.12%)</title><rect x="15.9517%" y="165" width="0.1249%" height="15" fill="rgb(232,167,36)" fg:x="383" fg:w="3"/><text x="16.2017%" y="175.50"></text></g><g><title>&lt;[Z] as zeroize::Zeroize&gt;::zeroize (7 samples, 0.29%)</title><rect x="15.8684%" y="229" width="0.2915%" height="15" fill="rgb(244,19,51)" fg:x="381" fg:w="7"/><text x="16.1184%" y="239.50"></text></g><g><title>zeroize::volatile_set (7 samples, 0.29%)</title><rect x="15.8684%" y="213" width="0.2915%" height="15" fill="rgb(224,6,22)" fg:x="381" fg:w="7"/><text x="16.1184%" y="223.50"></text></g><g><title>core::ptr::write_volatile (2 samples, 0.08%)</title><rect x="16.0766%" y="197" width="0.0833%" height="15" fill="rgb(224,145,5)" fg:x="386" fg:w="2"/><text x="16.3266%" y="207.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.33%)</title><rect x="15.8684%" y="245" width="0.3332%" height="15" fill="rgb(234,130,49)" fg:x="381" fg:w="8"/><text x="16.1184%" y="255.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.04%)</title><rect x="16.1599%" y="229" width="0.0416%" height="15" fill="rgb(254,6,2)" fg:x="388" fg:w="1"/><text x="16.4099%" y="239.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (1 samples, 0.04%)</title><rect x="16.1599%" y="213" width="0.0416%" height="15" fill="rgb(208,96,46)" fg:x="388" fg:w="1"/><text x="16.4099%" y="223.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (1 samples, 0.04%)</title><rect x="16.1599%" y="197" width="0.0416%" height="15" fill="rgb(239,3,39)" fg:x="388" fg:w="1"/><text x="16.4099%" y="207.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (1 samples, 0.04%)</title><rect x="16.1599%" y="181" width="0.0416%" height="15" fill="rgb(233,210,1)" fg:x="388" fg:w="1"/><text x="16.4099%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;chacha20::xchacha::XChaChaCore&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm,typenum::bit::B1&gt;,typenum::bit::B0&gt;,typenum::bit::B1&gt;,typenum::bit::B0&gt;&gt;&gt;&gt; (9 samples, 0.37%)</title><rect x="15.8684%" y="261" width="0.3748%" height="15" fill="rgb(244,137,37)" fg:x="381" fg:w="9"/><text x="16.1184%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;chacha20::xchacha::XChaChaCore&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm,typenum::bit::B1&gt;,typenum::bit::B0&gt;,typenum::bit::B1&gt;,typenum::bit::B0&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="16.2016%" y="245" width="0.0416%" height="15" fill="rgb(240,136,2)" fg:x="389" fg:w="1"/><text x="16.4516%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;chacha20::ChaChaCore&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm,typenum::bit::B1&gt;,typenum::bit::B0&gt;,typenum::bit::B1&gt;,typenum::bit::B0&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="16.2016%" y="229" width="0.0416%" height="15" fill="rgb(239,18,37)" fg:x="389" fg:w="1"/><text x="16.4516%" y="239.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="16.2016%" y="213" width="0.0416%" height="15" fill="rgb(218,185,22)" fg:x="389" fg:w="1"/><text x="16.4516%" y="223.50"></text></g><g><title>&lt;[Z: N] as zeroize::Zeroize&gt;::zeroize (1 samples, 0.04%)</title><rect x="16.2016%" y="197" width="0.0416%" height="15" fill="rgb(225,218,4)" fg:x="389" fg:w="1"/><text x="16.4516%" y="207.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;Z&gt; as zeroize::Zeroize&gt;::zeroize (1 samples, 0.04%)</title><rect x="16.2016%" y="181" width="0.0416%" height="15" fill="rgb(230,182,32)" fg:x="389" fg:w="1"/><text x="16.4516%" y="191.50"></text></g><g><title>&lt;Z as zeroize::Zeroize&gt;::zeroize (1 samples, 0.04%)</title><rect x="16.2016%" y="165" width="0.0416%" height="15" fill="rgb(242,56,43)" fg:x="389" fg:w="1"/><text x="16.4516%" y="175.50"></text></g><g><title>zeroize::atomic_fence (1 samples, 0.04%)</title><rect x="16.2016%" y="149" width="0.0416%" height="15" fill="rgb(233,99,24)" fg:x="389" fg:w="1"/><text x="16.4516%" y="159.50"></text></g><g><title>core::sync::atomic::compiler_fence (1 samples, 0.04%)</title><rect x="16.2016%" y="133" width="0.0416%" height="15" fill="rgb(234,209,42)" fg:x="389" fg:w="1"/><text x="16.4516%" y="143.50"></text></g><g><title>&lt;tftp::socket::EncryptionBoundSocket&lt;S&gt; as tftp::socket::Socket&gt;::send_to (18 samples, 0.75%)</title><rect x="15.5352%" y="341" width="0.7497%" height="15" fill="rgb(227,7,12)" fg:x="373" fg:w="18"/><text x="15.7852%" y="351.50"></text></g><g><title>tftp::encryption::Encryptor::encrypt (18 samples, 0.75%)</title><rect x="15.5352%" y="325" width="0.7497%" height="15" fill="rgb(245,203,43)" fg:x="373" fg:w="18"/><text x="15.7852%" y="335.50"></text></g><g><title>aead::AeadInPlace::encrypt_in_place (18 samples, 0.75%)</title><rect x="15.5352%" y="309" width="0.7497%" height="15" fill="rgb(238,205,33)" fg:x="373" fg:w="18"/><text x="15.7852%" y="319.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::encrypt_in_place_detached (18 samples, 0.75%)</title><rect x="15.5352%" y="293" width="0.7497%" height="15" fill="rgb(231,56,7)" fg:x="373" fg:w="18"/><text x="15.7852%" y="303.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::encrypt_in_place_detached (10 samples, 0.42%)</title><rect x="15.8684%" y="277" width="0.4165%" height="15" fill="rgb(244,186,29)" fg:x="381" fg:w="10"/><text x="16.1184%" y="287.50"></text></g><g><title>universal_hash::UniversalHash::update_padded (1 samples, 0.04%)</title><rect x="16.2432%" y="261" width="0.0416%" height="15" fill="rgb(234,111,31)" fg:x="390" fg:w="1"/><text x="16.4932%" y="271.50"></text></g><g><title>universal_hash::UniversalHash::update (1 samples, 0.04%)</title><rect x="16.2432%" y="245" width="0.0416%" height="15" fill="rgb(241,149,10)" fg:x="390" fg:w="1"/><text x="16.4932%" y="255.50"></text></g><g><title>&lt;tftp::storage::FileReader&lt;T&gt; as tftp::storage::BlockReader&gt;::free_block (1 samples, 0.04%)</title><rect x="16.2849%" y="341" width="0.0416%" height="15" fill="rgb(249,206,44)" fg:x="391" fg:w="1"/><text x="16.5349%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove (1 samples, 0.04%)</title><rect x="16.2849%" y="325" width="0.0416%" height="15" fill="rgb(251,153,30)" fg:x="391" fg:w="1"/><text x="16.5349%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove_entry (1 samples, 0.04%)</title><rect x="16.2849%" y="309" width="0.0416%" height="15" fill="rgb(239,152,38)" fg:x="391" fg:w="1"/><text x="16.5349%" y="319.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V,A&gt;::remove_entry (1 samples, 0.04%)</title><rect x="16.2849%" y="293" width="0.0416%" height="15" fill="rgb(249,139,47)" fg:x="391" fg:w="1"/><text x="16.5349%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V,A&gt;::remove_kv (1 samples, 0.04%)</title><rect x="16.2849%" y="277" width="0.0416%" height="15" fill="rgb(244,64,35)" fg:x="391" fg:w="1"/><text x="16.5349%" y="287.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (1 samples, 0.04%)</title><rect x="16.2849%" y="261" width="0.0416%" height="15" fill="rgb(216,46,15)" fg:x="391" fg:w="1"/><text x="16.5349%" y="271.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_leaf_kv (1 samples, 0.04%)</title><rect x="16.2849%" y="245" width="0.0416%" height="15" fill="rgb(250,74,19)" fg:x="391" fg:w="1"/><text x="16.5349%" y="255.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::remove (1 samples, 0.04%)</title><rect x="16.2849%" y="229" width="0.0416%" height="15" fill="rgb(249,42,33)" fg:x="391" fg:w="1"/><text x="16.5349%" y="239.50"></text></g><g><title>alloc::collections::btree::node::slice_remove (1 samples, 0.04%)</title><rect x="16.2849%" y="213" width="0.0416%" height="15" fill="rgb(242,149,17)" fg:x="391" fg:w="1"/><text x="16.5349%" y="223.50"></text></g><g><title>std::rt::lang_start_internal (104 samples, 4.33%)</title><rect x="12.0367%" y="581" width="4.3315%" height="15" fill="rgb(244,29,21)" fg:x="289" fg:w="104"/><text x="12.2867%" y="591.50">std::..</text></g><g><title>std::panic::catch_unwind (104 samples, 4.33%)</title><rect x="12.0367%" y="565" width="4.3315%" height="15" fill="rgb(220,130,37)" fg:x="289" fg:w="104"/><text x="12.2867%" y="575.50">std::..</text></g><g><title>std::panicking::try (104 samples, 4.33%)</title><rect x="12.0367%" y="549" width="4.3315%" height="15" fill="rgb(211,67,2)" fg:x="289" fg:w="104"/><text x="12.2867%" y="559.50">std::..</text></g><g><title>std::panicking::try::do_call (104 samples, 4.33%)</title><rect x="12.0367%" y="533" width="4.3315%" height="15" fill="rgb(235,68,52)" fg:x="289" fg:w="104"/><text x="12.2867%" y="543.50">std::..</text></g><g><title>std::rt::lang_start_internal::{{closure}} (104 samples, 4.33%)</title><rect x="12.0367%" y="517" width="4.3315%" height="15" fill="rgb(246,142,3)" fg:x="289" fg:w="104"/><text x="12.2867%" y="527.50">std::..</text></g><g><title>std::panic::catch_unwind (104 samples, 4.33%)</title><rect x="12.0367%" y="501" width="4.3315%" height="15" fill="rgb(241,25,7)" fg:x="289" fg:w="104"/><text x="12.2867%" y="511.50">std::..</text></g><g><title>std::panicking::try (104 samples, 4.33%)</title><rect x="12.0367%" y="485" width="4.3315%" height="15" fill="rgb(242,119,39)" fg:x="289" fg:w="104"/><text x="12.2867%" y="495.50">std::..</text></g><g><title>std::panicking::try::do_call (104 samples, 4.33%)</title><rect x="12.0367%" y="469" width="4.3315%" height="15" fill="rgb(241,98,45)" fg:x="289" fg:w="104"/><text x="12.2867%" y="479.50">std::..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (104 samples, 4.33%)</title><rect x="12.0367%" y="453" width="4.3315%" height="15" fill="rgb(254,28,30)" fg:x="289" fg:w="104"/><text x="12.2867%" y="463.50">core:..</text></g><g><title>std::rt::lang_start::{{closure}} (104 samples, 4.33%)</title><rect x="12.0367%" y="437" width="4.3315%" height="15" fill="rgb(241,142,54)" fg:x="289" fg:w="104"/><text x="12.2867%" y="447.50">std::..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (104 samples, 4.33%)</title><rect x="12.0367%" y="421" width="4.3315%" height="15" fill="rgb(222,85,15)" fg:x="289" fg:w="104"/><text x="12.2867%" y="431.50">std::..</text></g><g><title>core::ops::function::FnOnce::call_once (104 samples, 4.33%)</title><rect x="12.0367%" y="405" width="4.3315%" height="15" fill="rgb(210,85,47)" fg:x="289" fg:w="104"/><text x="12.2867%" y="415.50">core:..</text></g><g><title>tftp::main (104 samples, 4.33%)</title><rect x="12.0367%" y="389" width="4.3315%" height="15" fill="rgb(224,206,25)" fg:x="289" fg:w="104"/><text x="12.2867%" y="399.50">tftp:..</text></g><g><title>tftp::start_send (104 samples, 4.33%)</title><rect x="12.0367%" y="373" width="4.3315%" height="15" fill="rgb(243,201,19)" fg:x="289" fg:w="104"/><text x="12.2867%" y="383.50">tftp:..</text></g><g><title>tftp::client::client::send_file (104 samples, 4.33%)</title><rect x="12.0367%" y="357" width="4.3315%" height="15" fill="rgb(236,59,4)" fg:x="289" fg:w="104"/><text x="12.2867%" y="367.50">tftp:..</text></g><g><title>&lt;tftp::storage::FileReader&lt;T&gt; as tftp::storage::BlockReader&gt;::next (1 samples, 0.04%)</title><rect x="16.3265%" y="341" width="0.0416%" height="15" fill="rgb(254,179,45)" fg:x="392" fg:w="1"/><text x="16.5765%" y="351.50"></text></g><g><title>tftp::storage::FileReader&lt;T&gt;::read_block (1 samples, 0.04%)</title><rect x="16.3265%" y="325" width="0.0416%" height="15" fill="rgb(226,14,10)" fg:x="392" fg:w="1"/><text x="16.5765%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (1 samples, 0.04%)</title><rect x="16.3265%" y="309" width="0.0416%" height="15" fill="rgb(244,27,41)" fg:x="392" fg:w="1"/><text x="16.5765%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (1 samples, 0.04%)</title><rect x="16.3265%" y="293" width="0.0416%" height="15" fill="rgb(235,35,32)" fg:x="392" fg:w="1"/><text x="16.5765%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="16.3265%" y="277" width="0.0416%" height="15" fill="rgb(218,68,31)" fg:x="392" fg:w="1"/><text x="16.5765%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="16.3265%" y="261" width="0.0416%" height="15" fill="rgb(207,120,37)" fg:x="392" fg:w="1"/><text x="16.5765%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.04%)</title><rect x="16.3265%" y="245" width="0.0416%" height="15" fill="rgb(227,98,0)" fg:x="392" fg:w="1"/><text x="16.5765%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.04%)</title><rect x="16.3265%" y="229" width="0.0416%" height="15" fill="rgb(207,7,3)" fg:x="392" fg:w="1"/><text x="16.5765%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.04%)</title><rect x="16.3265%" y="213" width="0.0416%" height="15" fill="rgb(206,98,19)" fg:x="392" fg:w="1"/><text x="16.5765%" y="223.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="16.3682%" y="405" width="0.0833%" height="15" fill="rgb(217,5,26)" fg:x="393" fg:w="2"/><text x="16.6182%" y="415.50"></text></g><g><title>&lt;[Z] as zeroize::Zeroize&gt;::zeroize (2 samples, 0.08%)</title><rect x="16.3682%" y="389" width="0.0833%" height="15" fill="rgb(235,190,38)" fg:x="393" fg:w="2"/><text x="16.6182%" y="399.50"></text></g><g><title>zeroize::volatile_set (2 samples, 0.08%)</title><rect x="16.3682%" y="373" width="0.0833%" height="15" fill="rgb(247,86,24)" fg:x="393" fg:w="2"/><text x="16.6182%" y="383.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.08%)</title><rect x="16.3682%" y="357" width="0.0833%" height="15" fill="rgb(205,101,16)" fg:x="393" fg:w="2"/><text x="16.6182%" y="367.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.08%)</title><rect x="16.3682%" y="341" width="0.0833%" height="15" fill="rgb(246,168,33)" fg:x="393" fg:w="2"/><text x="16.6182%" y="351.50"></text></g><g><title>core::mem::replace (2 samples, 0.08%)</title><rect x="16.3682%" y="325" width="0.0833%" height="15" fill="rgb(231,114,1)" fg:x="393" fg:w="2"/><text x="16.6182%" y="335.50"></text></g><g><title>core::ptr::read (1 samples, 0.04%)</title><rect x="16.4098%" y="309" width="0.0416%" height="15" fill="rgb(207,184,53)" fg:x="394" fg:w="1"/><text x="16.6598%" y="319.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3 samples, 0.12%)</title><rect x="16.3682%" y="581" width="0.1249%" height="15" fill="rgb(224,95,51)" fg:x="393" fg:w="3"/><text x="16.6182%" y="591.50"></text></g><g><title>core::ops::function::FnOnce::call_once (3 samples, 0.12%)</title><rect x="16.3682%" y="565" width="0.1249%" height="15" fill="rgb(212,188,45)" fg:x="393" fg:w="3"/><text x="16.6182%" y="575.50"></text></g><g><title>tftp::main (3 samples, 0.12%)</title><rect x="16.3682%" y="549" width="0.1249%" height="15" fill="rgb(223,154,38)" fg:x="393" fg:w="3"/><text x="16.6182%" y="559.50"></text></g><g><title>tftp::start_send (3 samples, 0.12%)</title><rect x="16.3682%" y="533" width="0.1249%" height="15" fill="rgb(251,22,52)" fg:x="393" fg:w="3"/><text x="16.6182%" y="543.50"></text></g><g><title>tftp::client::client::send_file (3 samples, 0.12%)</title><rect x="16.3682%" y="517" width="0.1249%" height="15" fill="rgb(229,209,22)" fg:x="393" fg:w="3"/><text x="16.6182%" y="527.50"></text></g><g><title>&lt;tftp::socket::EncryptionBoundSocket&lt;S&gt; as tftp::socket::Socket&gt;::send_to (3 samples, 0.12%)</title><rect x="16.3682%" y="501" width="0.1249%" height="15" fill="rgb(234,138,34)" fg:x="393" fg:w="3"/><text x="16.6182%" y="511.50"></text></g><g><title>tftp::encryption::Encryptor::encrypt (3 samples, 0.12%)</title><rect x="16.3682%" y="485" width="0.1249%" height="15" fill="rgb(212,95,11)" fg:x="393" fg:w="3"/><text x="16.6182%" y="495.50"></text></g><g><title>aead::AeadInPlace::encrypt_in_place (3 samples, 0.12%)</title><rect x="16.3682%" y="469" width="0.1249%" height="15" fill="rgb(240,179,47)" fg:x="393" fg:w="3"/><text x="16.6182%" y="479.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::encrypt_in_place_detached (3 samples, 0.12%)</title><rect x="16.3682%" y="453" width="0.1249%" height="15" fill="rgb(240,163,11)" fg:x="393" fg:w="3"/><text x="16.6182%" y="463.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::encrypt_in_place_detached (3 samples, 0.12%)</title><rect x="16.3682%" y="437" width="0.1249%" height="15" fill="rgb(236,37,12)" fg:x="393" fg:w="3"/><text x="16.6182%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;chacha20::xchacha::XChaChaCore&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm,typenum::bit::B1&gt;,typenum::bit::B0&gt;,typenum::bit::B1&gt;,typenum::bit::B0&gt;&gt;&gt;&gt; (3 samples, 0.12%)</title><rect x="16.3682%" y="421" width="0.1249%" height="15" fill="rgb(232,164,16)" fg:x="393" fg:w="3"/><text x="16.6182%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;chacha20::xchacha::XChaChaCore&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm,typenum::bit::B1&gt;,typenum::bit::B0&gt;,typenum::bit::B1&gt;,typenum::bit::B0&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="16.4515%" y="405" width="0.0416%" height="15" fill="rgb(244,205,15)" fg:x="395" fg:w="1"/><text x="16.7015%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;chacha20::ChaChaCore&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm,typenum::bit::B1&gt;,typenum::bit::B0&gt;,typenum::bit::B1&gt;,typenum::bit::B0&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="16.4515%" y="389" width="0.0416%" height="15" fill="rgb(223,117,47)" fg:x="395" fg:w="1"/><text x="16.7015%" y="399.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="16.4515%" y="373" width="0.0416%" height="15" fill="rgb(244,107,35)" fg:x="395" fg:w="1"/><text x="16.7015%" y="383.50"></text></g><g><title>&lt;[Z: N] as zeroize::Zeroize&gt;::zeroize (1 samples, 0.04%)</title><rect x="16.4515%" y="357" width="0.0416%" height="15" fill="rgb(205,140,8)" fg:x="395" fg:w="1"/><text x="16.7015%" y="367.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;Z&gt; as zeroize::Zeroize&gt;::zeroize (1 samples, 0.04%)</title><rect x="16.4515%" y="341" width="0.0416%" height="15" fill="rgb(228,84,46)" fg:x="395" fg:w="1"/><text x="16.7015%" y="351.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="16.4515%" y="325" width="0.0416%" height="15" fill="rgb(254,188,9)" fg:x="395" fg:w="1"/><text x="16.7015%" y="335.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="16.4515%" y="309" width="0.0416%" height="15" fill="rgb(206,112,54)" fg:x="395" fg:w="1"/><text x="16.7015%" y="319.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (1 samples, 0.04%)</title><rect x="16.4515%" y="293" width="0.0416%" height="15" fill="rgb(216,84,49)" fg:x="395" fg:w="1"/><text x="16.7015%" y="303.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.04%)</title><rect x="16.7847%" y="325" width="0.0416%" height="15" fill="rgb(214,194,35)" fg:x="403" fg:w="1"/><text x="17.0347%" y="335.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_add_epi32 (75 samples, 3.12%)</title><rect x="23.8651%" y="293" width="3.1237%" height="15" fill="rgb(249,28,3)" fg:x="573" fg:w="75"/><text x="24.1151%" y="303.50">cor..</text></g><g><title>core::core_arch::x86::m128iExt::as_i32x4 (13 samples, 0.54%)</title><rect x="26.4473%" y="277" width="0.5414%" height="15" fill="rgb(222,56,52)" fg:x="635" fg:w="13"/><text x="26.6973%" y="287.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_slli_epi32 (47 samples, 1.96%)</title><rect x="26.9888%" y="293" width="1.9575%" height="15" fill="rgb(245,217,50)" fg:x="648" fg:w="47"/><text x="27.2388%" y="303.50">c..</text></g><g><title>core::core_arch::x86::m128iExt::as_i32x4 (13 samples, 0.54%)</title><rect x="28.4048%" y="277" width="0.5414%" height="15" fill="rgb(213,201,24)" fg:x="682" fg:w="13"/><text x="28.6548%" y="287.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_srli_epi32 (16 samples, 0.67%)</title><rect x="28.9463%" y="293" width="0.6664%" height="15" fill="rgb(248,116,28)" fg:x="695" fg:w="16"/><text x="29.1963%" y="303.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i32x4 (4 samples, 0.17%)</title><rect x="29.4461%" y="277" width="0.1666%" height="15" fill="rgb(219,72,43)" fg:x="707" fg:w="4"/><text x="29.6961%" y="287.50"></text></g><g><title>chacha20::backends::sse2::add_xor_rot (352 samples, 14.66%)</title><rect x="16.9096%" y="309" width="14.6606%" height="15" fill="rgb(209,138,14)" fg:x="406" fg:w="352"/><text x="17.1596%" y="319.50">chacha20::backends::ss..</text></g><g><title>core::core_arch::x86::sse2::_mm_xor_si128 (47 samples, 1.96%)</title><rect x="29.6127%" y="293" width="1.9575%" height="15" fill="rgb(222,18,33)" fg:x="711" fg:w="47"/><text x="29.8627%" y="303.50">c..</text></g><g><title>chacha20::backends::sse2::cols_to_rows (23 samples, 0.96%)</title><rect x="31.5702%" y="309" width="0.9579%" height="15" fill="rgb(213,199,7)" fg:x="758" fg:w="23"/><text x="31.8202%" y="319.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_shuffle_epi32 (16 samples, 0.67%)</title><rect x="31.8617%" y="293" width="0.6664%" height="15" fill="rgb(250,110,10)" fg:x="765" fg:w="16"/><text x="32.1117%" y="303.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i32x4 (2 samples, 0.08%)</title><rect x="32.4448%" y="277" width="0.0833%" height="15" fill="rgb(248,123,6)" fg:x="779" fg:w="2"/><text x="32.6948%" y="287.50"></text></g><g><title>chacha20::backends::sse2::double_quarter_round (393 samples, 16.37%)</title><rect x="16.8263%" y="325" width="16.3682%" height="15" fill="rgb(206,91,31)" fg:x="404" fg:w="393"/><text x="17.0763%" y="335.50">chacha20::backends::sse2:..</text></g><g><title>chacha20::backends::sse2::rows_to_cols (16 samples, 0.67%)</title><rect x="32.5281%" y="309" width="0.6664%" height="15" fill="rgb(211,154,13)" fg:x="781" fg:w="16"/><text x="32.7781%" y="319.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_shuffle_epi32 (10 samples, 0.42%)</title><rect x="32.7780%" y="293" width="0.4165%" height="15" fill="rgb(225,148,7)" fg:x="787" fg:w="10"/><text x="33.0280%" y="303.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i32x4 (4 samples, 0.17%)</title><rect x="33.0279%" y="277" width="0.1666%" height="15" fill="rgb(220,160,43)" fg:x="793" fg:w="4"/><text x="33.2779%" y="287.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_add_epi32 (4 samples, 0.17%)</title><rect x="33.1945%" y="325" width="0.1666%" height="15" fill="rgb(213,52,39)" fg:x="797" fg:w="4"/><text x="33.4445%" y="335.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i32x4 (1 samples, 0.04%)</title><rect x="33.3195%" y="309" width="0.0416%" height="15" fill="rgb(243,137,7)" fg:x="800" fg:w="1"/><text x="33.5695%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (2 samples, 0.08%)</title><rect x="33.5693%" y="293" width="0.0833%" height="15" fill="rgb(230,79,13)" fg:x="806" fg:w="2"/><text x="33.8193%" y="303.50"></text></g><g><title>core::ptr::read (6 samples, 0.25%)</title><rect x="33.7359%" y="277" width="0.2499%" height="15" fill="rgb(247,105,23)" fg:x="810" fg:w="6"/><text x="33.9859%" y="287.50"></text></g><g><title>&lt;chacha20::backends::sse2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (421 samples, 17.53%)</title><rect x="16.4931%" y="357" width="17.5344%" height="15" fill="rgb(223,179,41)" fg:x="396" fg:w="421"/><text x="16.7431%" y="367.50">&lt;chacha20::backends::sse2::..</text></g><g><title>chacha20::backends::sse2::rounds (421 samples, 17.53%)</title><rect x="16.4931%" y="341" width="17.5344%" height="15" fill="rgb(218,9,34)" fg:x="396" fg:w="421"/><text x="16.7431%" y="351.50">chacha20::backends::sse2::r..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (16 samples, 0.67%)</title><rect x="33.3611%" y="325" width="0.6664%" height="15" fill="rgb(222,106,8)" fg:x="801" fg:w="16"/><text x="33.6111%" y="335.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (15 samples, 0.62%)</title><rect x="33.4027%" y="309" width="0.6247%" height="15" fill="rgb(211,220,0)" fg:x="802" fg:w="15"/><text x="33.6527%" y="319.50"></text></g><g><title>core::mem::replace (9 samples, 0.37%)</title><rect x="33.6526%" y="293" width="0.3748%" height="15" fill="rgb(229,52,16)" fg:x="808" fg:w="9"/><text x="33.9026%" y="303.50"></text></g><g><title>core::ptr::write (1 samples, 0.04%)</title><rect x="33.9858%" y="277" width="0.0416%" height="15" fill="rgb(212,155,18)" fg:x="816" fg:w="1"/><text x="34.2358%" y="287.50"></text></g><g><title>core::ptr::write (9 samples, 0.37%)</title><rect x="40.0250%" y="229" width="0.3748%" height="15" fill="rgb(242,21,14)" fg:x="961" fg:w="9"/><text x="40.2750%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (122 samples, 5.08%)</title><rect x="35.8601%" y="277" width="5.0812%" height="15" fill="rgb(222,19,48)" fg:x="861" fg:w="122"/><text x="36.1101%" y="287.50">&lt;core:..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (88 samples, 3.67%)</title><rect x="37.2761%" y="261" width="3.6651%" height="15" fill="rgb(232,45,27)" fg:x="895" fg:w="88"/><text x="37.5261%" y="271.50">core..</text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (65 samples, 2.71%)</title><rect x="38.2341%" y="245" width="2.7072%" height="15" fill="rgb(249,103,42)" fg:x="918" fg:w="65"/><text x="38.4841%" y="255.50">&lt;g..</text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (13 samples, 0.54%)</title><rect x="40.3998%" y="229" width="0.5414%" height="15" fill="rgb(246,81,33)" fg:x="970" fg:w="13"/><text x="40.6498%" y="239.50"></text></g><g><title>&lt;u8 as core::default::Default&gt;::default (3 samples, 0.12%)</title><rect x="40.8163%" y="213" width="0.1249%" height="15" fill="rgb(252,33,42)" fg:x="980" fg:w="3"/><text x="41.0663%" y="223.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (11 samples, 0.46%)</title><rect x="41.5660%" y="261" width="0.4581%" height="15" fill="rgb(209,212,41)" fg:x="998" fg:w="11"/><text x="41.8160%" y="271.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null::runtime_impl (6 samples, 0.25%)</title><rect x="41.7743%" y="245" width="0.2499%" height="15" fill="rgb(207,154,6)" fg:x="1003" fg:w="6"/><text x="42.0243%" y="255.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::addr (6 samples, 0.25%)</title><rect x="41.7743%" y="229" width="0.2499%" height="15" fill="rgb(223,64,47)" fg:x="1003" fg:w="6"/><text x="42.0243%" y="239.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (7 samples, 0.29%)</title><rect x="43.1487%" y="245" width="0.2915%" height="15" fill="rgb(211,161,38)" fg:x="1036" fg:w="7"/><text x="43.3987%" y="255.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (6 samples, 0.25%)</title><rect x="43.1903%" y="229" width="0.2499%" height="15" fill="rgb(219,138,40)" fg:x="1037" fg:w="6"/><text x="43.4403%" y="239.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (3 samples, 0.12%)</title><rect x="43.4402%" y="245" width="0.1249%" height="15" fill="rgb(241,228,46)" fg:x="1043" fg:w="3"/><text x="43.6902%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (233 samples, 9.70%)</title><rect x="34.0275%" y="325" width="9.7043%" height="15" fill="rgb(223,209,38)" fg:x="817" fg:w="233"/><text x="34.2775%" y="335.50">core::iter::tr..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (232 samples, 9.66%)</title><rect x="34.0691%" y="309" width="9.6626%" height="15" fill="rgb(236,164,45)" fg:x="818" fg:w="232"/><text x="34.3191%" y="319.50">&lt;core::iter::a..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (232 samples, 9.66%)</title><rect x="34.0691%" y="293" width="9.6626%" height="15" fill="rgb(231,15,5)" fg:x="818" fg:w="232"/><text x="34.3191%" y="303.50">core::iter::tr..</text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (67 samples, 2.79%)</title><rect x="40.9413%" y="277" width="2.7905%" height="15" fill="rgb(252,35,15)" fg:x="983" fg:w="67"/><text x="41.1913%" y="287.50">&lt;c..</text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (41 samples, 1.71%)</title><rect x="42.0242%" y="261" width="1.7076%" height="15" fill="rgb(248,181,18)" fg:x="1009" fg:w="41"/><text x="42.2742%" y="271.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (4 samples, 0.17%)</title><rect x="43.5652%" y="245" width="0.1666%" height="15" fill="rgb(233,39,42)" fg:x="1046" fg:w="4"/><text x="43.8152%" y="255.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="43.8151%" y="293" width="0.0416%" height="15" fill="rgb(238,110,33)" fg:x="1052" fg:w="1"/><text x="44.0651%" y="303.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="43.8567%" y="277" width="0.0416%" height="15" fill="rgb(233,195,10)" fg:x="1053" fg:w="1"/><text x="44.1067%" y="287.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (5 samples, 0.21%)</title><rect x="43.7318%" y="325" width="0.2082%" height="15" fill="rgb(254,105,3)" fg:x="1050" fg:w="5"/><text x="43.9818%" y="335.50"></text></g><g><title>core::ptr::read (4 samples, 0.17%)</title><rect x="43.7734%" y="309" width="0.1666%" height="15" fill="rgb(221,225,9)" fg:x="1051" fg:w="4"/><text x="44.0234%" y="319.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (2 samples, 0.08%)</title><rect x="43.8567%" y="293" width="0.0833%" height="15" fill="rgb(224,227,45)" fg:x="1053" fg:w="2"/><text x="44.1067%" y="303.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (1 samples, 0.04%)</title><rect x="43.8984%" y="277" width="0.0416%" height="15" fill="rgb(229,198,43)" fg:x="1054" fg:w="1"/><text x="44.1484%" y="287.50"></text></g><g><title>memcpy (1 samples, 0.04%)</title><rect x="43.8984%" y="261" width="0.0416%" height="15" fill="rgb(206,209,35)" fg:x="1054" fg:w="1"/><text x="44.1484%" y="271.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::iter_position (1 samples, 0.04%)</title><rect x="43.9400%" y="325" width="0.0416%" height="15" fill="rgb(245,195,53)" fg:x="1055" fg:w="1"/><text x="44.1900%" y="335.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.04%)</title><rect x="43.9400%" y="309" width="0.0416%" height="15" fill="rgb(240,92,26)" fg:x="1055" fg:w="1"/><text x="44.1900%" y="319.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (1 samples, 0.04%)</title><rect x="43.9400%" y="293" width="0.0416%" height="15" fill="rgb(207,40,23)" fg:x="1055" fg:w="1"/><text x="44.1900%" y="303.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (1 samples, 0.04%)</title><rect x="43.9400%" y="277" width="0.0416%" height="15" fill="rgb(223,111,35)" fg:x="1055" fg:w="1"/><text x="44.1900%" y="287.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (1 samples, 0.04%)</title><rect x="43.9400%" y="261" width="0.0416%" height="15" fill="rgb(229,147,28)" fg:x="1055" fg:w="1"/><text x="44.1900%" y="271.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (240 samples, 10.00%)</title><rect x="34.0275%" y="357" width="9.9958%" height="15" fill="rgb(211,29,28)" fg:x="817" fg:w="240"/><text x="34.2775%" y="367.50">generic_array:..</text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (240 samples, 10.00%)</title><rect x="34.0275%" y="341" width="9.9958%" height="15" fill="rgb(228,72,33)" fg:x="817" fg:w="240"/><text x="34.2775%" y="351.50">&lt;generic_array..</text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::new (1 samples, 0.04%)</title><rect x="43.9817%" y="325" width="0.0416%" height="15" fill="rgb(205,214,31)" fg:x="1056" fg:w="1"/><text x="44.2317%" y="335.50"></text></g><g><title>memcpy (1 samples, 0.04%)</title><rect x="43.9817%" y="309" width="0.0416%" height="15" fill="rgb(224,111,15)" fg:x="1056" fg:w="1"/><text x="44.2317%" y="319.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="44.0233%" y="325" width="0.0416%" height="15" fill="rgb(253,21,26)" fg:x="1057" fg:w="1"/><text x="44.2733%" y="335.50"></text></g><g><title>core::ptr::read (2 samples, 0.08%)</title><rect x="44.0233%" y="341" width="0.0833%" height="15" fill="rgb(245,139,43)" fg:x="1057" fg:w="2"/><text x="44.2733%" y="351.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (1 samples, 0.04%)</title><rect x="44.0650%" y="325" width="0.0416%" height="15" fill="rgb(252,170,7)" fg:x="1058" fg:w="1"/><text x="44.3150%" y="335.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="44.0650%" y="309" width="0.0416%" height="15" fill="rgb(231,118,14)" fg:x="1058" fg:w="1"/><text x="44.3150%" y="319.50"></text></g><g><title>core::ptr::write (10 samples, 0.42%)</title><rect x="51.0204%" y="213" width="0.4165%" height="15" fill="rgb(238,83,0)" fg:x="1225" fg:w="10"/><text x="51.2704%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (137 samples, 5.71%)</title><rect x="46.2724%" y="261" width="5.7060%" height="15" fill="rgb(221,39,39)" fg:x="1111" fg:w="137"/><text x="46.5224%" y="271.50">&lt;core::..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (100 samples, 4.16%)</title><rect x="47.8134%" y="245" width="4.1649%" height="15" fill="rgb(222,119,46)" fg:x="1148" fg:w="100"/><text x="48.0634%" y="255.50">core:..</text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (79 samples, 3.29%)</title><rect x="48.6880%" y="229" width="3.2903%" height="15" fill="rgb(222,165,49)" fg:x="1169" fg:w="79"/><text x="48.9380%" y="239.50">&lt;ge..</text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (13 samples, 0.54%)</title><rect x="51.4369%" y="213" width="0.5414%" height="15" fill="rgb(219,113,52)" fg:x="1235" fg:w="13"/><text x="51.6869%" y="223.50"></text></g><g><title>&lt;u8 as core::default::Default&gt;::default (1 samples, 0.04%)</title><rect x="51.9367%" y="197" width="0.0416%" height="15" fill="rgb(214,7,15)" fg:x="1247" fg:w="1"/><text x="52.1867%" y="207.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (15 samples, 0.62%)</title><rect x="52.6864%" y="245" width="0.6247%" height="15" fill="rgb(235,32,4)" fg:x="1265" fg:w="15"/><text x="52.9364%" y="255.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null::runtime_impl (5 samples, 0.21%)</title><rect x="53.1029%" y="229" width="0.2082%" height="15" fill="rgb(238,90,54)" fg:x="1275" fg:w="5"/><text x="53.3529%" y="239.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::addr (4 samples, 0.17%)</title><rect x="53.1445%" y="213" width="0.1666%" height="15" fill="rgb(213,208,19)" fg:x="1276" fg:w="4"/><text x="53.3945%" y="223.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (8 samples, 0.33%)</title><rect x="54.4773%" y="229" width="0.3332%" height="15" fill="rgb(233,156,4)" fg:x="1308" fg:w="8"/><text x="54.7273%" y="239.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (8 samples, 0.33%)</title><rect x="54.4773%" y="213" width="0.3332%" height="15" fill="rgb(207,194,5)" fg:x="1308" fg:w="8"/><text x="54.7273%" y="223.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.04%)</title><rect x="54.8105%" y="229" width="0.0416%" height="15" fill="rgb(206,111,30)" fg:x="1316" fg:w="1"/><text x="55.0605%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (259 samples, 10.79%)</title><rect x="44.1483%" y="309" width="10.7872%" height="15" fill="rgb(243,70,54)" fg:x="1060" fg:w="259"/><text x="44.3983%" y="319.50">core::iter::trai..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (259 samples, 10.79%)</title><rect x="44.1483%" y="293" width="10.7872%" height="15" fill="rgb(242,28,8)" fg:x="1060" fg:w="259"/><text x="44.3983%" y="303.50">&lt;core::iter::ada..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (257 samples, 10.70%)</title><rect x="44.2316%" y="277" width="10.7039%" height="15" fill="rgb(219,106,18)" fg:x="1062" fg:w="257"/><text x="44.4816%" y="287.50">core::iter::trai..</text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (71 samples, 2.96%)</title><rect x="51.9783%" y="261" width="2.9571%" height="15" fill="rgb(244,222,10)" fg:x="1248" fg:w="71"/><text x="52.2283%" y="271.50">&lt;co..</text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (39 samples, 1.62%)</title><rect x="53.3111%" y="245" width="1.6243%" height="15" fill="rgb(236,179,52)" fg:x="1280" fg:w="39"/><text x="53.5611%" y="255.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (2 samples, 0.08%)</title><rect x="54.8521%" y="229" width="0.0833%" height="15" fill="rgb(213,23,39)" fg:x="1317" fg:w="2"/><text x="55.1021%" y="239.50"></text></g><g><title>core::mem::forget (1 samples, 0.04%)</title><rect x="55.0604%" y="293" width="0.0416%" height="15" fill="rgb(238,48,10)" fg:x="1322" fg:w="1"/><text x="55.3104%" y="303.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (1 samples, 0.04%)</title><rect x="55.1020%" y="293" width="0.0416%" height="15" fill="rgb(251,196,23)" fg:x="1323" fg:w="1"/><text x="55.3520%" y="303.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (1 samples, 0.04%)</title><rect x="55.1020%" y="277" width="0.0416%" height="15" fill="rgb(250,152,24)" fg:x="1323" fg:w="1"/><text x="55.3520%" y="287.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="55.1020%" y="261" width="0.0416%" height="15" fill="rgb(209,150,17)" fg:x="1323" fg:w="1"/><text x="55.3520%" y="271.50"></text></g><g><title>[libc.so.6] (2 samples, 0.08%)</title><rect x="55.1437%" y="277" width="0.0833%" height="15" fill="rgb(234,202,34)" fg:x="1324" fg:w="2"/><text x="55.3937%" y="287.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (8 samples, 0.33%)</title><rect x="54.9354%" y="309" width="0.3332%" height="15" fill="rgb(253,148,53)" fg:x="1319" fg:w="8"/><text x="55.1854%" y="319.50"></text></g><g><title>core::ptr::read (3 samples, 0.12%)</title><rect x="55.1437%" y="293" width="0.1249%" height="15" fill="rgb(218,129,16)" fg:x="1324" fg:w="3"/><text x="55.3937%" y="303.50"></text></g><g><title>memcpy (1 samples, 0.04%)</title><rect x="55.2270%" y="277" width="0.0416%" height="15" fill="rgb(216,85,19)" fg:x="1326" fg:w="1"/><text x="55.4770%" y="287.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.04%)</title><rect x="55.3103%" y="293" width="0.0416%" height="15" fill="rgb(235,228,7)" fg:x="1328" fg:w="1"/><text x="55.5603%" y="303.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (1 samples, 0.04%)</title><rect x="55.3103%" y="277" width="0.0416%" height="15" fill="rgb(245,175,0)" fg:x="1328" fg:w="1"/><text x="55.5603%" y="287.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::encrypt_in_place_detached (936 samples, 38.98%)</title><rect x="16.4931%" y="501" width="38.9838%" height="15" fill="rgb(208,168,36)" fg:x="396" fg:w="936"/><text x="16.7431%" y="511.50">chacha20poly1305::cipher::Cipher&lt;C&gt;::encrypt_in_place_detached</text></g><g><title>cipher::stream::StreamCipher::apply_keystream (936 samples, 38.98%)</title><rect x="16.4931%" y="485" width="38.9838%" height="15" fill="rgb(246,171,24)" fg:x="396" fg:w="936"/><text x="16.7431%" y="495.50">cipher::stream::StreamCipher::apply_keystream</text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (936 samples, 38.98%)</title><rect x="16.4931%" y="469" width="38.9838%" height="15" fill="rgb(215,142,24)" fg:x="396" fg:w="936"/><text x="16.7431%" y="479.50">cipher::stream::StreamCipher::try_apply_keystream</text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (936 samples, 38.98%)</title><rect x="16.4931%" y="453" width="38.9838%" height="15" fill="rgb(250,187,7)" fg:x="396" fg:w="936"/><text x="16.7431%" y="463.50">&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::s..</text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (936 samples, 38.98%)</title><rect x="16.4931%" y="437" width="38.9838%" height="15" fill="rgb(228,66,33)" fg:x="396" fg:w="936"/><text x="16.7431%" y="447.50">cipher::stream_core::StreamCipherCore::apply_keystream_blocks_in..</text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (936 samples, 38.98%)</title><rect x="16.4931%" y="421" width="38.9838%" height="15" fill="rgb(234,215,21)" fg:x="396" fg:w="936"/><text x="16.7431%" y="431.50">&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::Strea..</text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (936 samples, 38.98%)</title><rect x="16.4931%" y="405" width="38.9838%" height="15" fill="rgb(222,191,20)" fg:x="396" fg:w="936"/><text x="16.7431%" y="415.50">&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCor..</text></g><g><title>chacha20::backends::sse2::inner (936 samples, 38.98%)</title><rect x="16.4931%" y="389" width="38.9838%" height="15" fill="rgb(245,79,54)" fg:x="396" fg:w="936"/><text x="16.7431%" y="399.50">chacha20::backends::sse2::inner</text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (936 samples, 38.98%)</title><rect x="16.4931%" y="373" width="38.9838%" height="15" fill="rgb(240,10,37)" fg:x="396" fg:w="936"/><text x="16.7431%" y="383.50">&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core:..</text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;u8,N&gt;&gt;::xor_in2out (275 samples, 11.45%)</title><rect x="44.0233%" y="357" width="11.4536%" height="15" fill="rgb(214,192,32)" fg:x="1057" fg:w="275"/><text x="44.2733%" y="367.50">inout::inout::InO..</text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (273 samples, 11.37%)</title><rect x="44.1066%" y="341" width="11.3703%" height="15" fill="rgb(209,36,54)" fg:x="1059" fg:w="273"/><text x="44.3566%" y="351.50">generic_array::im..</text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (273 samples, 11.37%)</title><rect x="44.1066%" y="325" width="11.3703%" height="15" fill="rgb(220,10,11)" fg:x="1059" fg:w="273"/><text x="44.3566%" y="335.50">&lt;generic_array::G..</text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::iter_position (5 samples, 0.21%)</title><rect x="55.2686%" y="309" width="0.2082%" height="15" fill="rgb(221,106,17)" fg:x="1327" fg:w="5"/><text x="55.5186%" y="319.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (3 samples, 0.12%)</title><rect x="55.3519%" y="293" width="0.1249%" height="15" fill="rgb(251,142,44)" fg:x="1329" fg:w="3"/><text x="55.6019%" y="303.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (3 samples, 0.12%)</title><rect x="55.3519%" y="277" width="0.1249%" height="15" fill="rgb(238,13,15)" fg:x="1329" fg:w="3"/><text x="55.6019%" y="287.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="55.4352%" y="261" width="0.0416%" height="15" fill="rgb(208,107,27)" fg:x="1331" fg:w="1"/><text x="55.6852%" y="271.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cvtsi128_si32 (1 samples, 0.04%)</title><rect x="55.4769%" y="373" width="0.0416%" height="15" fill="rgb(205,136,37)" fg:x="1332" fg:w="1"/><text x="55.7269%" y="383.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (2 samples, 0.08%)</title><rect x="55.4769%" y="437" width="0.0833%" height="15" fill="rgb(250,205,27)" fg:x="1332" fg:w="2"/><text x="55.7269%" y="447.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (2 samples, 0.08%)</title><rect x="55.4769%" y="421" width="0.0833%" height="15" fill="rgb(210,80,43)" fg:x="1332" fg:w="2"/><text x="55.7269%" y="431.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (2 samples, 0.08%)</title><rect x="55.4769%" y="405" width="0.0833%" height="15" fill="rgb(247,160,36)" fg:x="1332" fg:w="2"/><text x="55.7269%" y="415.50"></text></g><g><title>chacha20::backends::sse2::inner (2 samples, 0.08%)</title><rect x="55.4769%" y="389" width="0.0833%" height="15" fill="rgb(234,13,49)" fg:x="1332" fg:w="2"/><text x="55.7269%" y="399.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.04%)</title><rect x="55.5185%" y="373" width="0.0416%" height="15" fill="rgb(234,122,0)" fg:x="1333" fg:w="1"/><text x="55.7685%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.04%)</title><rect x="55.5185%" y="357" width="0.0416%" height="15" fill="rgb(207,146,38)" fg:x="1333" fg:w="1"/><text x="55.7685%" y="367.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_add_epi32 (1 samples, 0.04%)</title><rect x="56.0600%" y="293" width="0.0416%" height="15" fill="rgb(207,177,25)" fg:x="1346" fg:w="1"/><text x="56.3100%" y="303.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_slli_epi32 (2 samples, 0.08%)</title><rect x="56.1016%" y="293" width="0.0833%" height="15" fill="rgb(211,178,42)" fg:x="1347" fg:w="2"/><text x="56.3516%" y="303.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i32x4 (1 samples, 0.04%)</title><rect x="56.1433%" y="277" width="0.0416%" height="15" fill="rgb(230,69,54)" fg:x="1348" fg:w="1"/><text x="56.3933%" y="287.50"></text></g><g><title>tftp::client::client::send_file (955 samples, 39.78%)</title><rect x="16.4931%" y="581" width="39.7751%" height="15" fill="rgb(214,135,41)" fg:x="396" fg:w="955"/><text x="16.7431%" y="591.50">tftp::client::client::send_file</text></g><g><title>&lt;tftp::socket::EncryptionBoundSocket&lt;S&gt; as tftp::socket::Socket&gt;::send_to (955 samples, 39.78%)</title><rect x="16.4931%" y="565" width="39.7751%" height="15" fill="rgb(237,67,25)" fg:x="396" fg:w="955"/><text x="16.7431%" y="575.50">&lt;tftp::socket::EncryptionBoundSocket&lt;S&gt; as tftp::socket::Socket&gt;:..</text></g><g><title>tftp::encryption::Encryptor::encrypt (955 samples, 39.78%)</title><rect x="16.4931%" y="549" width="39.7751%" height="15" fill="rgb(222,189,50)" fg:x="396" fg:w="955"/><text x="16.7431%" y="559.50">tftp::encryption::Encryptor::encrypt</text></g><g><title>aead::AeadInPlace::encrypt_in_place (955 samples, 39.78%)</title><rect x="16.4931%" y="533" width="39.7751%" height="15" fill="rgb(245,148,34)" fg:x="396" fg:w="955"/><text x="16.7431%" y="543.50">aead::AeadInPlace::encrypt_in_place</text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::encrypt_in_place_detached (955 samples, 39.78%)</title><rect x="16.4931%" y="517" width="39.7751%" height="15" fill="rgb(222,29,6)" fg:x="396" fg:w="955"/><text x="16.7431%" y="527.50">&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::enc..</text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (19 samples, 0.79%)</title><rect x="55.4769%" y="501" width="0.7913%" height="15" fill="rgb(221,189,43)" fg:x="1332" fg:w="19"/><text x="55.7269%" y="511.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (19 samples, 0.79%)</title><rect x="55.4769%" y="485" width="0.7913%" height="15" fill="rgb(207,36,27)" fg:x="1332" fg:w="19"/><text x="55.7269%" y="495.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (19 samples, 0.79%)</title><rect x="55.4769%" y="469" width="0.7913%" height="15" fill="rgb(217,90,24)" fg:x="1332" fg:w="19"/><text x="55.7269%" y="479.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (19 samples, 0.79%)</title><rect x="55.4769%" y="453" width="0.7913%" height="15" fill="rgb(224,66,35)" fg:x="1332" fg:w="19"/><text x="55.7269%" y="463.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::write_keystream_block (17 samples, 0.71%)</title><rect x="55.5602%" y="437" width="0.7080%" height="15" fill="rgb(221,13,50)" fg:x="1334" fg:w="17"/><text x="55.8102%" y="447.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (17 samples, 0.71%)</title><rect x="55.5602%" y="421" width="0.7080%" height="15" fill="rgb(236,68,49)" fg:x="1334" fg:w="17"/><text x="55.8102%" y="431.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (17 samples, 0.71%)</title><rect x="55.5602%" y="405" width="0.7080%" height="15" fill="rgb(229,146,28)" fg:x="1334" fg:w="17"/><text x="55.8102%" y="415.50"></text></g><g><title>chacha20::backends::sse2::inner (17 samples, 0.71%)</title><rect x="55.5602%" y="389" width="0.7080%" height="15" fill="rgb(225,31,38)" fg:x="1334" fg:w="17"/><text x="55.8102%" y="399.50"></text></g><g><title>&lt;cipher::stream_core::WriteBlockCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (17 samples, 0.71%)</title><rect x="55.5602%" y="373" width="0.7080%" height="15" fill="rgb(250,208,3)" fg:x="1334" fg:w="17"/><text x="55.8102%" y="383.50"></text></g><g><title>&lt;chacha20::backends::sse2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (17 samples, 0.71%)</title><rect x="55.5602%" y="357" width="0.7080%" height="15" fill="rgb(246,54,23)" fg:x="1334" fg:w="17"/><text x="55.8102%" y="367.50"></text></g><g><title>chacha20::backends::sse2::rounds (17 samples, 0.71%)</title><rect x="55.5602%" y="341" width="0.7080%" height="15" fill="rgb(243,76,11)" fg:x="1334" fg:w="17"/><text x="55.8102%" y="351.50"></text></g><g><title>chacha20::backends::sse2::double_quarter_round (17 samples, 0.71%)</title><rect x="55.5602%" y="325" width="0.7080%" height="15" fill="rgb(245,21,50)" fg:x="1334" fg:w="17"/><text x="55.8102%" y="335.50"></text></g><g><title>chacha20::backends::sse2::add_xor_rot (17 samples, 0.71%)</title><rect x="55.5602%" y="309" width="0.7080%" height="15" fill="rgb(228,9,43)" fg:x="1334" fg:w="17"/><text x="55.8102%" y="319.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_xor_si128 (2 samples, 0.08%)</title><rect x="56.1849%" y="293" width="0.0833%" height="15" fill="rgb(208,100,47)" fg:x="1349" fg:w="2"/><text x="56.4349%" y="303.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as crypto_common::KeyIvInit&gt;::new (1 samples, 0.04%)</title><rect x="56.2682%" y="469" width="0.0416%" height="15" fill="rgb(232,26,8)" fg:x="1351" fg:w="1"/><text x="56.5182%" y="479.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (1 samples, 0.04%)</title><rect x="56.2682%" y="453" width="0.0416%" height="15" fill="rgb(216,166,38)" fg:x="1351" fg:w="1"/><text x="56.5182%" y="463.50"></text></g><g><title>chacha20::xchacha::hchacha (1 samples, 0.04%)</title><rect x="56.2682%" y="437" width="0.0416%" height="15" fill="rgb(251,202,51)" fg:x="1351" fg:w="1"/><text x="56.5182%" y="447.50"></text></g><g><title>chacha20::xchacha::quarter_round (1 samples, 0.04%)</title><rect x="56.2682%" y="421" width="0.0416%" height="15" fill="rgb(254,216,34)" fg:x="1351" fg:w="1"/><text x="56.5182%" y="431.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (1 samples, 0.04%)</title><rect x="56.3099%" y="453" width="0.0416%" height="15" fill="rgb(251,32,27)" fg:x="1352" fg:w="1"/><text x="56.5599%" y="463.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (1 samples, 0.04%)</title><rect x="56.3099%" y="437" width="0.0416%" height="15" fill="rgb(208,127,28)" fg:x="1352" fg:w="1"/><text x="56.5599%" y="447.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (1 samples, 0.04%)</title><rect x="56.3099%" y="421" width="0.0416%" height="15" fill="rgb(224,137,22)" fg:x="1352" fg:w="1"/><text x="56.5599%" y="431.50"></text></g><g><title>cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt;::check_remaining (1 samples, 0.04%)</title><rect x="56.3099%" y="405" width="0.0416%" height="15" fill="rgb(254,70,32)" fg:x="1352" fg:w="1"/><text x="56.5599%" y="415.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::remaining_blocks (1 samples, 0.04%)</title><rect x="56.3099%" y="389" width="0.0416%" height="15" fill="rgb(229,75,37)" fg:x="1352" fg:w="1"/><text x="56.5599%" y="399.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::remaining_blocks (1 samples, 0.04%)</title><rect x="56.3099%" y="373" width="0.0416%" height="15" fill="rgb(252,64,23)" fg:x="1352" fg:w="1"/><text x="56.5599%" y="383.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::ok (1 samples, 0.04%)</title><rect x="56.3099%" y="357" width="0.0416%" height="15" fill="rgb(232,162,48)" fg:x="1352" fg:w="1"/><text x="56.5599%" y="367.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.04%)</title><rect x="56.3515%" y="437" width="0.0416%" height="15" fill="rgb(246,160,12)" fg:x="1353" fg:w="1"/><text x="56.6015%" y="447.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.04%)</title><rect x="56.3515%" y="421" width="0.0416%" height="15" fill="rgb(247,166,0)" fg:x="1353" fg:w="1"/><text x="56.6015%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.04%)</title><rect x="56.3515%" y="405" width="0.0416%" height="15" fill="rgb(249,219,21)" fg:x="1353" fg:w="1"/><text x="56.6015%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.04%)</title><rect x="56.3515%" y="389" width="0.0416%" height="15" fill="rgb(205,209,3)" fg:x="1353" fg:w="1"/><text x="56.6015%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.04%)</title><rect x="56.3515%" y="373" width="0.0416%" height="15" fill="rgb(243,44,1)" fg:x="1353" fg:w="1"/><text x="56.6015%" y="383.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="56.3515%" y="357" width="0.0416%" height="15" fill="rgb(206,159,16)" fg:x="1353" fg:w="1"/><text x="56.6015%" y="367.50"></text></g><g><title>universal_hash::UniversalHash::update_padded (2 samples, 0.08%)</title><rect x="56.3515%" y="453" width="0.0833%" height="15" fill="rgb(244,77,30)" fg:x="1353" fg:w="2"/><text x="56.6015%" y="463.50"></text></g><g><title>universal_hash::UniversalHash::update (1 samples, 0.04%)</title><rect x="56.3932%" y="437" width="0.0416%" height="15" fill="rgb(218,69,12)" fg:x="1354" fg:w="1"/><text x="56.6432%" y="447.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (1 samples, 0.04%)</title><rect x="56.3932%" y="421" width="0.0416%" height="15" fill="rgb(212,87,7)" fg:x="1354" fg:w="1"/><text x="56.6432%" y="431.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (1 samples, 0.04%)</title><rect x="56.3932%" y="405" width="0.0416%" height="15" fill="rgb(245,114,25)" fg:x="1354" fg:w="1"/><text x="56.6432%" y="415.50"></text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (1 samples, 0.04%)</title><rect x="56.3932%" y="389" width="0.0416%" height="15" fill="rgb(210,61,42)" fg:x="1354" fg:w="1"/><text x="56.6432%" y="399.50"></text></g><g><title>&lt;poly1305::backend::soft::State as universal_hash::UhfBackend&gt;::proc_block (1 samples, 0.04%)</title><rect x="56.3932%" y="373" width="0.0416%" height="15" fill="rgb(211,52,33)" fg:x="1354" fg:w="1"/><text x="56.6432%" y="383.50"></text></g><g><title>poly1305::backend::soft::State::compute_block (1 samples, 0.04%)</title><rect x="56.3932%" y="357" width="0.0416%" height="15" fill="rgb(234,58,33)" fg:x="1354" fg:w="1"/><text x="56.6432%" y="367.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::decrypt_in_place_detached (4 samples, 0.17%)</title><rect x="56.3099%" y="469" width="0.1666%" height="15" fill="rgb(220,115,36)" fg:x="1352" fg:w="4"/><text x="56.5599%" y="479.50"></text></g><g><title>universal_hash::UniversalHash::verify (1 samples, 0.04%)</title><rect x="56.4348%" y="453" width="0.0416%" height="15" fill="rgb(243,153,54)" fg:x="1355" fg:w="1"/><text x="56.6848%" y="463.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::finalize (1 samples, 0.04%)</title><rect x="56.4348%" y="437" width="0.0416%" height="15" fill="rgb(251,47,18)" fg:x="1355" fg:w="1"/><text x="56.6848%" y="447.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::finalize (1 samples, 0.04%)</title><rect x="56.4348%" y="421" width="0.0416%" height="15" fill="rgb(242,102,42)" fg:x="1355" fg:w="1"/><text x="56.6848%" y="431.50"></text></g><g><title>poly1305::backend::soft::State::finalize_mut (1 samples, 0.04%)</title><rect x="56.4348%" y="405" width="0.0416%" height="15" fill="rgb(234,31,38)" fg:x="1355" fg:w="1"/><text x="56.6848%" y="415.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.04%)</title><rect x="56.4348%" y="389" width="0.0416%" height="15" fill="rgb(221,117,51)" fg:x="1355" fg:w="1"/><text x="56.6848%" y="399.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.04%)</title><rect x="56.4348%" y="373" width="0.0416%" height="15" fill="rgb(212,20,18)" fg:x="1355" fg:w="1"/><text x="56.6848%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.04%)</title><rect x="56.4348%" y="357" width="0.0416%" height="15" fill="rgb(245,133,36)" fg:x="1355" fg:w="1"/><text x="56.6848%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.04%)</title><rect x="56.4348%" y="341" width="0.0416%" height="15" fill="rgb(212,6,19)" fg:x="1355" fg:w="1"/><text x="56.6848%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.04%)</title><rect x="56.4348%" y="325" width="0.0416%" height="15" fill="rgb(218,1,36)" fg:x="1355" fg:w="1"/><text x="56.6848%" y="335.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="56.4348%" y="309" width="0.0416%" height="15" fill="rgb(246,84,54)" fg:x="1355" fg:w="1"/><text x="56.6848%" y="319.50"></text></g><g><title>&lt;[Z] as zeroize::Zeroize&gt;::zeroize (1 samples, 0.04%)</title><rect x="56.4765%" y="453" width="0.0416%" height="15" fill="rgb(242,110,6)" fg:x="1356" fg:w="1"/><text x="56.7265%" y="463.50"></text></g><g><title>zeroize::volatile_set (1 samples, 0.04%)</title><rect x="56.4765%" y="437" width="0.0416%" height="15" fill="rgb(214,47,5)" fg:x="1356" fg:w="1"/><text x="56.7265%" y="447.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.04%)</title><rect x="56.4765%" y="421" width="0.0416%" height="15" fill="rgb(218,159,25)" fg:x="1356" fg:w="1"/><text x="56.7265%" y="431.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.04%)</title><rect x="56.4765%" y="405" width="0.0416%" height="15" fill="rgb(215,211,28)" fg:x="1356" fg:w="1"/><text x="56.7265%" y="415.50"></text></g><g><title>core::mem::replace (1 samples, 0.04%)</title><rect x="56.4765%" y="389" width="0.0416%" height="15" fill="rgb(238,59,32)" fg:x="1356" fg:w="1"/><text x="56.7265%" y="399.50"></text></g><g><title>&lt;tftp::socket::EncryptionBoundSocket&lt;S&gt; as tftp::socket::Socket&gt;::recv_from (7 samples, 0.29%)</title><rect x="56.2682%" y="533" width="0.2915%" height="15" fill="rgb(226,82,3)" fg:x="1351" fg:w="7"/><text x="56.5182%" y="543.50"></text></g><g><title>tftp::encryption::Encryptor::decrypt (7 samples, 0.29%)</title><rect x="56.2682%" y="517" width="0.2915%" height="15" fill="rgb(240,164,32)" fg:x="1351" fg:w="7"/><text x="56.5182%" y="527.50"></text></g><g><title>aead::AeadInPlace::decrypt_in_place (7 samples, 0.29%)</title><rect x="56.2682%" y="501" width="0.2915%" height="15" fill="rgb(232,46,7)" fg:x="1351" fg:w="7"/><text x="56.5182%" y="511.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (7 samples, 0.29%)</title><rect x="56.2682%" y="485" width="0.2915%" height="15" fill="rgb(229,129,53)" fg:x="1351" fg:w="7"/><text x="56.5182%" y="495.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (2 samples, 0.08%)</title><rect x="56.4765%" y="469" width="0.0833%" height="15" fill="rgb(234,188,29)" fg:x="1356" fg:w="2"/><text x="56.7265%" y="479.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.04%)</title><rect x="56.5181%" y="453" width="0.0416%" height="15" fill="rgb(246,141,4)" fg:x="1357" fg:w="1"/><text x="56.7681%" y="463.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.04%)</title><rect x="56.5181%" y="437" width="0.0416%" height="15" fill="rgb(229,23,39)" fg:x="1357" fg:w="1"/><text x="56.7681%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.04%)</title><rect x="56.5181%" y="421" width="0.0416%" height="15" fill="rgb(206,12,3)" fg:x="1357" fg:w="1"/><text x="56.7681%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.04%)</title><rect x="56.5181%" y="405" width="0.0416%" height="15" fill="rgb(252,226,20)" fg:x="1357" fg:w="1"/><text x="56.7681%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.04%)</title><rect x="56.5181%" y="389" width="0.0416%" height="15" fill="rgb(216,123,35)" fg:x="1357" fg:w="1"/><text x="56.7681%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.04%)</title><rect x="56.5181%" y="373" width="0.0416%" height="15" fill="rgb(212,68,40)" fg:x="1357" fg:w="1"/><text x="56.7681%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as aead::Buffer&gt;::extend_from_slice (1 samples, 0.04%)</title><rect x="56.5598%" y="485" width="0.0416%" height="15" fill="rgb(254,125,32)" fg:x="1358" fg:w="1"/><text x="56.8098%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.04%)</title><rect x="56.5598%" y="469" width="0.0416%" height="15" fill="rgb(253,97,22)" fg:x="1358" fg:w="1"/><text x="56.8098%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.04%)</title><rect x="56.5598%" y="453" width="0.0416%" height="15" fill="rgb(241,101,14)" fg:x="1358" fg:w="1"/><text x="56.8098%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.04%)</title><rect x="56.5598%" y="437" width="0.0416%" height="15" fill="rgb(238,103,29)" fg:x="1358" fg:w="1"/><text x="56.8098%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="56.5598%" y="421" width="0.0416%" height="15" fill="rgb(233,195,47)" fg:x="1358" fg:w="1"/><text x="56.8098%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="56.5598%" y="405" width="0.0416%" height="15" fill="rgb(246,218,30)" fg:x="1358" fg:w="1"/><text x="56.8098%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.04%)</title><rect x="56.5598%" y="389" width="0.0416%" height="15" fill="rgb(219,145,47)" fg:x="1358" fg:w="1"/><text x="56.8098%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.04%)</title><rect x="56.5598%" y="373" width="0.0416%" height="15" fill="rgb(243,12,26)" fg:x="1358" fg:w="1"/><text x="56.8098%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.04%)</title><rect x="56.5598%" y="357" width="0.0416%" height="15" fill="rgb(214,87,16)" fg:x="1358" fg:w="1"/><text x="56.8098%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.04%)</title><rect x="56.5598%" y="341" width="0.0416%" height="15" fill="rgb(208,99,42)" fg:x="1358" fg:w="1"/><text x="56.8098%" y="351.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.04%)</title><rect x="56.5598%" y="325" width="0.0416%" height="15" fill="rgb(253,99,2)" fg:x="1358" fg:w="1"/><text x="56.8098%" y="335.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.04%)</title><rect x="56.5598%" y="309" width="0.0416%" height="15" fill="rgb(220,168,23)" fg:x="1358" fg:w="1"/><text x="56.8098%" y="319.50"></text></g><g><title>__rust_realloc (1 samples, 0.04%)</title><rect x="56.5598%" y="293" width="0.0416%" height="15" fill="rgb(242,38,24)" fg:x="1358" fg:w="1"/><text x="56.8098%" y="303.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (5 samples, 0.21%)</title><rect x="56.6014%" y="421" width="0.2082%" height="15" fill="rgb(225,182,9)" fg:x="1359" fg:w="5"/><text x="56.8514%" y="431.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (4 samples, 0.17%)</title><rect x="56.6431%" y="405" width="0.1666%" height="15" fill="rgb(243,178,37)" fg:x="1360" fg:w="4"/><text x="56.8931%" y="415.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (3 samples, 0.12%)</title><rect x="56.6847%" y="389" width="0.1249%" height="15" fill="rgb(232,139,19)" fg:x="1361" fg:w="3"/><text x="56.9347%" y="399.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from::{{closure}} (1 samples, 0.04%)</title><rect x="56.7680%" y="373" width="0.0416%" height="15" fill="rgb(225,201,24)" fg:x="1363" fg:w="1"/><text x="57.0180%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="56.8097%" y="421" width="0.0416%" height="15" fill="rgb(221,47,46)" fg:x="1364" fg:w="1"/><text x="57.0597%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.04%)</title><rect x="56.8097%" y="405" width="0.0416%" height="15" fill="rgb(249,23,13)" fg:x="1364" fg:w="1"/><text x="57.0597%" y="415.50"></text></g><g><title>&lt;core::slice::iter::ChunksExact&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (1 samples, 0.04%)</title><rect x="56.8097%" y="389" width="0.0416%" height="15" fill="rgb(219,9,5)" fg:x="1364" fg:w="1"/><text x="57.0597%" y="399.50"></text></g><g><title>core::slice::raw::from_raw_parts (1 samples, 0.04%)</title><rect x="56.8097%" y="373" width="0.0416%" height="15" fill="rgb(254,171,16)" fg:x="1364" fg:w="1"/><text x="57.0597%" y="383.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.04%)</title><rect x="56.8097%" y="357" width="0.0416%" height="15" fill="rgb(230,171,20)" fg:x="1364" fg:w="1"/><text x="57.0597%" y="367.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (1 samples, 0.04%)</title><rect x="56.8097%" y="341" width="0.0416%" height="15" fill="rgb(210,71,41)" fg:x="1364" fg:w="1"/><text x="57.0597%" y="351.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_le_bytes (1 samples, 0.04%)</title><rect x="56.8513%" y="421" width="0.0416%" height="15" fill="rgb(206,173,20)" fg:x="1365" fg:w="1"/><text x="57.1013%" y="431.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_ne_bytes (1 samples, 0.04%)</title><rect x="56.8513%" y="405" width="0.0416%" height="15" fill="rgb(233,88,34)" fg:x="1365" fg:w="1"/><text x="57.1013%" y="415.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::chunks_exact (1 samples, 0.04%)</title><rect x="56.8930%" y="421" width="0.0416%" height="15" fill="rgb(223,209,46)" fg:x="1366" fg:w="1"/><text x="57.1430%" y="431.50"></text></g><g><title>core::slice::iter::ChunksExact&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="56.8930%" y="405" width="0.0416%" height="15" fill="rgb(250,43,18)" fg:x="1366" fg:w="1"/><text x="57.1430%" y="415.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (1 samples, 0.04%)</title><rect x="56.8930%" y="389" width="0.0416%" height="15" fill="rgb(208,13,10)" fg:x="1366" fg:w="1"/><text x="57.1430%" y="399.50"></text></g><g><title>core::slice::raw::from_raw_parts (1 samples, 0.04%)</title><rect x="56.8930%" y="373" width="0.0416%" height="15" fill="rgb(212,200,36)" fg:x="1366" fg:w="1"/><text x="57.1430%" y="383.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.04%)</title><rect x="56.8930%" y="357" width="0.0416%" height="15" fill="rgb(225,90,30)" fg:x="1366" fg:w="1"/><text x="57.1430%" y="367.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (1 samples, 0.04%)</title><rect x="56.8930%" y="341" width="0.0416%" height="15" fill="rgb(236,182,39)" fg:x="1366" fg:w="1"/><text x="57.1430%" y="351.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (9 samples, 0.37%)</title><rect x="56.6014%" y="437" width="0.3748%" height="15" fill="rgb(212,144,35)" fg:x="1359" fg:w="9"/><text x="56.8514%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (1 samples, 0.04%)</title><rect x="56.9346%" y="421" width="0.0416%" height="15" fill="rgb(228,63,44)" fg:x="1367" fg:w="1"/><text x="57.1846%" y="431.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (2 samples, 0.08%)</title><rect x="57.0179%" y="421" width="0.0833%" height="15" fill="rgb(228,109,6)" fg:x="1369" fg:w="2"/><text x="57.2679%" y="431.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (3 samples, 0.12%)</title><rect x="57.1012%" y="421" width="0.1249%" height="15" fill="rgb(238,117,24)" fg:x="1371" fg:w="3"/><text x="57.3512%" y="431.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (3 samples, 0.12%)</title><rect x="57.1012%" y="405" width="0.1249%" height="15" fill="rgb(242,26,26)" fg:x="1371" fg:w="3"/><text x="57.3512%" y="415.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (3 samples, 0.12%)</title><rect x="57.1012%" y="389" width="0.1249%" height="15" fill="rgb(221,92,48)" fg:x="1371" fg:w="3"/><text x="57.3512%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.17%)</title><rect x="57.2262%" y="421" width="0.1666%" height="15" fill="rgb(209,209,32)" fg:x="1374" fg:w="4"/><text x="57.4762%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (2 samples, 0.08%)</title><rect x="57.3095%" y="405" width="0.0833%" height="15" fill="rgb(221,70,22)" fg:x="1376" fg:w="2"/><text x="57.5595%" y="415.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (1 samples, 0.04%)</title><rect x="57.3511%" y="389" width="0.0416%" height="15" fill="rgb(248,145,5)" fg:x="1377" fg:w="1"/><text x="57.6011%" y="399.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (3 samples, 0.12%)</title><rect x="58.2257%" y="405" width="0.1249%" height="15" fill="rgb(226,116,26)" fg:x="1398" fg:w="3"/><text x="58.4757%" y="415.50"></text></g><g><title>chacha20::xchacha::quarter_round (24 samples, 1.00%)</title><rect x="57.3928%" y="421" width="0.9996%" height="15" fill="rgb(244,5,17)" fg:x="1378" fg:w="24"/><text x="57.6428%" y="431.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.04%)</title><rect x="58.3507%" y="405" width="0.0416%" height="15" fill="rgb(252,159,33)" fg:x="1401" fg:w="1"/><text x="58.6007%" y="415.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.04%)</title><rect x="58.3923%" y="389" width="0.0416%" height="15" fill="rgb(206,71,0)" fg:x="1402" fg:w="1"/><text x="58.6423%" y="399.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.08%)</title><rect x="58.3923%" y="421" width="0.0833%" height="15" fill="rgb(233,118,54)" fg:x="1402" fg:w="2"/><text x="58.6423%" y="431.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.08%)</title><rect x="58.3923%" y="405" width="0.0833%" height="15" fill="rgb(234,83,48)" fg:x="1402" fg:w="2"/><text x="58.6423%" y="415.50"></text></g><g><title>core::mem::replace (1 samples, 0.04%)</title><rect x="58.4340%" y="389" width="0.0416%" height="15" fill="rgb(228,3,54)" fg:x="1403" fg:w="1"/><text x="58.6840%" y="399.50"></text></g><g><title>core::ptr::read (1 samples, 0.04%)</title><rect x="58.4340%" y="373" width="0.0416%" height="15" fill="rgb(226,155,13)" fg:x="1403" fg:w="1"/><text x="58.6840%" y="383.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.04%)</title><rect x="58.5173%" y="405" width="0.0416%" height="15" fill="rgb(241,28,37)" fg:x="1405" fg:w="1"/><text x="58.7673%" y="415.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="58.5173%" y="389" width="0.0416%" height="15" fill="rgb(233,93,10)" fg:x="1405" fg:w="1"/><text x="58.7673%" y="399.50"></text></g><g><title>core::cmp::min (1 samples, 0.04%)</title><rect x="58.5589%" y="373" width="0.0416%" height="15" fill="rgb(225,113,19)" fg:x="1406" fg:w="1"/><text x="58.8089%" y="383.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.04%)</title><rect x="58.5589%" y="357" width="0.0416%" height="15" fill="rgb(241,2,18)" fg:x="1406" fg:w="1"/><text x="58.8089%" y="367.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.04%)</title><rect x="58.5589%" y="341" width="0.0416%" height="15" fill="rgb(228,207,21)" fg:x="1406" fg:w="1"/><text x="58.8089%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (2 samples, 0.08%)</title><rect x="58.5589%" y="389" width="0.0833%" height="15" fill="rgb(213,211,35)" fg:x="1406" fg:w="2"/><text x="58.8089%" y="399.50"></text></g><g><title>core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size (1 samples, 0.04%)</title><rect x="58.6006%" y="373" width="0.0416%" height="15" fill="rgb(209,83,10)" fg:x="1407" fg:w="1"/><text x="58.8506%" y="383.50"></text></g><g><title>&lt;core::slice::iter::ChunksExact&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.04%)</title><rect x="58.6006%" y="357" width="0.0416%" height="15" fill="rgb(209,164,1)" fg:x="1407" fg:w="1"/><text x="58.8506%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (5 samples, 0.21%)</title><rect x="58.4756%" y="421" width="0.2082%" height="15" fill="rgb(213,184,43)" fg:x="1404" fg:w="5"/><text x="58.7256%" y="431.50"></text></g><g><title>core::iter::adapters::zip::Zip&lt;A,B&gt;::new (3 samples, 0.12%)</title><rect x="58.5589%" y="405" width="0.1249%" height="15" fill="rgb(231,61,34)" fg:x="1406" fg:w="3"/><text x="58.8089%" y="415.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="58.6422%" y="389" width="0.0416%" height="15" fill="rgb(235,75,3)" fg:x="1408" fg:w="1"/><text x="58.8922%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (8 samples, 0.33%)</title><rect x="58.7255%" y="341" width="0.3332%" height="15" fill="rgb(220,106,47)" fg:x="1410" fg:w="8"/><text x="58.9755%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (6 samples, 0.25%)</title><rect x="58.8088%" y="325" width="0.2499%" height="15" fill="rgb(210,196,33)" fg:x="1412" fg:w="6"/><text x="59.0588%" y="335.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (5 samples, 0.21%)</title><rect x="58.8505%" y="309" width="0.2082%" height="15" fill="rgb(229,154,42)" fg:x="1413" fg:w="5"/><text x="59.1005%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (11 samples, 0.46%)</title><rect x="58.7255%" y="389" width="0.4581%" height="15" fill="rgb(228,114,26)" fg:x="1410" fg:w="11"/><text x="58.9755%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11 samples, 0.46%)</title><rect x="58.7255%" y="373" width="0.4581%" height="15" fill="rgb(208,144,1)" fg:x="1410" fg:w="11"/><text x="58.9755%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (11 samples, 0.46%)</title><rect x="58.7255%" y="357" width="0.4581%" height="15" fill="rgb(239,112,37)" fg:x="1410" fg:w="11"/><text x="58.9755%" y="367.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.12%)</title><rect x="59.0587%" y="341" width="0.1249%" height="15" fill="rgb(210,96,50)" fg:x="1418" fg:w="3"/><text x="59.3087%" y="351.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (2 samples, 0.08%)</title><rect x="59.1004%" y="325" width="0.0833%" height="15" fill="rgb(222,178,2)" fg:x="1419" fg:w="2"/><text x="59.3504%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.04%)</title><rect x="59.1420%" y="309" width="0.0416%" height="15" fill="rgb(226,74,18)" fg:x="1420" fg:w="1"/><text x="59.3920%" y="319.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.04%)</title><rect x="59.1420%" y="293" width="0.0416%" height="15" fill="rgb(225,67,54)" fg:x="1420" fg:w="1"/><text x="59.3920%" y="303.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as crypto_common::KeyIvInit&gt;::new (64 samples, 2.67%)</title><rect x="56.6014%" y="469" width="2.6656%" height="15" fill="rgb(251,92,32)" fg:x="1359" fg:w="64"/><text x="56.8514%" y="479.50">&lt;c..</text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (64 samples, 2.67%)</title><rect x="56.6014%" y="453" width="2.6656%" height="15" fill="rgb(228,149,22)" fg:x="1359" fg:w="64"/><text x="56.8514%" y="463.50">&lt;c..</text></g><g><title>chacha20::xchacha::hchacha (55 samples, 2.29%)</title><rect x="56.9763%" y="437" width="2.2907%" height="15" fill="rgb(243,54,13)" fg:x="1368" fg:w="55"/><text x="57.2263%" y="447.50">c..</text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (14 samples, 0.58%)</title><rect x="58.6839%" y="421" width="0.5831%" height="15" fill="rgb(243,180,28)" fg:x="1409" fg:w="14"/><text x="58.9339%" y="431.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (14 samples, 0.58%)</title><rect x="58.6839%" y="405" width="0.5831%" height="15" fill="rgb(208,167,24)" fg:x="1409" fg:w="14"/><text x="58.9339%" y="415.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (2 samples, 0.08%)</title><rect x="59.1837%" y="389" width="0.0833%" height="15" fill="rgb(245,73,45)" fg:x="1421" fg:w="2"/><text x="59.4337%" y="399.50"></text></g><g><title>core::mem::forget (1 samples, 0.04%)</title><rect x="59.2253%" y="373" width="0.0416%" height="15" fill="rgb(237,203,48)" fg:x="1422" fg:w="1"/><text x="59.4753%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (3 samples, 0.12%)</title><rect x="59.3503%" y="325" width="0.1249%" height="15" fill="rgb(211,197,16)" fg:x="1425" fg:w="3"/><text x="59.6003%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (3 samples, 0.12%)</title><rect x="59.3503%" y="309" width="0.1249%" height="15" fill="rgb(243,99,51)" fg:x="1425" fg:w="3"/><text x="59.6003%" y="319.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (3 samples, 0.12%)</title><rect x="59.3503%" y="293" width="0.1249%" height="15" fill="rgb(215,123,29)" fg:x="1425" fg:w="3"/><text x="59.6003%" y="303.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::finalize (6 samples, 0.25%)</title><rect x="59.2670%" y="453" width="0.2499%" height="15" fill="rgb(239,186,37)" fg:x="1423" fg:w="6"/><text x="59.5170%" y="463.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::finalize (6 samples, 0.25%)</title><rect x="59.2670%" y="437" width="0.2499%" height="15" fill="rgb(252,136,39)" fg:x="1423" fg:w="6"/><text x="59.5170%" y="447.50"></text></g><g><title>poly1305::backend::soft::State::finalize_mut (6 samples, 0.25%)</title><rect x="59.2670%" y="421" width="0.2499%" height="15" fill="rgb(223,213,32)" fg:x="1423" fg:w="6"/><text x="59.5170%" y="431.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (4 samples, 0.17%)</title><rect x="59.3503%" y="405" width="0.1666%" height="15" fill="rgb(233,115,5)" fg:x="1425" fg:w="4"/><text x="59.6003%" y="415.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (4 samples, 0.17%)</title><rect x="59.3503%" y="389" width="0.1666%" height="15" fill="rgb(207,226,44)" fg:x="1425" fg:w="4"/><text x="59.6003%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.17%)</title><rect x="59.3503%" y="373" width="0.1666%" height="15" fill="rgb(208,126,0)" fg:x="1425" fg:w="4"/><text x="59.6003%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.17%)</title><rect x="59.3503%" y="357" width="0.1666%" height="15" fill="rgb(244,66,21)" fg:x="1425" fg:w="4"/><text x="59.6003%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.17%)</title><rect x="59.3503%" y="341" width="0.1666%" height="15" fill="rgb(222,97,12)" fg:x="1425" fg:w="4"/><text x="59.6003%" y="351.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="59.4752%" y="325" width="0.0416%" height="15" fill="rgb(219,213,19)" fg:x="1428" fg:w="1"/><text x="59.7252%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.04%)</title><rect x="59.6002%" y="357" width="0.0416%" height="15" fill="rgb(252,169,30)" fg:x="1431" fg:w="1"/><text x="59.8502%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.04%)</title><rect x="59.6002%" y="341" width="0.0416%" height="15" fill="rgb(206,32,51)" fg:x="1431" fg:w="1"/><text x="59.8502%" y="351.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (1 samples, 0.04%)</title><rect x="59.6002%" y="325" width="0.0416%" height="15" fill="rgb(250,172,42)" fg:x="1431" fg:w="1"/><text x="59.8502%" y="335.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (4 samples, 0.17%)</title><rect x="59.5169%" y="437" width="0.1666%" height="15" fill="rgb(209,34,43)" fg:x="1429" fg:w="4"/><text x="59.7669%" y="447.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (4 samples, 0.17%)</title><rect x="59.5169%" y="421" width="0.1666%" height="15" fill="rgb(223,11,35)" fg:x="1429" fg:w="4"/><text x="59.7669%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.17%)</title><rect x="59.5169%" y="405" width="0.1666%" height="15" fill="rgb(251,219,26)" fg:x="1429" fg:w="4"/><text x="59.7669%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.17%)</title><rect x="59.5169%" y="389" width="0.1666%" height="15" fill="rgb(231,119,3)" fg:x="1429" fg:w="4"/><text x="59.7669%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.17%)</title><rect x="59.5169%" y="373" width="0.1666%" height="15" fill="rgb(216,97,11)" fg:x="1429" fg:w="4"/><text x="59.7669%" y="383.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="59.6418%" y="357" width="0.0416%" height="15" fill="rgb(223,59,9)" fg:x="1432" fg:w="1"/><text x="59.8918%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="59.6418%" y="341" width="0.0416%" height="15" fill="rgb(233,93,31)" fg:x="1432" fg:w="1"/><text x="59.8918%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null::runtime_impl (1 samples, 0.04%)</title><rect x="59.6418%" y="325" width="0.0416%" height="15" fill="rgb(239,81,33)" fg:x="1432" fg:w="1"/><text x="59.8918%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::addr (1 samples, 0.04%)</title><rect x="59.6418%" y="309" width="0.0416%" height="15" fill="rgb(213,120,34)" fg:x="1432" fg:w="1"/><text x="59.8918%" y="319.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (1 samples, 0.04%)</title><rect x="59.7251%" y="341" width="0.0416%" height="15" fill="rgb(243,49,53)" fg:x="1434" fg:w="1"/><text x="59.9751%" y="351.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (1 samples, 0.04%)</title><rect x="59.7251%" y="325" width="0.0416%" height="15" fill="rgb(247,216,33)" fg:x="1434" fg:w="1"/><text x="59.9751%" y="335.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.04%)</title><rect x="59.7251%" y="309" width="0.0416%" height="15" fill="rgb(226,26,14)" fg:x="1434" fg:w="1"/><text x="59.9751%" y="319.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (1 samples, 0.04%)</title><rect x="59.7668%" y="341" width="0.0416%" height="15" fill="rgb(215,49,53)" fg:x="1435" fg:w="1"/><text x="60.0168%" y="351.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::authenticate_lengths (8 samples, 0.33%)</title><rect x="59.5169%" y="453" width="0.3332%" height="15" fill="rgb(245,162,40)" fg:x="1429" fg:w="8"/><text x="59.7669%" y="463.50"></text></g><g><title>universal_hash::UniversalHash::update (4 samples, 0.17%)</title><rect x="59.6835%" y="437" width="0.1666%" height="15" fill="rgb(229,68,17)" fg:x="1433" fg:w="4"/><text x="59.9335%" y="447.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (4 samples, 0.17%)</title><rect x="59.6835%" y="421" width="0.1666%" height="15" fill="rgb(213,182,10)" fg:x="1433" fg:w="4"/><text x="59.9335%" y="431.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (4 samples, 0.17%)</title><rect x="59.6835%" y="405" width="0.1666%" height="15" fill="rgb(245,125,30)" fg:x="1433" fg:w="4"/><text x="59.9335%" y="415.50"></text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (4 samples, 0.17%)</title><rect x="59.6835%" y="389" width="0.1666%" height="15" fill="rgb(232,202,2)" fg:x="1433" fg:w="4"/><text x="59.9335%" y="399.50"></text></g><g><title>&lt;poly1305::backend::soft::State as universal_hash::UhfBackend&gt;::proc_block (4 samples, 0.17%)</title><rect x="59.6835%" y="373" width="0.1666%" height="15" fill="rgb(237,140,51)" fg:x="1433" fg:w="4"/><text x="59.9335%" y="383.50"></text></g><g><title>poly1305::backend::soft::State::compute_block (4 samples, 0.17%)</title><rect x="59.6835%" y="357" width="0.1666%" height="15" fill="rgb(236,157,25)" fg:x="1433" fg:w="4"/><text x="59.9335%" y="367.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.04%)</title><rect x="59.8084%" y="341" width="0.0416%" height="15" fill="rgb(219,209,0)" fg:x="1436" fg:w="1"/><text x="60.0584%" y="351.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.04%)</title><rect x="59.8084%" y="325" width="0.0416%" height="15" fill="rgb(240,116,54)" fg:x="1436" fg:w="1"/><text x="60.0584%" y="335.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.04%)</title><rect x="60.0167%" y="357" width="0.0416%" height="15" fill="rgb(216,10,36)" fg:x="1441" fg:w="1"/><text x="60.2667%" y="367.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (8 samples, 0.33%)</title><rect x="59.8501%" y="453" width="0.3332%" height="15" fill="rgb(222,72,44)" fg:x="1437" fg:w="8"/><text x="60.1001%" y="463.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (8 samples, 0.33%)</title><rect x="59.8501%" y="437" width="0.3332%" height="15" fill="rgb(232,159,9)" fg:x="1437" fg:w="8"/><text x="60.1001%" y="447.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (8 samples, 0.33%)</title><rect x="59.8501%" y="421" width="0.3332%" height="15" fill="rgb(210,39,32)" fg:x="1437" fg:w="8"/><text x="60.1001%" y="431.50"></text></g><g><title>inout::inout_buf::InOutBuf&lt;u8&gt;::xor_in2out (8 samples, 0.33%)</title><rect x="59.8501%" y="405" width="0.3332%" height="15" fill="rgb(216,194,45)" fg:x="1437" fg:w="8"/><text x="60.1001%" y="415.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (5 samples, 0.21%)</title><rect x="59.9750%" y="389" width="0.2082%" height="15" fill="rgb(218,18,35)" fg:x="1440" fg:w="5"/><text x="60.2250%" y="399.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (5 samples, 0.21%)</title><rect x="59.9750%" y="373" width="0.2082%" height="15" fill="rgb(207,83,51)" fg:x="1440" fg:w="5"/><text x="60.2250%" y="383.50"></text></g><g><title>core::mem::replace (3 samples, 0.12%)</title><rect x="60.0583%" y="357" width="0.1249%" height="15" fill="rgb(225,63,43)" fg:x="1442" fg:w="3"/><text x="60.3083%" y="367.50"></text></g><g><title>core::ptr::read (1 samples, 0.04%)</title><rect x="60.1416%" y="341" width="0.0416%" height="15" fill="rgb(207,57,36)" fg:x="1444" fg:w="1"/><text x="60.3916%" y="351.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (1 samples, 0.04%)</title><rect x="60.1416%" y="325" width="0.0416%" height="15" fill="rgb(216,99,33)" fg:x="1444" fg:w="1"/><text x="60.3916%" y="335.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (1 samples, 0.04%)</title><rect x="60.1416%" y="309" width="0.0416%" height="15" fill="rgb(225,42,16)" fg:x="1444" fg:w="1"/><text x="60.3916%" y="319.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (3 samples, 0.12%)</title><rect x="60.1833%" y="437" width="0.1249%" height="15" fill="rgb(220,201,45)" fg:x="1445" fg:w="3"/><text x="60.4333%" y="447.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (3 samples, 0.12%)</title><rect x="60.1833%" y="421" width="0.1249%" height="15" fill="rgb(225,33,4)" fg:x="1445" fg:w="3"/><text x="60.4333%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.12%)</title><rect x="60.1833%" y="405" width="0.1249%" height="15" fill="rgb(224,33,50)" fg:x="1445" fg:w="3"/><text x="60.4333%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.12%)</title><rect x="60.1833%" y="389" width="0.1249%" height="15" fill="rgb(246,198,51)" fg:x="1445" fg:w="3"/><text x="60.4333%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.12%)</title><rect x="60.1833%" y="373" width="0.1249%" height="15" fill="rgb(205,22,4)" fg:x="1445" fg:w="3"/><text x="60.4333%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (3 samples, 0.12%)</title><rect x="60.1833%" y="357" width="0.1249%" height="15" fill="rgb(206,3,8)" fg:x="1445" fg:w="3"/><text x="60.4333%" y="367.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.12%)</title><rect x="60.4332%" y="373" width="0.1249%" height="15" fill="rgb(251,23,15)" fg:x="1451" fg:w="3"/><text x="60.6832%" y="383.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.04%)</title><rect x="60.5165%" y="357" width="0.0416%" height="15" fill="rgb(252,88,28)" fg:x="1453" fg:w="1"/><text x="60.7665%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.04%)</title><rect x="60.5165%" y="341" width="0.0416%" height="15" fill="rgb(212,127,14)" fg:x="1453" fg:w="1"/><text x="60.7665%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.04%)</title><rect x="60.5165%" y="325" width="0.0416%" height="15" fill="rgb(247,145,37)" fg:x="1453" fg:w="1"/><text x="60.7665%" y="335.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for &amp;[T: N]&gt;::try_from (10 samples, 0.42%)</title><rect x="64.5564%" y="309" width="0.4165%" height="15" fill="rgb(209,117,53)" fg:x="1550" fg:w="10"/><text x="64.8064%" y="319.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (75 samples, 3.12%)</title><rect x="63.3903%" y="341" width="3.1237%" height="15" fill="rgb(212,90,42)" fg:x="1522" fg:w="75"/><text x="63.6403%" y="351.50">&lt;T ..</text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (56 samples, 2.33%)</title><rect x="64.1816%" y="325" width="2.3324%" height="15" fill="rgb(218,164,37)" fg:x="1541" fg:w="56"/><text x="64.4316%" y="335.50">c..</text></g><g><title>core::result::Result&lt;T,E&gt;::map (37 samples, 1.54%)</title><rect x="64.9729%" y="309" width="1.5410%" height="15" fill="rgb(246,65,34)" fg:x="1560" fg:w="37"/><text x="65.2229%" y="319.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from::{{closure}} (5 samples, 0.21%)</title><rect x="66.3057%" y="293" width="0.2082%" height="15" fill="rgb(231,100,33)" fg:x="1592" fg:w="5"/><text x="66.5557%" y="303.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::Deref&gt;::deref (9 samples, 0.37%)</title><rect x="66.5140%" y="341" width="0.3748%" height="15" fill="rgb(228,126,14)" fg:x="1597" fg:w="9"/><text x="66.7640%" y="351.50"></text></g><g><title>core::slice::raw::from_raw_parts (6 samples, 0.25%)</title><rect x="66.6389%" y="325" width="0.2499%" height="15" fill="rgb(215,173,21)" fg:x="1600" fg:w="6"/><text x="66.8889%" y="335.50"></text></g><g><title>core::ptr::slice_from_raw_parts (4 samples, 0.17%)</title><rect x="66.7222%" y="309" width="0.1666%" height="15" fill="rgb(210,6,40)" fg:x="1602" fg:w="4"/><text x="66.9722%" y="319.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (3 samples, 0.12%)</title><rect x="66.7638%" y="293" width="0.1249%" height="15" fill="rgb(212,48,18)" fg:x="1603" fg:w="3"/><text x="67.0138%" y="303.50"></text></g><g><title>core::convert::num::&lt;impl core::convert::From&lt;u32&gt; for u64&gt;::from (3 samples, 0.12%)</title><rect x="66.8888%" y="341" width="0.1249%" height="15" fill="rgb(230,214,11)" fg:x="1606" fg:w="3"/><text x="67.1388%" y="351.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_le_bytes (12 samples, 0.50%)</title><rect x="67.0137%" y="341" width="0.4998%" height="15" fill="rgb(254,105,39)" fg:x="1609" fg:w="12"/><text x="67.2637%" y="351.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_ne_bytes (2 samples, 0.08%)</title><rect x="67.4302%" y="325" width="0.0833%" height="15" fill="rgb(245,158,5)" fg:x="1619" fg:w="2"/><text x="67.6802%" y="335.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (14 samples, 0.58%)</title><rect x="67.5135%" y="341" width="0.5831%" height="15" fill="rgb(249,208,11)" fg:x="1621" fg:w="14"/><text x="67.7635%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (6 samples, 0.25%)</title><rect x="69.1795%" y="293" width="0.2499%" height="15" fill="rgb(210,39,28)" fg:x="1661" fg:w="6"/><text x="69.4295%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (2 samples, 0.08%)</title><rect x="69.3461%" y="277" width="0.0833%" height="15" fill="rgb(211,56,53)" fg:x="1665" fg:w="2"/><text x="69.5961%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::cast (2 samples, 0.08%)</title><rect x="69.4294%" y="277" width="0.0833%" height="15" fill="rgb(226,201,30)" fg:x="1667" fg:w="2"/><text x="69.6794%" y="287.50"></text></g><g><title>universal_hash::UniversalHash::update (226 samples, 9.41%)</title><rect x="60.3082%" y="437" width="9.4127%" height="15" fill="rgb(239,101,34)" fg:x="1448" fg:w="226"/><text x="60.5582%" y="447.50">universal_has..</text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (226 samples, 9.41%)</title><rect x="60.3082%" y="421" width="9.4127%" height="15" fill="rgb(226,209,5)" fg:x="1448" fg:w="226"/><text x="60.5582%" y="431.50">&lt;poly1305::Po..</text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (226 samples, 9.41%)</title><rect x="60.3082%" y="405" width="9.4127%" height="15" fill="rgb(250,105,47)" fg:x="1448" fg:w="226"/><text x="60.5582%" y="415.50">&lt;poly1305::ba..</text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (225 samples, 9.37%)</title><rect x="60.3499%" y="389" width="9.3711%" height="15" fill="rgb(230,72,3)" fg:x="1449" fg:w="225"/><text x="60.5999%" y="399.50">&lt;universal_ha..</text></g><g><title>&lt;poly1305::backend::soft::State as universal_hash::UhfBackend&gt;::proc_block (220 samples, 9.16%)</title><rect x="60.5581%" y="373" width="9.1628%" height="15" fill="rgb(232,218,39)" fg:x="1454" fg:w="220"/><text x="60.8081%" y="383.50">&lt;poly1305::ba..</text></g><g><title>poly1305::backend::soft::State::compute_block (220 samples, 9.16%)</title><rect x="60.5581%" y="357" width="9.1628%" height="15" fill="rgb(248,166,6)" fg:x="1454" fg:w="220"/><text x="60.8081%" y="367.50">poly1305::bac..</text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (39 samples, 1.62%)</title><rect x="68.0966%" y="341" width="1.6243%" height="15" fill="rgb(247,89,20)" fg:x="1635" fg:w="39"/><text x="68.3466%" y="351.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (35 samples, 1.46%)</title><rect x="68.2632%" y="325" width="1.4577%" height="15" fill="rgb(248,130,54)" fg:x="1639" fg:w="35"/><text x="68.5132%" y="335.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (25 samples, 1.04%)</title><rect x="68.6797%" y="309" width="1.0412%" height="15" fill="rgb(234,196,4)" fg:x="1649" fg:w="25"/><text x="68.9297%" y="319.50"></text></g><g><title>core::ptr::slice_from_raw_parts (7 samples, 0.29%)</title><rect x="69.4294%" y="293" width="0.2915%" height="15" fill="rgb(250,143,31)" fg:x="1667" fg:w="7"/><text x="69.6794%" y="303.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (5 samples, 0.21%)</title><rect x="69.5127%" y="277" width="0.2082%" height="15" fill="rgb(211,110,34)" fg:x="1669" fg:w="5"/><text x="69.7627%" y="287.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::encrypt_in_place_detached (252 samples, 10.50%)</title><rect x="59.2670%" y="469" width="10.4956%" height="15" fill="rgb(215,124,48)" fg:x="1423" fg:w="252"/><text x="59.5170%" y="479.50">chacha20poly130..</text></g><g><title>universal_hash::UniversalHash::update_padded (230 samples, 9.58%)</title><rect x="60.1833%" y="453" width="9.5793%" height="15" fill="rgb(216,46,13)" fg:x="1445" fg:w="230"/><text x="60.4333%" y="463.50">universal_hash..</text></g><g><title>universal_hash::to_blocks (1 samples, 0.04%)</title><rect x="69.7209%" y="437" width="0.0416%" height="15" fill="rgb(205,184,25)" fg:x="1674" fg:w="1"/><text x="69.9709%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at (1 samples, 0.04%)</title><rect x="69.7209%" y="421" width="0.0416%" height="15" fill="rgb(228,1,10)" fg:x="1674" fg:w="1"/><text x="69.9709%" y="431.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (1 samples, 0.04%)</title><rect x="69.7209%" y="405" width="0.0416%" height="15" fill="rgb(213,116,27)" fg:x="1674" fg:w="1"/><text x="69.9709%" y="415.50"></text></g><g><title>core::slice::raw::from_raw_parts (1 samples, 0.04%)</title><rect x="69.7209%" y="389" width="0.0416%" height="15" fill="rgb(241,95,50)" fg:x="1674" fg:w="1"/><text x="69.9709%" y="399.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.04%)</title><rect x="69.7209%" y="373" width="0.0416%" height="15" fill="rgb(238,48,32)" fg:x="1674" fg:w="1"/><text x="69.9709%" y="383.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (1 samples, 0.04%)</title><rect x="69.7209%" y="357" width="0.0416%" height="15" fill="rgb(235,113,49)" fg:x="1674" fg:w="1"/><text x="69.9709%" y="367.50"></text></g><g><title>&lt;[Z] as zeroize::Zeroize&gt;::zeroize (4 samples, 0.17%)</title><rect x="69.7626%" y="453" width="0.1666%" height="15" fill="rgb(205,127,43)" fg:x="1675" fg:w="4"/><text x="70.0126%" y="463.50"></text></g><g><title>zeroize::volatile_set (4 samples, 0.17%)</title><rect x="69.7626%" y="437" width="0.1666%" height="15" fill="rgb(250,162,2)" fg:x="1675" fg:w="4"/><text x="70.0126%" y="447.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.08%)</title><rect x="69.8459%" y="421" width="0.0833%" height="15" fill="rgb(220,13,41)" fg:x="1677" fg:w="2"/><text x="70.0959%" y="431.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.04%)</title><rect x="69.8875%" y="405" width="0.0416%" height="15" fill="rgb(249,221,25)" fg:x="1678" fg:w="1"/><text x="70.1375%" y="415.50"></text></g><g><title>core::mem::replace (1 samples, 0.04%)</title><rect x="69.8875%" y="389" width="0.0416%" height="15" fill="rgb(215,208,19)" fg:x="1678" fg:w="1"/><text x="70.1375%" y="399.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="69.9292%" y="453" width="0.0416%" height="15" fill="rgb(236,175,2)" fg:x="1679" fg:w="1"/><text x="70.1792%" y="463.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.04%)</title><rect x="69.9708%" y="405" width="0.0416%" height="15" fill="rgb(241,52,2)" fg:x="1680" fg:w="1"/><text x="70.2208%" y="415.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.04%)</title><rect x="69.9708%" y="389" width="0.0416%" height="15" fill="rgb(248,140,14)" fg:x="1680" fg:w="1"/><text x="70.2208%" y="399.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.04%)</title><rect x="69.9708%" y="373" width="0.0416%" height="15" fill="rgb(253,22,42)" fg:x="1680" fg:w="1"/><text x="70.2208%" y="383.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="69.9708%" y="357" width="0.0416%" height="15" fill="rgb(234,61,47)" fg:x="1680" fg:w="1"/><text x="70.2208%" y="367.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.04%)</title><rect x="70.0125%" y="389" width="0.0416%" height="15" fill="rgb(208,226,15)" fg:x="1681" fg:w="1"/><text x="70.2625%" y="399.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.04%)</title><rect x="70.0125%" y="373" width="0.0416%" height="15" fill="rgb(217,221,4)" fg:x="1681" fg:w="1"/><text x="70.2625%" y="383.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.04%)</title><rect x="70.0125%" y="357" width="0.0416%" height="15" fill="rgb(212,174,34)" fg:x="1681" fg:w="1"/><text x="70.2625%" y="367.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (3 samples, 0.12%)</title><rect x="69.9708%" y="453" width="0.1249%" height="15" fill="rgb(253,83,4)" fg:x="1680" fg:w="3"/><text x="70.2208%" y="463.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (3 samples, 0.12%)</title><rect x="69.9708%" y="437" width="0.1249%" height="15" fill="rgb(250,195,49)" fg:x="1680" fg:w="3"/><text x="70.2208%" y="447.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (3 samples, 0.12%)</title><rect x="69.9708%" y="421" width="0.1249%" height="15" fill="rgb(241,192,25)" fg:x="1680" fg:w="3"/><text x="70.2208%" y="431.50"></text></g><g><title>inout::inout_buf::InOutBuf&lt;u8&gt;::xor_in2out (2 samples, 0.08%)</title><rect x="70.0125%" y="405" width="0.0833%" height="15" fill="rgb(208,124,10)" fg:x="1681" fg:w="2"/><text x="70.2625%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.04%)</title><rect x="70.0541%" y="389" width="0.0416%" height="15" fill="rgb(222,33,0)" fg:x="1682" fg:w="1"/><text x="70.3041%" y="399.50"></text></g><g><title>cipher::stream::StreamCipherSeek::seek (1 samples, 0.04%)</title><rect x="70.0958%" y="453" width="0.0416%" height="15" fill="rgb(234,209,28)" fg:x="1683" fg:w="1"/><text x="70.3458%" y="463.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipherSeek&gt;::try_seek (1 samples, 0.04%)</title><rect x="70.0958%" y="437" width="0.0416%" height="15" fill="rgb(224,11,23)" fg:x="1683" fg:w="1"/><text x="70.3458%" y="447.50"></text></g><g><title>&lt;u64 as cipher::stream::SeekNum&gt;::into_block_byte (1 samples, 0.04%)</title><rect x="70.0958%" y="421" width="0.0416%" height="15" fill="rgb(232,99,1)" fg:x="1683" fg:w="1"/><text x="70.3458%" y="431.50"></text></g><g><title>generic_array::GenericArray&lt;T,N&gt;::from_slice (1 samples, 0.04%)</title><rect x="70.1374%" y="453" width="0.0416%" height="15" fill="rgb(237,95,45)" fg:x="1684" fg:w="1"/><text x="70.3874%" y="463.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.04%)</title><rect x="70.1374%" y="437" width="0.0416%" height="15" fill="rgb(208,109,11)" fg:x="1684" fg:w="1"/><text x="70.3874%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (2 samples, 0.08%)</title><rect x="70.2624%" y="373" width="0.0833%" height="15" fill="rgb(216,190,48)" fg:x="1687" fg:w="2"/><text x="70.5124%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.08%)</title><rect x="70.2624%" y="357" width="0.0833%" height="15" fill="rgb(251,171,36)" fg:x="1687" fg:w="2"/><text x="70.5124%" y="367.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (2 samples, 0.08%)</title><rect x="70.2624%" y="341" width="0.0833%" height="15" fill="rgb(230,62,22)" fg:x="1687" fg:w="2"/><text x="70.5124%" y="351.50"></text></g><g><title>core::ptr::write (1 samples, 0.04%)</title><rect x="70.3040%" y="325" width="0.0416%" height="15" fill="rgb(225,114,35)" fg:x="1688" fg:w="1"/><text x="70.5540%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5 samples, 0.21%)</title><rect x="70.1791%" y="421" width="0.2082%" height="15" fill="rgb(215,118,42)" fg:x="1685" fg:w="5"/><text x="70.4291%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.21%)</title><rect x="70.1791%" y="405" width="0.2082%" height="15" fill="rgb(243,119,21)" fg:x="1685" fg:w="5"/><text x="70.4291%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (5 samples, 0.21%)</title><rect x="70.1791%" y="389" width="0.2082%" height="15" fill="rgb(252,177,53)" fg:x="1685" fg:w="5"/><text x="70.4291%" y="399.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="70.3457%" y="373" width="0.0416%" height="15" fill="rgb(237,209,29)" fg:x="1689" fg:w="1"/><text x="70.5957%" y="383.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (1 samples, 0.04%)</title><rect x="70.3457%" y="357" width="0.0416%" height="15" fill="rgb(212,65,23)" fg:x="1689" fg:w="1"/><text x="70.5957%" y="367.50"></text></g><g><title>&lt;tftp::socket::EncryptionBoundSocket&lt;S&gt; as tftp::socket::Socket&gt;::send_to (333 samples, 13.87%)</title><rect x="56.5598%" y="533" width="13.8692%" height="15" fill="rgb(230,222,46)" fg:x="1358" fg:w="333"/><text x="56.8098%" y="543.50">&lt;tftp::socket::Encryp..</text></g><g><title>tftp::encryption::Encryptor::encrypt (333 samples, 13.87%)</title><rect x="56.5598%" y="517" width="13.8692%" height="15" fill="rgb(215,135,32)" fg:x="1358" fg:w="333"/><text x="56.8098%" y="527.50">tftp::encryption::Enc..</text></g><g><title>aead::AeadInPlace::encrypt_in_place (333 samples, 13.87%)</title><rect x="56.5598%" y="501" width="13.8692%" height="15" fill="rgb(246,101,22)" fg:x="1358" fg:w="333"/><text x="56.8098%" y="511.50">aead::AeadInPlace::en..</text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::encrypt_in_place_detached (332 samples, 13.83%)</title><rect x="56.6014%" y="485" width="13.8276%" height="15" fill="rgb(206,107,13)" fg:x="1359" fg:w="332"/><text x="56.8514%" y="495.50">&lt;chacha20poly1305::Ch..</text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (16 samples, 0.67%)</title><rect x="69.7626%" y="469" width="0.6664%" height="15" fill="rgb(250,100,44)" fg:x="1675" fg:w="16"/><text x="70.0126%" y="479.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (6 samples, 0.25%)</title><rect x="70.1791%" y="453" width="0.2499%" height="15" fill="rgb(231,147,38)" fg:x="1685" fg:w="6"/><text x="70.4291%" y="463.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (6 samples, 0.25%)</title><rect x="70.1791%" y="437" width="0.2499%" height="15" fill="rgb(229,8,40)" fg:x="1685" fg:w="6"/><text x="70.4291%" y="447.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::iter_position (1 samples, 0.04%)</title><rect x="70.3873%" y="421" width="0.0416%" height="15" fill="rgb(221,135,30)" fg:x="1690" fg:w="1"/><text x="70.6373%" y="431.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (1 samples, 0.04%)</title><rect x="70.3873%" y="405" width="0.0416%" height="15" fill="rgb(249,193,18)" fg:x="1690" fg:w="1"/><text x="70.6373%" y="415.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="70.3873%" y="389" width="0.0416%" height="15" fill="rgb(209,133,39)" fg:x="1690" fg:w="1"/><text x="70.6373%" y="399.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::key_area_mut (1 samples, 0.04%)</title><rect x="70.5123%" y="437" width="0.0416%" height="15" fill="rgb(232,100,14)" fg:x="1693" fg:w="1"/><text x="70.7623%" y="447.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::as_leaf_mut (1 samples, 0.04%)</title><rect x="70.5123%" y="421" width="0.0416%" height="15" fill="rgb(224,185,1)" fg:x="1693" fg:w="1"/><text x="70.7623%" y="431.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,Type&gt;::val_area_mut (2 samples, 0.08%)</title><rect x="70.5539%" y="437" width="0.0833%" height="15" fill="rgb(223,139,8)" fg:x="1694" fg:w="2"/><text x="70.8039%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (7 samples, 0.29%)</title><rect x="70.4290%" y="517" width="0.2915%" height="15" fill="rgb(232,213,38)" fg:x="1691" fg:w="7"/><text x="70.6790%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (7 samples, 0.29%)</title><rect x="70.4290%" y="501" width="0.2915%" height="15" fill="rgb(207,94,22)" fg:x="1691" fg:w="7"/><text x="70.6790%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (7 samples, 0.29%)</title><rect x="70.4290%" y="485" width="0.2915%" height="15" fill="rgb(219,183,54)" fg:x="1691" fg:w="7"/><text x="70.6790%" y="495.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (6 samples, 0.25%)</title><rect x="70.4706%" y="469" width="0.2499%" height="15" fill="rgb(216,185,54)" fg:x="1692" fg:w="6"/><text x="70.7206%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (6 samples, 0.25%)</title><rect x="70.4706%" y="453" width="0.2499%" height="15" fill="rgb(254,217,39)" fg:x="1692" fg:w="6"/><text x="70.7206%" y="463.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (2 samples, 0.08%)</title><rect x="70.6372%" y="437" width="0.0833%" height="15" fill="rgb(240,178,23)" fg:x="1696" fg:w="2"/><text x="70.8872%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.04%)</title><rect x="70.6789%" y="421" width="0.0416%" height="15" fill="rgb(218,11,47)" fg:x="1697" fg:w="1"/><text x="70.9289%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.04%)</title><rect x="70.6789%" y="405" width="0.0416%" height="15" fill="rgb(218,51,51)" fg:x="1697" fg:w="1"/><text x="70.9289%" y="415.50"></text></g><g><title>tftp::main (349 samples, 14.54%)</title><rect x="56.2682%" y="581" width="14.5356%" height="15" fill="rgb(238,126,27)" fg:x="1351" fg:w="349"/><text x="56.5182%" y="591.50">tftp::main</text></g><g><title>tftp::start_send (349 samples, 14.54%)</title><rect x="56.2682%" y="565" width="14.5356%" height="15" fill="rgb(249,202,22)" fg:x="1351" fg:w="349"/><text x="56.5182%" y="575.50">tftp::start_send</text></g><g><title>tftp::client::client::send_file (349 samples, 14.54%)</title><rect x="56.2682%" y="549" width="14.5356%" height="15" fill="rgb(254,195,49)" fg:x="1351" fg:w="349"/><text x="56.5182%" y="559.50">tftp::client::client::..</text></g><g><title>&lt;tftp::storage::FileReader&lt;T&gt; as tftp::storage::BlockReader&gt;::next (9 samples, 0.37%)</title><rect x="70.4290%" y="533" width="0.3748%" height="15" fill="rgb(208,123,14)" fg:x="1691" fg:w="9"/><text x="70.6790%" y="543.50"></text></g><g><title>tftp::storage::FileReader&lt;T&gt;::read_block (2 samples, 0.08%)</title><rect x="70.7205%" y="517" width="0.0833%" height="15" fill="rgb(224,200,8)" fg:x="1698" fg:w="2"/><text x="70.9705%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (2 samples, 0.08%)</title><rect x="70.7205%" y="501" width="0.0833%" height="15" fill="rgb(217,61,36)" fg:x="1698" fg:w="2"/><text x="70.9705%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (2 samples, 0.08%)</title><rect x="70.7205%" y="485" width="0.0833%" height="15" fill="rgb(206,35,45)" fg:x="1698" fg:w="2"/><text x="70.9705%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.08%)</title><rect x="70.7205%" y="469" width="0.0833%" height="15" fill="rgb(217,65,33)" fg:x="1698" fg:w="2"/><text x="70.9705%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.08%)</title><rect x="70.7205%" y="453" width="0.0833%" height="15" fill="rgb(222,158,48)" fg:x="1698" fg:w="2"/><text x="70.9705%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.08%)</title><rect x="70.7205%" y="437" width="0.0833%" height="15" fill="rgb(254,2,54)" fg:x="1698" fg:w="2"/><text x="70.9705%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.08%)</title><rect x="70.7205%" y="421" width="0.0833%" height="15" fill="rgb(250,143,38)" fg:x="1698" fg:w="2"/><text x="70.9705%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.08%)</title><rect x="70.7205%" y="405" width="0.0833%" height="15" fill="rgb(248,25,0)" fg:x="1698" fg:w="2"/><text x="70.9705%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.08%)</title><rect x="70.7205%" y="389" width="0.0833%" height="15" fill="rgb(206,152,27)" fg:x="1698" fg:w="2"/><text x="70.9705%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.08%)</title><rect x="70.7205%" y="373" width="0.0833%" height="15" fill="rgb(240,77,30)" fg:x="1698" fg:w="2"/><text x="70.9705%" y="383.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.08%)</title><rect x="70.7205%" y="357" width="0.0833%" height="15" fill="rgb(231,5,3)" fg:x="1698" fg:w="2"/><text x="70.9705%" y="367.50"></text></g><g><title>malloc (2 samples, 0.08%)</title><rect x="70.7205%" y="341" width="0.0833%" height="15" fill="rgb(207,226,32)" fg:x="1698" fg:w="2"/><text x="70.9705%" y="351.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::decrypt_in_place_detached (1 samples, 0.04%)</title><rect x="70.8038%" y="485" width="0.0416%" height="15" fill="rgb(222,207,47)" fg:x="1700" fg:w="1"/><text x="71.0538%" y="495.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (1 samples, 0.04%)</title><rect x="70.8038%" y="469" width="0.0416%" height="15" fill="rgb(229,115,45)" fg:x="1700" fg:w="1"/><text x="71.0538%" y="479.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (1 samples, 0.04%)</title><rect x="70.8038%" y="453" width="0.0416%" height="15" fill="rgb(224,191,6)" fg:x="1700" fg:w="1"/><text x="71.0538%" y="463.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (1 samples, 0.04%)</title><rect x="70.8038%" y="437" width="0.0416%" height="15" fill="rgb(230,227,24)" fg:x="1700" fg:w="1"/><text x="71.0538%" y="447.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::write_keystream_block (1 samples, 0.04%)</title><rect x="70.8038%" y="421" width="0.0416%" height="15" fill="rgb(228,80,19)" fg:x="1700" fg:w="1"/><text x="71.0538%" y="431.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (1 samples, 0.04%)</title><rect x="70.8038%" y="405" width="0.0416%" height="15" fill="rgb(247,229,0)" fg:x="1700" fg:w="1"/><text x="71.0538%" y="415.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (1 samples, 0.04%)</title><rect x="70.8038%" y="389" width="0.0416%" height="15" fill="rgb(237,194,15)" fg:x="1700" fg:w="1"/><text x="71.0538%" y="399.50"></text></g><g><title>chacha20::backends::sse2::inner (1 samples, 0.04%)</title><rect x="70.8038%" y="373" width="0.0416%" height="15" fill="rgb(219,203,20)" fg:x="1700" fg:w="1"/><text x="71.0538%" y="383.50"></text></g><g><title>&lt;cipher::stream_core::WriteBlockCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (1 samples, 0.04%)</title><rect x="70.8038%" y="357" width="0.0416%" height="15" fill="rgb(234,128,8)" fg:x="1700" fg:w="1"/><text x="71.0538%" y="367.50"></text></g><g><title>&lt;chacha20::backends::sse2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (1 samples, 0.04%)</title><rect x="70.8038%" y="341" width="0.0416%" height="15" fill="rgb(248,202,8)" fg:x="1700" fg:w="1"/><text x="71.0538%" y="351.50"></text></g><g><title>chacha20::backends::sse2::rounds (1 samples, 0.04%)</title><rect x="70.8038%" y="325" width="0.0416%" height="15" fill="rgb(206,104,37)" fg:x="1700" fg:w="1"/><text x="71.0538%" y="335.50"></text></g><g><title>chacha20::backends::sse2::double_quarter_round (1 samples, 0.04%)</title><rect x="70.8038%" y="309" width="0.0416%" height="15" fill="rgb(223,8,27)" fg:x="1700" fg:w="1"/><text x="71.0538%" y="319.50"></text></g><g><title>chacha20::backends::sse2::add_xor_rot (1 samples, 0.04%)</title><rect x="70.8038%" y="293" width="0.0416%" height="15" fill="rgb(216,217,28)" fg:x="1700" fg:w="1"/><text x="71.0538%" y="303.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_slli_epi32 (1 samples, 0.04%)</title><rect x="70.8038%" y="277" width="0.0416%" height="15" fill="rgb(249,199,1)" fg:x="1700" fg:w="1"/><text x="71.0538%" y="287.50"></text></g><g><title>&lt;tftp::socket::EncryptionBoundSocket&lt;S&gt; as tftp::socket::Socket&gt;::recv_from (2 samples, 0.08%)</title><rect x="70.8038%" y="549" width="0.0833%" height="15" fill="rgb(240,85,17)" fg:x="1700" fg:w="2"/><text x="71.0538%" y="559.50"></text></g><g><title>tftp::encryption::Encryptor::decrypt (2 samples, 0.08%)</title><rect x="70.8038%" y="533" width="0.0833%" height="15" fill="rgb(206,108,45)" fg:x="1700" fg:w="2"/><text x="71.0538%" y="543.50"></text></g><g><title>aead::AeadInPlace::decrypt_in_place (2 samples, 0.08%)</title><rect x="70.8038%" y="517" width="0.0833%" height="15" fill="rgb(245,210,41)" fg:x="1700" fg:w="2"/><text x="71.0538%" y="527.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (2 samples, 0.08%)</title><rect x="70.8038%" y="501" width="0.0833%" height="15" fill="rgb(206,13,37)" fg:x="1700" fg:w="2"/><text x="71.0538%" y="511.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (1 samples, 0.04%)</title><rect x="70.8455%" y="485" width="0.0416%" height="15" fill="rgb(250,61,18)" fg:x="1701" fg:w="1"/><text x="71.0955%" y="495.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (1 samples, 0.04%)</title><rect x="70.8455%" y="469" width="0.0416%" height="15" fill="rgb(235,172,48)" fg:x="1701" fg:w="1"/><text x="71.0955%" y="479.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (1 samples, 0.04%)</title><rect x="70.8455%" y="453" width="0.0416%" height="15" fill="rgb(249,201,17)" fg:x="1701" fg:w="1"/><text x="71.0955%" y="463.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (1 samples, 0.04%)</title><rect x="70.8455%" y="437" width="0.0416%" height="15" fill="rgb(219,208,6)" fg:x="1701" fg:w="1"/><text x="71.0955%" y="447.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::write_keystream_block (1 samples, 0.04%)</title><rect x="70.8455%" y="421" width="0.0416%" height="15" fill="rgb(248,31,23)" fg:x="1701" fg:w="1"/><text x="71.0955%" y="431.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (1 samples, 0.04%)</title><rect x="70.8455%" y="405" width="0.0416%" height="15" fill="rgb(245,15,42)" fg:x="1701" fg:w="1"/><text x="71.0955%" y="415.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (1 samples, 0.04%)</title><rect x="70.8455%" y="389" width="0.0416%" height="15" fill="rgb(222,217,39)" fg:x="1701" fg:w="1"/><text x="71.0955%" y="399.50"></text></g><g><title>chacha20::backends::sse2::inner (1 samples, 0.04%)</title><rect x="70.8455%" y="373" width="0.0416%" height="15" fill="rgb(210,219,27)" fg:x="1701" fg:w="1"/><text x="71.0955%" y="383.50"></text></g><g><title>&lt;cipher::stream_core::WriteBlockCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (1 samples, 0.04%)</title><rect x="70.8455%" y="357" width="0.0416%" height="15" fill="rgb(252,166,36)" fg:x="1701" fg:w="1"/><text x="71.0955%" y="367.50"></text></g><g><title>&lt;chacha20::backends::sse2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (1 samples, 0.04%)</title><rect x="70.8455%" y="341" width="0.0416%" height="15" fill="rgb(245,132,34)" fg:x="1701" fg:w="1"/><text x="71.0955%" y="351.50"></text></g><g><title>chacha20::backends::sse2::rounds (1 samples, 0.04%)</title><rect x="70.8455%" y="325" width="0.0416%" height="15" fill="rgb(236,54,3)" fg:x="1701" fg:w="1"/><text x="71.0955%" y="335.50"></text></g><g><title>chacha20::backends::sse2::double_quarter_round (1 samples, 0.04%)</title><rect x="70.8455%" y="309" width="0.0416%" height="15" fill="rgb(241,173,43)" fg:x="1701" fg:w="1"/><text x="71.0955%" y="319.50"></text></g><g><title>chacha20::backends::sse2::add_xor_rot (1 samples, 0.04%)</title><rect x="70.8455%" y="293" width="0.0416%" height="15" fill="rgb(215,190,9)" fg:x="1701" fg:w="1"/><text x="71.0955%" y="303.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi32 (2 samples, 0.08%)</title><rect x="71.2203%" y="325" width="0.0833%" height="15" fill="rgb(242,101,16)" fg:x="1710" fg:w="2"/><text x="71.4703%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.04%)</title><rect x="71.4286%" y="293" width="0.0416%" height="15" fill="rgb(223,190,21)" fg:x="1715" fg:w="1"/><text x="71.6786%" y="303.50"></text></g><g><title>core::ptr::read (2 samples, 0.08%)</title><rect x="71.5119%" y="277" width="0.0833%" height="15" fill="rgb(215,228,25)" fg:x="1717" fg:w="2"/><text x="71.7619%" y="287.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (1 samples, 0.04%)</title><rect x="71.5535%" y="261" width="0.0416%" height="15" fill="rgb(225,36,22)" fg:x="1718" fg:w="1"/><text x="71.8035%" y="271.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (1 samples, 0.04%)</title><rect x="71.5535%" y="245" width="0.0416%" height="15" fill="rgb(251,106,46)" fg:x="1718" fg:w="1"/><text x="71.8035%" y="255.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (8 samples, 0.33%)</title><rect x="71.3036%" y="325" width="0.3332%" height="15" fill="rgb(208,90,1)" fg:x="1712" fg:w="8"/><text x="71.5536%" y="335.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (8 samples, 0.33%)</title><rect x="71.3036%" y="309" width="0.3332%" height="15" fill="rgb(243,10,4)" fg:x="1712" fg:w="8"/><text x="71.5536%" y="319.50"></text></g><g><title>core::mem::replace (4 samples, 0.17%)</title><rect x="71.4702%" y="293" width="0.1666%" height="15" fill="rgb(212,137,27)" fg:x="1716" fg:w="4"/><text x="71.7202%" y="303.50"></text></g><g><title>core::ptr::write (1 samples, 0.04%)</title><rect x="71.5952%" y="277" width="0.0416%" height="15" fill="rgb(231,220,49)" fg:x="1719" fg:w="1"/><text x="71.8452%" y="287.50"></text></g><g><title>&lt;chacha20::backends::sse2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (18 samples, 0.75%)</title><rect x="70.9704%" y="341" width="0.7497%" height="15" fill="rgb(237,96,20)" fg:x="1704" fg:w="18"/><text x="71.2204%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (2 samples, 0.08%)</title><rect x="71.6368%" y="325" width="0.0833%" height="15" fill="rgb(239,229,30)" fg:x="1720" fg:w="2"/><text x="71.8868%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.08%)</title><rect x="71.6368%" y="309" width="0.0833%" height="15" fill="rgb(219,65,33)" fg:x="1720" fg:w="2"/><text x="71.8868%" y="319.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.04%)</title><rect x="71.7201%" y="341" width="0.0416%" height="15" fill="rgb(243,134,7)" fg:x="1722" fg:w="1"/><text x="71.9701%" y="351.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.04%)</title><rect x="71.7201%" y="325" width="0.0416%" height="15" fill="rgb(216,177,54)" fg:x="1722" fg:w="1"/><text x="71.9701%" y="335.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::Deref&gt;::deref (57 samples, 2.37%)</title><rect x="76.5514%" y="325" width="2.3740%" height="15" fill="rgb(211,160,20)" fg:x="1838" fg:w="57"/><text x="76.8014%" y="335.50">&lt;g..</text></g><g><title>core::slice::raw::from_raw_parts (47 samples, 1.96%)</title><rect x="76.9679%" y="309" width="1.9575%" height="15" fill="rgb(239,85,39)" fg:x="1848" fg:w="47"/><text x="77.2179%" y="319.50">c..</text></g><g><title>core::ptr::slice_from_raw_parts (37 samples, 1.54%)</title><rect x="77.3844%" y="293" width="1.5410%" height="15" fill="rgb(232,125,22)" fg:x="1858" fg:w="37"/><text x="77.6344%" y="303.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (35 samples, 1.46%)</title><rect x="77.4677%" y="277" width="1.4577%" height="15" fill="rgb(244,57,34)" fg:x="1860" fg:w="35"/><text x="77.7177%" y="287.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (18 samples, 0.75%)</title><rect x="78.9254%" y="325" width="0.7497%" height="15" fill="rgb(214,203,32)" fg:x="1895" fg:w="18"/><text x="79.1754%" y="335.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (10 samples, 0.42%)</title><rect x="79.2586%" y="309" width="0.4165%" height="15" fill="rgb(207,58,43)" fg:x="1903" fg:w="10"/><text x="79.5086%" y="319.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (7 samples, 0.29%)</title><rect x="79.3836%" y="293" width="0.2915%" height="15" fill="rgb(215,193,15)" fg:x="1906" fg:w="7"/><text x="79.6336%" y="303.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (6 samples, 0.25%)</title><rect x="79.4252%" y="277" width="0.2499%" height="15" fill="rgb(232,15,44)" fg:x="1907" fg:w="6"/><text x="79.6752%" y="287.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (7 samples, 0.29%)</title><rect x="80.9246%" y="293" width="0.2915%" height="15" fill="rgb(212,3,48)" fg:x="1943" fg:w="7"/><text x="81.1746%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (6 samples, 0.25%)</title><rect x="81.2162%" y="293" width="0.2499%" height="15" fill="rgb(218,128,7)" fg:x="1950" fg:w="6"/><text x="81.4662%" y="303.50"></text></g><g><title>core::ptr::read (28 samples, 1.17%)</title><rect x="82.0908%" y="277" width="1.1662%" height="15" fill="rgb(226,216,39)" fg:x="1971" fg:w="28"/><text x="82.3408%" y="287.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (3 samples, 0.12%)</title><rect x="83.1320%" y="261" width="0.1249%" height="15" fill="rgb(243,47,51)" fg:x="1996" fg:w="3"/><text x="83.3820%" y="271.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (3 samples, 0.12%)</title><rect x="83.1320%" y="245" width="0.1249%" height="15" fill="rgb(241,183,40)" fg:x="1996" fg:w="3"/><text x="83.3820%" y="255.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (87 samples, 3.62%)</title><rect x="79.6751%" y="325" width="3.6235%" height="15" fill="rgb(231,217,32)" fg:x="1913" fg:w="87"/><text x="79.9251%" y="335.50">core..</text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (84 samples, 3.50%)</title><rect x="79.8001%" y="309" width="3.4985%" height="15" fill="rgb(229,61,38)" fg:x="1916" fg:w="84"/><text x="80.0501%" y="319.50">&lt;co..</text></g><g><title>core::mem::replace (44 samples, 1.83%)</title><rect x="81.4661%" y="293" width="1.8326%" height="15" fill="rgb(225,210,5)" fg:x="1956" fg:w="44"/><text x="81.7161%" y="303.50">c..</text></g><g><title>core::ptr::write (1 samples, 0.04%)</title><rect x="83.2570%" y="277" width="0.0416%" height="15" fill="rgb(231,79,45)" fg:x="1999" fg:w="1"/><text x="83.5070%" y="287.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (299 samples, 12.45%)</title><rect x="70.8871%" y="421" width="12.4531%" height="15" fill="rgb(224,100,7)" fg:x="1702" fg:w="299"/><text x="71.1371%" y="431.50">cipher::stream_core..</text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (299 samples, 12.45%)</title><rect x="70.8871%" y="405" width="12.4531%" height="15" fill="rgb(241,198,18)" fg:x="1702" fg:w="299"/><text x="71.1371%" y="415.50">&lt;chacha20::xchacha:..</text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (299 samples, 12.45%)</title><rect x="70.8871%" y="389" width="12.4531%" height="15" fill="rgb(252,97,53)" fg:x="1702" fg:w="299"/><text x="71.1371%" y="399.50">&lt;chacha20::ChaChaCo..</text></g><g><title>chacha20::backends::sse2::inner (299 samples, 12.45%)</title><rect x="70.8871%" y="373" width="12.4531%" height="15" fill="rgb(220,88,7)" fg:x="1702" fg:w="299"/><text x="71.1371%" y="383.50">chacha20::backends:..</text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (298 samples, 12.41%)</title><rect x="70.9288%" y="357" width="12.4115%" height="15" fill="rgb(213,176,14)" fg:x="1703" fg:w="298"/><text x="71.1788%" y="367.50">&lt;cipher::stream_cor..</text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;u8,N&gt;&gt;::xor_in2out (278 samples, 11.58%)</title><rect x="71.7618%" y="341" width="11.5785%" height="15" fill="rgb(246,73,7)" fg:x="1723" fg:w="278"/><text x="72.0118%" y="351.50">inout::inout::InO..</text></g><g><title>core::ptr::write (1 samples, 0.04%)</title><rect x="83.2986%" y="325" width="0.0416%" height="15" fill="rgb(245,64,36)" fg:x="2000" fg:w="1"/><text x="83.5486%" y="335.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_add_epi32 (6 samples, 0.25%)</title><rect x="83.5485%" y="277" width="0.2499%" height="15" fill="rgb(245,80,10)" fg:x="2006" fg:w="6"/><text x="83.7985%" y="287.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i32x4 (1 samples, 0.04%)</title><rect x="83.7568%" y="261" width="0.0416%" height="15" fill="rgb(232,107,50)" fg:x="2011" fg:w="1"/><text x="84.0068%" y="271.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_slli_epi32 (3 samples, 0.12%)</title><rect x="83.7984%" y="277" width="0.1249%" height="15" fill="rgb(253,3,0)" fg:x="2012" fg:w="3"/><text x="84.0484%" y="287.50"></text></g><g><title>chacha20::backends::sse2::add_xor_rot (14 samples, 0.58%)</title><rect x="83.3819%" y="293" width="0.5831%" height="15" fill="rgb(212,99,53)" fg:x="2002" fg:w="14"/><text x="83.6319%" y="303.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_srli_epi32 (1 samples, 0.04%)</title><rect x="83.9234%" y="277" width="0.0416%" height="15" fill="rgb(249,111,54)" fg:x="2015" fg:w="1"/><text x="84.1734%" y="287.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i32x4 (1 samples, 0.04%)</title><rect x="83.9234%" y="261" width="0.0416%" height="15" fill="rgb(249,55,30)" fg:x="2015" fg:w="1"/><text x="84.1734%" y="271.50"></text></g><g><title>chacha20::backends::sse2::double_quarter_round (16 samples, 0.67%)</title><rect x="83.3403%" y="309" width="0.6664%" height="15" fill="rgb(237,47,42)" fg:x="2001" fg:w="16"/><text x="83.5903%" y="319.50"></text></g><g><title>chacha20::backends::sse2::cols_to_rows (1 samples, 0.04%)</title><rect x="83.9650%" y="293" width="0.0416%" height="15" fill="rgb(211,20,18)" fg:x="2016" fg:w="1"/><text x="84.2150%" y="303.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::encrypt_in_place_detached (316 samples, 13.16%)</title><rect x="70.8871%" y="485" width="13.1612%" height="15" fill="rgb(231,203,46)" fg:x="1702" fg:w="316"/><text x="71.1371%" y="495.50">chacha20poly1305::ci..</text></g><g><title>cipher::stream::StreamCipher::apply_keystream (316 samples, 13.16%)</title><rect x="70.8871%" y="469" width="13.1612%" height="15" fill="rgb(237,142,3)" fg:x="1702" fg:w="316"/><text x="71.1371%" y="479.50">cipher::stream::Stre..</text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (316 samples, 13.16%)</title><rect x="70.8871%" y="453" width="13.1612%" height="15" fill="rgb(241,107,1)" fg:x="1702" fg:w="316"/><text x="71.1371%" y="463.50">cipher::stream::Stre..</text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (316 samples, 13.16%)</title><rect x="70.8871%" y="437" width="13.1612%" height="15" fill="rgb(229,83,13)" fg:x="1702" fg:w="316"/><text x="71.1371%" y="447.50">&lt;cipher::stream_wrap..</text></g><g><title>cipher::stream_core::StreamCipherCore::write_keystream_block (17 samples, 0.71%)</title><rect x="83.3403%" y="421" width="0.7080%" height="15" fill="rgb(241,91,40)" fg:x="2001" fg:w="17"/><text x="83.5903%" y="431.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (17 samples, 0.71%)</title><rect x="83.3403%" y="405" width="0.7080%" height="15" fill="rgb(225,3,45)" fg:x="2001" fg:w="17"/><text x="83.5903%" y="415.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (17 samples, 0.71%)</title><rect x="83.3403%" y="389" width="0.7080%" height="15" fill="rgb(244,223,14)" fg:x="2001" fg:w="17"/><text x="83.5903%" y="399.50"></text></g><g><title>chacha20::backends::sse2::inner (17 samples, 0.71%)</title><rect x="83.3403%" y="373" width="0.7080%" height="15" fill="rgb(224,124,37)" fg:x="2001" fg:w="17"/><text x="83.5903%" y="383.50"></text></g><g><title>&lt;cipher::stream_core::WriteBlockCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (17 samples, 0.71%)</title><rect x="83.3403%" y="357" width="0.7080%" height="15" fill="rgb(251,171,30)" fg:x="2001" fg:w="17"/><text x="83.5903%" y="367.50"></text></g><g><title>&lt;chacha20::backends::sse2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (17 samples, 0.71%)</title><rect x="83.3403%" y="341" width="0.7080%" height="15" fill="rgb(236,46,54)" fg:x="2001" fg:w="17"/><text x="83.5903%" y="351.50"></text></g><g><title>chacha20::backends::sse2::rounds (17 samples, 0.71%)</title><rect x="83.3403%" y="325" width="0.7080%" height="15" fill="rgb(245,213,5)" fg:x="2001" fg:w="17"/><text x="83.5903%" y="335.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.04%)</title><rect x="84.0067%" y="309" width="0.0416%" height="15" fill="rgb(230,144,27)" fg:x="2017" fg:w="1"/><text x="84.2567%" y="319.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.04%)</title><rect x="84.0067%" y="293" width="0.0416%" height="15" fill="rgb(220,86,6)" fg:x="2017" fg:w="1"/><text x="84.2567%" y="303.50"></text></g><g><title>core::mem::replace (1 samples, 0.04%)</title><rect x="84.0067%" y="277" width="0.0416%" height="15" fill="rgb(240,20,13)" fg:x="2017" fg:w="1"/><text x="84.2567%" y="287.50"></text></g><g><title>core::ptr::read (1 samples, 0.04%)</title><rect x="84.0067%" y="261" width="0.0416%" height="15" fill="rgb(217,89,34)" fg:x="2017" fg:w="1"/><text x="84.2567%" y="271.50"></text></g><g><title>poly1305::backend::autodetect::avx2_cpuid::init_get (1 samples, 0.04%)</title><rect x="84.0483%" y="437" width="0.0416%" height="15" fill="rgb(229,13,5)" fg:x="2018" fg:w="1"/><text x="84.2983%" y="447.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for &amp;[T: N]&gt;::try_from (1 samples, 0.04%)</title><rect x="84.2982%" y="389" width="0.0416%" height="15" fill="rgb(244,67,35)" fg:x="2024" fg:w="1"/><text x="84.5482%" y="399.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (4 samples, 0.17%)</title><rect x="84.2149%" y="421" width="0.1666%" height="15" fill="rgb(221,40,2)" fg:x="2022" fg:w="4"/><text x="84.4649%" y="431.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (3 samples, 0.12%)</title><rect x="84.2566%" y="405" width="0.1249%" height="15" fill="rgb(237,157,21)" fg:x="2023" fg:w="3"/><text x="84.5066%" y="415.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.04%)</title><rect x="84.3399%" y="389" width="0.0416%" height="15" fill="rgb(222,94,11)" fg:x="2025" fg:w="1"/><text x="84.5899%" y="399.50"></text></g><g><title>&lt;poly1305::backend::soft::State as core::default::Default&gt;::default (1 samples, 0.04%)</title><rect x="84.3815%" y="421" width="0.0416%" height="15" fill="rgb(249,113,6)" fg:x="2026" fg:w="1"/><text x="84.6315%" y="431.50"></text></g><g><title>core::array::&lt;impl core::default::Default for [T: _]&gt;::default (1 samples, 0.04%)</title><rect x="84.3815%" y="405" width="0.0416%" height="15" fill="rgb(238,137,36)" fg:x="2026" fg:w="1"/><text x="84.6315%" y="415.50"></text></g><g><title>&lt;poly1305::Poly1305 as crypto_common::KeyInit&gt;::new (10 samples, 0.42%)</title><rect x="84.0483%" y="469" width="0.4165%" height="15" fill="rgb(210,102,26)" fg:x="2018" fg:w="10"/><text x="84.2983%" y="479.50"></text></g><g><title>poly1305::backend::autodetect::State::new (10 samples, 0.42%)</title><rect x="84.0483%" y="453" width="0.4165%" height="15" fill="rgb(218,30,30)" fg:x="2018" fg:w="10"/><text x="84.2983%" y="463.50"></text></g><g><title>poly1305::backend::soft::State::new (9 samples, 0.37%)</title><rect x="84.0900%" y="437" width="0.3748%" height="15" fill="rgb(214,67,26)" fg:x="2019" fg:w="9"/><text x="84.3400%" y="447.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.04%)</title><rect x="84.4232%" y="421" width="0.0416%" height="15" fill="rgb(251,9,53)" fg:x="2027" fg:w="1"/><text x="84.6732%" y="431.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.04%)</title><rect x="84.4232%" y="405" width="0.0416%" height="15" fill="rgb(228,204,25)" fg:x="2027" fg:w="1"/><text x="84.6732%" y="415.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="84.4232%" y="389" width="0.0416%" height="15" fill="rgb(207,153,8)" fg:x="2027" fg:w="1"/><text x="84.6732%" y="399.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.04%)</title><rect x="84.4232%" y="373" width="0.0416%" height="15" fill="rgb(242,9,16)" fg:x="2027" fg:w="1"/><text x="84.6732%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::cast (1 samples, 0.04%)</title><rect x="84.4232%" y="357" width="0.0416%" height="15" fill="rgb(217,211,10)" fg:x="2027" fg:w="1"/><text x="84.6732%" y="367.50"></text></g><g><title>chacha20::backends::sse2::double_quarter_round (1 samples, 0.04%)</title><rect x="84.5481%" y="309" width="0.0416%" height="15" fill="rgb(219,228,52)" fg:x="2030" fg:w="1"/><text x="84.7981%" y="319.50"></text></g><g><title>chacha20::backends::sse2::cols_to_rows (1 samples, 0.04%)</title><rect x="84.5481%" y="293" width="0.0416%" height="15" fill="rgb(231,92,29)" fg:x="2030" fg:w="1"/><text x="84.7981%" y="303.50"></text></g><g><title>chacha20::backends::sse2::rounds (2 samples, 0.08%)</title><rect x="84.5481%" y="325" width="0.0833%" height="15" fill="rgb(232,8,23)" fg:x="2030" fg:w="2"/><text x="84.7981%" y="335.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.04%)</title><rect x="84.5898%" y="309" width="0.0416%" height="15" fill="rgb(216,211,34)" fg:x="2031" fg:w="1"/><text x="84.8398%" y="319.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.04%)</title><rect x="84.5898%" y="293" width="0.0416%" height="15" fill="rgb(236,151,0)" fg:x="2031" fg:w="1"/><text x="84.8398%" y="303.50"></text></g><g><title>[unknown] (2,027 samples, 84.42%)</title><rect x="0.2499%" y="597" width="84.4232%" height="15" fill="rgb(209,168,3)" fg:x="6" fg:w="2027"/><text x="0.4999%" y="607.50">[unknown]</text></g><g><title>tftp::start_send (333 samples, 13.87%)</title><rect x="70.8038%" y="581" width="13.8692%" height="15" fill="rgb(208,129,28)" fg:x="1700" fg:w="333"/><text x="71.0538%" y="591.50">tftp::start_send</text></g><g><title>tftp::client::client::send_file (333 samples, 13.87%)</title><rect x="70.8038%" y="565" width="13.8692%" height="15" fill="rgb(229,78,22)" fg:x="1700" fg:w="333"/><text x="71.0538%" y="575.50">tftp::client::client:..</text></g><g><title>&lt;tftp::socket::EncryptionBoundSocket&lt;S&gt; as tftp::socket::Socket&gt;::send_to (331 samples, 13.79%)</title><rect x="70.8871%" y="549" width="13.7859%" height="15" fill="rgb(228,187,13)" fg:x="1702" fg:w="331"/><text x="71.1371%" y="559.50">&lt;tftp::socket::Encryp..</text></g><g><title>tftp::encryption::Encryptor::encrypt (331 samples, 13.79%)</title><rect x="70.8871%" y="533" width="13.7859%" height="15" fill="rgb(240,119,24)" fg:x="1702" fg:w="331"/><text x="71.1371%" y="543.50">tftp::encryption::Enc..</text></g><g><title>aead::AeadInPlace::encrypt_in_place (331 samples, 13.79%)</title><rect x="70.8871%" y="517" width="13.7859%" height="15" fill="rgb(209,194,42)" fg:x="1702" fg:w="331"/><text x="71.1371%" y="527.50">aead::AeadInPlace::en..</text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::encrypt_in_place_detached (331 samples, 13.79%)</title><rect x="70.8871%" y="501" width="13.7859%" height="15" fill="rgb(247,200,46)" fg:x="1702" fg:w="331"/><text x="71.1371%" y="511.50">&lt;chacha20poly1305::Ch..</text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (15 samples, 0.62%)</title><rect x="84.0483%" y="485" width="0.6247%" height="15" fill="rgb(218,76,16)" fg:x="2018" fg:w="15"/><text x="84.2983%" y="495.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (5 samples, 0.21%)</title><rect x="84.4648%" y="469" width="0.2082%" height="15" fill="rgb(225,21,48)" fg:x="2028" fg:w="5"/><text x="84.7148%" y="479.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (5 samples, 0.21%)</title><rect x="84.4648%" y="453" width="0.2082%" height="15" fill="rgb(239,223,50)" fg:x="2028" fg:w="5"/><text x="84.7148%" y="463.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (5 samples, 0.21%)</title><rect x="84.4648%" y="437" width="0.2082%" height="15" fill="rgb(244,45,21)" fg:x="2028" fg:w="5"/><text x="84.7148%" y="447.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::write_keystream_block (5 samples, 0.21%)</title><rect x="84.4648%" y="421" width="0.2082%" height="15" fill="rgb(232,33,43)" fg:x="2028" fg:w="5"/><text x="84.7148%" y="431.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (5 samples, 0.21%)</title><rect x="84.4648%" y="405" width="0.2082%" height="15" fill="rgb(209,8,3)" fg:x="2028" fg:w="5"/><text x="84.7148%" y="415.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (5 samples, 0.21%)</title><rect x="84.4648%" y="389" width="0.2082%" height="15" fill="rgb(214,25,53)" fg:x="2028" fg:w="5"/><text x="84.7148%" y="399.50"></text></g><g><title>chacha20::backends::sse2::inner (4 samples, 0.17%)</title><rect x="84.5065%" y="373" width="0.1666%" height="15" fill="rgb(254,186,54)" fg:x="2029" fg:w="4"/><text x="84.7565%" y="383.50"></text></g><g><title>&lt;cipher::stream_core::WriteBlockCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (3 samples, 0.12%)</title><rect x="84.5481%" y="357" width="0.1249%" height="15" fill="rgb(208,174,49)" fg:x="2030" fg:w="3"/><text x="84.7981%" y="367.50"></text></g><g><title>&lt;chacha20::backends::sse2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (3 samples, 0.12%)</title><rect x="84.5481%" y="341" width="0.1249%" height="15" fill="rgb(233,191,51)" fg:x="2030" fg:w="3"/><text x="84.7981%" y="351.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_storeu_si128 (1 samples, 0.04%)</title><rect x="84.6314%" y="325" width="0.0416%" height="15" fill="rgb(222,134,10)" fg:x="2032" fg:w="1"/><text x="84.8814%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="84.7980%" y="277" width="0.0416%" height="15" fill="rgb(230,226,20)" fg:x="2036" fg:w="1"/><text x="85.0480%" y="287.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="84.8397%" y="277" width="0.0416%" height="15" fill="rgb(251,111,25)" fg:x="2037" fg:w="1"/><text x="85.0897%" y="287.50"></text></g><g><title>&lt;tftp::packet::Packet as tftp::packet::ByteConverter&gt;::from_bytes (1 samples, 0.04%)</title><rect x="84.8813%" y="277" width="0.0416%" height="15" fill="rgb(224,40,46)" fg:x="2038" fg:w="1"/><text x="85.1313%" y="287.50"></text></g><g><title>core::mem::size_of_val (1 samples, 0.04%)</title><rect x="84.8813%" y="261" width="0.0416%" height="15" fill="rgb(236,108,47)" fg:x="2038" fg:w="1"/><text x="85.1313%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.04%)</title><rect x="84.9646%" y="261" width="0.0416%" height="15" fill="rgb(234,93,0)" fg:x="2040" fg:w="1"/><text x="85.2146%" y="271.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="84.9646%" y="245" width="0.0416%" height="15" fill="rgb(224,213,32)" fg:x="2040" fg:w="1"/><text x="85.2146%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.04%)</title><rect x="85.0895%" y="181" width="0.0416%" height="15" fill="rgb(251,11,48)" fg:x="2043" fg:w="1"/><text x="85.3395%" y="191.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="85.0895%" y="165" width="0.0416%" height="15" fill="rgb(236,173,5)" fg:x="2043" fg:w="1"/><text x="85.3395%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.08%)</title><rect x="85.0895%" y="229" width="0.0833%" height="15" fill="rgb(230,95,12)" fg:x="2043" fg:w="2"/><text x="85.3395%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.08%)</title><rect x="85.0895%" y="213" width="0.0833%" height="15" fill="rgb(232,209,1)" fg:x="2043" fg:w="2"/><text x="85.3395%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.08%)</title><rect x="85.0895%" y="197" width="0.0833%" height="15" fill="rgb(232,6,1)" fg:x="2043" fg:w="2"/><text x="85.3395%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.04%)</title><rect x="85.1312%" y="181" width="0.0416%" height="15" fill="rgb(210,224,50)" fg:x="2044" fg:w="1"/><text x="85.3812%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="85.1312%" y="165" width="0.0416%" height="15" fill="rgb(228,127,35)" fg:x="2044" fg:w="1"/><text x="85.3812%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="85.1312%" y="149" width="0.0416%" height="15" fill="rgb(245,102,45)" fg:x="2044" fg:w="1"/><text x="85.3812%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.04%)</title><rect x="85.1312%" y="133" width="0.0416%" height="15" fill="rgb(214,1,49)" fg:x="2044" fg:w="1"/><text x="85.3812%" y="143.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.12%)</title><rect x="85.0895%" y="245" width="0.1249%" height="15" fill="rgb(226,163,40)" fg:x="2043" fg:w="3"/><text x="85.3395%" y="255.50"></text></g><g><title>memcpy (1 samples, 0.04%)</title><rect x="85.1728%" y="229" width="0.0416%" height="15" fill="rgb(239,212,28)" fg:x="2045" fg:w="1"/><text x="85.4228%" y="239.50"></text></g><g><title>&lt;tftp::packet::DataPacket as tftp::packet::ByteConverter&gt;::to_bytes (6 samples, 0.25%)</title><rect x="85.0062%" y="261" width="0.2499%" height="15" fill="rgb(220,20,13)" fg:x="2041" fg:w="6"/><text x="85.2562%" y="271.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.04%)</title><rect x="85.2145%" y="245" width="0.0416%" height="15" fill="rgb(210,164,35)" fg:x="2046" fg:w="1"/><text x="85.4645%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.04%)</title><rect x="85.3394%" y="165" width="0.0416%" height="15" fill="rgb(248,109,41)" fg:x="2049" fg:w="1"/><text x="85.5894%" y="175.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.04%)</title><rect x="85.3811%" y="133" width="0.0416%" height="15" fill="rgb(238,23,50)" fg:x="2050" fg:w="1"/><text x="85.6311%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::by_ref_sized::ByRefSized&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.04%)</title><rect x="85.3811%" y="117" width="0.0416%" height="15" fill="rgb(211,48,49)" fg:x="2050" fg:w="1"/><text x="85.6311%" y="127.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.12%)</title><rect x="88.2132%" y="117" width="0.1249%" height="15" fill="rgb(223,36,21)" fg:x="2118" fg:w="3"/><text x="88.4632%" y="127.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (103 samples, 4.29%)</title><rect x="85.2978%" y="197" width="4.2899%" height="15" fill="rgb(207,123,46)" fg:x="2048" fg:w="103"/><text x="85.5478%" y="207.50">&lt;allo..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (103 samples, 4.29%)</title><rect x="85.2978%" y="181" width="4.2899%" height="15" fill="rgb(240,218,32)" fg:x="2048" fg:w="103"/><text x="85.5478%" y="191.50">alloc..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (101 samples, 4.21%)</title><rect x="85.3811%" y="165" width="4.2066%" height="15" fill="rgb(252,5,43)" fg:x="2050" fg:w="101"/><text x="85.6311%" y="175.50">core:..</text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (101 samples, 4.21%)</title><rect x="85.3811%" y="149" width="4.2066%" height="15" fill="rgb(252,84,19)" fg:x="2050" fg:w="101"/><text x="85.6311%" y="159.50">&lt;core..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (100 samples, 4.16%)</title><rect x="85.4227%" y="133" width="4.1649%" height="15" fill="rgb(243,152,39)" fg:x="2051" fg:w="100"/><text x="85.6727%" y="143.50">core:..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (30 samples, 1.25%)</title><rect x="88.3382%" y="117" width="1.2495%" height="15" fill="rgb(234,160,15)" fg:x="2121" fg:w="30"/><text x="88.5882%" y="127.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (105 samples, 4.37%)</title><rect x="85.2561%" y="261" width="4.3732%" height="15" fill="rgb(237,34,20)" fg:x="2047" fg:w="105"/><text x="85.5061%" y="271.50">core:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (105 samples, 4.37%)</title><rect x="85.2561%" y="245" width="4.3732%" height="15" fill="rgb(229,97,13)" fg:x="2047" fg:w="105"/><text x="85.5061%" y="255.50">&lt;allo..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (105 samples, 4.37%)</title><rect x="85.2561%" y="229" width="4.3732%" height="15" fill="rgb(234,71,50)" fg:x="2047" fg:w="105"/><text x="85.5061%" y="239.50">&lt;allo..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (105 samples, 4.37%)</title><rect x="85.2561%" y="213" width="4.3732%" height="15" fill="rgb(253,155,4)" fg:x="2047" fg:w="105"/><text x="85.5061%" y="223.50">&lt;allo..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.04%)</title><rect x="89.5877%" y="197" width="0.0416%" height="15" fill="rgb(222,185,37)" fg:x="2151" fg:w="1"/><text x="89.8377%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="89.5877%" y="181" width="0.0416%" height="15" fill="rgb(251,177,13)" fg:x="2151" fg:w="1"/><text x="89.8377%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="89.5877%" y="165" width="0.0416%" height="15" fill="rgb(250,179,40)" fg:x="2151" fg:w="1"/><text x="89.8377%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.04%)</title><rect x="89.5877%" y="149" width="0.0416%" height="15" fill="rgb(242,44,2)" fg:x="2151" fg:w="1"/><text x="89.8377%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="89.5877%" y="133" width="0.0416%" height="15" fill="rgb(216,177,13)" fg:x="2151" fg:w="1"/><text x="89.8377%" y="143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="89.5877%" y="117" width="0.0416%" height="15" fill="rgb(216,106,43)" fg:x="2151" fg:w="1"/><text x="89.8377%" y="127.50"></text></g><g><title>&lt;tftp::packet::Packet as tftp::packet::ByteConverter&gt;::to_bytes (114 samples, 4.75%)</title><rect x="84.9229%" y="277" width="4.7480%" height="15" fill="rgb(216,183,2)" fg:x="2039" fg:w="114"/><text x="85.1729%" y="287.50">&lt;tftp:..</text></g><g><title>tftp::packet::PacketType::to_bytes (1 samples, 0.04%)</title><rect x="89.6293%" y="261" width="0.0416%" height="15" fill="rgb(249,75,3)" fg:x="2152" fg:w="1"/><text x="89.8793%" y="271.50"></text></g><g><title>memcpy (1 samples, 0.04%)</title><rect x="89.6710%" y="245" width="0.0416%" height="15" fill="rgb(219,67,39)" fg:x="2153" fg:w="1"/><text x="89.9210%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.04%)</title><rect x="89.7126%" y="229" width="0.0416%" height="15" fill="rgb(253,228,2)" fg:x="2154" fg:w="1"/><text x="89.9626%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.04%)</title><rect x="89.7126%" y="213" width="0.0416%" height="15" fill="rgb(235,138,27)" fg:x="2154" fg:w="1"/><text x="89.9626%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.04%)</title><rect x="89.7126%" y="197" width="0.0416%" height="15" fill="rgb(236,97,51)" fg:x="2154" fg:w="1"/><text x="89.9626%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="89.7126%" y="181" width="0.0416%" height="15" fill="rgb(240,80,30)" fg:x="2154" fg:w="1"/><text x="89.9626%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1 samples, 0.04%)</title><rect x="89.7126%" y="165" width="0.0416%" height="15" fill="rgb(230,178,19)" fg:x="2154" fg:w="1"/><text x="89.9626%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.04%)</title><rect x="89.7126%" y="149" width="0.0416%" height="15" fill="rgb(210,190,27)" fg:x="2154" fg:w="1"/><text x="89.9626%" y="159.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.04%)</title><rect x="89.7126%" y="133" width="0.0416%" height="15" fill="rgb(222,107,31)" fg:x="2154" fg:w="1"/><text x="89.9626%" y="143.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="89.7126%" y="117" width="0.0416%" height="15" fill="rgb(216,127,34)" fg:x="2154" fg:w="1"/><text x="89.9626%" y="127.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="89.7959%" y="213" width="0.0416%" height="15" fill="rgb(234,116,52)" fg:x="2156" fg:w="1"/><text x="90.0459%" y="223.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="89.8376%" y="213" width="0.0416%" height="15" fill="rgb(222,124,15)" fg:x="2157" fg:w="1"/><text x="90.0876%" y="223.50"></text></g><g><title>polling::Poller::wait (8 samples, 0.33%)</title><rect x="89.7126%" y="245" width="0.3332%" height="15" fill="rgb(231,179,28)" fg:x="2154" fg:w="8"/><text x="89.9626%" y="255.50"></text></g><g><title>polling::epoll::Poller::wait (7 samples, 0.29%)</title><rect x="89.7543%" y="229" width="0.2915%" height="15" fill="rgb(226,93,45)" fg:x="2155" fg:w="7"/><text x="90.0043%" y="239.50"></text></g><g><title>epoll_wait (4 samples, 0.17%)</title><rect x="89.8792%" y="213" width="0.1666%" height="15" fill="rgb(215,8,51)" fg:x="2158" fg:w="4"/><text x="90.1292%" y="223.50"></text></g><g><title>&lt;tftp::socket::StdSocket as tftp::socket::Socket&gt;::recv_from (11 samples, 0.46%)</title><rect x="89.6710%" y="261" width="0.4581%" height="15" fill="rgb(223,106,5)" fg:x="2153" fg:w="11"/><text x="89.9210%" y="271.50"></text></g><g><title>std::net::udp::UdpSocket::recv_from (2 samples, 0.08%)</title><rect x="90.0458%" y="245" width="0.0833%" height="15" fill="rgb(250,191,5)" fg:x="2162" fg:w="2"/><text x="90.2958%" y="255.50"></text></g><g><title>std::sys_common::net::UdpSocket::recv_from (2 samples, 0.08%)</title><rect x="90.0458%" y="229" width="0.0833%" height="15" fill="rgb(242,132,44)" fg:x="2162" fg:w="2"/><text x="90.2958%" y="239.50"></text></g><g><title>std::sys::unix::net::Socket::recv_from (2 samples, 0.08%)</title><rect x="90.0458%" y="213" width="0.0833%" height="15" fill="rgb(251,152,29)" fg:x="2162" fg:w="2"/><text x="90.2958%" y="223.50"></text></g><g><title>std::sys::unix::net::Socket::recv_from_with_flags (2 samples, 0.08%)</title><rect x="90.0458%" y="197" width="0.0833%" height="15" fill="rgb(218,179,5)" fg:x="2162" fg:w="2"/><text x="90.2958%" y="207.50"></text></g><g><title>recvfrom (2 samples, 0.08%)</title><rect x="90.0458%" y="181" width="0.0833%" height="15" fill="rgb(227,67,19)" fg:x="2162" fg:w="2"/><text x="90.2958%" y="191.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (1 samples, 0.04%)</title><rect x="90.1291%" y="197" width="0.0416%" height="15" fill="rgb(233,119,31)" fg:x="2164" fg:w="1"/><text x="90.3791%" y="207.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.04%)</title><rect x="90.1291%" y="181" width="0.0416%" height="15" fill="rgb(241,120,22)" fg:x="2164" fg:w="1"/><text x="90.3791%" y="191.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (2 samples, 0.08%)</title><rect x="90.1291%" y="229" width="0.0833%" height="15" fill="rgb(224,102,30)" fg:x="2164" fg:w="2"/><text x="90.3791%" y="239.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as crypto_common::KeyIvInit&gt;::new (2 samples, 0.08%)</title><rect x="90.1291%" y="213" width="0.0833%" height="15" fill="rgb(210,164,37)" fg:x="2164" fg:w="2"/><text x="90.3791%" y="223.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.04%)</title><rect x="90.1708%" y="197" width="0.0416%" height="15" fill="rgb(226,191,16)" fg:x="2165" fg:w="1"/><text x="90.4208%" y="207.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.04%)</title><rect x="90.1708%" y="181" width="0.0416%" height="15" fill="rgb(214,40,45)" fg:x="2165" fg:w="1"/><text x="90.4208%" y="191.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (1 samples, 0.04%)</title><rect x="90.1708%" y="165" width="0.0416%" height="15" fill="rgb(244,29,26)" fg:x="2165" fg:w="1"/><text x="90.4208%" y="175.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="90.1708%" y="149" width="0.0416%" height="15" fill="rgb(216,16,5)" fg:x="2165" fg:w="1"/><text x="90.4208%" y="159.50"></text></g><g><title>&lt;typenum::uint::UInt&lt;U,B&gt; as typenum::marker_traits::Unsigned&gt;::to_usize (1 samples, 0.04%)</title><rect x="90.2124%" y="213" width="0.0416%" height="15" fill="rgb(249,76,35)" fg:x="2166" fg:w="1"/><text x="90.4624%" y="223.50"></text></g><g><title>&lt;typenum::uint::UInt&lt;U,B&gt; as typenum::marker_traits::Unsigned&gt;::to_usize (1 samples, 0.04%)</title><rect x="90.2124%" y="197" width="0.0416%" height="15" fill="rgb(207,11,44)" fg:x="2166" fg:w="1"/><text x="90.4624%" y="207.50"></text></g><g><title>&lt;typenum::uint::UInt&lt;U,B&gt; as typenum::marker_traits::Unsigned&gt;::to_usize (1 samples, 0.04%)</title><rect x="90.2124%" y="181" width="0.0416%" height="15" fill="rgb(228,190,49)" fg:x="2166" fg:w="1"/><text x="90.4624%" y="191.50"></text></g><g><title>&lt;typenum::uint::UInt&lt;U,B&gt; as typenum::marker_traits::Unsigned&gt;::to_usize (1 samples, 0.04%)</title><rect x="90.2124%" y="165" width="0.0416%" height="15" fill="rgb(214,173,12)" fg:x="2166" fg:w="1"/><text x="90.4624%" y="175.50"></text></g><g><title>&lt;tftp::socket::EncryptionBoundSocket&lt;S&gt; as tftp::socket::Socket&gt;::recv_from (15 samples, 0.62%)</title><rect x="89.6710%" y="277" width="0.6247%" height="15" fill="rgb(218,26,35)" fg:x="2153" fg:w="15"/><text x="89.9210%" y="287.50"></text></g><g><title>tftp::encryption::Encryptor::decrypt (4 samples, 0.17%)</title><rect x="90.1291%" y="261" width="0.1666%" height="15" fill="rgb(220,200,19)" fg:x="2164" fg:w="4"/><text x="90.3791%" y="271.50"></text></g><g><title>aead::AeadInPlace::decrypt_in_place (4 samples, 0.17%)</title><rect x="90.1291%" y="245" width="0.1666%" height="15" fill="rgb(239,95,49)" fg:x="2164" fg:w="4"/><text x="90.3791%" y="255.50"></text></g><g><title>&lt;typenum::uint::UInt&lt;U,B&gt; as typenum::marker_traits::Unsigned&gt;::to_usize (2 samples, 0.08%)</title><rect x="90.2124%" y="229" width="0.0833%" height="15" fill="rgb(235,85,53)" fg:x="2166" fg:w="2"/><text x="90.4624%" y="239.50"></text></g><g><title>core::convert::num::&lt;impl core::convert::From&lt;u8&gt; for usize&gt;::from (1 samples, 0.04%)</title><rect x="90.2541%" y="213" width="0.0416%" height="15" fill="rgb(233,133,31)" fg:x="2167" fg:w="1"/><text x="90.5041%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="90.3790%" y="245" width="0.0416%" height="15" fill="rgb(218,25,20)" fg:x="2170" fg:w="1"/><text x="90.6290%" y="255.50"></text></g><g><title>&lt;core::option::IntoIter&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="90.4623%" y="229" width="0.0416%" height="15" fill="rgb(252,210,38)" fg:x="2172" fg:w="1"/><text x="90.7123%" y="239.50"></text></g><g><title>&lt;core::option::Item&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="90.4623%" y="213" width="0.0416%" height="15" fill="rgb(242,134,21)" fg:x="2172" fg:w="1"/><text x="90.7123%" y="223.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (1 samples, 0.04%)</title><rect x="90.4623%" y="197" width="0.0416%" height="15" fill="rgb(213,28,48)" fg:x="2172" fg:w="1"/><text x="90.7123%" y="207.50"></text></g><g><title>core::mem::replace (1 samples, 0.04%)</title><rect x="90.4623%" y="181" width="0.0416%" height="15" fill="rgb(250,196,2)" fg:x="2172" fg:w="1"/><text x="90.7123%" y="191.50"></text></g><g><title>&lt;tftp::socket::StdSocket as tftp::socket::Socket&gt;::send_to (5 samples, 0.21%)</title><rect x="90.3374%" y="261" width="0.2082%" height="15" fill="rgb(227,5,17)" fg:x="2169" fg:w="5"/><text x="90.5874%" y="271.50"></text></g><g><title>std::net::udp::UdpSocket::send_to (3 samples, 0.12%)</title><rect x="90.4207%" y="245" width="0.1249%" height="15" fill="rgb(221,226,24)" fg:x="2171" fg:w="3"/><text x="90.6707%" y="255.50"></text></g><g><title>std::sys_common::net::UdpSocket::send_to (1 samples, 0.04%)</title><rect x="90.5040%" y="229" width="0.0416%" height="15" fill="rgb(211,5,48)" fg:x="2173" fg:w="1"/><text x="90.7540%" y="239.50"></text></g><g><title>log::max_level (2 samples, 0.08%)</title><rect x="90.5456%" y="261" width="0.0833%" height="15" fill="rgb(219,150,6)" fg:x="2174" fg:w="2"/><text x="90.7956%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.04%)</title><rect x="90.5873%" y="245" width="0.0416%" height="15" fill="rgb(251,46,16)" fg:x="2175" fg:w="1"/><text x="90.8373%" y="255.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.04%)</title><rect x="90.5873%" y="229" width="0.0416%" height="15" fill="rgb(220,204,40)" fg:x="2175" fg:w="1"/><text x="90.8373%" y="239.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="90.6289%" y="101" width="0.0416%" height="15" fill="rgb(211,85,2)" fg:x="2176" fg:w="1"/><text x="90.8789%" y="111.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.08%)</title><rect x="90.6289%" y="165" width="0.0833%" height="15" fill="rgb(229,17,7)" fg:x="2176" fg:w="2"/><text x="90.8789%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.08%)</title><rect x="90.6289%" y="149" width="0.0833%" height="15" fill="rgb(239,72,28)" fg:x="2176" fg:w="2"/><text x="90.8789%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.08%)</title><rect x="90.6289%" y="133" width="0.0833%" height="15" fill="rgb(230,47,54)" fg:x="2176" fg:w="2"/><text x="90.8789%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.08%)</title><rect x="90.6289%" y="117" width="0.0833%" height="15" fill="rgb(214,50,8)" fg:x="2176" fg:w="2"/><text x="90.8789%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.04%)</title><rect x="90.6706%" y="101" width="0.0416%" height="15" fill="rgb(216,198,43)" fg:x="2177" fg:w="1"/><text x="90.9206%" y="111.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.04%)</title><rect x="90.6706%" y="85" width="0.0416%" height="15" fill="rgb(234,20,35)" fg:x="2177" fg:w="1"/><text x="90.9206%" y="95.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.04%)</title><rect x="90.6706%" y="69" width="0.0416%" height="15" fill="rgb(254,45,19)" fg:x="2177" fg:w="1"/><text x="90.9206%" y="79.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as aead::Buffer&gt;::extend_from_slice (3 samples, 0.12%)</title><rect x="90.6289%" y="229" width="0.1249%" height="15" fill="rgb(219,14,44)" fg:x="2176" fg:w="3"/><text x="90.8789%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.12%)</title><rect x="90.6289%" y="213" width="0.1249%" height="15" fill="rgb(217,220,26)" fg:x="2176" fg:w="3"/><text x="90.8789%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.12%)</title><rect x="90.6289%" y="197" width="0.1249%" height="15" fill="rgb(213,158,28)" fg:x="2176" fg:w="3"/><text x="90.8789%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.12%)</title><rect x="90.6289%" y="181" width="0.1249%" height="15" fill="rgb(252,51,52)" fg:x="2176" fg:w="3"/><text x="90.8789%" y="191.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.04%)</title><rect x="90.7122%" y="165" width="0.0416%" height="15" fill="rgb(246,89,16)" fg:x="2178" fg:w="1"/><text x="90.9622%" y="175.50"></text></g><g><title>memcpy (1 samples, 0.04%)</title><rect x="90.7122%" y="149" width="0.0416%" height="15" fill="rgb(216,158,49)" fg:x="2178" fg:w="1"/><text x="90.9622%" y="159.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.04%)</title><rect x="90.8372%" y="181" width="0.0416%" height="15" fill="rgb(236,107,19)" fg:x="2181" fg:w="1"/><text x="91.0872%" y="191.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.08%)</title><rect x="90.8788%" y="181" width="0.0833%" height="15" fill="rgb(228,185,30)" fg:x="2182" fg:w="2"/><text x="91.1288%" y="191.50"></text></g><g><title>core::slice::raw::from_raw_parts (2 samples, 0.08%)</title><rect x="90.8788%" y="165" width="0.0833%" height="15" fill="rgb(246,134,8)" fg:x="2182" fg:w="2"/><text x="91.1288%" y="175.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (5 samples, 0.21%)</title><rect x="90.7955%" y="197" width="0.2082%" height="15" fill="rgb(214,143,50)" fg:x="2180" fg:w="5"/><text x="91.0455%" y="207.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.04%)</title><rect x="90.9621%" y="181" width="0.0416%" height="15" fill="rgb(228,75,8)" fg:x="2184" fg:w="1"/><text x="91.2121%" y="191.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.04%)</title><rect x="90.9621%" y="165" width="0.0416%" height="15" fill="rgb(207,175,4)" fg:x="2184" fg:w="1"/><text x="91.2121%" y="175.50"></text></g><g><title>tftp::encryption::Encryptor::encrypt (10 samples, 0.42%)</title><rect x="90.6289%" y="261" width="0.4165%" height="15" fill="rgb(205,108,24)" fg:x="2176" fg:w="10"/><text x="90.8789%" y="271.50"></text></g><g><title>aead::AeadInPlace::encrypt_in_place (10 samples, 0.42%)</title><rect x="90.6289%" y="245" width="0.4165%" height="15" fill="rgb(244,120,49)" fg:x="2176" fg:w="10"/><text x="90.8789%" y="255.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::encrypt_in_place_detached (7 samples, 0.29%)</title><rect x="90.7539%" y="229" width="0.2915%" height="15" fill="rgb(223,47,38)" fg:x="2179" fg:w="7"/><text x="91.0039%" y="239.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as crypto_common::KeyIvInit&gt;::new (7 samples, 0.29%)</title><rect x="90.7539%" y="213" width="0.2915%" height="15" fill="rgb(229,179,11)" fg:x="2179" fg:w="7"/><text x="91.0039%" y="223.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.04%)</title><rect x="91.0037%" y="197" width="0.0416%" height="15" fill="rgb(231,122,1)" fg:x="2185" fg:w="1"/><text x="91.2537%" y="207.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.04%)</title><rect x="91.0037%" y="181" width="0.0416%" height="15" fill="rgb(245,119,9)" fg:x="2185" fg:w="1"/><text x="91.2537%" y="191.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::iter_position (1 samples, 0.04%)</title><rect x="91.0037%" y="165" width="0.0416%" height="15" fill="rgb(241,163,25)" fg:x="2185" fg:w="1"/><text x="91.2537%" y="175.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (1 samples, 0.04%)</title><rect x="91.0037%" y="149" width="0.0416%" height="15" fill="rgb(217,214,3)" fg:x="2185" fg:w="1"/><text x="91.2537%" y="159.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (1 samples, 0.04%)</title><rect x="91.0870%" y="229" width="0.0416%" height="15" fill="rgb(240,86,28)" fg:x="2187" fg:w="1"/><text x="91.3370%" y="239.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (1 samples, 0.04%)</title><rect x="91.0870%" y="213" width="0.0416%" height="15" fill="rgb(215,47,9)" fg:x="2187" fg:w="1"/><text x="91.3370%" y="223.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.04%)</title><rect x="91.0870%" y="197" width="0.0416%" height="15" fill="rgb(252,25,45)" fg:x="2187" fg:w="1"/><text x="91.3370%" y="207.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from::{{closure}} (1 samples, 0.04%)</title><rect x="91.0870%" y="181" width="0.0416%" height="15" fill="rgb(251,164,9)" fg:x="2187" fg:w="1"/><text x="91.3370%" y="191.50"></text></g><g><title>&lt;tftp::socket::EncryptionBoundSocket&lt;S&gt; as tftp::socket::Socket&gt;::send_to (21 samples, 0.87%)</title><rect x="90.2957%" y="277" width="0.8746%" height="15" fill="rgb(233,194,0)" fg:x="2168" fg:w="21"/><text x="90.5457%" y="287.50"></text></g><g><title>tftp::packet::PacketType::from_bytes (3 samples, 0.12%)</title><rect x="91.0454%" y="261" width="0.1249%" height="15" fill="rgb(249,111,24)" fg:x="2186" fg:w="3"/><text x="91.2954%" y="271.50"></text></g><g><title>tftp::packet::try_from (2 samples, 0.08%)</title><rect x="91.0870%" y="245" width="0.0833%" height="15" fill="rgb(250,223,3)" fg:x="2187" fg:w="2"/><text x="91.3370%" y="255.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="91.1287%" y="229" width="0.0416%" height="15" fill="rgb(236,178,37)" fg:x="2188" fg:w="1"/><text x="91.3787%" y="239.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove (1 samples, 0.04%)</title><rect x="91.1703%" y="261" width="0.0416%" height="15" fill="rgb(241,158,50)" fg:x="2189" fg:w="1"/><text x="91.4203%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove_entry (1 samples, 0.04%)</title><rect x="91.1703%" y="245" width="0.0416%" height="15" fill="rgb(213,121,41)" fg:x="2189" fg:w="1"/><text x="91.4203%" y="255.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (1 samples, 0.04%)</title><rect x="91.1703%" y="229" width="0.0416%" height="15" fill="rgb(240,92,3)" fg:x="2189" fg:w="1"/><text x="91.4203%" y="239.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (1 samples, 0.04%)</title><rect x="91.1703%" y="213" width="0.0416%" height="15" fill="rgb(205,123,3)" fg:x="2189" fg:w="1"/><text x="91.4203%" y="223.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1 samples, 0.04%)</title><rect x="91.1703%" y="197" width="0.0416%" height="15" fill="rgb(205,97,47)" fg:x="2189" fg:w="1"/><text x="91.4203%" y="207.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (1 samples, 0.04%)</title><rect x="91.1703%" y="181" width="0.0416%" height="15" fill="rgb(247,152,14)" fg:x="2189" fg:w="1"/><text x="91.4203%" y="191.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::next (1 samples, 0.04%)</title><rect x="91.2120%" y="261" width="0.0416%" height="15" fill="rgb(248,195,53)" fg:x="2190" fg:w="1"/><text x="91.4620%" y="271.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::iter::range::RangeInclusiveIteratorImpl&gt;::spec_next (1 samples, 0.04%)</title><rect x="91.2120%" y="245" width="0.0416%" height="15" fill="rgb(226,201,16)" fg:x="2190" fg:w="1"/><text x="91.4620%" y="255.50"></text></g><g><title>core::mem::replace (1 samples, 0.04%)</title><rect x="91.2120%" y="229" width="0.0416%" height="15" fill="rgb(205,98,0)" fg:x="2190" fg:w="1"/><text x="91.4620%" y="239.50"></text></g><g><title>&lt;tftp::storage::FileReader&lt;T&gt; as tftp::storage::BlockReader&gt;::free_block (4 samples, 0.17%)</title><rect x="91.1703%" y="277" width="0.1666%" height="15" fill="rgb(214,191,48)" fg:x="2189" fg:w="4"/><text x="91.4203%" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.08%)</title><rect x="91.2536%" y="261" width="0.0833%" height="15" fill="rgb(237,112,39)" fg:x="2191" fg:w="2"/><text x="91.5036%" y="271.50"></text></g><g><title>[libc.so.6] (2 samples, 0.08%)</title><rect x="91.2536%" y="245" width="0.0833%" height="15" fill="rgb(247,203,27)" fg:x="2191" fg:w="2"/><text x="91.5036%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="91.3786%" y="245" width="0.0416%" height="15" fill="rgb(235,124,28)" fg:x="2194" fg:w="1"/><text x="91.6286%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.08%)</title><rect x="91.4202%" y="197" width="0.0833%" height="15" fill="rgb(208,207,46)" fg:x="2195" fg:w="2"/><text x="91.6702%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.08%)</title><rect x="91.4202%" y="181" width="0.0833%" height="15" fill="rgb(234,176,4)" fg:x="2195" fg:w="2"/><text x="91.6702%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.08%)</title><rect x="91.4202%" y="165" width="0.0833%" height="15" fill="rgb(230,133,28)" fg:x="2195" fg:w="2"/><text x="91.6702%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.08%)</title><rect x="91.4202%" y="149" width="0.0833%" height="15" fill="rgb(211,137,40)" fg:x="2195" fg:w="2"/><text x="91.6702%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.08%)</title><rect x="91.4202%" y="133" width="0.0833%" height="15" fill="rgb(254,35,13)" fg:x="2195" fg:w="2"/><text x="91.6702%" y="143.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.08%)</title><rect x="91.4202%" y="117" width="0.0833%" height="15" fill="rgb(225,49,51)" fg:x="2195" fg:w="2"/><text x="91.6702%" y="127.50"></text></g><g><title>malloc (2 samples, 0.08%)</title><rect x="91.4202%" y="101" width="0.0833%" height="15" fill="rgb(251,10,15)" fg:x="2195" fg:w="2"/><text x="91.6702%" y="111.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.17%)</title><rect x="91.3786%" y="261" width="0.1666%" height="15" fill="rgb(228,207,15)" fg:x="2194" fg:w="4"/><text x="91.6286%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.12%)</title><rect x="91.4202%" y="245" width="0.1249%" height="15" fill="rgb(241,99,19)" fg:x="2195" fg:w="3"/><text x="91.6702%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.12%)</title><rect x="91.4202%" y="229" width="0.1249%" height="15" fill="rgb(207,104,49)" fg:x="2195" fg:w="3"/><text x="91.6702%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.12%)</title><rect x="91.4202%" y="213" width="0.1249%" height="15" fill="rgb(234,99,18)" fg:x="2195" fg:w="3"/><text x="91.6702%" y="223.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.04%)</title><rect x="91.5035%" y="197" width="0.0416%" height="15" fill="rgb(213,191,49)" fg:x="2197" fg:w="1"/><text x="91.7535%" y="207.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.04%)</title><rect x="91.5035%" y="181" width="0.0416%" height="15" fill="rgb(210,226,19)" fg:x="2197" fg:w="1"/><text x="91.7535%" y="191.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="91.5035%" y="165" width="0.0416%" height="15" fill="rgb(229,97,18)" fg:x="2197" fg:w="1"/><text x="91.7535%" y="175.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="91.5452%" y="245" width="0.0416%" height="15" fill="rgb(211,167,15)" fg:x="2198" fg:w="1"/><text x="91.7952%" y="255.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::new_edge (1 samples, 0.04%)</title><rect x="91.5868%" y="213" width="0.0416%" height="15" fill="rgb(210,169,34)" fg:x="2199" fg:w="1"/><text x="91.8368%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get_mut (3 samples, 0.12%)</title><rect x="91.5452%" y="261" width="0.1249%" height="15" fill="rgb(241,121,31)" fg:x="2198" fg:w="3"/><text x="91.7952%" y="271.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (2 samples, 0.08%)</title><rect x="91.5868%" y="245" width="0.0833%" height="15" fill="rgb(232,40,11)" fg:x="2199" fg:w="2"/><text x="91.8368%" y="255.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (2 samples, 0.08%)</title><rect x="91.5868%" y="229" width="0.0833%" height="15" fill="rgb(205,86,26)" fg:x="2199" fg:w="2"/><text x="91.8368%" y="239.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (1 samples, 0.04%)</title><rect x="91.6285%" y="213" width="0.0416%" height="15" fill="rgb(231,126,28)" fg:x="2200" fg:w="1"/><text x="91.8785%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="91.6285%" y="197" width="0.0416%" height="15" fill="rgb(219,221,18)" fg:x="2200" fg:w="1"/><text x="91.8785%" y="207.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="91.6285%" y="181" width="0.0416%" height="15" fill="rgb(211,40,0)" fg:x="2200" fg:w="1"/><text x="91.8785%" y="191.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.08%)</title><rect x="91.6701%" y="261" width="0.0833%" height="15" fill="rgb(239,85,43)" fg:x="2201" fg:w="2"/><text x="91.9201%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (1 samples, 0.04%)</title><rect x="91.7118%" y="245" width="0.0416%" height="15" fill="rgb(231,55,21)" fg:x="2202" fg:w="1"/><text x="91.9618%" y="255.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.04%)</title><rect x="91.7534%" y="261" width="0.0416%" height="15" fill="rgb(225,184,43)" fg:x="2203" fg:w="1"/><text x="92.0034%" y="271.50"></text></g><g><title>&lt;tftp::storage::FileReader&lt;T&gt; as tftp::storage::BlockReader&gt;::next::{{closure}} (1 samples, 0.04%)</title><rect x="91.7534%" y="245" width="0.0416%" height="15" fill="rgb(251,158,41)" fg:x="2203" fg:w="1"/><text x="92.0034%" y="255.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.04%)</title><rect x="91.7534%" y="229" width="0.0416%" height="15" fill="rgb(234,159,37)" fg:x="2203" fg:w="1"/><text x="92.0034%" y="239.50"></text></g><g><title>std::time::Instant::elapsed (1 samples, 0.04%)</title><rect x="91.7951%" y="261" width="0.0416%" height="15" fill="rgb(216,204,22)" fg:x="2204" fg:w="1"/><text x="92.0451%" y="271.50"></text></g><g><title>tftp::instant_callback (1 samples, 0.04%)</title><rect x="91.8367%" y="261" width="0.0416%" height="15" fill="rgb(214,17,3)" fg:x="2205" fg:w="1"/><text x="92.0867%" y="271.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.04%)</title><rect x="91.8367%" y="245" width="0.0416%" height="15" fill="rgb(212,111,17)" fg:x="2205" fg:w="1"/><text x="92.0867%" y="255.50"></text></g><g><title>clock_gettime (1 samples, 0.04%)</title><rect x="91.8367%" y="229" width="0.0416%" height="15" fill="rgb(221,157,24)" fg:x="2205" fg:w="1"/><text x="92.0867%" y="239.50"></text></g><g><title>&lt;alloc::vec::ExtendElement&lt;T&gt; as alloc::vec::ExtendWith&lt;T&gt;&gt;::next (3 samples, 0.12%)</title><rect x="93.2528%" y="213" width="0.1249%" height="15" fill="rgb(252,16,13)" fg:x="2239" fg:w="3"/><text x="93.5028%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.08%)</title><rect x="93.3778%" y="213" width="0.0833%" height="15" fill="rgb(221,62,2)" fg:x="2242" fg:w="2"/><text x="93.6278%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.08%)</title><rect x="93.3778%" y="197" width="0.0833%" height="15" fill="rgb(247,87,22)" fg:x="2242" fg:w="2"/><text x="93.6278%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.08%)</title><rect x="93.3778%" y="181" width="0.0833%" height="15" fill="rgb(215,73,9)" fg:x="2242" fg:w="2"/><text x="93.6278%" y="191.50"></text></g><g><title>alloc::raw_vec::handle_reserve (2 samples, 0.08%)</title><rect x="93.3778%" y="165" width="0.0833%" height="15" fill="rgb(207,175,33)" fg:x="2242" fg:w="2"/><text x="93.6278%" y="175.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.04%)</title><rect x="93.4194%" y="149" width="0.0416%" height="15" fill="rgb(243,129,54)" fg:x="2243" fg:w="1"/><text x="93.6694%" y="159.50"></text></g><g><title>alloc::vec::set_len_on_drop::SetLenOnDrop::increment_len (2 samples, 0.08%)</title><rect x="93.4611%" y="213" width="0.0833%" height="15" fill="rgb(227,119,45)" fg:x="2244" fg:w="2"/><text x="93.7111%" y="223.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (16 samples, 0.67%)</title><rect x="95.1687%" y="181" width="0.6664%" height="15" fill="rgb(205,109,36)" fg:x="2285" fg:w="16"/><text x="95.4187%" y="191.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (7 samples, 0.29%)</title><rect x="95.8351%" y="181" width="0.2915%" height="15" fill="rgb(205,6,39)" fg:x="2301" fg:w="7"/><text x="96.0851%" y="191.50"></text></g><g><title>core::ptr::read (31 samples, 1.29%)</title><rect x="96.5015%" y="165" width="1.2911%" height="15" fill="rgb(221,32,16)" fg:x="2317" fg:w="31"/><text x="96.7515%" y="175.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (5 samples, 0.21%)</title><rect x="97.5843%" y="149" width="0.2082%" height="15" fill="rgb(228,144,50)" fg:x="2343" fg:w="5"/><text x="97.8343%" y="159.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (5 samples, 0.21%)</title><rect x="97.5843%" y="133" width="0.2082%" height="15" fill="rgb(229,201,53)" fg:x="2343" fg:w="5"/><text x="97.8343%" y="143.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (107 samples, 4.46%)</title><rect x="93.5444%" y="213" width="4.4565%" height="15" fill="rgb(249,153,27)" fg:x="2246" fg:w="107"/><text x="93.7944%" y="223.50">core:..</text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (101 samples, 4.21%)</title><rect x="93.7943%" y="197" width="4.2066%" height="15" fill="rgb(227,106,25)" fg:x="2252" fg:w="101"/><text x="94.0443%" y="207.50">&lt;core..</text></g><g><title>core::mem::replace (45 samples, 1.87%)</title><rect x="96.1266%" y="181" width="1.8742%" height="15" fill="rgb(230,65,29)" fg:x="2308" fg:w="45"/><text x="96.3766%" y="191.50">c..</text></g><g><title>core::ptr::write (5 samples, 0.21%)</title><rect x="97.7926%" y="165" width="0.2082%" height="15" fill="rgb(221,57,46)" fg:x="2348" fg:w="5"/><text x="98.0426%" y="175.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.04%)</title><rect x="98.0008%" y="213" width="0.0416%" height="15" fill="rgb(229,161,17)" fg:x="2353" fg:w="1"/><text x="98.2508%" y="223.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.04%)</title><rect x="98.0008%" y="197" width="0.0416%" height="15" fill="rgb(222,213,11)" fg:x="2353" fg:w="1"/><text x="98.2508%" y="207.50"></text></g><g><title>&lt;tftp::storage::FileReader&lt;T&gt; as tftp::storage::BlockReader&gt;::next (171 samples, 7.12%)</title><rect x="91.3369%" y="277" width="7.1220%" height="15" fill="rgb(235,35,13)" fg:x="2193" fg:w="171"/><text x="91.5869%" y="287.50">&lt;tftp::sto..</text></g><g><title>tftp::storage::FileReader&lt;T&gt;::read_block (158 samples, 6.58%)</title><rect x="91.8784%" y="261" width="6.5806%" height="15" fill="rgb(233,158,34)" fg:x="2206" fg:w="158"/><text x="92.1284%" y="271.50">tftp::sto..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (158 samples, 6.58%)</title><rect x="91.8784%" y="245" width="6.5806%" height="15" fill="rgb(215,151,48)" fg:x="2206" fg:w="158"/><text x="92.1284%" y="255.50">alloc::ve..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (158 samples, 6.58%)</title><rect x="91.8784%" y="229" width="6.5806%" height="15" fill="rgb(229,84,14)" fg:x="2206" fg:w="158"/><text x="92.1284%" y="239.50">alloc::ve..</text></g><g><title>core::ptr::write (10 samples, 0.42%)</title><rect x="98.0425%" y="213" width="0.4165%" height="15" fill="rgb(229,68,14)" fg:x="2354" fg:w="10"/><text x="98.2925%" y="223.50"></text></g><g><title>&lt;alloc::vec::ExtendElement&lt;T&gt; as alloc::vec::ExtendWith&lt;T&gt;&gt;::next (2 samples, 0.08%)</title><rect x="98.7505%" y="245" width="0.0833%" height="15" fill="rgb(243,106,26)" fg:x="2371" fg:w="2"/><text x="99.0005%" y="255.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (4 samples, 0.17%)</title><rect x="98.9171%" y="213" width="0.1666%" height="15" fill="rgb(206,45,38)" fg:x="2375" fg:w="4"/><text x="99.1671%" y="223.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (12 samples, 0.50%)</title><rect x="98.8338%" y="245" width="0.4998%" height="15" fill="rgb(226,6,15)" fg:x="2373" fg:w="12"/><text x="99.0838%" y="255.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (12 samples, 0.50%)</title><rect x="98.8338%" y="229" width="0.4998%" height="15" fill="rgb(232,22,54)" fg:x="2373" fg:w="12"/><text x="99.0838%" y="239.50"></text></g><g><title>core::mem::replace (6 samples, 0.25%)</title><rect x="99.0837%" y="213" width="0.2499%" height="15" fill="rgb(229,222,32)" fg:x="2379" fg:w="6"/><text x="99.3337%" y="223.50"></text></g><g><title>core::ptr::read (5 samples, 0.21%)</title><rect x="99.1254%" y="197" width="0.2082%" height="15" fill="rgb(228,62,29)" fg:x="2380" fg:w="5"/><text x="99.3754%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (24 samples, 1.00%)</title><rect x="98.4590%" y="277" width="0.9996%" height="15" fill="rgb(251,103,34)" fg:x="2364" fg:w="24"/><text x="98.7090%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (24 samples, 1.00%)</title><rect x="98.4590%" y="261" width="0.9996%" height="15" fill="rgb(233,12,30)" fg:x="2364" fg:w="24"/><text x="98.7090%" y="271.50"></text></g><g><title>core::ptr::write (3 samples, 0.12%)</title><rect x="99.3336%" y="245" width="0.1249%" height="15" fill="rgb(238,52,0)" fg:x="2385" fg:w="3"/><text x="99.5836%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="99.5002%" y="261" width="0.0416%" height="15" fill="rgb(223,98,5)" fg:x="2389" fg:w="1"/><text x="99.7502%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4 samples, 0.17%)</title><rect x="99.4586%" y="277" width="0.1666%" height="15" fill="rgb(228,75,37)" fg:x="2388" fg:w="4"/><text x="99.7086%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.08%)</title><rect x="99.5419%" y="261" width="0.0833%" height="15" fill="rgb(205,115,49)" fg:x="2390" fg:w="2"/><text x="99.7919%" y="271.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="99.5419%" y="245" width="0.0833%" height="15" fill="rgb(250,154,43)" fg:x="2390" fg:w="2"/><text x="99.7919%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.08%)</title><rect x="99.5419%" y="229" width="0.0833%" height="15" fill="rgb(226,43,29)" fg:x="2390" fg:w="2"/><text x="99.7919%" y="239.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.04%)</title><rect x="99.5835%" y="213" width="0.0416%" height="15" fill="rgb(249,228,39)" fg:x="2391" fg:w="1"/><text x="99.8335%" y="223.50"></text></g><g><title>cfree (1 samples, 0.04%)</title><rect x="99.5835%" y="197" width="0.0416%" height="15" fill="rgb(216,79,43)" fg:x="2391" fg:w="1"/><text x="99.8335%" y="207.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="99.5835%" y="181" width="0.0416%" height="15" fill="rgb(228,95,12)" fg:x="2391" fg:w="1"/><text x="99.8335%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::error::Error&gt; (1 samples, 0.04%)</title><rect x="99.6252%" y="277" width="0.0416%" height="15" fill="rgb(249,221,15)" fg:x="2392" fg:w="1"/><text x="99.8752%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::error::repr_bitpacked::Repr&gt; (1 samples, 0.04%)</title><rect x="99.6252%" y="261" width="0.0416%" height="15" fill="rgb(233,34,13)" fg:x="2392" fg:w="1"/><text x="99.8752%" y="271.50"></text></g><g><title>std::io::error::repr_bitpacked::Repr::data (2 samples, 0.08%)</title><rect x="99.6668%" y="261" width="0.0833%" height="15" fill="rgb(214,103,39)" fg:x="2393" fg:w="2"/><text x="99.9168%" y="271.50"></text></g><g><title>std::io::error::repr_bitpacked::decode_repr (2 samples, 0.08%)</title><rect x="99.6668%" y="245" width="0.0833%" height="15" fill="rgb(251,126,39)" fg:x="2393" fg:w="2"/><text x="99.9168%" y="255.50"></text></g><g><title>std::io::error::Error::kind (3 samples, 0.12%)</title><rect x="99.6668%" y="277" width="0.1249%" height="15" fill="rgb(214,216,36)" fg:x="2393" fg:w="3"/><text x="99.9168%" y="287.50"></text></g><g><title>std::sys::unix::decode_error_kind (1 samples, 0.04%)</title><rect x="99.7501%" y="261" width="0.0416%" height="15" fill="rgb(220,221,8)" fg:x="2395" fg:w="1"/><text x="100.0001%" y="271.50"></text></g><g><title>std::time::Instant::elapsed (3 samples, 0.12%)</title><rect x="99.7918%" y="277" width="0.1249%" height="15" fill="rgb(240,216,3)" fg:x="2396" fg:w="3"/><text x="100.0418%" y="287.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.04%)</title><rect x="99.8751%" y="261" width="0.0416%" height="15" fill="rgb(232,218,17)" fg:x="2398" fg:w="1"/><text x="100.1251%" y="271.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.04%)</title><rect x="99.8751%" y="245" width="0.0416%" height="15" fill="rgb(229,163,45)" fg:x="2398" fg:w="1"/><text x="100.1251%" y="255.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.04%)</title><rect x="99.8751%" y="229" width="0.0416%" height="15" fill="rgb(231,110,42)" fg:x="2398" fg:w="1"/><text x="100.1251%" y="239.50"></text></g><g><title>clock_gettime (1 samples, 0.04%)</title><rect x="99.8751%" y="213" width="0.0416%" height="15" fill="rgb(208,170,48)" fg:x="2398" fg:w="1"/><text x="100.1251%" y="223.50"></text></g><g><title>tftp::flow_control::RateControl::start_rtt (1 samples, 0.04%)</title><rect x="99.9167%" y="277" width="0.0416%" height="15" fill="rgb(239,116,25)" fg:x="2399" fg:w="1"/><text x="100.1667%" y="287.50"></text></g><g><title>core::time::Duration::as_secs (1 samples, 0.04%)</title><rect x="99.9167%" y="261" width="0.0416%" height="15" fill="rgb(219,200,50)" fg:x="2399" fg:w="1"/><text x="100.1667%" y="271.50"></text></g><g><title>all (2,401 samples, 100%)</title><rect x="0.0000%" y="629" width="100.0000%" height="15" fill="rgb(245,200,0)" fg:x="0" fg:w="2401"/><text x="0.2500%" y="639.50"></text></g><g><title>tftp (2,401 samples, 100.00%)</title><rect x="0.0000%" y="613" width="100.0000%" height="15" fill="rgb(245,119,33)" fg:x="0" fg:w="2401"/><text x="0.2500%" y="623.50">tftp</text></g><g><title>_start (368 samples, 15.33%)</title><rect x="84.6731%" y="597" width="15.3269%" height="15" fill="rgb(231,125,12)" fg:x="2033" fg:w="368"/><text x="84.9231%" y="607.50">_start</text></g><g><title>__libc_start_main (368 samples, 15.33%)</title><rect x="84.6731%" y="581" width="15.3269%" height="15" fill="rgb(216,96,41)" fg:x="2033" fg:w="368"/><text x="84.9231%" y="591.50">__libc_start_main</text></g><g><title>[libc.so.6] (368 samples, 15.33%)</title><rect x="84.6731%" y="565" width="15.3269%" height="15" fill="rgb(248,43,45)" fg:x="2033" fg:w="368"/><text x="84.9231%" y="575.50">[libc.so.6]</text></g><g><title>main (368 samples, 15.33%)</title><rect x="84.6731%" y="549" width="15.3269%" height="15" fill="rgb(217,222,7)" fg:x="2033" fg:w="368"/><text x="84.9231%" y="559.50">main</text></g><g><title>std::rt::lang_start (368 samples, 15.33%)</title><rect x="84.6731%" y="533" width="15.3269%" height="15" fill="rgb(233,28,6)" fg:x="2033" fg:w="368"/><text x="84.9231%" y="543.50">std::rt::lang_start</text></g><g><title>std::rt::lang_start_internal (368 samples, 15.33%)</title><rect x="84.6731%" y="517" width="15.3269%" height="15" fill="rgb(231,218,15)" fg:x="2033" fg:w="368"/><text x="84.9231%" y="527.50">std::rt::lang_start_int..</text></g><g><title>std::panic::catch_unwind (368 samples, 15.33%)</title><rect x="84.6731%" y="501" width="15.3269%" height="15" fill="rgb(226,171,48)" fg:x="2033" fg:w="368"/><text x="84.9231%" y="511.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (368 samples, 15.33%)</title><rect x="84.6731%" y="485" width="15.3269%" height="15" fill="rgb(235,201,9)" fg:x="2033" fg:w="368"/><text x="84.9231%" y="495.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (368 samples, 15.33%)</title><rect x="84.6731%" y="469" width="15.3269%" height="15" fill="rgb(217,80,15)" fg:x="2033" fg:w="368"/><text x="84.9231%" y="479.50">std::panicking::try::do..</text></g><g><title>std::rt::lang_start_internal::{{closure}} (368 samples, 15.33%)</title><rect x="84.6731%" y="453" width="15.3269%" height="15" fill="rgb(219,152,8)" fg:x="2033" fg:w="368"/><text x="84.9231%" y="463.50">std::rt::lang_start_int..</text></g><g><title>std::panic::catch_unwind (368 samples, 15.33%)</title><rect x="84.6731%" y="437" width="15.3269%" height="15" fill="rgb(243,107,38)" fg:x="2033" fg:w="368"/><text x="84.9231%" y="447.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (368 samples, 15.33%)</title><rect x="84.6731%" y="421" width="15.3269%" height="15" fill="rgb(231,17,5)" fg:x="2033" fg:w="368"/><text x="84.9231%" y="431.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (368 samples, 15.33%)</title><rect x="84.6731%" y="405" width="15.3269%" height="15" fill="rgb(209,25,54)" fg:x="2033" fg:w="368"/><text x="84.9231%" y="415.50">std::panicking::try::do..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (368 samples, 15.33%)</title><rect x="84.6731%" y="389" width="15.3269%" height="15" fill="rgb(219,0,2)" fg:x="2033" fg:w="368"/><text x="84.9231%" y="399.50">core::ops::function::im..</text></g><g><title>std::rt::lang_start::{{closure}} (368 samples, 15.33%)</title><rect x="84.6731%" y="373" width="15.3269%" height="15" fill="rgb(246,9,5)" fg:x="2033" fg:w="368"/><text x="84.9231%" y="383.50">std::rt::lang_start::{{..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (368 samples, 15.33%)</title><rect x="84.6731%" y="357" width="15.3269%" height="15" fill="rgb(226,159,4)" fg:x="2033" fg:w="368"/><text x="84.9231%" y="367.50">std::sys_common::backtr..</text></g><g><title>core::ops::function::FnOnce::call_once (368 samples, 15.33%)</title><rect x="84.6731%" y="341" width="15.3269%" height="15" fill="rgb(219,175,34)" fg:x="2033" fg:w="368"/><text x="84.9231%" y="351.50">core::ops::function::Fn..</text></g><g><title>tftp::main (368 samples, 15.33%)</title><rect x="84.6731%" y="325" width="15.3269%" height="15" fill="rgb(236,10,46)" fg:x="2033" fg:w="368"/><text x="84.9231%" y="335.50">tftp::main</text></g><g><title>tftp::start_send (368 samples, 15.33%)</title><rect x="84.6731%" y="309" width="15.3269%" height="15" fill="rgb(240,211,16)" fg:x="2033" fg:w="368"/><text x="84.9231%" y="319.50">tftp::start_send</text></g><g><title>tftp::client::client::send_file (368 samples, 15.33%)</title><rect x="84.6731%" y="293" width="15.3269%" height="15" fill="rgb(205,3,43)" fg:x="2033" fg:w="368"/><text x="84.9231%" y="303.50">tftp::client::client::s..</text></g><g><title>tftp::packet::PacketType::from_bytes (1 samples, 0.04%)</title><rect x="99.9584%" y="277" width="0.0416%" height="15" fill="rgb(245,7,22)" fg:x="2400" fg:w="1"/><text x="100.2084%" y="287.50"></text></g><g><title>tftp::packet::try_from (1 samples, 0.04%)</title><rect x="99.9584%" y="261" width="0.0416%" height="15" fill="rgb(239,132,32)" fg:x="2400" fg:w="1"/><text x="100.2084%" y="271.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.04%)</title><rect x="99.9584%" y="245" width="0.0416%" height="15" fill="rgb(228,202,34)" fg:x="2400" fg:w="1"/><text x="100.2084%" y="255.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.04%)</title><rect x="99.9584%" y="229" width="0.0416%" height="15" fill="rgb(254,200,22)" fg:x="2400" fg:w="1"/><text x="100.2084%" y="239.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.04%)</title><rect x="99.9584%" y="213" width="0.0416%" height="15" fill="rgb(219,10,39)" fg:x="2400" fg:w="1"/><text x="100.2084%" y="223.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="99.9584%" y="197" width="0.0416%" height="15" fill="rgb(226,210,39)" fg:x="2400" fg:w="1"/><text x="100.2084%" y="207.50"></text></g></svg></svg>