<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="806" onload="init(evt)" viewBox="0 0 1200 806" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="806" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="789.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="789.00"> </text><svg id="frames" x="10" width="1180" total_samples="3311"><g><title>ctx_flexible_sched_in (1 samples, 0.03%)</title><rect x="0.0000%" y="581" width="0.0302%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="591.50"></text></g><g><title>visit_groups_merge.constprop.0.isra.0 (1 samples, 0.03%)</title><rect x="0.0000%" y="565" width="0.0302%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="575.50"></text></g><g><title>perf_event_groups_next (1 samples, 0.03%)</title><rect x="0.0000%" y="549" width="0.0302%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="559.50"></text></g><g><title>rb_next (1 samples, 0.03%)</title><rect x="0.0000%" y="533" width="0.0302%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="543.50"></text></g><g><title>amd_pmu_enable_all (1 samples, 0.03%)</title><rect x="0.0302%" y="565" width="0.0302%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="1"/><text x="0.2802%" y="575.50"></text></g><g><title>x86_pmu_enable_event (1 samples, 0.03%)</title><rect x="0.0302%" y="549" width="0.0302%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="1"/><text x="0.2802%" y="559.50"></text></g><g><title>ctx_resched (3 samples, 0.09%)</title><rect x="0.0000%" y="597" width="0.0906%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="3"/><text x="0.2500%" y="607.50"></text></g><g><title>perf_ctx_enable (2 samples, 0.06%)</title><rect x="0.0302%" y="581" width="0.0604%" height="15" fill="rgb(228,23,34)" fg:x="1" fg:w="2"/><text x="0.2802%" y="591.50"></text></g><g><title>check_preemption_disabled (1 samples, 0.03%)</title><rect x="0.0604%" y="565" width="0.0302%" height="15" fill="rgb(218,30,26)" fg:x="2" fg:w="1"/><text x="0.3104%" y="575.50"></text></g><g><title>perf-exec (4 samples, 0.12%)</title><rect x="0.0000%" y="741" width="0.1208%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="4"/><text x="0.2500%" y="751.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4 samples, 0.12%)</title><rect x="0.0000%" y="725" width="0.1208%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="4"/><text x="0.2500%" y="735.50"></text></g><g><title>do_syscall_64 (4 samples, 0.12%)</title><rect x="0.0000%" y="709" width="0.1208%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="4"/><text x="0.2500%" y="719.50"></text></g><g><title>__x64_sys_execve (4 samples, 0.12%)</title><rect x="0.0000%" y="693" width="0.1208%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="4"/><text x="0.2500%" y="703.50"></text></g><g><title>do_execveat_common.isra.0 (4 samples, 0.12%)</title><rect x="0.0000%" y="677" width="0.1208%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="4"/><text x="0.2500%" y="687.50"></text></g><g><title>bprm_execve (4 samples, 0.12%)</title><rect x="0.0000%" y="661" width="0.1208%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="4"/><text x="0.2500%" y="671.50"></text></g><g><title>load_elf_binary (4 samples, 0.12%)</title><rect x="0.0000%" y="645" width="0.1208%" height="15" fill="rgb(231,73,38)" fg:x="0" fg:w="4"/><text x="0.2500%" y="655.50"></text></g><g><title>begin_new_exec (4 samples, 0.12%)</title><rect x="0.0000%" y="629" width="0.1208%" height="15" fill="rgb(225,20,46)" fg:x="0" fg:w="4"/><text x="0.2500%" y="639.50"></text></g><g><title>perf_event_exec (4 samples, 0.12%)</title><rect x="0.0000%" y="613" width="0.1208%" height="15" fill="rgb(210,31,41)" fg:x="0" fg:w="4"/><text x="0.2500%" y="623.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.03%)</title><rect x="0.0906%" y="597" width="0.0302%" height="15" fill="rgb(221,200,47)" fg:x="3" fg:w="1"/><text x="0.3406%" y="607.50"></text></g><g><title>perf_event_addr_filters_exec (1 samples, 0.03%)</title><rect x="0.0906%" y="581" width="0.0302%" height="15" fill="rgb(226,26,5)" fg:x="3" fg:w="1"/><text x="0.3406%" y="591.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="0.1208%" y="725" width="0.0302%" height="15" fill="rgb(249,33,26)" fg:x="4" fg:w="1"/><text x="0.3708%" y="735.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.03%)</title><rect x="0.1510%" y="725" width="0.0302%" height="15" fill="rgb(235,183,28)" fg:x="5" fg:w="1"/><text x="0.4010%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="0.1812%" y="709" width="0.0302%" height="15" fill="rgb(221,5,38)" fg:x="6" fg:w="1"/><text x="0.4312%" y="719.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.03%)</title><rect x="0.2114%" y="709" width="0.0302%" height="15" fill="rgb(247,18,42)" fg:x="7" fg:w="1"/><text x="0.4614%" y="719.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.03%)</title><rect x="0.2114%" y="693" width="0.0302%" height="15" fill="rgb(241,131,45)" fg:x="7" fg:w="1"/><text x="0.4614%" y="703.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.03%)</title><rect x="0.2114%" y="677" width="0.0302%" height="15" fill="rgb(249,31,29)" fg:x="7" fg:w="1"/><text x="0.4614%" y="687.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (1 samples, 0.03%)</title><rect x="0.2114%" y="661" width="0.0302%" height="15" fill="rgb(225,111,53)" fg:x="7" fg:w="1"/><text x="0.4614%" y="671.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.03%)</title><rect x="0.2416%" y="709" width="0.0302%" height="15" fill="rgb(238,160,17)" fg:x="8" fg:w="1"/><text x="0.4916%" y="719.50"></text></g><g><title>[[heap]] (7 samples, 0.21%)</title><rect x="0.1812%" y="725" width="0.2114%" height="15" fill="rgb(214,148,48)" fg:x="6" fg:w="7"/><text x="0.4312%" y="735.50"></text></g><g><title>tftp::encryption::remove_bit_padding (4 samples, 0.12%)</title><rect x="0.2718%" y="709" width="0.1208%" height="15" fill="rgb(232,36,49)" fg:x="9" fg:w="4"/><text x="0.5218%" y="719.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (1 samples, 0.03%)</title><rect x="0.3926%" y="709" width="0.0302%" height="15" fill="rgb(209,103,24)" fg:x="13" fg:w="1"/><text x="0.6426%" y="719.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="0.4228%" y="709" width="0.0302%" height="15" fill="rgb(229,88,8)" fg:x="14" fg:w="1"/><text x="0.6728%" y="719.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (11 samples, 0.33%)</title><rect x="0.4530%" y="709" width="0.3322%" height="15" fill="rgb(213,181,19)" fg:x="15" fg:w="11"/><text x="0.7030%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (44 samples, 1.33%)</title><rect x="0.7853%" y="709" width="1.3289%" height="15" fill="rgb(254,191,54)" fg:x="26" fg:w="44"/><text x="1.0353%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (1 samples, 0.03%)</title><rect x="2.1142%" y="709" width="0.0302%" height="15" fill="rgb(241,83,37)" fg:x="70" fg:w="1"/><text x="2.3642%" y="719.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3 samples, 0.09%)</title><rect x="2.1444%" y="709" width="0.0906%" height="15" fill="rgb(233,36,39)" fg:x="71" fg:w="3"/><text x="2.3944%" y="719.50"></text></g><g><title>&lt;core::slice::iter::ChunksExact&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (2 samples, 0.06%)</title><rect x="2.2350%" y="709" width="0.0604%" height="15" fill="rgb(226,3,54)" fg:x="74" fg:w="2"/><text x="2.4850%" y="719.50"></text></g><g><title>core::slice::raw::from_raw_parts (2 samples, 0.06%)</title><rect x="2.2350%" y="693" width="0.0604%" height="15" fill="rgb(245,192,40)" fg:x="74" fg:w="2"/><text x="2.4850%" y="703.50"></text></g><g><title>core::ptr::slice_from_raw_parts (2 samples, 0.06%)</title><rect x="2.2350%" y="677" width="0.0604%" height="15" fill="rgb(238,167,29)" fg:x="74" fg:w="2"/><text x="2.4850%" y="687.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (2 samples, 0.06%)</title><rect x="2.2350%" y="661" width="0.0604%" height="15" fill="rgb(232,182,51)" fg:x="74" fg:w="2"/><text x="2.4850%" y="671.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="2.2954%" y="709" width="0.0302%" height="15" fill="rgb(231,60,39)" fg:x="76" fg:w="1"/><text x="2.5454%" y="719.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="2.3256%" y="709" width="0.0302%" height="15" fill="rgb(208,69,12)" fg:x="77" fg:w="1"/><text x="2.5756%" y="719.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.03%)</title><rect x="2.3256%" y="693" width="0.0302%" height="15" fill="rgb(235,93,37)" fg:x="77" fg:w="1"/><text x="2.5756%" y="703.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (1 samples, 0.03%)</title><rect x="2.3256%" y="677" width="0.0302%" height="15" fill="rgb(213,116,39)" fg:x="77" fg:w="1"/><text x="2.5756%" y="687.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (2 samples, 0.06%)</title><rect x="3.2921%" y="693" width="0.0604%" height="15" fill="rgb(222,207,29)" fg:x="109" fg:w="2"/><text x="3.5421%" y="703.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (11 samples, 0.33%)</title><rect x="3.3525%" y="693" width="0.3322%" height="15" fill="rgb(206,96,30)" fg:x="111" fg:w="11"/><text x="3.6025%" y="703.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (45 samples, 1.36%)</title><rect x="2.3558%" y="709" width="1.3591%" height="15" fill="rgb(218,138,4)" fg:x="78" fg:w="45"/><text x="2.6058%" y="719.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.03%)</title><rect x="3.6847%" y="693" width="0.0302%" height="15" fill="rgb(250,191,14)" fg:x="122" fg:w="1"/><text x="3.9347%" y="703.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (95 samples, 2.87%)</title><rect x="5.7989%" y="693" width="2.8692%" height="15" fill="rgb(239,60,40)" fg:x="192" fg:w="95"/><text x="6.0489%" y="703.50">&lt;c..</text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_mut (4 samples, 0.12%)</title><rect x="8.6681%" y="693" width="0.1208%" height="15" fill="rgb(206,27,48)" fg:x="287" fg:w="4"/><text x="8.9181%" y="703.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_sub (3 samples, 0.09%)</title><rect x="9.9970%" y="677" width="0.0906%" height="15" fill="rgb(225,35,8)" fg:x="331" fg:w="3"/><text x="10.2470%" y="687.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::cast (2 samples, 0.06%)</title><rect x="10.0876%" y="677" width="0.0604%" height="15" fill="rgb(250,213,24)" fg:x="334" fg:w="2"/><text x="10.3376%" y="687.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (224 samples, 6.77%)</title><rect x="3.7149%" y="709" width="6.7653%" height="15" fill="rgb(247,123,22)" fg:x="123" fg:w="224"/><text x="3.9649%" y="719.50">&lt;core::sl..</text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (56 samples, 1.69%)</title><rect x="8.7889%" y="693" width="1.6913%" height="15" fill="rgb(231,138,38)" fg:x="291" fg:w="56"/><text x="9.0389%" y="703.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (11 samples, 0.33%)</title><rect x="10.1480%" y="677" width="0.3322%" height="15" fill="rgb(231,145,46)" fg:x="336" fg:w="11"/><text x="10.3980%" y="687.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (4 samples, 0.12%)</title><rect x="10.3594%" y="661" width="0.1208%" height="15" fill="rgb(251,118,11)" fg:x="343" fg:w="4"/><text x="10.6094%" y="671.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.03%)</title><rect x="10.4802%" y="709" width="0.0302%" height="15" fill="rgb(217,147,25)" fg:x="347" fg:w="1"/><text x="10.7302%" y="719.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (3 samples, 0.09%)</title><rect x="10.5104%" y="709" width="0.0906%" height="15" fill="rgb(247,81,37)" fg:x="348" fg:w="3"/><text x="10.7604%" y="719.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (35 samples, 1.06%)</title><rect x="10.6010%" y="709" width="1.0571%" height="15" fill="rgb(209,12,38)" fg:x="351" fg:w="35"/><text x="10.8510%" y="719.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (1 samples, 0.03%)</title><rect x="11.6581%" y="709" width="0.0302%" height="15" fill="rgb(227,1,9)" fg:x="386" fg:w="1"/><text x="11.9081%" y="719.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::AdditionKey as core::ops::arith::Add&lt;poly1305::backend::avx2::helpers::Aligned130&gt;&gt;::add::propagate_carry_32 (1 samples, 0.03%)</title><rect x="11.6883%" y="709" width="0.0302%" height="15" fill="rgb(248,47,43)" fg:x="387" fg:w="1"/><text x="11.9383%" y="719.50"></text></g><g><title>&lt;std::io::error::repr_bitpacked::Repr as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="11.7185%" y="709" width="0.0302%" height="15" fill="rgb(221,10,30)" fg:x="388" fg:w="1"/><text x="11.9685%" y="719.50"></text></g><g><title>&lt;tftp::client::encryption_socket::EncryptionBoundSocket&lt;S,Rng&gt; as tftp::socket::Socket&gt;::recv_from (1 samples, 0.03%)</title><rect x="11.7487%" y="709" width="0.0302%" height="15" fill="rgb(210,229,1)" fg:x="389" fg:w="1"/><text x="11.9987%" y="719.50"></text></g><g><title>__memcpy_avx_unaligned (1 samples, 0.03%)</title><rect x="11.7789%" y="709" width="0.0302%" height="15" fill="rgb(222,148,37)" fg:x="390" fg:w="1"/><text x="12.0289%" y="719.50"></text></g><g><title>__memcpy_avx_unaligned_erms (3 samples, 0.09%)</title><rect x="11.8091%" y="709" width="0.0906%" height="15" fill="rgb(234,67,33)" fg:x="391" fg:w="3"/><text x="12.0591%" y="719.50"></text></g><g><title>_init (1 samples, 0.03%)</title><rect x="11.8997%" y="709" width="0.0302%" height="15" fill="rgb(247,98,35)" fg:x="394" fg:w="1"/><text x="12.1497%" y="719.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (2 samples, 0.06%)</title><rect x="11.9299%" y="709" width="0.0604%" height="15" fill="rgb(247,138,52)" fg:x="395" fg:w="2"/><text x="12.1799%" y="719.50"></text></g><g><title>chacha20::xchacha::quarter_round (2 samples, 0.06%)</title><rect x="11.9903%" y="709" width="0.0604%" height="15" fill="rgb(213,79,30)" fg:x="397" fg:w="2"/><text x="12.2403%" y="719.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.03%)</title><rect x="12.0205%" y="693" width="0.0302%" height="15" fill="rgb(246,177,23)" fg:x="398" fg:w="1"/><text x="12.2705%" y="703.50"></text></g><g><title>core::array::iter::IntoIter&lt;T,_&gt;::as_mut_slice (1 samples, 0.03%)</title><rect x="12.0507%" y="709" width="0.0302%" height="15" fill="rgb(230,62,27)" fg:x="399" fg:w="1"/><text x="12.3007%" y="719.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (1 samples, 0.03%)</title><rect x="12.0507%" y="693" width="0.0302%" height="15" fill="rgb(216,154,8)" fg:x="399" fg:w="1"/><text x="12.3007%" y="703.50"></text></g><g><title>&lt;core::ops::index_range::IndexRange as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.03%)</title><rect x="12.0507%" y="677" width="0.0302%" height="15" fill="rgb(244,35,45)" fg:x="399" fg:w="1"/><text x="12.3007%" y="687.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut [T]&gt;::as_mut_ptr (1 samples, 0.03%)</title><rect x="12.0507%" y="661" width="0.0302%" height="15" fill="rgb(251,115,12)" fg:x="399" fg:w="1"/><text x="12.3007%" y="671.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="12.0809%" y="709" width="0.0302%" height="15" fill="rgb(240,54,50)" fg:x="400" fg:w="1"/><text x="12.3309%" y="719.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (2 samples, 0.06%)</title><rect x="12.1111%" y="709" width="0.0604%" height="15" fill="rgb(233,84,52)" fg:x="401" fg:w="2"/><text x="12.3611%" y="719.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (3 samples, 0.09%)</title><rect x="12.1715%" y="709" width="0.0906%" height="15" fill="rgb(207,117,47)" fg:x="403" fg:w="3"/><text x="12.4215%" y="719.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="12.2622%" y="709" width="0.0302%" height="15" fill="rgb(249,43,39)" fg:x="406" fg:w="1"/><text x="12.5122%" y="719.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.03%)</title><rect x="12.2924%" y="709" width="0.0302%" height="15" fill="rgb(209,38,44)" fg:x="407" fg:w="1"/><text x="12.5424%" y="719.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_storeu_si128 (1 samples, 0.03%)</title><rect x="12.3226%" y="709" width="0.0302%" height="15" fill="rgb(236,212,23)" fg:x="408" fg:w="1"/><text x="12.5726%" y="719.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.06%)</title><rect x="12.3528%" y="709" width="0.0604%" height="15" fill="rgb(242,79,21)" fg:x="409" fg:w="2"/><text x="12.6028%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.03%)</title><rect x="12.4132%" y="709" width="0.0302%" height="15" fill="rgb(211,96,35)" fg:x="411" fg:w="1"/><text x="12.6632%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (20 samples, 0.60%)</title><rect x="12.4434%" y="709" width="0.6040%" height="15" fill="rgb(253,215,40)" fg:x="412" fg:w="20"/><text x="12.6934%" y="719.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_le_bytes (1 samples, 0.03%)</title><rect x="13.0474%" y="709" width="0.0302%" height="15" fill="rgb(211,81,21)" fg:x="432" fg:w="1"/><text x="13.2974%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (1 samples, 0.03%)</title><rect x="13.0776%" y="709" width="0.0302%" height="15" fill="rgb(208,190,38)" fg:x="433" fg:w="1"/><text x="13.3276%" y="719.50"></text></g><g><title>core::ptr::read (1 samples, 0.03%)</title><rect x="13.1078%" y="709" width="0.0302%" height="15" fill="rgb(235,213,38)" fg:x="434" fg:w="1"/><text x="13.3578%" y="719.50"></text></g><g><title>core::ptr::write (1 samples, 0.03%)</title><rect x="13.1380%" y="709" width="0.0302%" height="15" fill="rgb(237,122,38)" fg:x="435" fg:w="1"/><text x="13.3880%" y="719.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.03%)</title><rect x="13.1682%" y="709" width="0.0302%" height="15" fill="rgb(244,218,35)" fg:x="436" fg:w="1"/><text x="13.4182%" y="719.50"></text></g><g><title>core::slice::raw::from_raw_parts (5 samples, 0.15%)</title><rect x="13.1984%" y="709" width="0.1510%" height="15" fill="rgb(240,68,47)" fg:x="437" fg:w="5"/><text x="13.4484%" y="719.50"></text></g><g><title>core::ptr::slice_from_raw_parts (5 samples, 0.15%)</title><rect x="13.1984%" y="693" width="0.1510%" height="15" fill="rgb(210,16,53)" fg:x="437" fg:w="5"/><text x="13.4484%" y="703.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (5 samples, 0.15%)</title><rect x="13.1984%" y="677" width="0.1510%" height="15" fill="rgb(235,124,12)" fg:x="437" fg:w="5"/><text x="13.4484%" y="687.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (1 samples, 0.03%)</title><rect x="13.3494%" y="709" width="0.0302%" height="15" fill="rgb(224,169,11)" fg:x="442" fg:w="1"/><text x="13.5994%" y="719.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (1 samples, 0.03%)</title><rect x="13.3494%" y="693" width="0.0302%" height="15" fill="rgb(250,166,2)" fg:x="442" fg:w="1"/><text x="13.5994%" y="703.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (1 samples, 0.03%)</title><rect x="13.3494%" y="677" width="0.0302%" height="15" fill="rgb(242,216,29)" fg:x="442" fg:w="1"/><text x="13.5994%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.03%)</title><rect x="13.3796%" y="709" width="0.0302%" height="15" fill="rgb(230,116,27)" fg:x="443" fg:w="1"/><text x="13.6296%" y="719.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (3 samples, 0.09%)</title><rect x="13.4098%" y="709" width="0.0906%" height="15" fill="rgb(228,99,48)" fg:x="444" fg:w="3"/><text x="13.6598%" y="719.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (4 samples, 0.12%)</title><rect x="13.5005%" y="709" width="0.1208%" height="15" fill="rgb(253,11,6)" fg:x="447" fg:w="4"/><text x="13.7505%" y="719.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.03%)</title><rect x="13.5911%" y="693" width="0.0302%" height="15" fill="rgb(247,143,39)" fg:x="450" fg:w="1"/><text x="13.8411%" y="703.50"></text></g><g><title>rustix::backend::arch::asm::syscall4_readonly (1 samples, 0.03%)</title><rect x="13.6213%" y="709" width="0.0302%" height="15" fill="rgb(236,97,10)" fg:x="451" fg:w="1"/><text x="13.8713%" y="719.50"></text></g><g><title>rustix::backend::conv::pass_usize (1 samples, 0.03%)</title><rect x="13.6515%" y="709" width="0.0302%" height="15" fill="rgb(233,208,19)" fg:x="452" fg:w="1"/><text x="13.9015%" y="719.50"></text></g><g><title>rustix::backend::event::epoll::EventVec::clear (1 samples, 0.03%)</title><rect x="13.6817%" y="709" width="0.0302%" height="15" fill="rgb(216,164,2)" fg:x="453" fg:w="1"/><text x="13.9317%" y="719.50"></text></g><g><title>rustix::backend::event::epoll::modify (1 samples, 0.03%)</title><rect x="13.7119%" y="709" width="0.0302%" height="15" fill="rgb(220,129,5)" fg:x="454" fg:w="1"/><text x="13.9619%" y="719.50"></text></g><g><title>tftp::encrypted_packet::EncryptedPacket::decrypt (1 samples, 0.03%)</title><rect x="13.7421%" y="709" width="0.0302%" height="15" fill="rgb(242,17,10)" fg:x="455" fg:w="1"/><text x="13.9921%" y="719.50"></text></g><g><title>[[stack]] (444 samples, 13.41%)</title><rect x="0.3926%" y="725" width="13.4098%" height="15" fill="rgb(242,107,0)" fg:x="13" fg:w="444"/><text x="0.6426%" y="735.50">[[stack]]</text></g><g><title>tftp::flow_control::RateControl::timeout_interval (1 samples, 0.03%)</title><rect x="13.7723%" y="709" width="0.0302%" height="15" fill="rgb(251,28,31)" fg:x="456" fg:w="1"/><text x="14.0223%" y="719.50"></text></g><g><title>[tftp] (1 samples, 0.03%)</title><rect x="13.8025%" y="725" width="0.0302%" height="15" fill="rgb(233,223,10)" fg:x="457" fg:w="1"/><text x="14.0525%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::map (1 samples, 0.03%)</title><rect x="13.8025%" y="709" width="0.0302%" height="15" fill="rgb(215,21,27)" fg:x="457" fg:w="1"/><text x="14.0525%" y="719.50"></text></g><g><title>core::iter::adapters::map::Map&lt;I,F&gt;::new (1 samples, 0.03%)</title><rect x="13.8025%" y="693" width="0.0302%" height="15" fill="rgb(232,23,21)" fg:x="457" fg:w="1"/><text x="14.0525%" y="703.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Sub&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::sub (1 samples, 0.03%)</title><rect x="13.8327%" y="709" width="0.0302%" height="15" fill="rgb(244,5,23)" fg:x="458" fg:w="1"/><text x="14.0827%" y="719.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::reduce (1 samples, 0.03%)</title><rect x="13.8327%" y="693" width="0.0302%" height="15" fill="rgb(226,81,46)" fg:x="458" fg:w="1"/><text x="14.0827%" y="703.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::packed_simd::u64x4 as core::ops::arith::AddAssign&gt;::add_assign (1 samples, 0.03%)</title><rect x="13.8629%" y="645" width="0.0302%" height="15" fill="rgb(247,70,30)" fg:x="459" fg:w="1"/><text x="14.1129%" y="655.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::packed_simd::u64x4 as &lt;curve25519_dalek::backend::vector::packed_simd::u64x4 as core::ops::arith::AddAssign&gt;::add_assign::__Impl_add_assign__&gt;::_impl_add_assign (1 samples, 0.03%)</title><rect x="13.8629%" y="629" width="0.0302%" height="15" fill="rgb(212,68,19)" fg:x="459" fg:w="1"/><text x="14.1129%" y="639.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::packed_simd::u64x4 as core::ops::arith::Add&gt;::add (1 samples, 0.03%)</title><rect x="13.8629%" y="613" width="0.0302%" height="15" fill="rgb(240,187,13)" fg:x="459" fg:w="1"/><text x="14.1129%" y="623.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::packed_simd::u64x4 as &lt;curve25519_dalek::backend::vector::packed_simd::u64x4 as core::ops::arith::Add&gt;::add::__Impl_add__&gt;::_impl_add (1 samples, 0.03%)</title><rect x="13.8629%" y="597" width="0.0302%" height="15" fill="rgb(223,113,26)" fg:x="459" fg:w="1"/><text x="14.1129%" y="607.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::packed_simd::u64x4 as &lt;curve25519_dalek::backend::vector::packed_simd::u64x4 as core::ops::arith::Add&gt;::add::__Impl_add__&gt;::_impl_add (1 samples, 0.03%)</title><rect x="13.8629%" y="581" width="0.0302%" height="15" fill="rgb(206,192,2)" fg:x="459" fg:w="1"/><text x="14.1129%" y="591.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4 as &lt;&amp;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4&gt;&gt;::mul::__Impl_mul__&gt;::_impl_mul (2 samples, 0.06%)</title><rect x="13.8629%" y="709" width="0.0604%" height="15" fill="rgb(241,108,4)" fg:x="459" fg:w="2"/><text x="14.1129%" y="719.50"></text></g><g><title>curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4::reduce64 (2 samples, 0.06%)</title><rect x="13.8629%" y="693" width="0.0604%" height="15" fill="rgb(247,173,49)" fg:x="459" fg:w="2"/><text x="14.1129%" y="703.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4 as curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4::reduce64::__Impl_reduce64__&gt;::_impl_reduce64 (2 samples, 0.06%)</title><rect x="13.8629%" y="677" width="0.0604%" height="15" fill="rgb(224,114,35)" fg:x="459" fg:w="2"/><text x="14.1129%" y="687.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4 as curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4::reduce64::__Impl_reduce64__&gt;::_impl_reduce64::{{closure}} (2 samples, 0.06%)</title><rect x="13.8629%" y="661" width="0.0604%" height="15" fill="rgb(245,159,27)" fg:x="459" fg:w="2"/><text x="14.1129%" y="671.50"></text></g><g><title>curve25519_dalek::backend::vector::packed_simd::u64x4::shr (1 samples, 0.03%)</title><rect x="13.8931%" y="645" width="0.0302%" height="15" fill="rgb(245,172,44)" fg:x="460" fg:w="1"/><text x="14.1431%" y="655.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::packed_simd::u64x4 as curve25519_dalek::backend::vector::packed_simd::u64x4::shr::__Impl_shr__&gt;::_impl_shr (1 samples, 0.03%)</title><rect x="13.8931%" y="629" width="0.0302%" height="15" fill="rgb(236,23,11)" fg:x="460" fg:w="1"/><text x="14.1431%" y="639.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4 as curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4::reduce64::__Impl_reduce64__&gt;::_impl_reduce64::{{closure}} (1 samples, 0.03%)</title><rect x="13.8931%" y="613" width="0.0302%" height="15" fill="rgb(205,117,38)" fg:x="460" fg:w="1"/><text x="14.1431%" y="623.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (4 samples, 0.12%)</title><rect x="13.9233%" y="709" width="0.1208%" height="15" fill="rgb(237,72,25)" fg:x="461" fg:w="4"/><text x="14.1733%" y="719.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.06%)</title><rect x="14.0441%" y="709" width="0.0604%" height="15" fill="rgb(244,70,9)" fg:x="465" fg:w="2"/><text x="14.2941%" y="719.50"></text></g><g><title>__entry_text_start (1 samples, 0.03%)</title><rect x="14.0743%" y="693" width="0.0302%" height="15" fill="rgb(217,125,39)" fg:x="466" fg:w="1"/><text x="14.3243%" y="703.50"></text></g><g><title>&lt;[Z] as zeroize::Zeroize&gt;::zeroize (1 samples, 0.03%)</title><rect x="14.1045%" y="709" width="0.0302%" height="15" fill="rgb(235,36,10)" fg:x="467" fg:w="1"/><text x="14.3545%" y="719.50"></text></g><g><title>zeroize::volatile_set (1 samples, 0.03%)</title><rect x="14.1045%" y="693" width="0.0302%" height="15" fill="rgb(251,123,47)" fg:x="467" fg:w="1"/><text x="14.3545%" y="703.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="14.1951%" y="485" width="0.0302%" height="15" fill="rgb(221,13,13)" fg:x="470" fg:w="1"/><text x="14.4451%" y="495.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.03%)</title><rect x="14.1951%" y="469" width="0.0302%" height="15" fill="rgb(238,131,9)" fg:x="470" fg:w="1"/><text x="14.4451%" y="479.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (9 samples, 0.27%)</title><rect x="14.2253%" y="485" width="0.2718%" height="15" fill="rgb(211,50,8)" fg:x="471" fg:w="9"/><text x="14.4753%" y="495.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (1 samples, 0.03%)</title><rect x="14.4971%" y="485" width="0.0302%" height="15" fill="rgb(245,182,24)" fg:x="480" fg:w="1"/><text x="14.7471%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.03%)</title><rect x="14.6179%" y="469" width="0.0302%" height="15" fill="rgb(242,14,37)" fg:x="484" fg:w="1"/><text x="14.8679%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="14.6481%" y="469" width="0.0302%" height="15" fill="rgb(246,228,12)" fg:x="485" fg:w="1"/><text x="14.8981%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="14.6783%" y="469" width="0.0302%" height="15" fill="rgb(213,55,15)" fg:x="486" fg:w="1"/><text x="14.9283%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (7 samples, 0.21%)</title><rect x="14.5273%" y="485" width="0.2114%" height="15" fill="rgb(209,9,3)" fg:x="481" fg:w="7"/><text x="14.7773%" y="495.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="14.7085%" y="469" width="0.0302%" height="15" fill="rgb(230,59,30)" fg:x="487" fg:w="1"/><text x="14.9585%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.03%)</title><rect x="14.7387%" y="485" width="0.0302%" height="15" fill="rgb(209,121,21)" fg:x="488" fg:w="1"/><text x="14.9887%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="14.8898%" y="469" width="0.0302%" height="15" fill="rgb(220,109,13)" fg:x="493" fg:w="1"/><text x="15.1398%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (6 samples, 0.18%)</title><rect x="14.7690%" y="485" width="0.1812%" height="15" fill="rgb(232,18,1)" fg:x="489" fg:w="6"/><text x="15.0190%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="14.9200%" y="469" width="0.0302%" height="15" fill="rgb(215,41,42)" fg:x="494" fg:w="1"/><text x="15.1700%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.03%)</title><rect x="14.9502%" y="485" width="0.0302%" height="15" fill="rgb(224,123,36)" fg:x="495" fg:w="1"/><text x="15.2002%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.03%)</title><rect x="14.9502%" y="469" width="0.0302%" height="15" fill="rgb(240,125,3)" fg:x="495" fg:w="1"/><text x="15.2002%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="14.9804%" y="485" width="0.0302%" height="15" fill="rgb(205,98,50)" fg:x="496" fg:w="1"/><text x="15.2304%" y="495.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="15.2522%" y="469" width="0.0302%" height="15" fill="rgb(205,185,37)" fg:x="505" fg:w="1"/><text x="15.5022%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (2 samples, 0.06%)</title><rect x="15.2824%" y="469" width="0.0604%" height="15" fill="rgb(238,207,15)" fg:x="506" fg:w="2"/><text x="15.5324%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (12 samples, 0.36%)</title><rect x="15.0106%" y="485" width="0.3624%" height="15" fill="rgb(213,199,42)" fg:x="497" fg:w="12"/><text x="15.2606%" y="495.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="15.3428%" y="469" width="0.0302%" height="15" fill="rgb(235,201,11)" fg:x="508" fg:w="1"/><text x="15.5928%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (5 samples, 0.15%)</title><rect x="15.3730%" y="485" width="0.1510%" height="15" fill="rgb(207,46,11)" fg:x="509" fg:w="5"/><text x="15.6230%" y="495.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (7 samples, 0.21%)</title><rect x="15.5240%" y="485" width="0.2114%" height="15" fill="rgb(241,35,35)" fg:x="514" fg:w="7"/><text x="15.7740%" y="495.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (4 samples, 0.12%)</title><rect x="15.7354%" y="485" width="0.1208%" height="15" fill="rgb(243,32,47)" fg:x="521" fg:w="4"/><text x="15.9854%" y="495.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (62 samples, 1.87%)</title><rect x="14.1347%" y="501" width="1.8725%" height="15" fill="rgb(247,202,23)" fg:x="468" fg:w="62"/><text x="14.3847%" y="511.50">c..</text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (5 samples, 0.15%)</title><rect x="15.8562%" y="485" width="0.1510%" height="15" fill="rgb(219,102,11)" fg:x="525" fg:w="5"/><text x="16.1062%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (2 samples, 0.06%)</title><rect x="16.0072%" y="501" width="0.0604%" height="15" fill="rgb(243,110,44)" fg:x="530" fg:w="2"/><text x="16.2572%" y="511.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="16.0677%" y="501" width="0.0302%" height="15" fill="rgb(222,74,54)" fg:x="532" fg:w="1"/><text x="16.3177%" y="511.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.06%)</title><rect x="16.0979%" y="501" width="0.0604%" height="15" fill="rgb(216,99,12)" fg:x="533" fg:w="2"/><text x="16.3479%" y="511.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="16.1583%" y="501" width="0.0302%" height="15" fill="rgb(226,22,26)" fg:x="535" fg:w="1"/><text x="16.4083%" y="511.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_par_ks_blocks (70 samples, 2.11%)</title><rect x="14.1347%" y="549" width="2.1142%" height="15" fill="rgb(217,163,10)" fg:x="468" fg:w="70"/><text x="14.3847%" y="559.50">&lt;..</text></g><g><title>chacha20::backends::avx2::rounds (70 samples, 2.11%)</title><rect x="14.1347%" y="533" width="2.1142%" height="15" fill="rgb(213,25,53)" fg:x="468" fg:w="70"/><text x="14.3847%" y="543.50">c..</text></g><g><title>chacha20::backends::avx2::double_quarter_round (70 samples, 2.11%)</title><rect x="14.1347%" y="517" width="2.1142%" height="15" fill="rgb(252,105,26)" fg:x="468" fg:w="70"/><text x="14.3847%" y="527.50">c..</text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (2 samples, 0.06%)</title><rect x="16.1885%" y="501" width="0.0604%" height="15" fill="rgb(220,39,43)" fg:x="536" fg:w="2"/><text x="16.4385%" y="511.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="16.2489%" y="469" width="0.0302%" height="15" fill="rgb(229,68,48)" fg:x="538" fg:w="1"/><text x="16.4989%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="16.2791%" y="469" width="0.0302%" height="15" fill="rgb(252,8,32)" fg:x="539" fg:w="1"/><text x="16.5291%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="16.2791%" y="453" width="0.0302%" height="15" fill="rgb(223,20,43)" fg:x="539" fg:w="1"/><text x="16.5291%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.03%)</title><rect x="16.3093%" y="469" width="0.0302%" height="15" fill="rgb(229,81,49)" fg:x="540" fg:w="1"/><text x="16.5593%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (3 samples, 0.09%)</title><rect x="16.3395%" y="469" width="0.0906%" height="15" fill="rgb(236,28,36)" fg:x="541" fg:w="3"/><text x="16.5895%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="16.3999%" y="453" width="0.0302%" height="15" fill="rgb(249,185,26)" fg:x="543" fg:w="1"/><text x="16.6499%" y="463.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="16.4301%" y="469" width="0.0302%" height="15" fill="rgb(249,174,33)" fg:x="544" fg:w="1"/><text x="16.6801%" y="479.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (8 samples, 0.24%)</title><rect x="16.2489%" y="485" width="0.2416%" height="15" fill="rgb(233,201,37)" fg:x="538" fg:w="8"/><text x="16.4989%" y="495.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="16.4603%" y="469" width="0.0302%" height="15" fill="rgb(221,78,26)" fg:x="545" fg:w="1"/><text x="16.7103%" y="479.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (79 samples, 2.39%)</title><rect x="14.1347%" y="709" width="2.3860%" height="15" fill="rgb(250,127,30)" fg:x="468" fg:w="79"/><text x="14.3847%" y="719.50">&lt;c..</text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::decrypt_in_place_detached (79 samples, 2.39%)</title><rect x="14.1347%" y="693" width="2.3860%" height="15" fill="rgb(230,49,44)" fg:x="468" fg:w="79"/><text x="14.3847%" y="703.50">ch..</text></g><g><title>cipher::stream::StreamCipher::apply_keystream (79 samples, 2.39%)</title><rect x="14.1347%" y="677" width="2.3860%" height="15" fill="rgb(229,67,23)" fg:x="468" fg:w="79"/><text x="14.3847%" y="687.50">ci..</text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (79 samples, 2.39%)</title><rect x="14.1347%" y="661" width="2.3860%" height="15" fill="rgb(249,83,47)" fg:x="468" fg:w="79"/><text x="14.3847%" y="671.50">ci..</text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (79 samples, 2.39%)</title><rect x="14.1347%" y="645" width="2.3860%" height="15" fill="rgb(215,43,3)" fg:x="468" fg:w="79"/><text x="14.3847%" y="655.50">&lt;c..</text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (79 samples, 2.39%)</title><rect x="14.1347%" y="629" width="2.3860%" height="15" fill="rgb(238,154,13)" fg:x="468" fg:w="79"/><text x="14.3847%" y="639.50">ci..</text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (79 samples, 2.39%)</title><rect x="14.1347%" y="613" width="2.3860%" height="15" fill="rgb(219,56,2)" fg:x="468" fg:w="79"/><text x="14.3847%" y="623.50">&lt;c..</text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (79 samples, 2.39%)</title><rect x="14.1347%" y="597" width="2.3860%" height="15" fill="rgb(233,0,4)" fg:x="468" fg:w="79"/><text x="14.3847%" y="607.50">&lt;c..</text></g><g><title>chacha20::backends::avx2::inner (79 samples, 2.39%)</title><rect x="14.1347%" y="581" width="2.3860%" height="15" fill="rgb(235,30,7)" fg:x="468" fg:w="79"/><text x="14.3847%" y="591.50">ch..</text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (79 samples, 2.39%)</title><rect x="14.1347%" y="565" width="2.3860%" height="15" fill="rgb(250,79,13)" fg:x="468" fg:w="79"/><text x="14.3847%" y="575.50">&lt;c..</text></g><g><title>cipher::stream_core::StreamBackend::gen_tail_blocks (9 samples, 0.27%)</title><rect x="16.2489%" y="549" width="0.2718%" height="15" fill="rgb(211,146,34)" fg:x="538" fg:w="9"/><text x="16.4989%" y="559.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (9 samples, 0.27%)</title><rect x="16.2489%" y="533" width="0.2718%" height="15" fill="rgb(228,22,38)" fg:x="538" fg:w="9"/><text x="16.4989%" y="543.50"></text></g><g><title>chacha20::backends::avx2::rounds (9 samples, 0.27%)</title><rect x="16.2489%" y="517" width="0.2718%" height="15" fill="rgb(235,168,5)" fg:x="538" fg:w="9"/><text x="16.4989%" y="527.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (9 samples, 0.27%)</title><rect x="16.2489%" y="501" width="0.2718%" height="15" fill="rgb(221,155,16)" fg:x="538" fg:w="9"/><text x="16.4989%" y="511.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="16.4905%" y="485" width="0.0302%" height="15" fill="rgb(215,215,53)" fg:x="546" fg:w="1"/><text x="16.7405%" y="495.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (3 samples, 0.09%)</title><rect x="16.8831%" y="485" width="0.0906%" height="15" fill="rgb(223,4,10)" fg:x="559" fg:w="3"/><text x="17.1331%" y="495.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.03%)</title><rect x="17.0341%" y="469" width="0.0302%" height="15" fill="rgb(234,103,6)" fg:x="564" fg:w="1"/><text x="17.2841%" y="479.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.18%)</title><rect x="16.9737%" y="485" width="0.1812%" height="15" fill="rgb(227,97,0)" fg:x="562" fg:w="6"/><text x="17.2237%" y="495.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (3 samples, 0.09%)</title><rect x="17.0643%" y="469" width="0.0906%" height="15" fill="rgb(234,150,53)" fg:x="565" fg:w="3"/><text x="17.3143%" y="479.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (2 samples, 0.06%)</title><rect x="17.0945%" y="453" width="0.0604%" height="15" fill="rgb(228,201,54)" fg:x="566" fg:w="2"/><text x="17.3445%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.03%)</title><rect x="17.1247%" y="437" width="0.0302%" height="15" fill="rgb(222,22,37)" fg:x="567" fg:w="1"/><text x="17.3747%" y="447.50"></text></g><g><title>tick_sched_do_timer (1 samples, 0.03%)</title><rect x="17.1549%" y="389" width="0.0302%" height="15" fill="rgb(237,53,32)" fg:x="568" fg:w="1"/><text x="17.4049%" y="399.50"></text></g><g><title>update_wall_time (1 samples, 0.03%)</title><rect x="17.1549%" y="373" width="0.0302%" height="15" fill="rgb(233,25,53)" fg:x="568" fg:w="1"/><text x="17.4049%" y="383.50"></text></g><g><title>timekeeping_advance (1 samples, 0.03%)</title><rect x="17.1549%" y="357" width="0.0302%" height="15" fill="rgb(210,40,34)" fg:x="568" fg:w="1"/><text x="17.4049%" y="367.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (2 samples, 0.06%)</title><rect x="17.1549%" y="485" width="0.0604%" height="15" fill="rgb(241,220,44)" fg:x="568" fg:w="2"/><text x="17.4049%" y="495.50"></text></g><g><title>sysvec_apic_timer_interrupt (2 samples, 0.06%)</title><rect x="17.1549%" y="469" width="0.0604%" height="15" fill="rgb(235,28,35)" fg:x="568" fg:w="2"/><text x="17.4049%" y="479.50"></text></g><g><title>__sysvec_apic_timer_interrupt (2 samples, 0.06%)</title><rect x="17.1549%" y="453" width="0.0604%" height="15" fill="rgb(210,56,17)" fg:x="568" fg:w="2"/><text x="17.4049%" y="463.50"></text></g><g><title>hrtimer_interrupt (2 samples, 0.06%)</title><rect x="17.1549%" y="437" width="0.0604%" height="15" fill="rgb(224,130,29)" fg:x="568" fg:w="2"/><text x="17.4049%" y="447.50"></text></g><g><title>__hrtimer_run_queues (2 samples, 0.06%)</title><rect x="17.1549%" y="421" width="0.0604%" height="15" fill="rgb(235,212,8)" fg:x="568" fg:w="2"/><text x="17.4049%" y="431.50"></text></g><g><title>tick_sched_timer (2 samples, 0.06%)</title><rect x="17.1549%" y="405" width="0.0604%" height="15" fill="rgb(223,33,50)" fg:x="568" fg:w="2"/><text x="17.4049%" y="415.50"></text></g><g><title>tick_sched_handle (1 samples, 0.03%)</title><rect x="17.1851%" y="389" width="0.0302%" height="15" fill="rgb(219,149,13)" fg:x="569" fg:w="1"/><text x="17.4351%" y="399.50"></text></g><g><title>update_process_times (1 samples, 0.03%)</title><rect x="17.1851%" y="373" width="0.0302%" height="15" fill="rgb(250,156,29)" fg:x="569" fg:w="1"/><text x="17.4351%" y="383.50"></text></g><g><title>scheduler_tick (1 samples, 0.03%)</title><rect x="17.1851%" y="357" width="0.0302%" height="15" fill="rgb(216,193,19)" fg:x="569" fg:w="1"/><text x="17.4351%" y="367.50"></text></g><g><title>task_tick_fair (1 samples, 0.03%)</title><rect x="17.1851%" y="341" width="0.0302%" height="15" fill="rgb(216,135,14)" fg:x="569" fg:w="1"/><text x="17.4351%" y="351.50"></text></g><g><title>update_curr (1 samples, 0.03%)</title><rect x="17.1851%" y="325" width="0.0302%" height="15" fill="rgb(241,47,5)" fg:x="569" fg:w="1"/><text x="17.4351%" y="335.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (53 samples, 1.60%)</title><rect x="17.2153%" y="485" width="1.6007%" height="15" fill="rgb(233,42,35)" fg:x="570" fg:w="53"/><text x="17.4653%" y="495.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (6 samples, 0.18%)</title><rect x="18.8161%" y="485" width="0.1812%" height="15" fill="rgb(231,13,6)" fg:x="623" fg:w="6"/><text x="19.0661%" y="495.50"></text></g><g><title>chacha20::backends::avx2::rounds (1 samples, 0.03%)</title><rect x="18.9973%" y="485" width="0.0302%" height="15" fill="rgb(207,181,40)" fg:x="629" fg:w="1"/><text x="19.2473%" y="495.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (12 samples, 0.36%)</title><rect x="19.0275%" y="485" width="0.3624%" height="15" fill="rgb(254,173,49)" fg:x="630" fg:w="12"/><text x="19.2775%" y="495.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (8 samples, 0.24%)</title><rect x="19.9034%" y="469" width="0.2416%" height="15" fill="rgb(221,1,38)" fg:x="659" fg:w="8"/><text x="20.1534%" y="479.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (2 samples, 0.06%)</title><rect x="20.1450%" y="469" width="0.0604%" height="15" fill="rgb(206,124,46)" fg:x="667" fg:w="2"/><text x="20.3950%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="20.2054%" y="469" width="0.0302%" height="15" fill="rgb(249,21,11)" fg:x="669" fg:w="1"/><text x="20.4554%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="20.2356%" y="469" width="0.0302%" height="15" fill="rgb(222,201,40)" fg:x="670" fg:w="1"/><text x="20.4856%" y="479.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.03%)</title><rect x="20.2356%" y="453" width="0.0302%" height="15" fill="rgb(235,61,29)" fg:x="670" fg:w="1"/><text x="20.4856%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (5 samples, 0.15%)</title><rect x="20.2658%" y="469" width="0.1510%" height="15" fill="rgb(219,207,3)" fg:x="671" fg:w="5"/><text x="20.5158%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (6 samples, 0.18%)</title><rect x="20.4168%" y="469" width="0.1812%" height="15" fill="rgb(222,56,46)" fg:x="676" fg:w="6"/><text x="20.6668%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (3 samples, 0.09%)</title><rect x="20.5980%" y="469" width="0.0906%" height="15" fill="rgb(239,76,54)" fg:x="682" fg:w="3"/><text x="20.8480%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (45 samples, 1.36%)</title><rect x="19.3899%" y="485" width="1.3591%" height="15" fill="rgb(231,124,27)" fg:x="642" fg:w="45"/><text x="19.6399%" y="495.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (2 samples, 0.06%)</title><rect x="20.6886%" y="469" width="0.0604%" height="15" fill="rgb(249,195,6)" fg:x="685" fg:w="2"/><text x="20.9386%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (7 samples, 0.21%)</title><rect x="20.7490%" y="485" width="0.2114%" height="15" fill="rgb(237,174,47)" fg:x="687" fg:w="7"/><text x="20.9990%" y="495.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (3 samples, 0.09%)</title><rect x="21.5343%" y="469" width="0.0906%" height="15" fill="rgb(206,201,31)" fg:x="713" fg:w="3"/><text x="21.7843%" y="479.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (2 samples, 0.06%)</title><rect x="21.6249%" y="469" width="0.0604%" height="15" fill="rgb(231,57,52)" fg:x="716" fg:w="2"/><text x="21.8749%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="21.6853%" y="469" width="0.0302%" height="15" fill="rgb(248,177,22)" fg:x="718" fg:w="1"/><text x="21.9353%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.03%)</title><rect x="21.7155%" y="469" width="0.0302%" height="15" fill="rgb(215,211,37)" fg:x="719" fg:w="1"/><text x="21.9655%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.03%)</title><rect x="21.7457%" y="469" width="0.0302%" height="15" fill="rgb(241,128,51)" fg:x="720" fg:w="1"/><text x="21.9957%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (5 samples, 0.15%)</title><rect x="21.7759%" y="469" width="0.1510%" height="15" fill="rgb(227,165,31)" fg:x="721" fg:w="5"/><text x="22.0259%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (36 samples, 1.09%)</title><rect x="20.9604%" y="485" width="1.0873%" height="15" fill="rgb(228,167,24)" fg:x="694" fg:w="36"/><text x="21.2104%" y="495.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (4 samples, 0.12%)</title><rect x="21.9269%" y="469" width="0.1208%" height="15" fill="rgb(228,143,12)" fg:x="726" fg:w="4"/><text x="22.1769%" y="479.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (4 samples, 0.12%)</title><rect x="22.1383%" y="469" width="0.1208%" height="15" fill="rgb(249,149,8)" fg:x="733" fg:w="4"/><text x="22.3883%" y="479.50"></text></g><g><title>chacha20::backends::avx2::rounds (1 samples, 0.03%)</title><rect x="22.2591%" y="469" width="0.0302%" height="15" fill="rgb(243,35,44)" fg:x="737" fg:w="1"/><text x="22.5091%" y="479.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (4 samples, 0.12%)</title><rect x="22.2893%" y="469" width="0.1208%" height="15" fill="rgb(246,89,9)" fg:x="738" fg:w="4"/><text x="22.5393%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.03%)</title><rect x="22.4101%" y="469" width="0.0302%" height="15" fill="rgb(233,213,13)" fg:x="742" fg:w="1"/><text x="22.6601%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.03%)</title><rect x="22.4404%" y="469" width="0.0302%" height="15" fill="rgb(233,141,41)" fg:x="743" fg:w="1"/><text x="22.6904%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="22.4706%" y="469" width="0.0302%" height="15" fill="rgb(239,167,4)" fg:x="744" fg:w="1"/><text x="22.7206%" y="479.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.03%)</title><rect x="22.4706%" y="453" width="0.0302%" height="15" fill="rgb(209,217,16)" fg:x="744" fg:w="1"/><text x="22.7206%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (2 samples, 0.06%)</title><rect x="22.5008%" y="469" width="0.0604%" height="15" fill="rgb(219,88,35)" fg:x="745" fg:w="2"/><text x="22.7508%" y="479.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.03%)</title><rect x="22.5612%" y="469" width="0.0302%" height="15" fill="rgb(220,193,23)" fg:x="747" fg:w="1"/><text x="22.8112%" y="479.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi64x (1 samples, 0.03%)</title><rect x="22.5612%" y="453" width="0.0302%" height="15" fill="rgb(230,90,52)" fg:x="747" fg:w="1"/><text x="22.8112%" y="463.50"></text></g><g><title>core::core_arch::simd::i64x4::new (1 samples, 0.03%)</title><rect x="22.5612%" y="437" width="0.0302%" height="15" fill="rgb(252,106,19)" fg:x="747" fg:w="1"/><text x="22.8112%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (3 samples, 0.09%)</title><rect x="22.5914%" y="469" width="0.0906%" height="15" fill="rgb(206,74,20)" fg:x="748" fg:w="3"/><text x="22.8414%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="22.6820%" y="469" width="0.0302%" height="15" fill="rgb(230,138,44)" fg:x="751" fg:w="1"/><text x="22.9320%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (3 samples, 0.09%)</title><rect x="22.7122%" y="469" width="0.0906%" height="15" fill="rgb(235,182,43)" fg:x="752" fg:w="3"/><text x="22.9622%" y="479.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.03%)</title><rect x="22.7726%" y="453" width="0.0302%" height="15" fill="rgb(242,16,51)" fg:x="754" fg:w="1"/><text x="23.0226%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (26 samples, 0.79%)</title><rect x="22.0477%" y="485" width="0.7853%" height="15" fill="rgb(248,9,4)" fg:x="730" fg:w="26"/><text x="22.2977%" y="495.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="22.8028%" y="469" width="0.0302%" height="15" fill="rgb(210,31,22)" fg:x="755" fg:w="1"/><text x="23.0528%" y="479.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (4 samples, 0.12%)</title><rect x="23.2860%" y="469" width="0.1208%" height="15" fill="rgb(239,54,39)" fg:x="771" fg:w="4"/><text x="23.5360%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="23.4068%" y="469" width="0.0302%" height="15" fill="rgb(230,99,41)" fg:x="775" fg:w="1"/><text x="23.6568%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.03%)</title><rect x="23.4370%" y="469" width="0.0302%" height="15" fill="rgb(253,106,12)" fg:x="776" fg:w="1"/><text x="23.6870%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (22 samples, 0.66%)</title><rect x="22.8330%" y="485" width="0.6645%" height="15" fill="rgb(213,46,41)" fg:x="756" fg:w="22"/><text x="23.0830%" y="495.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="23.4672%" y="469" width="0.0302%" height="15" fill="rgb(215,133,35)" fg:x="777" fg:w="1"/><text x="23.7172%" y="479.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (2 samples, 0.06%)</title><rect x="25.3398%" y="469" width="0.0604%" height="15" fill="rgb(213,28,5)" fg:x="839" fg:w="2"/><text x="25.5898%" y="479.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (2 samples, 0.06%)</title><rect x="25.4002%" y="469" width="0.0604%" height="15" fill="rgb(215,77,49)" fg:x="841" fg:w="2"/><text x="25.6502%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (3 samples, 0.09%)</title><rect x="25.4606%" y="469" width="0.0906%" height="15" fill="rgb(248,100,22)" fg:x="843" fg:w="3"/><text x="25.7106%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="25.5512%" y="469" width="0.0302%" height="15" fill="rgb(208,67,9)" fg:x="846" fg:w="1"/><text x="25.8012%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (70 samples, 2.11%)</title><rect x="23.4974%" y="485" width="2.1142%" height="15" fill="rgb(219,133,21)" fg:x="778" fg:w="70"/><text x="23.7474%" y="495.50">c..</text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="25.5814%" y="469" width="0.0302%" height="15" fill="rgb(246,46,29)" fg:x="847" fg:w="1"/><text x="25.8314%" y="479.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="25.5814%" y="453" width="0.0302%" height="15" fill="rgb(246,185,52)" fg:x="847" fg:w="1"/><text x="25.8314%" y="463.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (7 samples, 0.21%)</title><rect x="25.6116%" y="485" width="0.2114%" height="15" fill="rgb(252,136,11)" fg:x="848" fg:w="7"/><text x="25.8616%" y="495.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi64x (4 samples, 0.12%)</title><rect x="25.7022%" y="469" width="0.1208%" height="15" fill="rgb(219,138,53)" fg:x="851" fg:w="4"/><text x="25.9522%" y="479.50"></text></g><g><title>core::core_arch::simd::i64x4::new (2 samples, 0.06%)</title><rect x="25.7626%" y="453" width="0.0604%" height="15" fill="rgb(211,51,23)" fg:x="853" fg:w="2"/><text x="26.0126%" y="463.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="25.8230%" y="485" width="0.0302%" height="15" fill="rgb(247,221,28)" fg:x="855" fg:w="1"/><text x="26.0730%" y="495.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="25.8230%" y="469" width="0.0302%" height="15" fill="rgb(251,222,45)" fg:x="855" fg:w="1"/><text x="26.0730%" y="479.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="25.8230%" y="453" width="0.0302%" height="15" fill="rgb(217,162,53)" fg:x="855" fg:w="1"/><text x="26.0730%" y="463.50"></text></g><g><title>core::core_arch::simd::i8x32::new (1 samples, 0.03%)</title><rect x="25.8230%" y="437" width="0.0302%" height="15" fill="rgb(229,93,14)" fg:x="855" fg:w="1"/><text x="26.0730%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (31 samples, 0.94%)</title><rect x="25.8532%" y="485" width="0.9363%" height="15" fill="rgb(209,67,49)" fg:x="856" fg:w="31"/><text x="26.1032%" y="495.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (27 samples, 0.82%)</title><rect x="26.7895%" y="485" width="0.8155%" height="15" fill="rgb(213,87,29)" fg:x="887" fg:w="27"/><text x="27.0395%" y="495.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (26 samples, 0.79%)</title><rect x="27.6050%" y="485" width="0.7853%" height="15" fill="rgb(205,151,52)" fg:x="914" fg:w="26"/><text x="27.8550%" y="495.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (34 samples, 1.03%)</title><rect x="28.3902%" y="485" width="1.0269%" height="15" fill="rgb(253,215,39)" fg:x="940" fg:w="34"/><text x="28.6402%" y="495.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (428 samples, 12.93%)</title><rect x="16.5207%" y="501" width="12.9266%" height="15" fill="rgb(221,220,41)" fg:x="547" fg:w="428"/><text x="16.7707%" y="511.50">chacha20::backends:..</text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (1 samples, 0.03%)</title><rect x="29.4171%" y="485" width="0.0302%" height="15" fill="rgb(218,133,21)" fg:x="974" fg:w="1"/><text x="29.6671%" y="495.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (2 samples, 0.06%)</title><rect x="29.4473%" y="501" width="0.0604%" height="15" fill="rgb(221,193,43)" fg:x="975" fg:w="2"/><text x="29.6973%" y="511.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (1 samples, 0.03%)</title><rect x="29.5077%" y="501" width="0.0302%" height="15" fill="rgb(240,128,52)" fg:x="977" fg:w="1"/><text x="29.7577%" y="511.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (4 samples, 0.12%)</title><rect x="29.5379%" y="501" width="0.1208%" height="15" fill="rgb(253,114,12)" fg:x="978" fg:w="4"/><text x="29.7879%" y="511.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (6 samples, 0.18%)</title><rect x="29.6587%" y="501" width="0.1812%" height="15" fill="rgb(215,223,47)" fg:x="982" fg:w="6"/><text x="29.9087%" y="511.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.03%)</title><rect x="29.8399%" y="501" width="0.0302%" height="15" fill="rgb(248,225,23)" fg:x="988" fg:w="1"/><text x="30.0899%" y="511.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (2 samples, 0.06%)</title><rect x="29.8701%" y="501" width="0.0604%" height="15" fill="rgb(250,108,0)" fg:x="989" fg:w="2"/><text x="30.1201%" y="511.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.03%)</title><rect x="29.9003%" y="485" width="0.0302%" height="15" fill="rgb(228,208,7)" fg:x="990" fg:w="1"/><text x="30.1503%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="29.9305%" y="501" width="0.0302%" height="15" fill="rgb(244,45,10)" fg:x="991" fg:w="1"/><text x="30.1805%" y="511.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (10 samples, 0.30%)</title><rect x="29.9607%" y="501" width="0.3020%" height="15" fill="rgb(207,125,25)" fg:x="992" fg:w="10"/><text x="30.2107%" y="511.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.03%)</title><rect x="30.2628%" y="501" width="0.0302%" height="15" fill="rgb(210,195,18)" fg:x="1002" fg:w="1"/><text x="30.5128%" y="511.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (13 samples, 0.39%)</title><rect x="30.2930%" y="501" width="0.3926%" height="15" fill="rgb(249,80,12)" fg:x="1003" fg:w="13"/><text x="30.5430%" y="511.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.06%)</title><rect x="30.6856%" y="501" width="0.0604%" height="15" fill="rgb(221,65,9)" fg:x="1016" fg:w="2"/><text x="30.9356%" y="511.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (8 samples, 0.24%)</title><rect x="30.7460%" y="501" width="0.2416%" height="15" fill="rgb(235,49,36)" fg:x="1018" fg:w="8"/><text x="30.9960%" y="511.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_par_ks_blocks (489 samples, 14.77%)</title><rect x="16.5207%" y="549" width="14.7690%" height="15" fill="rgb(225,32,20)" fg:x="547" fg:w="489"/><text x="16.7707%" y="559.50">&lt;chacha20::backends::av..</text></g><g><title>chacha20::backends::avx2::rounds (489 samples, 14.77%)</title><rect x="16.5207%" y="533" width="14.7690%" height="15" fill="rgb(215,141,46)" fg:x="547" fg:w="489"/><text x="16.7707%" y="543.50">chacha20::backends::avx..</text></g><g><title>chacha20::backends::avx2::double_quarter_round (489 samples, 14.77%)</title><rect x="16.5207%" y="517" width="14.7690%" height="15" fill="rgb(250,160,47)" fg:x="547" fg:w="489"/><text x="16.7707%" y="527.50">chacha20::backends::avx..</text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (10 samples, 0.30%)</title><rect x="30.9876%" y="501" width="0.3020%" height="15" fill="rgb(216,222,40)" fg:x="1026" fg:w="10"/><text x="31.2376%" y="511.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.03%)</title><rect x="31.4709%" y="469" width="0.0302%" height="15" fill="rgb(234,217,39)" fg:x="1042" fg:w="1"/><text x="31.7209%" y="479.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (6 samples, 0.18%)</title><rect x="31.5011%" y="469" width="0.1812%" height="15" fill="rgb(207,178,40)" fg:x="1043" fg:w="6"/><text x="31.7511%" y="479.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (2 samples, 0.06%)</title><rect x="31.6823%" y="469" width="0.0604%" height="15" fill="rgb(221,136,13)" fg:x="1049" fg:w="2"/><text x="31.9323%" y="479.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (2 samples, 0.06%)</title><rect x="31.8031%" y="453" width="0.0604%" height="15" fill="rgb(249,199,10)" fg:x="1053" fg:w="2"/><text x="32.0531%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="31.8635%" y="453" width="0.0302%" height="15" fill="rgb(249,222,13)" fg:x="1055" fg:w="1"/><text x="32.1135%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (6 samples, 0.18%)</title><rect x="31.7427%" y="469" width="0.1812%" height="15" fill="rgb(244,185,38)" fg:x="1051" fg:w="6"/><text x="31.9927%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="31.8937%" y="453" width="0.0302%" height="15" fill="rgb(236,202,9)" fg:x="1056" fg:w="1"/><text x="32.1437%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.03%)</title><rect x="32.0145%" y="453" width="0.0302%" height="15" fill="rgb(250,229,37)" fg:x="1060" fg:w="1"/><text x="32.2645%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.03%)</title><rect x="32.0447%" y="453" width="0.0302%" height="15" fill="rgb(206,174,23)" fg:x="1061" fg:w="1"/><text x="32.2947%" y="463.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="32.0749%" y="453" width="0.0302%" height="15" fill="rgb(211,33,43)" fg:x="1062" fg:w="1"/><text x="32.3249%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (8 samples, 0.24%)</title><rect x="31.9239%" y="469" width="0.2416%" height="15" fill="rgb(245,58,50)" fg:x="1057" fg:w="8"/><text x="32.1739%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (2 samples, 0.06%)</title><rect x="32.1051%" y="453" width="0.0604%" height="15" fill="rgb(244,68,36)" fg:x="1063" fg:w="2"/><text x="32.3551%" y="463.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.03%)</title><rect x="32.1957%" y="453" width="0.0302%" height="15" fill="rgb(232,229,15)" fg:x="1066" fg:w="1"/><text x="32.4457%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.03%)</title><rect x="32.2259%" y="453" width="0.0302%" height="15" fill="rgb(254,30,23)" fg:x="1067" fg:w="1"/><text x="32.4759%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.03%)</title><rect x="32.2561%" y="453" width="0.0302%" height="15" fill="rgb(235,160,14)" fg:x="1068" fg:w="1"/><text x="32.5061%" y="463.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.03%)</title><rect x="32.2561%" y="437" width="0.0302%" height="15" fill="rgb(212,155,44)" fg:x="1068" fg:w="1"/><text x="32.5061%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="32.2863%" y="453" width="0.0302%" height="15" fill="rgb(226,2,50)" fg:x="1069" fg:w="1"/><text x="32.5363%" y="463.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="32.3165%" y="453" width="0.0302%" height="15" fill="rgb(234,177,6)" fg:x="1070" fg:w="1"/><text x="32.5665%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (7 samples, 0.21%)</title><rect x="32.1655%" y="469" width="0.2114%" height="15" fill="rgb(217,24,9)" fg:x="1065" fg:w="7"/><text x="32.4155%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="32.3467%" y="453" width="0.0302%" height="15" fill="rgb(220,13,46)" fg:x="1071" fg:w="1"/><text x="32.5967%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (2 samples, 0.06%)</title><rect x="32.3769%" y="469" width="0.0604%" height="15" fill="rgb(239,221,27)" fg:x="1072" fg:w="2"/><text x="32.6269%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="32.4071%" y="453" width="0.0302%" height="15" fill="rgb(222,198,25)" fg:x="1073" fg:w="1"/><text x="32.6571%" y="463.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (1 samples, 0.03%)</title><rect x="32.6789%" y="453" width="0.0302%" height="15" fill="rgb(211,99,13)" fg:x="1082" fg:w="1"/><text x="32.9289%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (10 samples, 0.30%)</title><rect x="32.4373%" y="469" width="0.3020%" height="15" fill="rgb(232,111,31)" fg:x="1074" fg:w="10"/><text x="32.6873%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="32.7092%" y="453" width="0.0302%" height="15" fill="rgb(245,82,37)" fg:x="1083" fg:w="1"/><text x="32.9592%" y="463.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (3 samples, 0.09%)</title><rect x="32.7394%" y="469" width="0.0906%" height="15" fill="rgb(227,149,46)" fg:x="1084" fg:w="3"/><text x="32.9894%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (6 samples, 0.18%)</title><rect x="32.8300%" y="469" width="0.1812%" height="15" fill="rgb(218,36,50)" fg:x="1087" fg:w="6"/><text x="33.0800%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (5 samples, 0.15%)</title><rect x="33.0112%" y="469" width="0.1510%" height="15" fill="rgb(226,80,48)" fg:x="1093" fg:w="5"/><text x="33.2612%" y="479.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (64 samples, 1.93%)</title><rect x="31.2896%" y="485" width="1.9330%" height="15" fill="rgb(238,224,15)" fg:x="1036" fg:w="64"/><text x="31.5396%" y="495.50">c..</text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (2 samples, 0.06%)</title><rect x="33.1622%" y="469" width="0.0604%" height="15" fill="rgb(241,136,10)" fg:x="1098" fg:w="2"/><text x="33.4122%" y="479.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (1 samples, 0.03%)</title><rect x="33.2226%" y="485" width="0.0302%" height="15" fill="rgb(208,32,45)" fg:x="1100" fg:w="1"/><text x="33.4726%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (2 samples, 0.06%)</title><rect x="33.2528%" y="485" width="0.0604%" height="15" fill="rgb(207,135,9)" fg:x="1101" fg:w="2"/><text x="33.5028%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (2 samples, 0.06%)</title><rect x="33.3132%" y="485" width="0.0604%" height="15" fill="rgb(206,86,44)" fg:x="1103" fg:w="2"/><text x="33.5632%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.03%)</title><rect x="33.3736%" y="485" width="0.0302%" height="15" fill="rgb(245,177,15)" fg:x="1105" fg:w="1"/><text x="33.6236%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (2 samples, 0.06%)</title><rect x="33.4038%" y="485" width="0.0604%" height="15" fill="rgb(206,64,50)" fg:x="1106" fg:w="2"/><text x="33.6538%" y="495.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.06%)</title><rect x="33.4642%" y="485" width="0.0604%" height="15" fill="rgb(234,36,40)" fg:x="1108" fg:w="2"/><text x="33.7142%" y="495.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::encrypt_in_place_detached (565 samples, 17.06%)</title><rect x="16.5207%" y="709" width="17.0643%" height="15" fill="rgb(213,64,8)" fg:x="547" fg:w="565"/><text x="16.7707%" y="719.50">&lt;chacha20poly1305::ChaChaP..</text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::encrypt_in_place_detached (565 samples, 17.06%)</title><rect x="16.5207%" y="693" width="17.0643%" height="15" fill="rgb(210,75,36)" fg:x="547" fg:w="565"/><text x="16.7707%" y="703.50">chacha20poly1305::cipher::..</text></g><g><title>cipher::stream::StreamCipher::apply_keystream (565 samples, 17.06%)</title><rect x="16.5207%" y="677" width="17.0643%" height="15" fill="rgb(229,88,21)" fg:x="547" fg:w="565"/><text x="16.7707%" y="687.50">cipher::stream::StreamCiph..</text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (565 samples, 17.06%)</title><rect x="16.5207%" y="661" width="17.0643%" height="15" fill="rgb(252,204,47)" fg:x="547" fg:w="565"/><text x="16.7707%" y="671.50">cipher::stream::StreamCiph..</text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (565 samples, 17.06%)</title><rect x="16.5207%" y="645" width="17.0643%" height="15" fill="rgb(208,77,27)" fg:x="547" fg:w="565"/><text x="16.7707%" y="655.50">&lt;cipher::stream_wrapper::S..</text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (565 samples, 17.06%)</title><rect x="16.5207%" y="629" width="17.0643%" height="15" fill="rgb(221,76,26)" fg:x="547" fg:w="565"/><text x="16.7707%" y="639.50">cipher::stream_core::Strea..</text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (565 samples, 17.06%)</title><rect x="16.5207%" y="613" width="17.0643%" height="15" fill="rgb(225,139,18)" fg:x="547" fg:w="565"/><text x="16.7707%" y="623.50">&lt;chacha20::xchacha::XChaCh..</text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (565 samples, 17.06%)</title><rect x="16.5207%" y="597" width="17.0643%" height="15" fill="rgb(230,137,11)" fg:x="547" fg:w="565"/><text x="16.7707%" y="607.50">&lt;chacha20::ChaChaCore&lt;R&gt; a..</text></g><g><title>chacha20::backends::avx2::inner (565 samples, 17.06%)</title><rect x="16.5207%" y="581" width="17.0643%" height="15" fill="rgb(212,28,1)" fg:x="547" fg:w="565"/><text x="16.7707%" y="591.50">chacha20::backends::avx2::..</text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (565 samples, 17.06%)</title><rect x="16.5207%" y="565" width="17.0643%" height="15" fill="rgb(248,164,17)" fg:x="547" fg:w="565"/><text x="16.7707%" y="575.50">&lt;cipher::stream_core::Appl..</text></g><g><title>cipher::stream_core::StreamBackend::gen_tail_blocks (76 samples, 2.30%)</title><rect x="31.2896%" y="549" width="2.2954%" height="15" fill="rgb(222,171,42)" fg:x="1036" fg:w="76"/><text x="31.5396%" y="559.50">c..</text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (76 samples, 2.30%)</title><rect x="31.2896%" y="533" width="2.2954%" height="15" fill="rgb(243,84,45)" fg:x="1036" fg:w="76"/><text x="31.5396%" y="543.50">&lt;..</text></g><g><title>chacha20::backends::avx2::rounds (76 samples, 2.30%)</title><rect x="31.2896%" y="517" width="2.2954%" height="15" fill="rgb(252,49,23)" fg:x="1036" fg:w="76"/><text x="31.5396%" y="527.50">c..</text></g><g><title>chacha20::backends::avx2::double_quarter_round (76 samples, 2.30%)</title><rect x="31.2896%" y="501" width="2.2954%" height="15" fill="rgb(215,19,7)" fg:x="1036" fg:w="76"/><text x="31.5396%" y="511.50">c..</text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (2 samples, 0.06%)</title><rect x="33.5246%" y="485" width="0.0604%" height="15" fill="rgb(238,81,41)" fg:x="1110" fg:w="2"/><text x="33.7746%" y="495.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="33.5850%" y="709" width="0.0302%" height="15" fill="rgb(210,199,37)" fg:x="1112" fg:w="1"/><text x="33.8350%" y="719.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (173 samples, 5.23%)</title><rect x="33.6152%" y="709" width="5.2250%" height="15" fill="rgb(244,192,49)" fg:x="1113" fg:w="173"/><text x="33.8652%" y="719.50">&lt;core:..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (36 samples, 1.09%)</title><rect x="38.8402%" y="709" width="1.0873%" height="15" fill="rgb(226,211,11)" fg:x="1286" fg:w="36"/><text x="39.0902%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="39.9275%" y="709" width="0.0302%" height="15" fill="rgb(236,162,54)" fg:x="1322" fg:w="1"/><text x="40.1775%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (2 samples, 0.06%)</title><rect x="39.9577%" y="709" width="0.0604%" height="15" fill="rgb(220,229,9)" fg:x="1323" fg:w="2"/><text x="40.2077%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="40.0181%" y="709" width="0.0302%" height="15" fill="rgb(250,87,22)" fg:x="1325" fg:w="1"/><text x="40.2681%" y="719.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (34 samples, 1.03%)</title><rect x="40.0483%" y="709" width="1.0269%" height="15" fill="rgb(239,43,17)" fg:x="1326" fg:w="34"/><text x="40.2983%" y="719.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_mut (1 samples, 0.03%)</title><rect x="41.0752%" y="709" width="0.0302%" height="15" fill="rgb(231,177,25)" fg:x="1360" fg:w="1"/><text x="41.3252%" y="719.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.03%)</title><rect x="41.1054%" y="709" width="0.0302%" height="15" fill="rgb(219,179,1)" fg:x="1361" fg:w="1"/><text x="41.3554%" y="719.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.03%)</title><rect x="41.1054%" y="693" width="0.0302%" height="15" fill="rgb(238,219,53)" fg:x="1361" fg:w="1"/><text x="41.3554%" y="703.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (1 samples, 0.03%)</title><rect x="41.1054%" y="677" width="0.0302%" height="15" fill="rgb(232,167,36)" fg:x="1361" fg:w="1"/><text x="41.3554%" y="687.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (1 samples, 0.03%)</title><rect x="41.1054%" y="661" width="0.0302%" height="15" fill="rgb(244,19,51)" fg:x="1361" fg:w="1"/><text x="41.3554%" y="671.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (1 samples, 0.03%)</title><rect x="41.1356%" y="709" width="0.0302%" height="15" fill="rgb(224,6,22)" fg:x="1362" fg:w="1"/><text x="41.3856%" y="719.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::pre_dec_end (1 samples, 0.03%)</title><rect x="41.1356%" y="693" width="0.0302%" height="15" fill="rgb(224,145,5)" fg:x="1362" fg:w="1"/><text x="41.3856%" y="703.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::cast (1 samples, 0.03%)</title><rect x="41.1356%" y="677" width="0.0302%" height="15" fill="rgb(234,130,49)" fg:x="1362" fg:w="1"/><text x="41.3856%" y="687.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.03%)</title><rect x="41.1960%" y="693" width="0.0302%" height="15" fill="rgb(254,6,2)" fg:x="1364" fg:w="1"/><text x="41.4460%" y="703.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.15%)</title><rect x="41.1658%" y="709" width="0.1510%" height="15" fill="rgb(208,96,46)" fg:x="1363" fg:w="5"/><text x="41.4158%" y="719.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (3 samples, 0.09%)</title><rect x="41.2262%" y="693" width="0.0906%" height="15" fill="rgb(239,3,39)" fg:x="1365" fg:w="3"/><text x="41.4762%" y="703.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (2 samples, 0.06%)</title><rect x="41.2564%" y="677" width="0.0604%" height="15" fill="rgb(233,210,1)" fg:x="1366" fg:w="2"/><text x="41.5064%" y="687.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.03%)</title><rect x="41.2866%" y="661" width="0.0302%" height="15" fill="rgb(244,137,37)" fg:x="1367" fg:w="1"/><text x="41.5366%" y="671.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (1 samples, 0.03%)</title><rect x="41.3168%" y="709" width="0.0302%" height="15" fill="rgb(240,136,2)" fg:x="1368" fg:w="1"/><text x="41.5668%" y="719.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.03%)</title><rect x="41.7397%" y="693" width="0.0302%" height="15" fill="rgb(239,18,37)" fg:x="1382" fg:w="1"/><text x="41.9897%" y="703.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (3 samples, 0.09%)</title><rect x="41.7699%" y="693" width="0.0906%" height="15" fill="rgb(218,185,22)" fg:x="1383" fg:w="3"/><text x="42.0199%" y="703.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (2 samples, 0.06%)</title><rect x="41.8001%" y="677" width="0.0604%" height="15" fill="rgb(225,218,4)" fg:x="1384" fg:w="2"/><text x="42.0501%" y="687.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (18 samples, 0.54%)</title><rect x="41.3470%" y="709" width="0.5436%" height="15" fill="rgb(230,182,32)" fg:x="1369" fg:w="18"/><text x="41.5970%" y="719.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.03%)</title><rect x="41.8605%" y="693" width="0.0302%" height="15" fill="rgb(242,56,43)" fg:x="1386" fg:w="1"/><text x="42.1105%" y="703.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (39 samples, 1.18%)</title><rect x="43.2800%" y="693" width="1.1779%" height="15" fill="rgb(233,99,24)" fg:x="1433" fg:w="39"/><text x="43.5300%" y="703.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_mut (2 samples, 0.06%)</title><rect x="44.4579%" y="693" width="0.0604%" height="15" fill="rgb(234,209,42)" fg:x="1472" fg:w="2"/><text x="44.7079%" y="703.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_sub (1 samples, 0.03%)</title><rect x="44.8203%" y="677" width="0.0302%" height="15" fill="rgb(227,7,12)" fg:x="1484" fg:w="1"/><text x="45.0703%" y="687.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::cast (2 samples, 0.06%)</title><rect x="44.8505%" y="677" width="0.0604%" height="15" fill="rgb(245,203,43)" fg:x="1485" fg:w="2"/><text x="45.1005%" y="687.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (104 samples, 3.14%)</title><rect x="41.8907%" y="709" width="3.1410%" height="15" fill="rgb(238,205,33)" fg:x="1387" fg:w="104"/><text x="42.1407%" y="719.50">&lt;co..</text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (17 samples, 0.51%)</title><rect x="44.5183%" y="693" width="0.5134%" height="15" fill="rgb(231,56,7)" fg:x="1474" fg:w="17"/><text x="44.7683%" y="703.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (4 samples, 0.12%)</title><rect x="44.9109%" y="677" width="0.1208%" height="15" fill="rgb(244,186,29)" fg:x="1487" fg:w="4"/><text x="45.1609%" y="687.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.03%)</title><rect x="45.0015%" y="661" width="0.0302%" height="15" fill="rgb(234,111,31)" fg:x="1490" fg:w="1"/><text x="45.2515%" y="671.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4 as curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4::square_and_negate_D::__Impl_square_and_negate_D__&gt;::_impl_square_and_negate_D (1 samples, 0.03%)</title><rect x="45.0317%" y="709" width="0.0302%" height="15" fill="rgb(241,149,10)" fg:x="1491" fg:w="1"/><text x="45.2817%" y="719.50"></text></g><g><title>curve25519_dalek::backend::vector::packed_simd::u32x8::shl (1 samples, 0.03%)</title><rect x="45.0317%" y="693" width="0.0302%" height="15" fill="rgb(249,206,44)" fg:x="1491" fg:w="1"/><text x="45.2817%" y="703.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::packed_simd::u32x8 as curve25519_dalek::backend::vector::packed_simd::u32x8::shl::__Impl_shl__&gt;::_impl_shl (1 samples, 0.03%)</title><rect x="45.0317%" y="677" width="0.0302%" height="15" fill="rgb(251,153,30)" fg:x="1491" fg:w="1"/><text x="45.2817%" y="687.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi32 (1 samples, 0.03%)</title><rect x="45.0317%" y="661" width="0.0302%" height="15" fill="rgb(239,152,38)" fg:x="1491" fg:w="1"/><text x="45.2817%" y="671.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi32 (1 samples, 0.03%)</title><rect x="45.0317%" y="645" width="0.0302%" height="15" fill="rgb(249,139,47)" fg:x="1491" fg:w="1"/><text x="45.2817%" y="655.50"></text></g><g><title>core::core_arch::simd::i32x8::new (1 samples, 0.03%)</title><rect x="45.0317%" y="629" width="0.0302%" height="15" fill="rgb(244,64,35)" fg:x="1491" fg:w="1"/><text x="45.2817%" y="639.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.03%)</title><rect x="45.0619%" y="709" width="0.0302%" height="15" fill="rgb(216,46,15)" fg:x="1492" fg:w="1"/><text x="45.3119%" y="719.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (50 samples, 1.51%)</title><rect x="45.0921%" y="709" width="1.5101%" height="15" fill="rgb(250,74,19)" fg:x="1493" fg:w="50"/><text x="45.3421%" y="719.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (3 samples, 0.09%)</title><rect x="46.6022%" y="709" width="0.0906%" height="15" fill="rgb(249,42,33)" fg:x="1543" fg:w="3"/><text x="46.8522%" y="719.50"></text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (3 samples, 0.09%)</title><rect x="46.6022%" y="693" width="0.0906%" height="15" fill="rgb(242,149,17)" fg:x="1543" fg:w="3"/><text x="46.8522%" y="703.50"></text></g><g><title>&lt;poly1305::backend::avx2::State as universal_hash::UhfBackend&gt;::proc_par_blocks (1 samples, 0.03%)</title><rect x="46.6928%" y="709" width="0.0302%" height="15" fill="rgb(244,29,21)" fg:x="1546" fg:w="1"/><text x="46.9428%" y="719.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (2 samples, 0.06%)</title><rect x="46.7834%" y="437" width="0.0604%" height="15" fill="rgb(220,130,37)" fg:x="1549" fg:w="2"/><text x="47.0334%" y="447.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="46.8439%" y="421" width="0.0302%" height="15" fill="rgb(211,67,2)" fg:x="1551" fg:w="1"/><text x="47.0939%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (2 samples, 0.06%)</title><rect x="46.8439%" y="437" width="0.0604%" height="15" fill="rgb(235,68,52)" fg:x="1551" fg:w="2"/><text x="47.0939%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="46.8741%" y="421" width="0.0302%" height="15" fill="rgb(246,142,3)" fg:x="1552" fg:w="1"/><text x="47.1241%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (2 samples, 0.06%)</title><rect x="46.9043%" y="437" width="0.0604%" height="15" fill="rgb(241,25,7)" fg:x="1553" fg:w="2"/><text x="47.1543%" y="447.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (7 samples, 0.21%)</title><rect x="46.7834%" y="453" width="0.2114%" height="15" fill="rgb(242,119,39)" fg:x="1549" fg:w="7"/><text x="47.0334%" y="463.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="46.9647%" y="437" width="0.0302%" height="15" fill="rgb(241,98,45)" fg:x="1555" fg:w="1"/><text x="47.2147%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="46.9949%" y="437" width="0.0302%" height="15" fill="rgb(254,28,30)" fg:x="1556" fg:w="1"/><text x="47.2449%" y="447.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (2 samples, 0.06%)</title><rect x="47.0251%" y="421" width="0.0604%" height="15" fill="rgb(241,142,54)" fg:x="1557" fg:w="2"/><text x="47.2751%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.06%)</title><rect x="47.0855%" y="421" width="0.0604%" height="15" fill="rgb(222,85,15)" fg:x="1559" fg:w="2"/><text x="47.3355%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (5 samples, 0.15%)</title><rect x="47.0251%" y="437" width="0.1510%" height="15" fill="rgb(210,85,47)" fg:x="1557" fg:w="5"/><text x="47.2751%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="47.1459%" y="421" width="0.0302%" height="15" fill="rgb(224,206,25)" fg:x="1561" fg:w="1"/><text x="47.3959%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="47.1761%" y="437" width="0.0302%" height="15" fill="rgb(243,201,19)" fg:x="1562" fg:w="1"/><text x="47.4261%" y="447.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_par_ks_blocks (17 samples, 0.51%)</title><rect x="46.7230%" y="501" width="0.5134%" height="15" fill="rgb(236,59,4)" fg:x="1547" fg:w="17"/><text x="46.9730%" y="511.50"></text></g><g><title>chacha20::backends::avx2::rounds (15 samples, 0.45%)</title><rect x="46.7834%" y="485" width="0.4530%" height="15" fill="rgb(254,179,45)" fg:x="1549" fg:w="15"/><text x="47.0334%" y="495.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (15 samples, 0.45%)</title><rect x="46.7834%" y="469" width="0.4530%" height="15" fill="rgb(226,14,10)" fg:x="1549" fg:w="15"/><text x="47.0334%" y="479.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (8 samples, 0.24%)</title><rect x="46.9949%" y="453" width="0.2416%" height="15" fill="rgb(244,27,41)" fg:x="1556" fg:w="8"/><text x="47.2449%" y="463.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="47.2063%" y="437" width="0.0302%" height="15" fill="rgb(235,35,32)" fg:x="1563" fg:w="1"/><text x="47.4563%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="47.2365%" y="421" width="0.0302%" height="15" fill="rgb(218,68,31)" fg:x="1564" fg:w="1"/><text x="47.4865%" y="431.50"></text></g><g><title>cipher::stream_core::StreamBackend::gen_tail_blocks (2 samples, 0.06%)</title><rect x="47.2365%" y="501" width="0.0604%" height="15" fill="rgb(207,120,37)" fg:x="1564" fg:w="2"/><text x="47.4865%" y="511.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (2 samples, 0.06%)</title><rect x="47.2365%" y="485" width="0.0604%" height="15" fill="rgb(227,98,0)" fg:x="1564" fg:w="2"/><text x="47.4865%" y="495.50"></text></g><g><title>chacha20::backends::avx2::rounds (2 samples, 0.06%)</title><rect x="47.2365%" y="469" width="0.0604%" height="15" fill="rgb(207,7,3)" fg:x="1564" fg:w="2"/><text x="47.4865%" y="479.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (2 samples, 0.06%)</title><rect x="47.2365%" y="453" width="0.0604%" height="15" fill="rgb(206,98,19)" fg:x="1564" fg:w="2"/><text x="47.4865%" y="463.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (2 samples, 0.06%)</title><rect x="47.2365%" y="437" width="0.0604%" height="15" fill="rgb(217,5,26)" fg:x="1564" fg:w="2"/><text x="47.4865%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="47.2667%" y="421" width="0.0302%" height="15" fill="rgb(235,190,38)" fg:x="1565" fg:w="1"/><text x="47.5167%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (3 samples, 0.09%)</title><rect x="47.3271%" y="277" width="0.0906%" height="15" fill="rgb(247,86,24)" fg:x="1567" fg:w="3"/><text x="47.5771%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.06%)</title><rect x="47.3573%" y="261" width="0.0604%" height="15" fill="rgb(205,101,16)" fg:x="1568" fg:w="2"/><text x="47.6073%" y="271.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (2 samples, 0.06%)</title><rect x="47.3573%" y="245" width="0.0604%" height="15" fill="rgb(246,168,33)" fg:x="1568" fg:w="2"/><text x="47.6073%" y="255.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (5 samples, 0.15%)</title><rect x="47.2969%" y="501" width="0.1510%" height="15" fill="rgb(231,114,1)" fg:x="1566" fg:w="5"/><text x="47.5469%" y="511.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (5 samples, 0.15%)</title><rect x="47.2969%" y="485" width="0.1510%" height="15" fill="rgb(207,184,53)" fg:x="1566" fg:w="5"/><text x="47.5469%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5 samples, 0.15%)</title><rect x="47.2969%" y="469" width="0.1510%" height="15" fill="rgb(224,95,51)" fg:x="1566" fg:w="5"/><text x="47.5469%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.15%)</title><rect x="47.2969%" y="453" width="0.1510%" height="15" fill="rgb(212,188,45)" fg:x="1566" fg:w="5"/><text x="47.5469%" y="463.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.15%)</title><rect x="47.2969%" y="437" width="0.1510%" height="15" fill="rgb(223,154,38)" fg:x="1566" fg:w="5"/><text x="47.5469%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (5 samples, 0.15%)</title><rect x="47.2969%" y="421" width="0.1510%" height="15" fill="rgb(251,22,52)" fg:x="1566" fg:w="5"/><text x="47.5469%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (5 samples, 0.15%)</title><rect x="47.2969%" y="405" width="0.1510%" height="15" fill="rgb(229,209,22)" fg:x="1566" fg:w="5"/><text x="47.5469%" y="415.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (5 samples, 0.15%)</title><rect x="47.2969%" y="389" width="0.1510%" height="15" fill="rgb(234,138,34)" fg:x="1566" fg:w="5"/><text x="47.5469%" y="399.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (5 samples, 0.15%)</title><rect x="47.2969%" y="373" width="0.1510%" height="15" fill="rgb(212,95,11)" fg:x="1566" fg:w="5"/><text x="47.5469%" y="383.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (5 samples, 0.15%)</title><rect x="47.2969%" y="357" width="0.1510%" height="15" fill="rgb(240,179,47)" fg:x="1566" fg:w="5"/><text x="47.5469%" y="367.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (5 samples, 0.15%)</title><rect x="47.2969%" y="341" width="0.1510%" height="15" fill="rgb(240,163,11)" fg:x="1566" fg:w="5"/><text x="47.5469%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5 samples, 0.15%)</title><rect x="47.2969%" y="325" width="0.1510%" height="15" fill="rgb(236,37,12)" fg:x="1566" fg:w="5"/><text x="47.5469%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.15%)</title><rect x="47.2969%" y="309" width="0.1510%" height="15" fill="rgb(232,164,16)" fg:x="1566" fg:w="5"/><text x="47.5469%" y="319.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.15%)</title><rect x="47.2969%" y="293" width="0.1510%" height="15" fill="rgb(244,205,15)" fg:x="1566" fg:w="5"/><text x="47.5469%" y="303.50"></text></g><g><title>core::slice::raw::from_raw_parts (1 samples, 0.03%)</title><rect x="47.4177%" y="277" width="0.0302%" height="15" fill="rgb(223,117,47)" fg:x="1570" fg:w="1"/><text x="47.6677%" y="287.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="47.4781%" y="485" width="0.0302%" height="15" fill="rgb(244,107,35)" fg:x="1572" fg:w="1"/><text x="47.7281%" y="495.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.03%)</title><rect x="47.5385%" y="229" width="0.0302%" height="15" fill="rgb(205,140,8)" fg:x="1574" fg:w="1"/><text x="47.7885%" y="239.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.09%)</title><rect x="47.5083%" y="277" width="0.0906%" height="15" fill="rgb(228,84,46)" fg:x="1573" fg:w="3"/><text x="47.7583%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (3 samples, 0.09%)</title><rect x="47.5083%" y="261" width="0.0906%" height="15" fill="rgb(254,188,9)" fg:x="1573" fg:w="3"/><text x="47.7583%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.06%)</title><rect x="47.5385%" y="245" width="0.0604%" height="15" fill="rgb(206,112,54)" fg:x="1574" fg:w="2"/><text x="47.7885%" y="255.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (1 samples, 0.03%)</title><rect x="47.5687%" y="229" width="0.0302%" height="15" fill="rgb(216,84,49)" fg:x="1575" fg:w="1"/><text x="47.8187%" y="239.50"></text></g><g><title>chacha20::backends::avx2::inner (30 samples, 0.91%)</title><rect x="46.7230%" y="533" width="0.9061%" height="15" fill="rgb(214,194,35)" fg:x="1547" fg:w="30"/><text x="46.9730%" y="543.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (30 samples, 0.91%)</title><rect x="46.7230%" y="517" width="0.9061%" height="15" fill="rgb(249,28,3)" fg:x="1547" fg:w="30"/><text x="46.9730%" y="527.50"></text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;generic_array::GenericArray&lt;u8,N&gt;,M&gt;&gt;::xor_in2out (6 samples, 0.18%)</title><rect x="47.4479%" y="501" width="0.1812%" height="15" fill="rgb(222,56,52)" fg:x="1571" fg:w="6"/><text x="47.6979%" y="511.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (4 samples, 0.12%)</title><rect x="47.5083%" y="485" width="0.1208%" height="15" fill="rgb(245,217,50)" fg:x="1573" fg:w="4"/><text x="47.7583%" y="495.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (4 samples, 0.12%)</title><rect x="47.5083%" y="469" width="0.1208%" height="15" fill="rgb(213,201,24)" fg:x="1573" fg:w="4"/><text x="47.7583%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.12%)</title><rect x="47.5083%" y="453" width="0.1208%" height="15" fill="rgb(248,116,28)" fg:x="1573" fg:w="4"/><text x="47.7583%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.12%)</title><rect x="47.5083%" y="437" width="0.1208%" height="15" fill="rgb(219,72,43)" fg:x="1573" fg:w="4"/><text x="47.7583%" y="447.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.12%)</title><rect x="47.5083%" y="421" width="0.1208%" height="15" fill="rgb(209,138,14)" fg:x="1573" fg:w="4"/><text x="47.7583%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (4 samples, 0.12%)</title><rect x="47.5083%" y="405" width="0.1208%" height="15" fill="rgb(222,18,33)" fg:x="1573" fg:w="4"/><text x="47.7583%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (4 samples, 0.12%)</title><rect x="47.5083%" y="389" width="0.1208%" height="15" fill="rgb(213,199,7)" fg:x="1573" fg:w="4"/><text x="47.7583%" y="399.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (4 samples, 0.12%)</title><rect x="47.5083%" y="373" width="0.1208%" height="15" fill="rgb(250,110,10)" fg:x="1573" fg:w="4"/><text x="47.7583%" y="383.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (4 samples, 0.12%)</title><rect x="47.5083%" y="357" width="0.1208%" height="15" fill="rgb(248,123,6)" fg:x="1573" fg:w="4"/><text x="47.7583%" y="367.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (4 samples, 0.12%)</title><rect x="47.5083%" y="341" width="0.1208%" height="15" fill="rgb(206,91,31)" fg:x="1573" fg:w="4"/><text x="47.7583%" y="351.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (4 samples, 0.12%)</title><rect x="47.5083%" y="325" width="0.1208%" height="15" fill="rgb(211,154,13)" fg:x="1573" fg:w="4"/><text x="47.7583%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.12%)</title><rect x="47.5083%" y="309" width="0.1208%" height="15" fill="rgb(225,148,7)" fg:x="1573" fg:w="4"/><text x="47.7583%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.12%)</title><rect x="47.5083%" y="293" width="0.1208%" height="15" fill="rgb(220,160,43)" fg:x="1573" fg:w="4"/><text x="47.7583%" y="303.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::new (1 samples, 0.03%)</title><rect x="47.5989%" y="277" width="0.0302%" height="15" fill="rgb(213,52,39)" fg:x="1576" fg:w="1"/><text x="47.8489%" y="287.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (32 samples, 0.97%)</title><rect x="46.7230%" y="629" width="0.9665%" height="15" fill="rgb(243,137,7)" fg:x="1547" fg:w="32"/><text x="46.9730%" y="639.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (32 samples, 0.97%)</title><rect x="46.7230%" y="613" width="0.9665%" height="15" fill="rgb(230,79,13)" fg:x="1547" fg:w="32"/><text x="46.9730%" y="623.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (32 samples, 0.97%)</title><rect x="46.7230%" y="597" width="0.9665%" height="15" fill="rgb(247,105,23)" fg:x="1547" fg:w="32"/><text x="46.9730%" y="607.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (32 samples, 0.97%)</title><rect x="46.7230%" y="581" width="0.9665%" height="15" fill="rgb(223,179,41)" fg:x="1547" fg:w="32"/><text x="46.9730%" y="591.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (32 samples, 0.97%)</title><rect x="46.7230%" y="565" width="0.9665%" height="15" fill="rgb(218,9,34)" fg:x="1547" fg:w="32"/><text x="46.9730%" y="575.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (32 samples, 0.97%)</title><rect x="46.7230%" y="549" width="0.9665%" height="15" fill="rgb(222,106,8)" fg:x="1547" fg:w="32"/><text x="46.9730%" y="559.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.06%)</title><rect x="47.6291%" y="533" width="0.0604%" height="15" fill="rgb(211,220,0)" fg:x="1577" fg:w="2"/><text x="47.8791%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (3 samples, 0.09%)</title><rect x="47.6895%" y="469" width="0.0906%" height="15" fill="rgb(229,52,16)" fg:x="1579" fg:w="3"/><text x="47.9395%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (3 samples, 0.09%)</title><rect x="47.6895%" y="453" width="0.0906%" height="15" fill="rgb(212,155,18)" fg:x="1579" fg:w="3"/><text x="47.9395%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.03%)</title><rect x="47.7801%" y="469" width="0.0302%" height="15" fill="rgb(242,21,14)" fg:x="1582" fg:w="1"/><text x="48.0301%" y="479.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="47.7801%" y="453" width="0.0302%" height="15" fill="rgb(222,19,48)" fg:x="1582" fg:w="1"/><text x="48.0301%" y="463.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="47.7801%" y="437" width="0.0302%" height="15" fill="rgb(232,45,27)" fg:x="1582" fg:w="1"/><text x="48.0301%" y="447.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="47.7801%" y="421" width="0.0302%" height="15" fill="rgb(249,103,42)" fg:x="1582" fg:w="1"/><text x="48.0301%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.03%)</title><rect x="47.8103%" y="469" width="0.0302%" height="15" fill="rgb(246,81,33)" fg:x="1583" fg:w="1"/><text x="48.0603%" y="479.50"></text></g><g><title>&lt;tftp::client::encryption_socket::EncryptionBoundSocket&lt;S,Rng&gt; as tftp::socket::Socket&gt;::recv_from (38 samples, 1.15%)</title><rect x="46.7230%" y="709" width="1.1477%" height="15" fill="rgb(252,33,42)" fg:x="1547" fg:w="38"/><text x="46.9730%" y="719.50"></text></g><g><title>tftp::encrypted_packet::EncryptedPacket::decrypt (38 samples, 1.15%)</title><rect x="46.7230%" y="693" width="1.1477%" height="15" fill="rgb(209,212,41)" fg:x="1547" fg:w="38"/><text x="46.9730%" y="703.50"></text></g><g><title>tftp::encryption::Encryptor&lt;R&gt;::decrypt (38 samples, 1.15%)</title><rect x="46.7230%" y="677" width="1.1477%" height="15" fill="rgb(207,154,6)" fg:x="1547" fg:w="38"/><text x="46.9730%" y="687.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (38 samples, 1.15%)</title><rect x="46.7230%" y="661" width="1.1477%" height="15" fill="rgb(223,64,47)" fg:x="1547" fg:w="38"/><text x="46.9730%" y="671.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::decrypt_in_place_detached (38 samples, 1.15%)</title><rect x="46.7230%" y="645" width="1.1477%" height="15" fill="rgb(211,161,38)" fg:x="1547" fg:w="38"/><text x="46.9730%" y="655.50"></text></g><g><title>universal_hash::UniversalHash::update_padded (6 samples, 0.18%)</title><rect x="47.6895%" y="629" width="0.1812%" height="15" fill="rgb(219,138,40)" fg:x="1579" fg:w="6"/><text x="47.9395%" y="639.50"></text></g><g><title>universal_hash::UniversalHash::update (6 samples, 0.18%)</title><rect x="47.6895%" y="613" width="0.1812%" height="15" fill="rgb(241,228,46)" fg:x="1579" fg:w="6"/><text x="47.9395%" y="623.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (6 samples, 0.18%)</title><rect x="47.6895%" y="597" width="0.1812%" height="15" fill="rgb(223,209,38)" fg:x="1579" fg:w="6"/><text x="47.9395%" y="607.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (6 samples, 0.18%)</title><rect x="47.6895%" y="581" width="0.1812%" height="15" fill="rgb(236,164,45)" fg:x="1579" fg:w="6"/><text x="47.9395%" y="591.50"></text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (6 samples, 0.18%)</title><rect x="47.6895%" y="565" width="0.1812%" height="15" fill="rgb(231,15,5)" fg:x="1579" fg:w="6"/><text x="47.9395%" y="575.50"></text></g><g><title>&lt;poly1305::backend::avx2::State as universal_hash::UhfBackend&gt;::proc_par_blocks (6 samples, 0.18%)</title><rect x="47.6895%" y="549" width="0.1812%" height="15" fill="rgb(252,35,15)" fg:x="1579" fg:w="6"/><text x="47.9395%" y="559.50"></text></g><g><title>poly1305::backend::avx2::State::compute_par_blocks (6 samples, 0.18%)</title><rect x="47.6895%" y="533" width="0.1812%" height="15" fill="rgb(248,181,18)" fg:x="1579" fg:w="6"/><text x="47.9395%" y="543.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (6 samples, 0.18%)</title><rect x="47.6895%" y="517" width="0.1812%" height="15" fill="rgb(233,39,42)" fg:x="1579" fg:w="6"/><text x="47.9395%" y="527.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (6 samples, 0.18%)</title><rect x="47.6895%" y="501" width="0.1812%" height="15" fill="rgb(238,110,33)" fg:x="1579" fg:w="6"/><text x="47.9395%" y="511.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (6 samples, 0.18%)</title><rect x="47.6895%" y="485" width="0.1812%" height="15" fill="rgb(233,195,10)" fg:x="1579" fg:w="6"/><text x="47.9395%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (1 samples, 0.03%)</title><rect x="47.8405%" y="469" width="0.0302%" height="15" fill="rgb(254,105,3)" fg:x="1584" fg:w="1"/><text x="48.0905%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.03%)</title><rect x="47.8405%" y="453" width="0.0302%" height="15" fill="rgb(221,225,9)" fg:x="1584" fg:w="1"/><text x="48.0905%" y="463.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.03%)</title><rect x="47.8405%" y="437" width="0.0302%" height="15" fill="rgb(224,227,45)" fg:x="1584" fg:w="1"/><text x="48.0905%" y="447.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (1 samples, 0.03%)</title><rect x="47.8707%" y="533" width="0.0302%" height="15" fill="rgb(229,198,43)" fg:x="1585" fg:w="1"/><text x="48.1207%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="48.0217%" y="421" width="0.0302%" height="15" fill="rgb(206,209,35)" fg:x="1590" fg:w="1"/><text x="48.2717%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="48.0519%" y="421" width="0.0302%" height="15" fill="rgb(245,195,53)" fg:x="1591" fg:w="1"/><text x="48.3019%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="48.0822%" y="421" width="0.0302%" height="15" fill="rgb(240,92,26)" fg:x="1592" fg:w="1"/><text x="48.3322%" y="431.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.03%)</title><rect x="48.0822%" y="405" width="0.0302%" height="15" fill="rgb(207,40,23)" fg:x="1592" fg:w="1"/><text x="48.3322%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.06%)</title><rect x="48.1124%" y="421" width="0.0604%" height="15" fill="rgb(223,111,35)" fg:x="1593" fg:w="2"/><text x="48.3624%" y="431.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (7 samples, 0.21%)</title><rect x="48.0217%" y="453" width="0.2114%" height="15" fill="rgb(229,147,28)" fg:x="1590" fg:w="7"/><text x="48.2717%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (7 samples, 0.21%)</title><rect x="48.0217%" y="437" width="0.2114%" height="15" fill="rgb(211,29,28)" fg:x="1590" fg:w="7"/><text x="48.2717%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (2 samples, 0.06%)</title><rect x="48.1728%" y="421" width="0.0604%" height="15" fill="rgb(228,72,33)" fg:x="1595" fg:w="2"/><text x="48.4228%" y="431.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="48.2332%" y="421" width="0.0302%" height="15" fill="rgb(205,214,31)" fg:x="1597" fg:w="1"/><text x="48.4832%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.03%)</title><rect x="48.2634%" y="421" width="0.0302%" height="15" fill="rgb(224,111,15)" fg:x="1598" fg:w="1"/><text x="48.5134%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.03%)</title><rect x="48.2936%" y="421" width="0.0302%" height="15" fill="rgb(253,21,26)" fg:x="1599" fg:w="1"/><text x="48.5436%" y="431.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.03%)</title><rect x="48.2936%" y="405" width="0.0302%" height="15" fill="rgb(245,139,43)" fg:x="1599" fg:w="1"/><text x="48.5436%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="48.3238%" y="421" width="0.0302%" height="15" fill="rgb(252,170,7)" fg:x="1600" fg:w="1"/><text x="48.5738%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="48.3540%" y="421" width="0.0302%" height="15" fill="rgb(231,118,14)" fg:x="1601" fg:w="1"/><text x="48.6040%" y="431.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_par_ks_blocks (17 samples, 0.51%)</title><rect x="47.9009%" y="501" width="0.5134%" height="15" fill="rgb(238,83,0)" fg:x="1586" fg:w="17"/><text x="48.1509%" y="511.50"></text></g><g><title>chacha20::backends::avx2::rounds (13 samples, 0.39%)</title><rect x="48.0217%" y="485" width="0.3926%" height="15" fill="rgb(221,39,39)" fg:x="1590" fg:w="13"/><text x="48.2717%" y="495.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (13 samples, 0.39%)</title><rect x="48.0217%" y="469" width="0.3926%" height="15" fill="rgb(222,119,46)" fg:x="1590" fg:w="13"/><text x="48.2717%" y="479.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (6 samples, 0.18%)</title><rect x="48.2332%" y="453" width="0.1812%" height="15" fill="rgb(222,165,49)" fg:x="1597" fg:w="6"/><text x="48.4832%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (6 samples, 0.18%)</title><rect x="48.2332%" y="437" width="0.1812%" height="15" fill="rgb(219,113,52)" fg:x="1597" fg:w="6"/><text x="48.4832%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="48.3842%" y="421" width="0.0302%" height="15" fill="rgb(214,7,15)" fg:x="1602" fg:w="1"/><text x="48.6342%" y="431.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="48.4144%" y="405" width="0.0302%" height="15" fill="rgb(235,32,4)" fg:x="1603" fg:w="1"/><text x="48.6644%" y="415.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (2 samples, 0.06%)</title><rect x="48.4144%" y="437" width="0.0604%" height="15" fill="rgb(238,90,54)" fg:x="1603" fg:w="2"/><text x="48.6644%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (2 samples, 0.06%)</title><rect x="48.4144%" y="421" width="0.0604%" height="15" fill="rgb(213,208,19)" fg:x="1603" fg:w="2"/><text x="48.6644%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="48.4446%" y="405" width="0.0302%" height="15" fill="rgb(233,156,4)" fg:x="1604" fg:w="1"/><text x="48.6946%" y="415.50"></text></g><g><title>cipher::stream_core::StreamBackend::gen_tail_blocks (3 samples, 0.09%)</title><rect x="48.4144%" y="501" width="0.0906%" height="15" fill="rgb(207,194,5)" fg:x="1603" fg:w="3"/><text x="48.6644%" y="511.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (3 samples, 0.09%)</title><rect x="48.4144%" y="485" width="0.0906%" height="15" fill="rgb(206,111,30)" fg:x="1603" fg:w="3"/><text x="48.6644%" y="495.50"></text></g><g><title>chacha20::backends::avx2::rounds (3 samples, 0.09%)</title><rect x="48.4144%" y="469" width="0.0906%" height="15" fill="rgb(243,70,54)" fg:x="1603" fg:w="3"/><text x="48.6644%" y="479.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (3 samples, 0.09%)</title><rect x="48.4144%" y="453" width="0.0906%" height="15" fill="rgb(242,28,8)" fg:x="1603" fg:w="3"/><text x="48.6644%" y="463.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (1 samples, 0.03%)</title><rect x="48.4748%" y="437" width="0.0302%" height="15" fill="rgb(219,106,18)" fg:x="1605" fg:w="1"/><text x="48.7248%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.03%)</title><rect x="48.4748%" y="421" width="0.0302%" height="15" fill="rgb(244,222,10)" fg:x="1605" fg:w="1"/><text x="48.7248%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="48.4748%" y="405" width="0.0302%" height="15" fill="rgb(236,179,52)" fg:x="1605" fg:w="1"/><text x="48.7248%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.03%)</title><rect x="48.8976%" y="245" width="0.0302%" height="15" fill="rgb(213,23,39)" fg:x="1619" fg:w="1"/><text x="49.1476%" y="255.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.06%)</title><rect x="48.9278%" y="245" width="0.0604%" height="15" fill="rgb(238,48,10)" fg:x="1620" fg:w="2"/><text x="49.1778%" y="255.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.03%)</title><rect x="49.2902%" y="229" width="0.0302%" height="15" fill="rgb(251,196,23)" fg:x="1632" fg:w="1"/><text x="49.5402%" y="239.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (1 samples, 0.03%)</title><rect x="49.2902%" y="213" width="0.0302%" height="15" fill="rgb(250,152,24)" fg:x="1632" fg:w="1"/><text x="49.5402%" y="223.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (15 samples, 0.45%)</title><rect x="48.9882%" y="245" width="0.4530%" height="15" fill="rgb(209,150,17)" fg:x="1622" fg:w="15"/><text x="49.2382%" y="255.50"></text></g><g><title>core::slice::raw::from_raw_parts (4 samples, 0.12%)</title><rect x="49.3204%" y="229" width="0.1208%" height="15" fill="rgb(234,202,34)" fg:x="1633" fg:w="4"/><text x="49.5704%" y="239.50"></text></g><g><title>core::ptr::slice_from_raw_parts (2 samples, 0.06%)</title><rect x="49.3809%" y="213" width="0.0604%" height="15" fill="rgb(253,148,53)" fg:x="1635" fg:w="2"/><text x="49.6309%" y="223.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (2 samples, 0.06%)</title><rect x="49.3809%" y="197" width="0.0604%" height="15" fill="rgb(218,129,16)" fg:x="1635" fg:w="2"/><text x="49.6309%" y="207.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (32 samples, 0.97%)</title><rect x="48.5050%" y="501" width="0.9665%" height="15" fill="rgb(216,85,19)" fg:x="1606" fg:w="32"/><text x="48.7550%" y="511.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (31 samples, 0.94%)</title><rect x="48.5352%" y="485" width="0.9363%" height="15" fill="rgb(235,228,7)" fg:x="1607" fg:w="31"/><text x="48.7852%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (31 samples, 0.94%)</title><rect x="48.5352%" y="469" width="0.9363%" height="15" fill="rgb(245,175,0)" fg:x="1607" fg:w="31"/><text x="48.7852%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (31 samples, 0.94%)</title><rect x="48.5352%" y="453" width="0.9363%" height="15" fill="rgb(208,168,36)" fg:x="1607" fg:w="31"/><text x="48.7852%" y="463.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (31 samples, 0.94%)</title><rect x="48.5352%" y="437" width="0.9363%" height="15" fill="rgb(246,171,24)" fg:x="1607" fg:w="31"/><text x="48.7852%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (31 samples, 0.94%)</title><rect x="48.5352%" y="421" width="0.9363%" height="15" fill="rgb(215,142,24)" fg:x="1607" fg:w="31"/><text x="48.7852%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (31 samples, 0.94%)</title><rect x="48.5352%" y="405" width="0.9363%" height="15" fill="rgb(250,187,7)" fg:x="1607" fg:w="31"/><text x="48.7852%" y="415.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (31 samples, 0.94%)</title><rect x="48.5352%" y="389" width="0.9363%" height="15" fill="rgb(228,66,33)" fg:x="1607" fg:w="31"/><text x="48.7852%" y="399.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (31 samples, 0.94%)</title><rect x="48.5352%" y="373" width="0.9363%" height="15" fill="rgb(234,215,21)" fg:x="1607" fg:w="31"/><text x="48.7852%" y="383.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (31 samples, 0.94%)</title><rect x="48.5352%" y="357" width="0.9363%" height="15" fill="rgb(222,191,20)" fg:x="1607" fg:w="31"/><text x="48.7852%" y="367.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (31 samples, 0.94%)</title><rect x="48.5352%" y="341" width="0.9363%" height="15" fill="rgb(245,79,54)" fg:x="1607" fg:w="31"/><text x="48.7852%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (31 samples, 0.94%)</title><rect x="48.5352%" y="325" width="0.9363%" height="15" fill="rgb(240,10,37)" fg:x="1607" fg:w="31"/><text x="48.7852%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (31 samples, 0.94%)</title><rect x="48.5352%" y="309" width="0.9363%" height="15" fill="rgb(214,192,32)" fg:x="1607" fg:w="31"/><text x="48.7852%" y="319.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (31 samples, 0.94%)</title><rect x="48.5352%" y="293" width="0.9363%" height="15" fill="rgb(209,36,54)" fg:x="1607" fg:w="31"/><text x="48.7852%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (29 samples, 0.88%)</title><rect x="48.5956%" y="277" width="0.8759%" height="15" fill="rgb(220,10,11)" fg:x="1609" fg:w="29"/><text x="48.8456%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (20 samples, 0.60%)</title><rect x="48.8674%" y="261" width="0.6040%" height="15" fill="rgb(221,106,17)" fg:x="1618" fg:w="20"/><text x="49.1174%" y="271.50"></text></g><g><title>core::slice::raw::from_raw_parts (1 samples, 0.03%)</title><rect x="49.4413%" y="245" width="0.0302%" height="15" fill="rgb(251,142,44)" fg:x="1637" fg:w="1"/><text x="49.6913%" y="255.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.03%)</title><rect x="49.4413%" y="229" width="0.0302%" height="15" fill="rgb(238,13,15)" fg:x="1637" fg:w="1"/><text x="49.6913%" y="239.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (1 samples, 0.03%)</title><rect x="49.4413%" y="213" width="0.0302%" height="15" fill="rgb(208,107,27)" fg:x="1637" fg:w="1"/><text x="49.6913%" y="223.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.15%)</title><rect x="49.6829%" y="485" width="0.1510%" height="15" fill="rgb(205,136,37)" fg:x="1645" fg:w="5"/><text x="49.9329%" y="495.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.03%)</title><rect x="49.8339%" y="485" width="0.0302%" height="15" fill="rgb(250,205,27)" fg:x="1650" fg:w="1"/><text x="50.0839%" y="495.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.06%)</title><rect x="50.0151%" y="229" width="0.0604%" height="15" fill="rgb(210,80,43)" fg:x="1656" fg:w="2"/><text x="50.2651%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.03%)</title><rect x="50.4681%" y="213" width="0.0302%" height="15" fill="rgb(247,160,36)" fg:x="1671" fg:w="1"/><text x="50.7181%" y="223.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.03%)</title><rect x="50.4983%" y="213" width="0.0302%" height="15" fill="rgb(234,13,49)" fg:x="1672" fg:w="1"/><text x="50.7483%" y="223.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (1 samples, 0.03%)</title><rect x="50.5285%" y="213" width="0.0302%" height="15" fill="rgb(234,122,0)" fg:x="1673" fg:w="1"/><text x="50.7785%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (19 samples, 0.57%)</title><rect x="50.0151%" y="245" width="0.5738%" height="15" fill="rgb(207,146,38)" fg:x="1656" fg:w="19"/><text x="50.2651%" y="255.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (17 samples, 0.51%)</title><rect x="50.0755%" y="229" width="0.5134%" height="15" fill="rgb(207,177,25)" fg:x="1658" fg:w="17"/><text x="50.3255%" y="239.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="50.5587%" y="213" width="0.0302%" height="15" fill="rgb(211,178,42)" fg:x="1674" fg:w="1"/><text x="50.8087%" y="223.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="50.5587%" y="197" width="0.0302%" height="15" fill="rgb(230,69,54)" fg:x="1674" fg:w="1"/><text x="50.8087%" y="207.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="50.5587%" y="181" width="0.0302%" height="15" fill="rgb(214,135,41)" fg:x="1674" fg:w="1"/><text x="50.8087%" y="191.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.03%)</title><rect x="50.5587%" y="165" width="0.0302%" height="15" fill="rgb(237,67,25)" fg:x="1674" fg:w="1"/><text x="50.8087%" y="175.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.03%)</title><rect x="50.5587%" y="149" width="0.0302%" height="15" fill="rgb(222,189,50)" fg:x="1674" fg:w="1"/><text x="50.8087%" y="159.50"></text></g><g><title>tick_sched_timer (1 samples, 0.03%)</title><rect x="50.5587%" y="133" width="0.0302%" height="15" fill="rgb(245,148,34)" fg:x="1674" fg:w="1"/><text x="50.8087%" y="143.50"></text></g><g><title>tick_sched_handle (1 samples, 0.03%)</title><rect x="50.5587%" y="117" width="0.0302%" height="15" fill="rgb(222,29,6)" fg:x="1674" fg:w="1"/><text x="50.8087%" y="127.50"></text></g><g><title>update_process_times (1 samples, 0.03%)</title><rect x="50.5587%" y="101" width="0.0302%" height="15" fill="rgb(221,189,43)" fg:x="1674" fg:w="1"/><text x="50.8087%" y="111.50"></text></g><g><title>scheduler_tick (1 samples, 0.03%)</title><rect x="50.5587%" y="85" width="0.0302%" height="15" fill="rgb(207,36,27)" fg:x="1674" fg:w="1"/><text x="50.8087%" y="95.50"></text></g><g><title>task_tick_fair (1 samples, 0.03%)</title><rect x="50.5587%" y="69" width="0.0302%" height="15" fill="rgb(217,90,24)" fg:x="1674" fg:w="1"/><text x="50.8087%" y="79.50"></text></g><g><title>update_curr (1 samples, 0.03%)</title><rect x="50.5587%" y="53" width="0.0302%" height="15" fill="rgb(224,66,35)" fg:x="1674" fg:w="1"/><text x="50.8087%" y="63.50"></text></g><g><title>cpuacct_charge (1 samples, 0.03%)</title><rect x="50.5587%" y="37" width="0.0302%" height="15" fill="rgb(221,13,50)" fg:x="1674" fg:w="1"/><text x="50.8087%" y="47.50"></text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;generic_array::GenericArray&lt;u8,N&gt;,M&gt;&gt;::xor_in2out (38 samples, 1.15%)</title><rect x="49.4715%" y="501" width="1.1477%" height="15" fill="rgb(236,68,49)" fg:x="1638" fg:w="38"/><text x="49.7215%" y="511.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (25 samples, 0.76%)</title><rect x="49.8641%" y="485" width="0.7551%" height="15" fill="rgb(229,146,28)" fg:x="1651" fg:w="25"/><text x="50.1141%" y="495.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (25 samples, 0.76%)</title><rect x="49.8641%" y="469" width="0.7551%" height="15" fill="rgb(225,31,38)" fg:x="1651" fg:w="25"/><text x="50.1141%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (25 samples, 0.76%)</title><rect x="49.8641%" y="453" width="0.7551%" height="15" fill="rgb(250,208,3)" fg:x="1651" fg:w="25"/><text x="50.1141%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (25 samples, 0.76%)</title><rect x="49.8641%" y="437" width="0.7551%" height="15" fill="rgb(246,54,23)" fg:x="1651" fg:w="25"/><text x="50.1141%" y="447.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (25 samples, 0.76%)</title><rect x="49.8641%" y="421" width="0.7551%" height="15" fill="rgb(243,76,11)" fg:x="1651" fg:w="25"/><text x="50.1141%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (25 samples, 0.76%)</title><rect x="49.8641%" y="405" width="0.7551%" height="15" fill="rgb(245,21,50)" fg:x="1651" fg:w="25"/><text x="50.1141%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (25 samples, 0.76%)</title><rect x="49.8641%" y="389" width="0.7551%" height="15" fill="rgb(228,9,43)" fg:x="1651" fg:w="25"/><text x="50.1141%" y="399.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (25 samples, 0.76%)</title><rect x="49.8641%" y="373" width="0.7551%" height="15" fill="rgb(208,100,47)" fg:x="1651" fg:w="25"/><text x="50.1141%" y="383.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (25 samples, 0.76%)</title><rect x="49.8641%" y="357" width="0.7551%" height="15" fill="rgb(232,26,8)" fg:x="1651" fg:w="25"/><text x="50.1141%" y="367.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (25 samples, 0.76%)</title><rect x="49.8641%" y="341" width="0.7551%" height="15" fill="rgb(216,166,38)" fg:x="1651" fg:w="25"/><text x="50.1141%" y="351.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (25 samples, 0.76%)</title><rect x="49.8641%" y="325" width="0.7551%" height="15" fill="rgb(251,202,51)" fg:x="1651" fg:w="25"/><text x="50.1141%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (25 samples, 0.76%)</title><rect x="49.8641%" y="309" width="0.7551%" height="15" fill="rgb(254,216,34)" fg:x="1651" fg:w="25"/><text x="50.1141%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (25 samples, 0.76%)</title><rect x="49.8641%" y="293" width="0.7551%" height="15" fill="rgb(251,32,27)" fg:x="1651" fg:w="25"/><text x="50.1141%" y="303.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (25 samples, 0.76%)</title><rect x="49.8641%" y="277" width="0.7551%" height="15" fill="rgb(208,127,28)" fg:x="1651" fg:w="25"/><text x="50.1141%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (23 samples, 0.69%)</title><rect x="49.9245%" y="261" width="0.6947%" height="15" fill="rgb(224,137,22)" fg:x="1653" fg:w="23"/><text x="50.1745%" y="271.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (1 samples, 0.03%)</title><rect x="50.5889%" y="245" width="0.0302%" height="15" fill="rgb(254,70,32)" fg:x="1675" fg:w="1"/><text x="50.8389%" y="255.50"></text></g><g><title>chacha20::backends::avx2::inner (91 samples, 2.75%)</title><rect x="47.9009%" y="533" width="2.7484%" height="15" fill="rgb(229,75,37)" fg:x="1586" fg:w="91"/><text x="48.1509%" y="543.50">ch..</text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (91 samples, 2.75%)</title><rect x="47.9009%" y="517" width="2.7484%" height="15" fill="rgb(252,64,23)" fg:x="1586" fg:w="91"/><text x="48.1509%" y="527.50">&lt;c..</text></g><g><title>inout::inout_buf::InOutBuf&lt;T&gt;::into_chunks (1 samples, 0.03%)</title><rect x="50.6191%" y="501" width="0.0302%" height="15" fill="rgb(232,162,48)" fg:x="1676" fg:w="1"/><text x="50.8691%" y="511.50"></text></g><g><title>chacha20::backends::avx2::rounds (3 samples, 0.09%)</title><rect x="50.6494%" y="533" width="0.0906%" height="15" fill="rgb(246,160,12)" fg:x="1677" fg:w="3"/><text x="50.8994%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="50.7400%" y="533" width="0.0302%" height="15" fill="rgb(247,166,0)" fg:x="1680" fg:w="1"/><text x="50.9900%" y="543.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (103 samples, 3.11%)</title><rect x="47.8707%" y="629" width="3.1108%" height="15" fill="rgb(249,219,21)" fg:x="1585" fg:w="103"/><text x="48.1207%" y="639.50">cip..</text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (103 samples, 3.11%)</title><rect x="47.8707%" y="613" width="3.1108%" height="15" fill="rgb(205,209,3)" fg:x="1585" fg:w="103"/><text x="48.1207%" y="623.50">cip..</text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (103 samples, 3.11%)</title><rect x="47.8707%" y="597" width="3.1108%" height="15" fill="rgb(243,44,1)" fg:x="1585" fg:w="103"/><text x="48.1207%" y="607.50">&lt;ci..</text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (103 samples, 3.11%)</title><rect x="47.8707%" y="581" width="3.1108%" height="15" fill="rgb(206,159,16)" fg:x="1585" fg:w="103"/><text x="48.1207%" y="591.50">cip..</text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (103 samples, 3.11%)</title><rect x="47.8707%" y="565" width="3.1108%" height="15" fill="rgb(244,77,30)" fg:x="1585" fg:w="103"/><text x="48.1207%" y="575.50">&lt;ch..</text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (103 samples, 3.11%)</title><rect x="47.8707%" y="549" width="3.1108%" height="15" fill="rgb(218,69,12)" fg:x="1585" fg:w="103"/><text x="48.1207%" y="559.50">&lt;ch..</text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (7 samples, 0.21%)</title><rect x="50.7702%" y="533" width="0.2114%" height="15" fill="rgb(212,87,7)" fg:x="1681" fg:w="7"/><text x="51.0202%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (3 samples, 0.09%)</title><rect x="50.9816%" y="469" width="0.0906%" height="15" fill="rgb(245,114,25)" fg:x="1688" fg:w="3"/><text x="51.2316%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.03%)</title><rect x="51.0420%" y="453" width="0.0302%" height="15" fill="rgb(210,61,42)" fg:x="1690" fg:w="1"/><text x="51.2920%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (2 samples, 0.06%)</title><rect x="51.0722%" y="469" width="0.0604%" height="15" fill="rgb(211,52,33)" fg:x="1691" fg:w="2"/><text x="51.3222%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.03%)</title><rect x="51.1326%" y="469" width="0.0302%" height="15" fill="rgb(234,58,33)" fg:x="1693" fg:w="1"/><text x="51.3826%" y="479.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::encrypt_in_place_detached (110 samples, 3.32%)</title><rect x="47.8707%" y="645" width="3.3223%" height="15" fill="rgb(220,115,36)" fg:x="1585" fg:w="110"/><text x="48.1207%" y="655.50">cha..</text></g><g><title>universal_hash::UniversalHash::update_padded (7 samples, 0.21%)</title><rect x="50.9816%" y="629" width="0.2114%" height="15" fill="rgb(243,153,54)" fg:x="1688" fg:w="7"/><text x="51.2316%" y="639.50"></text></g><g><title>universal_hash::UniversalHash::update (7 samples, 0.21%)</title><rect x="50.9816%" y="613" width="0.2114%" height="15" fill="rgb(251,47,18)" fg:x="1688" fg:w="7"/><text x="51.2316%" y="623.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (7 samples, 0.21%)</title><rect x="50.9816%" y="597" width="0.2114%" height="15" fill="rgb(242,102,42)" fg:x="1688" fg:w="7"/><text x="51.2316%" y="607.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (7 samples, 0.21%)</title><rect x="50.9816%" y="581" width="0.2114%" height="15" fill="rgb(234,31,38)" fg:x="1688" fg:w="7"/><text x="51.2316%" y="591.50"></text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (7 samples, 0.21%)</title><rect x="50.9816%" y="565" width="0.2114%" height="15" fill="rgb(221,117,51)" fg:x="1688" fg:w="7"/><text x="51.2316%" y="575.50"></text></g><g><title>&lt;poly1305::backend::avx2::State as universal_hash::UhfBackend&gt;::proc_par_blocks (7 samples, 0.21%)</title><rect x="50.9816%" y="549" width="0.2114%" height="15" fill="rgb(212,20,18)" fg:x="1688" fg:w="7"/><text x="51.2316%" y="559.50"></text></g><g><title>poly1305::backend::avx2::State::compute_par_blocks (7 samples, 0.21%)</title><rect x="50.9816%" y="533" width="0.2114%" height="15" fill="rgb(245,133,36)" fg:x="1688" fg:w="7"/><text x="51.2316%" y="543.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (7 samples, 0.21%)</title><rect x="50.9816%" y="517" width="0.2114%" height="15" fill="rgb(212,6,19)" fg:x="1688" fg:w="7"/><text x="51.2316%" y="527.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (7 samples, 0.21%)</title><rect x="50.9816%" y="501" width="0.2114%" height="15" fill="rgb(218,1,36)" fg:x="1688" fg:w="7"/><text x="51.2316%" y="511.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (7 samples, 0.21%)</title><rect x="50.9816%" y="485" width="0.2114%" height="15" fill="rgb(246,84,54)" fg:x="1688" fg:w="7"/><text x="51.2316%" y="495.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (1 samples, 0.03%)</title><rect x="51.1628%" y="469" width="0.0302%" height="15" fill="rgb(242,110,6)" fg:x="1694" fg:w="1"/><text x="51.4128%" y="479.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (1 samples, 0.03%)</title><rect x="51.1628%" y="453" width="0.0302%" height="15" fill="rgb(214,47,5)" fg:x="1694" fg:w="1"/><text x="51.4128%" y="463.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (2 samples, 0.06%)</title><rect x="51.2232%" y="245" width="0.0604%" height="15" fill="rgb(218,159,25)" fg:x="1696" fg:w="2"/><text x="51.4732%" y="255.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (4 samples, 0.12%)</title><rect x="51.1930%" y="501" width="0.1208%" height="15" fill="rgb(215,211,28)" fg:x="1695" fg:w="4"/><text x="51.4430%" y="511.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (4 samples, 0.12%)</title><rect x="51.1930%" y="485" width="0.1208%" height="15" fill="rgb(238,59,32)" fg:x="1695" fg:w="4"/><text x="51.4430%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.12%)</title><rect x="51.1930%" y="469" width="0.1208%" height="15" fill="rgb(226,82,3)" fg:x="1695" fg:w="4"/><text x="51.4430%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.12%)</title><rect x="51.1930%" y="453" width="0.1208%" height="15" fill="rgb(240,164,32)" fg:x="1695" fg:w="4"/><text x="51.4430%" y="463.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.12%)</title><rect x="51.1930%" y="437" width="0.1208%" height="15" fill="rgb(232,46,7)" fg:x="1695" fg:w="4"/><text x="51.4430%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (4 samples, 0.12%)</title><rect x="51.1930%" y="421" width="0.1208%" height="15" fill="rgb(229,129,53)" fg:x="1695" fg:w="4"/><text x="51.4430%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (4 samples, 0.12%)</title><rect x="51.1930%" y="405" width="0.1208%" height="15" fill="rgb(234,188,29)" fg:x="1695" fg:w="4"/><text x="51.4430%" y="415.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (4 samples, 0.12%)</title><rect x="51.1930%" y="389" width="0.1208%" height="15" fill="rgb(246,141,4)" fg:x="1695" fg:w="4"/><text x="51.4430%" y="399.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (4 samples, 0.12%)</title><rect x="51.1930%" y="373" width="0.1208%" height="15" fill="rgb(229,23,39)" fg:x="1695" fg:w="4"/><text x="51.4430%" y="383.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (4 samples, 0.12%)</title><rect x="51.1930%" y="357" width="0.1208%" height="15" fill="rgb(206,12,3)" fg:x="1695" fg:w="4"/><text x="51.4430%" y="367.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (4 samples, 0.12%)</title><rect x="51.1930%" y="341" width="0.1208%" height="15" fill="rgb(252,226,20)" fg:x="1695" fg:w="4"/><text x="51.4430%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.12%)</title><rect x="51.1930%" y="325" width="0.1208%" height="15" fill="rgb(216,123,35)" fg:x="1695" fg:w="4"/><text x="51.4430%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.12%)</title><rect x="51.1930%" y="309" width="0.1208%" height="15" fill="rgb(212,68,40)" fg:x="1695" fg:w="4"/><text x="51.4430%" y="319.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.12%)</title><rect x="51.1930%" y="293" width="0.1208%" height="15" fill="rgb(254,125,32)" fg:x="1695" fg:w="4"/><text x="51.4430%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (4 samples, 0.12%)</title><rect x="51.1930%" y="277" width="0.1208%" height="15" fill="rgb(253,97,22)" fg:x="1695" fg:w="4"/><text x="51.4430%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (3 samples, 0.09%)</title><rect x="51.2232%" y="261" width="0.0906%" height="15" fill="rgb(241,101,14)" fg:x="1696" fg:w="3"/><text x="51.4732%" y="271.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (1 samples, 0.03%)</title><rect x="51.2836%" y="245" width="0.0302%" height="15" fill="rgb(238,103,29)" fg:x="1698" fg:w="1"/><text x="51.5336%" y="255.50"></text></g><g><title>chacha20::backends::avx2::inner (5 samples, 0.15%)</title><rect x="51.1930%" y="533" width="0.1510%" height="15" fill="rgb(233,195,47)" fg:x="1695" fg:w="5"/><text x="51.4430%" y="543.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (5 samples, 0.15%)</title><rect x="51.1930%" y="517" width="0.1510%" height="15" fill="rgb(246,218,30)" fg:x="1695" fg:w="5"/><text x="51.4430%" y="527.50"></text></g><g><title>inout::inout_buf::InOutBuf&lt;T&gt;::into_chunks (1 samples, 0.03%)</title><rect x="51.3138%" y="501" width="0.0302%" height="15" fill="rgb(219,145,47)" fg:x="1699" fg:w="1"/><text x="51.5638%" y="511.50"></text></g><g><title>&lt;tftp::client::encryption_socket::EncryptionBoundSocket&lt;S,Rng&gt; as tftp::socket::Socket&gt;::send_to (116 samples, 3.50%)</title><rect x="47.8707%" y="709" width="3.5035%" height="15" fill="rgb(243,12,26)" fg:x="1585" fg:w="116"/><text x="48.1207%" y="719.50">&lt;tf..</text></g><g><title>tftp::encrypted_packet::EncryptedPacket::encrypt (116 samples, 3.50%)</title><rect x="47.8707%" y="693" width="3.5035%" height="15" fill="rgb(214,87,16)" fg:x="1585" fg:w="116"/><text x="48.1207%" y="703.50">tft..</text></g><g><title>tftp::encryption::Encryptor&lt;R&gt;::encrypt (116 samples, 3.50%)</title><rect x="47.8707%" y="677" width="3.5035%" height="15" fill="rgb(208,99,42)" fg:x="1585" fg:w="116"/><text x="48.1207%" y="687.50">tft..</text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::encrypt_in_place_detached (116 samples, 3.50%)</title><rect x="47.8707%" y="661" width="3.5035%" height="15" fill="rgb(253,99,2)" fg:x="1585" fg:w="116"/><text x="48.1207%" y="671.50">&lt;ch..</text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (6 samples, 0.18%)</title><rect x="51.1930%" y="645" width="0.1812%" height="15" fill="rgb(220,168,23)" fg:x="1695" fg:w="6"/><text x="51.4430%" y="655.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (6 samples, 0.18%)</title><rect x="51.1930%" y="629" width="0.1812%" height="15" fill="rgb(242,38,24)" fg:x="1695" fg:w="6"/><text x="51.4430%" y="639.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (6 samples, 0.18%)</title><rect x="51.1930%" y="613" width="0.1812%" height="15" fill="rgb(225,182,9)" fg:x="1695" fg:w="6"/><text x="51.4430%" y="623.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (6 samples, 0.18%)</title><rect x="51.1930%" y="597" width="0.1812%" height="15" fill="rgb(243,178,37)" fg:x="1695" fg:w="6"/><text x="51.4430%" y="607.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (6 samples, 0.18%)</title><rect x="51.1930%" y="581" width="0.1812%" height="15" fill="rgb(232,139,19)" fg:x="1695" fg:w="6"/><text x="51.4430%" y="591.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (6 samples, 0.18%)</title><rect x="51.1930%" y="565" width="0.1812%" height="15" fill="rgb(225,201,24)" fg:x="1695" fg:w="6"/><text x="51.4430%" y="575.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (6 samples, 0.18%)</title><rect x="51.1930%" y="549" width="0.1812%" height="15" fill="rgb(221,47,46)" fg:x="1695" fg:w="6"/><text x="51.4430%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="51.3440%" y="533" width="0.0302%" height="15" fill="rgb(249,23,13)" fg:x="1700" fg:w="1"/><text x="51.5940%" y="543.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (5 samples, 0.15%)</title><rect x="51.3742%" y="709" width="0.1510%" height="15" fill="rgb(219,9,5)" fg:x="1701" fg:w="5"/><text x="51.6242%" y="719.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (1 samples, 0.03%)</title><rect x="51.4950%" y="693" width="0.0302%" height="15" fill="rgb(254,171,16)" fg:x="1705" fg:w="1"/><text x="51.7450%" y="703.50"></text></g><g><title>__memcpy_avx_unaligned_erms (8 samples, 0.24%)</title><rect x="51.5252%" y="709" width="0.2416%" height="15" fill="rgb(230,171,20)" fg:x="1706" fg:w="8"/><text x="51.7752%" y="719.50"></text></g><g><title>_init (1 samples, 0.03%)</title><rect x="51.7668%" y="709" width="0.0302%" height="15" fill="rgb(210,71,41)" fg:x="1714" fg:w="1"/><text x="52.0168%" y="719.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="51.7970%" y="709" width="0.0302%" height="15" fill="rgb(206,173,20)" fg:x="1715" fg:w="1"/><text x="52.0470%" y="719.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (1 samples, 0.03%)</title><rect x="51.8272%" y="709" width="0.0302%" height="15" fill="rgb(233,88,34)" fg:x="1716" fg:w="1"/><text x="52.0772%" y="719.50"></text></g><g><title>chacha20::xchacha::hchacha (6 samples, 0.18%)</title><rect x="51.8574%" y="709" width="0.1812%" height="15" fill="rgb(223,209,46)" fg:x="1717" fg:w="6"/><text x="52.1074%" y="719.50"></text></g><g><title>chacha20::xchacha::quarter_round (5 samples, 0.15%)</title><rect x="52.0387%" y="709" width="0.1510%" height="15" fill="rgb(250,43,18)" fg:x="1723" fg:w="5"/><text x="52.2887%" y="719.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (1 samples, 0.03%)</title><rect x="52.1897%" y="709" width="0.0302%" height="15" fill="rgb(208,13,10)" fg:x="1728" fg:w="1"/><text x="52.4397%" y="719.50"></text></g><g><title>cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt;::set_pos_unchecked (1 samples, 0.03%)</title><rect x="52.2199%" y="709" width="0.0302%" height="15" fill="rgb(212,200,36)" fg:x="1729" fg:w="1"/><text x="52.4699%" y="719.50"></text></g><g><title>core::array::&lt;impl core::iter::traits::collect::IntoIterator for &amp;mut [T: N]&gt;::into_iter (2 samples, 0.06%)</title><rect x="52.2501%" y="709" width="0.0604%" height="15" fill="rgb(225,90,30)" fg:x="1730" fg:w="2"/><text x="52.5001%" y="719.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (1 samples, 0.03%)</title><rect x="52.2803%" y="693" width="0.0302%" height="15" fill="rgb(236,182,39)" fg:x="1731" fg:w="1"/><text x="52.5303%" y="703.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="52.2803%" y="677" width="0.0302%" height="15" fill="rgb(212,144,35)" fg:x="1731" fg:w="1"/><text x="52.5303%" y="687.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.03%)</title><rect x="52.3105%" y="709" width="0.0302%" height="15" fill="rgb(228,63,44)" fg:x="1732" fg:w="1"/><text x="52.5605%" y="719.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.03%)</title><rect x="52.3407%" y="709" width="0.0302%" height="15" fill="rgb(228,109,6)" fg:x="1733" fg:w="1"/><text x="52.5907%" y="719.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (13 samples, 0.39%)</title><rect x="52.3709%" y="709" width="0.3926%" height="15" fill="rgb(238,117,24)" fg:x="1734" fg:w="13"/><text x="52.6209%" y="719.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (14 samples, 0.42%)</title><rect x="52.7635%" y="709" width="0.4228%" height="15" fill="rgb(242,26,26)" fg:x="1747" fg:w="14"/><text x="53.0135%" y="719.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.03%)</title><rect x="53.1863%" y="709" width="0.0302%" height="15" fill="rgb(221,92,48)" fg:x="1761" fg:w="1"/><text x="53.4363%" y="719.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_blend_epi32 (1 samples, 0.03%)</title><rect x="53.2166%" y="709" width="0.0302%" height="15" fill="rgb(209,209,32)" fg:x="1762" fg:w="1"/><text x="53.4666%" y="719.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (4 samples, 0.12%)</title><rect x="53.2468%" y="709" width="0.1208%" height="15" fill="rgb(221,70,22)" fg:x="1763" fg:w="4"/><text x="53.4968%" y="719.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (1 samples, 0.03%)</title><rect x="53.3676%" y="709" width="0.0302%" height="15" fill="rgb(248,145,5)" fg:x="1767" fg:w="1"/><text x="53.6176%" y="719.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (2 samples, 0.06%)</title><rect x="53.3978%" y="709" width="0.0604%" height="15" fill="rgb(226,116,26)" fg:x="1768" fg:w="2"/><text x="53.6478%" y="719.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.03%)</title><rect x="53.4582%" y="709" width="0.0302%" height="15" fill="rgb(244,5,17)" fg:x="1770" fg:w="1"/><text x="53.7082%" y="719.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.03%)</title><rect x="53.4884%" y="709" width="0.0302%" height="15" fill="rgb(252,159,33)" fg:x="1771" fg:w="1"/><text x="53.7384%" y="719.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (11 samples, 0.33%)</title><rect x="53.5186%" y="709" width="0.3322%" height="15" fill="rgb(206,71,0)" fg:x="1772" fg:w="11"/><text x="53.7686%" y="719.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (1 samples, 0.03%)</title><rect x="53.8508%" y="709" width="0.0302%" height="15" fill="rgb(233,118,54)" fg:x="1783" fg:w="1"/><text x="54.1008%" y="719.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (8 samples, 0.24%)</title><rect x="53.8810%" y="709" width="0.2416%" height="15" fill="rgb(234,83,48)" fg:x="1784" fg:w="8"/><text x="54.1310%" y="719.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi32 (1 samples, 0.03%)</title><rect x="54.1226%" y="709" width="0.0302%" height="15" fill="rgb(228,3,54)" fg:x="1792" fg:w="1"/><text x="54.3726%" y="719.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (2 samples, 0.06%)</title><rect x="54.1528%" y="709" width="0.0604%" height="15" fill="rgb(226,155,13)" fg:x="1793" fg:w="2"/><text x="54.4028%" y="719.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (2 samples, 0.06%)</title><rect x="54.2132%" y="709" width="0.0604%" height="15" fill="rgb(241,28,37)" fg:x="1795" fg:w="2"/><text x="54.4632%" y="719.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (7 samples, 0.21%)</title><rect x="54.2736%" y="709" width="0.2114%" height="15" fill="rgb(233,93,10)" fg:x="1797" fg:w="7"/><text x="54.5236%" y="719.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (19 samples, 0.57%)</title><rect x="54.4850%" y="709" width="0.5738%" height="15" fill="rgb(225,113,19)" fg:x="1804" fg:w="19"/><text x="54.7350%" y="719.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (6 samples, 0.18%)</title><rect x="55.0589%" y="709" width="0.1812%" height="15" fill="rgb(241,2,18)" fg:x="1823" fg:w="6"/><text x="55.3089%" y="719.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (9 samples, 0.27%)</title><rect x="55.2401%" y="709" width="0.2718%" height="15" fill="rgb(228,207,21)" fg:x="1829" fg:w="9"/><text x="55.4901%" y="719.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (2 samples, 0.06%)</title><rect x="55.5119%" y="709" width="0.0604%" height="15" fill="rgb(213,211,35)" fg:x="1838" fg:w="2"/><text x="55.7619%" y="719.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.03%)</title><rect x="55.5723%" y="709" width="0.0302%" height="15" fill="rgb(209,83,10)" fg:x="1840" fg:w="1"/><text x="55.8223%" y="719.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_storeu_si128 (1 samples, 0.03%)</title><rect x="55.6025%" y="709" width="0.0302%" height="15" fill="rgb(209,164,1)" fg:x="1841" fg:w="1"/><text x="55.8525%" y="719.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_unaligned (1 samples, 0.03%)</title><rect x="55.6025%" y="693" width="0.0302%" height="15" fill="rgb(213,184,43)" fg:x="1841" fg:w="1"/><text x="55.8525%" y="703.50"></text></g><g><title>core::ptr::write_unaligned (1 samples, 0.03%)</title><rect x="55.6025%" y="677" width="0.0302%" height="15" fill="rgb(231,61,34)" fg:x="1841" fg:w="1"/><text x="55.8525%" y="687.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (5 samples, 0.15%)</title><rect x="55.6327%" y="709" width="0.1510%" height="15" fill="rgb(235,75,3)" fg:x="1842" fg:w="5"/><text x="55.8827%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.03%)</title><rect x="55.7838%" y="709" width="0.0302%" height="15" fill="rgb(220,106,47)" fg:x="1847" fg:w="1"/><text x="56.0338%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (30 samples, 0.91%)</title><rect x="55.8140%" y="709" width="0.9061%" height="15" fill="rgb(210,196,33)" fg:x="1848" fg:w="30"/><text x="56.0640%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (1 samples, 0.03%)</title><rect x="56.7200%" y="709" width="0.0302%" height="15" fill="rgb(229,154,42)" fg:x="1878" fg:w="1"/><text x="56.9700%" y="719.50"></text></g><g><title>core::num::&lt;impl u64&gt;::to_le_bytes (1 samples, 0.03%)</title><rect x="56.7502%" y="709" width="0.0302%" height="15" fill="rgb(228,114,26)" fg:x="1879" fg:w="1"/><text x="57.0002%" y="719.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.03%)</title><rect x="56.7804%" y="709" width="0.0302%" height="15" fill="rgb(208,144,1)" fg:x="1880" fg:w="1"/><text x="57.0304%" y="719.50"></text></g><g><title>tftp::main (1 samples, 0.03%)</title><rect x="56.7804%" y="693" width="0.0302%" height="15" fill="rgb(239,112,37)" fg:x="1880" fg:w="1"/><text x="57.0304%" y="703.50"></text></g><g><title>tftp::sender::start_send (1 samples, 0.03%)</title><rect x="56.7804%" y="677" width="0.0302%" height="15" fill="rgb(210,96,50)" fg:x="1880" fg:w="1"/><text x="57.0304%" y="687.50"></text></g><g><title>tftp::client::sender::send_file (1 samples, 0.03%)</title><rect x="56.7804%" y="661" width="0.0302%" height="15" fill="rgb(222,178,2)" fg:x="1880" fg:w="1"/><text x="57.0304%" y="671.50"></text></g><g><title>tftp::packet::prepend_data_header (1 samples, 0.03%)</title><rect x="56.7804%" y="645" width="0.0302%" height="15" fill="rgb(226,74,18)" fg:x="1880" fg:w="1"/><text x="57.0304%" y="655.50"></text></g><g><title>&lt;&amp;mut [u8] as tftp::buffer::SliceMutExt&gt;::write_bytes (1 samples, 0.03%)</title><rect x="56.7804%" y="629" width="0.0302%" height="15" fill="rgb(225,67,54)" fg:x="1880" fg:w="1"/><text x="57.0304%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (1 samples, 0.03%)</title><rect x="56.8106%" y="709" width="0.0302%" height="15" fill="rgb(251,92,32)" fg:x="1881" fg:w="1"/><text x="57.0606%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.03%)</title><rect x="56.8106%" y="693" width="0.0302%" height="15" fill="rgb(228,149,22)" fg:x="1881" fg:w="1"/><text x="57.0606%" y="703.50"></text></g><g><title>core::ptr::write (5 samples, 0.15%)</title><rect x="56.8408%" y="709" width="0.1510%" height="15" fill="rgb(243,54,13)" fg:x="1882" fg:w="5"/><text x="57.0908%" y="719.50"></text></g><g><title>core::ptr::write_volatile (1 samples, 0.03%)</title><rect x="56.9918%" y="709" width="0.0302%" height="15" fill="rgb(243,180,28)" fg:x="1887" fg:w="1"/><text x="57.2418%" y="719.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.03%)</title><rect x="57.0220%" y="709" width="0.0302%" height="15" fill="rgb(208,167,24)" fg:x="1888" fg:w="1"/><text x="57.2720%" y="719.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (1 samples, 0.03%)</title><rect x="57.0523%" y="709" width="0.0302%" height="15" fill="rgb(245,73,45)" fg:x="1889" fg:w="1"/><text x="57.3023%" y="719.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (2 samples, 0.06%)</title><rect x="57.0825%" y="709" width="0.0604%" height="15" fill="rgb(237,203,48)" fg:x="1890" fg:w="2"/><text x="57.3325%" y="719.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (9 samples, 0.27%)</title><rect x="57.1429%" y="709" width="0.2718%" height="15" fill="rgb(211,197,16)" fg:x="1892" fg:w="9"/><text x="57.3929%" y="719.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (8 samples, 0.24%)</title><rect x="57.1731%" y="693" width="0.2416%" height="15" fill="rgb(243,99,51)" fg:x="1893" fg:w="8"/><text x="57.4231%" y="703.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (2 samples, 0.06%)</title><rect x="57.3543%" y="677" width="0.0604%" height="15" fill="rgb(215,123,29)" fg:x="1899" fg:w="2"/><text x="57.6043%" y="687.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at (1 samples, 0.03%)</title><rect x="57.4147%" y="709" width="0.0302%" height="15" fill="rgb(239,186,37)" fg:x="1901" fg:w="1"/><text x="57.6647%" y="719.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (1 samples, 0.03%)</title><rect x="57.4147%" y="693" width="0.0302%" height="15" fill="rgb(252,136,39)" fg:x="1901" fg:w="1"/><text x="57.6647%" y="703.50"></text></g><g><title>core::slice::raw::from_raw_parts (51 samples, 1.54%)</title><rect x="57.4449%" y="709" width="1.5403%" height="15" fill="rgb(223,213,32)" fg:x="1902" fg:w="51"/><text x="57.6949%" y="719.50"></text></g><g><title>core::ptr::slice_from_raw_parts (41 samples, 1.24%)</title><rect x="57.7469%" y="693" width="1.2383%" height="15" fill="rgb(233,115,5)" fg:x="1912" fg:w="41"/><text x="57.9969%" y="703.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (41 samples, 1.24%)</title><rect x="57.7469%" y="677" width="1.2383%" height="15" fill="rgb(207,226,44)" fg:x="1912" fg:w="41"/><text x="57.9969%" y="687.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (19 samples, 0.57%)</title><rect x="58.9852%" y="709" width="0.5738%" height="15" fill="rgb(208,126,0)" fg:x="1953" fg:w="19"/><text x="59.2352%" y="719.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (17 samples, 0.51%)</title><rect x="59.0456%" y="693" width="0.5134%" height="15" fill="rgb(244,66,21)" fg:x="1955" fg:w="17"/><text x="59.2956%" y="703.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (17 samples, 0.51%)</title><rect x="59.0456%" y="677" width="0.5134%" height="15" fill="rgb(222,97,12)" fg:x="1955" fg:w="17"/><text x="59.2956%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicU8::load (1 samples, 0.03%)</title><rect x="59.5590%" y="709" width="0.0302%" height="15" fill="rgb(219,213,19)" fg:x="1972" fg:w="1"/><text x="59.8090%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.03%)</title><rect x="59.5892%" y="709" width="0.0302%" height="15" fill="rgb(252,169,30)" fg:x="1973" fg:w="1"/><text x="59.8392%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.06%)</title><rect x="59.6195%" y="709" width="0.0604%" height="15" fill="rgb(206,32,51)" fg:x="1974" fg:w="2"/><text x="59.8695%" y="719.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (1 samples, 0.03%)</title><rect x="59.6799%" y="709" width="0.0302%" height="15" fill="rgb(250,172,42)" fg:x="1976" fg:w="1"/><text x="59.9299%" y="719.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::iter_position (1 samples, 0.03%)</title><rect x="59.7101%" y="709" width="0.0302%" height="15" fill="rgb(209,34,43)" fg:x="1977" fg:w="1"/><text x="59.9601%" y="719.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (8 samples, 0.24%)</title><rect x="59.7403%" y="709" width="0.2416%" height="15" fill="rgb(223,11,35)" fg:x="1978" fg:w="8"/><text x="59.9903%" y="719.50"></text></g><g><title>getrandom::lazy::LazyUsize::unsync_init (1 samples, 0.03%)</title><rect x="59.9819%" y="709" width="0.0302%" height="15" fill="rgb(251,219,26)" fg:x="1986" fg:w="1"/><text x="60.2319%" y="719.50"></text></g><g><title>polling::epoll::read_flags (1 samples, 0.03%)</title><rect x="60.0121%" y="709" width="0.0302%" height="15" fill="rgb(231,119,3)" fg:x="1987" fg:w="1"/><text x="60.2621%" y="719.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (1 samples, 0.03%)</title><rect x="60.1933%" y="645" width="0.0302%" height="15" fill="rgb(216,97,11)" fg:x="1993" fg:w="1"/><text x="60.4433%" y="655.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (6 samples, 0.18%)</title><rect x="60.0725%" y="661" width="0.1812%" height="15" fill="rgb(223,59,9)" fg:x="1989" fg:w="6"/><text x="60.3225%" y="671.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="60.2235%" y="645" width="0.0302%" height="15" fill="rgb(233,93,31)" fg:x="1994" fg:w="1"/><text x="60.4735%" y="655.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="60.2537%" y="661" width="0.0302%" height="15" fill="rgb(239,81,33)" fg:x="1995" fg:w="1"/><text x="60.5037%" y="671.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::AdditionKey as core::ops::arith::Add&lt;poly1305::backend::avx2::helpers::Aligned130&gt;&gt;::add::propagate_carry (1 samples, 0.03%)</title><rect x="60.2537%" y="645" width="0.0302%" height="15" fill="rgb(213,120,34)" fg:x="1995" fg:w="1"/><text x="60.5037%" y="655.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (3 samples, 0.09%)</title><rect x="60.2839%" y="661" width="0.0906%" height="15" fill="rgb(243,49,53)" fg:x="1996" fg:w="3"/><text x="60.5339%" y="671.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi32 (1 samples, 0.03%)</title><rect x="60.3443%" y="645" width="0.0302%" height="15" fill="rgb(247,216,33)" fg:x="1998" fg:w="1"/><text x="60.5943%" y="655.50"></text></g><g><title>core::core_arch::simd::i32x8::new (1 samples, 0.03%)</title><rect x="60.3443%" y="629" width="0.0302%" height="15" fill="rgb(226,26,14)" fg:x="1998" fg:w="1"/><text x="60.5943%" y="639.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="60.3745%" y="661" width="0.0302%" height="15" fill="rgb(215,49,53)" fg:x="1999" fg:w="1"/><text x="60.6245%" y="671.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="60.3745%" y="645" width="0.0302%" height="15" fill="rgb(245,162,40)" fg:x="1999" fg:w="1"/><text x="60.6245%" y="655.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="60.3745%" y="629" width="0.0302%" height="15" fill="rgb(229,68,17)" fg:x="1999" fg:w="1"/><text x="60.6245%" y="639.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="60.4047%" y="661" width="0.0302%" height="15" fill="rgb(213,182,10)" fg:x="2000" fg:w="1"/><text x="60.6547%" y="671.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::AdditionKey as core::ops::arith::Add&lt;poly1305::backend::avx2::helpers::Aligned130&gt;&gt;::add::propagate_carry (14 samples, 0.42%)</title><rect x="60.0423%" y="677" width="0.4228%" height="15" fill="rgb(245,125,30)" fg:x="1988" fg:w="14"/><text x="60.2923%" y="687.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="60.4349%" y="661" width="0.0302%" height="15" fill="rgb(232,202,2)" fg:x="2001" fg:w="1"/><text x="60.6849%" y="671.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.03%)</title><rect x="60.4651%" y="661" width="0.0302%" height="15" fill="rgb(237,140,51)" fg:x="2002" fg:w="1"/><text x="60.7151%" y="671.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (1 samples, 0.03%)</title><rect x="60.4651%" y="645" width="0.0302%" height="15" fill="rgb(236,157,25)" fg:x="2002" fg:w="1"/><text x="60.7151%" y="655.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi32 (1 samples, 0.03%)</title><rect x="60.4953%" y="645" width="0.0302%" height="15" fill="rgb(219,209,0)" fg:x="2003" fg:w="1"/><text x="60.7453%" y="655.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi32 (1 samples, 0.03%)</title><rect x="60.4953%" y="629" width="0.0302%" height="15" fill="rgb(240,116,54)" fg:x="2003" fg:w="1"/><text x="60.7453%" y="639.50"></text></g><g><title>core::core_arch::simd::i32x8::new (1 samples, 0.03%)</title><rect x="60.4953%" y="613" width="0.0302%" height="15" fill="rgb(216,10,36)" fg:x="2003" fg:w="1"/><text x="60.7453%" y="623.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="60.5255%" y="645" width="0.0302%" height="15" fill="rgb(222,72,44)" fg:x="2004" fg:w="1"/><text x="60.7755%" y="655.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (3 samples, 0.09%)</title><rect x="60.4953%" y="661" width="0.0906%" height="15" fill="rgb(232,159,9)" fg:x="2003" fg:w="3"/><text x="60.7453%" y="671.50"></text></g><g><title>poly1305::backend::avx2::State::finalize (1 samples, 0.03%)</title><rect x="60.5557%" y="645" width="0.0302%" height="15" fill="rgb(210,39,32)" fg:x="2005" fg:w="1"/><text x="60.8057%" y="655.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::AdditionKey as core::ops::arith::Add&lt;poly1305::backend::avx2::helpers::Aligned130&gt;&gt;::add (1 samples, 0.03%)</title><rect x="60.5557%" y="629" width="0.0302%" height="15" fill="rgb(216,194,45)" fg:x="2005" fg:w="1"/><text x="60.8057%" y="639.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (1 samples, 0.03%)</title><rect x="60.5859%" y="661" width="0.0302%" height="15" fill="rgb(218,18,35)" fg:x="2006" fg:w="1"/><text x="60.8359%" y="671.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::AdditionKey as core::ops::arith::Add&lt;poly1305::backend::avx2::helpers::Aligned130&gt;&gt;::add::propagate_carry_32 (6 samples, 0.18%)</title><rect x="60.4651%" y="677" width="0.1812%" height="15" fill="rgb(207,83,51)" fg:x="2002" fg:w="6"/><text x="60.7151%" y="687.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="60.6161%" y="661" width="0.0302%" height="15" fill="rgb(225,63,43)" fg:x="2007" fg:w="1"/><text x="60.8661%" y="671.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (3 samples, 0.09%)</title><rect x="60.6463%" y="677" width="0.0906%" height="15" fill="rgb(207,57,36)" fg:x="2008" fg:w="3"/><text x="60.8963%" y="687.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (3 samples, 0.09%)</title><rect x="60.6463%" y="661" width="0.0906%" height="15" fill="rgb(216,99,33)" fg:x="2008" fg:w="3"/><text x="60.8963%" y="671.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (3 samples, 0.09%)</title><rect x="60.7369%" y="677" width="0.0906%" height="15" fill="rgb(225,42,16)" fg:x="2011" fg:w="3"/><text x="60.9869%" y="687.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi32 (1 samples, 0.03%)</title><rect x="60.7973%" y="661" width="0.0302%" height="15" fill="rgb(220,201,45)" fg:x="2013" fg:w="1"/><text x="61.0473%" y="671.50"></text></g><g><title>core::core_arch::simd::i32x8::new (1 samples, 0.03%)</title><rect x="60.7973%" y="645" width="0.0302%" height="15" fill="rgb(225,33,4)" fg:x="2013" fg:w="1"/><text x="61.0473%" y="655.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="60.8275%" y="677" width="0.0302%" height="15" fill="rgb(224,33,50)" fg:x="2014" fg:w="1"/><text x="61.0775%" y="687.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::AdditionKey as core::ops::arith::Add&lt;poly1305::backend::avx2::helpers::Aligned130&gt;&gt;::add (28 samples, 0.85%)</title><rect x="60.0423%" y="693" width="0.8457%" height="15" fill="rgb(246,198,51)" fg:x="1988" fg:w="28"/><text x="60.2923%" y="703.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="60.8577%" y="677" width="0.0302%" height="15" fill="rgb(205,22,4)" fg:x="2015" fg:w="1"/><text x="61.1077%" y="687.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.03%)</title><rect x="60.8879%" y="693" width="0.0302%" height="15" fill="rgb(206,3,8)" fg:x="2016" fg:w="1"/><text x="61.1379%" y="703.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="60.9182%" y="645" width="0.0302%" height="15" fill="rgb(251,23,15)" fg:x="2017" fg:w="1"/><text x="61.1682%" y="655.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (1 samples, 0.03%)</title><rect x="60.9786%" y="629" width="0.0302%" height="15" fill="rgb(252,88,28)" fg:x="2019" fg:w="1"/><text x="61.2286%" y="639.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi32 (1 samples, 0.03%)</title><rect x="60.9786%" y="613" width="0.0302%" height="15" fill="rgb(212,127,14)" fg:x="2019" fg:w="1"/><text x="61.2286%" y="623.50"></text></g><g><title>core::core_arch::simd::i32x8::new (1 samples, 0.03%)</title><rect x="60.9786%" y="597" width="0.0302%" height="15" fill="rgb(247,145,37)" fg:x="2019" fg:w="1"/><text x="61.2286%" y="607.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (3 samples, 0.09%)</title><rect x="60.9484%" y="645" width="0.0906%" height="15" fill="rgb(209,117,53)" fg:x="2018" fg:w="3"/><text x="61.1984%" y="655.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="61.0088%" y="629" width="0.0302%" height="15" fill="rgb(212,90,42)" fg:x="2020" fg:w="1"/><text x="61.2588%" y="639.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_blend_epi32 (1 samples, 0.03%)</title><rect x="61.0390%" y="645" width="0.0302%" height="15" fill="rgb(218,164,37)" fg:x="2021" fg:w="1"/><text x="61.2890%" y="655.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (1 samples, 0.03%)</title><rect x="61.0390%" y="629" width="0.0302%" height="15" fill="rgb(246,65,34)" fg:x="2021" fg:w="1"/><text x="61.2890%" y="639.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (1 samples, 0.03%)</title><rect x="61.0390%" y="613" width="0.0302%" height="15" fill="rgb(231,100,33)" fg:x="2021" fg:w="1"/><text x="61.2890%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (2 samples, 0.06%)</title><rect x="61.0692%" y="645" width="0.0604%" height="15" fill="rgb(228,126,14)" fg:x="2022" fg:w="2"/><text x="61.3192%" y="655.50"></text></g><g><title>core::core_arch::simd::u64x4::splat (2 samples, 0.06%)</title><rect x="61.0692%" y="629" width="0.0604%" height="15" fill="rgb(215,173,21)" fg:x="2022" fg:w="2"/><text x="61.3192%" y="639.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (2 samples, 0.06%)</title><rect x="61.1296%" y="645" width="0.0604%" height="15" fill="rgb(210,6,40)" fg:x="2024" fg:w="2"/><text x="61.3796%" y="655.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_unpackhi_epi32 (1 samples, 0.03%)</title><rect x="61.1900%" y="645" width="0.0302%" height="15" fill="rgb(212,48,18)" fg:x="2026" fg:w="1"/><text x="61.4400%" y="655.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.03%)</title><rect x="61.1900%" y="629" width="0.0302%" height="15" fill="rgb(230,214,11)" fg:x="2026" fg:w="1"/><text x="61.4400%" y="639.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.06%)</title><rect x="61.2202%" y="645" width="0.0604%" height="15" fill="rgb(254,105,39)" fg:x="2027" fg:w="2"/><text x="61.4702%" y="655.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (3 samples, 0.09%)</title><rect x="61.2806%" y="645" width="0.0906%" height="15" fill="rgb(245,158,5)" fg:x="2029" fg:w="3"/><text x="61.5306%" y="655.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::SpacedMultiplier4x130&gt;&gt;::mul (17 samples, 0.51%)</title><rect x="60.9182%" y="661" width="0.5134%" height="15" fill="rgb(249,208,11)" fg:x="2017" fg:w="17"/><text x="61.1682%" y="671.50"></text></g><g><title>poly1305::backend::avx2::State::finalize::{{closure}} (2 samples, 0.06%)</title><rect x="61.3712%" y="645" width="0.0604%" height="15" fill="rgb(210,39,28)" fg:x="2032" fg:w="2"/><text x="61.6212%" y="655.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::SpacedMultiplier4x130&gt;&gt;::mul (2 samples, 0.06%)</title><rect x="61.3712%" y="629" width="0.0604%" height="15" fill="rgb(211,56,53)" fg:x="2032" fg:w="2"/><text x="61.6212%" y="639.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.03%)</title><rect x="61.4316%" y="645" width="0.0302%" height="15" fill="rgb(226,201,30)" fg:x="2034" fg:w="1"/><text x="61.6816%" y="655.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (1 samples, 0.03%)</title><rect x="61.4618%" y="645" width="0.0302%" height="15" fill="rgb(239,101,34)" fg:x="2035" fg:w="1"/><text x="61.7118%" y="655.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.03%)</title><rect x="61.4618%" y="629" width="0.0302%" height="15" fill="rgb(226,209,5)" fg:x="2035" fg:w="1"/><text x="61.7118%" y="639.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.03%)</title><rect x="61.4920%" y="629" width="0.0302%" height="15" fill="rgb(250,105,47)" fg:x="2036" fg:w="1"/><text x="61.7420%" y="639.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (1 samples, 0.03%)</title><rect x="61.5222%" y="629" width="0.0302%" height="15" fill="rgb(230,72,3)" fg:x="2037" fg:w="1"/><text x="61.7722%" y="639.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="61.5222%" y="613" width="0.0302%" height="15" fill="rgb(232,218,39)" fg:x="2037" fg:w="1"/><text x="61.7722%" y="623.50"></text></g><g><title>poly1305::backend::avx2::helpers::adc (3 samples, 0.09%)</title><rect x="61.4920%" y="645" width="0.0906%" height="15" fill="rgb(248,166,6)" fg:x="2036" fg:w="3"/><text x="61.7420%" y="655.50"></text></g><g><title>poly1305::backend::avx2::State::finalize::{{closure}} (1 samples, 0.03%)</title><rect x="61.5524%" y="629" width="0.0302%" height="15" fill="rgb(247,89,20)" fg:x="2038" fg:w="1"/><text x="61.8024%" y="639.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::sum (1 samples, 0.03%)</title><rect x="61.5524%" y="613" width="0.0302%" height="15" fill="rgb(248,130,54)" fg:x="2038" fg:w="1"/><text x="61.8024%" y="623.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_castsi128_si256 (1 samples, 0.03%)</title><rect x="61.5826%" y="629" width="0.0302%" height="15" fill="rgb(234,196,4)" fg:x="2039" fg:w="1"/><text x="61.8326%" y="639.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="61.6128%" y="629" width="0.0302%" height="15" fill="rgb(250,143,31)" fg:x="2040" fg:w="1"/><text x="61.8628%" y="639.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="61.6128%" y="613" width="0.0302%" height="15" fill="rgb(211,110,34)" fg:x="2040" fg:w="1"/><text x="61.8628%" y="623.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="61.6128%" y="597" width="0.0302%" height="15" fill="rgb(215,124,48)" fg:x="2040" fg:w="1"/><text x="61.8628%" y="607.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced130::reduce (8 samples, 0.24%)</title><rect x="61.4316%" y="661" width="0.2416%" height="15" fill="rgb(216,46,13)" fg:x="2034" fg:w="8"/><text x="61.6816%" y="671.50"></text></g><g><title>poly1305::backend::avx2::helpers::red (3 samples, 0.09%)</title><rect x="61.5826%" y="645" width="0.0906%" height="15" fill="rgb(205,184,25)" fg:x="2039" fg:w="3"/><text x="61.8326%" y="655.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="61.6430%" y="629" width="0.0302%" height="15" fill="rgb(228,1,10)" fg:x="2041" fg:w="1"/><text x="61.8930%" y="639.50"></text></g><g><title>poly1305::backend::avx2::State::finalize::{{closure}} (26 samples, 0.79%)</title><rect x="60.9182%" y="677" width="0.7853%" height="15" fill="rgb(213,116,27)" fg:x="2017" fg:w="26"/><text x="61.1682%" y="687.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::sum (1 samples, 0.03%)</title><rect x="61.6732%" y="661" width="0.0302%" height="15" fill="rgb(241,95,50)" fg:x="2042" fg:w="1"/><text x="61.9232%" y="671.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="61.6732%" y="645" width="0.0302%" height="15" fill="rgb(238,48,32)" fg:x="2042" fg:w="1"/><text x="61.9232%" y="655.50"></text></g><g><title>poly1305::backend::avx2::State::finalize (56 samples, 1.69%)</title><rect x="60.0423%" y="709" width="1.6913%" height="15" fill="rgb(235,113,49)" fg:x="1988" fg:w="56"/><text x="60.2923%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (27 samples, 0.82%)</title><rect x="60.9182%" y="693" width="0.8155%" height="15" fill="rgb(205,127,43)" fg:x="2017" fg:w="27"/><text x="61.1682%" y="703.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (1 samples, 0.03%)</title><rect x="61.7034%" y="677" width="0.0302%" height="15" fill="rgb(250,162,2)" fg:x="2043" fg:w="1"/><text x="61.9534%" y="687.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srlv_epi64 (1 samples, 0.03%)</title><rect x="61.7336%" y="693" width="0.0302%" height="15" fill="rgb(220,13,41)" fg:x="2044" fg:w="1"/><text x="61.9836%" y="703.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.03%)</title><rect x="61.7638%" y="677" width="0.0302%" height="15" fill="rgb(249,221,25)" fg:x="2045" fg:w="1"/><text x="62.0138%" y="687.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier as core::convert::From&lt;poly1305::backend::avx2::helpers::Aligned130&gt;&gt;::from (1 samples, 0.03%)</title><rect x="61.7638%" y="661" width="0.0302%" height="15" fill="rgb(215,208,19)" fg:x="2045" fg:w="1"/><text x="62.0138%" y="671.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.03%)</title><rect x="61.7638%" y="645" width="0.0302%" height="15" fill="rgb(236,175,2)" fg:x="2045" fg:w="1"/><text x="62.0138%" y="655.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.03%)</title><rect x="61.7638%" y="629" width="0.0302%" height="15" fill="rgb(241,52,2)" fg:x="2045" fg:w="1"/><text x="62.0138%" y="639.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::encrypt_in_place_detached (1 samples, 0.03%)</title><rect x="61.8242%" y="645" width="0.0302%" height="15" fill="rgb(248,140,14)" fg:x="2047" fg:w="1"/><text x="62.0742%" y="655.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (2 samples, 0.06%)</title><rect x="61.8544%" y="645" width="0.0604%" height="15" fill="rgb(253,22,42)" fg:x="2048" fg:w="2"/><text x="62.1044%" y="655.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (1 samples, 0.03%)</title><rect x="61.8846%" y="629" width="0.0302%" height="15" fill="rgb(234,61,47)" fg:x="2049" fg:w="1"/><text x="62.1346%" y="639.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (1 samples, 0.03%)</title><rect x="61.9148%" y="645" width="0.0302%" height="15" fill="rgb(208,226,15)" fg:x="2050" fg:w="1"/><text x="62.1648%" y="655.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="61.9148%" y="629" width="0.0302%" height="15" fill="rgb(217,221,4)" fg:x="2050" fg:w="1"/><text x="62.1648%" y="639.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (3 samples, 0.09%)</title><rect x="61.9450%" y="645" width="0.0906%" height="15" fill="rgb(212,174,34)" fg:x="2051" fg:w="3"/><text x="62.1950%" y="655.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (2 samples, 0.06%)</title><rect x="61.9752%" y="629" width="0.0604%" height="15" fill="rgb(253,83,4)" fg:x="2052" fg:w="2"/><text x="62.2252%" y="639.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (2 samples, 0.06%)</title><rect x="61.9752%" y="613" width="0.0604%" height="15" fill="rgb(250,195,49)" fg:x="2052" fg:w="2"/><text x="62.2252%" y="623.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (2 samples, 0.06%)</title><rect x="61.9752%" y="597" width="0.0604%" height="15" fill="rgb(241,192,25)" fg:x="2052" fg:w="2"/><text x="62.2252%" y="607.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (2 samples, 0.06%)</title><rect x="62.0356%" y="645" width="0.0604%" height="15" fill="rgb(208,124,10)" fg:x="2054" fg:w="2"/><text x="62.2856%" y="655.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier as core::ops::arith::Mul&gt;::mul (11 samples, 0.33%)</title><rect x="61.7940%" y="677" width="0.3322%" height="15" fill="rgb(222,33,0)" fg:x="2046" fg:w="11"/><text x="62.0440%" y="687.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (11 samples, 0.33%)</title><rect x="61.7940%" y="661" width="0.3322%" height="15" fill="rgb(234,209,28)" fg:x="2046" fg:w="11"/><text x="62.0440%" y="671.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (1 samples, 0.03%)</title><rect x="62.0960%" y="645" width="0.0302%" height="15" fill="rgb(224,11,23)" fg:x="2056" fg:w="1"/><text x="62.3460%" y="655.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="62.1262%" y="677" width="0.0302%" height="15" fill="rgb(232,99,1)" fg:x="2057" fg:w="1"/><text x="62.3762%" y="687.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="62.1262%" y="661" width="0.0302%" height="15" fill="rgb(237,95,45)" fg:x="2057" fg:w="1"/><text x="62.3762%" y="671.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="62.1262%" y="645" width="0.0302%" height="15" fill="rgb(208,109,11)" fg:x="2057" fg:w="1"/><text x="62.3762%" y="655.50"></text></g><g><title>core::core_arch::simd::i8x32::new (1 samples, 0.03%)</title><rect x="62.1262%" y="629" width="0.0302%" height="15" fill="rgb(216,190,48)" fg:x="2057" fg:w="1"/><text x="62.3762%" y="639.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier as core::ops::arith::Mul&gt;::mul (1 samples, 0.03%)</title><rect x="62.1564%" y="645" width="0.0302%" height="15" fill="rgb(251,171,36)" fg:x="2058" fg:w="1"/><text x="62.4064%" y="655.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (1 samples, 0.03%)</title><rect x="62.1564%" y="629" width="0.0302%" height="15" fill="rgb(230,62,22)" fg:x="2058" fg:w="1"/><text x="62.4064%" y="639.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.03%)</title><rect x="62.1867%" y="645" width="0.0302%" height="15" fill="rgb(225,114,35)" fg:x="2059" fg:w="1"/><text x="62.4367%" y="655.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="62.1867%" y="629" width="0.0302%" height="15" fill="rgb(215,118,42)" fg:x="2059" fg:w="1"/><text x="62.4367%" y="639.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="62.1867%" y="613" width="0.0302%" height="15" fill="rgb(243,119,21)" fg:x="2059" fg:w="1"/><text x="62.4367%" y="623.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="62.1867%" y="597" width="0.0302%" height="15" fill="rgb(252,177,53)" fg:x="2059" fg:w="1"/><text x="62.4367%" y="607.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (1 samples, 0.03%)</title><rect x="62.2169%" y="645" width="0.0302%" height="15" fill="rgb(237,209,29)" fg:x="2060" fg:w="1"/><text x="62.4669%" y="655.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.03%)</title><rect x="62.2169%" y="629" width="0.0302%" height="15" fill="rgb(212,65,23)" fg:x="2060" fg:w="1"/><text x="62.4669%" y="639.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srlv_epi64 (1 samples, 0.03%)</title><rect x="62.2471%" y="645" width="0.0302%" height="15" fill="rgb(230,222,46)" fg:x="2061" fg:w="1"/><text x="62.4971%" y="655.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="62.2471%" y="629" width="0.0302%" height="15" fill="rgb(215,135,32)" fg:x="2061" fg:w="1"/><text x="62.4971%" y="639.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="62.2471%" y="613" width="0.0302%" height="15" fill="rgb(246,101,22)" fg:x="2061" fg:w="1"/><text x="62.4971%" y="623.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="62.2471%" y="597" width="0.0302%" height="15" fill="rgb(206,107,13)" fg:x="2061" fg:w="1"/><text x="62.4971%" y="607.50"></text></g><g><title>core::core_arch::simd::i8x32::new (1 samples, 0.03%)</title><rect x="62.2471%" y="581" width="0.0302%" height="15" fill="rgb(250,100,44)" fg:x="2061" fg:w="1"/><text x="62.4971%" y="591.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.03%)</title><rect x="62.2773%" y="645" width="0.0302%" height="15" fill="rgb(231,147,38)" fg:x="2062" fg:w="1"/><text x="62.5273%" y="655.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi64x (1 samples, 0.03%)</title><rect x="62.2773%" y="629" width="0.0302%" height="15" fill="rgb(229,8,40)" fg:x="2062" fg:w="1"/><text x="62.5273%" y="639.50"></text></g><g><title>core::core_arch::simd::i64x4::new (1 samples, 0.03%)</title><rect x="62.2773%" y="613" width="0.0302%" height="15" fill="rgb(221,135,30)" fg:x="2062" fg:w="1"/><text x="62.5273%" y="623.50"></text></g><g><title>poly1305::backend::avx2::helpers::adc (6 samples, 0.18%)</title><rect x="62.1564%" y="661" width="0.1812%" height="15" fill="rgb(249,193,18)" fg:x="2058" fg:w="6"/><text x="62.4064%" y="671.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="62.3075%" y="645" width="0.0302%" height="15" fill="rgb(209,133,39)" fg:x="2063" fg:w="1"/><text x="62.5575%" y="655.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (21 samples, 0.63%)</title><rect x="61.7336%" y="709" width="0.6342%" height="15" fill="rgb(232,100,14)" fg:x="2044" fg:w="21"/><text x="61.9836%" y="719.50"></text></g><g><title>poly1305::backend::avx2::helpers::SpacedMultiplier4x130::new (20 samples, 0.60%)</title><rect x="61.7638%" y="693" width="0.6040%" height="15" fill="rgb(224,185,1)" fg:x="2045" fg:w="20"/><text x="62.0138%" y="703.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced130::reduce (7 samples, 0.21%)</title><rect x="62.1564%" y="677" width="0.2114%" height="15" fill="rgb(223,139,8)" fg:x="2058" fg:w="7"/><text x="62.4064%" y="687.50"></text></g><g><title>poly1305::backend::avx2::helpers::red (1 samples, 0.03%)</title><rect x="62.3377%" y="661" width="0.0302%" height="15" fill="rgb(232,213,38)" fg:x="2064" fg:w="1"/><text x="62.5877%" y="671.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="62.3377%" y="645" width="0.0302%" height="15" fill="rgb(207,94,22)" fg:x="2064" fg:w="1"/><text x="62.5877%" y="655.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="62.3377%" y="629" width="0.0302%" height="15" fill="rgb(219,183,54)" fg:x="2064" fg:w="1"/><text x="62.5877%" y="639.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="62.3377%" y="613" width="0.0302%" height="15" fill="rgb(216,185,54)" fg:x="2064" fg:w="1"/><text x="62.5877%" y="623.50"></text></g><g><title>core::core_arch::simd::i8x32::new (1 samples, 0.03%)</title><rect x="62.3377%" y="597" width="0.0302%" height="15" fill="rgb(254,217,39)" fg:x="2064" fg:w="1"/><text x="62.5877%" y="607.50"></text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_loaded_blocks (1 samples, 0.03%)</title><rect x="62.3679%" y="709" width="0.0302%" height="15" fill="rgb(240,178,23)" fg:x="2065" fg:w="1"/><text x="62.6179%" y="719.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (1 samples, 0.03%)</title><rect x="62.3981%" y="709" width="0.0302%" height="15" fill="rgb(218,11,47)" fg:x="2066" fg:w="1"/><text x="62.6481%" y="719.50"></text></g><g><title>rustix::backend::arch::asm::syscall4 (1 samples, 0.03%)</title><rect x="62.4283%" y="709" width="0.0302%" height="15" fill="rgb(218,51,51)" fg:x="2067" fg:w="1"/><text x="62.6783%" y="719.50"></text></g><g><title>std::rt::lang_start::{{closure}} (1 samples, 0.03%)</title><rect x="62.4585%" y="709" width="0.0302%" height="15" fill="rgb(238,126,27)" fg:x="2068" fg:w="1"/><text x="62.7085%" y="719.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.03%)</title><rect x="62.4585%" y="693" width="0.0302%" height="15" fill="rgb(249,202,22)" fg:x="2068" fg:w="1"/><text x="62.7085%" y="703.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.03%)</title><rect x="62.4585%" y="677" width="0.0302%" height="15" fill="rgb(254,195,49)" fg:x="2068" fg:w="1"/><text x="62.7085%" y="687.50"></text></g><g><title>tftp::main (1 samples, 0.03%)</title><rect x="62.4585%" y="661" width="0.0302%" height="15" fill="rgb(208,123,14)" fg:x="2068" fg:w="1"/><text x="62.7085%" y="671.50"></text></g><g><title>tftp::sender::start_send (1 samples, 0.03%)</title><rect x="62.4585%" y="645" width="0.0302%" height="15" fill="rgb(224,200,8)" fg:x="2068" fg:w="1"/><text x="62.7085%" y="655.50"></text></g><g><title>tftp::client::sender::send_file (1 samples, 0.03%)</title><rect x="62.4585%" y="629" width="0.0302%" height="15" fill="rgb(217,61,36)" fg:x="2068" fg:w="1"/><text x="62.7085%" y="639.50"></text></g><g><title>log::max_level (1 samples, 0.03%)</title><rect x="62.4585%" y="613" width="0.0302%" height="15" fill="rgb(206,35,45)" fg:x="2068" fg:w="1"/><text x="62.7085%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.03%)</title><rect x="62.4585%" y="597" width="0.0302%" height="15" fill="rgb(217,65,33)" fg:x="2068" fg:w="1"/><text x="62.7085%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.03%)</title><rect x="62.4585%" y="581" width="0.0302%" height="15" fill="rgb(222,158,48)" fg:x="2068" fg:w="1"/><text x="62.7085%" y="591.50"></text></g><g><title>core::cmp::PartialOrd::le (1 samples, 0.03%)</title><rect x="62.5189%" y="469" width="0.0302%" height="15" fill="rgb(254,2,54)" fg:x="2070" fg:w="1"/><text x="62.7689%" y="479.50"></text></g><g><title>tftp::buffer::resize_buffer (1 samples, 0.03%)</title><rect x="62.5491%" y="469" width="0.0302%" height="15" fill="rgb(250,143,38)" fg:x="2071" fg:w="1"/><text x="62.7991%" y="479.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.03%)</title><rect x="62.5491%" y="453" width="0.0302%" height="15" fill="rgb(248,25,0)" fg:x="2071" fg:w="1"/><text x="62.7991%" y="463.50"></text></g><g><title>std::rt::lang_start_internal (4 samples, 0.12%)</title><rect x="62.4887%" y="709" width="0.1208%" height="15" fill="rgb(206,152,27)" fg:x="2069" fg:w="4"/><text x="62.7387%" y="719.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.12%)</title><rect x="62.4887%" y="693" width="0.1208%" height="15" fill="rgb(240,77,30)" fg:x="2069" fg:w="4"/><text x="62.7387%" y="703.50"></text></g><g><title>std::panicking::try (4 samples, 0.12%)</title><rect x="62.4887%" y="677" width="0.1208%" height="15" fill="rgb(231,5,3)" fg:x="2069" fg:w="4"/><text x="62.7387%" y="687.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.12%)</title><rect x="62.4887%" y="661" width="0.1208%" height="15" fill="rgb(207,226,32)" fg:x="2069" fg:w="4"/><text x="62.7387%" y="671.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (4 samples, 0.12%)</title><rect x="62.4887%" y="645" width="0.1208%" height="15" fill="rgb(222,207,47)" fg:x="2069" fg:w="4"/><text x="62.7387%" y="655.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.12%)</title><rect x="62.4887%" y="629" width="0.1208%" height="15" fill="rgb(229,115,45)" fg:x="2069" fg:w="4"/><text x="62.7387%" y="639.50"></text></g><g><title>std::panicking::try (4 samples, 0.12%)</title><rect x="62.4887%" y="613" width="0.1208%" height="15" fill="rgb(224,191,6)" fg:x="2069" fg:w="4"/><text x="62.7387%" y="623.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.12%)</title><rect x="62.4887%" y="597" width="0.1208%" height="15" fill="rgb(230,227,24)" fg:x="2069" fg:w="4"/><text x="62.7387%" y="607.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (4 samples, 0.12%)</title><rect x="62.4887%" y="581" width="0.1208%" height="15" fill="rgb(228,80,19)" fg:x="2069" fg:w="4"/><text x="62.7387%" y="591.50"></text></g><g><title>std::rt::lang_start::{{closure}} (4 samples, 0.12%)</title><rect x="62.4887%" y="565" width="0.1208%" height="15" fill="rgb(247,229,0)" fg:x="2069" fg:w="4"/><text x="62.7387%" y="575.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (4 samples, 0.12%)</title><rect x="62.4887%" y="549" width="0.1208%" height="15" fill="rgb(237,194,15)" fg:x="2069" fg:w="4"/><text x="62.7387%" y="559.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4 samples, 0.12%)</title><rect x="62.4887%" y="533" width="0.1208%" height="15" fill="rgb(219,203,20)" fg:x="2069" fg:w="4"/><text x="62.7387%" y="543.50"></text></g><g><title>tftp::main (4 samples, 0.12%)</title><rect x="62.4887%" y="517" width="0.1208%" height="15" fill="rgb(234,128,8)" fg:x="2069" fg:w="4"/><text x="62.7387%" y="527.50"></text></g><g><title>tftp::sender::start_send (4 samples, 0.12%)</title><rect x="62.4887%" y="501" width="0.1208%" height="15" fill="rgb(248,202,8)" fg:x="2069" fg:w="4"/><text x="62.7387%" y="511.50"></text></g><g><title>tftp::client::sender::send_file (4 samples, 0.12%)</title><rect x="62.4887%" y="485" width="0.1208%" height="15" fill="rgb(206,104,37)" fg:x="2069" fg:w="4"/><text x="62.7387%" y="495.50"></text></g><g><title>tftp::packet::PacketType::from_bytes (1 samples, 0.03%)</title><rect x="62.5793%" y="469" width="0.0302%" height="15" fill="rgb(223,8,27)" fg:x="2072" fg:w="1"/><text x="62.8293%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="62.5793%" y="453" width="0.0302%" height="15" fill="rgb(216,217,28)" fg:x="2072" fg:w="1"/><text x="62.8293%" y="463.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (1 samples, 0.03%)</title><rect x="62.6095%" y="709" width="0.0302%" height="15" fill="rgb(249,199,1)" fg:x="2073" fg:w="1"/><text x="62.8595%" y="719.50"></text></g><g><title>__x64_sys_read (1 samples, 0.03%)</title><rect x="62.7001%" y="533" width="0.0302%" height="15" fill="rgb(240,85,17)" fg:x="2076" fg:w="1"/><text x="62.9501%" y="543.50"></text></g><g><title>__fdget_pos (1 samples, 0.03%)</title><rect x="62.7303%" y="517" width="0.0302%" height="15" fill="rgb(206,108,45)" fg:x="2077" fg:w="1"/><text x="62.9803%" y="527.50"></text></g><g><title>polling::epoll::Notifier::clear (4 samples, 0.12%)</title><rect x="62.7001%" y="629" width="0.1208%" height="15" fill="rgb(245,210,41)" fg:x="2076" fg:w="4"/><text x="62.9501%" y="639.50"></text></g><g><title>rustix::io::read_write::read (4 samples, 0.12%)</title><rect x="62.7001%" y="613" width="0.1208%" height="15" fill="rgb(206,13,37)" fg:x="2076" fg:w="4"/><text x="62.9501%" y="623.50"></text></g><g><title>rustix::backend::io::syscalls::read (4 samples, 0.12%)</title><rect x="62.7001%" y="597" width="0.1208%" height="15" fill="rgb(250,61,18)" fg:x="2076" fg:w="4"/><text x="62.9501%" y="607.50"></text></g><g><title>rustix::backend::arch::asm::syscall3 (4 samples, 0.12%)</title><rect x="62.7001%" y="581" width="0.1208%" height="15" fill="rgb(235,172,48)" fg:x="2076" fg:w="4"/><text x="62.9501%" y="591.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4 samples, 0.12%)</title><rect x="62.7001%" y="565" width="0.1208%" height="15" fill="rgb(249,201,17)" fg:x="2076" fg:w="4"/><text x="62.9501%" y="575.50"></text></g><g><title>do_syscall_64 (4 samples, 0.12%)</title><rect x="62.7001%" y="549" width="0.1208%" height="15" fill="rgb(219,208,6)" fg:x="2076" fg:w="4"/><text x="62.9501%" y="559.50"></text></g><g><title>ksys_read (3 samples, 0.09%)</title><rect x="62.7303%" y="533" width="0.0906%" height="15" fill="rgb(248,31,23)" fg:x="2077" fg:w="3"/><text x="62.9803%" y="543.50"></text></g><g><title>vfs_read (2 samples, 0.06%)</title><rect x="62.7605%" y="517" width="0.0604%" height="15" fill="rgb(245,15,42)" fg:x="2078" fg:w="2"/><text x="63.0105%" y="527.50"></text></g><g><title>security_file_permission (2 samples, 0.06%)</title><rect x="62.7605%" y="501" width="0.0604%" height="15" fill="rgb(222,217,39)" fg:x="2078" fg:w="2"/><text x="63.0105%" y="511.50"></text></g><g><title>apparmor_file_permission (1 samples, 0.03%)</title><rect x="62.7907%" y="485" width="0.0302%" height="15" fill="rgb(210,219,27)" fg:x="2079" fg:w="1"/><text x="63.0407%" y="495.50"></text></g><g><title>aa_file_perm (1 samples, 0.03%)</title><rect x="62.7907%" y="469" width="0.0302%" height="15" fill="rgb(252,166,36)" fg:x="2079" fg:w="1"/><text x="63.0407%" y="479.50"></text></g><g><title>&lt;tracing_core::metadata::Level as core::cmp::PartialOrd&lt;tracing_core::metadata::LevelFilter&gt;&gt;::le (1 samples, 0.03%)</title><rect x="62.8209%" y="613" width="0.0302%" height="15" fill="rgb(245,132,34)" fg:x="2080" fg:w="1"/><text x="63.0709%" y="623.50"></text></g><g><title>__x64_sys_epoll_ctl (1 samples, 0.03%)</title><rect x="62.8511%" y="533" width="0.0302%" height="15" fill="rgb(236,54,3)" fg:x="2081" fg:w="1"/><text x="63.1011%" y="543.50"></text></g><g><title>rustix::backend::arch::asm::syscall4_readonly (2 samples, 0.06%)</title><rect x="62.8511%" y="581" width="0.0604%" height="15" fill="rgb(241,173,43)" fg:x="2081" fg:w="2"/><text x="63.1011%" y="591.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.06%)</title><rect x="62.8511%" y="565" width="0.0604%" height="15" fill="rgb(215,190,9)" fg:x="2081" fg:w="2"/><text x="63.1011%" y="575.50"></text></g><g><title>do_syscall_64 (2 samples, 0.06%)</title><rect x="62.8511%" y="549" width="0.0604%" height="15" fill="rgb(242,101,16)" fg:x="2081" fg:w="2"/><text x="63.1011%" y="559.50"></text></g><g><title>syscall_exit_to_user_mode (1 samples, 0.03%)</title><rect x="62.8813%" y="533" width="0.0302%" height="15" fill="rgb(223,190,21)" fg:x="2082" fg:w="1"/><text x="63.1313%" y="543.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.03%)</title><rect x="62.8813%" y="517" width="0.0302%" height="15" fill="rgb(215,228,25)" fg:x="2082" fg:w="1"/><text x="63.1313%" y="527.50"></text></g><g><title>&lt;tftp::socket::UdpUnboundSocket as tftp::socket::Socket&gt;::recv_from (8 samples, 0.24%)</title><rect x="62.7001%" y="677" width="0.2416%" height="15" fill="rgb(225,36,22)" fg:x="2076" fg:w="8"/><text x="62.9501%" y="687.50"></text></g><g><title>polling::Poller::wait (8 samples, 0.24%)</title><rect x="62.7001%" y="661" width="0.2416%" height="15" fill="rgb(251,106,46)" fg:x="2076" fg:w="8"/><text x="62.9501%" y="671.50"></text></g><g><title>polling::epoll::Poller::wait (8 samples, 0.24%)</title><rect x="62.7001%" y="645" width="0.2416%" height="15" fill="rgb(208,90,1)" fg:x="2076" fg:w="8"/><text x="62.9501%" y="655.50"></text></g><g><title>polling::epoll::Poller::modify (4 samples, 0.12%)</title><rect x="62.8209%" y="629" width="0.1208%" height="15" fill="rgb(243,10,4)" fg:x="2080" fg:w="4"/><text x="63.0709%" y="639.50"></text></g><g><title>rustix::backend::event::epoll::modify (3 samples, 0.09%)</title><rect x="62.8511%" y="613" width="0.0906%" height="15" fill="rgb(212,137,27)" fg:x="2081" fg:w="3"/><text x="63.1011%" y="623.50"></text></g><g><title>rustix::backend::event::syscalls::epoll_mod (3 samples, 0.09%)</title><rect x="62.8511%" y="597" width="0.0906%" height="15" fill="rgb(231,220,49)" fg:x="2081" fg:w="3"/><text x="63.1011%" y="607.50"></text></g><g><title>rustix::backend::conv::ret (1 samples, 0.03%)</title><rect x="62.9115%" y="581" width="0.0302%" height="15" fill="rgb(237,96,20)" fg:x="2083" fg:w="1"/><text x="63.1615%" y="591.50"></text></g><g><title>rustix::backend::io::errno::try_decode_void (1 samples, 0.03%)</title><rect x="62.9115%" y="565" width="0.0302%" height="15" fill="rgb(239,229,30)" fg:x="2083" fg:w="1"/><text x="63.1615%" y="575.50"></text></g><g><title>rustix::backend::reg::RetReg&lt;Num&gt;::decode_void (1 samples, 0.03%)</title><rect x="62.9115%" y="549" width="0.0302%" height="15" fill="rgb(219,65,33)" fg:x="2083" fg:w="1"/><text x="63.1615%" y="559.50"></text></g><g><title>rustix::backend::reg::RetReg&lt;Num&gt;::decode_usize (1 samples, 0.03%)</title><rect x="62.9115%" y="533" width="0.0302%" height="15" fill="rgb(243,134,7)" fg:x="2083" fg:w="1"/><text x="63.1615%" y="543.50"></text></g><g><title>core::ops::range::Range&lt;Idx&gt;::contains (1 samples, 0.03%)</title><rect x="62.9115%" y="517" width="0.0302%" height="15" fill="rgb(216,177,54)" fg:x="2083" fg:w="1"/><text x="63.1615%" y="527.50"></text></g><g><title>core::ops::range::RangeBounds::contains (1 samples, 0.03%)</title><rect x="62.9115%" y="501" width="0.0302%" height="15" fill="rgb(211,160,20)" fg:x="2083" fg:w="1"/><text x="63.1615%" y="511.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::ops::range::RangeBounds&lt;T&gt;&gt;::end_bound (1 samples, 0.03%)</title><rect x="62.9115%" y="485" width="0.0302%" height="15" fill="rgb(239,85,39)" fg:x="2083" fg:w="1"/><text x="63.1615%" y="495.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="62.9417%" y="501" width="0.0302%" height="15" fill="rgb(232,125,22)" fg:x="2084" fg:w="1"/><text x="63.1917%" y="511.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.03%)</title><rect x="62.9719%" y="453" width="0.0302%" height="15" fill="rgb(244,57,34)" fg:x="2085" fg:w="1"/><text x="63.2219%" y="463.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::authenticate_lengths (3 samples, 0.09%)</title><rect x="62.9417%" y="613" width="0.0906%" height="15" fill="rgb(214,203,32)" fg:x="2084" fg:w="3"/><text x="63.1917%" y="623.50"></text></g><g><title>universal_hash::UniversalHash::update (3 samples, 0.09%)</title><rect x="62.9417%" y="597" width="0.0906%" height="15" fill="rgb(207,58,43)" fg:x="2084" fg:w="3"/><text x="63.1917%" y="607.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (3 samples, 0.09%)</title><rect x="62.9417%" y="581" width="0.0906%" height="15" fill="rgb(215,193,15)" fg:x="2084" fg:w="3"/><text x="63.1917%" y="591.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (3 samples, 0.09%)</title><rect x="62.9417%" y="565" width="0.0906%" height="15" fill="rgb(232,15,44)" fg:x="2084" fg:w="3"/><text x="63.1917%" y="575.50"></text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (3 samples, 0.09%)</title><rect x="62.9417%" y="549" width="0.0906%" height="15" fill="rgb(212,3,48)" fg:x="2084" fg:w="3"/><text x="63.1917%" y="559.50"></text></g><g><title>&lt;poly1305::backend::avx2::State as universal_hash::UhfBackend&gt;::proc_block (3 samples, 0.09%)</title><rect x="62.9417%" y="533" width="0.0906%" height="15" fill="rgb(218,128,7)" fg:x="2084" fg:w="3"/><text x="63.1917%" y="543.50"></text></g><g><title>poly1305::backend::avx2::State::compute_block (3 samples, 0.09%)</title><rect x="62.9417%" y="517" width="0.0906%" height="15" fill="rgb(226,216,39)" fg:x="2084" fg:w="3"/><text x="63.1917%" y="527.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (2 samples, 0.06%)</title><rect x="62.9719%" y="501" width="0.0604%" height="15" fill="rgb(243,47,51)" fg:x="2085" fg:w="2"/><text x="63.2219%" y="511.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (2 samples, 0.06%)</title><rect x="62.9719%" y="485" width="0.0604%" height="15" fill="rgb(241,183,40)" fg:x="2085" fg:w="2"/><text x="63.2219%" y="495.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (2 samples, 0.06%)</title><rect x="62.9719%" y="469" width="0.0604%" height="15" fill="rgb(231,217,32)" fg:x="2085" fg:w="2"/><text x="63.2219%" y="479.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi64x (1 samples, 0.03%)</title><rect x="63.0021%" y="453" width="0.0302%" height="15" fill="rgb(229,61,38)" fg:x="2086" fg:w="1"/><text x="63.2521%" y="463.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="63.0323%" y="453" width="0.0302%" height="15" fill="rgb(225,210,5)" fg:x="2087" fg:w="1"/><text x="63.2823%" y="463.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (1 samples, 0.03%)</title><rect x="63.0625%" y="437" width="0.0302%" height="15" fill="rgb(231,79,45)" fg:x="2088" fg:w="1"/><text x="63.3125%" y="447.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.03%)</title><rect x="63.0625%" y="421" width="0.0302%" height="15" fill="rgb(224,100,7)" fg:x="2088" fg:w="1"/><text x="63.3125%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="63.0927%" y="437" width="0.0302%" height="15" fill="rgb(241,198,18)" fg:x="2089" fg:w="1"/><text x="63.3427%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="63.1229%" y="437" width="0.0302%" height="15" fill="rgb(252,97,53)" fg:x="2090" fg:w="1"/><text x="63.3729%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="63.1531%" y="437" width="0.0302%" height="15" fill="rgb(220,88,7)" fg:x="2091" fg:w="1"/><text x="63.4031%" y="447.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (5 samples, 0.15%)</title><rect x="63.0625%" y="453" width="0.1510%" height="15" fill="rgb(213,176,14)" fg:x="2088" fg:w="5"/><text x="63.3125%" y="463.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="63.1833%" y="437" width="0.0302%" height="15" fill="rgb(246,73,7)" fg:x="2092" fg:w="1"/><text x="63.4333%" y="447.50"></text></g><g><title>chacha20::backends::avx2::rounds (7 samples, 0.21%)</title><rect x="63.0323%" y="469" width="0.2114%" height="15" fill="rgb(245,64,36)" fg:x="2087" fg:w="7"/><text x="63.2823%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="63.2135%" y="453" width="0.0302%" height="15" fill="rgb(245,80,10)" fg:x="2093" fg:w="1"/><text x="63.4635%" y="463.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_par_ks_blocks (8 samples, 0.24%)</title><rect x="63.0323%" y="485" width="0.2416%" height="15" fill="rgb(232,107,50)" fg:x="2087" fg:w="8"/><text x="63.2823%" y="495.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="63.2437%" y="469" width="0.0302%" height="15" fill="rgb(253,3,0)" fg:x="2094" fg:w="1"/><text x="63.4937%" y="479.50"></text></g><g><title>cipher::stream_core::StreamBackend::gen_tail_blocks (1 samples, 0.03%)</title><rect x="63.2739%" y="485" width="0.0302%" height="15" fill="rgb(212,99,53)" fg:x="2095" fg:w="1"/><text x="63.5239%" y="495.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (1 samples, 0.03%)</title><rect x="63.2739%" y="469" width="0.0302%" height="15" fill="rgb(249,111,54)" fg:x="2095" fg:w="1"/><text x="63.5239%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="63.2739%" y="453" width="0.0302%" height="15" fill="rgb(249,55,30)" fg:x="2095" fg:w="1"/><text x="63.5239%" y="463.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.03%)</title><rect x="63.7874%" y="453" width="0.0302%" height="15" fill="rgb(237,47,42)" fg:x="2112" fg:w="1"/><text x="64.0374%" y="463.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (1 samples, 0.03%)</title><rect x="63.7874%" y="437" width="0.0302%" height="15" fill="rgb(211,20,18)" fg:x="2112" fg:w="1"/><text x="64.0374%" y="447.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::Deref&gt;::deref (8 samples, 0.24%)</title><rect x="63.6364%" y="469" width="0.2416%" height="15" fill="rgb(231,203,46)" fg:x="2107" fg:w="8"/><text x="63.8864%" y="479.50"></text></g><g><title>core::slice::raw::from_raw_parts (2 samples, 0.06%)</title><rect x="63.8176%" y="453" width="0.0604%" height="15" fill="rgb(237,142,3)" fg:x="2113" fg:w="2"/><text x="64.0676%" y="463.50"></text></g><g><title>core::ptr::slice_from_raw_parts (2 samples, 0.06%)</title><rect x="63.8176%" y="437" width="0.0604%" height="15" fill="rgb(241,107,1)" fg:x="2113" fg:w="2"/><text x="64.0676%" y="447.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (2 samples, 0.06%)</title><rect x="63.8176%" y="421" width="0.0604%" height="15" fill="rgb(229,83,13)" fg:x="2113" fg:w="2"/><text x="64.0676%" y="431.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (4 samples, 0.12%)</title><rect x="63.8780%" y="469" width="0.1208%" height="15" fill="rgb(241,91,40)" fg:x="2115" fg:w="4"/><text x="64.1280%" y="479.50"></text></g><g><title>core::slice::raw::from_raw_parts (2 samples, 0.06%)</title><rect x="63.9384%" y="453" width="0.0604%" height="15" fill="rgb(225,3,45)" fg:x="2117" fg:w="2"/><text x="64.1884%" y="463.50"></text></g><g><title>core::ptr::slice_from_raw_parts (2 samples, 0.06%)</title><rect x="63.9384%" y="437" width="0.0604%" height="15" fill="rgb(244,223,14)" fg:x="2117" fg:w="2"/><text x="64.1884%" y="447.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (2 samples, 0.06%)</title><rect x="63.9384%" y="421" width="0.0604%" height="15" fill="rgb(224,124,37)" fg:x="2117" fg:w="2"/><text x="64.1884%" y="431.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.03%)</title><rect x="63.9988%" y="469" width="0.0302%" height="15" fill="rgb(251,171,30)" fg:x="2119" fg:w="1"/><text x="64.2488%" y="479.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.03%)</title><rect x="63.9988%" y="453" width="0.0302%" height="15" fill="rgb(236,46,54)" fg:x="2119" fg:w="1"/><text x="64.2488%" y="463.50"></text></g><g><title>chacha20::backends::avx2::inner (34 samples, 1.03%)</title><rect x="63.0323%" y="517" width="1.0269%" height="15" fill="rgb(245,213,5)" fg:x="2087" fg:w="34"/><text x="63.2823%" y="527.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (34 samples, 1.03%)</title><rect x="63.0323%" y="501" width="1.0269%" height="15" fill="rgb(230,144,27)" fg:x="2087" fg:w="34"/><text x="63.2823%" y="511.50"></text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;generic_array::GenericArray&lt;u8,N&gt;,M&gt;&gt;::xor_in2out (25 samples, 0.76%)</title><rect x="63.3041%" y="485" width="0.7551%" height="15" fill="rgb(220,86,6)" fg:x="2096" fg:w="25"/><text x="63.5541%" y="495.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.03%)</title><rect x="64.0290%" y="469" width="0.0302%" height="15" fill="rgb(240,20,13)" fg:x="2120" fg:w="1"/><text x="64.2790%" y="479.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.03%)</title><rect x="64.0290%" y="453" width="0.0302%" height="15" fill="rgb(217,89,34)" fg:x="2120" fg:w="1"/><text x="64.2790%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.03%)</title><rect x="64.0290%" y="437" width="0.0302%" height="15" fill="rgb(229,13,5)" fg:x="2120" fg:w="1"/><text x="64.2790%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="64.0290%" y="421" width="0.0302%" height="15" fill="rgb(244,67,35)" fg:x="2120" fg:w="1"/><text x="64.2790%" y="431.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="64.0290%" y="405" width="0.0302%" height="15" fill="rgb(221,40,2)" fg:x="2120" fg:w="1"/><text x="64.2790%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.03%)</title><rect x="64.0290%" y="389" width="0.0302%" height="15" fill="rgb(237,157,21)" fg:x="2120" fg:w="1"/><text x="64.2790%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.03%)</title><rect x="64.0290%" y="373" width="0.0302%" height="15" fill="rgb(222,94,11)" fg:x="2120" fg:w="1"/><text x="64.2790%" y="383.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (1 samples, 0.03%)</title><rect x="64.0290%" y="357" width="0.0302%" height="15" fill="rgb(249,113,6)" fg:x="2120" fg:w="1"/><text x="64.2790%" y="367.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (1 samples, 0.03%)</title><rect x="64.0290%" y="341" width="0.0302%" height="15" fill="rgb(238,137,36)" fg:x="2120" fg:w="1"/><text x="64.2790%" y="351.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.03%)</title><rect x="64.0290%" y="325" width="0.0302%" height="15" fill="rgb(210,102,26)" fg:x="2120" fg:w="1"/><text x="64.2790%" y="335.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.03%)</title><rect x="64.0290%" y="309" width="0.0302%" height="15" fill="rgb(218,30,30)" fg:x="2120" fg:w="1"/><text x="64.2790%" y="319.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (1 samples, 0.03%)</title><rect x="64.0290%" y="293" width="0.0302%" height="15" fill="rgb(214,67,26)" fg:x="2120" fg:w="1"/><text x="64.2790%" y="303.50"></text></g><g><title>core::ptr::read (1 samples, 0.03%)</title><rect x="64.0290%" y="277" width="0.0302%" height="15" fill="rgb(251,9,53)" fg:x="2120" fg:w="1"/><text x="64.2790%" y="287.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (1 samples, 0.03%)</title><rect x="64.0290%" y="261" width="0.0302%" height="15" fill="rgb(228,204,25)" fg:x="2120" fg:w="1"/><text x="64.2790%" y="271.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="64.0290%" y="245" width="0.0302%" height="15" fill="rgb(207,153,8)" fg:x="2120" fg:w="1"/><text x="64.2790%" y="255.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="64.0592%" y="517" width="0.0302%" height="15" fill="rgb(242,9,16)" fg:x="2121" fg:w="1"/><text x="64.3092%" y="527.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (36 samples, 1.09%)</title><rect x="63.0323%" y="565" width="1.0873%" height="15" fill="rgb(217,211,10)" fg:x="2087" fg:w="36"/><text x="63.2823%" y="575.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (36 samples, 1.09%)</title><rect x="63.0323%" y="549" width="1.0873%" height="15" fill="rgb(219,228,52)" fg:x="2087" fg:w="36"/><text x="63.2823%" y="559.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (36 samples, 1.09%)</title><rect x="63.0323%" y="533" width="1.0873%" height="15" fill="rgb(231,92,29)" fg:x="2087" fg:w="36"/><text x="63.2823%" y="543.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="64.0894%" y="517" width="0.0302%" height="15" fill="rgb(232,8,23)" fg:x="2122" fg:w="1"/><text x="64.3394%" y="527.50"></text></g><g><title>chacha20::backends::avx2::inner (1 samples, 0.03%)</title><rect x="64.1196%" y="469" width="0.0302%" height="15" fill="rgb(216,211,34)" fg:x="2123" fg:w="1"/><text x="64.3696%" y="479.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (1 samples, 0.03%)</title><rect x="64.1196%" y="453" width="0.0302%" height="15" fill="rgb(236,151,0)" fg:x="2123" fg:w="1"/><text x="64.3696%" y="463.50"></text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;u8,N&gt;&gt;::xor_in2out (1 samples, 0.03%)</title><rect x="64.1196%" y="437" width="0.0302%" height="15" fill="rgb(209,168,3)" fg:x="2123" fg:w="1"/><text x="64.3696%" y="447.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="64.1498%" y="421" width="0.0302%" height="15" fill="rgb(208,129,28)" fg:x="2124" fg:w="1"/><text x="64.3998%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="64.1800%" y="421" width="0.0302%" height="15" fill="rgb(229,78,22)" fg:x="2125" fg:w="1"/><text x="64.4300%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="64.1800%" y="405" width="0.0302%" height="15" fill="rgb(228,187,13)" fg:x="2125" fg:w="1"/><text x="64.4300%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="64.2102%" y="405" width="0.0302%" height="15" fill="rgb(240,119,24)" fg:x="2126" fg:w="1"/><text x="64.4602%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (2 samples, 0.06%)</title><rect x="64.2102%" y="421" width="0.0604%" height="15" fill="rgb(209,194,42)" fg:x="2126" fg:w="2"/><text x="64.4602%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="64.2404%" y="405" width="0.0302%" height="15" fill="rgb(247,200,46)" fg:x="2127" fg:w="1"/><text x="64.4904%" y="415.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (8 samples, 0.24%)</title><rect x="64.1498%" y="437" width="0.2416%" height="15" fill="rgb(218,76,16)" fg:x="2124" fg:w="8"/><text x="64.3998%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (4 samples, 0.12%)</title><rect x="64.2706%" y="421" width="0.1208%" height="15" fill="rgb(225,21,48)" fg:x="2128" fg:w="4"/><text x="64.5206%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="64.3612%" y="405" width="0.0302%" height="15" fill="rgb(239,223,50)" fg:x="2131" fg:w="1"/><text x="64.6112%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.03%)</title><rect x="64.3914%" y="421" width="0.0302%" height="15" fill="rgb(244,45,21)" fg:x="2132" fg:w="1"/><text x="64.6414%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="64.3914%" y="405" width="0.0302%" height="15" fill="rgb(232,33,43)" fg:x="2132" fg:w="1"/><text x="64.6414%" y="415.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (2 samples, 0.06%)</title><rect x="64.3914%" y="437" width="0.0604%" height="15" fill="rgb(209,8,3)" fg:x="2132" fg:w="2"/><text x="64.6414%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="64.4216%" y="421" width="0.0302%" height="15" fill="rgb(214,25,53)" fg:x="2133" fg:w="1"/><text x="64.6716%" y="431.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (1 samples, 0.03%)</title><rect x="64.4518%" y="437" width="0.0302%" height="15" fill="rgb(254,186,54)" fg:x="2134" fg:w="1"/><text x="64.7018%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.03%)</title><rect x="64.4518%" y="421" width="0.0302%" height="15" fill="rgb(208,174,49)" fg:x="2134" fg:w="1"/><text x="64.7018%" y="431.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="64.4518%" y="405" width="0.0302%" height="15" fill="rgb(233,191,51)" fg:x="2134" fg:w="1"/><text x="64.7018%" y="415.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.03%)</title><rect x="64.4820%" y="437" width="0.0302%" height="15" fill="rgb(222,134,10)" fg:x="2135" fg:w="1"/><text x="64.7320%" y="447.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (13 samples, 0.39%)</title><rect x="64.1498%" y="453" width="0.3926%" height="15" fill="rgb(230,226,20)" fg:x="2124" fg:w="13"/><text x="64.3998%" y="463.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="64.5122%" y="437" width="0.0302%" height="15" fill="rgb(251,111,25)" fg:x="2136" fg:w="1"/><text x="64.7622%" y="447.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (51 samples, 1.54%)</title><rect x="63.0323%" y="613" width="1.5403%" height="15" fill="rgb(224,40,46)" fg:x="2087" fg:w="51"/><text x="63.2823%" y="623.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (51 samples, 1.54%)</title><rect x="63.0323%" y="597" width="1.5403%" height="15" fill="rgb(236,108,47)" fg:x="2087" fg:w="51"/><text x="63.2823%" y="607.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (51 samples, 1.54%)</title><rect x="63.0323%" y="581" width="1.5403%" height="15" fill="rgb(234,93,0)" fg:x="2087" fg:w="51"/><text x="63.2823%" y="591.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::write_keystream_block (15 samples, 0.45%)</title><rect x="64.1196%" y="565" width="0.4530%" height="15" fill="rgb(224,213,32)" fg:x="2123" fg:w="15"/><text x="64.3696%" y="575.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (15 samples, 0.45%)</title><rect x="64.1196%" y="549" width="0.4530%" height="15" fill="rgb(251,11,48)" fg:x="2123" fg:w="15"/><text x="64.3696%" y="559.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (15 samples, 0.45%)</title><rect x="64.1196%" y="533" width="0.4530%" height="15" fill="rgb(236,173,5)" fg:x="2123" fg:w="15"/><text x="64.3696%" y="543.50"></text></g><g><title>chacha20::backends::avx2::inner (15 samples, 0.45%)</title><rect x="64.1196%" y="517" width="0.4530%" height="15" fill="rgb(230,95,12)" fg:x="2123" fg:w="15"/><text x="64.3696%" y="527.50"></text></g><g><title>&lt;cipher::stream_core::WriteBlockCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (15 samples, 0.45%)</title><rect x="64.1196%" y="501" width="0.4530%" height="15" fill="rgb(232,209,1)" fg:x="2123" fg:w="15"/><text x="64.3696%" y="511.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (15 samples, 0.45%)</title><rect x="64.1196%" y="485" width="0.4530%" height="15" fill="rgb(232,6,1)" fg:x="2123" fg:w="15"/><text x="64.3696%" y="495.50"></text></g><g><title>chacha20::backends::avx2::rounds (14 samples, 0.42%)</title><rect x="64.1498%" y="469" width="0.4228%" height="15" fill="rgb(210,224,50)" fg:x="2124" fg:w="14"/><text x="64.3998%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="64.5424%" y="453" width="0.0302%" height="15" fill="rgb(228,127,35)" fg:x="2137" fg:w="1"/><text x="64.7924%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.03%)</title><rect x="64.5726%" y="501" width="0.0302%" height="15" fill="rgb(245,102,45)" fg:x="2138" fg:w="1"/><text x="64.8226%" y="511.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (2 samples, 0.06%)</title><rect x="64.6028%" y="501" width="0.0604%" height="15" fill="rgb(214,1,49)" fg:x="2139" fg:w="2"/><text x="64.8528%" y="511.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.03%)</title><rect x="64.6632%" y="469" width="0.0302%" height="15" fill="rgb(226,163,40)" fg:x="2141" fg:w="1"/><text x="64.9132%" y="479.50"></text></g><g><title>core::core_arch::simd::u64x4::splat (1 samples, 0.03%)</title><rect x="64.8143%" y="453" width="0.0302%" height="15" fill="rgb(239,212,28)" fg:x="2146" fg:w="1"/><text x="65.0643%" y="463.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi32 (1 samples, 0.03%)</title><rect x="64.8445%" y="453" width="0.0302%" height="15" fill="rgb(220,20,13)" fg:x="2147" fg:w="1"/><text x="65.0945%" y="463.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi32 (1 samples, 0.03%)</title><rect x="64.8445%" y="437" width="0.0302%" height="15" fill="rgb(210,164,35)" fg:x="2147" fg:w="1"/><text x="65.0945%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (7 samples, 0.21%)</title><rect x="64.6934%" y="469" width="0.2114%" height="15" fill="rgb(248,109,41)" fg:x="2142" fg:w="7"/><text x="64.9434%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="64.8747%" y="453" width="0.0302%" height="15" fill="rgb(238,23,50)" fg:x="2148" fg:w="1"/><text x="65.1247%" y="463.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier as core::convert::From&lt;poly1305::backend::avx2::helpers::Aligned130&gt;&gt;::from (1 samples, 0.03%)</title><rect x="64.9049%" y="453" width="0.0302%" height="15" fill="rgb(211,48,49)" fg:x="2149" fg:w="1"/><text x="65.1549%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (2 samples, 0.06%)</title><rect x="64.9049%" y="469" width="0.0604%" height="15" fill="rgb(223,36,21)" fg:x="2149" fg:w="2"/><text x="65.1549%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.03%)</title><rect x="64.9351%" y="453" width="0.0302%" height="15" fill="rgb(207,123,46)" fg:x="2150" fg:w="1"/><text x="65.1851%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (2 samples, 0.06%)</title><rect x="64.9653%" y="469" width="0.0604%" height="15" fill="rgb(240,218,32)" fg:x="2151" fg:w="2"/><text x="65.2153%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.06%)</title><rect x="65.0257%" y="469" width="0.0604%" height="15" fill="rgb(252,5,43)" fg:x="2153" fg:w="2"/><text x="65.2757%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="65.0861%" y="469" width="0.0302%" height="15" fill="rgb(252,84,19)" fg:x="2155" fg:w="1"/><text x="65.3361%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (2 samples, 0.06%)</title><rect x="65.1163%" y="469" width="0.0604%" height="15" fill="rgb(243,152,39)" fg:x="2156" fg:w="2"/><text x="65.3663%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.03%)</title><rect x="65.1767%" y="469" width="0.0302%" height="15" fill="rgb(234,160,15)" fg:x="2158" fg:w="1"/><text x="65.4267%" y="479.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (3 samples, 0.09%)</title><rect x="65.2069%" y="469" width="0.0906%" height="15" fill="rgb(237,34,20)" fg:x="2159" fg:w="3"/><text x="65.4569%" y="479.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Add&gt;::add (1 samples, 0.03%)</title><rect x="65.2673%" y="453" width="0.0302%" height="15" fill="rgb(229,97,13)" fg:x="2161" fg:w="1"/><text x="65.5173%" y="463.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (23 samples, 0.69%)</title><rect x="64.6632%" y="485" width="0.6947%" height="15" fill="rgb(234,71,50)" fg:x="2141" fg:w="23"/><text x="64.9132%" y="495.50"></text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_loaded_blocks (2 samples, 0.06%)</title><rect x="65.2975%" y="469" width="0.0604%" height="15" fill="rgb(253,155,4)" fg:x="2162" fg:w="2"/><text x="65.5475%" y="479.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Add&gt;::add (1 samples, 0.03%)</title><rect x="65.3579%" y="485" width="0.0302%" height="15" fill="rgb(222,185,37)" fg:x="2164" fg:w="1"/><text x="65.6079%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="65.3579%" y="469" width="0.0302%" height="15" fill="rgb(251,177,13)" fg:x="2164" fg:w="1"/><text x="65.6079%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="65.3579%" y="453" width="0.0302%" height="15" fill="rgb(250,179,40)" fg:x="2164" fg:w="1"/><text x="65.6079%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.03%)</title><rect x="65.3881%" y="469" width="0.0302%" height="15" fill="rgb(242,44,2)" fg:x="2165" fg:w="1"/><text x="65.6381%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.03%)</title><rect x="65.4183%" y="469" width="0.0302%" height="15" fill="rgb(216,177,13)" fg:x="2166" fg:w="1"/><text x="65.6683%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (1 samples, 0.03%)</title><rect x="65.4485%" y="469" width="0.0302%" height="15" fill="rgb(216,106,43)" fg:x="2167" fg:w="1"/><text x="65.6985%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="65.4787%" y="469" width="0.0302%" height="15" fill="rgb(216,183,2)" fg:x="2168" fg:w="1"/><text x="65.7287%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.03%)</title><rect x="65.5089%" y="453" width="0.0302%" height="15" fill="rgb(249,75,3)" fg:x="2169" fg:w="1"/><text x="65.7589%" y="463.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="65.5391%" y="453" width="0.0302%" height="15" fill="rgb(219,67,39)" fg:x="2170" fg:w="1"/><text x="65.7891%" y="463.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (32 samples, 0.97%)</title><rect x="64.6632%" y="501" width="0.9665%" height="15" fill="rgb(253,228,2)" fg:x="2141" fg:w="32"/><text x="64.9132%" y="511.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (8 samples, 0.24%)</title><rect x="65.3881%" y="485" width="0.2416%" height="15" fill="rgb(235,138,27)" fg:x="2165" fg:w="8"/><text x="65.6381%" y="495.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (4 samples, 0.12%)</title><rect x="65.5089%" y="469" width="0.1208%" height="15" fill="rgb(236,97,51)" fg:x="2169" fg:w="4"/><text x="65.7589%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (2 samples, 0.06%)</title><rect x="65.5693%" y="453" width="0.0604%" height="15" fill="rgb(240,80,30)" fg:x="2171" fg:w="2"/><text x="65.8193%" y="463.50"></text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_loaded_blocks (1 samples, 0.03%)</title><rect x="65.6297%" y="501" width="0.0302%" height="15" fill="rgb(230,178,19)" fg:x="2173" fg:w="1"/><text x="65.8797%" y="511.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.03%)</title><rect x="65.6599%" y="469" width="0.0302%" height="15" fill="rgb(210,190,27)" fg:x="2174" fg:w="1"/><text x="65.9099%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.03%)</title><rect x="65.6901%" y="453" width="0.0302%" height="15" fill="rgb(222,107,31)" fg:x="2175" fg:w="1"/><text x="65.9401%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.03%)</title><rect x="65.7203%" y="453" width="0.0302%" height="15" fill="rgb(216,127,34)" fg:x="2176" fg:w="1"/><text x="65.9703%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (3 samples, 0.09%)</title><rect x="65.6901%" y="469" width="0.0906%" height="15" fill="rgb(234,116,52)" fg:x="2175" fg:w="3"/><text x="65.9401%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.03%)</title><rect x="65.7505%" y="453" width="0.0302%" height="15" fill="rgb(222,124,15)" fg:x="2177" fg:w="1"/><text x="66.0005%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (2 samples, 0.06%)</title><rect x="65.7807%" y="469" width="0.0604%" height="15" fill="rgb(231,179,28)" fg:x="2178" fg:w="2"/><text x="66.0307%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="65.8109%" y="453" width="0.0302%" height="15" fill="rgb(226,93,45)" fg:x="2179" fg:w="1"/><text x="66.0609%" y="463.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.06%)</title><rect x="65.8411%" y="469" width="0.0604%" height="15" fill="rgb(215,8,51)" fg:x="2180" fg:w="2"/><text x="66.0911%" y="479.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::decrypt_in_place_detached (99 samples, 2.99%)</title><rect x="62.9417%" y="629" width="2.9900%" height="15" fill="rgb(223,106,5)" fg:x="2084" fg:w="99"/><text x="63.1917%" y="639.50">cha..</text></g><g><title>universal_hash::UniversalHash::update_padded (45 samples, 1.36%)</title><rect x="64.5726%" y="613" width="1.3591%" height="15" fill="rgb(250,191,5)" fg:x="2138" fg:w="45"/><text x="64.8226%" y="623.50"></text></g><g><title>universal_hash::UniversalHash::update (45 samples, 1.36%)</title><rect x="64.5726%" y="597" width="1.3591%" height="15" fill="rgb(242,132,44)" fg:x="2138" fg:w="45"/><text x="64.8226%" y="607.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (45 samples, 1.36%)</title><rect x="64.5726%" y="581" width="1.3591%" height="15" fill="rgb(251,152,29)" fg:x="2138" fg:w="45"/><text x="64.8226%" y="591.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (45 samples, 1.36%)</title><rect x="64.5726%" y="565" width="1.3591%" height="15" fill="rgb(218,179,5)" fg:x="2138" fg:w="45"/><text x="64.8226%" y="575.50"></text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (45 samples, 1.36%)</title><rect x="64.5726%" y="549" width="1.3591%" height="15" fill="rgb(227,67,19)" fg:x="2138" fg:w="45"/><text x="64.8226%" y="559.50"></text></g><g><title>&lt;poly1305::backend::avx2::State as universal_hash::UhfBackend&gt;::proc_par_blocks (45 samples, 1.36%)</title><rect x="64.5726%" y="533" width="1.3591%" height="15" fill="rgb(233,119,31)" fg:x="2138" fg:w="45"/><text x="64.8226%" y="543.50"></text></g><g><title>poly1305::backend::avx2::State::compute_par_blocks (45 samples, 1.36%)</title><rect x="64.5726%" y="517" width="1.3591%" height="15" fill="rgb(241,120,22)" fg:x="2138" fg:w="45"/><text x="64.8226%" y="527.50"></text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_par_blocks (9 samples, 0.27%)</title><rect x="65.6599%" y="501" width="0.2718%" height="15" fill="rgb(224,102,30)" fg:x="2174" fg:w="9"/><text x="65.9099%" y="511.50"></text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_loaded_blocks (9 samples, 0.27%)</title><rect x="65.6599%" y="485" width="0.2718%" height="15" fill="rgb(210,164,37)" fg:x="2174" fg:w="9"/><text x="65.9099%" y="495.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (1 samples, 0.03%)</title><rect x="65.9015%" y="469" width="0.0302%" height="15" fill="rgb(226,191,16)" fg:x="2182" fg:w="1"/><text x="66.1515%" y="479.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="65.9317%" y="421" width="0.0302%" height="15" fill="rgb(214,40,45)" fg:x="2183" fg:w="1"/><text x="66.1817%" y="431.50"></text></g><g><title>chacha20::backends::avx2::inner (1 samples, 0.03%)</title><rect x="65.9619%" y="421" width="0.0302%" height="15" fill="rgb(244,29,26)" fg:x="2184" fg:w="1"/><text x="66.2119%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.03%)</title><rect x="65.9921%" y="421" width="0.0302%" height="15" fill="rgb(216,16,5)" fg:x="2185" fg:w="1"/><text x="66.2421%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.03%)</title><rect x="66.0223%" y="421" width="0.0302%" height="15" fill="rgb(249,76,35)" fg:x="2186" fg:w="1"/><text x="66.2723%" y="431.50"></text></g><g><title>chacha20::backends::avx2::rounds (1 samples, 0.03%)</title><rect x="66.0223%" y="405" width="0.0302%" height="15" fill="rgb(207,11,44)" fg:x="2186" fg:w="1"/><text x="66.2723%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.03%)</title><rect x="66.0526%" y="421" width="0.0302%" height="15" fill="rgb(228,190,49)" fg:x="2187" fg:w="1"/><text x="66.3026%" y="431.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.03%)</title><rect x="66.0526%" y="405" width="0.0302%" height="15" fill="rgb(214,173,12)" fg:x="2187" fg:w="1"/><text x="66.3026%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="66.0828%" y="421" width="0.0302%" height="15" fill="rgb(218,26,35)" fg:x="2188" fg:w="1"/><text x="66.3328%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (2 samples, 0.06%)</title><rect x="66.1130%" y="421" width="0.0604%" height="15" fill="rgb(220,200,19)" fg:x="2189" fg:w="2"/><text x="66.3630%" y="431.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (9 samples, 0.27%)</title><rect x="65.9317%" y="437" width="0.2718%" height="15" fill="rgb(239,95,49)" fg:x="2183" fg:w="9"/><text x="66.1817%" y="447.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.03%)</title><rect x="66.1734%" y="421" width="0.0302%" height="15" fill="rgb(235,85,53)" fg:x="2191" fg:w="1"/><text x="66.4234%" y="431.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (1 samples, 0.03%)</title><rect x="66.2036%" y="437" width="0.0302%" height="15" fill="rgb(233,133,31)" fg:x="2192" fg:w="1"/><text x="66.4536%" y="447.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="66.2036%" y="421" width="0.0302%" height="15" fill="rgb(218,25,20)" fg:x="2192" fg:w="1"/><text x="66.4536%" y="431.50"></text></g><g><title>chacha20::backends::avx2::inner (1 samples, 0.03%)</title><rect x="66.2338%" y="437" width="0.0302%" height="15" fill="rgb(252,210,38)" fg:x="2193" fg:w="1"/><text x="66.4838%" y="447.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (1 samples, 0.03%)</title><rect x="66.2640%" y="437" width="0.0302%" height="15" fill="rgb(242,134,21)" fg:x="2194" fg:w="1"/><text x="66.5140%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="66.2640%" y="421" width="0.0302%" height="15" fill="rgb(213,28,48)" fg:x="2194" fg:w="1"/><text x="66.5140%" y="431.50"></text></g><g><title>chacha20::backends::avx2::rounds (14 samples, 0.42%)</title><rect x="65.9317%" y="469" width="0.4228%" height="15" fill="rgb(250,196,2)" fg:x="2183" fg:w="14"/><text x="66.1817%" y="479.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (14 samples, 0.42%)</title><rect x="65.9317%" y="453" width="0.4228%" height="15" fill="rgb(227,5,17)" fg:x="2183" fg:w="14"/><text x="66.1817%" y="463.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (2 samples, 0.06%)</title><rect x="66.2942%" y="437" width="0.0604%" height="15" fill="rgb(221,226,24)" fg:x="2195" fg:w="2"/><text x="66.5442%" y="447.50"></text></g><g><title>&lt;tftp::client::encryption_socket::EncryptionBoundSocket&lt;S,Rng&gt; as tftp::socket::Socket&gt;::recv_from (122 samples, 3.68%)</title><rect x="62.7001%" y="693" width="3.6847%" height="15" fill="rgb(211,5,48)" fg:x="2076" fg:w="122"/><text x="62.9501%" y="703.50">&lt;tft..</text></g><g><title>tftp::encrypted_packet::EncryptedPacket::decrypt (114 samples, 3.44%)</title><rect x="62.9417%" y="677" width="3.4431%" height="15" fill="rgb(219,150,6)" fg:x="2084" fg:w="114"/><text x="63.1917%" y="687.50">tft..</text></g><g><title>tftp::encryption::Encryptor&lt;R&gt;::decrypt (114 samples, 3.44%)</title><rect x="62.9417%" y="661" width="3.4431%" height="15" fill="rgb(251,46,16)" fg:x="2084" fg:w="114"/><text x="63.1917%" y="671.50">tft..</text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (114 samples, 3.44%)</title><rect x="62.9417%" y="645" width="3.4431%" height="15" fill="rgb(220,204,40)" fg:x="2084" fg:w="114"/><text x="63.1917%" y="655.50">&lt;ch..</text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (15 samples, 0.45%)</title><rect x="65.9317%" y="629" width="0.4530%" height="15" fill="rgb(211,85,2)" fg:x="2183" fg:w="15"/><text x="66.1817%" y="639.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (15 samples, 0.45%)</title><rect x="65.9317%" y="613" width="0.4530%" height="15" fill="rgb(229,17,7)" fg:x="2183" fg:w="15"/><text x="66.1817%" y="623.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (15 samples, 0.45%)</title><rect x="65.9317%" y="597" width="0.4530%" height="15" fill="rgb(239,72,28)" fg:x="2183" fg:w="15"/><text x="66.1817%" y="607.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (15 samples, 0.45%)</title><rect x="65.9317%" y="581" width="0.4530%" height="15" fill="rgb(230,47,54)" fg:x="2183" fg:w="15"/><text x="66.1817%" y="591.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::write_keystream_block (15 samples, 0.45%)</title><rect x="65.9317%" y="565" width="0.4530%" height="15" fill="rgb(214,50,8)" fg:x="2183" fg:w="15"/><text x="66.1817%" y="575.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (15 samples, 0.45%)</title><rect x="65.9317%" y="549" width="0.4530%" height="15" fill="rgb(216,198,43)" fg:x="2183" fg:w="15"/><text x="66.1817%" y="559.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (15 samples, 0.45%)</title><rect x="65.9317%" y="533" width="0.4530%" height="15" fill="rgb(234,20,35)" fg:x="2183" fg:w="15"/><text x="66.1817%" y="543.50"></text></g><g><title>chacha20::backends::avx2::inner (15 samples, 0.45%)</title><rect x="65.9317%" y="517" width="0.4530%" height="15" fill="rgb(254,45,19)" fg:x="2183" fg:w="15"/><text x="66.1817%" y="527.50"></text></g><g><title>&lt;cipher::stream_core::WriteBlockCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (15 samples, 0.45%)</title><rect x="65.9317%" y="501" width="0.4530%" height="15" fill="rgb(219,14,44)" fg:x="2183" fg:w="15"/><text x="66.1817%" y="511.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (15 samples, 0.45%)</title><rect x="65.9317%" y="485" width="0.4530%" height="15" fill="rgb(217,220,26)" fg:x="2183" fg:w="15"/><text x="66.1817%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="66.3546%" y="469" width="0.0302%" height="15" fill="rgb(213,158,28)" fg:x="2197" fg:w="1"/><text x="66.6046%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="66.3546%" y="453" width="0.0302%" height="15" fill="rgb(252,51,52)" fg:x="2197" fg:w="1"/><text x="66.6046%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (3 samples, 0.09%)</title><rect x="66.3848%" y="469" width="0.0906%" height="15" fill="rgb(246,89,16)" fg:x="2198" fg:w="3"/><text x="66.6348%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_blend_epi32 (1 samples, 0.03%)</title><rect x="66.4452%" y="453" width="0.0302%" height="15" fill="rgb(216,158,49)" fg:x="2200" fg:w="1"/><text x="66.6952%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_blend_epi32 (1 samples, 0.03%)</title><rect x="66.4754%" y="469" width="0.0302%" height="15" fill="rgb(236,107,19)" fg:x="2201" fg:w="1"/><text x="66.7254%" y="479.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi32 (1 samples, 0.03%)</title><rect x="66.5056%" y="453" width="0.0302%" height="15" fill="rgb(228,185,30)" fg:x="2202" fg:w="1"/><text x="66.7556%" y="463.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi32 (1 samples, 0.03%)</title><rect x="66.5056%" y="437" width="0.0302%" height="15" fill="rgb(246,134,8)" fg:x="2202" fg:w="1"/><text x="66.7556%" y="447.50"></text></g><g><title>core::core_arch::simd::i32x8::new (1 samples, 0.03%)</title><rect x="66.5056%" y="421" width="0.0302%" height="15" fill="rgb(214,143,50)" fg:x="2202" fg:w="1"/><text x="66.7556%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (2 samples, 0.06%)</title><rect x="66.5056%" y="469" width="0.0604%" height="15" fill="rgb(228,75,8)" fg:x="2202" fg:w="2"/><text x="66.7556%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.03%)</title><rect x="66.5358%" y="453" width="0.0302%" height="15" fill="rgb(207,175,4)" fg:x="2203" fg:w="1"/><text x="66.7858%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (1 samples, 0.03%)</title><rect x="66.5660%" y="469" width="0.0302%" height="15" fill="rgb(205,108,24)" fg:x="2204" fg:w="1"/><text x="66.8160%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.03%)</title><rect x="66.5660%" y="453" width="0.0302%" height="15" fill="rgb(244,120,49)" fg:x="2204" fg:w="1"/><text x="66.8160%" y="463.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="66.5962%" y="469" width="0.0302%" height="15" fill="rgb(223,47,38)" fg:x="2205" fg:w="1"/><text x="66.8462%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (2 samples, 0.06%)</title><rect x="66.6264%" y="469" width="0.0604%" height="15" fill="rgb(229,179,11)" fg:x="2206" fg:w="2"/><text x="66.8764%" y="479.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (11 samples, 0.33%)</title><rect x="66.3848%" y="485" width="0.3322%" height="15" fill="rgb(231,122,1)" fg:x="2198" fg:w="11"/><text x="66.6348%" y="495.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.03%)</title><rect x="66.6868%" y="469" width="0.0302%" height="15" fill="rgb(245,119,9)" fg:x="2208" fg:w="1"/><text x="66.9368%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="66.7170%" y="469" width="0.0302%" height="15" fill="rgb(241,163,25)" fg:x="2209" fg:w="1"/><text x="66.9670%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.03%)</title><rect x="66.7472%" y="453" width="0.0302%" height="15" fill="rgb(217,214,3)" fg:x="2210" fg:w="1"/><text x="66.9972%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (2 samples, 0.06%)</title><rect x="66.7774%" y="453" width="0.0604%" height="15" fill="rgb(240,86,28)" fg:x="2211" fg:w="2"/><text x="67.0274%" y="463.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::authenticate_lengths (17 samples, 0.51%)</title><rect x="66.3848%" y="613" width="0.5134%" height="15" fill="rgb(215,47,9)" fg:x="2198" fg:w="17"/><text x="66.6348%" y="623.50"></text></g><g><title>universal_hash::UniversalHash::update (17 samples, 0.51%)</title><rect x="66.3848%" y="597" width="0.5134%" height="15" fill="rgb(252,25,45)" fg:x="2198" fg:w="17"/><text x="66.6348%" y="607.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (17 samples, 0.51%)</title><rect x="66.3848%" y="581" width="0.5134%" height="15" fill="rgb(251,164,9)" fg:x="2198" fg:w="17"/><text x="66.6348%" y="591.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (17 samples, 0.51%)</title><rect x="66.3848%" y="565" width="0.5134%" height="15" fill="rgb(233,194,0)" fg:x="2198" fg:w="17"/><text x="66.6348%" y="575.50"></text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (17 samples, 0.51%)</title><rect x="66.3848%" y="549" width="0.5134%" height="15" fill="rgb(249,111,24)" fg:x="2198" fg:w="17"/><text x="66.6348%" y="559.50"></text></g><g><title>&lt;poly1305::backend::avx2::State as universal_hash::UhfBackend&gt;::proc_block (17 samples, 0.51%)</title><rect x="66.3848%" y="533" width="0.5134%" height="15" fill="rgb(250,223,3)" fg:x="2198" fg:w="17"/><text x="66.6348%" y="543.50"></text></g><g><title>poly1305::backend::avx2::State::compute_block (17 samples, 0.51%)</title><rect x="66.3848%" y="517" width="0.5134%" height="15" fill="rgb(236,178,37)" fg:x="2198" fg:w="17"/><text x="66.6348%" y="527.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (17 samples, 0.51%)</title><rect x="66.3848%" y="501" width="0.5134%" height="15" fill="rgb(241,158,50)" fg:x="2198" fg:w="17"/><text x="66.6348%" y="511.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (6 samples, 0.18%)</title><rect x="66.7170%" y="485" width="0.1812%" height="15" fill="rgb(213,121,41)" fg:x="2209" fg:w="6"/><text x="66.9670%" y="495.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (5 samples, 0.15%)</title><rect x="66.7472%" y="469" width="0.1510%" height="15" fill="rgb(240,92,3)" fg:x="2210" fg:w="5"/><text x="66.9972%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.06%)</title><rect x="66.8378%" y="453" width="0.0604%" height="15" fill="rgb(205,123,3)" fg:x="2213" fg:w="2"/><text x="67.0878%" y="463.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="66.8982%" y="469" width="0.0302%" height="15" fill="rgb(205,97,47)" fg:x="2215" fg:w="1"/><text x="67.1482%" y="479.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="66.9284%" y="469" width="0.0302%" height="15" fill="rgb(247,152,14)" fg:x="2216" fg:w="1"/><text x="67.1784%" y="479.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="66.9586%" y="453" width="0.0302%" height="15" fill="rgb(248,195,53)" fg:x="2217" fg:w="1"/><text x="67.2086%" y="463.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (2 samples, 0.06%)</title><rect x="66.9888%" y="421" width="0.0604%" height="15" fill="rgb(226,201,16)" fg:x="2218" fg:w="2"/><text x="67.2388%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.03%)</title><rect x="67.0492%" y="421" width="0.0302%" height="15" fill="rgb(205,98,0)" fg:x="2220" fg:w="1"/><text x="67.2992%" y="431.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.03%)</title><rect x="67.0492%" y="405" width="0.0302%" height="15" fill="rgb(214,191,48)" fg:x="2220" fg:w="1"/><text x="67.2992%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (5 samples, 0.15%)</title><rect x="67.0794%" y="421" width="0.1510%" height="15" fill="rgb(237,112,39)" fg:x="2221" fg:w="5"/><text x="67.3294%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="67.2304%" y="421" width="0.0302%" height="15" fill="rgb(247,203,27)" fg:x="2226" fg:w="1"/><text x="67.4804%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (3 samples, 0.09%)</title><rect x="67.2606%" y="421" width="0.0906%" height="15" fill="rgb(235,124,28)" fg:x="2227" fg:w="3"/><text x="67.5106%" y="431.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (13 samples, 0.39%)</title><rect x="66.9888%" y="437" width="0.3926%" height="15" fill="rgb(208,207,46)" fg:x="2218" fg:w="13"/><text x="67.2388%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="67.3513%" y="421" width="0.0302%" height="15" fill="rgb(234,176,4)" fg:x="2230" fg:w="1"/><text x="67.6013%" y="431.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="67.3815%" y="421" width="0.0302%" height="15" fill="rgb(230,133,28)" fg:x="2231" fg:w="1"/><text x="67.6315%" y="431.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (1 samples, 0.03%)</title><rect x="67.3815%" y="405" width="0.0302%" height="15" fill="rgb(211,137,40)" fg:x="2231" fg:w="1"/><text x="67.6315%" y="415.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (3 samples, 0.09%)</title><rect x="67.4117%" y="421" width="0.0906%" height="15" fill="rgb(254,35,13)" fg:x="2232" fg:w="3"/><text x="67.6617%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (2 samples, 0.06%)</title><rect x="67.5023%" y="421" width="0.0604%" height="15" fill="rgb(225,49,51)" fg:x="2235" fg:w="2"/><text x="67.7523%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (3 samples, 0.09%)</title><rect x="67.5627%" y="421" width="0.0906%" height="15" fill="rgb(251,10,15)" fg:x="2237" fg:w="3"/><text x="67.8127%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (6 samples, 0.18%)</title><rect x="67.6533%" y="421" width="0.1812%" height="15" fill="rgb(228,207,15)" fg:x="2240" fg:w="6"/><text x="67.9033%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.06%)</title><rect x="67.8345%" y="421" width="0.0604%" height="15" fill="rgb(241,99,19)" fg:x="2246" fg:w="2"/><text x="68.0845%" y="431.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (20 samples, 0.60%)</title><rect x="67.3815%" y="437" width="0.6040%" height="15" fill="rgb(207,104,49)" fg:x="2231" fg:w="20"/><text x="67.6315%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (3 samples, 0.09%)</title><rect x="67.8949%" y="421" width="0.0906%" height="15" fill="rgb(234,99,18)" fg:x="2248" fg:w="3"/><text x="68.1449%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.03%)</title><rect x="67.9855%" y="437" width="0.0302%" height="15" fill="rgb(213,191,49)" fg:x="2251" fg:w="1"/><text x="68.2355%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (3 samples, 0.09%)</title><rect x="68.0157%" y="437" width="0.0906%" height="15" fill="rgb(210,226,19)" fg:x="2252" fg:w="3"/><text x="68.2657%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="68.1063%" y="437" width="0.0302%" height="15" fill="rgb(229,97,18)" fg:x="2255" fg:w="1"/><text x="68.3563%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (4 samples, 0.12%)</title><rect x="68.1365%" y="437" width="0.1208%" height="15" fill="rgb(211,167,15)" fg:x="2256" fg:w="4"/><text x="68.3865%" y="447.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (43 samples, 1.30%)</title><rect x="66.9888%" y="453" width="1.2987%" height="15" fill="rgb(210,169,34)" fg:x="2218" fg:w="43"/><text x="67.2388%" y="463.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="68.2573%" y="437" width="0.0302%" height="15" fill="rgb(241,121,31)" fg:x="2260" fg:w="1"/><text x="68.5073%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="68.2875%" y="453" width="0.0302%" height="15" fill="rgb(232,40,11)" fg:x="2261" fg:w="1"/><text x="68.5375%" y="463.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.06%)</title><rect x="68.3177%" y="453" width="0.0604%" height="15" fill="rgb(205,86,26)" fg:x="2262" fg:w="2"/><text x="68.5677%" y="463.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="68.3781%" y="453" width="0.0302%" height="15" fill="rgb(231,126,28)" fg:x="2264" fg:w="1"/><text x="68.6281%" y="463.50"></text></g><g><title>chacha20::backends::avx2::rounds (49 samples, 1.48%)</title><rect x="66.9586%" y="469" width="1.4799%" height="15" fill="rgb(219,221,18)" fg:x="2217" fg:w="49"/><text x="67.2086%" y="479.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.03%)</title><rect x="68.4083%" y="453" width="0.0302%" height="15" fill="rgb(211,40,0)" fg:x="2265" fg:w="1"/><text x="68.6583%" y="463.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.03%)</title><rect x="68.4083%" y="437" width="0.0302%" height="15" fill="rgb(239,85,43)" fg:x="2265" fg:w="1"/><text x="68.6583%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.03%)</title><rect x="68.4385%" y="469" width="0.0302%" height="15" fill="rgb(231,55,21)" fg:x="2266" fg:w="1"/><text x="68.6885%" y="479.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.03%)</title><rect x="68.4385%" y="453" width="0.0302%" height="15" fill="rgb(225,184,43)" fg:x="2266" fg:w="1"/><text x="68.6885%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (2 samples, 0.06%)</title><rect x="68.4687%" y="469" width="0.0604%" height="15" fill="rgb(251,158,41)" fg:x="2267" fg:w="2"/><text x="68.7187%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (3 samples, 0.09%)</title><rect x="68.5291%" y="469" width="0.0906%" height="15" fill="rgb(234,159,37)" fg:x="2269" fg:w="3"/><text x="68.7791%" y="479.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_par_ks_blocks (58 samples, 1.75%)</title><rect x="66.8982%" y="485" width="1.7517%" height="15" fill="rgb(216,204,22)" fg:x="2215" fg:w="58"/><text x="67.1482%" y="495.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="68.6198%" y="469" width="0.0302%" height="15" fill="rgb(214,17,3)" fg:x="2272" fg:w="1"/><text x="68.8698%" y="479.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="68.6500%" y="421" width="0.0302%" height="15" fill="rgb(212,111,17)" fg:x="2273" fg:w="1"/><text x="68.9000%" y="431.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (1 samples, 0.03%)</title><rect x="68.6802%" y="421" width="0.0302%" height="15" fill="rgb(221,157,24)" fg:x="2274" fg:w="1"/><text x="68.9302%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="68.6802%" y="405" width="0.0302%" height="15" fill="rgb(252,16,13)" fg:x="2274" fg:w="1"/><text x="68.9302%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="68.7104%" y="405" width="0.0302%" height="15" fill="rgb(221,62,2)" fg:x="2275" fg:w="1"/><text x="68.9604%" y="415.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (2 samples, 0.06%)</title><rect x="68.7104%" y="421" width="0.0604%" height="15" fill="rgb(247,87,22)" fg:x="2275" fg:w="2"/><text x="68.9604%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="68.7406%" y="405" width="0.0302%" height="15" fill="rgb(215,73,9)" fg:x="2276" fg:w="1"/><text x="68.9906%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (2 samples, 0.06%)</title><rect x="68.7708%" y="421" width="0.0604%" height="15" fill="rgb(207,175,33)" fg:x="2277" fg:w="2"/><text x="69.0208%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="68.8312%" y="421" width="0.0302%" height="15" fill="rgb(243,129,54)" fg:x="2279" fg:w="1"/><text x="69.0812%" y="431.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (8 samples, 0.24%)</title><rect x="68.6500%" y="437" width="0.2416%" height="15" fill="rgb(227,119,45)" fg:x="2273" fg:w="8"/><text x="68.9000%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="68.8614%" y="421" width="0.0302%" height="15" fill="rgb(205,109,36)" fg:x="2280" fg:w="1"/><text x="69.1114%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="68.8916%" y="437" width="0.0302%" height="15" fill="rgb(205,6,39)" fg:x="2281" fg:w="1"/><text x="69.1416%" y="447.50"></text></g><g><title>chacha20::backends::avx2::rounds (10 samples, 0.30%)</title><rect x="68.6500%" y="453" width="0.3020%" height="15" fill="rgb(221,32,16)" fg:x="2273" fg:w="10"/><text x="68.9000%" y="463.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="68.9218%" y="437" width="0.0302%" height="15" fill="rgb(228,144,50)" fg:x="2282" fg:w="1"/><text x="69.1718%" y="447.50"></text></g><g><title>cipher::stream_core::StreamBackend::gen_tail_blocks (11 samples, 0.33%)</title><rect x="68.6500%" y="485" width="0.3322%" height="15" fill="rgb(229,201,53)" fg:x="2273" fg:w="11"/><text x="68.9000%" y="495.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (11 samples, 0.33%)</title><rect x="68.6500%" y="469" width="0.3322%" height="15" fill="rgb(249,153,27)" fg:x="2273" fg:w="11"/><text x="68.9000%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="68.9520%" y="453" width="0.0302%" height="15" fill="rgb(227,106,25)" fg:x="2283" fg:w="1"/><text x="69.2020%" y="463.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.03%)</title><rect x="68.9822%" y="325" width="0.0302%" height="15" fill="rgb(230,65,29)" fg:x="2284" fg:w="1"/><text x="69.2322%" y="335.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (1 samples, 0.03%)</title><rect x="69.0124%" y="309" width="0.0302%" height="15" fill="rgb(221,57,46)" fg:x="2285" fg:w="1"/><text x="69.2624%" y="319.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (1 samples, 0.03%)</title><rect x="69.0124%" y="293" width="0.0302%" height="15" fill="rgb(229,161,17)" fg:x="2285" fg:w="1"/><text x="69.2624%" y="303.50"></text></g><g><title>__memcpy_avx_unaligned (1 samples, 0.03%)</title><rect x="69.0124%" y="277" width="0.0302%" height="15" fill="rgb(222,213,11)" fg:x="2285" fg:w="1"/><text x="69.2624%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.12%)</title><rect x="68.9822%" y="453" width="0.1208%" height="15" fill="rgb(235,35,13)" fg:x="2284" fg:w="4"/><text x="69.2322%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.12%)</title><rect x="68.9822%" y="437" width="0.1208%" height="15" fill="rgb(233,158,34)" fg:x="2284" fg:w="4"/><text x="69.2322%" y="447.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.12%)</title><rect x="68.9822%" y="421" width="0.1208%" height="15" fill="rgb(215,151,48)" fg:x="2284" fg:w="4"/><text x="69.2322%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (4 samples, 0.12%)</title><rect x="68.9822%" y="405" width="0.1208%" height="15" fill="rgb(229,84,14)" fg:x="2284" fg:w="4"/><text x="69.2322%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (4 samples, 0.12%)</title><rect x="68.9822%" y="389" width="0.1208%" height="15" fill="rgb(229,68,14)" fg:x="2284" fg:w="4"/><text x="69.2322%" y="399.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (4 samples, 0.12%)</title><rect x="68.9822%" y="373" width="0.1208%" height="15" fill="rgb(243,106,26)" fg:x="2284" fg:w="4"/><text x="69.2322%" y="383.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (4 samples, 0.12%)</title><rect x="68.9822%" y="357" width="0.1208%" height="15" fill="rgb(206,45,38)" fg:x="2284" fg:w="4"/><text x="69.2322%" y="367.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (4 samples, 0.12%)</title><rect x="68.9822%" y="341" width="0.1208%" height="15" fill="rgb(226,6,15)" fg:x="2284" fg:w="4"/><text x="69.2322%" y="351.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (3 samples, 0.09%)</title><rect x="69.0124%" y="325" width="0.0906%" height="15" fill="rgb(232,22,54)" fg:x="2285" fg:w="3"/><text x="69.2624%" y="335.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::iter_position (2 samples, 0.06%)</title><rect x="69.0426%" y="309" width="0.0604%" height="15" fill="rgb(229,222,32)" fg:x="2286" fg:w="2"/><text x="69.2926%" y="319.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (2 samples, 0.06%)</title><rect x="69.0426%" y="293" width="0.0604%" height="15" fill="rgb(228,62,29)" fg:x="2286" fg:w="2"/><text x="69.2926%" y="303.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (2 samples, 0.06%)</title><rect x="69.0426%" y="277" width="0.0604%" height="15" fill="rgb(251,103,34)" fg:x="2286" fg:w="2"/><text x="69.2926%" y="287.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (2 samples, 0.06%)</title><rect x="69.0426%" y="261" width="0.0604%" height="15" fill="rgb(233,12,30)" fg:x="2286" fg:w="2"/><text x="69.2926%" y="271.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (5 samples, 0.15%)</title><rect x="68.9822%" y="485" width="0.1510%" height="15" fill="rgb(238,52,0)" fg:x="2284" fg:w="5"/><text x="69.2322%" y="495.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (5 samples, 0.15%)</title><rect x="68.9822%" y="469" width="0.1510%" height="15" fill="rgb(223,98,5)" fg:x="2284" fg:w="5"/><text x="69.2322%" y="479.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::iter_position (1 samples, 0.03%)</title><rect x="69.1030%" y="453" width="0.0302%" height="15" fill="rgb(228,75,37)" fg:x="2288" fg:w="1"/><text x="69.3530%" y="463.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.03%)</title><rect x="69.1030%" y="437" width="0.0302%" height="15" fill="rgb(205,115,49)" fg:x="2288" fg:w="1"/><text x="69.3530%" y="447.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (1 samples, 0.03%)</title><rect x="69.1030%" y="421" width="0.0302%" height="15" fill="rgb(250,154,43)" fg:x="2288" fg:w="1"/><text x="69.3530%" y="431.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (1 samples, 0.03%)</title><rect x="69.1030%" y="405" width="0.0302%" height="15" fill="rgb(226,43,29)" fg:x="2288" fg:w="1"/><text x="69.3530%" y="415.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (1 samples, 0.03%)</title><rect x="69.1030%" y="389" width="0.0302%" height="15" fill="rgb(249,228,39)" fg:x="2288" fg:w="1"/><text x="69.3530%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.03%)</title><rect x="72.2440%" y="453" width="0.0302%" height="15" fill="rgb(216,79,43)" fg:x="2392" fg:w="1"/><text x="72.4940%" y="463.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.03%)</title><rect x="72.2742%" y="453" width="0.0302%" height="15" fill="rgb(228,95,12)" fg:x="2393" fg:w="1"/><text x="72.5242%" y="463.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (2 samples, 0.06%)</title><rect x="72.3044%" y="453" width="0.0604%" height="15" fill="rgb(249,221,15)" fg:x="2394" fg:w="2"/><text x="72.5544%" y="463.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.03%)</title><rect x="72.3648%" y="453" width="0.0302%" height="15" fill="rgb(233,34,13)" fg:x="2396" fg:w="1"/><text x="72.6148%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::cast (1 samples, 0.03%)</title><rect x="72.5159%" y="421" width="0.0302%" height="15" fill="rgb(214,103,39)" fg:x="2401" fg:w="1"/><text x="72.7659%" y="431.50"></text></g><g><title>core::slice::raw::from_raw_parts (19 samples, 0.57%)</title><rect x="72.3950%" y="453" width="0.5738%" height="15" fill="rgb(251,126,39)" fg:x="2397" fg:w="19"/><text x="72.6450%" y="463.50"></text></g><g><title>core::ptr::slice_from_raw_parts (15 samples, 0.45%)</title><rect x="72.5159%" y="437" width="0.4530%" height="15" fill="rgb(214,216,36)" fg:x="2401" fg:w="15"/><text x="72.7659%" y="447.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (14 samples, 0.42%)</title><rect x="72.5461%" y="421" width="0.4228%" height="15" fill="rgb(220,221,8)" fg:x="2402" fg:w="14"/><text x="72.7961%" y="431.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (4 samples, 0.12%)</title><rect x="72.9689%" y="421" width="0.1208%" height="15" fill="rgb(240,216,3)" fg:x="2416" fg:w="4"/><text x="73.2189%" y="431.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::Deref&gt;::deref (67 samples, 2.02%)</title><rect x="71.0963%" y="469" width="2.0236%" height="15" fill="rgb(232,218,17)" fg:x="2354" fg:w="67"/><text x="71.3463%" y="479.50">&lt;..</text></g><g><title>core::slice::raw::from_raw_parts_mut (5 samples, 0.15%)</title><rect x="72.9689%" y="453" width="0.1510%" height="15" fill="rgb(229,163,45)" fg:x="2416" fg:w="5"/><text x="73.2189%" y="463.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (5 samples, 0.15%)</title><rect x="72.9689%" y="437" width="0.1510%" height="15" fill="rgb(231,110,42)" fg:x="2416" fg:w="5"/><text x="73.2189%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::cast (1 samples, 0.03%)</title><rect x="73.0897%" y="421" width="0.0302%" height="15" fill="rgb(208,170,48)" fg:x="2420" fg:w="1"/><text x="73.3397%" y="431.50"></text></g><g><title>core::slice::raw::from_raw_parts (7 samples, 0.21%)</title><rect x="73.8448%" y="453" width="0.2114%" height="15" fill="rgb(239,116,25)" fg:x="2445" fg:w="7"/><text x="74.0948%" y="463.50"></text></g><g><title>core::ptr::slice_from_raw_parts (4 samples, 0.12%)</title><rect x="73.9354%" y="437" width="0.1208%" height="15" fill="rgb(219,200,50)" fg:x="2448" fg:w="4"/><text x="74.1854%" y="447.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (4 samples, 0.12%)</title><rect x="73.9354%" y="421" width="0.1208%" height="15" fill="rgb(245,200,0)" fg:x="2448" fg:w="4"/><text x="74.1854%" y="431.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (34 samples, 1.03%)</title><rect x="73.1199%" y="469" width="1.0269%" height="15" fill="rgb(245,119,33)" fg:x="2421" fg:w="34"/><text x="73.3699%" y="479.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (3 samples, 0.09%)</title><rect x="74.0562%" y="453" width="0.0906%" height="15" fill="rgb(231,125,12)" fg:x="2452" fg:w="3"/><text x="74.3062%" y="463.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (3 samples, 0.09%)</title><rect x="74.0562%" y="437" width="0.0906%" height="15" fill="rgb(216,96,41)" fg:x="2452" fg:w="3"/><text x="74.3062%" y="447.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (3 samples, 0.09%)</title><rect x="74.0562%" y="421" width="0.0906%" height="15" fill="rgb(248,43,45)" fg:x="2452" fg:w="3"/><text x="74.3062%" y="431.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.06%)</title><rect x="74.1468%" y="453" width="0.0604%" height="15" fill="rgb(217,222,7)" fg:x="2455" fg:w="2"/><text x="74.3968%" y="463.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4 samples, 0.12%)</title><rect x="74.1468%" y="469" width="0.1208%" height="15" fill="rgb(233,28,6)" fg:x="2455" fg:w="4"/><text x="74.3968%" y="479.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (2 samples, 0.06%)</title><rect x="74.2072%" y="453" width="0.0604%" height="15" fill="rgb(231,218,15)" fg:x="2457" fg:w="2"/><text x="74.4572%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.03%)</title><rect x="74.2978%" y="389" width="0.0302%" height="15" fill="rgb(226,171,48)" fg:x="2460" fg:w="1"/><text x="74.5478%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.03%)</title><rect x="74.2978%" y="373" width="0.0302%" height="15" fill="rgb(235,201,9)" fg:x="2460" fg:w="1"/><text x="74.5478%" y="383.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (1 samples, 0.03%)</title><rect x="74.2978%" y="357" width="0.0302%" height="15" fill="rgb(217,80,15)" fg:x="2460" fg:w="1"/><text x="74.5478%" y="367.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (1 samples, 0.03%)</title><rect x="74.2978%" y="341" width="0.0302%" height="15" fill="rgb(219,152,8)" fg:x="2460" fg:w="1"/><text x="74.5478%" y="351.50"></text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;generic_array::GenericArray&lt;u8,N&gt;,M&gt;&gt;::xor_in2out (173 samples, 5.23%)</title><rect x="69.1332%" y="485" width="5.2250%" height="15" fill="rgb(243,107,38)" fg:x="2289" fg:w="173"/><text x="69.3832%" y="495.50">inout:..</text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (3 samples, 0.09%)</title><rect x="74.2676%" y="469" width="0.0906%" height="15" fill="rgb(231,17,5)" fg:x="2459" fg:w="3"/><text x="74.5176%" y="479.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (2 samples, 0.06%)</title><rect x="74.2978%" y="453" width="0.0604%" height="15" fill="rgb(209,25,54)" fg:x="2460" fg:w="2"/><text x="74.5478%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.06%)</title><rect x="74.2978%" y="437" width="0.0604%" height="15" fill="rgb(219,0,2)" fg:x="2460" fg:w="2"/><text x="74.5478%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.06%)</title><rect x="74.2978%" y="421" width="0.0604%" height="15" fill="rgb(246,9,5)" fg:x="2460" fg:w="2"/><text x="74.5478%" y="431.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.06%)</title><rect x="74.2978%" y="405" width="0.0604%" height="15" fill="rgb(226,159,4)" fg:x="2460" fg:w="2"/><text x="74.5478%" y="415.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="74.3280%" y="389" width="0.0302%" height="15" fill="rgb(219,175,34)" fg:x="2461" fg:w="1"/><text x="74.5780%" y="399.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="74.3280%" y="373" width="0.0302%" height="15" fill="rgb(236,10,46)" fg:x="2461" fg:w="1"/><text x="74.5780%" y="383.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="74.3280%" y="357" width="0.0302%" height="15" fill="rgb(240,211,16)" fg:x="2461" fg:w="1"/><text x="74.5780%" y="367.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.03%)</title><rect x="74.3280%" y="341" width="0.0302%" height="15" fill="rgb(205,3,43)" fg:x="2461" fg:w="1"/><text x="74.5780%" y="351.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.03%)</title><rect x="74.3280%" y="325" width="0.0302%" height="15" fill="rgb(245,7,22)" fg:x="2461" fg:w="1"/><text x="74.5780%" y="335.50"></text></g><g><title>tick_sched_timer (1 samples, 0.03%)</title><rect x="74.3280%" y="309" width="0.0302%" height="15" fill="rgb(239,132,32)" fg:x="2461" fg:w="1"/><text x="74.5780%" y="319.50"></text></g><g><title>tick_sched_do_timer (1 samples, 0.03%)</title><rect x="74.3280%" y="293" width="0.0302%" height="15" fill="rgb(228,202,34)" fg:x="2461" fg:w="1"/><text x="74.5780%" y="303.50"></text></g><g><title>tick_do_update_jiffies64 (1 samples, 0.03%)</title><rect x="74.3280%" y="277" width="0.0302%" height="15" fill="rgb(254,200,22)" fg:x="2461" fg:w="1"/><text x="74.5780%" y="287.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="74.3280%" y="261" width="0.0302%" height="15" fill="rgb(219,10,39)" fg:x="2461" fg:w="1"/><text x="74.5780%" y="271.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="74.3884%" y="469" width="0.0302%" height="15" fill="rgb(226,210,39)" fg:x="2463" fg:w="1"/><text x="74.6384%" y="479.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (1 samples, 0.03%)</title><rect x="74.4186%" y="357" width="0.0302%" height="15" fill="rgb(208,219,16)" fg:x="2464" fg:w="1"/><text x="74.6686%" y="367.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="74.4186%" y="341" width="0.0302%" height="15" fill="rgb(216,158,51)" fg:x="2464" fg:w="1"/><text x="74.6686%" y="351.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="74.4186%" y="325" width="0.0302%" height="15" fill="rgb(233,14,44)" fg:x="2464" fg:w="1"/><text x="74.6686%" y="335.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="74.4186%" y="309" width="0.0302%" height="15" fill="rgb(237,97,39)" fg:x="2464" fg:w="1"/><text x="74.6686%" y="319.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.03%)</title><rect x="74.4186%" y="293" width="0.0302%" height="15" fill="rgb(218,198,43)" fg:x="2464" fg:w="1"/><text x="74.6686%" y="303.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.03%)</title><rect x="74.4186%" y="277" width="0.0302%" height="15" fill="rgb(231,104,20)" fg:x="2464" fg:w="1"/><text x="74.6686%" y="287.50"></text></g><g><title>tick_sched_timer (1 samples, 0.03%)</title><rect x="74.4186%" y="261" width="0.0302%" height="15" fill="rgb(254,36,13)" fg:x="2464" fg:w="1"/><text x="74.6686%" y="271.50"></text></g><g><title>tick_sched_handle (1 samples, 0.03%)</title><rect x="74.4186%" y="245" width="0.0302%" height="15" fill="rgb(248,14,50)" fg:x="2464" fg:w="1"/><text x="74.6686%" y="255.50"></text></g><g><title>update_process_times (1 samples, 0.03%)</title><rect x="74.4186%" y="229" width="0.0302%" height="15" fill="rgb(217,107,29)" fg:x="2464" fg:w="1"/><text x="74.6686%" y="239.50"></text></g><g><title>rcu_sched_clock_irq (1 samples, 0.03%)</title><rect x="74.4186%" y="213" width="0.0302%" height="15" fill="rgb(251,169,33)" fg:x="2464" fg:w="1"/><text x="74.6686%" y="223.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (251 samples, 7.58%)</title><rect x="66.8982%" y="501" width="7.5808%" height="15" fill="rgb(217,108,32)" fg:x="2215" fg:w="251"/><text x="67.1482%" y="511.50">&lt;cipher::s..</text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;u8,N&gt;&gt;::xor_in2out (4 samples, 0.12%)</title><rect x="74.3582%" y="485" width="0.1208%" height="15" fill="rgb(219,66,42)" fg:x="2462" fg:w="4"/><text x="74.6082%" y="495.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (2 samples, 0.06%)</title><rect x="74.4186%" y="469" width="0.0604%" height="15" fill="rgb(206,180,7)" fg:x="2464" fg:w="2"/><text x="74.6686%" y="479.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (2 samples, 0.06%)</title><rect x="74.4186%" y="453" width="0.0604%" height="15" fill="rgb(208,226,31)" fg:x="2464" fg:w="2"/><text x="74.6686%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.06%)</title><rect x="74.4186%" y="437" width="0.0604%" height="15" fill="rgb(218,26,49)" fg:x="2464" fg:w="2"/><text x="74.6686%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.06%)</title><rect x="74.4186%" y="421" width="0.0604%" height="15" fill="rgb(233,197,48)" fg:x="2464" fg:w="2"/><text x="74.6686%" y="431.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.06%)</title><rect x="74.4186%" y="405" width="0.0604%" height="15" fill="rgb(252,181,51)" fg:x="2464" fg:w="2"/><text x="74.6686%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (2 samples, 0.06%)</title><rect x="74.4186%" y="389" width="0.0604%" height="15" fill="rgb(253,90,19)" fg:x="2464" fg:w="2"/><text x="74.6686%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.06%)</title><rect x="74.4186%" y="373" width="0.0604%" height="15" fill="rgb(215,171,30)" fg:x="2464" fg:w="2"/><text x="74.6686%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_storeu_si128 (1 samples, 0.03%)</title><rect x="74.4488%" y="357" width="0.0302%" height="15" fill="rgb(214,222,9)" fg:x="2465" fg:w="1"/><text x="74.6988%" y="367.50"></text></g><g><title>chacha20::backends::avx2::inner (253 samples, 7.64%)</title><rect x="66.8982%" y="517" width="7.6412%" height="15" fill="rgb(223,3,22)" fg:x="2215" fg:w="253"/><text x="67.1482%" y="527.50">chacha20::..</text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.06%)</title><rect x="74.4790%" y="501" width="0.0604%" height="15" fill="rgb(225,196,46)" fg:x="2466" fg:w="2"/><text x="74.7290%" y="511.50"></text></g><g><title>chacha20::backends::avx2::rounds (1 samples, 0.03%)</title><rect x="74.5394%" y="517" width="0.0302%" height="15" fill="rgb(209,110,37)" fg:x="2468" fg:w="1"/><text x="74.7894%" y="527.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.03%)</title><rect x="74.5696%" y="517" width="0.0302%" height="15" fill="rgb(249,89,12)" fg:x="2469" fg:w="1"/><text x="74.8196%" y="527.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (3 samples, 0.09%)</title><rect x="74.5998%" y="517" width="0.0906%" height="15" fill="rgb(226,27,33)" fg:x="2470" fg:w="3"/><text x="74.8498%" y="527.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (2 samples, 0.06%)</title><rect x="74.6300%" y="501" width="0.0604%" height="15" fill="rgb(213,82,22)" fg:x="2471" fg:w="2"/><text x="74.8800%" y="511.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (4 samples, 0.12%)</title><rect x="74.6904%" y="517" width="0.1208%" height="15" fill="rgb(248,140,0)" fg:x="2473" fg:w="4"/><text x="74.9404%" y="527.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="74.8112%" y="517" width="0.0302%" height="15" fill="rgb(228,106,3)" fg:x="2477" fg:w="1"/><text x="75.0612%" y="527.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.06%)</title><rect x="74.8414%" y="517" width="0.0604%" height="15" fill="rgb(209,23,37)" fg:x="2478" fg:w="2"/><text x="75.0914%" y="527.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (266 samples, 8.03%)</title><rect x="66.8982%" y="565" width="8.0338%" height="15" fill="rgb(241,93,50)" fg:x="2215" fg:w="266"/><text x="67.1482%" y="575.50">cipher::str..</text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (266 samples, 8.03%)</title><rect x="66.8982%" y="549" width="8.0338%" height="15" fill="rgb(253,46,43)" fg:x="2215" fg:w="266"/><text x="67.1482%" y="559.50">&lt;chacha20::..</text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (266 samples, 8.03%)</title><rect x="66.8982%" y="533" width="8.0338%" height="15" fill="rgb(226,206,43)" fg:x="2215" fg:w="266"/><text x="67.1482%" y="543.50">&lt;chacha20::..</text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="74.9018%" y="517" width="0.0302%" height="15" fill="rgb(217,54,7)" fg:x="2480" fg:w="1"/><text x="75.1518%" y="527.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.03%)</title><rect x="75.1435%" y="405" width="0.0302%" height="15" fill="rgb(223,5,52)" fg:x="2488" fg:w="1"/><text x="75.3935%" y="415.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.12%)</title><rect x="75.0831%" y="421" width="0.1208%" height="15" fill="rgb(206,52,46)" fg:x="2486" fg:w="4"/><text x="75.3331%" y="431.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (1 samples, 0.03%)</title><rect x="75.1737%" y="405" width="0.0302%" height="15" fill="rgb(253,136,11)" fg:x="2489" fg:w="1"/><text x="75.4237%" y="415.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (10 samples, 0.30%)</title><rect x="75.2039%" y="421" width="0.3020%" height="15" fill="rgb(208,106,33)" fg:x="2490" fg:w="10"/><text x="75.4539%" y="431.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (1 samples, 0.03%)</title><rect x="75.5059%" y="421" width="0.0302%" height="15" fill="rgb(206,54,4)" fg:x="2500" fg:w="1"/><text x="75.7559%" y="431.50"></text></g><g><title>chacha20::backends::avx2::inner (3 samples, 0.09%)</title><rect x="75.5361%" y="421" width="0.0906%" height="15" fill="rgb(213,3,15)" fg:x="2501" fg:w="3"/><text x="75.7861%" y="431.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (2 samples, 0.06%)</title><rect x="75.5663%" y="405" width="0.0604%" height="15" fill="rgb(252,211,39)" fg:x="2502" fg:w="2"/><text x="75.8163%" y="415.50"></text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;u8,N&gt;&gt;::xor_in2out (2 samples, 0.06%)</title><rect x="75.5663%" y="389" width="0.0604%" height="15" fill="rgb(223,6,36)" fg:x="2502" fg:w="2"/><text x="75.8163%" y="399.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (2 samples, 0.06%)</title><rect x="75.5663%" y="373" width="0.0604%" height="15" fill="rgb(252,169,45)" fg:x="2502" fg:w="2"/><text x="75.8163%" y="383.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (2 samples, 0.06%)</title><rect x="75.6267%" y="421" width="0.0604%" height="15" fill="rgb(212,48,26)" fg:x="2504" fg:w="2"/><text x="75.8767%" y="431.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.03%)</title><rect x="75.7777%" y="405" width="0.0302%" height="15" fill="rgb(251,102,48)" fg:x="2509" fg:w="1"/><text x="76.0277%" y="415.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (2 samples, 0.06%)</title><rect x="75.8079%" y="405" width="0.0604%" height="15" fill="rgb(243,208,16)" fg:x="2510" fg:w="2"/><text x="76.0579%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="75.8683%" y="405" width="0.0302%" height="15" fill="rgb(219,96,24)" fg:x="2512" fg:w="1"/><text x="76.1183%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="75.8985%" y="405" width="0.0302%" height="15" fill="rgb(219,33,29)" fg:x="2513" fg:w="1"/><text x="76.1485%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (9 samples, 0.27%)</title><rect x="75.6871%" y="421" width="0.2718%" height="15" fill="rgb(223,176,5)" fg:x="2506" fg:w="9"/><text x="75.9371%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="75.9287%" y="405" width="0.0302%" height="15" fill="rgb(228,140,14)" fg:x="2514" fg:w="1"/><text x="76.1787%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.03%)</title><rect x="75.9589%" y="421" width="0.0302%" height="15" fill="rgb(217,179,31)" fg:x="2515" fg:w="1"/><text x="76.2089%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="76.0193%" y="405" width="0.0302%" height="15" fill="rgb(230,9,30)" fg:x="2517" fg:w="1"/><text x="76.2693%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.06%)</title><rect x="76.0495%" y="405" width="0.0604%" height="15" fill="rgb(230,136,20)" fg:x="2518" fg:w="2"/><text x="76.2995%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (5 samples, 0.15%)</title><rect x="75.9891%" y="421" width="0.1510%" height="15" fill="rgb(215,210,22)" fg:x="2516" fg:w="5"/><text x="76.2391%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="76.1099%" y="405" width="0.0302%" height="15" fill="rgb(218,43,5)" fg:x="2520" fg:w="1"/><text x="76.3599%" y="415.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.03%)</title><rect x="76.1099%" y="389" width="0.0302%" height="15" fill="rgb(216,11,5)" fg:x="2520" fg:w="1"/><text x="76.3599%" y="399.50"></text></g><g><title>chacha20::backends::avx2::rounds (1 samples, 0.03%)</title><rect x="76.1703%" y="405" width="0.0302%" height="15" fill="rgb(209,82,29)" fg:x="2522" fg:w="1"/><text x="76.4203%" y="415.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.03%)</title><rect x="76.2005%" y="405" width="0.0302%" height="15" fill="rgb(244,115,12)" fg:x="2523" fg:w="1"/><text x="76.4505%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (3 samples, 0.09%)</title><rect x="76.2307%" y="405" width="0.0906%" height="15" fill="rgb(222,82,18)" fg:x="2524" fg:w="3"/><text x="76.4807%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (7 samples, 0.21%)</title><rect x="76.1401%" y="421" width="0.2114%" height="15" fill="rgb(249,227,8)" fg:x="2521" fg:w="7"/><text x="76.3901%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="76.3214%" y="405" width="0.0302%" height="15" fill="rgb(253,141,45)" fg:x="2527" fg:w="1"/><text x="76.5714%" y="415.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (2 samples, 0.06%)</title><rect x="76.4724%" y="405" width="0.0604%" height="15" fill="rgb(234,184,4)" fg:x="2532" fg:w="2"/><text x="76.7224%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (7 samples, 0.21%)</title><rect x="76.3516%" y="421" width="0.2114%" height="15" fill="rgb(218,194,23)" fg:x="2528" fg:w="7"/><text x="76.6016%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="76.5328%" y="405" width="0.0302%" height="15" fill="rgb(235,66,41)" fg:x="2534" fg:w="1"/><text x="76.7828%" y="415.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="76.9858%" y="405" width="0.0302%" height="15" fill="rgb(245,217,1)" fg:x="2549" fg:w="1"/><text x="77.2358%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="77.0160%" y="405" width="0.0302%" height="15" fill="rgb(229,91,1)" fg:x="2550" fg:w="1"/><text x="77.2660%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (17 samples, 0.51%)</title><rect x="76.5630%" y="421" width="0.5134%" height="15" fill="rgb(207,101,30)" fg:x="2535" fg:w="17"/><text x="76.8130%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="77.0462%" y="405" width="0.0302%" height="15" fill="rgb(223,82,49)" fg:x="2551" fg:w="1"/><text x="77.2962%" y="415.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (1 samples, 0.03%)</title><rect x="77.0764%" y="421" width="0.0302%" height="15" fill="rgb(218,167,17)" fg:x="2552" fg:w="1"/><text x="77.3264%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (9 samples, 0.27%)</title><rect x="77.1066%" y="421" width="0.2718%" height="15" fill="rgb(208,103,14)" fg:x="2553" fg:w="9"/><text x="77.3566%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (8 samples, 0.24%)</title><rect x="77.3784%" y="421" width="0.2416%" height="15" fill="rgb(238,20,8)" fg:x="2562" fg:w="8"/><text x="77.6284%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (3 samples, 0.09%)</title><rect x="77.6201%" y="421" width="0.0906%" height="15" fill="rgb(218,80,54)" fg:x="2570" fg:w="3"/><text x="77.8701%" y="431.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (103 samples, 3.11%)</title><rect x="74.9320%" y="437" width="3.1108%" height="15" fill="rgb(240,144,17)" fg:x="2481" fg:w="103"/><text x="75.1820%" y="447.50">cha..</text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (11 samples, 0.33%)</title><rect x="77.7107%" y="421" width="0.3322%" height="15" fill="rgb(245,27,50)" fg:x="2573" fg:w="11"/><text x="77.9607%" y="431.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="78.0731%" y="421" width="0.0302%" height="15" fill="rgb(251,51,7)" fg:x="2585" fg:w="1"/><text x="78.3231%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.03%)</title><rect x="78.1033%" y="421" width="0.0302%" height="15" fill="rgb(245,217,29)" fg:x="2586" fg:w="1"/><text x="78.3533%" y="431.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="78.1033%" y="405" width="0.0302%" height="15" fill="rgb(221,176,29)" fg:x="2586" fg:w="1"/><text x="78.3533%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.03%)</title><rect x="78.1335%" y="421" width="0.0302%" height="15" fill="rgb(212,180,24)" fg:x="2587" fg:w="1"/><text x="78.3835%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (2 samples, 0.06%)</title><rect x="78.1637%" y="421" width="0.0604%" height="15" fill="rgb(254,24,2)" fg:x="2588" fg:w="2"/><text x="78.4137%" y="431.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (8 samples, 0.24%)</title><rect x="78.0429%" y="437" width="0.2416%" height="15" fill="rgb(230,100,2)" fg:x="2584" fg:w="8"/><text x="78.2929%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.06%)</title><rect x="78.2241%" y="421" width="0.0604%" height="15" fill="rgb(219,142,25)" fg:x="2590" fg:w="2"/><text x="78.4741%" y="431.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="78.2845%" y="421" width="0.0302%" height="15" fill="rgb(240,73,43)" fg:x="2592" fg:w="1"/><text x="78.5345%" y="431.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="78.3147%" y="421" width="0.0302%" height="15" fill="rgb(214,114,15)" fg:x="2593" fg:w="1"/><text x="78.5647%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="78.3449%" y="405" width="0.0302%" height="15" fill="rgb(207,130,4)" fg:x="2594" fg:w="1"/><text x="78.5949%" y="415.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.03%)</title><rect x="78.3449%" y="389" width="0.0302%" height="15" fill="rgb(221,25,40)" fg:x="2594" fg:w="1"/><text x="78.5949%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (2 samples, 0.06%)</title><rect x="78.3449%" y="421" width="0.0604%" height="15" fill="rgb(241,184,7)" fg:x="2594" fg:w="2"/><text x="78.5949%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="78.3751%" y="405" width="0.0302%" height="15" fill="rgb(235,159,4)" fg:x="2595" fg:w="1"/><text x="78.6251%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="78.4053%" y="421" width="0.0302%" height="15" fill="rgb(214,87,48)" fg:x="2596" fg:w="1"/><text x="78.6553%" y="431.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (8 samples, 0.24%)</title><rect x="78.2845%" y="437" width="0.2416%" height="15" fill="rgb(246,198,24)" fg:x="2592" fg:w="8"/><text x="78.5345%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (3 samples, 0.09%)</title><rect x="78.4355%" y="421" width="0.0906%" height="15" fill="rgb(209,66,40)" fg:x="2597" fg:w="3"/><text x="78.6855%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (2 samples, 0.06%)</title><rect x="78.5261%" y="437" width="0.0604%" height="15" fill="rgb(233,147,39)" fg:x="2600" fg:w="2"/><text x="78.7761%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.03%)</title><rect x="78.5865%" y="437" width="0.0302%" height="15" fill="rgb(231,145,52)" fg:x="2602" fg:w="1"/><text x="78.8365%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.03%)</title><rect x="78.6167%" y="437" width="0.0302%" height="15" fill="rgb(206,20,26)" fg:x="2603" fg:w="1"/><text x="78.8667%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="78.6469%" y="437" width="0.0302%" height="15" fill="rgb(238,220,4)" fg:x="2604" fg:w="1"/><text x="78.8969%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (3 samples, 0.09%)</title><rect x="78.6771%" y="437" width="0.0906%" height="15" fill="rgb(252,195,42)" fg:x="2605" fg:w="3"/><text x="78.9271%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.06%)</title><rect x="78.7677%" y="437" width="0.0604%" height="15" fill="rgb(209,10,6)" fg:x="2608" fg:w="2"/><text x="79.0177%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="78.8281%" y="437" width="0.0302%" height="15" fill="rgb(229,3,52)" fg:x="2610" fg:w="1"/><text x="79.0781%" y="447.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (133 samples, 4.02%)</title><rect x="74.9320%" y="453" width="4.0169%" height="15" fill="rgb(253,49,37)" fg:x="2481" fg:w="133"/><text x="75.1820%" y="463.50">chac..</text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (3 samples, 0.09%)</title><rect x="78.8584%" y="437" width="0.0906%" height="15" fill="rgb(240,103,49)" fg:x="2611" fg:w="3"/><text x="79.1084%" y="447.50"></text></g><g><title>&lt;cipher::stream_core::WriteBlockCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (134 samples, 4.05%)</title><rect x="74.9320%" y="501" width="4.0471%" height="15" fill="rgb(250,182,30)" fg:x="2481" fg:w="134"/><text x="75.1820%" y="511.50">&lt;cip..</text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (134 samples, 4.05%)</title><rect x="74.9320%" y="485" width="4.0471%" height="15" fill="rgb(248,8,30)" fg:x="2481" fg:w="134"/><text x="75.1820%" y="495.50">&lt;cha..</text></g><g><title>chacha20::backends::avx2::rounds (134 samples, 4.05%)</title><rect x="74.9320%" y="469" width="4.0471%" height="15" fill="rgb(237,120,30)" fg:x="2481" fg:w="134"/><text x="75.1820%" y="479.50">chac..</text></g><g><title>chacha20::backends::avx2::inner (1 samples, 0.03%)</title><rect x="78.9490%" y="453" width="0.0302%" height="15" fill="rgb(221,146,34)" fg:x="2614" fg:w="1"/><text x="79.1990%" y="463.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (1 samples, 0.03%)</title><rect x="78.9490%" y="437" width="0.0302%" height="15" fill="rgb(242,55,13)" fg:x="2614" fg:w="1"/><text x="79.1990%" y="447.50"></text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;u8,N&gt;&gt;::xor_in2out (1 samples, 0.03%)</title><rect x="78.9490%" y="421" width="0.0302%" height="15" fill="rgb(242,112,31)" fg:x="2614" fg:w="1"/><text x="79.1990%" y="431.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (401 samples, 12.11%)</title><rect x="66.8982%" y="613" width="12.1111%" height="15" fill="rgb(249,192,27)" fg:x="2215" fg:w="401"/><text x="67.1482%" y="623.50">cipher::stream::St..</text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (401 samples, 12.11%)</title><rect x="66.8982%" y="597" width="12.1111%" height="15" fill="rgb(208,204,44)" fg:x="2215" fg:w="401"/><text x="67.1482%" y="607.50">cipher::stream::St..</text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (401 samples, 12.11%)</title><rect x="66.8982%" y="581" width="12.1111%" height="15" fill="rgb(208,93,54)" fg:x="2215" fg:w="401"/><text x="67.1482%" y="591.50">&lt;cipher::stream_wr..</text></g><g><title>cipher::stream_core::StreamCipherCore::write_keystream_block (135 samples, 4.08%)</title><rect x="74.9320%" y="565" width="4.0773%" height="15" fill="rgb(242,1,31)" fg:x="2481" fg:w="135"/><text x="75.1820%" y="575.50">ciph..</text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (135 samples, 4.08%)</title><rect x="74.9320%" y="549" width="4.0773%" height="15" fill="rgb(241,83,25)" fg:x="2481" fg:w="135"/><text x="75.1820%" y="559.50">&lt;cha..</text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (135 samples, 4.08%)</title><rect x="74.9320%" y="533" width="4.0773%" height="15" fill="rgb(205,169,50)" fg:x="2481" fg:w="135"/><text x="75.1820%" y="543.50">&lt;cha..</text></g><g><title>chacha20::backends::avx2::inner (135 samples, 4.08%)</title><rect x="74.9320%" y="517" width="4.0773%" height="15" fill="rgb(239,186,37)" fg:x="2481" fg:w="135"/><text x="75.1820%" y="527.50">chac..</text></g><g><title>chacha20::backends::avx2::inner (1 samples, 0.03%)</title><rect x="78.9792%" y="501" width="0.0302%" height="15" fill="rgb(205,221,10)" fg:x="2615" fg:w="1"/><text x="79.2292%" y="511.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (1 samples, 0.03%)</title><rect x="78.9792%" y="485" width="0.0302%" height="15" fill="rgb(218,196,15)" fg:x="2615" fg:w="1"/><text x="79.2292%" y="495.50"></text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;u8,N&gt;&gt;::xor_in2out (1 samples, 0.03%)</title><rect x="78.9792%" y="469" width="0.0302%" height="15" fill="rgb(218,196,35)" fg:x="2615" fg:w="1"/><text x="79.2292%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (3 samples, 0.09%)</title><rect x="79.0094%" y="501" width="0.0906%" height="15" fill="rgb(233,63,24)" fg:x="2616" fg:w="3"/><text x="79.2594%" y="511.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (4 samples, 0.12%)</title><rect x="79.1000%" y="501" width="0.1208%" height="15" fill="rgb(225,8,4)" fg:x="2619" fg:w="4"/><text x="79.3500%" y="511.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (1 samples, 0.03%)</title><rect x="79.2208%" y="501" width="0.0302%" height="15" fill="rgb(234,105,35)" fg:x="2623" fg:w="1"/><text x="79.4708%" y="511.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (9 samples, 0.27%)</title><rect x="79.2510%" y="501" width="0.2718%" height="15" fill="rgb(236,21,32)" fg:x="2624" fg:w="9"/><text x="79.5010%" y="511.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (9 samples, 0.27%)</title><rect x="79.2510%" y="485" width="0.2718%" height="15" fill="rgb(228,109,6)" fg:x="2624" fg:w="9"/><text x="79.5010%" y="495.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (9 samples, 0.27%)</title><rect x="79.2510%" y="469" width="0.2718%" height="15" fill="rgb(229,215,31)" fg:x="2624" fg:w="9"/><text x="79.5010%" y="479.50"></text></g><g><title>core::core_arch::simd::i8x32::new (1 samples, 0.03%)</title><rect x="79.4926%" y="453" width="0.0302%" height="15" fill="rgb(221,52,54)" fg:x="2632" fg:w="1"/><text x="79.7426%" y="463.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="79.5228%" y="501" width="0.0302%" height="15" fill="rgb(252,129,43)" fg:x="2633" fg:w="1"/><text x="79.7728%" y="511.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (3 samples, 0.09%)</title><rect x="79.5530%" y="501" width="0.0906%" height="15" fill="rgb(248,183,27)" fg:x="2634" fg:w="3"/><text x="79.8030%" y="511.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (3 samples, 0.09%)</title><rect x="79.6436%" y="501" width="0.0906%" height="15" fill="rgb(250,0,22)" fg:x="2637" fg:w="3"/><text x="79.8936%" y="511.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (6 samples, 0.18%)</title><rect x="79.7342%" y="501" width="0.1812%" height="15" fill="rgb(213,166,10)" fg:x="2640" fg:w="6"/><text x="79.9842%" y="511.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (3 samples, 0.09%)</title><rect x="79.9456%" y="469" width="0.0906%" height="15" fill="rgb(207,163,36)" fg:x="2647" fg:w="3"/><text x="80.1956%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (3 samples, 0.09%)</title><rect x="80.4289%" y="453" width="0.0906%" height="15" fill="rgb(208,122,22)" fg:x="2663" fg:w="3"/><text x="80.6789%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.03%)</title><rect x="80.5195%" y="453" width="0.0302%" height="15" fill="rgb(207,104,49)" fg:x="2666" fg:w="1"/><text x="80.7695%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (2 samples, 0.06%)</title><rect x="80.5497%" y="453" width="0.0604%" height="15" fill="rgb(248,211,50)" fg:x="2667" fg:w="2"/><text x="80.7997%" y="463.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="80.6101%" y="453" width="0.0302%" height="15" fill="rgb(217,13,45)" fg:x="2669" fg:w="1"/><text x="80.8601%" y="463.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="80.6101%" y="437" width="0.0302%" height="15" fill="rgb(211,216,49)" fg:x="2669" fg:w="1"/><text x="80.8601%" y="447.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="80.6101%" y="421" width="0.0302%" height="15" fill="rgb(221,58,53)" fg:x="2669" fg:w="1"/><text x="80.8601%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (21 samples, 0.63%)</title><rect x="80.0362%" y="469" width="0.6342%" height="15" fill="rgb(220,112,41)" fg:x="2650" fg:w="21"/><text x="80.2862%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.03%)</title><rect x="80.6403%" y="453" width="0.0302%" height="15" fill="rgb(236,38,28)" fg:x="2670" fg:w="1"/><text x="80.8903%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (2 samples, 0.06%)</title><rect x="80.6705%" y="469" width="0.0604%" height="15" fill="rgb(227,195,22)" fg:x="2671" fg:w="2"/><text x="80.9205%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_blend_epi32 (1 samples, 0.03%)</title><rect x="80.7309%" y="469" width="0.0302%" height="15" fill="rgb(214,55,33)" fg:x="2673" fg:w="1"/><text x="80.9809%" y="479.50"></text></g><g><title>core::core_arch::simd::u64x4::splat (3 samples, 0.09%)</title><rect x="81.6068%" y="453" width="0.0906%" height="15" fill="rgb(248,80,13)" fg:x="2702" fg:w="3"/><text x="81.8568%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.03%)</title><rect x="81.6974%" y="453" width="0.0302%" height="15" fill="rgb(238,52,6)" fg:x="2705" fg:w="1"/><text x="81.9474%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (4 samples, 0.12%)</title><rect x="81.7276%" y="453" width="0.1208%" height="15" fill="rgb(224,198,47)" fg:x="2706" fg:w="4"/><text x="81.9776%" y="463.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_loadu_si256 (1 samples, 0.03%)</title><rect x="81.8484%" y="453" width="0.0302%" height="15" fill="rgb(233,171,20)" fg:x="2710" fg:w="1"/><text x="82.0984%" y="463.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_undefined_si256 (1 samples, 0.03%)</title><rect x="81.8484%" y="437" width="0.0302%" height="15" fill="rgb(241,30,25)" fg:x="2710" fg:w="1"/><text x="82.0984%" y="447.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi32 (1 samples, 0.03%)</title><rect x="81.8786%" y="453" width="0.0302%" height="15" fill="rgb(207,171,38)" fg:x="2711" fg:w="1"/><text x="82.1286%" y="463.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi32 (1 samples, 0.03%)</title><rect x="81.8786%" y="437" width="0.0302%" height="15" fill="rgb(234,70,1)" fg:x="2711" fg:w="1"/><text x="82.1286%" y="447.50"></text></g><g><title>core::core_arch::simd::i32x8::new (1 samples, 0.03%)</title><rect x="81.8786%" y="421" width="0.0302%" height="15" fill="rgb(232,178,18)" fg:x="2711" fg:w="1"/><text x="82.1286%" y="431.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (2 samples, 0.06%)</title><rect x="81.9088%" y="453" width="0.0604%" height="15" fill="rgb(241,78,40)" fg:x="2712" fg:w="2"/><text x="82.1588%" y="463.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (2 samples, 0.06%)</title><rect x="81.9088%" y="437" width="0.0604%" height="15" fill="rgb(222,35,25)" fg:x="2712" fg:w="2"/><text x="82.1588%" y="447.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (2 samples, 0.06%)</title><rect x="81.9088%" y="421" width="0.0604%" height="15" fill="rgb(207,92,16)" fg:x="2712" fg:w="2"/><text x="82.1588%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (5 samples, 0.15%)</title><rect x="81.9692%" y="453" width="0.1510%" height="15" fill="rgb(216,59,51)" fg:x="2714" fg:w="5"/><text x="82.2192%" y="463.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (2 samples, 0.06%)</title><rect x="82.1202%" y="453" width="0.0604%" height="15" fill="rgb(213,80,28)" fg:x="2719" fg:w="2"/><text x="82.3702%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (49 samples, 1.48%)</title><rect x="80.7611%" y="469" width="1.4799%" height="15" fill="rgb(220,93,7)" fg:x="2674" fg:w="49"/><text x="81.0111%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (2 samples, 0.06%)</title><rect x="82.1806%" y="453" width="0.0604%" height="15" fill="rgb(225,24,44)" fg:x="2721" fg:w="2"/><text x="82.4306%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (7 samples, 0.21%)</title><rect x="82.2410%" y="469" width="0.2114%" height="15" fill="rgb(243,74,40)" fg:x="2723" fg:w="7"/><text x="82.4910%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.03%)</title><rect x="82.5732%" y="453" width="0.0302%" height="15" fill="rgb(228,39,7)" fg:x="2734" fg:w="1"/><text x="82.8232%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_blend_epi32 (3 samples, 0.09%)</title><rect x="82.6034%" y="453" width="0.0906%" height="15" fill="rgb(227,79,8)" fg:x="2735" fg:w="3"/><text x="82.8534%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (1 samples, 0.03%)</title><rect x="82.6941%" y="453" width="0.0302%" height="15" fill="rgb(236,58,11)" fg:x="2738" fg:w="1"/><text x="82.9441%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi64 (1 samples, 0.03%)</title><rect x="82.7243%" y="453" width="0.0302%" height="15" fill="rgb(249,63,35)" fg:x="2739" fg:w="1"/><text x="82.9743%" y="463.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (7 samples, 0.21%)</title><rect x="82.7545%" y="453" width="0.2114%" height="15" fill="rgb(252,114,16)" fg:x="2740" fg:w="7"/><text x="83.0045%" y="463.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (7 samples, 0.21%)</title><rect x="82.7545%" y="437" width="0.2114%" height="15" fill="rgb(254,151,24)" fg:x="2740" fg:w="7"/><text x="83.0045%" y="447.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (6 samples, 0.18%)</title><rect x="82.7847%" y="421" width="0.1812%" height="15" fill="rgb(253,54,39)" fg:x="2741" fg:w="6"/><text x="83.0347%" y="431.50"></text></g><g><title>core::core_arch::simd::i8x32::new (1 samples, 0.03%)</title><rect x="82.9357%" y="405" width="0.0302%" height="15" fill="rgb(243,25,45)" fg:x="2746" fg:w="1"/><text x="83.1857%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (3 samples, 0.09%)</title><rect x="82.9659%" y="453" width="0.0906%" height="15" fill="rgb(234,134,9)" fg:x="2747" fg:w="3"/><text x="83.2159%" y="463.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.03%)</title><rect x="83.0565%" y="453" width="0.0302%" height="15" fill="rgb(227,166,31)" fg:x="2750" fg:w="1"/><text x="83.3065%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (22 samples, 0.66%)</title><rect x="82.4524%" y="469" width="0.6645%" height="15" fill="rgb(245,143,41)" fg:x="2730" fg:w="22"/><text x="82.7024%" y="479.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (1 samples, 0.03%)</title><rect x="83.0867%" y="453" width="0.0302%" height="15" fill="rgb(238,181,32)" fg:x="2751" fg:w="1"/><text x="83.3367%" y="463.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (1 samples, 0.03%)</title><rect x="83.0867%" y="437" width="0.0302%" height="15" fill="rgb(224,113,18)" fg:x="2751" fg:w="1"/><text x="83.3367%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (7 samples, 0.21%)</title><rect x="83.1169%" y="469" width="0.2114%" height="15" fill="rgb(240,229,28)" fg:x="2752" fg:w="7"/><text x="83.3669%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="83.2981%" y="453" width="0.0302%" height="15" fill="rgb(250,185,3)" fg:x="2758" fg:w="1"/><text x="83.5481%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi64 (4 samples, 0.12%)</title><rect x="83.3283%" y="469" width="0.1208%" height="15" fill="rgb(212,59,25)" fg:x="2759" fg:w="4"/><text x="83.5783%" y="479.50"></text></g><g><title>core::core_arch::simd::u64x4::splat (2 samples, 0.06%)</title><rect x="83.3887%" y="453" width="0.0604%" height="15" fill="rgb(221,87,20)" fg:x="2761" fg:w="2"/><text x="83.6387%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_unpackhi_epi64 (1 samples, 0.03%)</title><rect x="83.4491%" y="469" width="0.0302%" height="15" fill="rgb(213,74,28)" fg:x="2763" fg:w="1"/><text x="83.6991%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_unpacklo_epi64 (1 samples, 0.03%)</title><rect x="83.4793%" y="469" width="0.0302%" height="15" fill="rgb(224,132,34)" fg:x="2764" fg:w="1"/><text x="83.7293%" y="479.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_loadu_si256 (1 samples, 0.03%)</title><rect x="83.5095%" y="469" width="0.0302%" height="15" fill="rgb(222,101,24)" fg:x="2765" fg:w="1"/><text x="83.7595%" y="479.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_undefined_si256 (1 samples, 0.03%)</title><rect x="83.5095%" y="453" width="0.0302%" height="15" fill="rgb(254,142,4)" fg:x="2765" fg:w="1"/><text x="83.7595%" y="463.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi32 (1 samples, 0.03%)</title><rect x="83.5397%" y="469" width="0.0302%" height="15" fill="rgb(230,229,49)" fg:x="2766" fg:w="1"/><text x="83.7897%" y="479.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (18 samples, 0.54%)</title><rect x="83.5699%" y="469" width="0.5436%" height="15" fill="rgb(238,70,47)" fg:x="2767" fg:w="18"/><text x="83.8199%" y="479.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (17 samples, 0.51%)</title><rect x="83.6001%" y="453" width="0.5134%" height="15" fill="rgb(231,160,17)" fg:x="2768" fg:w="17"/><text x="83.8501%" y="463.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (17 samples, 0.51%)</title><rect x="83.6001%" y="437" width="0.5134%" height="15" fill="rgb(218,68,53)" fg:x="2768" fg:w="17"/><text x="83.8501%" y="447.50"></text></g><g><title>core::core_arch::simd::i8x32::new (4 samples, 0.12%)</title><rect x="83.9928%" y="421" width="0.1208%" height="15" fill="rgb(236,111,10)" fg:x="2781" fg:w="4"/><text x="84.2428%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (3 samples, 0.09%)</title><rect x="84.1136%" y="469" width="0.0906%" height="15" fill="rgb(224,34,41)" fg:x="2785" fg:w="3"/><text x="84.3636%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (9 samples, 0.27%)</title><rect x="84.2042%" y="469" width="0.2718%" height="15" fill="rgb(241,118,19)" fg:x="2788" fg:w="9"/><text x="84.4542%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (7 samples, 0.21%)</title><rect x="84.4760%" y="469" width="0.2114%" height="15" fill="rgb(238,129,25)" fg:x="2797" fg:w="7"/><text x="84.7260%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (21 samples, 0.63%)</title><rect x="84.6874%" y="469" width="0.6342%" height="15" fill="rgb(238,22,31)" fg:x="2804" fg:w="21"/><text x="84.9374%" y="479.50"></text></g><g><title>poly1305::backend::avx2::State::compute_par_blocks (1 samples, 0.03%)</title><rect x="85.3217%" y="469" width="0.0302%" height="15" fill="rgb(222,174,48)" fg:x="2825" fg:w="1"/><text x="85.5717%" y="479.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (5 samples, 0.15%)</title><rect x="85.3519%" y="469" width="0.1510%" height="15" fill="rgb(206,152,40)" fg:x="2826" fg:w="5"/><text x="85.6019%" y="479.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (4 samples, 0.12%)</title><rect x="85.3821%" y="453" width="0.1208%" height="15" fill="rgb(218,99,54)" fg:x="2827" fg:w="4"/><text x="85.6321%" y="463.50"></text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_loaded_blocks (7 samples, 0.21%)</title><rect x="85.5029%" y="469" width="0.2114%" height="15" fill="rgb(220,174,26)" fg:x="2831" fg:w="7"/><text x="85.7529%" y="479.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (193 samples, 5.83%)</title><rect x="79.9154%" y="485" width="5.8291%" height="15" fill="rgb(245,116,9)" fg:x="2646" fg:w="193"/><text x="80.1654%" y="495.50">&lt;&amp;poly1..</text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_par_blocks (1 samples, 0.03%)</title><rect x="85.7143%" y="469" width="0.0302%" height="15" fill="rgb(209,72,35)" fg:x="2838" fg:w="1"/><text x="85.9643%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (1 samples, 0.03%)</title><rect x="85.7445%" y="453" width="0.0302%" height="15" fill="rgb(226,126,21)" fg:x="2839" fg:w="1"/><text x="85.9945%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (2 samples, 0.06%)</title><rect x="85.7445%" y="469" width="0.0604%" height="15" fill="rgb(227,192,1)" fg:x="2839" fg:w="2"/><text x="85.9945%" y="479.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (1 samples, 0.03%)</title><rect x="85.7747%" y="453" width="0.0302%" height="15" fill="rgb(237,180,29)" fg:x="2840" fg:w="1"/><text x="86.0247%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.03%)</title><rect x="85.8049%" y="469" width="0.0302%" height="15" fill="rgb(230,197,35)" fg:x="2841" fg:w="1"/><text x="86.0549%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.03%)</title><rect x="85.8351%" y="469" width="0.0302%" height="15" fill="rgb(246,193,31)" fg:x="2842" fg:w="1"/><text x="86.0851%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (2 samples, 0.06%)</title><rect x="85.8653%" y="469" width="0.0604%" height="15" fill="rgb(241,36,4)" fg:x="2843" fg:w="2"/><text x="86.1153%" y="479.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (1 samples, 0.03%)</title><rect x="85.9257%" y="469" width="0.0302%" height="15" fill="rgb(241,130,17)" fg:x="2845" fg:w="1"/><text x="86.1757%" y="479.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (1 samples, 0.03%)</title><rect x="85.9257%" y="453" width="0.0302%" height="15" fill="rgb(206,137,32)" fg:x="2845" fg:w="1"/><text x="86.1757%" y="463.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Add&gt;::add (9 samples, 0.27%)</title><rect x="85.7445%" y="485" width="0.2718%" height="15" fill="rgb(237,228,51)" fg:x="2839" fg:w="9"/><text x="85.9945%" y="495.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (2 samples, 0.06%)</title><rect x="85.9559%" y="469" width="0.0604%" height="15" fill="rgb(243,6,42)" fg:x="2846" fg:w="2"/><text x="86.2059%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (6 samples, 0.18%)</title><rect x="86.0163%" y="469" width="0.1812%" height="15" fill="rgb(251,74,28)" fg:x="2848" fg:w="6"/><text x="86.2663%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.03%)</title><rect x="86.1975%" y="469" width="0.0302%" height="15" fill="rgb(218,20,49)" fg:x="2854" fg:w="1"/><text x="86.4475%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="86.2277%" y="453" width="0.0302%" height="15" fill="rgb(238,28,14)" fg:x="2855" fg:w="1"/><text x="86.4777%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_blend_epi32 (2 samples, 0.06%)</title><rect x="86.2277%" y="469" width="0.0604%" height="15" fill="rgb(229,40,46)" fg:x="2855" fg:w="2"/><text x="86.4777%" y="479.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (1 samples, 0.03%)</title><rect x="86.2579%" y="453" width="0.0302%" height="15" fill="rgb(244,195,20)" fg:x="2856" fg:w="1"/><text x="86.5079%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (4 samples, 0.12%)</title><rect x="86.2881%" y="469" width="0.1208%" height="15" fill="rgb(253,56,35)" fg:x="2857" fg:w="4"/><text x="86.5381%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi64 (1 samples, 0.03%)</title><rect x="86.4089%" y="469" width="0.0302%" height="15" fill="rgb(210,149,44)" fg:x="2861" fg:w="1"/><text x="86.6589%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="86.4089%" y="453" width="0.0302%" height="15" fill="rgb(240,135,12)" fg:x="2861" fg:w="1"/><text x="86.6589%" y="463.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (2 samples, 0.06%)</title><rect x="86.4391%" y="469" width="0.0604%" height="15" fill="rgb(251,24,50)" fg:x="2862" fg:w="2"/><text x="86.6891%" y="479.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (2 samples, 0.06%)</title><rect x="86.4391%" y="453" width="0.0604%" height="15" fill="rgb(243,200,47)" fg:x="2862" fg:w="2"/><text x="86.6891%" y="463.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (2 samples, 0.06%)</title><rect x="86.4391%" y="437" width="0.0604%" height="15" fill="rgb(224,166,26)" fg:x="2862" fg:w="2"/><text x="86.6891%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.06%)</title><rect x="86.4995%" y="469" width="0.0604%" height="15" fill="rgb(233,0,47)" fg:x="2864" fg:w="2"/><text x="86.7495%" y="479.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (2 samples, 0.06%)</title><rect x="86.5600%" y="453" width="0.0604%" height="15" fill="rgb(253,80,5)" fg:x="2866" fg:w="2"/><text x="86.8100%" y="463.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (3 samples, 0.09%)</title><rect x="86.5600%" y="469" width="0.0906%" height="15" fill="rgb(214,133,25)" fg:x="2866" fg:w="3"/><text x="86.8100%" y="479.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (1 samples, 0.03%)</title><rect x="86.6204%" y="453" width="0.0302%" height="15" fill="rgb(209,27,14)" fg:x="2868" fg:w="1"/><text x="86.8704%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (3 samples, 0.09%)</title><rect x="86.9526%" y="437" width="0.0906%" height="15" fill="rgb(219,102,51)" fg:x="2879" fg:w="3"/><text x="87.2026%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (6 samples, 0.18%)</title><rect x="87.0432%" y="437" width="0.1812%" height="15" fill="rgb(237,18,16)" fg:x="2882" fg:w="6"/><text x="87.2932%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (2 samples, 0.06%)</title><rect x="87.2244%" y="437" width="0.0604%" height="15" fill="rgb(241,85,17)" fg:x="2888" fg:w="2"/><text x="87.4744%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.06%)</title><rect x="87.2848%" y="437" width="0.0604%" height="15" fill="rgb(236,90,42)" fg:x="2890" fg:w="2"/><text x="87.5348%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (23 samples, 0.69%)</title><rect x="86.6808%" y="453" width="0.6947%" height="15" fill="rgb(249,57,21)" fg:x="2870" fg:w="23"/><text x="86.9308%" y="463.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (1 samples, 0.03%)</title><rect x="87.3452%" y="437" width="0.0302%" height="15" fill="rgb(243,12,36)" fg:x="2892" fg:w="1"/><text x="87.5952%" y="447.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (1 samples, 0.03%)</title><rect x="87.3452%" y="421" width="0.0302%" height="15" fill="rgb(253,128,47)" fg:x="2892" fg:w="1"/><text x="87.5952%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (3 samples, 0.09%)</title><rect x="87.3754%" y="437" width="0.0906%" height="15" fill="rgb(207,33,20)" fg:x="2893" fg:w="3"/><text x="87.6254%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="87.4660%" y="437" width="0.0302%" height="15" fill="rgb(233,215,35)" fg:x="2896" fg:w="1"/><text x="87.7160%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="87.4962%" y="437" width="0.0302%" height="15" fill="rgb(249,188,52)" fg:x="2897" fg:w="1"/><text x="87.7462%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (6 samples, 0.18%)</title><rect x="87.3754%" y="453" width="0.1812%" height="15" fill="rgb(225,12,32)" fg:x="2893" fg:w="6"/><text x="87.6254%" y="463.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (1 samples, 0.03%)</title><rect x="87.5264%" y="437" width="0.0302%" height="15" fill="rgb(247,98,14)" fg:x="2898" fg:w="1"/><text x="87.7764%" y="447.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (1 samples, 0.03%)</title><rect x="87.5264%" y="421" width="0.0302%" height="15" fill="rgb(247,219,48)" fg:x="2898" fg:w="1"/><text x="87.7764%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (18 samples, 0.54%)</title><rect x="87.5566%" y="453" width="0.5436%" height="15" fill="rgb(253,60,48)" fg:x="2899" fg:w="18"/><text x="87.8066%" y="463.50"></text></g><g><title>core::core_arch::simd::u64x4::splat (2 samples, 0.06%)</title><rect x="88.0399%" y="437" width="0.0604%" height="15" fill="rgb(245,15,52)" fg:x="2915" fg:w="2"/><text x="88.2899%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.03%)</title><rect x="88.1305%" y="437" width="0.0302%" height="15" fill="rgb(220,133,28)" fg:x="2918" fg:w="1"/><text x="88.3805%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="88.1607%" y="437" width="0.0302%" height="15" fill="rgb(217,180,4)" fg:x="2919" fg:w="1"/><text x="88.4107%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.03%)</title><rect x="88.1909%" y="437" width="0.0302%" height="15" fill="rgb(251,24,1)" fg:x="2920" fg:w="1"/><text x="88.4409%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (5 samples, 0.15%)</title><rect x="88.1003%" y="453" width="0.1510%" height="15" fill="rgb(212,185,49)" fg:x="2917" fg:w="5"/><text x="88.3503%" y="463.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (1 samples, 0.03%)</title><rect x="88.2211%" y="437" width="0.0302%" height="15" fill="rgb(215,175,22)" fg:x="2921" fg:w="1"/><text x="88.4711%" y="447.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (3 samples, 0.09%)</title><rect x="88.2513%" y="453" width="0.0906%" height="15" fill="rgb(250,205,14)" fg:x="2922" fg:w="3"/><text x="88.5013%" y="463.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (3 samples, 0.09%)</title><rect x="88.2513%" y="437" width="0.0906%" height="15" fill="rgb(225,211,22)" fg:x="2922" fg:w="3"/><text x="88.5013%" y="447.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (3 samples, 0.09%)</title><rect x="88.2513%" y="421" width="0.0906%" height="15" fill="rgb(251,179,42)" fg:x="2922" fg:w="3"/><text x="88.5013%" y="431.50"></text></g><g><title>core::core_arch::simd::i8x32::new (1 samples, 0.03%)</title><rect x="88.3117%" y="405" width="0.0302%" height="15" fill="rgb(208,216,51)" fg:x="2924" fg:w="1"/><text x="88.5617%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (3 samples, 0.09%)</title><rect x="88.3419%" y="453" width="0.0906%" height="15" fill="rgb(235,36,11)" fg:x="2925" fg:w="3"/><text x="88.5919%" y="463.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (3 samples, 0.09%)</title><rect x="88.4325%" y="453" width="0.0906%" height="15" fill="rgb(213,189,28)" fg:x="2928" fg:w="3"/><text x="88.6825%" y="463.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (9 samples, 0.27%)</title><rect x="88.5231%" y="453" width="0.2718%" height="15" fill="rgb(227,203,42)" fg:x="2931" fg:w="9"/><text x="88.7731%" y="463.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (4 samples, 0.12%)</title><rect x="88.7949%" y="453" width="0.1208%" height="15" fill="rgb(244,72,36)" fg:x="2940" fg:w="4"/><text x="89.0449%" y="463.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (4 samples, 0.12%)</title><rect x="88.7949%" y="437" width="0.1208%" height="15" fill="rgb(213,53,17)" fg:x="2940" fg:w="4"/><text x="89.0449%" y="447.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (301 samples, 9.09%)</title><rect x="79.9154%" y="501" width="9.0909%" height="15" fill="rgb(207,167,3)" fg:x="2646" fg:w="301"/><text x="80.1654%" y="511.50">poly1305::bac..</text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (99 samples, 2.99%)</title><rect x="86.0163%" y="485" width="2.9900%" height="15" fill="rgb(216,98,30)" fg:x="2848" fg:w="99"/><text x="86.2663%" y="495.50">pol..</text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (78 samples, 2.36%)</title><rect x="86.6506%" y="469" width="2.3558%" height="15" fill="rgb(236,123,15)" fg:x="2869" fg:w="78"/><text x="86.9006%" y="479.50">p..</text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (3 samples, 0.09%)</title><rect x="88.9157%" y="453" width="0.0906%" height="15" fill="rgb(248,81,50)" fg:x="2944" fg:w="3"/><text x="89.1657%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (5 samples, 0.15%)</title><rect x="89.0365%" y="469" width="0.1510%" height="15" fill="rgb(214,120,4)" fg:x="2948" fg:w="5"/><text x="89.2865%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (2 samples, 0.06%)</title><rect x="89.1876%" y="453" width="0.0604%" height="15" fill="rgb(208,179,34)" fg:x="2953" fg:w="2"/><text x="89.4376%" y="463.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (2 samples, 0.06%)</title><rect x="89.2480%" y="453" width="0.0604%" height="15" fill="rgb(227,140,7)" fg:x="2955" fg:w="2"/><text x="89.4980%" y="463.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (1 samples, 0.03%)</title><rect x="89.3084%" y="453" width="0.0302%" height="15" fill="rgb(214,22,6)" fg:x="2957" fg:w="1"/><text x="89.5584%" y="463.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (1 samples, 0.03%)</title><rect x="89.3084%" y="437" width="0.0302%" height="15" fill="rgb(207,137,27)" fg:x="2957" fg:w="1"/><text x="89.5584%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (6 samples, 0.18%)</title><rect x="89.1876%" y="469" width="0.1812%" height="15" fill="rgb(210,8,46)" fg:x="2953" fg:w="6"/><text x="89.4376%" y="479.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (1 samples, 0.03%)</title><rect x="89.3386%" y="453" width="0.0302%" height="15" fill="rgb(240,16,54)" fg:x="2958" fg:w="1"/><text x="89.5886%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.03%)</title><rect x="89.3688%" y="469" width="0.0302%" height="15" fill="rgb(211,209,29)" fg:x="2959" fg:w="1"/><text x="89.6188%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (1 samples, 0.03%)</title><rect x="89.3990%" y="469" width="0.0302%" height="15" fill="rgb(226,228,24)" fg:x="2960" fg:w="1"/><text x="89.6490%" y="479.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (1 samples, 0.03%)</title><rect x="89.3990%" y="453" width="0.0302%" height="15" fill="rgb(222,84,9)" fg:x="2960" fg:w="1"/><text x="89.6490%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.03%)</title><rect x="89.4292%" y="453" width="0.0302%" height="15" fill="rgb(234,203,30)" fg:x="2961" fg:w="1"/><text x="89.6792%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (1 samples, 0.03%)</title><rect x="89.4594%" y="453" width="0.0302%" height="15" fill="rgb(238,109,14)" fg:x="2962" fg:w="1"/><text x="89.7094%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (2 samples, 0.06%)</title><rect x="89.4896%" y="453" width="0.0604%" height="15" fill="rgb(233,206,34)" fg:x="2963" fg:w="2"/><text x="89.7396%" y="463.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="89.5500%" y="453" width="0.0302%" height="15" fill="rgb(220,167,47)" fg:x="2965" fg:w="1"/><text x="89.8000%" y="463.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="89.5500%" y="437" width="0.0302%" height="15" fill="rgb(238,105,10)" fg:x="2965" fg:w="1"/><text x="89.8000%" y="447.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="89.5500%" y="421" width="0.0302%" height="15" fill="rgb(213,227,17)" fg:x="2965" fg:w="1"/><text x="89.8000%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (6 samples, 0.18%)</title><rect x="89.5802%" y="453" width="0.1812%" height="15" fill="rgb(217,132,38)" fg:x="2966" fg:w="6"/><text x="89.8302%" y="463.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (3 samples, 0.09%)</title><rect x="89.7614%" y="453" width="0.0906%" height="15" fill="rgb(242,146,4)" fg:x="2972" fg:w="3"/><text x="90.0114%" y="463.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (2 samples, 0.06%)</title><rect x="89.8520%" y="453" width="0.0604%" height="15" fill="rgb(212,61,9)" fg:x="2975" fg:w="2"/><text x="90.1020%" y="463.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (2 samples, 0.06%)</title><rect x="89.8520%" y="437" width="0.0604%" height="15" fill="rgb(247,126,22)" fg:x="2975" fg:w="2"/><text x="90.1020%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (17 samples, 0.51%)</title><rect x="89.4292%" y="469" width="0.5134%" height="15" fill="rgb(220,196,2)" fg:x="2961" fg:w="17"/><text x="89.6792%" y="479.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (1 samples, 0.03%)</title><rect x="89.9124%" y="453" width="0.0302%" height="15" fill="rgb(208,46,4)" fg:x="2977" fg:w="1"/><text x="90.1624%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi64 (1 samples, 0.03%)</title><rect x="89.9426%" y="469" width="0.0302%" height="15" fill="rgb(252,104,46)" fg:x="2978" fg:w="1"/><text x="90.1926%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (5 samples, 0.15%)</title><rect x="89.9728%" y="469" width="0.1510%" height="15" fill="rgb(237,152,48)" fg:x="2979" fg:w="5"/><text x="90.2228%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.03%)</title><rect x="90.1238%" y="453" width="0.0302%" height="15" fill="rgb(221,59,37)" fg:x="2984" fg:w="1"/><text x="90.3738%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_unpackhi_epi64 (2 samples, 0.06%)</title><rect x="90.1238%" y="469" width="0.0604%" height="15" fill="rgb(209,202,51)" fg:x="2984" fg:w="2"/><text x="90.3738%" y="479.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (1 samples, 0.03%)</title><rect x="90.1540%" y="453" width="0.0302%" height="15" fill="rgb(228,81,30)" fg:x="2985" fg:w="1"/><text x="90.4040%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_unpacklo_epi64 (1 samples, 0.03%)</title><rect x="90.1842%" y="469" width="0.0302%" height="15" fill="rgb(227,42,39)" fg:x="2986" fg:w="1"/><text x="90.4342%" y="479.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (1 samples, 0.03%)</title><rect x="90.1842%" y="453" width="0.0302%" height="15" fill="rgb(221,26,2)" fg:x="2986" fg:w="1"/><text x="90.4342%" y="463.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (1 samples, 0.03%)</title><rect x="90.1842%" y="437" width="0.0302%" height="15" fill="rgb(254,61,31)" fg:x="2986" fg:w="1"/><text x="90.4342%" y="447.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (1 samples, 0.03%)</title><rect x="90.2144%" y="469" width="0.0302%" height="15" fill="rgb(222,173,38)" fg:x="2987" fg:w="1"/><text x="90.4644%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.06%)</title><rect x="90.2446%" y="469" width="0.0604%" height="15" fill="rgb(218,50,12)" fg:x="2988" fg:w="2"/><text x="90.4946%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (13 samples, 0.39%)</title><rect x="90.3050%" y="469" width="0.3926%" height="15" fill="rgb(223,88,40)" fg:x="2990" fg:w="13"/><text x="90.5550%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (4 samples, 0.12%)</title><rect x="90.6977%" y="469" width="0.1208%" height="15" fill="rgb(237,54,19)" fg:x="3003" fg:w="4"/><text x="90.9477%" y="479.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (5 samples, 0.15%)</title><rect x="90.8185%" y="469" width="0.1510%" height="15" fill="rgb(251,129,25)" fg:x="3007" fg:w="5"/><text x="91.0685%" y="479.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (5 samples, 0.15%)</title><rect x="90.8185%" y="453" width="0.1510%" height="15" fill="rgb(238,97,19)" fg:x="3007" fg:w="5"/><text x="91.0685%" y="463.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::encrypt_in_place_detached (821 samples, 24.80%)</title><rect x="66.3848%" y="629" width="24.7961%" height="15" fill="rgb(240,169,18)" fg:x="2198" fg:w="821"/><text x="66.6348%" y="639.50">chacha20poly1305::cipher::Cipher&lt;C&gt;::enc..</text></g><g><title>universal_hash::UniversalHash::update_padded (403 samples, 12.17%)</title><rect x="79.0094%" y="613" width="12.1715%" height="15" fill="rgb(230,187,49)" fg:x="2616" fg:w="403"/><text x="79.2594%" y="623.50">universal_hash::Un..</text></g><g><title>universal_hash::UniversalHash::update (403 samples, 12.17%)</title><rect x="79.0094%" y="597" width="12.1715%" height="15" fill="rgb(209,44,26)" fg:x="2616" fg:w="403"/><text x="79.2594%" y="607.50">universal_hash::Un..</text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (403 samples, 12.17%)</title><rect x="79.0094%" y="581" width="12.1715%" height="15" fill="rgb(244,0,6)" fg:x="2616" fg:w="403"/><text x="79.2594%" y="591.50">&lt;poly1305::Poly130..</text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (403 samples, 12.17%)</title><rect x="79.0094%" y="565" width="12.1715%" height="15" fill="rgb(248,18,21)" fg:x="2616" fg:w="403"/><text x="79.2594%" y="575.50">&lt;poly1305::backend..</text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (403 samples, 12.17%)</title><rect x="79.0094%" y="549" width="12.1715%" height="15" fill="rgb(245,180,19)" fg:x="2616" fg:w="403"/><text x="79.2594%" y="559.50">&lt;universal_hash::U..</text></g><g><title>&lt;poly1305::backend::avx2::State as universal_hash::UhfBackend&gt;::proc_par_blocks (403 samples, 12.17%)</title><rect x="79.0094%" y="533" width="12.1715%" height="15" fill="rgb(252,118,36)" fg:x="2616" fg:w="403"/><text x="79.2594%" y="543.50">&lt;poly1305::backend..</text></g><g><title>poly1305::backend::avx2::State::compute_par_blocks (403 samples, 12.17%)</title><rect x="79.0094%" y="517" width="12.1715%" height="15" fill="rgb(210,224,19)" fg:x="2616" fg:w="403"/><text x="79.2594%" y="527.50">poly1305::backend:..</text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_par_blocks (72 samples, 2.17%)</title><rect x="89.0063%" y="501" width="2.1746%" height="15" fill="rgb(218,30,24)" fg:x="2947" fg:w="72"/><text x="89.2563%" y="511.50">p..</text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_loaded_blocks (71 samples, 2.14%)</title><rect x="89.0365%" y="485" width="2.1444%" height="15" fill="rgb(219,75,50)" fg:x="2948" fg:w="71"/><text x="89.2865%" y="495.50">p..</text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (7 samples, 0.21%)</title><rect x="90.9695%" y="469" width="0.2114%" height="15" fill="rgb(234,72,50)" fg:x="3012" fg:w="7"/><text x="91.2195%" y="479.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="91.1809%" y="581" width="0.0302%" height="15" fill="rgb(219,100,48)" fg:x="3019" fg:w="1"/><text x="91.4309%" y="591.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="91.1809%" y="565" width="0.0302%" height="15" fill="rgb(253,5,41)" fg:x="3019" fg:w="1"/><text x="91.4309%" y="575.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="91.1809%" y="549" width="0.0302%" height="15" fill="rgb(247,181,11)" fg:x="3019" fg:w="1"/><text x="91.4309%" y="559.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.06%)</title><rect x="91.2111%" y="581" width="0.0604%" height="15" fill="rgb(222,223,25)" fg:x="3020" fg:w="2"/><text x="91.4611%" y="591.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.03%)</title><rect x="91.2715%" y="517" width="0.0302%" height="15" fill="rgb(214,198,28)" fg:x="3022" fg:w="1"/><text x="91.5215%" y="527.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (2 samples, 0.06%)</title><rect x="91.2715%" y="533" width="0.0604%" height="15" fill="rgb(230,46,43)" fg:x="3022" fg:w="2"/><text x="91.5215%" y="543.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="91.3017%" y="517" width="0.0302%" height="15" fill="rgb(233,65,53)" fg:x="3023" fg:w="1"/><text x="91.5517%" y="527.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (1 samples, 0.03%)</title><rect x="91.3319%" y="533" width="0.0302%" height="15" fill="rgb(221,121,27)" fg:x="3024" fg:w="1"/><text x="91.5819%" y="543.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="91.3621%" y="533" width="0.0302%" height="15" fill="rgb(247,70,47)" fg:x="3025" fg:w="1"/><text x="91.6121%" y="543.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="91.3621%" y="517" width="0.0302%" height="15" fill="rgb(228,85,35)" fg:x="3025" fg:w="1"/><text x="91.6121%" y="527.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="91.3621%" y="501" width="0.0302%" height="15" fill="rgb(209,50,18)" fg:x="3025" fg:w="1"/><text x="91.6121%" y="511.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier as core::ops::arith::Mul&gt;::mul (5 samples, 0.15%)</title><rect x="91.2715%" y="565" width="0.1510%" height="15" fill="rgb(250,19,35)" fg:x="3022" fg:w="5"/><text x="91.5215%" y="575.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (5 samples, 0.15%)</title><rect x="91.2715%" y="549" width="0.1510%" height="15" fill="rgb(253,107,29)" fg:x="3022" fg:w="5"/><text x="91.5215%" y="559.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="91.3923%" y="533" width="0.0302%" height="15" fill="rgb(252,179,29)" fg:x="3026" fg:w="1"/><text x="91.6423%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.03%)</title><rect x="91.4225%" y="533" width="0.0302%" height="15" fill="rgb(238,194,6)" fg:x="3027" fg:w="1"/><text x="91.6725%" y="543.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.03%)</title><rect x="91.4225%" y="517" width="0.0302%" height="15" fill="rgb(238,164,29)" fg:x="3027" fg:w="1"/><text x="91.6725%" y="527.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="91.4527%" y="517" width="0.0302%" height="15" fill="rgb(224,25,9)" fg:x="3028" fg:w="1"/><text x="91.7027%" y="527.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="91.4527%" y="501" width="0.0302%" height="15" fill="rgb(244,153,23)" fg:x="3028" fg:w="1"/><text x="91.7027%" y="511.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="91.4527%" y="485" width="0.0302%" height="15" fill="rgb(212,203,14)" fg:x="3028" fg:w="1"/><text x="91.7027%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (2 samples, 0.06%)</title><rect x="91.4527%" y="533" width="0.0604%" height="15" fill="rgb(220,164,20)" fg:x="3028" fg:w="2"/><text x="91.7027%" y="543.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="91.4829%" y="517" width="0.0302%" height="15" fill="rgb(222,203,48)" fg:x="3029" fg:w="1"/><text x="91.7329%" y="527.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.03%)</title><rect x="91.5131%" y="517" width="0.0302%" height="15" fill="rgb(215,159,22)" fg:x="3030" fg:w="1"/><text x="91.7631%" y="527.50"></text></g><g><title>poly1305::backend::avx2::helpers::adc (5 samples, 0.15%)</title><rect x="91.4225%" y="549" width="0.1510%" height="15" fill="rgb(216,183,47)" fg:x="3027" fg:w="5"/><text x="91.6725%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (2 samples, 0.06%)</title><rect x="91.5131%" y="533" width="0.0604%" height="15" fill="rgb(229,195,25)" fg:x="3030" fg:w="2"/><text x="91.7631%" y="543.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="91.5433%" y="517" width="0.0302%" height="15" fill="rgb(224,132,51)" fg:x="3031" fg:w="1"/><text x="91.7933%" y="527.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (2 samples, 0.06%)</title><rect x="91.5735%" y="533" width="0.0604%" height="15" fill="rgb(240,63,7)" fg:x="3032" fg:w="2"/><text x="91.8235%" y="543.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (2 samples, 0.06%)</title><rect x="91.5735%" y="517" width="0.0604%" height="15" fill="rgb(249,182,41)" fg:x="3032" fg:w="2"/><text x="91.8235%" y="527.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (2 samples, 0.06%)</title><rect x="91.5735%" y="501" width="0.0604%" height="15" fill="rgb(243,47,26)" fg:x="3032" fg:w="2"/><text x="91.8235%" y="511.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (2 samples, 0.06%)</title><rect x="91.5735%" y="485" width="0.0604%" height="15" fill="rgb(233,48,2)" fg:x="3032" fg:w="2"/><text x="91.8235%" y="495.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced130::reduce (8 samples, 0.24%)</title><rect x="91.4225%" y="565" width="0.2416%" height="15" fill="rgb(244,165,34)" fg:x="3027" fg:w="8"/><text x="91.6725%" y="575.50"></text></g><g><title>poly1305::backend::avx2::helpers::red (3 samples, 0.09%)</title><rect x="91.5735%" y="549" width="0.0906%" height="15" fill="rgb(207,89,7)" fg:x="3032" fg:w="3"/><text x="91.8235%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.03%)</title><rect x="91.6339%" y="533" width="0.0302%" height="15" fill="rgb(244,117,36)" fg:x="3034" fg:w="1"/><text x="91.8839%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (1 samples, 0.03%)</title><rect x="91.6339%" y="517" width="0.0302%" height="15" fill="rgb(226,144,34)" fg:x="3034" fg:w="1"/><text x="91.8839%" y="527.50"></text></g><g><title>&lt;poly1305::Poly1305 as crypto_common::KeyInit&gt;::new (17 samples, 0.51%)</title><rect x="91.1809%" y="613" width="0.5134%" height="15" fill="rgb(213,23,19)" fg:x="3019" fg:w="17"/><text x="91.4309%" y="623.50"></text></g><g><title>poly1305::backend::autodetect::State::new (17 samples, 0.51%)</title><rect x="91.1809%" y="597" width="0.5134%" height="15" fill="rgb(217,75,12)" fg:x="3019" fg:w="17"/><text x="91.4309%" y="607.50"></text></g><g><title>poly1305::backend::avx2::State::new (14 samples, 0.42%)</title><rect x="91.2715%" y="581" width="0.4228%" height="15" fill="rgb(224,159,17)" fg:x="3022" fg:w="14"/><text x="91.5215%" y="591.50"></text></g><g><title>poly1305::backend::avx2::helpers::prepare_keys (1 samples, 0.03%)</title><rect x="91.6641%" y="565" width="0.0302%" height="15" fill="rgb(217,118,1)" fg:x="3035" fg:w="1"/><text x="91.9141%" y="575.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="91.6641%" y="549" width="0.0302%" height="15" fill="rgb(232,180,48)" fg:x="3035" fg:w="1"/><text x="91.9141%" y="559.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (1 samples, 0.03%)</title><rect x="91.6944%" y="485" width="0.0302%" height="15" fill="rgb(230,27,33)" fg:x="3036" fg:w="1"/><text x="91.9444%" y="495.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (2 samples, 0.06%)</title><rect x="91.6944%" y="565" width="0.0604%" height="15" fill="rgb(205,31,21)" fg:x="3036" fg:w="2"/><text x="91.9444%" y="575.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (2 samples, 0.06%)</title><rect x="91.6944%" y="549" width="0.0604%" height="15" fill="rgb(253,59,4)" fg:x="3036" fg:w="2"/><text x="91.9444%" y="559.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (2 samples, 0.06%)</title><rect x="91.6944%" y="533" width="0.0604%" height="15" fill="rgb(224,201,9)" fg:x="3036" fg:w="2"/><text x="91.9444%" y="543.50"></text></g><g><title>chacha20::backends::avx2::inner (2 samples, 0.06%)</title><rect x="91.6944%" y="517" width="0.0604%" height="15" fill="rgb(229,206,30)" fg:x="3036" fg:w="2"/><text x="91.9444%" y="527.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (2 samples, 0.06%)</title><rect x="91.6944%" y="501" width="0.0604%" height="15" fill="rgb(212,67,47)" fg:x="3036" fg:w="2"/><text x="91.9444%" y="511.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.03%)</title><rect x="91.7246%" y="485" width="0.0302%" height="15" fill="rgb(211,96,50)" fg:x="3037" fg:w="1"/><text x="91.9746%" y="495.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.03%)</title><rect x="91.7246%" y="469" width="0.0302%" height="15" fill="rgb(252,114,18)" fg:x="3037" fg:w="1"/><text x="91.9746%" y="479.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="91.7246%" y="453" width="0.0302%" height="15" fill="rgb(223,58,37)" fg:x="3037" fg:w="1"/><text x="91.9746%" y="463.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="91.7548%" y="469" width="0.0302%" height="15" fill="rgb(237,70,4)" fg:x="3038" fg:w="1"/><text x="92.0048%" y="479.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="91.7850%" y="421" width="0.0302%" height="15" fill="rgb(244,85,46)" fg:x="3039" fg:w="1"/><text x="92.0350%" y="431.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.03%)</title><rect x="91.7850%" y="405" width="0.0302%" height="15" fill="rgb(223,39,52)" fg:x="3039" fg:w="1"/><text x="92.0350%" y="415.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (12 samples, 0.36%)</title><rect x="91.8152%" y="421" width="0.3624%" height="15" fill="rgb(218,200,14)" fg:x="3040" fg:w="12"/><text x="92.0652%" y="431.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (1 samples, 0.03%)</title><rect x="92.1776%" y="421" width="0.0302%" height="15" fill="rgb(208,171,16)" fg:x="3052" fg:w="1"/><text x="92.4276%" y="431.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="92.2984%" y="405" width="0.0302%" height="15" fill="rgb(234,200,18)" fg:x="3056" fg:w="1"/><text x="92.5484%" y="415.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (1 samples, 0.03%)</title><rect x="92.3286%" y="405" width="0.0302%" height="15" fill="rgb(228,45,11)" fg:x="3057" fg:w="1"/><text x="92.5786%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.03%)</title><rect x="92.3588%" y="405" width="0.0302%" height="15" fill="rgb(237,182,11)" fg:x="3058" fg:w="1"/><text x="92.6088%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="92.3890%" y="405" width="0.0302%" height="15" fill="rgb(241,175,49)" fg:x="3059" fg:w="1"/><text x="92.6390%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (8 samples, 0.24%)</title><rect x="92.2078%" y="421" width="0.2416%" height="15" fill="rgb(247,38,35)" fg:x="3053" fg:w="8"/><text x="92.4578%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="92.4192%" y="405" width="0.0302%" height="15" fill="rgb(228,39,49)" fg:x="3060" fg:w="1"/><text x="92.6692%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (3 samples, 0.09%)</title><rect x="92.4494%" y="421" width="0.0906%" height="15" fill="rgb(226,101,26)" fg:x="3061" fg:w="3"/><text x="92.6994%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (3 samples, 0.09%)</title><rect x="92.5400%" y="421" width="0.0906%" height="15" fill="rgb(206,141,19)" fg:x="3064" fg:w="3"/><text x="92.7900%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="92.6004%" y="405" width="0.0302%" height="15" fill="rgb(211,200,13)" fg:x="3066" fg:w="1"/><text x="92.8504%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="92.6608%" y="405" width="0.0302%" height="15" fill="rgb(241,121,6)" fg:x="3068" fg:w="1"/><text x="92.9108%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (3 samples, 0.09%)</title><rect x="92.6306%" y="421" width="0.0906%" height="15" fill="rgb(234,221,29)" fg:x="3067" fg:w="3"/><text x="92.8806%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="92.6910%" y="405" width="0.0302%" height="15" fill="rgb(229,136,5)" fg:x="3069" fg:w="1"/><text x="92.9410%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (6 samples, 0.18%)</title><rect x="92.7212%" y="421" width="0.1812%" height="15" fill="rgb(238,36,11)" fg:x="3070" fg:w="6"/><text x="92.9712%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.03%)</title><rect x="92.8722%" y="405" width="0.0302%" height="15" fill="rgb(251,55,41)" fg:x="3075" fg:w="1"/><text x="93.1222%" y="415.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (3 samples, 0.09%)</title><rect x="92.9024%" y="421" width="0.0906%" height="15" fill="rgb(242,34,40)" fg:x="3076" fg:w="3"/><text x="93.1524%" y="431.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi64x (2 samples, 0.06%)</title><rect x="92.9326%" y="405" width="0.0604%" height="15" fill="rgb(215,42,17)" fg:x="3077" fg:w="2"/><text x="93.1826%" y="415.50"></text></g><g><title>core::core_arch::simd::i64x4::new (2 samples, 0.06%)</title><rect x="92.9326%" y="389" width="0.0604%" height="15" fill="rgb(207,44,46)" fg:x="3077" fg:w="2"/><text x="93.1826%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (9 samples, 0.27%)</title><rect x="92.9931%" y="421" width="0.2718%" height="15" fill="rgb(211,206,28)" fg:x="3079" fg:w="9"/><text x="93.2431%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (8 samples, 0.24%)</title><rect x="93.2649%" y="421" width="0.2416%" height="15" fill="rgb(237,167,16)" fg:x="3088" fg:w="8"/><text x="93.5149%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (3 samples, 0.09%)</title><rect x="93.5065%" y="421" width="0.0906%" height="15" fill="rgb(233,66,6)" fg:x="3096" fg:w="3"/><text x="93.7565%" y="431.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (67 samples, 2.02%)</title><rect x="91.7850%" y="437" width="2.0236%" height="15" fill="rgb(246,123,29)" fg:x="3039" fg:w="67"/><text x="92.0350%" y="447.50">c..</text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (7 samples, 0.21%)</title><rect x="93.5971%" y="421" width="0.2114%" height="15" fill="rgb(209,62,40)" fg:x="3099" fg:w="7"/><text x="93.8471%" y="431.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (3 samples, 0.09%)</title><rect x="93.8085%" y="421" width="0.0906%" height="15" fill="rgb(218,4,25)" fg:x="3106" fg:w="3"/><text x="94.0585%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.03%)</title><rect x="93.8991%" y="421" width="0.0302%" height="15" fill="rgb(253,91,49)" fg:x="3109" fg:w="1"/><text x="94.1491%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (2 samples, 0.06%)</title><rect x="93.9293%" y="421" width="0.0604%" height="15" fill="rgb(228,155,29)" fg:x="3110" fg:w="2"/><text x="94.1793%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="93.9897%" y="421" width="0.0302%" height="15" fill="rgb(243,57,37)" fg:x="3112" fg:w="1"/><text x="94.2397%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (2 samples, 0.06%)</title><rect x="94.0199%" y="421" width="0.0604%" height="15" fill="rgb(244,167,17)" fg:x="3113" fg:w="2"/><text x="94.2699%" y="431.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (10 samples, 0.30%)</title><rect x="93.8085%" y="437" width="0.3020%" height="15" fill="rgb(207,181,38)" fg:x="3106" fg:w="10"/><text x="94.0585%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="94.0803%" y="421" width="0.0302%" height="15" fill="rgb(211,8,23)" fg:x="3115" fg:w="1"/><text x="94.3303%" y="431.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="94.1105%" y="421" width="0.0302%" height="15" fill="rgb(235,11,44)" fg:x="3116" fg:w="1"/><text x="94.3605%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="94.1407%" y="405" width="0.0302%" height="15" fill="rgb(248,18,52)" fg:x="3117" fg:w="1"/><text x="94.3907%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (2 samples, 0.06%)</title><rect x="94.1407%" y="421" width="0.0604%" height="15" fill="rgb(208,4,7)" fg:x="3117" fg:w="2"/><text x="94.3907%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="94.1709%" y="405" width="0.0302%" height="15" fill="rgb(240,17,39)" fg:x="3118" fg:w="1"/><text x="94.4209%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="94.2011%" y="421" width="0.0302%" height="15" fill="rgb(207,170,3)" fg:x="3119" fg:w="1"/><text x="94.4511%" y="431.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (5 samples, 0.15%)</title><rect x="94.1105%" y="437" width="0.1510%" height="15" fill="rgb(236,100,52)" fg:x="3116" fg:w="5"/><text x="94.3605%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="94.2314%" y="421" width="0.0302%" height="15" fill="rgb(246,78,51)" fg:x="3120" fg:w="1"/><text x="94.4814%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="94.2616%" y="437" width="0.0302%" height="15" fill="rgb(211,17,15)" fg:x="3121" fg:w="1"/><text x="94.5116%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (2 samples, 0.06%)</title><rect x="94.2918%" y="437" width="0.0604%" height="15" fill="rgb(209,59,46)" fg:x="3122" fg:w="2"/><text x="94.5418%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.03%)</title><rect x="94.3522%" y="437" width="0.0302%" height="15" fill="rgb(210,92,25)" fg:x="3124" fg:w="1"/><text x="94.6022%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (5 samples, 0.15%)</title><rect x="94.3824%" y="437" width="0.1510%" height="15" fill="rgb(238,174,52)" fg:x="3125" fg:w="5"/><text x="94.6324%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (2 samples, 0.06%)</title><rect x="94.5334%" y="437" width="0.0604%" height="15" fill="rgb(230,73,7)" fg:x="3130" fg:w="2"/><text x="94.7834%" y="447.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (94 samples, 2.84%)</title><rect x="91.7850%" y="453" width="2.8390%" height="15" fill="rgb(243,124,40)" fg:x="3039" fg:w="94"/><text x="92.0350%" y="463.50">ch..</text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="94.5938%" y="437" width="0.0302%" height="15" fill="rgb(244,170,11)" fg:x="3132" fg:w="1"/><text x="94.8438%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="94.6240%" y="453" width="0.0302%" height="15" fill="rgb(207,114,54)" fg:x="3133" fg:w="1"/><text x="94.8740%" y="463.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="94.6240%" y="437" width="0.0302%" height="15" fill="rgb(205,42,20)" fg:x="3133" fg:w="1"/><text x="94.8740%" y="447.50"></text></g><g><title>chacha20::backends::avx2::rounds (96 samples, 2.90%)</title><rect x="91.7850%" y="469" width="2.8994%" height="15" fill="rgb(230,30,28)" fg:x="3039" fg:w="96"/><text x="92.0350%" y="479.50">ch..</text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="94.6542%" y="453" width="0.0302%" height="15" fill="rgb(205,73,54)" fg:x="3134" fg:w="1"/><text x="94.9042%" y="463.50"></text></g><g><title>&lt;tftp::client::encryption_socket::EncryptionBoundSocket&lt;S,Rng&gt; as tftp::socket::Socket&gt;::send_to (938 samples, 28.33%)</title><rect x="66.3848%" y="693" width="28.3298%" height="15" fill="rgb(254,227,23)" fg:x="2198" fg:w="938"/><text x="66.6348%" y="703.50">&lt;tftp::client::encryption_socket::EncryptionBo..</text></g><g><title>tftp::encrypted_packet::EncryptedPacket::encrypt (938 samples, 28.33%)</title><rect x="66.3848%" y="677" width="28.3298%" height="15" fill="rgb(228,202,34)" fg:x="2198" fg:w="938"/><text x="66.6348%" y="687.50">tftp::encrypted_packet::EncryptedPacket::encry..</text></g><g><title>tftp::encryption::Encryptor&lt;R&gt;::encrypt (938 samples, 28.33%)</title><rect x="66.3848%" y="661" width="28.3298%" height="15" fill="rgb(222,225,37)" fg:x="2198" fg:w="938"/><text x="66.6348%" y="671.50">tftp::encryption::Encryptor&lt;R&gt;::encrypt</text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::encrypt_in_place_detached (938 samples, 28.33%)</title><rect x="66.3848%" y="645" width="28.3298%" height="15" fill="rgb(221,14,54)" fg:x="2198" fg:w="938"/><text x="66.6348%" y="655.50">&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead..</text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (117 samples, 3.53%)</title><rect x="91.1809%" y="629" width="3.5337%" height="15" fill="rgb(254,102,2)" fg:x="3019" fg:w="117"/><text x="91.4309%" y="639.50">cha..</text></g><g><title>cipher::stream::StreamCipher::apply_keystream (100 samples, 3.02%)</title><rect x="91.6944%" y="613" width="3.0202%" height="15" fill="rgb(232,104,17)" fg:x="3036" fg:w="100"/><text x="91.9444%" y="623.50">cip..</text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (100 samples, 3.02%)</title><rect x="91.6944%" y="597" width="3.0202%" height="15" fill="rgb(250,220,14)" fg:x="3036" fg:w="100"/><text x="91.9444%" y="607.50">cip..</text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (100 samples, 3.02%)</title><rect x="91.6944%" y="581" width="3.0202%" height="15" fill="rgb(241,158,9)" fg:x="3036" fg:w="100"/><text x="91.9444%" y="591.50">&lt;ci..</text></g><g><title>cipher::stream_core::StreamCipherCore::write_keystream_block (98 samples, 2.96%)</title><rect x="91.7548%" y="565" width="2.9598%" height="15" fill="rgb(246,9,43)" fg:x="3038" fg:w="98"/><text x="92.0048%" y="575.50">cip..</text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (98 samples, 2.96%)</title><rect x="91.7548%" y="549" width="2.9598%" height="15" fill="rgb(206,73,33)" fg:x="3038" fg:w="98"/><text x="92.0048%" y="559.50">&lt;ch..</text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (98 samples, 2.96%)</title><rect x="91.7548%" y="533" width="2.9598%" height="15" fill="rgb(222,79,8)" fg:x="3038" fg:w="98"/><text x="92.0048%" y="543.50">&lt;ch..</text></g><g><title>chacha20::backends::avx2::inner (98 samples, 2.96%)</title><rect x="91.7548%" y="517" width="2.9598%" height="15" fill="rgb(234,8,54)" fg:x="3038" fg:w="98"/><text x="92.0048%" y="527.50">cha..</text></g><g><title>&lt;cipher::stream_core::WriteBlockCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (98 samples, 2.96%)</title><rect x="91.7548%" y="501" width="2.9598%" height="15" fill="rgb(209,134,38)" fg:x="3038" fg:w="98"/><text x="92.0048%" y="511.50">&lt;ci..</text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (98 samples, 2.96%)</title><rect x="91.7548%" y="485" width="2.9598%" height="15" fill="rgb(230,127,29)" fg:x="3038" fg:w="98"/><text x="92.0048%" y="495.50">&lt;ch..</text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="94.6844%" y="469" width="0.0302%" height="15" fill="rgb(242,44,41)" fg:x="3135" fg:w="1"/><text x="94.9344%" y="479.50"></text></g><g><title>tftp::client::sender::send_file (1,063 samples, 32.11%)</title><rect x="62.6397%" y="709" width="32.1051%" height="15" fill="rgb(222,56,43)" fg:x="2074" fg:w="1063"/><text x="62.8897%" y="719.50">tftp::client::sender::send_file</text></g><g><title>log::max_level (1 samples, 0.03%)</title><rect x="94.7146%" y="693" width="0.0302%" height="15" fill="rgb(238,39,47)" fg:x="3136" fg:w="1"/><text x="94.9646%" y="703.50"></text></g><g><title>tftp::encryption::Encryptor&lt;R&gt;::decrypt (1 samples, 0.03%)</title><rect x="94.7448%" y="709" width="0.0302%" height="15" fill="rgb(226,79,43)" fg:x="3137" fg:w="1"/><text x="94.9948%" y="719.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="94.7448%" y="693" width="0.0302%" height="15" fill="rgb(242,105,53)" fg:x="3137" fg:w="1"/><text x="94.9948%" y="703.50"></text></g><g><title>tftp::encryption::remove_bit_padding (1 samples, 0.03%)</title><rect x="94.7750%" y="709" width="0.0302%" height="15" fill="rgb(251,132,46)" fg:x="3138" fg:w="1"/><text x="95.0250%" y="719.50"></text></g><g><title>tftp::key_management::create_initial_keys (1 samples, 0.03%)</title><rect x="94.8052%" y="709" width="0.0302%" height="15" fill="rgb(231,77,14)" fg:x="3139" fg:w="1"/><text x="95.0552%" y="719.50"></text></g><g><title>&lt;x25519_dalek::x25519::PublicKey as core::convert::From&lt;&amp;x25519_dalek::x25519::EphemeralSecret&gt;&gt;::from (1 samples, 0.03%)</title><rect x="94.8052%" y="693" width="0.0302%" height="15" fill="rgb(240,135,9)" fg:x="3139" fg:w="1"/><text x="95.0552%" y="703.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::mul_base_clamped (1 samples, 0.03%)</title><rect x="94.8052%" y="677" width="0.0302%" height="15" fill="rgb(248,109,14)" fg:x="3139" fg:w="1"/><text x="95.0552%" y="687.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::mul_base (1 samples, 0.03%)</title><rect x="94.8052%" y="661" width="0.0302%" height="15" fill="rgb(227,146,52)" fg:x="3139" fg:w="1"/><text x="95.0552%" y="671.50"></text></g><g><title>curve25519_dalek::edwards::&lt;impl core::ops::arith::Mul&lt;curve25519_dalek::edwards::EdwardsPoint&gt; for &amp;curve25519_dalek::scalar::Scalar&gt;::mul (1 samples, 0.03%)</title><rect x="94.8052%" y="645" width="0.0302%" height="15" fill="rgb(232,54,3)" fg:x="3139" fg:w="1"/><text x="95.0552%" y="655.50"></text></g><g><title>curve25519_dalek::edwards::&lt;impl core::ops::arith::Mul&lt;&amp;curve25519_dalek::edwards::EdwardsPoint&gt; for &amp;curve25519_dalek::scalar::Scalar&gt;::mul (1 samples, 0.03%)</title><rect x="94.8052%" y="629" width="0.0302%" height="15" fill="rgb(229,201,43)" fg:x="3139" fg:w="1"/><text x="95.0552%" y="639.50"></text></g><g><title>&lt;&amp;curve25519_dalek::edwards::EdwardsPoint as core::ops::arith::Mul&lt;&amp;curve25519_dalek::scalar::Scalar&gt;&gt;::mul (1 samples, 0.03%)</title><rect x="94.8052%" y="613" width="0.0302%" height="15" fill="rgb(252,161,33)" fg:x="3139" fg:w="1"/><text x="95.0552%" y="623.50"></text></g><g><title>curve25519_dalek::backend::variable_base_mul (1 samples, 0.03%)</title><rect x="94.8052%" y="597" width="0.0302%" height="15" fill="rgb(226,146,40)" fg:x="3139" fg:w="1"/><text x="95.0552%" y="607.50"></text></g><g><title>curve25519_dalek::backend::vector::scalar_mul::variable_base::spec_avx2::mul (1 samples, 0.03%)</title><rect x="94.8052%" y="581" width="0.0302%" height="15" fill="rgb(219,47,25)" fg:x="3139" fg:w="1"/><text x="95.0552%" y="591.50"></text></g><g><title>curve25519_dalek::backend::vector::scalar_mul::variable_base::spec_avx2::mul::_impl_mul (1 samples, 0.03%)</title><rect x="94.8052%" y="565" width="0.0302%" height="15" fill="rgb(250,135,13)" fg:x="3139" fg:w="1"/><text x="95.0552%" y="575.50"></text></g><g><title>curve25519_dalek::backend::vector::avx2::edwards::ExtendedPoint::mul_by_pow_2 (1 samples, 0.03%)</title><rect x="94.8052%" y="549" width="0.0302%" height="15" fill="rgb(219,229,18)" fg:x="3139" fg:w="1"/><text x="95.0552%" y="559.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::avx2::edwards::ExtendedPoint as curve25519_dalek::backend::vector::avx2::edwards::ExtendedPoint::mul_by_pow_2::__Impl_mul_by_pow_2__&gt;::_impl_mul_by_pow_2 (1 samples, 0.03%)</title><rect x="94.8052%" y="533" width="0.0302%" height="15" fill="rgb(217,152,27)" fg:x="3139" fg:w="1"/><text x="95.0552%" y="543.50"></text></g><g><title>curve25519_dalek::backend::vector::avx2::edwards::ExtendedPoint::double (1 samples, 0.03%)</title><rect x="94.8052%" y="517" width="0.0302%" height="15" fill="rgb(225,71,47)" fg:x="3139" fg:w="1"/><text x="95.0552%" y="527.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::avx2::edwards::ExtendedPoint as curve25519_dalek::backend::vector::avx2::edwards::ExtendedPoint::double::__Impl_double__&gt;::_impl_double (1 samples, 0.03%)</title><rect x="94.8052%" y="501" width="0.0302%" height="15" fill="rgb(220,139,14)" fg:x="3139" fg:w="1"/><text x="95.0552%" y="511.50"></text></g><g><title>curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4::shuffle (1 samples, 0.03%)</title><rect x="94.8052%" y="485" width="0.0302%" height="15" fill="rgb(247,54,32)" fg:x="3139" fg:w="1"/><text x="95.0552%" y="495.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4 as curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4::shuffle::__Impl_shuffle__&gt;::_impl_shuffle (1 samples, 0.03%)</title><rect x="94.8052%" y="469" width="0.0302%" height="15" fill="rgb(252,131,39)" fg:x="3139" fg:w="1"/><text x="95.0552%" y="479.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4 as curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4::shuffle::__Impl_shuffle__&gt;::_impl_shuffle::shuffle_lanes (1 samples, 0.03%)</title><rect x="94.8052%" y="453" width="0.0302%" height="15" fill="rgb(210,108,39)" fg:x="3139" fg:w="1"/><text x="95.0552%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.03%)</title><rect x="94.8052%" y="437" width="0.0302%" height="15" fill="rgb(205,23,29)" fg:x="3139" fg:w="1"/><text x="95.0552%" y="447.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.03%)</title><rect x="94.8354%" y="629" width="0.0302%" height="15" fill="rgb(246,139,46)" fg:x="3140" fg:w="1"/><text x="95.0854%" y="639.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.03%)</title><rect x="94.8354%" y="613" width="0.0302%" height="15" fill="rgb(250,81,26)" fg:x="3140" fg:w="1"/><text x="95.0854%" y="623.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.03%)</title><rect x="94.8354%" y="597" width="0.0302%" height="15" fill="rgb(214,104,7)" fg:x="3140" fg:w="1"/><text x="95.0854%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.03%)</title><rect x="94.8354%" y="581" width="0.0302%" height="15" fill="rgb(233,189,8)" fg:x="3140" fg:w="1"/><text x="95.0854%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="94.8354%" y="565" width="0.0302%" height="15" fill="rgb(228,141,17)" fg:x="3140" fg:w="1"/><text x="95.0854%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="94.8354%" y="549" width="0.0302%" height="15" fill="rgb(247,157,1)" fg:x="3140" fg:w="1"/><text x="95.0854%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="94.8354%" y="533" width="0.0302%" height="15" fill="rgb(249,225,5)" fg:x="3140" fg:w="1"/><text x="95.0854%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="94.8354%" y="517" width="0.0302%" height="15" fill="rgb(242,55,13)" fg:x="3140" fg:w="1"/><text x="95.0854%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.03%)</title><rect x="94.8354%" y="501" width="0.0302%" height="15" fill="rgb(230,49,50)" fg:x="3140" fg:w="1"/><text x="95.0854%" y="511.50"></text></g><g><title>rustix::backend::event::epoll::_::InternalBitFlags::union (1 samples, 0.03%)</title><rect x="94.8354%" y="485" width="0.0302%" height="15" fill="rgb(241,111,38)" fg:x="3140" fg:w="1"/><text x="95.0854%" y="495.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.03%)</title><rect x="94.8656%" y="517" width="0.0302%" height="15" fill="rgb(252,155,4)" fg:x="3141" fg:w="1"/><text x="95.1156%" y="527.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.03%)</title><rect x="94.8656%" y="501" width="0.0302%" height="15" fill="rgb(212,69,32)" fg:x="3141" fg:w="1"/><text x="95.1156%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.03%)</title><rect x="94.8656%" y="485" width="0.0302%" height="15" fill="rgb(243,107,47)" fg:x="3141" fg:w="1"/><text x="95.1156%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.03%)</title><rect x="94.8656%" y="469" width="0.0302%" height="15" fill="rgb(247,130,12)" fg:x="3141" fg:w="1"/><text x="95.1156%" y="479.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.06%)</title><rect x="94.8656%" y="549" width="0.0604%" height="15" fill="rgb(233,74,16)" fg:x="3141" fg:w="2"/><text x="95.1156%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.06%)</title><rect x="94.8656%" y="533" width="0.0604%" height="15" fill="rgb(208,58,18)" fg:x="3141" fg:w="2"/><text x="95.1156%" y="543.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.03%)</title><rect x="94.8958%" y="517" width="0.0302%" height="15" fill="rgb(242,225,1)" fg:x="3142" fg:w="1"/><text x="95.1458%" y="527.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.03%)</title><rect x="94.8958%" y="501" width="0.0302%" height="15" fill="rgb(249,39,40)" fg:x="3142" fg:w="1"/><text x="95.1458%" y="511.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.03%)</title><rect x="94.8958%" y="485" width="0.0302%" height="15" fill="rgb(207,72,44)" fg:x="3142" fg:w="1"/><text x="95.1458%" y="495.50"></text></g><g><title>&lt;tftp::socket::UdpUnboundSocket as tftp::socket::Socket&gt;::modify_interest (3 samples, 0.09%)</title><rect x="94.8656%" y="629" width="0.0906%" height="15" fill="rgb(215,193,12)" fg:x="3141" fg:w="3"/><text x="95.1156%" y="639.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::remove (3 samples, 0.09%)</title><rect x="94.8656%" y="613" width="0.0906%" height="15" fill="rgb(248,41,39)" fg:x="3141" fg:w="3"/><text x="95.1156%" y="623.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::remove (3 samples, 0.09%)</title><rect x="94.8656%" y="597" width="0.0906%" height="15" fill="rgb(253,85,4)" fg:x="3141" fg:w="3"/><text x="95.1156%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (3 samples, 0.09%)</title><rect x="94.8656%" y="581" width="0.0906%" height="15" fill="rgb(243,70,31)" fg:x="3141" fg:w="3"/><text x="95.1156%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (3 samples, 0.09%)</title><rect x="94.8656%" y="565" width="0.0906%" height="15" fill="rgb(253,195,26)" fg:x="3141" fg:w="3"/><text x="95.1156%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (1 samples, 0.03%)</title><rect x="94.9260%" y="549" width="0.0302%" height="15" fill="rgb(243,42,11)" fg:x="3143" fg:w="1"/><text x="95.1760%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.03%)</title><rect x="94.9260%" y="533" width="0.0302%" height="15" fill="rgb(239,66,17)" fg:x="3143" fg:w="1"/><text x="95.1760%" y="543.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1 samples, 0.03%)</title><rect x="94.9260%" y="517" width="0.0302%" height="15" fill="rgb(217,132,21)" fg:x="3143" fg:w="1"/><text x="95.1760%" y="527.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.03%)</title><rect x="94.9260%" y="501" width="0.0302%" height="15" fill="rgb(252,202,21)" fg:x="3143" fg:w="1"/><text x="95.1760%" y="511.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (1 samples, 0.03%)</title><rect x="94.9260%" y="485" width="0.0302%" height="15" fill="rgb(233,98,36)" fg:x="3143" fg:w="1"/><text x="95.1760%" y="495.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (1 samples, 0.03%)</title><rect x="94.9260%" y="469" width="0.0302%" height="15" fill="rgb(216,153,54)" fg:x="3143" fg:w="1"/><text x="95.1760%" y="479.50"></text></g><g><title>&lt;core::core_arch::x86::__m128i as core::core_arch::x86::m128iExt&gt;::as_m128i (1 samples, 0.03%)</title><rect x="94.9260%" y="453" width="0.0302%" height="15" fill="rgb(250,99,7)" fg:x="3143" fg:w="1"/><text x="95.1760%" y="463.50"></text></g><g><title>&lt;tftp::socket::UdpUnboundSocket as tftp::socket::ToSocketId&gt;::as_raw_fd (1 samples, 0.03%)</title><rect x="94.9562%" y="629" width="0.0302%" height="15" fill="rgb(207,56,50)" fg:x="3144" fg:w="1"/><text x="95.2062%" y="639.50"></text></g><g><title>&lt;std::os::fd::owned::BorrowedFd as std::os::fd::raw::AsRawFd&gt;::as_raw_fd (1 samples, 0.03%)</title><rect x="94.9562%" y="613" width="0.0302%" height="15" fill="rgb(244,61,34)" fg:x="3144" fg:w="1"/><text x="95.2062%" y="623.50"></text></g><g><title>&lt;tftp::socket::UdpUnboundSocket as tftp::socket::Socket&gt;::recv_from (6 samples, 0.18%)</title><rect x="94.8354%" y="645" width="0.1812%" height="15" fill="rgb(241,50,38)" fg:x="3140" fg:w="6"/><text x="95.0854%" y="655.50"></text></g><g><title>std::net::udp::UdpSocket::recv_from (1 samples, 0.03%)</title><rect x="94.9864%" y="629" width="0.0302%" height="15" fill="rgb(212,166,30)" fg:x="3145" fg:w="1"/><text x="95.2364%" y="639.50"></text></g><g><title>std::sys_common::net::UdpSocket::recv_from (1 samples, 0.03%)</title><rect x="94.9864%" y="613" width="0.0302%" height="15" fill="rgb(249,127,32)" fg:x="3145" fg:w="1"/><text x="95.2364%" y="623.50"></text></g><g><title>std::sys::unix::net::Socket::recv_from (1 samples, 0.03%)</title><rect x="94.9864%" y="597" width="0.0302%" height="15" fill="rgb(209,103,0)" fg:x="3145" fg:w="1"/><text x="95.2364%" y="607.50"></text></g><g><title>std::sys::unix::net::Socket::recv_from_with_flags (1 samples, 0.03%)</title><rect x="94.9864%" y="581" width="0.0302%" height="15" fill="rgb(238,209,51)" fg:x="3145" fg:w="1"/><text x="95.2364%" y="591.50"></text></g><g><title>__libc_recvfrom (1 samples, 0.03%)</title><rect x="94.9864%" y="565" width="0.0302%" height="15" fill="rgb(237,56,23)" fg:x="3145" fg:w="1"/><text x="95.2364%" y="575.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="94.9864%" y="549" width="0.0302%" height="15" fill="rgb(215,153,46)" fg:x="3145" fg:w="1"/><text x="95.2364%" y="559.50"></text></g><g><title>do_syscall_64 (1 samples, 0.03%)</title><rect x="94.9864%" y="533" width="0.0302%" height="15" fill="rgb(224,49,31)" fg:x="3145" fg:w="1"/><text x="95.2364%" y="543.50"></text></g><g><title>__x64_sys_recvfrom (1 samples, 0.03%)</title><rect x="94.9864%" y="517" width="0.0302%" height="15" fill="rgb(250,18,42)" fg:x="3145" fg:w="1"/><text x="95.2364%" y="527.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi64 (1 samples, 0.03%)</title><rect x="95.0166%" y="597" width="0.0302%" height="15" fill="rgb(215,176,39)" fg:x="3146" fg:w="1"/><text x="95.2666%" y="607.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (2 samples, 0.06%)</title><rect x="95.0468%" y="597" width="0.0604%" height="15" fill="rgb(223,77,29)" fg:x="3147" fg:w="2"/><text x="95.2968%" y="607.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi32 (1 samples, 0.03%)</title><rect x="95.0770%" y="581" width="0.0302%" height="15" fill="rgb(234,94,52)" fg:x="3148" fg:w="1"/><text x="95.3270%" y="591.50"></text></g><g><title>core::core_arch::simd::i32x8::new (1 samples, 0.03%)</title><rect x="95.0770%" y="565" width="0.0302%" height="15" fill="rgb(220,154,50)" fg:x="3148" fg:w="1"/><text x="95.3270%" y="575.50"></text></g><g><title>tftp::encryption::Encryptor&lt;R&gt;::decrypt (4 samples, 0.12%)</title><rect x="95.0166%" y="629" width="0.1208%" height="15" fill="rgb(212,11,10)" fg:x="3146" fg:w="4"/><text x="95.2666%" y="639.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (4 samples, 0.12%)</title><rect x="95.0166%" y="613" width="0.1208%" height="15" fill="rgb(205,166,19)" fg:x="3146" fg:w="4"/><text x="95.2666%" y="623.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="95.1072%" y="597" width="0.0302%" height="15" fill="rgb(244,198,16)" fg:x="3149" fg:w="1"/><text x="95.3572%" y="607.50"></text></g><g><title>&lt;tftp::client::encryption_socket::EncryptionBoundSocket&lt;S,Rng&gt; as tftp::socket::Socket&gt;::recv_from (17 samples, 0.51%)</title><rect x="94.8354%" y="661" width="0.5134%" height="15" fill="rgb(219,69,12)" fg:x="3140" fg:w="17"/><text x="95.0854%" y="671.50"></text></g><g><title>tftp::encrypted_packet::EncryptedPacket::decrypt (11 samples, 0.33%)</title><rect x="95.0166%" y="645" width="0.3322%" height="15" fill="rgb(245,30,7)" fg:x="3146" fg:w="11"/><text x="95.2666%" y="655.50"></text></g><g><title>tftp::encryption::remove_bit_padding (7 samples, 0.21%)</title><rect x="95.1374%" y="629" width="0.2114%" height="15" fill="rgb(218,221,48)" fg:x="3150" fg:w="7"/><text x="95.3874%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.18%)</title><rect x="95.1676%" y="613" width="0.1812%" height="15" fill="rgb(216,66,15)" fg:x="3151" fg:w="6"/><text x="95.4176%" y="623.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (6 samples, 0.18%)</title><rect x="95.1676%" y="597" width="0.1812%" height="15" fill="rgb(226,122,50)" fg:x="3151" fg:w="6"/><text x="95.4176%" y="607.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::pre_dec_end (2 samples, 0.06%)</title><rect x="95.2884%" y="581" width="0.0604%" height="15" fill="rgb(239,156,16)" fg:x="3155" fg:w="2"/><text x="95.5384%" y="591.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::sub (1 samples, 0.03%)</title><rect x="95.3186%" y="565" width="0.0302%" height="15" fill="rgb(224,27,38)" fg:x="3156" fg:w="1"/><text x="95.5686%" y="575.50"></text></g><g><title>core::cmp::PartialOrd::le (1 samples, 0.03%)</title><rect x="95.3488%" y="629" width="0.0302%" height="15" fill="rgb(224,39,27)" fg:x="3157" fg:w="1"/><text x="95.5988%" y="639.50"></text></g><g><title>&lt;log::Level as core::cmp::PartialOrd&lt;log::LevelFilter&gt;&gt;::partial_cmp (1 samples, 0.03%)</title><rect x="95.3488%" y="613" width="0.0302%" height="15" fill="rgb(215,92,29)" fg:x="3157" fg:w="1"/><text x="95.5988%" y="623.50"></text></g><g><title>ip_generic_getfrag (1 samples, 0.03%)</title><rect x="95.4696%" y="453" width="0.0302%" height="15" fill="rgb(207,159,16)" fg:x="3161" fg:w="1"/><text x="95.7196%" y="463.50"></text></g><g><title>__check_object_size (1 samples, 0.03%)</title><rect x="95.4696%" y="437" width="0.0302%" height="15" fill="rgb(238,163,47)" fg:x="3161" fg:w="1"/><text x="95.7196%" y="447.50"></text></g><g><title>__virt_addr_valid (1 samples, 0.03%)</title><rect x="95.4696%" y="421" width="0.0302%" height="15" fill="rgb(219,91,49)" fg:x="3161" fg:w="1"/><text x="95.7196%" y="431.50"></text></g><g><title>__cond_resched (1 samples, 0.03%)</title><rect x="95.4998%" y="357" width="0.0302%" height="15" fill="rgb(227,167,31)" fg:x="3162" fg:w="1"/><text x="95.7498%" y="367.50"></text></g><g><title>__memset (2 samples, 0.06%)</title><rect x="95.5301%" y="357" width="0.0604%" height="15" fill="rgb(234,80,54)" fg:x="3163" fg:w="2"/><text x="95.7801%" y="367.50"></text></g><g><title>kmalloc_reserve (4 samples, 0.12%)</title><rect x="95.4998%" y="405" width="0.1208%" height="15" fill="rgb(212,114,2)" fg:x="3162" fg:w="4"/><text x="95.7498%" y="415.50"></text></g><g><title>__kmalloc_node_track_caller (4 samples, 0.12%)</title><rect x="95.4998%" y="389" width="0.1208%" height="15" fill="rgb(234,50,24)" fg:x="3162" fg:w="4"/><text x="95.7498%" y="399.50"></text></g><g><title>__kmem_cache_alloc_node (4 samples, 0.12%)</title><rect x="95.4998%" y="373" width="0.1208%" height="15" fill="rgb(221,68,8)" fg:x="3162" fg:w="4"/><text x="95.7498%" y="383.50"></text></g><g><title>__slab_alloc.constprop.0 (1 samples, 0.03%)</title><rect x="95.5905%" y="357" width="0.0302%" height="15" fill="rgb(254,180,31)" fg:x="3165" fg:w="1"/><text x="95.8405%" y="367.50"></text></g><g><title>___slab_alloc (1 samples, 0.03%)</title><rect x="95.5905%" y="341" width="0.0302%" height="15" fill="rgb(247,130,50)" fg:x="3165" fg:w="1"/><text x="95.8405%" y="351.50"></text></g><g><title>__ip_append_data (7 samples, 0.21%)</title><rect x="95.4394%" y="469" width="0.2114%" height="15" fill="rgb(211,109,4)" fg:x="3160" fg:w="7"/><text x="95.6894%" y="479.50"></text></g><g><title>sock_alloc_send_pskb (5 samples, 0.15%)</title><rect x="95.4998%" y="453" width="0.1510%" height="15" fill="rgb(238,50,21)" fg:x="3162" fg:w="5"/><text x="95.7498%" y="463.50"></text></g><g><title>alloc_skb_with_frags (5 samples, 0.15%)</title><rect x="95.4998%" y="437" width="0.1510%" height="15" fill="rgb(225,57,45)" fg:x="3162" fg:w="5"/><text x="95.7498%" y="447.50"></text></g><g><title>__alloc_skb (5 samples, 0.15%)</title><rect x="95.4998%" y="421" width="0.1510%" height="15" fill="rgb(209,196,50)" fg:x="3162" fg:w="5"/><text x="95.7498%" y="431.50"></text></g><g><title>kmem_cache_alloc_node (1 samples, 0.03%)</title><rect x="95.6207%" y="405" width="0.0302%" height="15" fill="rgb(242,140,13)" fg:x="3166" fg:w="1"/><text x="95.8707%" y="415.50"></text></g><g><title>__slab_alloc.constprop.0 (1 samples, 0.03%)</title><rect x="95.6207%" y="389" width="0.0302%" height="15" fill="rgb(217,111,7)" fg:x="3166" fg:w="1"/><text x="95.8707%" y="399.50"></text></g><g><title>___slab_alloc (1 samples, 0.03%)</title><rect x="95.6207%" y="373" width="0.0302%" height="15" fill="rgb(253,193,51)" fg:x="3166" fg:w="1"/><text x="95.8707%" y="383.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="95.6207%" y="357" width="0.0302%" height="15" fill="rgb(252,70,29)" fg:x="3166" fg:w="1"/><text x="95.8707%" y="367.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="95.6207%" y="341" width="0.0302%" height="15" fill="rgb(232,127,12)" fg:x="3166" fg:w="1"/><text x="95.8707%" y="351.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="95.6207%" y="325" width="0.0302%" height="15" fill="rgb(211,180,21)" fg:x="3166" fg:w="1"/><text x="95.8707%" y="335.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.03%)</title><rect x="95.6207%" y="309" width="0.0302%" height="15" fill="rgb(229,72,13)" fg:x="3166" fg:w="1"/><text x="95.8707%" y="319.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.03%)</title><rect x="95.6207%" y="293" width="0.0302%" height="15" fill="rgb(240,211,49)" fg:x="3166" fg:w="1"/><text x="95.8707%" y="303.50"></text></g><g><title>tick_sched_timer (1 samples, 0.03%)</title><rect x="95.6207%" y="277" width="0.0302%" height="15" fill="rgb(219,149,40)" fg:x="3166" fg:w="1"/><text x="95.8707%" y="287.50"></text></g><g><title>tick_sched_handle (1 samples, 0.03%)</title><rect x="95.6207%" y="261" width="0.0302%" height="15" fill="rgb(210,127,46)" fg:x="3166" fg:w="1"/><text x="95.8707%" y="271.50"></text></g><g><title>update_process_times (1 samples, 0.03%)</title><rect x="95.6207%" y="245" width="0.0302%" height="15" fill="rgb(220,106,7)" fg:x="3166" fg:w="1"/><text x="95.8707%" y="255.50"></text></g><g><title>scheduler_tick (1 samples, 0.03%)</title><rect x="95.6207%" y="229" width="0.0302%" height="15" fill="rgb(249,31,22)" fg:x="3166" fg:w="1"/><text x="95.8707%" y="239.50"></text></g><g><title>task_tick_fair (1 samples, 0.03%)</title><rect x="95.6207%" y="213" width="0.0302%" height="15" fill="rgb(253,1,49)" fg:x="3166" fg:w="1"/><text x="95.8707%" y="223.50"></text></g><g><title>update_curr (1 samples, 0.03%)</title><rect x="95.6207%" y="197" width="0.0302%" height="15" fill="rgb(227,144,33)" fg:x="3166" fg:w="1"/><text x="95.8707%" y="207.50"></text></g><g><title>__calc_delta (1 samples, 0.03%)</title><rect x="95.6207%" y="181" width="0.0302%" height="15" fill="rgb(249,163,44)" fg:x="3166" fg:w="1"/><text x="95.8707%" y="191.50"></text></g><g><title>ip_make_skb (8 samples, 0.24%)</title><rect x="95.4394%" y="485" width="0.2416%" height="15" fill="rgb(234,15,39)" fg:x="3160" fg:w="8"/><text x="95.6894%" y="495.50"></text></g><g><title>__ip_make_skb (1 samples, 0.03%)</title><rect x="95.6509%" y="469" width="0.0302%" height="15" fill="rgb(207,66,16)" fg:x="3167" fg:w="1"/><text x="95.9009%" y="479.50"></text></g><g><title>__ip_select_ident (1 samples, 0.03%)</title><rect x="95.6509%" y="453" width="0.0302%" height="15" fill="rgb(233,112,24)" fg:x="3167" fg:w="1"/><text x="95.9009%" y="463.50"></text></g><g><title>__ip_local_out (1 samples, 0.03%)</title><rect x="95.6811%" y="453" width="0.0302%" height="15" fill="rgb(230,90,22)" fg:x="3168" fg:w="1"/><text x="95.9311%" y="463.50"></text></g><g><title>nf_hook_slow (1 samples, 0.03%)</title><rect x="95.6811%" y="437" width="0.0302%" height="15" fill="rgb(229,61,13)" fg:x="3168" fg:w="1"/><text x="95.9311%" y="447.50"></text></g><g><title>nf_conntrack_in (1 samples, 0.03%)</title><rect x="95.6811%" y="421" width="0.0302%" height="15" fill="rgb(225,57,24)" fg:x="3168" fg:w="1"/><text x="95.9311%" y="431.50"></text></g><g><title>__nf_conntrack_find_get (1 samples, 0.03%)</title><rect x="95.6811%" y="405" width="0.0302%" height="15" fill="rgb(208,169,48)" fg:x="3168" fg:w="1"/><text x="95.9311%" y="415.50"></text></g><g><title>ip_finish_output (2 samples, 0.06%)</title><rect x="95.7113%" y="453" width="0.0604%" height="15" fill="rgb(244,218,51)" fg:x="3169" fg:w="2"/><text x="95.9613%" y="463.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.06%)</title><rect x="95.8019%" y="421" width="0.0604%" height="15" fill="rgb(214,148,10)" fg:x="3172" fg:w="2"/><text x="96.0519%" y="431.50"></text></g><g><title>loopback_xmit (1 samples, 0.03%)</title><rect x="95.8321%" y="405" width="0.0302%" height="15" fill="rgb(225,174,27)" fg:x="3173" fg:w="1"/><text x="96.0821%" y="415.50"></text></g><g><title>skb_clone_tx_timestamp (1 samples, 0.03%)</title><rect x="95.8321%" y="389" width="0.0302%" height="15" fill="rgb(230,96,26)" fg:x="3173" fg:w="1"/><text x="96.0821%" y="399.50"></text></g><g><title>netdev_core_pick_tx (1 samples, 0.03%)</title><rect x="95.8623%" y="421" width="0.0302%" height="15" fill="rgb(232,10,30)" fg:x="3174" fg:w="1"/><text x="96.1123%" y="431.50"></text></g><g><title>__dev_queue_xmit (4 samples, 0.12%)</title><rect x="95.8019%" y="437" width="0.1208%" height="15" fill="rgb(222,8,50)" fg:x="3172" fg:w="4"/><text x="96.0519%" y="447.50"></text></g><g><title>validate_xmit_skb (1 samples, 0.03%)</title><rect x="95.8925%" y="421" width="0.0302%" height="15" fill="rgb(213,81,27)" fg:x="3175" fg:w="1"/><text x="96.1425%" y="431.50"></text></g><g><title>skb_csum_hwoffload_help (1 samples, 0.03%)</title><rect x="95.8925%" y="405" width="0.0302%" height="15" fill="rgb(245,50,10)" fg:x="3175" fg:w="1"/><text x="96.1425%" y="415.50"></text></g><g><title>ip_local_deliver (2 samples, 0.06%)</title><rect x="95.9831%" y="325" width="0.0604%" height="15" fill="rgb(216,100,18)" fg:x="3178" fg:w="2"/><text x="96.2331%" y="335.50"></text></g><g><title>nf_hook_slow (2 samples, 0.06%)</title><rect x="95.9831%" y="309" width="0.0604%" height="15" fill="rgb(236,147,54)" fg:x="3178" fg:w="2"/><text x="96.2331%" y="319.50"></text></g><g><title>nf_nat_ipv4_local_in (2 samples, 0.06%)</title><rect x="95.9831%" y="293" width="0.0604%" height="15" fill="rgb(205,143,26)" fg:x="3178" fg:w="2"/><text x="96.2331%" y="303.50"></text></g><g><title>nf_nat_inet_fn (1 samples, 0.03%)</title><rect x="96.0133%" y="277" width="0.0302%" height="15" fill="rgb(236,26,9)" fg:x="3179" fg:w="1"/><text x="96.2633%" y="287.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="96.0435%" y="229" width="0.0302%" height="15" fill="rgb(221,165,53)" fg:x="3180" fg:w="1"/><text x="96.2935%" y="239.50"></text></g><g><title>preempt_count_add (1 samples, 0.03%)</title><rect x="96.0435%" y="213" width="0.0302%" height="15" fill="rgb(214,110,17)" fg:x="3180" fg:w="1"/><text x="96.2935%" y="223.50"></text></g><g><title>__wake_up_common_lock (1 samples, 0.03%)</title><rect x="96.0737%" y="165" width="0.0302%" height="15" fill="rgb(237,197,12)" fg:x="3181" fg:w="1"/><text x="96.3237%" y="175.50"></text></g><g><title>__wake_up_common (1 samples, 0.03%)</title><rect x="96.0737%" y="149" width="0.0302%" height="15" fill="rgb(205,84,17)" fg:x="3181" fg:w="1"/><text x="96.3237%" y="159.50"></text></g><g><title>ep_autoremove_wake_function (1 samples, 0.03%)</title><rect x="96.0737%" y="133" width="0.0302%" height="15" fill="rgb(237,18,45)" fg:x="3181" fg:w="1"/><text x="96.3237%" y="143.50"></text></g><g><title>try_to_wake_up (1 samples, 0.03%)</title><rect x="96.0737%" y="117" width="0.0302%" height="15" fill="rgb(221,87,14)" fg:x="3181" fg:w="1"/><text x="96.3237%" y="127.50"></text></g><g><title>ttwu_queue_wakelist (1 samples, 0.03%)</title><rect x="96.0737%" y="101" width="0.0302%" height="15" fill="rgb(238,186,15)" fg:x="3181" fg:w="1"/><text x="96.3237%" y="111.50"></text></g><g><title>default_send_IPI_single_phys (1 samples, 0.03%)</title><rect x="96.0737%" y="85" width="0.0302%" height="15" fill="rgb(208,115,11)" fg:x="3181" fg:w="1"/><text x="96.3237%" y="95.50"></text></g><g><title>__default_send_IPI_dest_field (1 samples, 0.03%)</title><rect x="96.0737%" y="69" width="0.0302%" height="15" fill="rgb(254,175,0)" fg:x="3181" fg:w="1"/><text x="96.3237%" y="79.50"></text></g><g><title>__udp_enqueue_schedule_skb (4 samples, 0.12%)</title><rect x="96.0435%" y="245" width="0.1208%" height="15" fill="rgb(227,24,42)" fg:x="3180" fg:w="4"/><text x="96.2935%" y="255.50"></text></g><g><title>sock_def_readable (3 samples, 0.09%)</title><rect x="96.0737%" y="229" width="0.0906%" height="15" fill="rgb(223,211,37)" fg:x="3181" fg:w="3"/><text x="96.3237%" y="239.50"></text></g><g><title>__wake_up_common_lock (3 samples, 0.09%)</title><rect x="96.0737%" y="213" width="0.0906%" height="15" fill="rgb(235,49,27)" fg:x="3181" fg:w="3"/><text x="96.3237%" y="223.50"></text></g><g><title>__wake_up_common (3 samples, 0.09%)</title><rect x="96.0737%" y="197" width="0.0906%" height="15" fill="rgb(254,97,51)" fg:x="3181" fg:w="3"/><text x="96.3237%" y="207.50"></text></g><g><title>ep_poll_callback (3 samples, 0.09%)</title><rect x="96.0737%" y="181" width="0.0906%" height="15" fill="rgb(249,51,40)" fg:x="3181" fg:w="3"/><text x="96.3237%" y="191.50"></text></g><g><title>_raw_read_lock_irqsave (2 samples, 0.06%)</title><rect x="96.1039%" y="165" width="0.0604%" height="15" fill="rgb(210,128,45)" fg:x="3182" fg:w="2"/><text x="96.3539%" y="175.50"></text></g><g><title>ip_local_deliver_finish (5 samples, 0.15%)</title><rect x="96.0435%" y="325" width="0.1510%" height="15" fill="rgb(224,137,50)" fg:x="3180" fg:w="5"/><text x="96.2935%" y="335.50"></text></g><g><title>ip_protocol_deliver_rcu (5 samples, 0.15%)</title><rect x="96.0435%" y="309" width="0.1510%" height="15" fill="rgb(242,15,9)" fg:x="3180" fg:w="5"/><text x="96.2935%" y="319.50"></text></g><g><title>__udp4_lib_rcv (5 samples, 0.15%)</title><rect x="96.0435%" y="293" width="0.1510%" height="15" fill="rgb(233,187,41)" fg:x="3180" fg:w="5"/><text x="96.2935%" y="303.50"></text></g><g><title>udp_unicast_rcv_skb (5 samples, 0.15%)</title><rect x="96.0435%" y="277" width="0.1510%" height="15" fill="rgb(227,2,29)" fg:x="3180" fg:w="5"/><text x="96.2935%" y="287.50"></text></g><g><title>udp_queue_rcv_one_skb (5 samples, 0.15%)</title><rect x="96.0435%" y="261" width="0.1510%" height="15" fill="rgb(222,70,3)" fg:x="3180" fg:w="5"/><text x="96.2935%" y="271.50"></text></g><g><title>skb_pull_rcsum (1 samples, 0.03%)</title><rect x="96.1643%" y="245" width="0.0302%" height="15" fill="rgb(213,11,42)" fg:x="3184" fg:w="1"/><text x="96.4143%" y="255.50"></text></g><g><title>ip_rcv_core (1 samples, 0.03%)</title><rect x="96.1945%" y="309" width="0.0302%" height="15" fill="rgb(225,150,9)" fg:x="3185" fg:w="1"/><text x="96.4445%" y="319.50"></text></g><g><title>__this_cpu_preempt_check (1 samples, 0.03%)</title><rect x="96.1945%" y="293" width="0.0302%" height="15" fill="rgb(230,162,45)" fg:x="3185" fg:w="1"/><text x="96.4445%" y="303.50"></text></g><g><title>__netif_receive_skb_one_core (9 samples, 0.27%)</title><rect x="95.9831%" y="341" width="0.2718%" height="15" fill="rgb(222,14,52)" fg:x="3178" fg:w="9"/><text x="96.2331%" y="351.50"></text></g><g><title>ip_rcv (2 samples, 0.06%)</title><rect x="96.1945%" y="325" width="0.0604%" height="15" fill="rgb(254,198,14)" fg:x="3185" fg:w="2"/><text x="96.4445%" y="335.50"></text></g><g><title>nf_hook_slow (1 samples, 0.03%)</title><rect x="96.2247%" y="309" width="0.0302%" height="15" fill="rgb(220,217,30)" fg:x="3186" fg:w="1"/><text x="96.4747%" y="319.50"></text></g><g><title>ipv4_conntrack_defrag (1 samples, 0.03%)</title><rect x="96.2247%" y="293" width="0.0302%" height="15" fill="rgb(215,146,41)" fg:x="3186" fg:w="1"/><text x="96.4747%" y="303.50"></text></g><g><title>ip_finish_output2 (17 samples, 0.51%)</title><rect x="95.7717%" y="453" width="0.5134%" height="15" fill="rgb(217,27,36)" fg:x="3171" fg:w="17"/><text x="96.0217%" y="463.50"></text></g><g><title>__local_bh_enable_ip (12 samples, 0.36%)</title><rect x="95.9227%" y="437" width="0.3624%" height="15" fill="rgb(219,218,39)" fg:x="3176" fg:w="12"/><text x="96.1727%" y="447.50"></text></g><g><title>do_softirq.part.0 (11 samples, 0.33%)</title><rect x="95.9529%" y="421" width="0.3322%" height="15" fill="rgb(219,4,42)" fg:x="3177" fg:w="11"/><text x="96.2029%" y="431.50"></text></g><g><title>__do_softirq (11 samples, 0.33%)</title><rect x="95.9529%" y="405" width="0.3322%" height="15" fill="rgb(249,119,36)" fg:x="3177" fg:w="11"/><text x="96.2029%" y="415.50"></text></g><g><title>net_rx_action (11 samples, 0.33%)</title><rect x="95.9529%" y="389" width="0.3322%" height="15" fill="rgb(209,23,33)" fg:x="3177" fg:w="11"/><text x="96.2029%" y="399.50"></text></g><g><title>__napi_poll (11 samples, 0.33%)</title><rect x="95.9529%" y="373" width="0.3322%" height="15" fill="rgb(211,10,0)" fg:x="3177" fg:w="11"/><text x="96.2029%" y="383.50"></text></g><g><title>process_backlog (11 samples, 0.33%)</title><rect x="95.9529%" y="357" width="0.3322%" height="15" fill="rgb(208,99,37)" fg:x="3177" fg:w="11"/><text x="96.2029%" y="367.50"></text></g><g><title>_raw_spin_lock_irq (1 samples, 0.03%)</title><rect x="96.2549%" y="341" width="0.0302%" height="15" fill="rgb(213,132,31)" fg:x="3187" fg:w="1"/><text x="96.5049%" y="351.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.03%)</title><rect x="96.2851%" y="437" width="0.0302%" height="15" fill="rgb(243,129,40)" fg:x="3188" fg:w="1"/><text x="96.5351%" y="447.50"></text></g><g><title>&lt;tftp::socket::UdpUnboundSocket as tftp::socket::Socket&gt;::send_to (34 samples, 1.03%)</title><rect x="95.3488%" y="645" width="1.0269%" height="15" fill="rgb(210,66,33)" fg:x="3157" fg:w="34"/><text x="95.5988%" y="655.50"></text></g><g><title>std::net::udp::UdpSocket::send_to (33 samples, 1.00%)</title><rect x="95.3790%" y="629" width="0.9967%" height="15" fill="rgb(209,189,4)" fg:x="3158" fg:w="33"/><text x="95.6290%" y="639.50"></text></g><g><title>std::sys_common::net::UdpSocket::send_to (32 samples, 0.97%)</title><rect x="95.4092%" y="613" width="0.9665%" height="15" fill="rgb(214,107,37)" fg:x="3159" fg:w="32"/><text x="95.6592%" y="623.50"></text></g><g><title>__libc_sendto (31 samples, 0.94%)</title><rect x="95.4394%" y="597" width="0.9363%" height="15" fill="rgb(245,88,54)" fg:x="3160" fg:w="31"/><text x="95.6894%" y="607.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (31 samples, 0.94%)</title><rect x="95.4394%" y="581" width="0.9363%" height="15" fill="rgb(205,146,20)" fg:x="3160" fg:w="31"/><text x="95.6894%" y="591.50"></text></g><g><title>do_syscall_64 (31 samples, 0.94%)</title><rect x="95.4394%" y="565" width="0.9363%" height="15" fill="rgb(220,161,25)" fg:x="3160" fg:w="31"/><text x="95.6894%" y="575.50"></text></g><g><title>__x64_sys_sendto (31 samples, 0.94%)</title><rect x="95.4394%" y="549" width="0.9363%" height="15" fill="rgb(215,152,15)" fg:x="3160" fg:w="31"/><text x="95.6894%" y="559.50"></text></g><g><title>__sys_sendto (31 samples, 0.94%)</title><rect x="95.4394%" y="533" width="0.9363%" height="15" fill="rgb(233,192,44)" fg:x="3160" fg:w="31"/><text x="95.6894%" y="543.50"></text></g><g><title>sock_sendmsg (31 samples, 0.94%)</title><rect x="95.4394%" y="517" width="0.9363%" height="15" fill="rgb(240,170,46)" fg:x="3160" fg:w="31"/><text x="95.6894%" y="527.50"></text></g><g><title>udp_sendmsg (31 samples, 0.94%)</title><rect x="95.4394%" y="501" width="0.9363%" height="15" fill="rgb(207,104,33)" fg:x="3160" fg:w="31"/><text x="95.6894%" y="511.50"></text></g><g><title>udp_send_skb (23 samples, 0.69%)</title><rect x="95.6811%" y="485" width="0.6947%" height="15" fill="rgb(219,21,39)" fg:x="3168" fg:w="23"/><text x="95.9311%" y="495.50"></text></g><g><title>ip_send_skb (23 samples, 0.69%)</title><rect x="95.6811%" y="469" width="0.6947%" height="15" fill="rgb(214,133,29)" fg:x="3168" fg:w="23"/><text x="95.9311%" y="479.50"></text></g><g><title>ip_output (3 samples, 0.09%)</title><rect x="96.2851%" y="453" width="0.0906%" height="15" fill="rgb(226,93,6)" fg:x="3188" fg:w="3"/><text x="96.5351%" y="463.50"></text></g><g><title>nf_hook_slow (2 samples, 0.06%)</title><rect x="96.3153%" y="437" width="0.0604%" height="15" fill="rgb(252,222,34)" fg:x="3189" fg:w="2"/><text x="96.5653%" y="447.50"></text></g><g><title>nf_confirm (2 samples, 0.06%)</title><rect x="96.3153%" y="421" width="0.0604%" height="15" fill="rgb(252,92,48)" fg:x="3189" fg:w="2"/><text x="96.5653%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.03%)</title><rect x="96.3757%" y="597" width="0.0302%" height="15" fill="rgb(245,223,24)" fg:x="3191" fg:w="1"/><text x="96.6257%" y="607.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute2x128_si256 (1 samples, 0.03%)</title><rect x="96.4059%" y="597" width="0.0302%" height="15" fill="rgb(205,176,3)" fg:x="3192" fg:w="1"/><text x="96.6559%" y="607.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (3 samples, 0.09%)</title><rect x="96.4361%" y="597" width="0.0906%" height="15" fill="rgb(235,151,15)" fg:x="3193" fg:w="3"/><text x="96.6861%" y="607.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (3 samples, 0.09%)</title><rect x="96.4361%" y="581" width="0.0906%" height="15" fill="rgb(237,209,11)" fg:x="3193" fg:w="3"/><text x="96.6861%" y="591.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (3 samples, 0.09%)</title><rect x="96.4361%" y="565" width="0.0906%" height="15" fill="rgb(243,227,24)" fg:x="3193" fg:w="3"/><text x="96.6861%" y="575.50"></text></g><g><title>core::core_arch::simd::i8x32::new (1 samples, 0.03%)</title><rect x="96.4965%" y="549" width="0.0302%" height="15" fill="rgb(239,193,16)" fg:x="3195" fg:w="1"/><text x="96.7465%" y="559.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="96.5267%" y="597" width="0.0302%" height="15" fill="rgb(231,27,9)" fg:x="3196" fg:w="1"/><text x="96.7767%" y="607.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::encrypt_in_place_detached (7 samples, 0.21%)</title><rect x="96.3757%" y="613" width="0.2114%" height="15" fill="rgb(219,169,10)" fg:x="3191" fg:w="7"/><text x="96.6257%" y="623.50"></text></g><g><title>poly1305::backend::avx2::State::compute_block (1 samples, 0.03%)</title><rect x="96.5569%" y="597" width="0.0302%" height="15" fill="rgb(244,229,43)" fg:x="3197" fg:w="1"/><text x="96.8069%" y="607.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.03%)</title><rect x="96.5569%" y="581" width="0.0302%" height="15" fill="rgb(254,38,20)" fg:x="3197" fg:w="1"/><text x="96.8069%" y="591.50"></text></g><g><title>core::ptr::read (1 samples, 0.03%)</title><rect x="96.5871%" y="549" width="0.0302%" height="15" fill="rgb(250,47,30)" fg:x="3198" fg:w="1"/><text x="96.8371%" y="559.50"></text></g><g><title>tftp::encrypted_packet::EncryptedPacket::encrypt (9 samples, 0.27%)</title><rect x="96.3757%" y="645" width="0.2718%" height="15" fill="rgb(224,124,36)" fg:x="3191" fg:w="9"/><text x="96.6257%" y="655.50"></text></g><g><title>tftp::encryption::Encryptor&lt;R&gt;::encrypt (9 samples, 0.27%)</title><rect x="96.3757%" y="629" width="0.2718%" height="15" fill="rgb(246,68,51)" fg:x="3191" fg:w="9"/><text x="96.6257%" y="639.50"></text></g><g><title>aead::AeadCore::generate_nonce (2 samples, 0.06%)</title><rect x="96.5871%" y="613" width="0.0604%" height="15" fill="rgb(253,43,49)" fg:x="3198" fg:w="2"/><text x="96.8371%" y="623.50"></text></g><g><title>&lt;rand_core::os::OsRng as rand_core::RngCore&gt;::fill_bytes (2 samples, 0.06%)</title><rect x="96.5871%" y="597" width="0.0604%" height="15" fill="rgb(219,54,36)" fg:x="3198" fg:w="2"/><text x="96.8371%" y="607.50"></text></g><g><title>&lt;rand_core::os::OsRng as rand_core::RngCore&gt;::try_fill_bytes (2 samples, 0.06%)</title><rect x="96.5871%" y="581" width="0.0604%" height="15" fill="rgb(227,133,34)" fg:x="3198" fg:w="2"/><text x="96.8371%" y="591.50"></text></g><g><title>getrandom::getrandom (2 samples, 0.06%)</title><rect x="96.5871%" y="565" width="0.0604%" height="15" fill="rgb(247,227,15)" fg:x="3198" fg:w="2"/><text x="96.8371%" y="575.50"></text></g><g><title>getrandom::getrandom_uninit (1 samples, 0.03%)</title><rect x="96.6173%" y="549" width="0.0302%" height="15" fill="rgb(229,96,14)" fg:x="3199" fg:w="1"/><text x="96.8673%" y="559.50"></text></g><g><title>getrandom::imp::getrandom_inner (1 samples, 0.03%)</title><rect x="96.6173%" y="533" width="0.0302%" height="15" fill="rgb(220,79,17)" fg:x="3199" fg:w="1"/><text x="96.8673%" y="543.50"></text></g><g><title>getrandom::util_libc::sys_fill_exact (1 samples, 0.03%)</title><rect x="96.6173%" y="517" width="0.0302%" height="15" fill="rgb(205,131,53)" fg:x="3199" fg:w="1"/><text x="96.8673%" y="527.50"></text></g><g><title>getrandom::imp::getrandom_inner::{{closure}} (1 samples, 0.03%)</title><rect x="96.6173%" y="501" width="0.0302%" height="15" fill="rgb(209,50,29)" fg:x="3199" fg:w="1"/><text x="96.8673%" y="511.50"></text></g><g><title>getrandom::imp::getrandom (1 samples, 0.03%)</title><rect x="96.6173%" y="485" width="0.0302%" height="15" fill="rgb(245,86,46)" fg:x="3199" fg:w="1"/><text x="96.8673%" y="495.50"></text></g><g><title>tftp::packet::PacketType::from_bytes (1 samples, 0.03%)</title><rect x="96.6173%" y="469" width="0.0302%" height="15" fill="rgb(235,66,46)" fg:x="3199" fg:w="1"/><text x="96.8673%" y="479.50"></text></g><g><title>&lt;tftp::client::encryption_socket::EncryptionBoundSocket&lt;S,Rng&gt; as tftp::socket::Socket&gt;::send_to (44 samples, 1.33%)</title><rect x="95.3488%" y="661" width="1.3289%" height="15" fill="rgb(232,148,31)" fg:x="3157" fg:w="44"/><text x="95.5988%" y="671.50"></text></g><g><title>tftp::packet::PacketType::from_bytes (1 samples, 0.03%)</title><rect x="96.6475%" y="645" width="0.0302%" height="15" fill="rgb(217,149,8)" fg:x="3200" fg:w="1"/><text x="96.8975%" y="655.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.03%)</title><rect x="96.6777%" y="645" width="0.0302%" height="15" fill="rgb(209,183,11)" fg:x="3201" fg:w="1"/><text x="96.9277%" y="655.50"></text></g><g><title>__fsnotify_parent (1 samples, 0.03%)</title><rect x="96.7079%" y="501" width="0.0302%" height="15" fill="rgb(208,55,20)" fg:x="3202" fg:w="1"/><text x="96.9579%" y="511.50"></text></g><g><title>dput (1 samples, 0.03%)</title><rect x="96.7079%" y="485" width="0.0302%" height="15" fill="rgb(218,39,14)" fg:x="3202" fg:w="1"/><text x="96.9579%" y="495.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (2 samples, 0.06%)</title><rect x="96.7079%" y="645" width="0.0604%" height="15" fill="rgb(216,169,33)" fg:x="3202" fg:w="2"/><text x="96.9579%" y="655.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Read&gt;::read (2 samples, 0.06%)</title><rect x="96.7079%" y="629" width="0.0604%" height="15" fill="rgb(233,80,24)" fg:x="3202" fg:w="2"/><text x="96.9579%" y="639.50"></text></g><g><title>std::sys::unix::fs::File::read (2 samples, 0.06%)</title><rect x="96.7079%" y="613" width="0.0604%" height="15" fill="rgb(213,179,31)" fg:x="3202" fg:w="2"/><text x="96.9579%" y="623.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (2 samples, 0.06%)</title><rect x="96.7079%" y="597" width="0.0604%" height="15" fill="rgb(209,19,5)" fg:x="3202" fg:w="2"/><text x="96.9579%" y="607.50"></text></g><g><title>__GI___libc_read (2 samples, 0.06%)</title><rect x="96.7079%" y="581" width="0.0604%" height="15" fill="rgb(219,18,35)" fg:x="3202" fg:w="2"/><text x="96.9579%" y="591.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.06%)</title><rect x="96.7079%" y="565" width="0.0604%" height="15" fill="rgb(209,169,16)" fg:x="3202" fg:w="2"/><text x="96.9579%" y="575.50"></text></g><g><title>do_syscall_64 (2 samples, 0.06%)</title><rect x="96.7079%" y="549" width="0.0604%" height="15" fill="rgb(245,90,51)" fg:x="3202" fg:w="2"/><text x="96.9579%" y="559.50"></text></g><g><title>ksys_read (2 samples, 0.06%)</title><rect x="96.7079%" y="533" width="0.0604%" height="15" fill="rgb(220,99,45)" fg:x="3202" fg:w="2"/><text x="96.9579%" y="543.50"></text></g><g><title>vfs_read (2 samples, 0.06%)</title><rect x="96.7079%" y="517" width="0.0604%" height="15" fill="rgb(249,89,25)" fg:x="3202" fg:w="2"/><text x="96.9579%" y="527.50"></text></g><g><title>filemap_read (1 samples, 0.03%)</title><rect x="96.7381%" y="501" width="0.0302%" height="15" fill="rgb(239,193,0)" fg:x="3203" fg:w="1"/><text x="96.9881%" y="511.50"></text></g><g><title>touch_atime (1 samples, 0.03%)</title><rect x="96.7381%" y="485" width="0.0302%" height="15" fill="rgb(231,126,1)" fg:x="3203" fg:w="1"/><text x="96.9881%" y="495.50"></text></g><g><title>atime_needs_update (1 samples, 0.03%)</title><rect x="96.7381%" y="469" width="0.0302%" height="15" fill="rgb(243,166,3)" fg:x="3203" fg:w="1"/><text x="96.9881%" y="479.50"></text></g><g><title>&lt;tftp::readers::multiple_block_reader::MultipleBlockReader&lt;R&gt; as tftp::readers::block_reader::BlockReader&gt;::is_finished (1 samples, 0.03%)</title><rect x="96.7683%" y="645" width="0.0302%" height="15" fill="rgb(223,22,34)" fg:x="3204" fg:w="1"/><text x="97.0183%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (1 samples, 0.03%)</title><rect x="96.7683%" y="629" width="0.0302%" height="15" fill="rgb(251,52,51)" fg:x="3204" fg:w="1"/><text x="97.0183%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.03%)</title><rect x="96.7683%" y="613" width="0.0302%" height="15" fill="rgb(221,165,28)" fg:x="3204" fg:w="1"/><text x="97.0183%" y="623.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.03%)</title><rect x="96.7683%" y="597" width="0.0302%" height="15" fill="rgb(218,121,47)" fg:x="3204" fg:w="1"/><text x="97.0183%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="96.7683%" y="581" width="0.0302%" height="15" fill="rgb(209,120,9)" fg:x="3204" fg:w="1"/><text x="97.0183%" y="591.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="96.7683%" y="565" width="0.0302%" height="15" fill="rgb(236,68,12)" fg:x="3204" fg:w="1"/><text x="97.0183%" y="575.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.03%)</title><rect x="96.7683%" y="549" width="0.0302%" height="15" fill="rgb(225,194,26)" fg:x="3204" fg:w="1"/><text x="97.0183%" y="559.50"></text></g><g><title>&lt;tftp::readers::multiple_block_reader::MultipleBlockReader&lt;R&gt; as tftp::readers::block_reader::BlockReader&gt;::next (5 samples, 0.15%)</title><rect x="96.6777%" y="661" width="0.1510%" height="15" fill="rgb(231,84,39)" fg:x="3201" fg:w="5"/><text x="96.9277%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (1 samples, 0.03%)</title><rect x="96.7986%" y="645" width="0.0302%" height="15" fill="rgb(210,11,45)" fg:x="3205" fg:w="1"/><text x="97.0486%" y="655.50"></text></g><g><title>alloc::vec::set_len_on_drop::SetLenOnDrop::increment_len (1 samples, 0.03%)</title><rect x="96.9194%" y="613" width="0.0302%" height="15" fill="rgb(224,54,52)" fg:x="3209" fg:w="1"/><text x="97.1694%" y="623.50"></text></g><g><title>tftp::main (73 samples, 2.20%)</title><rect x="94.8354%" y="709" width="2.2048%" height="15" fill="rgb(238,102,14)" fg:x="3140" fg:w="73"/><text x="95.0854%" y="719.50">t..</text></g><g><title>tftp::sender::start_send (73 samples, 2.20%)</title><rect x="94.8354%" y="693" width="2.2048%" height="15" fill="rgb(243,160,52)" fg:x="3140" fg:w="73"/><text x="95.0854%" y="703.50">t..</text></g><g><title>tftp::client::sender::send_file (73 samples, 2.20%)</title><rect x="94.8354%" y="677" width="2.2048%" height="15" fill="rgb(216,114,19)" fg:x="3140" fg:w="73"/><text x="95.0854%" y="687.50">t..</text></g><g><title>tftp::buffer::resize_buffer (7 samples, 0.21%)</title><rect x="96.8288%" y="661" width="0.2114%" height="15" fill="rgb(244,166,37)" fg:x="3206" fg:w="7"/><text x="97.0788%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (7 samples, 0.21%)</title><rect x="96.8288%" y="645" width="0.2114%" height="15" fill="rgb(246,29,44)" fg:x="3206" fg:w="7"/><text x="97.0788%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (7 samples, 0.21%)</title><rect x="96.8288%" y="629" width="0.2114%" height="15" fill="rgb(215,56,53)" fg:x="3206" fg:w="7"/><text x="97.0788%" y="639.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3 samples, 0.09%)</title><rect x="96.9496%" y="613" width="0.0906%" height="15" fill="rgb(217,60,2)" fg:x="3210" fg:w="3"/><text x="97.1996%" y="623.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3 samples, 0.09%)</title><rect x="96.9496%" y="597" width="0.0906%" height="15" fill="rgb(207,26,24)" fg:x="3210" fg:w="3"/><text x="97.1996%" y="607.50"></text></g><g><title>&lt;tftp::socket::UdpUnboundSocket as tftp::socket::Socket&gt;::modify_interest (1 samples, 0.03%)</title><rect x="97.0402%" y="645" width="0.0302%" height="15" fill="rgb(252,210,15)" fg:x="3213" fg:w="1"/><text x="97.2902%" y="655.50"></text></g><g><title>polling::Poller::modify (1 samples, 0.03%)</title><rect x="97.0402%" y="629" width="0.0302%" height="15" fill="rgb(253,209,26)" fg:x="3213" fg:w="1"/><text x="97.2902%" y="639.50"></text></g><g><title>polling::Poller::modify_with_mode (1 samples, 0.03%)</title><rect x="97.0402%" y="613" width="0.0302%" height="15" fill="rgb(238,170,14)" fg:x="3213" fg:w="1"/><text x="97.2902%" y="623.50"></text></g><g><title>polling::epoll::Poller::modify (1 samples, 0.03%)</title><rect x="97.0402%" y="597" width="0.0302%" height="15" fill="rgb(216,178,15)" fg:x="3213" fg:w="1"/><text x="97.2902%" y="607.50"></text></g><g><title>rustix::backend::event::epoll::modify (1 samples, 0.03%)</title><rect x="97.0402%" y="581" width="0.0302%" height="15" fill="rgb(250,197,2)" fg:x="3213" fg:w="1"/><text x="97.2902%" y="591.50"></text></g><g><title>rustix::backend::event::syscalls::epoll_mod (1 samples, 0.03%)</title><rect x="97.0402%" y="565" width="0.0302%" height="15" fill="rgb(212,70,42)" fg:x="3213" fg:w="1"/><text x="97.2902%" y="575.50"></text></g><g><title>rustix::backend::conv::ret (1 samples, 0.03%)</title><rect x="97.0402%" y="549" width="0.0302%" height="15" fill="rgb(227,213,9)" fg:x="3213" fg:w="1"/><text x="97.2902%" y="559.50"></text></g><g><title>rustix::backend::io::errno::try_decode_void (1 samples, 0.03%)</title><rect x="97.0402%" y="533" width="0.0302%" height="15" fill="rgb(245,99,25)" fg:x="3213" fg:w="1"/><text x="97.2902%" y="543.50"></text></g><g><title>std::os::fd::owned::BorrowedFd::borrow_raw (1 samples, 0.03%)</title><rect x="97.0402%" y="517" width="0.0302%" height="15" fill="rgb(250,82,29)" fg:x="3213" fg:w="1"/><text x="97.2902%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.03%)</title><rect x="97.0704%" y="629" width="0.0302%" height="15" fill="rgb(241,226,54)" fg:x="3214" fg:w="1"/><text x="97.3204%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (1 samples, 0.03%)</title><rect x="97.1006%" y="629" width="0.0302%" height="15" fill="rgb(221,99,41)" fg:x="3215" fg:w="1"/><text x="97.3506%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (1 samples, 0.03%)</title><rect x="97.1308%" y="613" width="0.0302%" height="15" fill="rgb(213,90,21)" fg:x="3216" fg:w="1"/><text x="97.3808%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.03%)</title><rect x="97.1308%" y="597" width="0.0302%" height="15" fill="rgb(205,208,24)" fg:x="3216" fg:w="1"/><text x="97.3808%" y="607.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.03%)</title><rect x="97.1308%" y="581" width="0.0302%" height="15" fill="rgb(246,31,12)" fg:x="3216" fg:w="1"/><text x="97.3808%" y="591.50"></text></g><g><title>rustix::io::read_write::read (1 samples, 0.03%)</title><rect x="97.1308%" y="565" width="0.0302%" height="15" fill="rgb(213,154,6)" fg:x="3216" fg:w="1"/><text x="97.3808%" y="575.50"></text></g><g><title>polling::Events::len (2 samples, 0.06%)</title><rect x="97.1308%" y="629" width="0.0604%" height="15" fill="rgb(222,163,29)" fg:x="3216" fg:w="2"/><text x="97.3808%" y="639.50"></text></g><g><title>polling::Events::iter (1 samples, 0.03%)</title><rect x="97.1610%" y="613" width="0.0302%" height="15" fill="rgb(227,201,8)" fg:x="3217" fg:w="1"/><text x="97.4110%" y="623.50"></text></g><g><title>polling::epoll::Events::iter (1 samples, 0.03%)</title><rect x="97.1610%" y="597" width="0.0302%" height="15" fill="rgb(233,9,32)" fg:x="3217" fg:w="1"/><text x="97.4110%" y="607.50"></text></g><g><title>rustix::backend::event::epoll::EventVec::iter (1 samples, 0.03%)</title><rect x="97.1610%" y="581" width="0.0302%" height="15" fill="rgb(217,54,24)" fg:x="3217" fg:w="1"/><text x="97.4110%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="97.1610%" y="565" width="0.0302%" height="15" fill="rgb(235,192,0)" fg:x="3217" fg:w="1"/><text x="97.4110%" y="575.50"></text></g><g><title>polling::Event::readable (1 samples, 0.03%)</title><rect x="97.1912%" y="613" width="0.0302%" height="15" fill="rgb(235,45,9)" fg:x="3218" fg:w="1"/><text x="97.4412%" y="623.50"></text></g><g><title>polling::Event::new (1 samples, 0.03%)</title><rect x="97.1912%" y="597" width="0.0302%" height="15" fill="rgb(246,42,40)" fg:x="3218" fg:w="1"/><text x="97.4412%" y="607.50"></text></g><g><title>polling::epoll::EventExtra::empty (1 samples, 0.03%)</title><rect x="97.1912%" y="581" width="0.0302%" height="15" fill="rgb(248,111,24)" fg:x="3218" fg:w="1"/><text x="97.4412%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.03%)</title><rect x="97.1912%" y="565" width="0.0302%" height="15" fill="rgb(249,65,22)" fg:x="3218" fg:w="1"/><text x="97.4412%" y="575.50"></text></g><g><title>__entry_text_start (1 samples, 0.03%)</title><rect x="97.2214%" y="565" width="0.0302%" height="15" fill="rgb(238,111,51)" fg:x="3219" fg:w="1"/><text x="97.4714%" y="575.50"></text></g><g><title>__perf_event_task_sched_out (1 samples, 0.03%)</title><rect x="97.2516%" y="453" width="0.0302%" height="15" fill="rgb(250,118,22)" fg:x="3220" fg:w="1"/><text x="97.5016%" y="463.50"></text></g><g><title>perf_ctx_sched_task_cb (1 samples, 0.03%)</title><rect x="97.2516%" y="437" width="0.0302%" height="15" fill="rgb(234,84,26)" fg:x="3220" fg:w="1"/><text x="97.5016%" y="447.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.03%)</title><rect x="97.2516%" y="421" width="0.0302%" height="15" fill="rgb(243,172,12)" fg:x="3220" fg:w="1"/><text x="97.5016%" y="431.50"></text></g><g><title>dequeue_task_fair (2 samples, 0.06%)</title><rect x="97.2818%" y="453" width="0.0604%" height="15" fill="rgb(236,150,49)" fg:x="3221" fg:w="2"/><text x="97.5318%" y="463.50"></text></g><g><title>dequeue_entity (2 samples, 0.06%)</title><rect x="97.2818%" y="437" width="0.0604%" height="15" fill="rgb(225,197,26)" fg:x="3221" fg:w="2"/><text x="97.5318%" y="447.50"></text></g><g><title>update_curr (1 samples, 0.03%)</title><rect x="97.3120%" y="421" width="0.0302%" height="15" fill="rgb(214,17,42)" fg:x="3222" fg:w="1"/><text x="97.5620%" y="431.50"></text></g><g><title>rustix::backend::arch::asm::syscall4 (5 samples, 0.15%)</title><rect x="97.2214%" y="581" width="0.1510%" height="15" fill="rgb(224,165,40)" fg:x="3219" fg:w="5"/><text x="97.4714%" y="591.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4 samples, 0.12%)</title><rect x="97.2516%" y="565" width="0.1208%" height="15" fill="rgb(246,100,4)" fg:x="3220" fg:w="4"/><text x="97.5016%" y="575.50"></text></g><g><title>do_syscall_64 (4 samples, 0.12%)</title><rect x="97.2516%" y="549" width="0.1208%" height="15" fill="rgb(222,103,0)" fg:x="3220" fg:w="4"/><text x="97.5016%" y="559.50"></text></g><g><title>__x64_sys_epoll_wait (4 samples, 0.12%)</title><rect x="97.2516%" y="533" width="0.1208%" height="15" fill="rgb(227,189,26)" fg:x="3220" fg:w="4"/><text x="97.5016%" y="543.50"></text></g><g><title>do_epoll_wait (4 samples, 0.12%)</title><rect x="97.2516%" y="517" width="0.1208%" height="15" fill="rgb(214,202,17)" fg:x="3220" fg:w="4"/><text x="97.5016%" y="527.50"></text></g><g><title>schedule_hrtimeout_range_clock (4 samples, 0.12%)</title><rect x="97.2516%" y="501" width="0.1208%" height="15" fill="rgb(229,111,3)" fg:x="3220" fg:w="4"/><text x="97.5016%" y="511.50"></text></g><g><title>schedule (4 samples, 0.12%)</title><rect x="97.2516%" y="485" width="0.1208%" height="15" fill="rgb(229,172,15)" fg:x="3220" fg:w="4"/><text x="97.5016%" y="495.50"></text></g><g><title>__schedule (4 samples, 0.12%)</title><rect x="97.2516%" y="469" width="0.1208%" height="15" fill="rgb(230,224,35)" fg:x="3220" fg:w="4"/><text x="97.5016%" y="479.50"></text></g><g><title>update_rq_clock (1 samples, 0.03%)</title><rect x="97.3422%" y="453" width="0.0302%" height="15" fill="rgb(251,141,6)" fg:x="3223" fg:w="1"/><text x="97.5922%" y="463.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.03%)</title><rect x="97.3422%" y="437" width="0.0302%" height="15" fill="rgb(225,208,6)" fg:x="3223" fg:w="1"/><text x="97.5922%" y="447.50"></text></g><g><title>polling::epoll::Poller::wait (7 samples, 0.21%)</title><rect x="97.1912%" y="629" width="0.2114%" height="15" fill="rgb(246,181,16)" fg:x="3218" fg:w="7"/><text x="97.4412%" y="639.50"></text></g><g><title>rustix::backend::event::epoll::wait (6 samples, 0.18%)</title><rect x="97.2214%" y="613" width="0.1812%" height="15" fill="rgb(227,129,36)" fg:x="3219" fg:w="6"/><text x="97.4714%" y="623.50"></text></g><g><title>rustix::backend::event::syscalls::epoll_wait (6 samples, 0.18%)</title><rect x="97.2214%" y="597" width="0.1812%" height="15" fill="rgb(248,117,24)" fg:x="3219" fg:w="6"/><text x="97.4714%" y="607.50"></text></g><g><title>rustix::backend::conv::c_int (1 samples, 0.03%)</title><rect x="97.3724%" y="581" width="0.0302%" height="15" fill="rgb(214,185,35)" fg:x="3224" fg:w="1"/><text x="97.6224%" y="591.50"></text></g><g><title>rustix::backend::conv::pass_usize (1 samples, 0.03%)</title><rect x="97.3724%" y="565" width="0.0302%" height="15" fill="rgb(236,150,34)" fg:x="3224" fg:w="1"/><text x="97.6224%" y="575.50"></text></g><g><title>&lt;tftp::socket::UdpUnboundSocket as tftp::socket::Socket&gt;::recv_from (13 samples, 0.39%)</title><rect x="97.0402%" y="661" width="0.3926%" height="15" fill="rgb(243,228,27)" fg:x="3213" fg:w="13"/><text x="97.2902%" y="671.50"></text></g><g><title>polling::Poller::wait (12 samples, 0.36%)</title><rect x="97.0704%" y="645" width="0.3624%" height="15" fill="rgb(245,77,44)" fg:x="3214" fg:w="12"/><text x="97.3204%" y="655.50"></text></g><g><title>rustix::backend::reg::RetReg&lt;Num&gt;::decode_error_code (1 samples, 0.03%)</title><rect x="97.4026%" y="629" width="0.0302%" height="15" fill="rgb(235,214,42)" fg:x="3225" fg:w="1"/><text x="97.6526%" y="639.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as crypto_common::KeyIvInit&gt;::new (1 samples, 0.03%)</title><rect x="97.4328%" y="613" width="0.0302%" height="15" fill="rgb(221,74,3)" fg:x="3226" fg:w="1"/><text x="97.6828%" y="623.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (1 samples, 0.03%)</title><rect x="97.4328%" y="597" width="0.0302%" height="15" fill="rgb(206,121,29)" fg:x="3226" fg:w="1"/><text x="97.6828%" y="607.50"></text></g><g><title>chacha20::xchacha::hchacha (1 samples, 0.03%)</title><rect x="97.4328%" y="581" width="0.0302%" height="15" fill="rgb(249,131,53)" fg:x="3226" fg:w="1"/><text x="97.6828%" y="591.50"></text></g><g><title>chacha20::xchacha::quarter_round (1 samples, 0.03%)</title><rect x="97.4328%" y="565" width="0.0302%" height="15" fill="rgb(236,170,29)" fg:x="3226" fg:w="1"/><text x="97.6828%" y="575.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="97.4630%" y="485" width="0.0302%" height="15" fill="rgb(247,96,15)" fg:x="3227" fg:w="1"/><text x="97.7130%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (1 samples, 0.03%)</title><rect x="97.4932%" y="469" width="0.0302%" height="15" fill="rgb(211,210,7)" fg:x="3228" fg:w="1"/><text x="97.7432%" y="479.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::decrypt_in_place_detached (3 samples, 0.09%)</title><rect x="97.4630%" y="613" width="0.0906%" height="15" fill="rgb(240,88,50)" fg:x="3227" fg:w="3"/><text x="97.7130%" y="623.50"></text></g><g><title>universal_hash::UniversalHash::update_padded (3 samples, 0.09%)</title><rect x="97.4630%" y="597" width="0.0906%" height="15" fill="rgb(209,229,26)" fg:x="3227" fg:w="3"/><text x="97.7130%" y="607.50"></text></g><g><title>universal_hash::UniversalHash::update (3 samples, 0.09%)</title><rect x="97.4630%" y="581" width="0.0906%" height="15" fill="rgb(210,68,23)" fg:x="3227" fg:w="3"/><text x="97.7130%" y="591.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (3 samples, 0.09%)</title><rect x="97.4630%" y="565" width="0.0906%" height="15" fill="rgb(229,180,13)" fg:x="3227" fg:w="3"/><text x="97.7130%" y="575.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (3 samples, 0.09%)</title><rect x="97.4630%" y="549" width="0.0906%" height="15" fill="rgb(236,53,44)" fg:x="3227" fg:w="3"/><text x="97.7130%" y="559.50"></text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (3 samples, 0.09%)</title><rect x="97.4630%" y="533" width="0.0906%" height="15" fill="rgb(244,214,29)" fg:x="3227" fg:w="3"/><text x="97.7130%" y="543.50"></text></g><g><title>&lt;poly1305::backend::avx2::State as universal_hash::UhfBackend&gt;::proc_par_blocks (3 samples, 0.09%)</title><rect x="97.4630%" y="517" width="0.0906%" height="15" fill="rgb(220,75,29)" fg:x="3227" fg:w="3"/><text x="97.7130%" y="527.50"></text></g><g><title>poly1305::backend::avx2::State::compute_par_blocks (3 samples, 0.09%)</title><rect x="97.4630%" y="501" width="0.0906%" height="15" fill="rgb(214,183,37)" fg:x="3227" fg:w="3"/><text x="97.7130%" y="511.50"></text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_par_blocks (2 samples, 0.06%)</title><rect x="97.4932%" y="485" width="0.0604%" height="15" fill="rgb(239,117,29)" fg:x="3228" fg:w="2"/><text x="97.7432%" y="495.50"></text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_loaded_blocks (1 samples, 0.03%)</title><rect x="97.5234%" y="469" width="0.0302%" height="15" fill="rgb(237,171,35)" fg:x="3229" fg:w="1"/><text x="97.7734%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.03%)</title><rect x="97.5234%" y="453" width="0.0302%" height="15" fill="rgb(229,178,53)" fg:x="3229" fg:w="1"/><text x="97.7734%" y="463.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (1 samples, 0.03%)</title><rect x="97.5536%" y="613" width="0.0302%" height="15" fill="rgb(210,102,19)" fg:x="3230" fg:w="1"/><text x="97.8036%" y="623.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.03%)</title><rect x="97.5536%" y="597" width="0.0302%" height="15" fill="rgb(235,127,22)" fg:x="3230" fg:w="1"/><text x="97.8036%" y="607.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.03%)</title><rect x="97.5536%" y="581" width="0.0302%" height="15" fill="rgb(244,31,31)" fg:x="3230" fg:w="1"/><text x="97.8036%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.03%)</title><rect x="97.5536%" y="565" width="0.0302%" height="15" fill="rgb(231,43,21)" fg:x="3230" fg:w="1"/><text x="97.8036%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="97.5536%" y="549" width="0.0302%" height="15" fill="rgb(217,131,35)" fg:x="3230" fg:w="1"/><text x="97.8036%" y="559.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="97.5536%" y="533" width="0.0302%" height="15" fill="rgb(221,149,4)" fg:x="3230" fg:w="1"/><text x="97.8036%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.03%)</title><rect x="97.5536%" y="517" width="0.0302%" height="15" fill="rgb(232,170,28)" fg:x="3230" fg:w="1"/><text x="97.8036%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.03%)</title><rect x="97.5536%" y="501" width="0.0302%" height="15" fill="rgb(238,56,10)" fg:x="3230" fg:w="1"/><text x="97.8036%" y="511.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (1 samples, 0.03%)</title><rect x="97.5536%" y="485" width="0.0302%" height="15" fill="rgb(235,196,14)" fg:x="3230" fg:w="1"/><text x="97.8036%" y="495.50"></text></g><g><title>&lt;tftp::client::encryption_socket::EncryptionBoundSocket&lt;S,Rng&gt; as tftp::socket::Socket&gt;::recv_from (19 samples, 0.57%)</title><rect x="97.0402%" y="677" width="0.5738%" height="15" fill="rgb(216,45,48)" fg:x="3213" fg:w="19"/><text x="97.2902%" y="687.50"></text></g><g><title>tftp::encrypted_packet::EncryptedPacket::decrypt (6 samples, 0.18%)</title><rect x="97.4328%" y="661" width="0.1812%" height="15" fill="rgb(238,213,17)" fg:x="3226" fg:w="6"/><text x="97.6828%" y="671.50"></text></g><g><title>tftp::encryption::Encryptor&lt;R&gt;::decrypt (6 samples, 0.18%)</title><rect x="97.4328%" y="645" width="0.1812%" height="15" fill="rgb(212,13,2)" fg:x="3226" fg:w="6"/><text x="97.6828%" y="655.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (6 samples, 0.18%)</title><rect x="97.4328%" y="629" width="0.1812%" height="15" fill="rgb(240,114,20)" fg:x="3226" fg:w="6"/><text x="97.6828%" y="639.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.03%)</title><rect x="97.5838%" y="613" width="0.0302%" height="15" fill="rgb(228,41,40)" fg:x="3231" fg:w="1"/><text x="97.8338%" y="623.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (1 samples, 0.03%)</title><rect x="97.6140%" y="581" width="0.0302%" height="15" fill="rgb(244,132,35)" fg:x="3232" fg:w="1"/><text x="97.8640%" y="591.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.03%)</title><rect x="97.6140%" y="565" width="0.0302%" height="15" fill="rgb(253,189,4)" fg:x="3232" fg:w="1"/><text x="97.8640%" y="575.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.03%)</title><rect x="97.6744%" y="565" width="0.0302%" height="15" fill="rgb(224,37,19)" fg:x="3234" fg:w="1"/><text x="97.9244%" y="575.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (2 samples, 0.06%)</title><rect x="97.7046%" y="565" width="0.0604%" height="15" fill="rgb(235,223,18)" fg:x="3235" fg:w="2"/><text x="97.9546%" y="575.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (1 samples, 0.03%)</title><rect x="97.7348%" y="549" width="0.0302%" height="15" fill="rgb(235,163,25)" fg:x="3236" fg:w="1"/><text x="97.9848%" y="559.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.03%)</title><rect x="97.7348%" y="533" width="0.0302%" height="15" fill="rgb(217,145,28)" fg:x="3236" fg:w="1"/><text x="97.9848%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (1 samples, 0.03%)</title><rect x="97.7650%" y="565" width="0.0302%" height="15" fill="rgb(223,223,32)" fg:x="3237" fg:w="1"/><text x="98.0150%" y="575.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as crypto_common::KeyIvInit&gt;::new (16 samples, 0.48%)</title><rect x="97.6140%" y="613" width="0.4832%" height="15" fill="rgb(227,189,39)" fg:x="3232" fg:w="16"/><text x="97.8640%" y="623.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (16 samples, 0.48%)</title><rect x="97.6140%" y="597" width="0.4832%" height="15" fill="rgb(248,10,22)" fg:x="3232" fg:w="16"/><text x="97.8640%" y="607.50"></text></g><g><title>chacha20::xchacha::hchacha (15 samples, 0.45%)</title><rect x="97.6442%" y="581" width="0.4530%" height="15" fill="rgb(248,46,39)" fg:x="3233" fg:w="15"/><text x="97.8942%" y="591.50"></text></g><g><title>chacha20::xchacha::quarter_round (10 samples, 0.30%)</title><rect x="97.7952%" y="565" width="0.3020%" height="15" fill="rgb(248,113,48)" fg:x="3238" fg:w="10"/><text x="98.0452%" y="575.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (3 samples, 0.09%)</title><rect x="98.0066%" y="549" width="0.0906%" height="15" fill="rgb(245,16,25)" fg:x="3245" fg:w="3"/><text x="98.2566%" y="559.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (1 samples, 0.03%)</title><rect x="98.0973%" y="613" width="0.0302%" height="15" fill="rgb(249,152,16)" fg:x="3248" fg:w="1"/><text x="98.3473%" y="623.50"></text></g><g><title>chacha20::backends::avx2::rounds (1 samples, 0.03%)</title><rect x="98.1275%" y="613" width="0.0302%" height="15" fill="rgb(250,16,1)" fg:x="3249" fg:w="1"/><text x="98.3775%" y="623.50"></text></g><g><title>&lt;poly1305::backend::avx2::State as universal_hash::UhfBackend&gt;::proc_block (1 samples, 0.03%)</title><rect x="98.1577%" y="517" width="0.0302%" height="15" fill="rgb(249,138,3)" fg:x="3250" fg:w="1"/><text x="98.4077%" y="527.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (1 samples, 0.03%)</title><rect x="98.1577%" y="501" width="0.0302%" height="15" fill="rgb(227,71,41)" fg:x="3250" fg:w="1"/><text x="98.4077%" y="511.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="98.1879%" y="485" width="0.0302%" height="15" fill="rgb(209,184,23)" fg:x="3251" fg:w="1"/><text x="98.4379%" y="495.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.03%)</title><rect x="98.2181%" y="485" width="0.0302%" height="15" fill="rgb(223,215,31)" fg:x="3252" fg:w="1"/><text x="98.4681%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="98.2483%" y="469" width="0.0302%" height="15" fill="rgb(210,146,28)" fg:x="3253" fg:w="1"/><text x="98.4983%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (2 samples, 0.06%)</title><rect x="98.2785%" y="469" width="0.0604%" height="15" fill="rgb(209,183,41)" fg:x="3254" fg:w="2"/><text x="98.5285%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="98.3389%" y="469" width="0.0302%" height="15" fill="rgb(209,224,45)" fg:x="3256" fg:w="1"/><text x="98.5889%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.03%)</title><rect x="98.3691%" y="469" width="0.0302%" height="15" fill="rgb(224,209,51)" fg:x="3257" fg:w="1"/><text x="98.6191%" y="479.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier as core::convert::From&lt;poly1305::backend::avx2::helpers::Aligned130&gt;&gt;::from (1 samples, 0.03%)</title><rect x="98.3993%" y="453" width="0.0302%" height="15" fill="rgb(223,17,39)" fg:x="3258" fg:w="1"/><text x="98.6493%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (2 samples, 0.06%)</title><rect x="98.4295%" y="453" width="0.0604%" height="15" fill="rgb(234,204,37)" fg:x="3259" fg:w="2"/><text x="98.6795%" y="463.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.03%)</title><rect x="98.4899%" y="453" width="0.0302%" height="15" fill="rgb(236,120,5)" fg:x="3261" fg:w="1"/><text x="98.7399%" y="463.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (2 samples, 0.06%)</title><rect x="98.5201%" y="453" width="0.0604%" height="15" fill="rgb(248,97,27)" fg:x="3262" fg:w="2"/><text x="98.7701%" y="463.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (2 samples, 0.06%)</title><rect x="98.5201%" y="437" width="0.0604%" height="15" fill="rgb(240,66,17)" fg:x="3262" fg:w="2"/><text x="98.7701%" y="447.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::encrypt_in_place_detached (17 samples, 0.51%)</title><rect x="98.1577%" y="613" width="0.5134%" height="15" fill="rgb(210,79,3)" fg:x="3250" fg:w="17"/><text x="98.4077%" y="623.50"></text></g><g><title>universal_hash::UniversalHash::update_padded (17 samples, 0.51%)</title><rect x="98.1577%" y="597" width="0.5134%" height="15" fill="rgb(214,176,27)" fg:x="3250" fg:w="17"/><text x="98.4077%" y="607.50"></text></g><g><title>universal_hash::UniversalHash::update (17 samples, 0.51%)</title><rect x="98.1577%" y="581" width="0.5134%" height="15" fill="rgb(235,185,3)" fg:x="3250" fg:w="17"/><text x="98.4077%" y="591.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (17 samples, 0.51%)</title><rect x="98.1577%" y="565" width="0.5134%" height="15" fill="rgb(227,24,12)" fg:x="3250" fg:w="17"/><text x="98.4077%" y="575.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (17 samples, 0.51%)</title><rect x="98.1577%" y="549" width="0.5134%" height="15" fill="rgb(252,169,48)" fg:x="3250" fg:w="17"/><text x="98.4077%" y="559.50"></text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (17 samples, 0.51%)</title><rect x="98.1577%" y="533" width="0.5134%" height="15" fill="rgb(212,65,1)" fg:x="3250" fg:w="17"/><text x="98.4077%" y="543.50"></text></g><g><title>&lt;poly1305::backend::avx2::State as universal_hash::UhfBackend&gt;::proc_par_blocks (16 samples, 0.48%)</title><rect x="98.1879%" y="517" width="0.4832%" height="15" fill="rgb(242,39,24)" fg:x="3251" fg:w="16"/><text x="98.4379%" y="527.50"></text></g><g><title>poly1305::backend::avx2::State::compute_par_blocks (16 samples, 0.48%)</title><rect x="98.1879%" y="501" width="0.4832%" height="15" fill="rgb(249,32,23)" fg:x="3251" fg:w="16"/><text x="98.4379%" y="511.50"></text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_par_blocks (14 samples, 0.42%)</title><rect x="98.2483%" y="485" width="0.4228%" height="15" fill="rgb(251,195,23)" fg:x="3253" fg:w="14"/><text x="98.4983%" y="495.50"></text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_loaded_blocks (9 samples, 0.27%)</title><rect x="98.3993%" y="469" width="0.2718%" height="15" fill="rgb(236,174,8)" fg:x="3258" fg:w="9"/><text x="98.6493%" y="479.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (3 samples, 0.09%)</title><rect x="98.5805%" y="453" width="0.0906%" height="15" fill="rgb(220,197,8)" fg:x="3264" fg:w="3"/><text x="98.8305%" y="463.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (1 samples, 0.03%)</title><rect x="98.6711%" y="613" width="0.0302%" height="15" fill="rgb(240,108,37)" fg:x="3267" fg:w="1"/><text x="98.9211%" y="623.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.03%)</title><rect x="98.6711%" y="597" width="0.0302%" height="15" fill="rgb(232,176,24)" fg:x="3267" fg:w="1"/><text x="98.9211%" y="607.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.03%)</title><rect x="98.6711%" y="581" width="0.0302%" height="15" fill="rgb(243,35,29)" fg:x="3267" fg:w="1"/><text x="98.9211%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.03%)</title><rect x="98.6711%" y="565" width="0.0302%" height="15" fill="rgb(210,37,18)" fg:x="3267" fg:w="1"/><text x="98.9211%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="98.6711%" y="549" width="0.0302%" height="15" fill="rgb(224,184,40)" fg:x="3267" fg:w="1"/><text x="98.9211%" y="559.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="98.6711%" y="533" width="0.0302%" height="15" fill="rgb(236,39,29)" fg:x="3267" fg:w="1"/><text x="98.9211%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.03%)</title><rect x="98.6711%" y="517" width="0.0302%" height="15" fill="rgb(232,48,39)" fg:x="3267" fg:w="1"/><text x="98.9211%" y="527.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="98.7013%" y="613" width="0.0302%" height="15" fill="rgb(236,34,42)" fg:x="3268" fg:w="1"/><text x="98.9513%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.03%)</title><rect x="98.7315%" y="613" width="0.0302%" height="15" fill="rgb(243,106,37)" fg:x="3269" fg:w="1"/><text x="98.9815%" y="623.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (3 samples, 0.09%)</title><rect x="98.7617%" y="613" width="0.0906%" height="15" fill="rgb(218,96,6)" fg:x="3270" fg:w="3"/><text x="99.0117%" y="623.50"></text></g><g><title>[unknown] (2,816 samples, 85.05%)</title><rect x="13.8327%" y="725" width="85.0498%" height="15" fill="rgb(235,130,12)" fg:x="458" fg:w="2816"/><text x="14.0827%" y="735.50">[unknown]</text></g><g><title>tftp::sender::start_send (61 samples, 1.84%)</title><rect x="97.0402%" y="709" width="1.8423%" height="15" fill="rgb(231,95,0)" fg:x="3213" fg:w="61"/><text x="97.2902%" y="719.50">t..</text></g><g><title>tftp::client::sender::send_file (61 samples, 1.84%)</title><rect x="97.0402%" y="693" width="1.8423%" height="15" fill="rgb(228,12,23)" fg:x="3213" fg:w="61"/><text x="97.2902%" y="703.50">t..</text></g><g><title>&lt;tftp::client::encryption_socket::EncryptionBoundSocket&lt;S,Rng&gt; as tftp::socket::Socket&gt;::send_to (42 samples, 1.27%)</title><rect x="97.6140%" y="677" width="1.2685%" height="15" fill="rgb(216,12,1)" fg:x="3232" fg:w="42"/><text x="97.8640%" y="687.50"></text></g><g><title>tftp::encrypted_packet::EncryptedPacket::encrypt (42 samples, 1.27%)</title><rect x="97.6140%" y="661" width="1.2685%" height="15" fill="rgb(219,59,3)" fg:x="3232" fg:w="42"/><text x="97.8640%" y="671.50"></text></g><g><title>tftp::encryption::Encryptor&lt;R&gt;::encrypt (42 samples, 1.27%)</title><rect x="97.6140%" y="645" width="1.2685%" height="15" fill="rgb(215,208,46)" fg:x="3232" fg:w="42"/><text x="97.8640%" y="655.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::encrypt_in_place_detached (42 samples, 1.27%)</title><rect x="97.6140%" y="629" width="1.2685%" height="15" fill="rgb(254,224,29)" fg:x="3232" fg:w="42"/><text x="97.8640%" y="639.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.03%)</title><rect x="98.8523%" y="613" width="0.0302%" height="15" fill="rgb(232,14,29)" fg:x="3273" fg:w="1"/><text x="99.1023%" y="623.50"></text></g><g><title>_start (1 samples, 0.03%)</title><rect x="98.8825%" y="725" width="0.0302%" height="15" fill="rgb(208,45,52)" fg:x="3274" fg:w="1"/><text x="99.1325%" y="735.50"></text></g><g><title>__libc_start_main_impl (1 samples, 0.03%)</title><rect x="98.8825%" y="709" width="0.0302%" height="15" fill="rgb(234,191,28)" fg:x="3274" fg:w="1"/><text x="99.1325%" y="719.50"></text></g><g><title>__libc_start_call_main (1 samples, 0.03%)</title><rect x="98.8825%" y="693" width="0.0302%" height="15" fill="rgb(244,67,43)" fg:x="3274" fg:w="1"/><text x="99.1325%" y="703.50"></text></g><g><title>main (1 samples, 0.03%)</title><rect x="98.8825%" y="677" width="0.0302%" height="15" fill="rgb(236,189,24)" fg:x="3274" fg:w="1"/><text x="99.1325%" y="687.50"></text></g><g><title>std::rt::lang_start (1 samples, 0.03%)</title><rect x="98.8825%" y="661" width="0.0302%" height="15" fill="rgb(239,214,33)" fg:x="3274" fg:w="1"/><text x="99.1325%" y="671.50"></text></g><g><title>std::rt::lang_start_internal (1 samples, 0.03%)</title><rect x="98.8825%" y="645" width="0.0302%" height="15" fill="rgb(226,176,41)" fg:x="3274" fg:w="1"/><text x="99.1325%" y="655.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.03%)</title><rect x="98.8825%" y="629" width="0.0302%" height="15" fill="rgb(248,47,8)" fg:x="3274" fg:w="1"/><text x="99.1325%" y="639.50"></text></g><g><title>std::panicking::try (1 samples, 0.03%)</title><rect x="98.8825%" y="613" width="0.0302%" height="15" fill="rgb(218,81,44)" fg:x="3274" fg:w="1"/><text x="99.1325%" y="623.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.03%)</title><rect x="98.8825%" y="597" width="0.0302%" height="15" fill="rgb(213,98,6)" fg:x="3274" fg:w="1"/><text x="99.1325%" y="607.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (1 samples, 0.03%)</title><rect x="98.8825%" y="581" width="0.0302%" height="15" fill="rgb(222,85,22)" fg:x="3274" fg:w="1"/><text x="99.1325%" y="591.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.03%)</title><rect x="98.8825%" y="565" width="0.0302%" height="15" fill="rgb(239,46,39)" fg:x="3274" fg:w="1"/><text x="99.1325%" y="575.50"></text></g><g><title>std::panicking::try (1 samples, 0.03%)</title><rect x="98.8825%" y="549" width="0.0302%" height="15" fill="rgb(237,12,29)" fg:x="3274" fg:w="1"/><text x="99.1325%" y="559.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.03%)</title><rect x="98.8825%" y="533" width="0.0302%" height="15" fill="rgb(214,77,8)" fg:x="3274" fg:w="1"/><text x="99.1325%" y="543.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1 samples, 0.03%)</title><rect x="98.8825%" y="517" width="0.0302%" height="15" fill="rgb(217,168,37)" fg:x="3274" fg:w="1"/><text x="99.1325%" y="527.50"></text></g><g><title>std::rt::lang_start::{{closure}} (1 samples, 0.03%)</title><rect x="98.8825%" y="501" width="0.0302%" height="15" fill="rgb(221,217,23)" fg:x="3274" fg:w="1"/><text x="99.1325%" y="511.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.03%)</title><rect x="98.8825%" y="485" width="0.0302%" height="15" fill="rgb(243,229,36)" fg:x="3274" fg:w="1"/><text x="99.1325%" y="495.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.03%)</title><rect x="98.8825%" y="469" width="0.0302%" height="15" fill="rgb(251,163,40)" fg:x="3274" fg:w="1"/><text x="99.1325%" y="479.50"></text></g><g><title>tftp::main (1 samples, 0.03%)</title><rect x="98.8825%" y="453" width="0.0302%" height="15" fill="rgb(237,222,12)" fg:x="3274" fg:w="1"/><text x="99.1325%" y="463.50"></text></g><g><title>tftp::sender::start_send (1 samples, 0.03%)</title><rect x="98.8825%" y="437" width="0.0302%" height="15" fill="rgb(248,132,6)" fg:x="3274" fg:w="1"/><text x="99.1325%" y="447.50"></text></g><g><title>tftp::socket::create_socket (1 samples, 0.03%)</title><rect x="98.8825%" y="421" width="0.0302%" height="15" fill="rgb(227,167,50)" fg:x="3274" fg:w="1"/><text x="99.1325%" y="431.50"></text></g><g><title>socket2::socket::Socket::bind (1 samples, 0.03%)</title><rect x="98.8825%" y="405" width="0.0302%" height="15" fill="rgb(242,84,37)" fg:x="3274" fg:w="1"/><text x="99.1325%" y="415.50"></text></g><g><title>socket2::sys::bind (1 samples, 0.03%)</title><rect x="98.8825%" y="389" width="0.0302%" height="15" fill="rgb(212,4,50)" fg:x="3274" fg:w="1"/><text x="99.1325%" y="399.50"></text></g><g><title>__GI_bind (1 samples, 0.03%)</title><rect x="98.8825%" y="373" width="0.0302%" height="15" fill="rgb(230,228,32)" fg:x="3274" fg:w="1"/><text x="99.1325%" y="383.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="98.8825%" y="357" width="0.0302%" height="15" fill="rgb(248,217,23)" fg:x="3274" fg:w="1"/><text x="99.1325%" y="367.50"></text></g><g><title>do_syscall_64 (1 samples, 0.03%)</title><rect x="98.8825%" y="341" width="0.0302%" height="15" fill="rgb(238,197,32)" fg:x="3274" fg:w="1"/><text x="99.1325%" y="351.50"></text></g><g><title>__x64_sys_bind (1 samples, 0.03%)</title><rect x="98.8825%" y="325" width="0.0302%" height="15" fill="rgb(236,106,1)" fg:x="3274" fg:w="1"/><text x="99.1325%" y="335.50"></text></g><g><title>__sys_bind (1 samples, 0.03%)</title><rect x="98.8825%" y="309" width="0.0302%" height="15" fill="rgb(219,228,13)" fg:x="3274" fg:w="1"/><text x="99.1325%" y="319.50"></text></g><g><title>__inet_bind (1 samples, 0.03%)</title><rect x="98.8825%" y="293" width="0.0302%" height="15" fill="rgb(238,30,35)" fg:x="3274" fg:w="1"/><text x="99.1325%" y="303.50"></text></g><g><title>udp_lib_get_port (1 samples, 0.03%)</title><rect x="98.8825%" y="277" width="0.0302%" height="15" fill="rgb(236,70,23)" fg:x="3274" fg:w="1"/><text x="99.1325%" y="287.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="98.9127%" y="709" width="0.0302%" height="15" fill="rgb(249,104,48)" fg:x="3275" fg:w="1"/><text x="99.1627%" y="719.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (2 samples, 0.06%)</title><rect x="98.9127%" y="725" width="0.0604%" height="15" fill="rgb(254,117,50)" fg:x="3275" fg:w="2"/><text x="99.1627%" y="735.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="98.9429%" y="709" width="0.0302%" height="15" fill="rgb(223,152,4)" fg:x="3276" fg:w="1"/><text x="99.1929%" y="719.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.03%)</title><rect x="98.9731%" y="725" width="0.0302%" height="15" fill="rgb(245,6,2)" fg:x="3277" fg:w="1"/><text x="99.2231%" y="735.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_blend_epi32 (1 samples, 0.03%)</title><rect x="98.9731%" y="709" width="0.0302%" height="15" fill="rgb(249,150,24)" fg:x="3277" fg:w="1"/><text x="99.2231%" y="719.50"></text></g><g><title>core::slice::raw::from_raw_parts (1 samples, 0.03%)</title><rect x="99.0033%" y="725" width="0.0302%" height="15" fill="rgb(228,185,42)" fg:x="3278" fg:w="1"/><text x="99.2533%" y="735.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.03%)</title><rect x="99.0033%" y="709" width="0.0302%" height="15" fill="rgb(226,39,33)" fg:x="3278" fg:w="1"/><text x="99.2533%" y="719.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (1 samples, 0.03%)</title><rect x="99.0033%" y="693" width="0.0302%" height="15" fill="rgb(221,166,19)" fg:x="3278" fg:w="1"/><text x="99.2533%" y="703.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (1 samples, 0.03%)</title><rect x="99.0335%" y="725" width="0.0302%" height="15" fill="rgb(209,109,2)" fg:x="3279" fg:w="1"/><text x="99.2835%" y="735.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (1 samples, 0.03%)</title><rect x="99.0335%" y="709" width="0.0302%" height="15" fill="rgb(252,216,26)" fg:x="3279" fg:w="1"/><text x="99.2835%" y="719.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (1 samples, 0.03%)</title><rect x="99.0335%" y="693" width="0.0302%" height="15" fill="rgb(227,173,36)" fg:x="3279" fg:w="1"/><text x="99.2835%" y="703.50"></text></g><g><title>__x64_sys_epoll_ctl (1 samples, 0.03%)</title><rect x="99.0939%" y="693" width="0.0302%" height="15" fill="rgb(209,90,7)" fg:x="3281" fg:w="1"/><text x="99.3439%" y="703.50"></text></g><g><title>do_epoll_ctl (1 samples, 0.03%)</title><rect x="99.0939%" y="677" width="0.0302%" height="15" fill="rgb(250,194,11)" fg:x="3281" fg:w="1"/><text x="99.3439%" y="687.50"></text></g><g><title>ep_item_poll.isra.0 (1 samples, 0.03%)</title><rect x="99.0939%" y="661" width="0.0302%" height="15" fill="rgb(220,72,50)" fg:x="3281" fg:w="1"/><text x="99.3439%" y="671.50"></text></g><g><title>eventfd_poll (1 samples, 0.03%)</title><rect x="99.0939%" y="645" width="0.0302%" height="15" fill="rgb(222,106,48)" fg:x="3281" fg:w="1"/><text x="99.3439%" y="655.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="99.1241%" y="613" width="0.0302%" height="15" fill="rgb(216,220,45)" fg:x="3282" fg:w="1"/><text x="99.3741%" y="623.50"></text></g><g><title>preempt_count_add (1 samples, 0.03%)</title><rect x="99.1241%" y="597" width="0.0302%" height="15" fill="rgb(234,112,18)" fg:x="3282" fg:w="1"/><text x="99.3741%" y="607.50"></text></g><g><title>__x64_sys_epoll_wait (2 samples, 0.06%)</title><rect x="99.1241%" y="693" width="0.0604%" height="15" fill="rgb(206,179,9)" fg:x="3282" fg:w="2"/><text x="99.3741%" y="703.50"></text></g><g><title>do_epoll_wait (2 samples, 0.06%)</title><rect x="99.1241%" y="677" width="0.0604%" height="15" fill="rgb(215,115,40)" fg:x="3282" fg:w="2"/><text x="99.3741%" y="687.50"></text></g><g><title>schedule_hrtimeout_range_clock (2 samples, 0.06%)</title><rect x="99.1241%" y="661" width="0.0604%" height="15" fill="rgb(222,69,34)" fg:x="3282" fg:w="2"/><text x="99.3741%" y="671.50"></text></g><g><title>schedule (2 samples, 0.06%)</title><rect x="99.1241%" y="645" width="0.0604%" height="15" fill="rgb(209,161,10)" fg:x="3282" fg:w="2"/><text x="99.3741%" y="655.50"></text></g><g><title>__schedule (2 samples, 0.06%)</title><rect x="99.1241%" y="629" width="0.0604%" height="15" fill="rgb(217,6,38)" fg:x="3282" fg:w="2"/><text x="99.3741%" y="639.50"></text></g><g><title>dequeue_task_fair (1 samples, 0.03%)</title><rect x="99.1543%" y="613" width="0.0302%" height="15" fill="rgb(229,229,48)" fg:x="3283" fg:w="1"/><text x="99.4043%" y="623.50"></text></g><g><title>dequeue_entity (1 samples, 0.03%)</title><rect x="99.1543%" y="597" width="0.0302%" height="15" fill="rgb(225,21,28)" fg:x="3283" fg:w="1"/><text x="99.4043%" y="607.50"></text></g><g><title>update_load_avg (1 samples, 0.03%)</title><rect x="99.1543%" y="581" width="0.0302%" height="15" fill="rgb(206,33,13)" fg:x="3283" fg:w="1"/><text x="99.4043%" y="591.50"></text></g><g><title>__update_load_avg_se (1 samples, 0.03%)</title><rect x="99.1543%" y="565" width="0.0302%" height="15" fill="rgb(242,178,17)" fg:x="3283" fg:w="1"/><text x="99.4043%" y="575.50"></text></g><g><title>map_vdso (1 samples, 0.03%)</title><rect x="99.1845%" y="629" width="0.0302%" height="15" fill="rgb(220,162,5)" fg:x="3284" fg:w="1"/><text x="99.4345%" y="639.50"></text></g><g><title>__install_special_mapping (1 samples, 0.03%)</title><rect x="99.1845%" y="613" width="0.0302%" height="15" fill="rgb(210,33,43)" fg:x="3284" fg:w="1"/><text x="99.4345%" y="623.50"></text></g><g><title>perf_event_mmap (1 samples, 0.03%)</title><rect x="99.1845%" y="597" width="0.0302%" height="15" fill="rgb(216,116,54)" fg:x="3284" fg:w="1"/><text x="99.4345%" y="607.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.03%)</title><rect x="99.1845%" y="581" width="0.0302%" height="15" fill="rgb(249,92,24)" fg:x="3284" fg:w="1"/><text x="99.4345%" y="591.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.03%)</title><rect x="99.1845%" y="565" width="0.0302%" height="15" fill="rgb(231,189,14)" fg:x="3284" fg:w="1"/><text x="99.4345%" y="575.50"></text></g><g><title>perf_event_mmap_output (1 samples, 0.03%)</title><rect x="99.1845%" y="549" width="0.0302%" height="15" fill="rgb(230,8,41)" fg:x="3284" fg:w="1"/><text x="99.4345%" y="559.50"></text></g><g><title>__perf_event_header__init_id (1 samples, 0.03%)</title><rect x="99.1845%" y="533" width="0.0302%" height="15" fill="rgb(249,7,27)" fg:x="3284" fg:w="1"/><text x="99.4345%" y="543.50"></text></g><g><title>__x64_sys_execve (2 samples, 0.06%)</title><rect x="99.1845%" y="693" width="0.0604%" height="15" fill="rgb(232,86,5)" fg:x="3284" fg:w="2"/><text x="99.4345%" y="703.50"></text></g><g><title>do_execveat_common.isra.0 (2 samples, 0.06%)</title><rect x="99.1845%" y="677" width="0.0604%" height="15" fill="rgb(224,175,18)" fg:x="3284" fg:w="2"/><text x="99.4345%" y="687.50"></text></g><g><title>bprm_execve (2 samples, 0.06%)</title><rect x="99.1845%" y="661" width="0.0604%" height="15" fill="rgb(220,129,12)" fg:x="3284" fg:w="2"/><text x="99.4345%" y="671.50"></text></g><g><title>load_elf_binary (2 samples, 0.06%)</title><rect x="99.1845%" y="645" width="0.0604%" height="15" fill="rgb(210,19,36)" fg:x="3284" fg:w="2"/><text x="99.4345%" y="655.50"></text></g><g><title>setup_arg_pages (1 samples, 0.03%)</title><rect x="99.2147%" y="629" width="0.0302%" height="15" fill="rgb(219,96,14)" fg:x="3285" fg:w="1"/><text x="99.4647%" y="639.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.03%)</title><rect x="99.2147%" y="613" width="0.0302%" height="15" fill="rgb(249,106,1)" fg:x="3285" fg:w="1"/><text x="99.4647%" y="623.50"></text></g><g><title>__x64_sys_getrandom (2 samples, 0.06%)</title><rect x="99.2449%" y="693" width="0.0604%" height="15" fill="rgb(249,155,20)" fg:x="3286" fg:w="2"/><text x="99.4949%" y="703.50"></text></g><g><title>get_random_bytes_user (2 samples, 0.06%)</title><rect x="99.2449%" y="677" width="0.0604%" height="15" fill="rgb(244,168,9)" fg:x="3286" fg:w="2"/><text x="99.4949%" y="687.50"></text></g><g><title>crng_make_state (1 samples, 0.03%)</title><rect x="99.2751%" y="661" width="0.0302%" height="15" fill="rgb(216,23,50)" fg:x="3287" fg:w="1"/><text x="99.5251%" y="671.50"></text></g><g><title>crng_fast_key_erasure (1 samples, 0.03%)</title><rect x="99.2751%" y="645" width="0.0302%" height="15" fill="rgb(224,219,20)" fg:x="3287" fg:w="1"/><text x="99.5251%" y="655.50"></text></g><g><title>inet_recvmsg (2 samples, 0.06%)</title><rect x="99.3053%" y="645" width="0.0604%" height="15" fill="rgb(222,156,15)" fg:x="3288" fg:w="2"/><text x="99.5553%" y="655.50"></text></g><g><title>udp_recvmsg (2 samples, 0.06%)</title><rect x="99.3053%" y="629" width="0.0604%" height="15" fill="rgb(231,97,17)" fg:x="3288" fg:w="2"/><text x="99.5553%" y="639.50"></text></g><g><title>__skb_recv_udp (1 samples, 0.03%)</title><rect x="99.3355%" y="613" width="0.0302%" height="15" fill="rgb(218,70,48)" fg:x="3289" fg:w="1"/><text x="99.5855%" y="623.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="99.3355%" y="597" width="0.0302%" height="15" fill="rgb(212,196,52)" fg:x="3289" fg:w="1"/><text x="99.5855%" y="607.50"></text></g><g><title>__x64_sys_recvfrom (3 samples, 0.09%)</title><rect x="99.3053%" y="693" width="0.0906%" height="15" fill="rgb(243,203,18)" fg:x="3288" fg:w="3"/><text x="99.5553%" y="703.50"></text></g><g><title>__sys_recvfrom (3 samples, 0.09%)</title><rect x="99.3053%" y="677" width="0.0906%" height="15" fill="rgb(252,125,41)" fg:x="3288" fg:w="3"/><text x="99.5553%" y="687.50"></text></g><g><title>sock_recvmsg (3 samples, 0.09%)</title><rect x="99.3053%" y="661" width="0.0906%" height="15" fill="rgb(223,180,33)" fg:x="3288" fg:w="3"/><text x="99.5553%" y="671.50"></text></g><g><title>security_socket_recvmsg (1 samples, 0.03%)</title><rect x="99.3658%" y="645" width="0.0302%" height="15" fill="rgb(254,159,46)" fg:x="3290" fg:w="1"/><text x="99.6158%" y="655.50"></text></g><g><title>move_addr_to_kernel (2 samples, 0.06%)</title><rect x="99.3960%" y="661" width="0.0604%" height="15" fill="rgb(254,38,10)" fg:x="3291" fg:w="2"/><text x="99.6460%" y="671.50"></text></g><g><title>__check_object_size (2 samples, 0.06%)</title><rect x="99.3960%" y="645" width="0.0604%" height="15" fill="rgb(208,217,32)" fg:x="3291" fg:w="2"/><text x="99.6460%" y="655.50"></text></g><g><title>check_stack_object (2 samples, 0.06%)</title><rect x="99.3960%" y="629" width="0.0604%" height="15" fill="rgb(221,120,13)" fg:x="3291" fg:w="2"/><text x="99.6460%" y="639.50"></text></g><g><title>apparmor_socket_sendmsg (1 samples, 0.03%)</title><rect x="99.4866%" y="629" width="0.0302%" height="15" fill="rgb(246,54,52)" fg:x="3294" fg:w="1"/><text x="99.7366%" y="639.50"></text></g><g><title>security_socket_sendmsg (3 samples, 0.09%)</title><rect x="99.4564%" y="645" width="0.0906%" height="15" fill="rgb(242,34,25)" fg:x="3293" fg:w="3"/><text x="99.7064%" y="655.50"></text></g><g><title>tomoyo_socket_sendmsg_permission (1 samples, 0.03%)</title><rect x="99.5168%" y="629" width="0.0302%" height="15" fill="rgb(247,209,9)" fg:x="3295" fg:w="1"/><text x="99.7668%" y="639.50"></text></g><g><title>tomoyo_check_inet_address (1 samples, 0.03%)</title><rect x="99.5168%" y="613" width="0.0302%" height="15" fill="rgb(228,71,26)" fg:x="3295" fg:w="1"/><text x="99.7668%" y="623.50"></text></g><g><title>tomoyo_init_request_info (1 samples, 0.03%)</title><rect x="99.5168%" y="597" width="0.0302%" height="15" fill="rgb(222,145,49)" fg:x="3295" fg:w="1"/><text x="99.7668%" y="607.50"></text></g><g><title>tomoyo_domain (1 samples, 0.03%)</title><rect x="99.5168%" y="581" width="0.0302%" height="15" fill="rgb(218,121,17)" fg:x="3295" fg:w="1"/><text x="99.7668%" y="591.50"></text></g><g><title>__x64_sys_sendto (9 samples, 0.27%)</title><rect x="99.3960%" y="693" width="0.2718%" height="15" fill="rgb(244,50,7)" fg:x="3291" fg:w="9"/><text x="99.6460%" y="703.50"></text></g><g><title>__sys_sendto (9 samples, 0.27%)</title><rect x="99.3960%" y="677" width="0.2718%" height="15" fill="rgb(246,229,37)" fg:x="3291" fg:w="9"/><text x="99.6460%" y="687.50"></text></g><g><title>sock_sendmsg (7 samples, 0.21%)</title><rect x="99.4564%" y="661" width="0.2114%" height="15" fill="rgb(225,18,5)" fg:x="3293" fg:w="7"/><text x="99.7064%" y="671.50"></text></g><g><title>udp_sendmsg (4 samples, 0.12%)</title><rect x="99.5470%" y="645" width="0.1208%" height="15" fill="rgb(213,204,8)" fg:x="3296" fg:w="4"/><text x="99.7970%" y="655.50"></text></g><g><title>ip_route_output_flow (3 samples, 0.09%)</title><rect x="99.5772%" y="629" width="0.0906%" height="15" fill="rgb(238,103,6)" fg:x="3297" fg:w="3"/><text x="99.8272%" y="639.50"></text></g><g><title>ip_route_output_key_hash_rcu (3 samples, 0.09%)</title><rect x="99.5772%" y="613" width="0.0906%" height="15" fill="rgb(222,25,35)" fg:x="3297" fg:w="3"/><text x="99.8272%" y="623.50"></text></g><g><title>fib_table_lookup (2 samples, 0.06%)</title><rect x="99.6074%" y="597" width="0.0604%" height="15" fill="rgb(213,203,35)" fg:x="3298" fg:w="2"/><text x="99.8574%" y="607.50"></text></g><g><title>__x64_sys_timerfd_settime (1 samples, 0.03%)</title><rect x="99.6678%" y="693" width="0.0302%" height="15" fill="rgb(221,79,53)" fg:x="3300" fg:w="1"/><text x="99.9178%" y="703.50"></text></g><g><title>do_timerfd_settime (1 samples, 0.03%)</title><rect x="99.6678%" y="677" width="0.0302%" height="15" fill="rgb(243,200,35)" fg:x="3300" fg:w="1"/><text x="99.9178%" y="687.50"></text></g><g><title>hrtimer_try_to_cancel (1 samples, 0.03%)</title><rect x="99.6678%" y="661" width="0.0302%" height="15" fill="rgb(248,60,25)" fg:x="3300" fg:w="1"/><text x="99.9178%" y="671.50"></text></g><g><title>filemap_get_pages (1 samples, 0.03%)</title><rect x="99.7282%" y="645" width="0.0302%" height="15" fill="rgb(227,53,46)" fg:x="3302" fg:w="1"/><text x="99.9782%" y="655.50"></text></g><g><title>filemap_get_read_batch (1 samples, 0.03%)</title><rect x="99.7282%" y="629" width="0.0302%" height="15" fill="rgb(216,120,32)" fg:x="3302" fg:w="1"/><text x="99.9782%" y="639.50"></text></g><g><title>xas_load (1 samples, 0.03%)</title><rect x="99.7282%" y="613" width="0.0302%" height="15" fill="rgb(220,134,1)" fg:x="3302" fg:w="1"/><text x="99.9782%" y="623.50"></text></g><g><title>xas_start (1 samples, 0.03%)</title><rect x="99.7282%" y="597" width="0.0302%" height="15" fill="rgb(237,168,5)" fg:x="3302" fg:w="1"/><text x="99.9782%" y="607.50"></text></g><g><title>filemap_read (3 samples, 0.09%)</title><rect x="99.6980%" y="661" width="0.0906%" height="15" fill="rgb(231,100,33)" fg:x="3301" fg:w="3"/><text x="99.9480%" y="671.50"></text></g><g><title>touch_atime (1 samples, 0.03%)</title><rect x="99.7584%" y="645" width="0.0302%" height="15" fill="rgb(236,177,47)" fg:x="3303" fg:w="1"/><text x="100.0084%" y="655.50"></text></g><g><title>atime_needs_update (1 samples, 0.03%)</title><rect x="99.7584%" y="629" width="0.0302%" height="15" fill="rgb(235,7,49)" fg:x="3303" fg:w="1"/><text x="100.0084%" y="639.50"></text></g><g><title>ksys_read (4 samples, 0.12%)</title><rect x="99.6980%" y="693" width="0.1208%" height="15" fill="rgb(232,119,22)" fg:x="3301" fg:w="4"/><text x="99.9480%" y="703.50"></text></g><g><title>vfs_read (4 samples, 0.12%)</title><rect x="99.6980%" y="677" width="0.1208%" height="15" fill="rgb(254,73,53)" fg:x="3301" fg:w="4"/><text x="99.9480%" y="687.50"></text></g><g><title>fsnotify_perm.part.0 (1 samples, 0.03%)</title><rect x="99.7886%" y="661" width="0.0302%" height="15" fill="rgb(251,35,20)" fg:x="3304" fg:w="1"/><text x="100.0386%" y="671.50"></text></g><g><title>syscall_enter_from_user_mode (1 samples, 0.03%)</title><rect x="99.8188%" y="693" width="0.0302%" height="15" fill="rgb(241,119,20)" fg:x="3305" fg:w="1"/><text x="100.0688%" y="703.50"></text></g><g><title>all (3,311 samples, 100%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(207,102,14)" fg:x="0" fg:w="3311"/><text x="0.2500%" y="767.50"></text></g><g><title>tftp (3,307 samples, 99.88%)</title><rect x="0.1208%" y="741" width="99.8792%" height="15" fill="rgb(248,201,50)" fg:x="4" fg:w="3307"/><text x="0.3708%" y="751.50">tftp</text></g><g><title>entry_SYSCALL_64_after_hwframe (31 samples, 0.94%)</title><rect x="99.0637%" y="725" width="0.9363%" height="15" fill="rgb(222,185,44)" fg:x="3280" fg:w="31"/><text x="99.3137%" y="735.50"></text></g><g><title>do_syscall_64 (30 samples, 0.91%)</title><rect x="99.0939%" y="709" width="0.9061%" height="15" fill="rgb(218,107,18)" fg:x="3281" fg:w="30"/><text x="99.3439%" y="719.50"></text></g><g><title>syscall_exit_to_user_mode (5 samples, 0.15%)</title><rect x="99.8490%" y="693" width="0.1510%" height="15" fill="rgb(237,177,39)" fg:x="3306" fg:w="5"/><text x="100.0990%" y="703.50"></text></g><g><title>exit_to_user_mode_prepare (5 samples, 0.15%)</title><rect x="99.8490%" y="677" width="0.1510%" height="15" fill="rgb(246,69,6)" fg:x="3306" fg:w="5"/><text x="100.0990%" y="687.50"></text></g><g><title>fpregs_assert_state_consistent (1 samples, 0.03%)</title><rect x="99.9698%" y="661" width="0.0302%" height="15" fill="rgb(234,208,37)" fg:x="3310" fg:w="1"/><text x="100.2198%" y="671.50"></text></g></svg></svg>