<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="518" onload="init(evt)" viewBox="0 0 1200 518" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="518" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="501.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="501.00"> </text><svg id="frames" x="10" width="1180" total_samples="3229"><g><title>epoll_ctl (1 samples, 0.03%)</title><rect x="0.0000%" y="421" width="0.0310%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.0000%" y="405" width="0.0310%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="415.50"></text></g><g><title>[[stack]] (2 samples, 0.06%)</title><rect x="0.0000%" y="437" width="0.0619%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="2"/><text x="0.2500%" y="447.50"></text></g><g><title>recvfrom (1 samples, 0.03%)</title><rect x="0.0310%" y="421" width="0.0310%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="1"/><text x="0.2810%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.0310%" y="405" width="0.0310%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="1"/><text x="0.2810%" y="415.50"></text></g><g><title>[ld-linux-x86-64.so.2] (8 samples, 0.25%)</title><rect x="0.0619%" y="437" width="0.2478%" height="15" fill="rgb(232,128,0)" fg:x="2" fg:w="8"/><text x="0.3119%" y="447.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3 samples, 0.09%)</title><rect x="0.2168%" y="421" width="0.0929%" height="15" fill="rgb(207,160,47)" fg:x="7" fg:w="3"/><text x="0.4668%" y="431.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.06%)</title><rect x="0.2478%" y="405" width="0.0619%" height="15" fill="rgb(228,23,34)" fg:x="8" fg:w="2"/><text x="0.4978%" y="415.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.06%)</title><rect x="0.2478%" y="389" width="0.0619%" height="15" fill="rgb(218,30,26)" fg:x="8" fg:w="2"/><text x="0.4978%" y="399.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.06%)</title><rect x="0.2478%" y="373" width="0.0619%" height="15" fill="rgb(220,122,19)" fg:x="8" fg:w="2"/><text x="0.4978%" y="383.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.03%)</title><rect x="0.2787%" y="357" width="0.0310%" height="15" fill="rgb(250,228,42)" fg:x="9" fg:w="1"/><text x="0.5287%" y="367.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.03%)</title><rect x="0.2787%" y="341" width="0.0310%" height="15" fill="rgb(240,193,28)" fg:x="9" fg:w="1"/><text x="0.5287%" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::expect (1 samples, 0.03%)</title><rect x="0.3097%" y="357" width="0.0310%" height="15" fill="rgb(216,20,37)" fg:x="10" fg:w="1"/><text x="0.5597%" y="367.50"></text></g><g><title>&lt;tftp::packet::AckPacket as tftp::packet::ByteConverter&gt;::to_bytes (2 samples, 0.06%)</title><rect x="0.3097%" y="405" width="0.0619%" height="15" fill="rgb(206,188,39)" fg:x="10" fg:w="2"/><text x="0.5597%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.06%)</title><rect x="0.3097%" y="389" width="0.0619%" height="15" fill="rgb(217,207,13)" fg:x="10" fg:w="2"/><text x="0.5597%" y="399.50"></text></g><g><title>&lt;heapless::vec::Vec&lt;T,_&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.06%)</title><rect x="0.3097%" y="373" width="0.0619%" height="15" fill="rgb(231,73,38)" fg:x="10" fg:w="2"/><text x="0.5597%" y="383.50"></text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::push (1 samples, 0.03%)</title><rect x="0.3407%" y="357" width="0.0310%" height="15" fill="rgb(225,20,46)" fg:x="11" fg:w="1"/><text x="0.5907%" y="367.50"></text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::push_unchecked (1 samples, 0.03%)</title><rect x="0.3407%" y="341" width="0.0310%" height="15" fill="rgb(210,31,41)" fg:x="11" fg:w="1"/><text x="0.5907%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (1 samples, 0.03%)</title><rect x="0.3407%" y="325" width="0.0310%" height="15" fill="rgb(221,200,47)" fg:x="11" fg:w="1"/><text x="0.5907%" y="335.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.03%)</title><rect x="0.3407%" y="309" width="0.0310%" height="15" fill="rgb(226,26,5)" fg:x="11" fg:w="1"/><text x="0.5907%" y="319.50"></text></g><g><title>&lt;tftp::packet::OptionalAck as tftp::packet::ByteConverter&gt;::to_bytes (1 samples, 0.03%)</title><rect x="0.3716%" y="405" width="0.0310%" height="15" fill="rgb(249,33,26)" fg:x="12" fg:w="1"/><text x="0.6216%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.03%)</title><rect x="0.3716%" y="389" width="0.0310%" height="15" fill="rgb(235,183,28)" fg:x="12" fg:w="1"/><text x="0.6216%" y="399.50"></text></g><g><title>&lt;tftp::packet::OptionalAck as tftp::packet::ByteConverter&gt;::to_bytes::{{closure}} (1 samples, 0.03%)</title><rect x="0.3716%" y="373" width="0.0310%" height="15" fill="rgb(221,5,38)" fg:x="12" fg:w="1"/><text x="0.6216%" y="383.50"></text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::extend (1 samples, 0.03%)</title><rect x="0.3716%" y="357" width="0.0310%" height="15" fill="rgb(247,18,42)" fg:x="12" fg:w="1"/><text x="0.6216%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="0.3716%" y="341" width="0.0310%" height="15" fill="rgb(241,131,45)" fg:x="12" fg:w="1"/><text x="0.6216%" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (1 samples, 0.03%)</title><rect x="0.3716%" y="325" width="0.0310%" height="15" fill="rgb(249,31,29)" fg:x="12" fg:w="1"/><text x="0.6216%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (1 samples, 0.03%)</title><rect x="0.3716%" y="309" width="0.0310%" height="15" fill="rgb(225,111,53)" fg:x="12" fg:w="1"/><text x="0.6216%" y="319.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="0.3716%" y="293" width="0.0310%" height="15" fill="rgb(238,160,17)" fg:x="12" fg:w="1"/><text x="0.6216%" y="303.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.03%)</title><rect x="0.3716%" y="277" width="0.0310%" height="15" fill="rgb(214,148,48)" fg:x="12" fg:w="1"/><text x="0.6216%" y="287.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (1 samples, 0.03%)</title><rect x="0.3716%" y="261" width="0.0310%" height="15" fill="rgb(232,36,49)" fg:x="12" fg:w="1"/><text x="0.6216%" y="271.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_read (1 samples, 0.03%)</title><rect x="0.3716%" y="245" width="0.0310%" height="15" fill="rgb(209,103,24)" fg:x="12" fg:w="1"/><text x="0.6216%" y="255.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (1 samples, 0.03%)</title><rect x="0.3716%" y="229" width="0.0310%" height="15" fill="rgb(229,88,8)" fg:x="12" fg:w="1"/><text x="0.6216%" y="239.50"></text></g><g><title>core::ptr::read (1 samples, 0.03%)</title><rect x="0.3716%" y="213" width="0.0310%" height="15" fill="rgb(213,181,19)" fg:x="12" fg:w="1"/><text x="0.6216%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::chain (1 samples, 0.03%)</title><rect x="0.4026%" y="405" width="0.0310%" height="15" fill="rgb(254,191,54)" fg:x="13" fg:w="1"/><text x="0.6526%" y="415.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="0.4026%" y="389" width="0.0310%" height="15" fill="rgb(241,83,37)" fg:x="13" fg:w="1"/><text x="0.6526%" y="399.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.03%)</title><rect x="0.4336%" y="373" width="0.0310%" height="15" fill="rgb(233,36,39)" fg:x="14" fg:w="1"/><text x="0.6836%" y="383.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="0.4336%" y="357" width="0.0310%" height="15" fill="rgb(226,3,54)" fg:x="14" fg:w="1"/><text x="0.6836%" y="367.50"></text></g><g><title>&lt;tftp::packet::Packet as tftp::packet::ByteConverter&gt;::to_bytes (6 samples, 0.19%)</title><rect x="0.3097%" y="421" width="0.1858%" height="15" fill="rgb(245,192,40)" fg:x="10" fg:w="6"/><text x="0.5597%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.06%)</title><rect x="0.4336%" y="405" width="0.0619%" height="15" fill="rgb(238,167,29)" fg:x="14" fg:w="2"/><text x="0.6836%" y="415.50"></text></g><g><title>&lt;heapless::vec::Vec&lt;T,_&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.06%)</title><rect x="0.4336%" y="389" width="0.0619%" height="15" fill="rgb(232,182,51)" fg:x="14" fg:w="2"/><text x="0.6836%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="0.4645%" y="373" width="0.0310%" height="15" fill="rgb(231,60,39)" fg:x="15" fg:w="1"/><text x="0.7145%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (1 samples, 0.03%)</title><rect x="0.4645%" y="357" width="0.0310%" height="15" fill="rgb(208,69,12)" fg:x="15" fg:w="1"/><text x="0.7145%" y="367.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::new_const (1 samples, 0.03%)</title><rect x="0.4955%" y="421" width="0.0310%" height="15" fill="rgb(235,93,37)" fg:x="16" fg:w="1"/><text x="0.7455%" y="431.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="0.4955%" y="405" width="0.0310%" height="15" fill="rgb(213,116,39)" fg:x="16" fg:w="1"/><text x="0.7455%" y="415.50"></text></g><g><title>clap::builder::command::Command::_do_parse (1 samples, 0.03%)</title><rect x="0.5265%" y="421" width="0.0310%" height="15" fill="rgb(222,207,29)" fg:x="17" fg:w="1"/><text x="0.7765%" y="431.50"></text></g><g><title>clap::parser::parser::Parser::get_matches_with (1 samples, 0.03%)</title><rect x="0.5265%" y="405" width="0.0310%" height="15" fill="rgb(206,96,30)" fg:x="17" fg:w="1"/><text x="0.7765%" y="415.50"></text></g><g><title>clap::parser::parser::Parser::parse_subcommand (1 samples, 0.03%)</title><rect x="0.5265%" y="389" width="0.0310%" height="15" fill="rgb(218,138,4)" fg:x="17" fg:w="1"/><text x="0.7765%" y="399.50"></text></g><g><title>clap::parser::parser::Parser::get_matches_with (1 samples, 0.03%)</title><rect x="0.5265%" y="373" width="0.0310%" height="15" fill="rgb(250,191,14)" fg:x="17" fg:w="1"/><text x="0.7765%" y="383.50"></text></g><g><title>clap::parser::validator::Validator::validate (1 samples, 0.03%)</title><rect x="0.5265%" y="357" width="0.0310%" height="15" fill="rgb(239,60,40)" fg:x="17" fg:w="1"/><text x="0.7765%" y="367.50"></text></g><g><title>clap::parser::validator::Validator::validate_required (1 samples, 0.03%)</title><rect x="0.5265%" y="341" width="0.0310%" height="15" fill="rgb(206,27,48)" fg:x="17" fg:w="1"/><text x="0.7765%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="0.5265%" y="325" width="0.0310%" height="15" fill="rgb(225,35,8)" fg:x="17" fg:w="1"/><text x="0.7765%" y="335.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (1 samples, 0.03%)</title><rect x="0.5265%" y="309" width="0.0310%" height="15" fill="rgb(250,213,24)" fg:x="17" fg:w="1"/><text x="0.7765%" y="319.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.03%)</title><rect x="0.5265%" y="293" width="0.0310%" height="15" fill="rgb(247,123,22)" fg:x="17" fg:w="1"/><text x="0.7765%" y="303.50"></text></g><g><title>clap::parser::validator::Validator::validate_required::{{closure}} (1 samples, 0.03%)</title><rect x="0.5265%" y="277" width="0.0310%" height="15" fill="rgb(231,138,38)" fg:x="17" fg:w="1"/><text x="0.7765%" y="287.50"></text></g><g><title>clap::parser::arg_matcher::ArgMatcher::check_explicit (1 samples, 0.03%)</title><rect x="0.5265%" y="261" width="0.0310%" height="15" fill="rgb(231,145,46)" fg:x="17" fg:w="1"/><text x="0.7765%" y="271.50"></text></g><g><title>clap::parser::arg_matcher::ArgMatcher::get (1 samples, 0.03%)</title><rect x="0.5265%" y="245" width="0.0310%" height="15" fill="rgb(251,118,11)" fg:x="17" fg:w="1"/><text x="0.7765%" y="255.50"></text></g><g><title>clap::util::flat_map::FlatMap&lt;K,V&gt;::get (1 samples, 0.03%)</title><rect x="0.5265%" y="229" width="0.0310%" height="15" fill="rgb(217,147,25)" fg:x="17" fg:w="1"/><text x="0.7765%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="0.5265%" y="213" width="0.0310%" height="15" fill="rgb(247,81,37)" fg:x="17" fg:w="1"/><text x="0.7765%" y="223.50"></text></g><g><title>clap::derive::Parser::parse (1 samples, 0.03%)</title><rect x="0.5574%" y="421" width="0.0310%" height="15" fill="rgb(209,12,38)" fg:x="18" fg:w="1"/><text x="0.8074%" y="431.50"></text></g><g><title>clap::builder::command::Command::get_matches (1 samples, 0.03%)</title><rect x="0.5574%" y="405" width="0.0310%" height="15" fill="rgb(227,1,9)" fg:x="18" fg:w="1"/><text x="0.8074%" y="415.50"></text></g><g><title>clap::builder::command::Command::get_matches_from (1 samples, 0.03%)</title><rect x="0.5574%" y="389" width="0.0310%" height="15" fill="rgb(248,47,43)" fg:x="18" fg:w="1"/><text x="0.8074%" y="399.50"></text></g><g><title>clap::builder::command::Command::try_get_matches_from_mut (1 samples, 0.03%)</title><rect x="0.5574%" y="373" width="0.0310%" height="15" fill="rgb(221,10,30)" fg:x="18" fg:w="1"/><text x="0.8074%" y="383.50"></text></g><g><title>clap::builder::command::Command::_do_parse (1 samples, 0.03%)</title><rect x="0.5574%" y="357" width="0.0310%" height="15" fill="rgb(210,229,1)" fg:x="18" fg:w="1"/><text x="0.8074%" y="367.50"></text></g><g><title>clap::builder::command::Command::_build_self (1 samples, 0.03%)</title><rect x="0.5574%" y="341" width="0.0310%" height="15" fill="rgb(222,148,37)" fg:x="18" fg:w="1"/><text x="0.8074%" y="351.50"></text></g><g><title>clap::builder::debug_asserts::assert_app (1 samples, 0.03%)</title><rect x="0.5574%" y="325" width="0.0310%" height="15" fill="rgb(234,67,33)" fg:x="18" fg:w="1"/><text x="0.8074%" y="335.50"></text></g><g><title>core::str::&lt;impl str&gt;::starts_with (1 samples, 0.03%)</title><rect x="0.5574%" y="309" width="0.0310%" height="15" fill="rgb(247,98,35)" fg:x="18" fg:w="1"/><text x="0.8074%" y="319.50"></text></g><g><title>&lt;char as core::str::pattern::Pattern&gt;::is_prefix_of (1 samples, 0.03%)</title><rect x="0.5574%" y="293" width="0.0310%" height="15" fill="rgb(247,138,52)" fg:x="18" fg:w="1"/><text x="0.8074%" y="303.50"></text></g><g><title>tftp::server::connection::ConnectionBuilder::with_request (1 samples, 0.03%)</title><rect x="0.5884%" y="421" width="0.0310%" height="15" fill="rgb(213,79,30)" fg:x="19" fg:w="1"/><text x="0.8384%" y="431.50"></text></g><g><title>tftp::server::extensions::create_options (1 samples, 0.03%)</title><rect x="0.5884%" y="405" width="0.0310%" height="15" fill="rgb(246,177,23)" fg:x="19" fg:w="1"/><text x="0.8384%" y="415.50"></text></g><g><title>tftp::key_management::create_finalized_keys (1 samples, 0.03%)</title><rect x="0.5884%" y="389" width="0.0310%" height="15" fill="rgb(230,62,27)" fg:x="19" fg:w="1"/><text x="0.8384%" y="399.50"></text></g><g><title>tftp::key_management::create_initial_keys (1 samples, 0.03%)</title><rect x="0.5884%" y="373" width="0.0310%" height="15" fill="rgb(216,154,8)" fg:x="19" fg:w="1"/><text x="0.8384%" y="383.50"></text></g><g><title>&lt;x25519_dalek::x25519::PublicKey as core::convert::From&lt;&amp;x25519_dalek::x25519::EphemeralSecret&gt;&gt;::from (1 samples, 0.03%)</title><rect x="0.5884%" y="357" width="0.0310%" height="15" fill="rgb(244,35,45)" fg:x="19" fg:w="1"/><text x="0.8384%" y="367.50"></text></g><g><title>&lt;&amp;curve25519_dalek::edwards::EdwardsBasepointTable as core::ops::arith::Mul&lt;&amp;curve25519_dalek::scalar::Scalar&gt;&gt;::mul (1 samples, 0.03%)</title><rect x="0.5884%" y="341" width="0.0310%" height="15" fill="rgb(251,115,12)" fg:x="19" fg:w="1"/><text x="0.8384%" y="351.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsBasepointTable::basepoint_mul (1 samples, 0.03%)</title><rect x="0.5884%" y="325" width="0.0310%" height="15" fill="rgb(240,54,50)" fg:x="19" fg:w="1"/><text x="0.8384%" y="335.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::mul_by_pow_2 (1 samples, 0.03%)</title><rect x="0.5884%" y="309" width="0.0310%" height="15" fill="rgb(233,84,52)" fg:x="19" fg:w="1"/><text x="0.8384%" y="319.50"></text></g><g><title>curve25519_dalek::backend::serial::curve_models::ProjectivePoint::double (1 samples, 0.03%)</title><rect x="0.5884%" y="293" width="0.0310%" height="15" fill="rgb(207,117,47)" fg:x="19" fg:w="1"/><text x="0.8384%" y="303.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::square (1 samples, 0.03%)</title><rect x="0.5884%" y="277" width="0.0310%" height="15" fill="rgb(249,43,39)" fg:x="19" fg:w="1"/><text x="0.8384%" y="287.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (1 samples, 0.03%)</title><rect x="0.5884%" y="261" width="0.0310%" height="15" fill="rgb(209,38,44)" fg:x="19" fg:w="1"/><text x="0.8384%" y="271.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.03%)</title><rect x="0.8052%" y="405" width="0.0310%" height="15" fill="rgb(236,212,23)" fg:x="26" fg:w="1"/><text x="1.0552%" y="415.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::convert::From&lt;T&gt;&gt;::from (1 samples, 0.03%)</title><rect x="0.8052%" y="389" width="0.0310%" height="15" fill="rgb(242,79,21)" fg:x="26" fg:w="1"/><text x="1.0552%" y="399.50"></text></g><g><title>&lt;log::Level as core::cmp::PartialOrd&lt;log::LevelFilter&gt;&gt;::le (2 samples, 0.06%)</title><rect x="0.8362%" y="405" width="0.0619%" height="15" fill="rgb(211,96,35)" fg:x="27" fg:w="2"/><text x="1.0862%" y="415.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.03%)</title><rect x="0.8981%" y="373" width="0.0310%" height="15" fill="rgb(253,215,40)" fg:x="29" fg:w="1"/><text x="1.1481%" y="383.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.03%)</title><rect x="0.9600%" y="357" width="0.0310%" height="15" fill="rgb(211,81,21)" fg:x="31" fg:w="1"/><text x="1.2100%" y="367.50"></text></g><g><title>&lt;tftp::packet::DataPacket as tftp::packet::ByteConverter&gt;::from_bytes (5 samples, 0.15%)</title><rect x="0.8981%" y="389" width="0.1548%" height="15" fill="rgb(208,190,38)" fg:x="29" fg:w="5"/><text x="1.1481%" y="399.50"></text></g><g><title>tftp::packet::try_from (4 samples, 0.12%)</title><rect x="0.9291%" y="373" width="0.1239%" height="15" fill="rgb(235,213,38)" fg:x="30" fg:w="4"/><text x="1.1791%" y="383.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (2 samples, 0.06%)</title><rect x="0.9910%" y="357" width="0.0619%" height="15" fill="rgb(237,122,38)" fg:x="32" fg:w="2"/><text x="1.2410%" y="367.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.03%)</title><rect x="1.0220%" y="341" width="0.0310%" height="15" fill="rgb(244,218,35)" fg:x="33" fg:w="1"/><text x="1.2720%" y="351.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.03%)</title><rect x="1.0220%" y="325" width="0.0310%" height="15" fill="rgb(240,68,47)" fg:x="33" fg:w="1"/><text x="1.2720%" y="335.50"></text></g><g><title>core::mem::size_of_val (1 samples, 0.03%)</title><rect x="1.0530%" y="389" width="0.0310%" height="15" fill="rgb(210,16,53)" fg:x="34" fg:w="1"/><text x="1.3030%" y="399.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.03%)</title><rect x="1.1149%" y="357" width="0.0310%" height="15" fill="rgb(235,124,12)" fg:x="36" fg:w="1"/><text x="1.3649%" y="367.50"></text></g><g><title>core::num::&lt;impl u16&gt;::from_be_bytes (1 samples, 0.03%)</title><rect x="1.1459%" y="357" width="0.0310%" height="15" fill="rgb(224,169,11)" fg:x="37" fg:w="1"/><text x="1.3959%" y="367.50"></text></g><g><title>core::num::&lt;impl u16&gt;::from_ne_bytes (1 samples, 0.03%)</title><rect x="1.1459%" y="341" width="0.0310%" height="15" fill="rgb(250,166,2)" fg:x="37" fg:w="1"/><text x="1.3959%" y="351.50"></text></g><g><title>&lt;tftp::packet::Packet as tftp::packet::ByteConverter&gt;::from_bytes (10 samples, 0.31%)</title><rect x="0.8981%" y="405" width="0.3097%" height="15" fill="rgb(242,216,29)" fg:x="29" fg:w="10"/><text x="1.1481%" y="415.50"></text></g><g><title>tftp::packet::PacketType::from_bytes (4 samples, 0.12%)</title><rect x="1.0839%" y="389" width="0.1239%" height="15" fill="rgb(230,116,27)" fg:x="35" fg:w="4"/><text x="1.3339%" y="399.50"></text></g><g><title>tftp::packet::try_from (4 samples, 0.12%)</title><rect x="1.0839%" y="373" width="0.1239%" height="15" fill="rgb(228,99,48)" fg:x="35" fg:w="4"/><text x="1.3339%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (1 samples, 0.03%)</title><rect x="1.1768%" y="357" width="0.0310%" height="15" fill="rgb(253,11,6)" fg:x="38" fg:w="1"/><text x="1.4268%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;polling::Event&gt;&gt; (3 samples, 0.09%)</title><rect x="1.2388%" y="389" width="0.0929%" height="15" fill="rgb(247,143,39)" fg:x="40" fg:w="3"/><text x="1.4888%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;polling::Event&gt;&gt; (3 samples, 0.09%)</title><rect x="1.2388%" y="373" width="0.0929%" height="15" fill="rgb(236,97,10)" fg:x="40" fg:w="3"/><text x="1.4888%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.06%)</title><rect x="1.2697%" y="357" width="0.0619%" height="15" fill="rgb(233,208,19)" fg:x="41" fg:w="2"/><text x="1.5197%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.03%)</title><rect x="1.3007%" y="341" width="0.0310%" height="15" fill="rgb(216,164,2)" fg:x="42" fg:w="1"/><text x="1.5507%" y="351.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (2 samples, 0.06%)</title><rect x="1.3317%" y="389" width="0.0619%" height="15" fill="rgb(220,129,5)" fg:x="43" fg:w="2"/><text x="1.5817%" y="399.50"></text></g><g><title>&lt;tftp::socket::StdSocket as tftp::socket::Socket&gt;::recv_from::{{closure}} (2 samples, 0.06%)</title><rect x="1.3317%" y="373" width="0.0619%" height="15" fill="rgb(242,17,10)" fg:x="43" fg:w="2"/><text x="1.5817%" y="383.50"></text></g><g><title>tftp::socket::std_to_socket_addr (2 samples, 0.06%)</title><rect x="1.3317%" y="357" width="0.0619%" height="15" fill="rgb(242,107,0)" fg:x="43" fg:w="2"/><text x="1.5817%" y="367.50"></text></g><g><title>std::net::socket_addr::SocketAddrV4::ip (1 samples, 0.03%)</title><rect x="1.3627%" y="341" width="0.0310%" height="15" fill="rgb(251,28,31)" fg:x="44" fg:w="1"/><text x="1.6127%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::error::Error&gt; (2 samples, 0.06%)</title><rect x="1.5175%" y="341" width="0.0619%" height="15" fill="rgb(233,223,10)" fg:x="49" fg:w="2"/><text x="1.7675%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::error::repr_bitpacked::Repr&gt; (2 samples, 0.06%)</title><rect x="1.5175%" y="325" width="0.0619%" height="15" fill="rgb(215,21,27)" fg:x="49" fg:w="2"/><text x="1.7675%" y="335.50"></text></g><g><title>&lt;std::io::error::repr_bitpacked::Repr as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="1.5485%" y="309" width="0.0310%" height="15" fill="rgb(232,23,21)" fg:x="50" fg:w="1"/><text x="1.7985%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::error::ErrorData&lt;alloc::boxed::Box&lt;std::io::error::Custom&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="1.5485%" y="293" width="0.0310%" height="15" fill="rgb(244,5,23)" fg:x="50" fg:w="1"/><text x="1.7985%" y="303.50"></text></g><g><title>std::io::error::repr_bitpacked::Repr::data (1 samples, 0.03%)</title><rect x="1.5794%" y="325" width="0.0310%" height="15" fill="rgb(226,81,46)" fg:x="51" fg:w="1"/><text x="1.8294%" y="335.50"></text></g><g><title>std::io::error::repr_bitpacked::decode_repr (1 samples, 0.03%)</title><rect x="1.5794%" y="309" width="0.0310%" height="15" fill="rgb(247,70,30)" fg:x="51" fg:w="1"/><text x="1.8294%" y="319.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (8 samples, 0.25%)</title><rect x="1.3936%" y="389" width="0.2478%" height="15" fill="rgb(212,68,19)" fg:x="45" fg:w="8"/><text x="1.6436%" y="399.50"></text></g><g><title>core::ops::function::FnOnce::call_once (5 samples, 0.15%)</title><rect x="1.4865%" y="373" width="0.1548%" height="15" fill="rgb(240,187,13)" fg:x="48" fg:w="5"/><text x="1.7365%" y="383.50"></text></g><g><title>tftp::io::from_io_err (4 samples, 0.12%)</title><rect x="1.5175%" y="357" width="0.1239%" height="15" fill="rgb(223,113,26)" fg:x="49" fg:w="4"/><text x="1.7675%" y="367.50"></text></g><g><title>std::io::error::Error::kind (2 samples, 0.06%)</title><rect x="1.5794%" y="341" width="0.0619%" height="15" fill="rgb(206,192,2)" fg:x="51" fg:w="2"/><text x="1.8294%" y="351.50"></text></g><g><title>std::sys::unix::decode_error_kind (1 samples, 0.03%)</title><rect x="1.6104%" y="325" width="0.0310%" height="15" fill="rgb(241,108,4)" fg:x="52" fg:w="1"/><text x="1.8604%" y="335.50"></text></g><g><title>polling::Event::readable (1 samples, 0.03%)</title><rect x="1.6414%" y="389" width="0.0310%" height="15" fill="rgb(247,173,49)" fg:x="53" fg:w="1"/><text x="1.8914%" y="399.50"></text></g><g><title>&lt;&amp;T as polling::Source&gt;::raw (1 samples, 0.03%)</title><rect x="1.6723%" y="373" width="0.0310%" height="15" fill="rgb(224,114,35)" fg:x="54" fg:w="1"/><text x="1.9223%" y="383.50"></text></g><g><title>std::os::fd::net::&lt;impl std::os::fd::raw::AsRawFd for std::net::udp::UdpSocket&gt;::as_raw_fd (1 samples, 0.03%)</title><rect x="1.6723%" y="357" width="0.0310%" height="15" fill="rgb(245,159,27)" fg:x="54" fg:w="1"/><text x="1.9223%" y="367.50"></text></g><g><title>&lt;std::sys::unix::fs::File as std::sys_common::AsInner&lt;std::sys::unix::fd::FileDesc&gt;&gt;::as_inner (1 samples, 0.03%)</title><rect x="1.6723%" y="341" width="0.0310%" height="15" fill="rgb(245,172,44)" fg:x="54" fg:w="1"/><text x="1.9223%" y="351.50"></text></g><g><title>log::max_level (1 samples, 0.03%)</title><rect x="1.7653%" y="357" width="0.0310%" height="15" fill="rgb(236,23,11)" fg:x="57" fg:w="1"/><text x="2.0153%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.03%)</title><rect x="1.7653%" y="341" width="0.0310%" height="15" fill="rgb(205,117,38)" fg:x="57" fg:w="1"/><text x="2.0153%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.03%)</title><rect x="1.7653%" y="325" width="0.0310%" height="15" fill="rgb(237,72,25)" fg:x="57" fg:w="1"/><text x="2.0153%" y="335.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.03%)</title><rect x="1.7962%" y="341" width="0.0310%" height="15" fill="rgb(244,70,9)" fg:x="58" fg:w="1"/><text x="2.0462%" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (1 samples, 0.03%)</title><rect x="1.8272%" y="341" width="0.0310%" height="15" fill="rgb(217,125,39)" fg:x="59" fg:w="1"/><text x="2.0772%" y="351.50"></text></g><g><title>polling::Poller::modify (7 samples, 0.22%)</title><rect x="1.6723%" y="389" width="0.2168%" height="15" fill="rgb(235,36,10)" fg:x="54" fg:w="7"/><text x="1.9223%" y="399.50"></text></g><g><title>polling::epoll::Poller::modify (6 samples, 0.19%)</title><rect x="1.7033%" y="373" width="0.1858%" height="15" fill="rgb(251,123,47)" fg:x="55" fg:w="6"/><text x="1.9533%" y="383.50"></text></g><g><title>polling::epoll::Poller::ctl (3 samples, 0.09%)</title><rect x="1.7962%" y="357" width="0.0929%" height="15" fill="rgb(221,13,13)" fg:x="58" fg:w="3"/><text x="2.0462%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.03%)</title><rect x="1.8582%" y="341" width="0.0310%" height="15" fill="rgb(238,131,9)" fg:x="60" fg:w="1"/><text x="2.1082%" y="351.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.03%)</title><rect x="1.9201%" y="357" width="0.0310%" height="15" fill="rgb(211,50,8)" fg:x="62" fg:w="1"/><text x="2.1701%" y="367.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="2.1059%" y="261" width="0.0310%" height="15" fill="rgb(245,182,24)" fg:x="68" fg:w="1"/><text x="2.3559%" y="271.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.03%)</title><rect x="2.1059%" y="245" width="0.0310%" height="15" fill="rgb(242,14,37)" fg:x="68" fg:w="1"/><text x="2.3559%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.15%)</title><rect x="2.0130%" y="325" width="0.1548%" height="15" fill="rgb(246,228,12)" fg:x="65" fg:w="5"/><text x="2.2630%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (5 samples, 0.15%)</title><rect x="2.0130%" y="309" width="0.1548%" height="15" fill="rgb(213,55,15)" fg:x="65" fg:w="5"/><text x="2.2630%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.12%)</title><rect x="2.0440%" y="293" width="0.1239%" height="15" fill="rgb(209,9,3)" fg:x="66" fg:w="4"/><text x="2.2940%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.09%)</title><rect x="2.0749%" y="277" width="0.0929%" height="15" fill="rgb(230,59,30)" fg:x="67" fg:w="3"/><text x="2.3249%" y="287.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (1 samples, 0.03%)</title><rect x="2.1369%" y="261" width="0.0310%" height="15" fill="rgb(209,121,21)" fg:x="69" fg:w="1"/><text x="2.3869%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (4 samples, 0.12%)</title><rect x="2.1679%" y="325" width="0.1239%" height="15" fill="rgb(220,109,13)" fg:x="70" fg:w="4"/><text x="2.4179%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (3 samples, 0.09%)</title><rect x="2.1988%" y="309" width="0.0929%" height="15" fill="rgb(232,18,1)" fg:x="71" fg:w="3"/><text x="2.4488%" y="319.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (3 samples, 0.09%)</title><rect x="2.1988%" y="293" width="0.0929%" height="15" fill="rgb(215,41,42)" fg:x="71" fg:w="3"/><text x="2.4488%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (1 samples, 0.03%)</title><rect x="2.2608%" y="277" width="0.0310%" height="15" fill="rgb(224,123,36)" fg:x="73" fg:w="1"/><text x="2.5108%" y="287.50"></text></g><g><title>__rdl_alloc (1 samples, 0.03%)</title><rect x="2.4156%" y="197" width="0.0310%" height="15" fill="rgb(240,125,3)" fg:x="78" fg:w="1"/><text x="2.6656%" y="207.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.06%)</title><rect x="2.4156%" y="213" width="0.0619%" height="15" fill="rgb(205,98,50)" fg:x="78" fg:w="2"/><text x="2.6656%" y="223.50"></text></g><g><title>malloc (1 samples, 0.03%)</title><rect x="2.4466%" y="197" width="0.0310%" height="15" fill="rgb(205,185,37)" fg:x="79" fg:w="1"/><text x="2.6966%" y="207.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (1 samples, 0.03%)</title><rect x="2.4775%" y="213" width="0.0310%" height="15" fill="rgb(238,207,15)" fg:x="80" fg:w="1"/><text x="2.7275%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.15%)</title><rect x="2.3846%" y="261" width="0.1548%" height="15" fill="rgb(213,199,42)" fg:x="77" fg:w="5"/><text x="2.6346%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.15%)</title><rect x="2.3846%" y="245" width="0.1548%" height="15" fill="rgb(235,201,11)" fg:x="77" fg:w="5"/><text x="2.6346%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.15%)</title><rect x="2.3846%" y="229" width="0.1548%" height="15" fill="rgb(207,46,11)" fg:x="77" fg:w="5"/><text x="2.6346%" y="239.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (1 samples, 0.03%)</title><rect x="2.5085%" y="213" width="0.0310%" height="15" fill="rgb(241,35,35)" fg:x="81" fg:w="1"/><text x="2.7585%" y="223.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (1 samples, 0.03%)</title><rect x="2.5085%" y="197" width="0.0310%" height="15" fill="rgb(243,32,47)" fg:x="81" fg:w="1"/><text x="2.7585%" y="207.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (1 samples, 0.03%)</title><rect x="2.5085%" y="181" width="0.0310%" height="15" fill="rgb(247,202,23)" fg:x="81" fg:w="1"/><text x="2.7585%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (9 samples, 0.28%)</title><rect x="2.2917%" y="325" width="0.2787%" height="15" fill="rgb(219,102,11)" fg:x="74" fg:w="9"/><text x="2.5417%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 0.25%)</title><rect x="2.3227%" y="309" width="0.2478%" height="15" fill="rgb(243,110,44)" fg:x="75" fg:w="8"/><text x="2.5727%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (7 samples, 0.22%)</title><rect x="2.3537%" y="293" width="0.2168%" height="15" fill="rgb(222,74,54)" fg:x="76" fg:w="7"/><text x="2.6037%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.19%)</title><rect x="2.3846%" y="277" width="0.1858%" height="15" fill="rgb(216,99,12)" fg:x="77" fg:w="6"/><text x="2.6346%" y="287.50"></text></g><g><title>core::cmp::max (1 samples, 0.03%)</title><rect x="2.5395%" y="261" width="0.0310%" height="15" fill="rgb(226,22,26)" fg:x="82" fg:w="1"/><text x="2.7895%" y="271.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.03%)</title><rect x="2.5395%" y="245" width="0.0310%" height="15" fill="rgb(217,163,10)" fg:x="82" fg:w="1"/><text x="2.7895%" y="255.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.03%)</title><rect x="2.5395%" y="229" width="0.0310%" height="15" fill="rgb(213,25,53)" fg:x="82" fg:w="1"/><text x="2.7895%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (23 samples, 0.71%)</title><rect x="1.8891%" y="373" width="0.7123%" height="15" fill="rgb(252,105,26)" fg:x="61" fg:w="23"/><text x="2.1391%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (21 samples, 0.65%)</title><rect x="1.9511%" y="357" width="0.6504%" height="15" fill="rgb(220,39,43)" fg:x="63" fg:w="21"/><text x="2.2011%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (21 samples, 0.65%)</title><rect x="1.9511%" y="341" width="0.6504%" height="15" fill="rgb(229,68,48)" fg:x="63" fg:w="21"/><text x="2.2011%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.03%)</title><rect x="2.5705%" y="325" width="0.0310%" height="15" fill="rgb(252,8,32)" fg:x="83" fg:w="1"/><text x="2.8205%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::filter (2 samples, 0.06%)</title><rect x="2.6014%" y="373" width="0.0619%" height="15" fill="rgb(223,20,43)" fg:x="84" fg:w="2"/><text x="2.8514%" y="383.50"></text></g><g><title>polling::epoll::Events::iter (1 samples, 0.03%)</title><rect x="2.6634%" y="373" width="0.0310%" height="15" fill="rgb(229,81,49)" fg:x="86" fg:w="1"/><text x="2.9134%" y="383.50"></text></g><g><title>core::array::&lt;impl core::ops::index::Index&lt;I&gt; for [T: N]&gt;::index (1 samples, 0.03%)</title><rect x="2.6634%" y="357" width="0.0310%" height="15" fill="rgb(236,28,36)" fg:x="86" fg:w="1"/><text x="2.9134%" y="367.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.06%)</title><rect x="2.7872%" y="357" width="0.0619%" height="15" fill="rgb(249,185,26)" fg:x="90" fg:w="2"/><text x="3.0372%" y="367.50"></text></g><g><title>&lt;log::Level as core::cmp::PartialOrd&lt;log::LevelFilter&gt;&gt;::le (2 samples, 0.06%)</title><rect x="2.8492%" y="357" width="0.0619%" height="15" fill="rgb(249,174,33)" fg:x="92" fg:w="2"/><text x="3.0992%" y="367.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="2.9111%" y="357" width="0.0310%" height="15" fill="rgb(233,201,37)" fg:x="94" fg:w="1"/><text x="3.1611%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;isize,std::io::error::Error&gt;&gt; (1 samples, 0.03%)</title><rect x="2.9421%" y="357" width="0.0310%" height="15" fill="rgb(221,78,26)" fg:x="95" fg:w="1"/><text x="3.1921%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::error::Error&gt; (1 samples, 0.03%)</title><rect x="2.9421%" y="341" width="0.0310%" height="15" fill="rgb(250,127,30)" fg:x="95" fg:w="1"/><text x="3.1921%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::error::repr_bitpacked::Repr&gt; (1 samples, 0.03%)</title><rect x="2.9421%" y="325" width="0.0310%" height="15" fill="rgb(230,49,44)" fg:x="95" fg:w="1"/><text x="3.1921%" y="335.50"></text></g><g><title>&lt;std::io::error::repr_bitpacked::Repr as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="2.9421%" y="309" width="0.0310%" height="15" fill="rgb(229,67,23)" fg:x="95" fg:w="1"/><text x="3.1921%" y="319.50"></text></g><g><title>std::io::error::repr_bitpacked::decode_repr (1 samples, 0.03%)</title><rect x="2.9421%" y="293" width="0.0310%" height="15" fill="rgb(249,83,47)" fg:x="95" fg:w="1"/><text x="3.1921%" y="303.50"></text></g><g><title>core::time::Duration::from_secs (1 samples, 0.03%)</title><rect x="2.9731%" y="357" width="0.0310%" height="15" fill="rgb(215,43,3)" fg:x="96" fg:w="1"/><text x="3.2231%" y="367.50"></text></g><g><title>core::time::Duration::new (1 samples, 0.03%)</title><rect x="2.9731%" y="341" width="0.0310%" height="15" fill="rgb(238,154,13)" fg:x="96" fg:w="1"/><text x="3.2231%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::checked_add (1 samples, 0.03%)</title><rect x="2.9731%" y="325" width="0.0310%" height="15" fill="rgb(219,56,2)" fg:x="96" fg:w="1"/><text x="3.2231%" y="335.50"></text></g><g><title>epoll_wait (27 samples, 0.84%)</title><rect x="3.0040%" y="357" width="0.8362%" height="15" fill="rgb(233,0,4)" fg:x="97" fg:w="27"/><text x="3.2540%" y="367.50"></text></g><g><title>polling::epoll::Poller::modify (1 samples, 0.03%)</title><rect x="3.8402%" y="357" width="0.0310%" height="15" fill="rgb(235,30,7)" fg:x="124" fg:w="1"/><text x="4.0902%" y="367.50"></text></g><g><title>polling::epoll::Poller::ctl (1 samples, 0.03%)</title><rect x="3.8402%" y="341" width="0.0310%" height="15" fill="rgb(250,79,13)" fg:x="124" fg:w="1"/><text x="4.0902%" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (1 samples, 0.03%)</title><rect x="3.8402%" y="325" width="0.0310%" height="15" fill="rgb(211,146,34)" fg:x="124" fg:w="1"/><text x="4.0902%" y="335.50"></text></g><g><title>polling::epoll::Poller::wait (39 samples, 1.21%)</title><rect x="2.6943%" y="373" width="1.2078%" height="15" fill="rgb(228,22,38)" fg:x="87" fg:w="39"/><text x="2.9443%" y="383.50"></text></g><g><title>read (1 samples, 0.03%)</title><rect x="3.8712%" y="357" width="0.0310%" height="15" fill="rgb(235,168,5)" fg:x="125" fg:w="1"/><text x="4.1212%" y="367.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.03%)</title><rect x="3.9021%" y="357" width="0.0310%" height="15" fill="rgb(221,155,16)" fg:x="126" fg:w="1"/><text x="4.1521%" y="367.50"></text></g><g><title>polling::Poller::wait (67 samples, 2.07%)</title><rect x="1.8891%" y="389" width="2.0749%" height="15" fill="rgb(215,215,53)" fg:x="61" fg:w="67"/><text x="2.1391%" y="399.50">p..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (2 samples, 0.06%)</title><rect x="3.9021%" y="373" width="0.0619%" height="15" fill="rgb(223,4,10)" fg:x="126" fg:w="2"/><text x="4.1521%" y="383.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::try_lock (1 samples, 0.03%)</title><rect x="3.9331%" y="357" width="0.0310%" height="15" fill="rgb(234,103,6)" fg:x="127" fg:w="1"/><text x="4.1831%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (1 samples, 0.03%)</title><rect x="3.9331%" y="341" width="0.0310%" height="15" fill="rgb(227,97,0)" fg:x="127" fg:w="1"/><text x="4.1831%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.03%)</title><rect x="3.9331%" y="325" width="0.0310%" height="15" fill="rgb(234,150,53)" fg:x="127" fg:w="1"/><text x="4.1831%" y="335.50"></text></g><g><title>recvfrom (1 samples, 0.03%)</title><rect x="3.9950%" y="325" width="0.0310%" height="15" fill="rgb(228,201,54)" fg:x="129" fg:w="1"/><text x="4.2450%" y="335.50"></text></g><g><title>&lt;tftp::socket::StdSocket as tftp::socket::Socket&gt;::recv_from (92 samples, 2.85%)</title><rect x="1.2078%" y="405" width="2.8492%" height="15" fill="rgb(222,22,37)" fg:x="39" fg:w="92"/><text x="1.4578%" y="415.50">&lt;t..</text></g><g><title>std::net::udp::UdpSocket::recv_from (3 samples, 0.09%)</title><rect x="3.9641%" y="389" width="0.0929%" height="15" fill="rgb(237,53,32)" fg:x="128" fg:w="3"/><text x="4.2141%" y="399.50"></text></g><g><title>std::sys_common::net::UdpSocket::recv_from (3 samples, 0.09%)</title><rect x="3.9641%" y="373" width="0.0929%" height="15" fill="rgb(233,25,53)" fg:x="128" fg:w="3"/><text x="4.2141%" y="383.50"></text></g><g><title>std::sys::unix::net::Socket::recv_from (3 samples, 0.09%)</title><rect x="3.9641%" y="357" width="0.0929%" height="15" fill="rgb(210,40,34)" fg:x="128" fg:w="3"/><text x="4.2141%" y="367.50"></text></g><g><title>std::sys::unix::net::Socket::recv_from_with_flags (2 samples, 0.06%)</title><rect x="3.9950%" y="341" width="0.0619%" height="15" fill="rgb(241,220,44)" fg:x="129" fg:w="2"/><text x="4.2450%" y="351.50"></text></g><g><title>std::sys::unix::cvt (1 samples, 0.03%)</title><rect x="4.0260%" y="325" width="0.0310%" height="15" fill="rgb(235,28,35)" fg:x="130" fg:w="1"/><text x="4.2760%" y="335.50"></text></g><g><title>std::io::error::Error::last_os_error (1 samples, 0.03%)</title><rect x="4.0260%" y="309" width="0.0310%" height="15" fill="rgb(210,56,17)" fg:x="130" fg:w="1"/><text x="4.2760%" y="319.50"></text></g><g><title>std::io::error::Error::from_raw_os_error (1 samples, 0.03%)</title><rect x="4.0260%" y="293" width="0.0310%" height="15" fill="rgb(224,130,29)" fg:x="130" fg:w="1"/><text x="4.2760%" y="303.50"></text></g><g><title>std::io::error::repr_bitpacked::Repr::new_os (1 samples, 0.03%)</title><rect x="4.0260%" y="277" width="0.0310%" height="15" fill="rgb(235,212,8)" fg:x="130" fg:w="1"/><text x="4.2760%" y="287.50"></text></g><g><title>core::cmp::PartialOrd::gt (1 samples, 0.03%)</title><rect x="4.0570%" y="405" width="0.0310%" height="15" fill="rgb(223,33,50)" fg:x="131" fg:w="1"/><text x="4.3070%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;(),tftp::packet::ErrorPacket&gt;&gt; (1 samples, 0.03%)</title><rect x="4.0880%" y="405" width="0.0310%" height="15" fill="rgb(219,149,13)" fg:x="132" fg:w="1"/><text x="4.3380%" y="415.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::len (1 samples, 0.03%)</title><rect x="4.1189%" y="405" width="0.0310%" height="15" fill="rgb(250,156,29)" fg:x="133" fg:w="1"/><text x="4.3689%" y="415.50"></text></g><g><title>core::time::Duration::from_secs (2 samples, 0.06%)</title><rect x="4.1499%" y="405" width="0.0619%" height="15" fill="rgb(216,193,19)" fg:x="134" fg:w="2"/><text x="4.3999%" y="415.50"></text></g><g><title>core::time::Duration::new (2 samples, 0.06%)</title><rect x="4.1499%" y="389" width="0.0619%" height="15" fill="rgb(216,135,14)" fg:x="134" fg:w="2"/><text x="4.3999%" y="399.50"></text></g><g><title>core::num::&lt;impl u64&gt;::checked_add (1 samples, 0.03%)</title><rect x="4.1809%" y="373" width="0.0310%" height="15" fill="rgb(241,47,5)" fg:x="135" fg:w="1"/><text x="4.4309%" y="383.50"></text></g><g><title>core::ops::function::FnOnce::call_once (5 samples, 0.15%)</title><rect x="4.2118%" y="373" width="0.1548%" height="15" fill="rgb(233,42,35)" fg:x="136" fg:w="5"/><text x="4.4618%" y="383.50"></text></g><g><title>tftp::instant_callback::{{closure}} (5 samples, 0.15%)</title><rect x="4.2118%" y="357" width="0.1548%" height="15" fill="rgb(231,13,6)" fg:x="136" fg:w="5"/><text x="4.4618%" y="367.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (4 samples, 0.12%)</title><rect x="4.2428%" y="341" width="0.1239%" height="15" fill="rgb(207,181,40)" fg:x="137" fg:w="4"/><text x="4.4928%" y="351.50"></text></g><g><title>clock_gettime (4 samples, 0.12%)</title><rect x="4.2428%" y="325" width="0.1239%" height="15" fill="rgb(254,173,49)" fg:x="137" fg:w="4"/><text x="4.4928%" y="335.50"></text></g><g><title>__vdso_clock_gettime (3 samples, 0.09%)</title><rect x="4.2738%" y="309" width="0.0929%" height="15" fill="rgb(221,1,38)" fg:x="138" fg:w="3"/><text x="4.5238%" y="319.50"></text></g><g><title>tftp::instant_callback (6 samples, 0.19%)</title><rect x="4.2118%" y="405" width="0.1858%" height="15" fill="rgb(206,124,46)" fg:x="136" fg:w="6"/><text x="4.4618%" y="415.50"></text></g><g><title>tftp::std_compat::time::Instant::from_time (6 samples, 0.19%)</title><rect x="4.2118%" y="389" width="0.1858%" height="15" fill="rgb(249,21,11)" fg:x="136" fg:w="6"/><text x="4.4618%" y="399.50"></text></g><g><title>core::time::Duration::from_micros (1 samples, 0.03%)</title><rect x="4.3667%" y="373" width="0.0310%" height="15" fill="rgb(222,201,40)" fg:x="141" fg:w="1"/><text x="4.6167%" y="383.50"></text></g><g><title>&lt;arrayvec::arrayvec::ArrayVec&lt;T,_&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="4.3976%" y="389" width="0.0310%" height="15" fill="rgb(235,61,29)" fg:x="142" fg:w="1"/><text x="4.6476%" y="399.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::as_slice (1 samples, 0.03%)</title><rect x="4.3976%" y="373" width="0.0310%" height="15" fill="rgb(219,207,3)" fg:x="142" fg:w="1"/><text x="4.6476%" y="383.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::as_slice (1 samples, 0.03%)</title><rect x="4.3976%" y="357" width="0.0310%" height="15" fill="rgb(222,56,46)" fg:x="142" fg:w="1"/><text x="4.6476%" y="367.50"></text></g><g><title>core::slice::raw::from_raw_parts (1 samples, 0.03%)</title><rect x="4.3976%" y="341" width="0.0310%" height="15" fill="rgb(239,76,54)" fg:x="142" fg:w="1"/><text x="4.6476%" y="351.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (1 samples, 0.03%)</title><rect x="4.4286%" y="389" width="0.0310%" height="15" fill="rgb(231,124,27)" fg:x="143" fg:w="1"/><text x="4.6786%" y="399.50"></text></g><g><title>tftp::map::Map&lt;K,V,_&gt;::entry::{{closure}} (1 samples, 0.03%)</title><rect x="4.4286%" y="373" width="0.0310%" height="15" fill="rgb(249,195,6)" fg:x="143" fg:w="1"/><text x="4.6786%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.03%)</title><rect x="4.4286%" y="357" width="0.0310%" height="15" fill="rgb(237,174,47)" fg:x="143" fg:w="1"/><text x="4.6786%" y="367.50"></text></g><g><title>&lt;tftp::std_compat::net::SocketAddr as core::cmp::PartialEq&gt;::eq (1 samples, 0.03%)</title><rect x="4.4286%" y="341" width="0.0310%" height="15" fill="rgb(206,201,31)" fg:x="143" fg:w="1"/><text x="4.6786%" y="351.50"></text></g><g><title>&lt;tftp::std_compat::net::IpVersion as core::cmp::PartialEq&gt;::eq (1 samples, 0.03%)</title><rect x="4.4286%" y="325" width="0.0310%" height="15" fill="rgb(231,57,52)" fg:x="143" fg:w="1"/><text x="4.6786%" y="335.50"></text></g><g><title>tftp::map::Map&lt;K,V,_&gt;::entry (4 samples, 0.12%)</title><rect x="4.3976%" y="405" width="0.1239%" height="15" fill="rgb(248,177,22)" fg:x="142" fg:w="4"/><text x="4.6476%" y="415.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (2 samples, 0.06%)</title><rect x="4.4596%" y="389" width="0.0619%" height="15" fill="rgb(215,211,37)" fg:x="144" fg:w="2"/><text x="4.7096%" y="399.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="4.4906%" y="373" width="0.0310%" height="15" fill="rgb(241,128,51)" fg:x="145" fg:w="1"/><text x="4.7406%" y="383.50"></text></g><g><title>&lt;arrayvec::arrayvec::ArrayVec&lt;T,_&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.03%)</title><rect x="4.5215%" y="389" width="0.0310%" height="15" fill="rgb(227,165,31)" fg:x="146" fg:w="1"/><text x="4.7715%" y="399.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::as_mut_slice (1 samples, 0.03%)</title><rect x="4.5215%" y="373" width="0.0310%" height="15" fill="rgb(228,167,24)" fg:x="146" fg:w="1"/><text x="4.7715%" y="383.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::as_mut_slice (1 samples, 0.03%)</title><rect x="4.5215%" y="357" width="0.0310%" height="15" fill="rgb(228,143,12)" fg:x="146" fg:w="1"/><text x="4.7715%" y="367.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (1 samples, 0.03%)</title><rect x="4.5525%" y="389" width="0.0310%" height="15" fill="rgb(249,149,8)" fg:x="147" fg:w="1"/><text x="4.8025%" y="399.50"></text></g><g><title>tftp::map::OccupiedEntry&lt;K,V,_&gt;::get_mut (3 samples, 0.09%)</title><rect x="4.5215%" y="405" width="0.0929%" height="15" fill="rgb(243,35,44)" fg:x="146" fg:w="3"/><text x="4.7715%" y="415.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (1 samples, 0.03%)</title><rect x="4.5835%" y="389" width="0.0310%" height="15" fill="rgb(246,89,9)" fg:x="148" fg:w="1"/><text x="4.8335%" y="399.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="4.5835%" y="373" width="0.0310%" height="15" fill="rgb(233,213,13)" fg:x="148" fg:w="1"/><text x="4.8335%" y="383.50"></text></g><g><title>tftp::packet::PacketType::from_bytes (1 samples, 0.03%)</title><rect x="4.6144%" y="405" width="0.0310%" height="15" fill="rgb(233,141,41)" fg:x="149" fg:w="1"/><text x="4.8644%" y="415.50"></text></g><g><title>tftp::packet::try_from (1 samples, 0.03%)</title><rect x="4.6144%" y="389" width="0.0310%" height="15" fill="rgb(239,167,4)" fg:x="149" fg:w="1"/><text x="4.8644%" y="399.50"></text></g><g><title>&lt;heapless::vec::Vec&lt;T,_&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="4.6454%" y="389" width="0.0310%" height="15" fill="rgb(209,217,16)" fg:x="150" fg:w="1"/><text x="4.8954%" y="399.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (5 samples, 0.15%)</title><rect x="4.8312%" y="293" width="0.1548%" height="15" fill="rgb(219,88,35)" fg:x="156" fg:w="5"/><text x="5.0812%" y="303.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (4 samples, 0.12%)</title><rect x="4.8622%" y="277" width="0.1239%" height="15" fill="rgb(220,193,23)" fg:x="157" fg:w="4"/><text x="5.1122%" y="287.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (2 samples, 0.06%)</title><rect x="4.9241%" y="261" width="0.0619%" height="15" fill="rgb(230,90,52)" fg:x="159" fg:w="2"/><text x="5.1741%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="4.9861%" y="293" width="0.0310%" height="15" fill="rgb(252,106,19)" fg:x="161" fg:w="1"/><text x="5.2361%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.03%)</title><rect x="4.9861%" y="277" width="0.0310%" height="15" fill="rgb(206,74,20)" fg:x="161" fg:w="1"/><text x="5.2361%" y="287.50"></text></g><g><title>chacha20::avx2_cpuid::init (3 samples, 0.09%)</title><rect x="5.0170%" y="293" width="0.0929%" height="15" fill="rgb(230,138,44)" fg:x="162" fg:w="3"/><text x="5.2670%" y="303.50"></text></g><g><title>chacha20::avx2_cpuid::init_get (2 samples, 0.06%)</title><rect x="5.0480%" y="277" width="0.0619%" height="15" fill="rgb(235,182,43)" fg:x="163" fg:w="2"/><text x="5.2980%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicU8::load (2 samples, 0.06%)</title><rect x="5.0480%" y="261" width="0.0619%" height="15" fill="rgb(242,16,51)" fg:x="163" fg:w="2"/><text x="5.2980%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.06%)</title><rect x="5.0480%" y="245" width="0.0619%" height="15" fill="rgb(248,9,4)" fg:x="163" fg:w="2"/><text x="5.2980%" y="255.50"></text></g><g><title>chacha20::sse2_cpuid::init (1 samples, 0.03%)</title><rect x="5.1099%" y="293" width="0.0310%" height="15" fill="rgb(210,31,22)" fg:x="165" fg:w="1"/><text x="5.3599%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (3 samples, 0.09%)</title><rect x="5.1409%" y="293" width="0.0929%" height="15" fill="rgb(239,54,39)" fg:x="166" fg:w="3"/><text x="5.3909%" y="303.50"></text></g><g><title>core::iter::adapters::zip::Zip&lt;A,B&gt;::new (2 samples, 0.06%)</title><rect x="5.1719%" y="277" width="0.0619%" height="15" fill="rgb(230,99,41)" fg:x="167" fg:w="2"/><text x="5.4219%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (1 samples, 0.03%)</title><rect x="5.2028%" y="261" width="0.0310%" height="15" fill="rgb(253,106,12)" fg:x="168" fg:w="1"/><text x="5.4528%" y="271.50"></text></g><g><title>core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size (1 samples, 0.03%)</title><rect x="5.2028%" y="245" width="0.0310%" height="15" fill="rgb(213,46,41)" fg:x="168" fg:w="1"/><text x="5.4528%" y="255.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.03%)</title><rect x="5.2028%" y="229" width="0.0310%" height="15" fill="rgb(215,133,35)" fg:x="168" fg:w="1"/><text x="5.4528%" y="239.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (1 samples, 0.03%)</title><rect x="5.2338%" y="293" width="0.0310%" height="15" fill="rgb(213,28,5)" fg:x="169" fg:w="1"/><text x="5.4838%" y="303.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::chunks_exact (1 samples, 0.03%)</title><rect x="5.2648%" y="293" width="0.0310%" height="15" fill="rgb(215,77,49)" fg:x="170" fg:w="1"/><text x="5.5148%" y="303.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (16 samples, 0.50%)</title><rect x="4.8312%" y="309" width="0.4955%" height="15" fill="rgb(248,100,22)" fg:x="156" fg:w="16"/><text x="5.0812%" y="319.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (1 samples, 0.03%)</title><rect x="5.2958%" y="293" width="0.0310%" height="15" fill="rgb(208,67,9)" fg:x="171" fg:w="1"/><text x="5.5458%" y="303.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="5.2958%" y="277" width="0.0310%" height="15" fill="rgb(219,133,21)" fg:x="171" fg:w="1"/><text x="5.5458%" y="287.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (2 samples, 0.06%)</title><rect x="5.4506%" y="293" width="0.0619%" height="15" fill="rgb(246,46,29)" fg:x="176" fg:w="2"/><text x="5.7006%" y="303.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="5.4816%" y="277" width="0.0310%" height="15" fill="rgb(246,185,52)" fg:x="177" fg:w="1"/><text x="5.7316%" y="287.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for &amp;[T: N]&gt;::try_from (1 samples, 0.03%)</title><rect x="5.5745%" y="261" width="0.0310%" height="15" fill="rgb(252,136,11)" fg:x="180" fg:w="1"/><text x="5.8245%" y="271.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (7 samples, 0.22%)</title><rect x="5.5125%" y="293" width="0.2168%" height="15" fill="rgb(219,138,53)" fg:x="178" fg:w="7"/><text x="5.7625%" y="303.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (6 samples, 0.19%)</title><rect x="5.5435%" y="277" width="0.1858%" height="15" fill="rgb(211,51,23)" fg:x="179" fg:w="6"/><text x="5.7935%" y="287.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (4 samples, 0.12%)</title><rect x="5.6055%" y="261" width="0.1239%" height="15" fill="rgb(247,221,28)" fg:x="181" fg:w="4"/><text x="5.8555%" y="271.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from::{{closure}} (2 samples, 0.06%)</title><rect x="5.6674%" y="245" width="0.0619%" height="15" fill="rgb(251,222,45)" fg:x="183" fg:w="2"/><text x="5.9174%" y="255.50"></text></g><g><title>&lt;core::slice::iter::ChunksExact&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (4 samples, 0.12%)</title><rect x="5.7603%" y="261" width="0.1239%" height="15" fill="rgb(217,162,53)" fg:x="186" fg:w="4"/><text x="6.0103%" y="271.50"></text></g><g><title>core::slice::raw::from_raw_parts (2 samples, 0.06%)</title><rect x="5.8222%" y="245" width="0.0619%" height="15" fill="rgb(229,93,14)" fg:x="188" fg:w="2"/><text x="6.0722%" y="255.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.03%)</title><rect x="5.8532%" y="229" width="0.0310%" height="15" fill="rgb(209,67,49)" fg:x="189" fg:w="1"/><text x="6.1032%" y="239.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (1 samples, 0.03%)</title><rect x="5.8532%" y="213" width="0.0310%" height="15" fill="rgb(213,87,29)" fg:x="189" fg:w="1"/><text x="6.1032%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.22%)</title><rect x="5.7293%" y="293" width="0.2168%" height="15" fill="rgb(205,151,52)" fg:x="185" fg:w="7"/><text x="5.9793%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (6 samples, 0.19%)</title><rect x="5.7603%" y="277" width="0.1858%" height="15" fill="rgb(253,215,39)" fg:x="186" fg:w="6"/><text x="6.0103%" y="287.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (2 samples, 0.06%)</title><rect x="5.8842%" y="261" width="0.0619%" height="15" fill="rgb(221,220,41)" fg:x="190" fg:w="2"/><text x="6.1342%" y="271.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.03%)</title><rect x="5.9461%" y="293" width="0.0310%" height="15" fill="rgb(218,133,21)" fg:x="192" fg:w="1"/><text x="6.1961%" y="303.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (1 samples, 0.03%)</title><rect x="5.9461%" y="277" width="0.0310%" height="15" fill="rgb(221,193,43)" fg:x="192" fg:w="1"/><text x="6.1961%" y="287.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="5.9771%" y="293" width="0.0310%" height="15" fill="rgb(240,128,52)" fg:x="193" fg:w="1"/><text x="6.2271%" y="303.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (5 samples, 0.15%)</title><rect x="7.0610%" y="277" width="0.1548%" height="15" fill="rgb(253,114,12)" fg:x="228" fg:w="5"/><text x="7.3110%" y="287.50"></text></g><g><title>chacha20::xchacha::quarter_round (42 samples, 1.30%)</title><rect x="6.0081%" y="293" width="1.3007%" height="15" fill="rgb(215,223,47)" fg:x="194" fg:w="42"/><text x="6.2581%" y="303.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (3 samples, 0.09%)</title><rect x="7.2159%" y="277" width="0.0929%" height="15" fill="rgb(248,225,23)" fg:x="233" fg:w="3"/><text x="7.4659%" y="287.50"></text></g><g><title>core::array::&lt;impl core::ops::index::Index&lt;I&gt; for [T: N]&gt;::index (2 samples, 0.06%)</title><rect x="7.3088%" y="293" width="0.0619%" height="15" fill="rgb(250,108,0)" fg:x="236" fg:w="2"/><text x="7.5588%" y="303.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 0.06%)</title><rect x="7.3088%" y="277" width="0.0619%" height="15" fill="rgb(228,208,7)" fg:x="236" fg:w="2"/><text x="7.5588%" y="287.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.06%)</title><rect x="7.3088%" y="261" width="0.0619%" height="15" fill="rgb(244,45,10)" fg:x="236" fg:w="2"/><text x="7.5588%" y="271.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.06%)</title><rect x="7.3088%" y="245" width="0.0619%" height="15" fill="rgb(207,125,25)" fg:x="236" fg:w="2"/><text x="7.5588%" y="255.50"></text></g><g><title>core::array::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T: N]&gt;::index_mut (2 samples, 0.06%)</title><rect x="7.3707%" y="293" width="0.0619%" height="15" fill="rgb(210,195,18)" fg:x="238" fg:w="2"/><text x="7.6207%" y="303.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.03%)</title><rect x="7.4017%" y="277" width="0.0310%" height="15" fill="rgb(249,80,12)" fg:x="239" fg:w="1"/><text x="7.6517%" y="287.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.03%)</title><rect x="7.4017%" y="261" width="0.0310%" height="15" fill="rgb(221,65,9)" fg:x="239" fg:w="1"/><text x="7.6517%" y="271.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.03%)</title><rect x="7.4017%" y="245" width="0.0310%" height="15" fill="rgb(235,49,36)" fg:x="239" fg:w="1"/><text x="7.6517%" y="255.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (5 samples, 0.15%)</title><rect x="7.4326%" y="293" width="0.1548%" height="15" fill="rgb(225,32,20)" fg:x="240" fg:w="5"/><text x="7.6826%" y="303.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3 samples, 0.09%)</title><rect x="7.4946%" y="277" width="0.0929%" height="15" fill="rgb(215,141,46)" fg:x="242" fg:w="3"/><text x="7.7446%" y="287.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (2 samples, 0.06%)</title><rect x="7.5255%" y="261" width="0.0619%" height="15" fill="rgb(250,160,47)" fg:x="243" fg:w="2"/><text x="7.7755%" y="271.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.03%)</title><rect x="7.6185%" y="277" width="0.0310%" height="15" fill="rgb(216,222,40)" fg:x="246" fg:w="1"/><text x="7.8685%" y="287.50"></text></g><g><title>core::cmp::min (1 samples, 0.03%)</title><rect x="7.6494%" y="245" width="0.0310%" height="15" fill="rgb(234,217,39)" fg:x="247" fg:w="1"/><text x="7.8994%" y="255.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.03%)</title><rect x="7.6494%" y="229" width="0.0310%" height="15" fill="rgb(207,178,40)" fg:x="247" fg:w="1"/><text x="7.8994%" y="239.50"></text></g><g><title>&lt;core::slice::iter::ChunksExactMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.03%)</title><rect x="7.6804%" y="229" width="0.0310%" height="15" fill="rgb(221,136,13)" fg:x="248" fg:w="1"/><text x="7.9304%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (5 samples, 0.15%)</title><rect x="7.5875%" y="293" width="0.1548%" height="15" fill="rgb(249,199,10)" fg:x="245" fg:w="5"/><text x="7.8375%" y="303.50"></text></g><g><title>core::iter::adapters::zip::Zip&lt;A,B&gt;::new (3 samples, 0.09%)</title><rect x="7.6494%" y="277" width="0.0929%" height="15" fill="rgb(249,222,13)" fg:x="247" fg:w="3"/><text x="7.8994%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (3 samples, 0.09%)</title><rect x="7.6494%" y="261" width="0.0929%" height="15" fill="rgb(244,185,38)" fg:x="247" fg:w="3"/><text x="7.8994%" y="271.50"></text></g><g><title>core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size (2 samples, 0.06%)</title><rect x="7.6804%" y="245" width="0.0619%" height="15" fill="rgb(236,202,9)" fg:x="248" fg:w="2"/><text x="7.9304%" y="255.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.03%)</title><rect x="7.7114%" y="229" width="0.0310%" height="15" fill="rgb(250,229,37)" fg:x="249" fg:w="1"/><text x="7.9614%" y="239.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_le_bytes (1 samples, 0.03%)</title><rect x="7.7423%" y="293" width="0.0310%" height="15" fill="rgb(206,174,23)" fg:x="250" fg:w="1"/><text x="7.9923%" y="303.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_ne_bytes (1 samples, 0.03%)</title><rect x="7.7423%" y="277" width="0.0310%" height="15" fill="rgb(211,33,43)" fg:x="250" fg:w="1"/><text x="7.9923%" y="287.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (3 samples, 0.09%)</title><rect x="7.7733%" y="293" width="0.0929%" height="15" fill="rgb(245,58,50)" fg:x="251" fg:w="3"/><text x="8.0233%" y="303.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.03%)</title><rect x="7.8662%" y="293" width="0.0310%" height="15" fill="rgb(244,68,36)" fg:x="254" fg:w="1"/><text x="8.1162%" y="303.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (1 samples, 0.03%)</title><rect x="7.8972%" y="293" width="0.0310%" height="15" fill="rgb(232,229,15)" fg:x="255" fg:w="1"/><text x="8.1472%" y="303.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="7.8972%" y="277" width="0.0310%" height="15" fill="rgb(254,30,23)" fg:x="255" fg:w="1"/><text x="8.1472%" y="287.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.03%)</title><rect x="7.9282%" y="293" width="0.0310%" height="15" fill="rgb(235,160,14)" fg:x="256" fg:w="1"/><text x="8.1782%" y="303.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.03%)</title><rect x="7.9282%" y="277" width="0.0310%" height="15" fill="rgb(212,155,44)" fg:x="256" fg:w="1"/><text x="8.1782%" y="287.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.03%)</title><rect x="7.9282%" y="261" width="0.0310%" height="15" fill="rgb(226,2,50)" fg:x="256" fg:w="1"/><text x="8.1782%" y="271.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.03%)</title><rect x="7.9282%" y="245" width="0.0310%" height="15" fill="rgb(234,177,6)" fg:x="256" fg:w="1"/><text x="8.1782%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::enumerate (1 samples, 0.03%)</title><rect x="7.9901%" y="261" width="0.0310%" height="15" fill="rgb(217,24,9)" fg:x="258" fg:w="1"/><text x="8.2401%" y="271.50"></text></g><g><title>core::iter::adapters::enumerate::Enumerate&lt;I&gt;::new (1 samples, 0.03%)</title><rect x="7.9901%" y="245" width="0.0310%" height="15" fill="rgb(220,13,46)" fg:x="258" fg:w="1"/><text x="8.2401%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (3 samples, 0.09%)</title><rect x="8.1140%" y="213" width="0.0929%" height="15" fill="rgb(239,221,27)" fg:x="262" fg:w="3"/><text x="8.3640%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.06%)</title><rect x="8.1449%" y="197" width="0.0619%" height="15" fill="rgb(222,198,25)" fg:x="263" fg:w="2"/><text x="8.3949%" y="207.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (1 samples, 0.03%)</title><rect x="8.1759%" y="181" width="0.0310%" height="15" fill="rgb(211,99,13)" fg:x="264" fg:w="1"/><text x="8.4259%" y="191.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (1 samples, 0.03%)</title><rect x="8.1759%" y="165" width="0.0310%" height="15" fill="rgb(232,111,31)" fg:x="264" fg:w="1"/><text x="8.4259%" y="175.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (9 samples, 0.28%)</title><rect x="8.0211%" y="261" width="0.2787%" height="15" fill="rgb(245,82,37)" fg:x="259" fg:w="9"/><text x="8.2711%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.25%)</title><rect x="8.0520%" y="245" width="0.2478%" height="15" fill="rgb(227,149,46)" fg:x="260" fg:w="8"/><text x="8.3020%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (8 samples, 0.25%)</title><rect x="8.0520%" y="229" width="0.2478%" height="15" fill="rgb(218,36,50)" fg:x="260" fg:w="8"/><text x="8.3020%" y="239.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.09%)</title><rect x="8.2069%" y="213" width="0.0929%" height="15" fill="rgb(226,80,48)" fg:x="265" fg:w="3"/><text x="8.4569%" y="223.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (1 samples, 0.03%)</title><rect x="8.2688%" y="197" width="0.0310%" height="15" fill="rgb(238,224,15)" fg:x="267" fg:w="1"/><text x="8.5188%" y="207.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (1 samples, 0.03%)</title><rect x="8.2998%" y="261" width="0.0310%" height="15" fill="rgb(241,136,10)" fg:x="268" fg:w="1"/><text x="8.5498%" y="271.50"></text></g><g><title>core::ptr::read (1 samples, 0.03%)</title><rect x="8.2998%" y="245" width="0.0310%" height="15" fill="rgb(208,32,45)" fg:x="268" fg:w="1"/><text x="8.5498%" y="255.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (1 samples, 0.03%)</title><rect x="8.2998%" y="229" width="0.0310%" height="15" fill="rgb(207,135,9)" fg:x="268" fg:w="1"/><text x="8.5498%" y="239.50"></text></g><g><title>chacha20::xchacha::hchacha (98 samples, 3.03%)</title><rect x="5.3267%" y="309" width="3.0350%" height="15" fill="rgb(206,86,44)" fg:x="172" fg:w="98"/><text x="5.5767%" y="319.50">cha..</text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (13 samples, 0.40%)</title><rect x="7.9591%" y="293" width="0.4026%" height="15" fill="rgb(245,177,15)" fg:x="257" fg:w="13"/><text x="8.2091%" y="303.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (13 samples, 0.40%)</title><rect x="7.9591%" y="277" width="0.4026%" height="15" fill="rgb(206,64,50)" fg:x="257" fg:w="13"/><text x="8.2091%" y="287.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::iter_position (1 samples, 0.03%)</title><rect x="8.3308%" y="261" width="0.0310%" height="15" fill="rgb(234,36,40)" fg:x="269" fg:w="1"/><text x="8.5808%" y="271.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.03%)</title><rect x="8.3617%" y="309" width="0.0310%" height="15" fill="rgb(213,64,8)" fg:x="270" fg:w="1"/><text x="8.6117%" y="319.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.03%)</title><rect x="8.3617%" y="293" width="0.0310%" height="15" fill="rgb(210,75,36)" fg:x="270" fg:w="1"/><text x="8.6117%" y="303.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.03%)</title><rect x="8.3617%" y="277" width="0.0310%" height="15" fill="rgb(229,88,21)" fg:x="270" fg:w="1"/><text x="8.6117%" y="287.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.03%)</title><rect x="8.3617%" y="261" width="0.0310%" height="15" fill="rgb(252,204,47)" fg:x="270" fg:w="1"/><text x="8.6117%" y="271.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.03%)</title><rect x="8.3927%" y="309" width="0.0310%" height="15" fill="rgb(208,77,27)" fg:x="271" fg:w="1"/><text x="8.6427%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::enumerate (1 samples, 0.03%)</title><rect x="8.4546%" y="277" width="0.0310%" height="15" fill="rgb(221,76,26)" fg:x="273" fg:w="1"/><text x="8.7046%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (2 samples, 0.06%)</title><rect x="8.4856%" y="229" width="0.0619%" height="15" fill="rgb(225,139,18)" fg:x="274" fg:w="2"/><text x="8.7356%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.06%)</title><rect x="8.4856%" y="213" width="0.0619%" height="15" fill="rgb(230,137,11)" fg:x="274" fg:w="2"/><text x="8.7356%" y="223.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (2 samples, 0.06%)</title><rect x="8.4856%" y="197" width="0.0619%" height="15" fill="rgb(212,28,1)" fg:x="274" fg:w="2"/><text x="8.7356%" y="207.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (1 samples, 0.03%)</title><rect x="8.5166%" y="181" width="0.0310%" height="15" fill="rgb(248,164,17)" fg:x="275" fg:w="1"/><text x="8.7666%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5 samples, 0.15%)</title><rect x="8.4856%" y="277" width="0.1548%" height="15" fill="rgb(222,171,42)" fg:x="274" fg:w="5"/><text x="8.7356%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.15%)</title><rect x="8.4856%" y="261" width="0.1548%" height="15" fill="rgb(243,84,45)" fg:x="274" fg:w="5"/><text x="8.7356%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (5 samples, 0.15%)</title><rect x="8.4856%" y="245" width="0.1548%" height="15" fill="rgb(252,49,23)" fg:x="274" fg:w="5"/><text x="8.7356%" y="255.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.09%)</title><rect x="8.5475%" y="229" width="0.0929%" height="15" fill="rgb(215,19,7)" fg:x="276" fg:w="3"/><text x="8.7975%" y="239.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (2 samples, 0.06%)</title><rect x="8.5785%" y="213" width="0.0619%" height="15" fill="rgb(238,81,41)" fg:x="277" fg:w="2"/><text x="8.8285%" y="223.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (1 samples, 0.03%)</title><rect x="8.6404%" y="277" width="0.0310%" height="15" fill="rgb(210,199,37)" fg:x="279" fg:w="1"/><text x="8.8904%" y="287.50"></text></g><g><title>core::ptr::read (1 samples, 0.03%)</title><rect x="8.6404%" y="261" width="0.0310%" height="15" fill="rgb(244,192,49)" fg:x="279" fg:w="1"/><text x="8.8904%" y="271.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::iter_position (1 samples, 0.03%)</title><rect x="8.6714%" y="277" width="0.0310%" height="15" fill="rgb(226,211,11)" fg:x="280" fg:w="1"/><text x="8.9214%" y="287.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.03%)</title><rect x="8.6714%" y="261" width="0.0310%" height="15" fill="rgb(236,162,54)" fg:x="280" fg:w="1"/><text x="8.9214%" y="271.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (1 samples, 0.03%)</title><rect x="8.6714%" y="245" width="0.0310%" height="15" fill="rgb(220,229,9)" fg:x="280" fg:w="1"/><text x="8.9214%" y="255.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (126 samples, 3.90%)</title><rect x="4.8312%" y="325" width="3.9021%" height="15" fill="rgb(250,87,22)" fg:x="156" fg:w="126"/><text x="5.0812%" y="335.50">&lt;cha..</text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (10 samples, 0.31%)</title><rect x="8.4237%" y="309" width="0.3097%" height="15" fill="rgb(239,43,17)" fg:x="272" fg:w="10"/><text x="8.6737%" y="319.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (10 samples, 0.31%)</title><rect x="8.4237%" y="293" width="0.3097%" height="15" fill="rgb(231,177,25)" fg:x="272" fg:w="10"/><text x="8.6737%" y="303.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::new (1 samples, 0.03%)</title><rect x="8.7024%" y="277" width="0.0310%" height="15" fill="rgb(219,179,1)" fg:x="281" fg:w="1"/><text x="8.9524%" y="287.50"></text></g><g><title>core::ptr::write (2 samples, 0.06%)</title><rect x="9.2289%" y="197" width="0.0619%" height="15" fill="rgb(238,219,53)" fg:x="298" fg:w="2"/><text x="9.4789%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (15 samples, 0.46%)</title><rect x="8.8882%" y="245" width="0.4645%" height="15" fill="rgb(232,167,36)" fg:x="287" fg:w="15"/><text x="9.1382%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (11 samples, 0.34%)</title><rect x="9.0121%" y="229" width="0.3407%" height="15" fill="rgb(244,19,51)" fg:x="291" fg:w="11"/><text x="9.2621%" y="239.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (10 samples, 0.31%)</title><rect x="9.0430%" y="213" width="0.3097%" height="15" fill="rgb(224,6,22)" fg:x="292" fg:w="10"/><text x="9.2930%" y="223.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (2 samples, 0.06%)</title><rect x="9.2908%" y="197" width="0.0619%" height="15" fill="rgb(224,145,5)" fg:x="300" fg:w="2"/><text x="9.5408%" y="207.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.03%)</title><rect x="9.4456%" y="229" width="0.0310%" height="15" fill="rgb(234,130,49)" fg:x="305" fg:w="1"/><text x="9.6956%" y="239.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null::runtime_impl (1 samples, 0.03%)</title><rect x="9.4456%" y="213" width="0.0310%" height="15" fill="rgb(254,6,2)" fg:x="305" fg:w="1"/><text x="9.6956%" y="223.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.03%)</title><rect x="9.4766%" y="213" width="0.0310%" height="15" fill="rgb(208,96,46)" fg:x="306" fg:w="1"/><text x="9.7266%" y="223.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.03%)</title><rect x="9.4766%" y="197" width="0.0310%" height="15" fill="rgb(239,3,39)" fg:x="306" fg:w="1"/><text x="9.7266%" y="207.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.03%)</title><rect x="9.5076%" y="213" width="0.0310%" height="15" fill="rgb(233,210,1)" fg:x="307" fg:w="1"/><text x="9.7576%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (25 samples, 0.77%)</title><rect x="8.8263%" y="293" width="0.7742%" height="15" fill="rgb(244,137,37)" fg:x="285" fg:w="25"/><text x="9.0763%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (25 samples, 0.77%)</title><rect x="8.8263%" y="277" width="0.7742%" height="15" fill="rgb(240,136,2)" fg:x="285" fg:w="25"/><text x="9.0763%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (25 samples, 0.77%)</title><rect x="8.8263%" y="261" width="0.7742%" height="15" fill="rgb(239,18,37)" fg:x="285" fg:w="25"/><text x="9.0763%" y="271.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.25%)</title><rect x="9.3527%" y="245" width="0.2478%" height="15" fill="rgb(218,185,22)" fg:x="302" fg:w="8"/><text x="9.6027%" y="255.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (4 samples, 0.12%)</title><rect x="9.4766%" y="229" width="0.1239%" height="15" fill="rgb(225,218,4)" fg:x="306" fg:w="4"/><text x="9.7266%" y="239.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (2 samples, 0.06%)</title><rect x="9.5386%" y="213" width="0.0619%" height="15" fill="rgb(230,182,32)" fg:x="308" fg:w="2"/><text x="9.7886%" y="223.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (1 samples, 0.03%)</title><rect x="9.6315%" y="277" width="0.0310%" height="15" fill="rgb(242,56,43)" fg:x="311" fg:w="1"/><text x="9.8815%" y="287.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="9.6315%" y="261" width="0.0310%" height="15" fill="rgb(233,99,24)" fg:x="311" fg:w="1"/><text x="9.8815%" y="271.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (3 samples, 0.09%)</title><rect x="9.6005%" y="293" width="0.0929%" height="15" fill="rgb(234,209,42)" fg:x="310" fg:w="3"/><text x="9.8505%" y="303.50"></text></g><g><title>core::ptr::read (1 samples, 0.03%)</title><rect x="9.6624%" y="277" width="0.0310%" height="15" fill="rgb(227,7,12)" fg:x="312" fg:w="1"/><text x="9.9124%" y="287.50"></text></g><g><title>memcpy (1 samples, 0.03%)</title><rect x="9.6624%" y="261" width="0.0310%" height="15" fill="rgb(245,203,43)" fg:x="312" fg:w="1"/><text x="9.9124%" y="271.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as crypto_common::KeyIvInit&gt;::new (159 samples, 4.92%)</title><rect x="4.8002%" y="341" width="4.9241%" height="15" fill="rgb(238,205,33)" fg:x="155" fg:w="159"/><text x="5.0502%" y="351.50">&lt;ciphe..</text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (32 samples, 0.99%)</title><rect x="8.7334%" y="325" width="0.9910%" height="15" fill="rgb(231,56,7)" fg:x="282" fg:w="32"/><text x="8.9834%" y="335.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (32 samples, 0.99%)</title><rect x="8.7334%" y="309" width="0.9910%" height="15" fill="rgb(244,186,29)" fg:x="282" fg:w="32"/><text x="8.9834%" y="319.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::iter_position (1 samples, 0.03%)</title><rect x="9.6934%" y="293" width="0.0310%" height="15" fill="rgb(234,111,31)" fg:x="313" fg:w="1"/><text x="9.9434%" y="303.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.03%)</title><rect x="9.6934%" y="277" width="0.0310%" height="15" fill="rgb(241,149,10)" fg:x="313" fg:w="1"/><text x="9.9434%" y="287.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (1 samples, 0.03%)</title><rect x="9.6934%" y="261" width="0.0310%" height="15" fill="rgb(249,206,44)" fg:x="313" fg:w="1"/><text x="9.9434%" y="271.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (1 samples, 0.03%)</title><rect x="9.6934%" y="245" width="0.0310%" height="15" fill="rgb(251,153,30)" fg:x="313" fg:w="1"/><text x="9.9434%" y="255.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (1 samples, 0.03%)</title><rect x="9.6934%" y="229" width="0.0310%" height="15" fill="rgb(239,152,38)" fg:x="313" fg:w="1"/><text x="9.9434%" y="239.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (1 samples, 0.03%)</title><rect x="9.7553%" y="309" width="0.0310%" height="15" fill="rgb(249,139,47)" fg:x="315" fg:w="1"/><text x="10.0053%" y="319.50"></text></g><g><title>core::convert::num::ptr_try_from_impls::&lt;impl core::convert::TryFrom&lt;usize&gt; for u64&gt;::try_from (1 samples, 0.03%)</title><rect x="9.7553%" y="293" width="0.0310%" height="15" fill="rgb(244,64,35)" fg:x="315" fg:w="1"/><text x="10.0053%" y="303.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.03%)</title><rect x="9.7863%" y="309" width="0.0310%" height="15" fill="rgb(216,46,15)" fg:x="316" fg:w="1"/><text x="10.0363%" y="319.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.03%)</title><rect x="9.8173%" y="309" width="0.0310%" height="15" fill="rgb(250,74,19)" fg:x="317" fg:w="1"/><text x="10.0673%" y="319.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (1 samples, 0.03%)</title><rect x="9.8173%" y="293" width="0.0310%" height="15" fill="rgb(249,42,33)" fg:x="317" fg:w="1"/><text x="10.0673%" y="303.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (1 samples, 0.03%)</title><rect x="9.8173%" y="277" width="0.0310%" height="15" fill="rgb(242,149,17)" fg:x="317" fg:w="1"/><text x="10.0673%" y="287.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (1 samples, 0.03%)</title><rect x="9.8173%" y="261" width="0.0310%" height="15" fill="rgb(244,29,21)" fg:x="317" fg:w="1"/><text x="10.0673%" y="271.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.03%)</title><rect x="9.8483%" y="309" width="0.0310%" height="15" fill="rgb(220,130,37)" fg:x="318" fg:w="1"/><text x="10.0983%" y="319.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.03%)</title><rect x="9.8792%" y="309" width="0.0310%" height="15" fill="rgb(211,67,2)" fg:x="319" fg:w="1"/><text x="10.1292%" y="319.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.03%)</title><rect x="9.8792%" y="293" width="0.0310%" height="15" fill="rgb(235,68,52)" fg:x="319" fg:w="1"/><text x="10.1292%" y="303.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.03%)</title><rect x="9.8792%" y="277" width="0.0310%" height="15" fill="rgb(246,142,3)" fg:x="319" fg:w="1"/><text x="10.1292%" y="287.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (3 samples, 0.09%)</title><rect x="9.9102%" y="309" width="0.0929%" height="15" fill="rgb(241,25,7)" fg:x="320" fg:w="3"/><text x="10.1602%" y="319.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (3 samples, 0.09%)</title><rect x="9.9102%" y="293" width="0.0929%" height="15" fill="rgb(242,119,39)" fg:x="320" fg:w="3"/><text x="10.1602%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.09%)</title><rect x="9.9102%" y="277" width="0.0929%" height="15" fill="rgb(241,98,45)" fg:x="320" fg:w="3"/><text x="10.1602%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.09%)</title><rect x="9.9102%" y="261" width="0.0929%" height="15" fill="rgb(254,28,30)" fg:x="320" fg:w="3"/><text x="10.1602%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.09%)</title><rect x="9.9102%" y="245" width="0.0929%" height="15" fill="rgb(241,142,54)" fg:x="320" fg:w="3"/><text x="10.1602%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (3 samples, 0.09%)</title><rect x="9.9102%" y="229" width="0.0929%" height="15" fill="rgb(222,85,15)" fg:x="320" fg:w="3"/><text x="10.1602%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.06%)</title><rect x="9.9412%" y="213" width="0.0619%" height="15" fill="rgb(210,85,47)" fg:x="321" fg:w="2"/><text x="10.1912%" y="223.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (2 samples, 0.06%)</title><rect x="9.9412%" y="197" width="0.0619%" height="15" fill="rgb(224,206,25)" fg:x="321" fg:w="2"/><text x="10.1912%" y="207.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::authenticate_lengths (12 samples, 0.37%)</title><rect x="9.7244%" y="325" width="0.3716%" height="15" fill="rgb(243,201,19)" fg:x="314" fg:w="12"/><text x="9.9744%" y="335.50"></text></g><g><title>universal_hash::UniversalHash::update (3 samples, 0.09%)</title><rect x="10.0031%" y="309" width="0.0929%" height="15" fill="rgb(236,59,4)" fg:x="323" fg:w="3"/><text x="10.2531%" y="319.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (3 samples, 0.09%)</title><rect x="10.0031%" y="293" width="0.0929%" height="15" fill="rgb(254,179,45)" fg:x="323" fg:w="3"/><text x="10.2531%" y="303.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (3 samples, 0.09%)</title><rect x="10.0031%" y="277" width="0.0929%" height="15" fill="rgb(226,14,10)" fg:x="323" fg:w="3"/><text x="10.2531%" y="287.50"></text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (3 samples, 0.09%)</title><rect x="10.0031%" y="261" width="0.0929%" height="15" fill="rgb(244,27,41)" fg:x="323" fg:w="3"/><text x="10.2531%" y="271.50"></text></g><g><title>&lt;poly1305::backend::soft::State as universal_hash::UhfBackend&gt;::proc_block (3 samples, 0.09%)</title><rect x="10.0031%" y="245" width="0.0929%" height="15" fill="rgb(235,35,32)" fg:x="323" fg:w="3"/><text x="10.2531%" y="255.50"></text></g><g><title>poly1305::backend::soft::State::compute_block (3 samples, 0.09%)</title><rect x="10.0031%" y="229" width="0.0929%" height="15" fill="rgb(218,68,31)" fg:x="323" fg:w="3"/><text x="10.2531%" y="239.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (3 samples, 0.09%)</title><rect x="10.0031%" y="213" width="0.0929%" height="15" fill="rgb(207,120,37)" fg:x="323" fg:w="3"/><text x="10.2531%" y="223.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (1 samples, 0.03%)</title><rect x="10.0650%" y="197" width="0.0310%" height="15" fill="rgb(227,98,0)" fg:x="325" fg:w="1"/><text x="10.3150%" y="207.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for &amp;[T: N]&gt;::try_from (1 samples, 0.03%)</title><rect x="10.0650%" y="181" width="0.0310%" height="15" fill="rgb(207,7,3)" fg:x="325" fg:w="1"/><text x="10.3150%" y="191.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.03%)</title><rect x="10.0960%" y="277" width="0.0310%" height="15" fill="rgb(206,98,19)" fg:x="326" fg:w="1"/><text x="10.3460%" y="287.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (2 samples, 0.06%)</title><rect x="11.0870%" y="165" width="0.0619%" height="15" fill="rgb(217,5,26)" fg:x="358" fg:w="2"/><text x="11.3370%" y="175.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_add_epi32 (112 samples, 3.47%)</title><rect x="17.8383%" y="133" width="3.4686%" height="15" fill="rgb(235,190,38)" fg:x="576" fg:w="112"/><text x="18.0883%" y="143.50">cor..</text></g><g><title>core::core_arch::x86::m128iExt::as_i32x4 (18 samples, 0.56%)</title><rect x="20.7495%" y="117" width="0.5574%" height="15" fill="rgb(247,86,24)" fg:x="670" fg:w="18"/><text x="20.9995%" y="127.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_slli_epi32 (76 samples, 2.35%)</title><rect x="21.3069%" y="133" width="2.3537%" height="15" fill="rgb(205,101,16)" fg:x="688" fg:w="76"/><text x="21.5569%" y="143.50">c..</text></g><g><title>core::core_arch::x86::m128iExt::as_i32x4 (18 samples, 0.56%)</title><rect x="23.1031%" y="117" width="0.5574%" height="15" fill="rgb(246,168,33)" fg:x="746" fg:w="18"/><text x="23.3531%" y="127.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_srli_epi32 (20 samples, 0.62%)</title><rect x="23.6606%" y="133" width="0.6194%" height="15" fill="rgb(231,114,1)" fg:x="764" fg:w="20"/><text x="23.9106%" y="143.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i32x4 (9 samples, 0.28%)</title><rect x="24.0012%" y="117" width="0.2787%" height="15" fill="rgb(207,184,53)" fg:x="775" fg:w="9"/><text x="24.2512%" y="127.50"></text></g><g><title>chacha20::backends::sse2::add_xor_rot (487 samples, 15.08%)</title><rect x="11.3038%" y="149" width="15.0821%" height="15" fill="rgb(224,95,51)" fg:x="365" fg:w="487"/><text x="11.5538%" y="159.50">chacha20::backends::sse..</text></g><g><title>core::core_arch::x86::sse2::_mm_xor_si128 (68 samples, 2.11%)</title><rect x="24.2800%" y="133" width="2.1059%" height="15" fill="rgb(212,188,45)" fg:x="784" fg:w="68"/><text x="24.5300%" y="143.50">c..</text></g><g><title>chacha20::backends::sse2::cols_to_rows (33 samples, 1.02%)</title><rect x="26.3859%" y="149" width="1.0220%" height="15" fill="rgb(223,154,38)" fg:x="852" fg:w="33"/><text x="26.6359%" y="159.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_shuffle_epi32 (20 samples, 0.62%)</title><rect x="26.7885%" y="133" width="0.6194%" height="15" fill="rgb(251,22,52)" fg:x="865" fg:w="20"/><text x="27.0385%" y="143.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i32x4 (8 samples, 0.25%)</title><rect x="27.1601%" y="117" width="0.2478%" height="15" fill="rgb(229,209,22)" fg:x="877" fg:w="8"/><text x="27.4101%" y="127.50"></text></g><g><title>chacha20::backends::sse2::double_quarter_round (547 samples, 16.94%)</title><rect x="11.1490%" y="165" width="16.9402%" height="15" fill="rgb(234,138,34)" fg:x="360" fg:w="547"/><text x="11.3990%" y="175.50">chacha20::backends::sse2::..</text></g><g><title>chacha20::backends::sse2::rows_to_cols (22 samples, 0.68%)</title><rect x="27.4079%" y="149" width="0.6813%" height="15" fill="rgb(212,95,11)" fg:x="885" fg:w="22"/><text x="27.6579%" y="159.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_shuffle_epi32 (15 samples, 0.46%)</title><rect x="27.6247%" y="133" width="0.4645%" height="15" fill="rgb(240,179,47)" fg:x="892" fg:w="15"/><text x="27.8747%" y="143.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i32x4 (4 samples, 0.12%)</title><rect x="27.9653%" y="117" width="0.1239%" height="15" fill="rgb(240,163,11)" fg:x="903" fg:w="4"/><text x="28.2153%" y="127.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (8 samples, 0.25%)</title><rect x="28.6776%" y="133" width="0.2478%" height="15" fill="rgb(236,37,12)" fg:x="926" fg:w="8"/><text x="28.9276%" y="143.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (3 samples, 0.09%)</title><rect x="28.8325%" y="117" width="0.0929%" height="15" fill="rgb(232,164,16)" fg:x="931" fg:w="3"/><text x="29.0825%" y="127.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (6 samples, 0.19%)</title><rect x="28.9254%" y="133" width="0.1858%" height="15" fill="rgb(244,205,15)" fg:x="934" fg:w="6"/><text x="29.1754%" y="143.50"></text></g><g><title>chacha20::backends::sse2::rounds (613 samples, 18.98%)</title><rect x="10.5296%" y="181" width="18.9842%" height="15" fill="rgb(223,117,47)" fg:x="340" fg:w="613"/><text x="10.7796%" y="191.50">chacha20::backends::sse2::roun..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (46 samples, 1.42%)</title><rect x="28.0892%" y="165" width="1.4246%" height="15" fill="rgb(244,107,35)" fg:x="907" fg:w="46"/><text x="28.3392%" y="175.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (43 samples, 1.33%)</title><rect x="28.1821%" y="149" width="1.3317%" height="15" fill="rgb(205,140,8)" fg:x="910" fg:w="43"/><text x="28.4321%" y="159.50"></text></g><g><title>core::mem::replace (13 samples, 0.40%)</title><rect x="29.1112%" y="133" width="0.4026%" height="15" fill="rgb(228,84,46)" fg:x="940" fg:w="13"/><text x="29.3612%" y="143.50"></text></g><g><title>core::ptr::read (10 samples, 0.31%)</title><rect x="29.2041%" y="117" width="0.3097%" height="15" fill="rgb(254,188,9)" fg:x="943" fg:w="10"/><text x="29.4541%" y="127.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (3 samples, 0.09%)</title><rect x="29.4209%" y="101" width="0.0929%" height="15" fill="rgb(206,112,54)" fg:x="950" fg:w="3"/><text x="29.6709%" y="111.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (3 samples, 0.09%)</title><rect x="29.4209%" y="85" width="0.0929%" height="15" fill="rgb(216,84,49)" fg:x="950" fg:w="3"/><text x="29.6709%" y="95.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_add_epi32 (2 samples, 0.06%)</title><rect x="29.5138%" y="181" width="0.0619%" height="15" fill="rgb(214,194,35)" fg:x="953" fg:w="2"/><text x="29.7638%" y="191.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i32x4 (1 samples, 0.03%)</title><rect x="29.5448%" y="165" width="0.0310%" height="15" fill="rgb(249,28,3)" fg:x="954" fg:w="1"/><text x="29.7948%" y="175.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi32 (1 samples, 0.03%)</title><rect x="29.5757%" y="181" width="0.0310%" height="15" fill="rgb(222,56,52)" fg:x="955" fg:w="1"/><text x="29.8257%" y="191.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_storeu_si128 (2 samples, 0.06%)</title><rect x="29.6067%" y="181" width="0.0619%" height="15" fill="rgb(245,217,50)" fg:x="956" fg:w="2"/><text x="29.8567%" y="191.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.06%)</title><rect x="29.6686%" y="181" width="0.0619%" height="15" fill="rgb(213,201,24)" fg:x="958" fg:w="2"/><text x="29.9186%" y="191.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.03%)</title><rect x="29.6996%" y="165" width="0.0310%" height="15" fill="rgb(248,116,28)" fg:x="959" fg:w="1"/><text x="29.9496%" y="175.50"></text></g><g><title>core::mem::replace (1 samples, 0.03%)</title><rect x="29.6996%" y="149" width="0.0310%" height="15" fill="rgb(219,72,43)" fg:x="959" fg:w="1"/><text x="29.9496%" y="159.50"></text></g><g><title>core::ptr::read (1 samples, 0.03%)</title><rect x="29.6996%" y="133" width="0.0310%" height="15" fill="rgb(209,138,14)" fg:x="959" fg:w="1"/><text x="29.9496%" y="143.50"></text></g><g><title>&lt;chacha20::backends::sse2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (630 samples, 19.51%)</title><rect x="10.2509%" y="197" width="19.5107%" height="15" fill="rgb(222,18,33)" fg:x="331" fg:w="630"/><text x="10.5009%" y="207.50">&lt;chacha20::backends::sse2::Back..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.03%)</title><rect x="29.7306%" y="181" width="0.0310%" height="15" fill="rgb(213,199,7)" fg:x="960" fg:w="1"/><text x="29.9806%" y="191.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.03%)</title><rect x="29.7306%" y="165" width="0.0310%" height="15" fill="rgb(250,110,10)" fg:x="960" fg:w="1"/><text x="29.9806%" y="175.50"></text></g><g><title>&lt;inout::inout_buf::InOutBufIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.09%)</title><rect x="29.7615%" y="197" width="0.0929%" height="15" fill="rgb(248,123,6)" fg:x="961" fg:w="3"/><text x="30.0115%" y="207.50"></text></g><g><title>inout::inout_buf::InOutBuf&lt;T&gt;::len (1 samples, 0.03%)</title><rect x="29.8235%" y="181" width="0.0310%" height="15" fill="rgb(206,91,31)" fg:x="963" fg:w="1"/><text x="30.0735%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::enumerate (1 samples, 0.03%)</title><rect x="29.9164%" y="165" width="0.0310%" height="15" fill="rgb(211,154,13)" fg:x="966" fg:w="1"/><text x="30.1664%" y="175.50"></text></g><g><title>core::ptr::write (19 samples, 0.59%)</title><rect x="37.9994%" y="69" width="0.5884%" height="15" fill="rgb(225,148,7)" fg:x="1227" fg:w="19"/><text x="38.2494%" y="79.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (220 samples, 6.81%)</title><rect x="32.8275%" y="117" width="6.8133%" height="15" fill="rgb(220,160,43)" fg:x="1060" fg:w="220"/><text x="33.0775%" y="127.50">&lt;core::it..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (168 samples, 5.20%)</title><rect x="34.4379%" y="101" width="5.2028%" height="15" fill="rgb(213,52,39)" fg:x="1112" fg:w="168"/><text x="34.6879%" y="111.50">core::..</text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (127 samples, 3.93%)</title><rect x="35.7076%" y="85" width="3.9331%" height="15" fill="rgb(243,137,7)" fg:x="1153" fg:w="127"/><text x="35.9576%" y="95.50">&lt;gen..</text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (34 samples, 1.05%)</title><rect x="38.5878%" y="69" width="1.0530%" height="15" fill="rgb(230,79,13)" fg:x="1246" fg:w="34"/><text x="38.8378%" y="79.50"></text></g><g><title>&lt;u8 as core::default::Default&gt;::default (5 samples, 0.15%)</title><rect x="39.4859%" y="53" width="0.1548%" height="15" fill="rgb(247,105,23)" fg:x="1275" fg:w="5"/><text x="39.7359%" y="63.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (45 samples, 1.39%)</title><rect x="40.6937%" y="101" width="1.3936%" height="15" fill="rgb(223,179,41)" fg:x="1314" fg:w="45"/><text x="40.9437%" y="111.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null::runtime_impl (22 samples, 0.68%)</title><rect x="41.4060%" y="85" width="0.6813%" height="15" fill="rgb(218,9,34)" fg:x="1337" fg:w="22"/><text x="41.6560%" y="95.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::addr (11 samples, 0.34%)</title><rect x="41.7467%" y="69" width="0.3407%" height="15" fill="rgb(222,106,8)" fg:x="1348" fg:w="11"/><text x="41.9967%" y="79.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.03%)</title><rect x="42.0873%" y="101" width="0.0310%" height="15" fill="rgb(211,220,0)" fg:x="1359" fg:w="1"/><text x="42.3373%" y="111.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (27 samples, 0.84%)</title><rect x="43.2332%" y="85" width="0.8362%" height="15" fill="rgb(229,52,16)" fg:x="1396" fg:w="27"/><text x="43.4832%" y="95.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (27 samples, 0.84%)</title><rect x="43.2332%" y="69" width="0.8362%" height="15" fill="rgb(212,155,18)" fg:x="1396" fg:w="27"/><text x="43.4832%" y="79.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (4 samples, 0.12%)</title><rect x="44.0694%" y="85" width="0.1239%" height="15" fill="rgb(242,21,14)" fg:x="1423" fg:w="4"/><text x="44.3194%" y="95.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (465 samples, 14.40%)</title><rect x="29.9474%" y="165" width="14.4007%" height="15" fill="rgb(222,19,48)" fg:x="967" fg:w="465"/><text x="30.1974%" y="175.50">core::iter::traits::it..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (461 samples, 14.28%)</title><rect x="30.0712%" y="149" width="14.2769%" height="15" fill="rgb(232,45,27)" fg:x="971" fg:w="461"/><text x="30.3212%" y="159.50">&lt;core::iter::adapters:..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (461 samples, 14.28%)</title><rect x="30.0712%" y="133" width="14.2769%" height="15" fill="rgb(249,103,42)" fg:x="971" fg:w="461"/><text x="30.3212%" y="143.50">core::iter::traits::it..</text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (152 samples, 4.71%)</title><rect x="39.6408%" y="117" width="4.7073%" height="15" fill="rgb(246,81,33)" fg:x="1280" fg:w="152"/><text x="39.8908%" y="127.50">&lt;core..</text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (72 samples, 2.23%)</title><rect x="42.1183%" y="101" width="2.2298%" height="15" fill="rgb(252,33,42)" fg:x="1360" fg:w="72"/><text x="42.3683%" y="111.50">c..</text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (5 samples, 0.15%)</title><rect x="44.1932%" y="85" width="0.1548%" height="15" fill="rgb(209,212,41)" fg:x="1427" fg:w="5"/><text x="44.4432%" y="95.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="44.3791%" y="149" width="0.0310%" height="15" fill="rgb(207,154,6)" fg:x="1433" fg:w="1"/><text x="44.6291%" y="159.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="44.4100%" y="133" width="0.0310%" height="15" fill="rgb(223,64,47)" fg:x="1434" fg:w="1"/><text x="44.6600%" y="143.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="44.4410%" y="117" width="0.0310%" height="15" fill="rgb(211,161,38)" fg:x="1435" fg:w="1"/><text x="44.6910%" y="127.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (3 samples, 0.09%)</title><rect x="44.4100%" y="149" width="0.0929%" height="15" fill="rgb(219,138,40)" fg:x="1434" fg:w="3"/><text x="44.6600%" y="159.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (2 samples, 0.06%)</title><rect x="44.4410%" y="133" width="0.0619%" height="15" fill="rgb(241,228,46)" fg:x="1435" fg:w="2"/><text x="44.6910%" y="143.50"></text></g><g><title>memcpy (1 samples, 0.03%)</title><rect x="44.4720%" y="117" width="0.0310%" height="15" fill="rgb(223,209,38)" fg:x="1436" fg:w="1"/><text x="44.7220%" y="127.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="44.5029%" y="133" width="0.0310%" height="15" fill="rgb(236,164,45)" fg:x="1437" fg:w="1"/><text x="44.7529%" y="143.50"></text></g><g><title>[libc.so.6] (2 samples, 0.06%)</title><rect x="44.5339%" y="117" width="0.0619%" height="15" fill="rgb(231,15,5)" fg:x="1438" fg:w="2"/><text x="44.7839%" y="127.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (1 samples, 0.03%)</title><rect x="44.5959%" y="117" width="0.0310%" height="15" fill="rgb(252,35,15)" fg:x="1440" fg:w="1"/><text x="44.8459%" y="127.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="44.5959%" y="101" width="0.0310%" height="15" fill="rgb(248,181,18)" fg:x="1440" fg:w="1"/><text x="44.8459%" y="111.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (10 samples, 0.31%)</title><rect x="44.3481%" y="165" width="0.3097%" height="15" fill="rgb(233,39,42)" fg:x="1432" fg:w="10"/><text x="44.5981%" y="175.50"></text></g><g><title>core::ptr::read (5 samples, 0.15%)</title><rect x="44.5029%" y="149" width="0.1548%" height="15" fill="rgb(238,110,33)" fg:x="1437" fg:w="5"/><text x="44.7529%" y="159.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (4 samples, 0.12%)</title><rect x="44.5339%" y="133" width="0.1239%" height="15" fill="rgb(233,195,10)" fg:x="1438" fg:w="4"/><text x="44.7839%" y="143.50"></text></g><g><title>memcpy (1 samples, 0.03%)</title><rect x="44.6268%" y="117" width="0.0310%" height="15" fill="rgb(254,105,3)" fg:x="1441" fg:w="1"/><text x="44.8768%" y="127.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.03%)</title><rect x="44.6888%" y="149" width="0.0310%" height="15" fill="rgb(221,225,9)" fg:x="1443" fg:w="1"/><text x="44.9388%" y="159.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (1 samples, 0.03%)</title><rect x="44.6888%" y="133" width="0.0310%" height="15" fill="rgb(224,227,45)" fg:x="1443" fg:w="1"/><text x="44.9388%" y="143.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (1 samples, 0.03%)</title><rect x="44.6888%" y="117" width="0.0310%" height="15" fill="rgb(229,198,43)" fg:x="1443" fg:w="1"/><text x="44.9388%" y="127.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (1 samples, 0.03%)</title><rect x="44.6888%" y="101" width="0.0310%" height="15" fill="rgb(206,209,35)" fg:x="1443" fg:w="1"/><text x="44.9388%" y="111.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::iter_position (4 samples, 0.12%)</title><rect x="44.6578%" y="165" width="0.1239%" height="15" fill="rgb(245,195,53)" fg:x="1442" fg:w="4"/><text x="44.9078%" y="175.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (2 samples, 0.06%)</title><rect x="44.7197%" y="149" width="0.0619%" height="15" fill="rgb(240,92,26)" fg:x="1444" fg:w="2"/><text x="44.9697%" y="159.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (2 samples, 0.06%)</title><rect x="44.7197%" y="133" width="0.0619%" height="15" fill="rgb(207,40,23)" fg:x="1444" fg:w="2"/><text x="44.9697%" y="143.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (484 samples, 14.99%)</title><rect x="29.8544%" y="197" width="14.9892%" height="15" fill="rgb(223,111,35)" fg:x="964" fg:w="484"/><text x="30.1044%" y="207.50">generic_array::impls::&lt;..</text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (483 samples, 14.96%)</title><rect x="29.8854%" y="181" width="14.9582%" height="15" fill="rgb(229,147,28)" fg:x="965" fg:w="483"/><text x="30.1354%" y="191.50">&lt;generic_array::Generic..</text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::new (2 samples, 0.06%)</title><rect x="44.7817%" y="165" width="0.0619%" height="15" fill="rgb(211,29,28)" fg:x="1446" fg:w="2"/><text x="45.0317%" y="175.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="44.8126%" y="149" width="0.0310%" height="15" fill="rgb(228,72,33)" fg:x="1447" fg:w="1"/><text x="45.0626%" y="159.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.03%)</title><rect x="50.6658%" y="181" width="0.0310%" height="15" fill="rgb(205,214,31)" fg:x="1636" fg:w="1"/><text x="50.9158%" y="191.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::cast (2 samples, 0.06%)</title><rect x="52.6479%" y="133" width="0.0619%" height="15" fill="rgb(224,111,15)" fg:x="1700" fg:w="2"/><text x="52.8979%" y="143.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::Deref&gt;::deref (129 samples, 4.00%)</title><rect x="50.6968%" y="181" width="3.9950%" height="15" fill="rgb(253,21,26)" fg:x="1637" fg:w="129"/><text x="50.9468%" y="191.50">&lt;gen..</text></g><g><title>core::slice::raw::from_raw_parts (112 samples, 3.47%)</title><rect x="51.2233%" y="165" width="3.4686%" height="15" fill="rgb(245,139,43)" fg:x="1654" fg:w="112"/><text x="51.4733%" y="175.50">cor..</text></g><g><title>core::ptr::slice_from_raw_parts (83 samples, 2.57%)</title><rect x="52.1214%" y="149" width="2.5705%" height="15" fill="rgb(252,170,7)" fg:x="1683" fg:w="83"/><text x="52.3714%" y="159.50">co..</text></g><g><title>core::ptr::metadata::from_raw_parts (64 samples, 1.98%)</title><rect x="52.7098%" y="133" width="1.9820%" height="15" fill="rgb(231,118,14)" fg:x="1702" fg:w="64"/><text x="52.9598%" y="143.50">c..</text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (51 samples, 1.58%)</title><rect x="54.6919%" y="181" width="1.5794%" height="15" fill="rgb(238,83,0)" fg:x="1766" fg:w="51"/><text x="54.9419%" y="191.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (37 samples, 1.15%)</title><rect x="55.1254%" y="165" width="1.1459%" height="15" fill="rgb(221,39,39)" fg:x="1780" fg:w="37"/><text x="55.3754%" y="175.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (25 samples, 0.77%)</title><rect x="55.4971%" y="149" width="0.7742%" height="15" fill="rgb(222,119,46)" fg:x="1792" fg:w="25"/><text x="55.7471%" y="159.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (18 samples, 0.56%)</title><rect x="55.7138%" y="133" width="0.5574%" height="15" fill="rgb(222,165,49)" fg:x="1799" fg:w="18"/><text x="55.9638%" y="143.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (20 samples, 0.62%)</title><rect x="58.5011%" y="149" width="0.6194%" height="15" fill="rgb(219,113,52)" fg:x="1889" fg:w="20"/><text x="58.7511%" y="159.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (2 samples, 0.06%)</title><rect x="59.0585%" y="133" width="0.0619%" height="15" fill="rgb(214,7,15)" fg:x="1907" fg:w="2"/><text x="59.3085%" y="143.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (18 samples, 0.56%)</title><rect x="59.1205%" y="149" width="0.5574%" height="15" fill="rgb(235,32,4)" fg:x="1909" fg:w="18"/><text x="59.3705%" y="159.50"></text></g><g><title>core::ptr::read (48 samples, 1.49%)</title><rect x="60.3592%" y="133" width="1.4865%" height="15" fill="rgb(238,90,54)" fg:x="1949" fg:w="48"/><text x="60.6092%" y="143.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (11 samples, 0.34%)</title><rect x="61.5051%" y="117" width="0.3407%" height="15" fill="rgb(213,208,19)" fg:x="1986" fg:w="11"/><text x="61.7551%" y="127.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (10 samples, 0.31%)</title><rect x="61.5361%" y="101" width="0.3097%" height="15" fill="rgb(233,156,4)" fg:x="1987" fg:w="10"/><text x="61.7861%" y="111.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (189 samples, 5.85%)</title><rect x="56.2713%" y="181" width="5.8532%" height="15" fill="rgb(207,194,5)" fg:x="1817" fg:w="189"/><text x="56.5213%" y="191.50">core::i..</text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (170 samples, 5.26%)</title><rect x="56.8597%" y="165" width="5.2648%" height="15" fill="rgb(206,111,30)" fg:x="1836" fg:w="170"/><text x="57.1097%" y="175.50">&lt;core:..</text></g><g><title>core::mem::replace (79 samples, 2.45%)</title><rect x="59.6779%" y="149" width="2.4466%" height="15" fill="rgb(243,70,54)" fg:x="1927" fg:w="79"/><text x="59.9279%" y="159.50">co..</text></g><g><title>core::ptr::write (9 samples, 0.28%)</title><rect x="61.8458%" y="133" width="0.2787%" height="15" fill="rgb(242,28,8)" fg:x="1997" fg:w="9"/><text x="62.0958%" y="143.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (1 samples, 0.03%)</title><rect x="62.1555%" y="149" width="0.0310%" height="15" fill="rgb(219,106,18)" fg:x="2007" fg:w="1"/><text x="62.4055%" y="159.50"></text></g><g><title>memcpy (1 samples, 0.03%)</title><rect x="62.1555%" y="133" width="0.0310%" height="15" fill="rgb(244,222,10)" fg:x="2007" fg:w="1"/><text x="62.4055%" y="143.50"></text></g><g><title>core::ptr::read (3 samples, 0.09%)</title><rect x="62.1245%" y="181" width="0.0929%" height="15" fill="rgb(236,179,52)" fg:x="2006" fg:w="3"/><text x="62.3745%" y="191.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (2 samples, 0.06%)</title><rect x="62.1555%" y="165" width="0.0619%" height="15" fill="rgb(213,23,39)" fg:x="2007" fg:w="2"/><text x="62.4055%" y="175.50"></text></g><g><title>memcpy (1 samples, 0.03%)</title><rect x="62.1864%" y="149" width="0.0310%" height="15" fill="rgb(238,48,10)" fg:x="2008" fg:w="1"/><text x="62.4364%" y="159.50"></text></g><g><title>core::ptr::write (26 samples, 0.81%)</title><rect x="70.0526%" y="53" width="0.8052%" height="15" fill="rgb(251,196,23)" fg:x="2262" fg:w="26"/><text x="70.3026%" y="63.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (220 samples, 6.81%)</title><rect x="64.8498%" y="101" width="6.8133%" height="15" fill="rgb(250,152,24)" fg:x="2094" fg:w="220"/><text x="65.0998%" y="111.50">&lt;core::it..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (161 samples, 4.99%)</title><rect x="66.6770%" y="85" width="4.9861%" height="15" fill="rgb(209,150,17)" fg:x="2153" fg:w="161"/><text x="66.9270%" y="95.50">core::..</text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (125 samples, 3.87%)</title><rect x="67.7919%" y="69" width="3.8712%" height="15" fill="rgb(234,202,34)" fg:x="2189" fg:w="125"/><text x="68.0419%" y="79.50">&lt;gen..</text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (26 samples, 0.81%)</title><rect x="70.8579%" y="53" width="0.8052%" height="15" fill="rgb(253,148,53)" fg:x="2288" fg:w="26"/><text x="71.1079%" y="63.50"></text></g><g><title>&lt;u8 as core::default::Default&gt;::default (3 samples, 0.09%)</title><rect x="71.5701%" y="37" width="0.0929%" height="15" fill="rgb(218,129,16)" fg:x="2311" fg:w="3"/><text x="71.8201%" y="47.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (42 samples, 1.30%)</title><rect x="72.9328%" y="85" width="1.3007%" height="15" fill="rgb(216,85,19)" fg:x="2355" fg:w="42"/><text x="73.1828%" y="95.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null::runtime_impl (21 samples, 0.65%)</title><rect x="73.5832%" y="69" width="0.6504%" height="15" fill="rgb(235,228,7)" fg:x="2376" fg:w="21"/><text x="73.8332%" y="79.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::addr (13 samples, 0.40%)</title><rect x="73.8309%" y="53" width="0.4026%" height="15" fill="rgb(245,175,0)" fg:x="2384" fg:w="13"/><text x="74.0809%" y="63.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (23 samples, 0.71%)</title><rect x="75.6271%" y="69" width="0.7123%" height="15" fill="rgb(208,168,36)" fg:x="2442" fg:w="23"/><text x="75.8771%" y="79.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (19 samples, 0.59%)</title><rect x="75.7510%" y="53" width="0.5884%" height="15" fill="rgb(246,171,24)" fg:x="2446" fg:w="19"/><text x="76.0010%" y="63.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (3 samples, 0.09%)</title><rect x="76.3394%" y="69" width="0.0929%" height="15" fill="rgb(215,142,24)" fg:x="2465" fg:w="3"/><text x="76.5894%" y="79.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (461 samples, 14.28%)</title><rect x="62.3413%" y="149" width="14.2769%" height="15" fill="rgb(250,187,7)" fg:x="2013" fg:w="461"/><text x="62.5913%" y="159.50">core::iter::traits::it..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (460 samples, 14.25%)</title><rect x="62.3723%" y="133" width="14.2459%" height="15" fill="rgb(228,66,33)" fg:x="2014" fg:w="460"/><text x="62.6223%" y="143.50">&lt;core::iter::adapters:..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (460 samples, 14.25%)</title><rect x="62.3723%" y="117" width="14.2459%" height="15" fill="rgb(234,215,21)" fg:x="2014" fg:w="460"/><text x="62.6223%" y="127.50">core::iter::traits::it..</text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (160 samples, 4.96%)</title><rect x="71.6631%" y="101" width="4.9551%" height="15" fill="rgb(222,191,20)" fg:x="2314" fg:w="160"/><text x="71.9131%" y="111.50">&lt;core:..</text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (77 samples, 2.38%)</title><rect x="74.2335%" y="85" width="2.3846%" height="15" fill="rgb(245,79,54)" fg:x="2397" fg:w="77"/><text x="74.4835%" y="95.50">co..</text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (6 samples, 0.19%)</title><rect x="76.4323%" y="69" width="0.1858%" height="15" fill="rgb(240,10,37)" fg:x="2468" fg:w="6"/><text x="76.6823%" y="79.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="76.7730%" y="117" width="0.0310%" height="15" fill="rgb(214,192,32)" fg:x="2479" fg:w="1"/><text x="77.0230%" y="127.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (2 samples, 0.06%)</title><rect x="76.7730%" y="133" width="0.0619%" height="15" fill="rgb(209,36,54)" fg:x="2479" fg:w="2"/><text x="77.0230%" y="143.50"></text></g><g><title>memcpy (1 samples, 0.03%)</title><rect x="76.8040%" y="117" width="0.0310%" height="15" fill="rgb(220,10,11)" fg:x="2480" fg:w="1"/><text x="77.0540%" y="127.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="76.8659%" y="101" width="0.0310%" height="15" fill="rgb(221,106,17)" fg:x="2482" fg:w="1"/><text x="77.1159%" y="111.50"></text></g><g><title>[libc.so.6] (2 samples, 0.06%)</title><rect x="76.8969%" y="85" width="0.0619%" height="15" fill="rgb(251,142,44)" fg:x="2483" fg:w="2"/><text x="77.1469%" y="95.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (4 samples, 0.12%)</title><rect x="76.8969%" y="101" width="0.1239%" height="15" fill="rgb(238,13,15)" fg:x="2483" fg:w="4"/><text x="77.1469%" y="111.50"></text></g><g><title>memcpy (2 samples, 0.06%)</title><rect x="76.9588%" y="85" width="0.0619%" height="15" fill="rgb(208,107,27)" fg:x="2485" fg:w="2"/><text x="77.2088%" y="95.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (6 samples, 0.19%)</title><rect x="76.8659%" y="117" width="0.1858%" height="15" fill="rgb(205,136,37)" fg:x="2482" fg:w="6"/><text x="77.1159%" y="127.50"></text></g><g><title>memcpy (1 samples, 0.03%)</title><rect x="77.0207%" y="101" width="0.0310%" height="15" fill="rgb(250,205,27)" fg:x="2487" fg:w="1"/><text x="77.2707%" y="111.50"></text></g><g><title>core::ptr::read (9 samples, 0.28%)</title><rect x="76.8349%" y="133" width="0.2787%" height="15" fill="rgb(210,80,43)" fg:x="2481" fg:w="9"/><text x="77.0849%" y="143.50"></text></g><g><title>memcpy (2 samples, 0.06%)</title><rect x="77.0517%" y="117" width="0.0619%" height="15" fill="rgb(247,160,36)" fg:x="2488" fg:w="2"/><text x="77.3017%" y="127.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (17 samples, 0.53%)</title><rect x="76.6181%" y="149" width="0.5265%" height="15" fill="rgb(234,13,49)" fg:x="2474" fg:w="17"/><text x="76.8681%" y="159.50"></text></g><g><title>memcpy (1 samples, 0.03%)</title><rect x="77.1137%" y="133" width="0.0310%" height="15" fill="rgb(234,122,0)" fg:x="2490" fg:w="1"/><text x="77.3637%" y="143.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.03%)</title><rect x="77.2066%" y="133" width="0.0310%" height="15" fill="rgb(207,146,38)" fg:x="2493" fg:w="1"/><text x="77.4566%" y="143.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (1 samples, 0.03%)</title><rect x="77.2066%" y="117" width="0.0310%" height="15" fill="rgb(207,177,25)" fg:x="2493" fg:w="1"/><text x="77.4566%" y="127.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (1 samples, 0.03%)</title><rect x="77.2066%" y="101" width="0.0310%" height="15" fill="rgb(211,178,42)" fg:x="2493" fg:w="1"/><text x="77.4566%" y="111.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (1 samples, 0.03%)</title><rect x="77.2066%" y="85" width="0.0310%" height="15" fill="rgb(230,69,54)" fg:x="2493" fg:w="1"/><text x="77.4566%" y="95.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::iter_position (7 samples, 0.22%)</title><rect x="77.1446%" y="149" width="0.2168%" height="15" fill="rgb(214,135,41)" fg:x="2491" fg:w="7"/><text x="77.3946%" y="159.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (4 samples, 0.12%)</title><rect x="77.2375%" y="133" width="0.1239%" height="15" fill="rgb(237,67,25)" fg:x="2494" fg:w="4"/><text x="77.4875%" y="143.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (3 samples, 0.09%)</title><rect x="77.2685%" y="117" width="0.0929%" height="15" fill="rgb(222,189,50)" fg:x="2495" fg:w="3"/><text x="77.5185%" y="127.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.03%)</title><rect x="77.3304%" y="101" width="0.0310%" height="15" fill="rgb(245,148,34)" fg:x="2497" fg:w="1"/><text x="77.5804%" y="111.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (2,170 samples, 67.20%)</title><rect x="10.2199%" y="213" width="67.2035%" height="15" fill="rgb(222,29,6)" fg:x="330" fg:w="2170"/><text x="10.4699%" y="223.50">&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call</text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;u8,N&gt;&gt;::xor_in2out (1,052 samples, 32.58%)</title><rect x="44.8436%" y="197" width="32.5797%" height="15" fill="rgb(221,189,43)" fg:x="1448" fg:w="1052"/><text x="45.0936%" y="207.50">inout::inout::InOut&lt;generic_array::GenericArray&lt;u8,N&gt;..</text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (491 samples, 15.21%)</title><rect x="62.2174%" y="181" width="15.2059%" height="15" fill="rgb(207,36,27)" fg:x="2009" fg:w="491"/><text x="62.4674%" y="191.50">generic_array::impls::&lt;..</text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (491 samples, 15.21%)</title><rect x="62.2174%" y="165" width="15.2059%" height="15" fill="rgb(217,90,24)" fg:x="2009" fg:w="491"/><text x="62.4674%" y="175.50">&lt;generic_array::Generic..</text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::new (2 samples, 0.06%)</title><rect x="77.3614%" y="149" width="0.0619%" height="15" fill="rgb(224,66,35)" fg:x="2498" fg:w="2"/><text x="77.6114%" y="159.50"></text></g><g><title>[libc.so.6] (2 samples, 0.06%)</title><rect x="77.3614%" y="133" width="0.0619%" height="15" fill="rgb(221,13,50)" fg:x="2498" fg:w="2"/><text x="77.6114%" y="143.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (2,174 samples, 67.33%)</title><rect x="10.1270%" y="277" width="67.3273%" height="15" fill="rgb(236,68,49)" fg:x="327" fg:w="2174"/><text x="10.3770%" y="287.50">cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout</text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (2,174 samples, 67.33%)</title><rect x="10.1270%" y="261" width="67.3273%" height="15" fill="rgb(229,146,28)" fg:x="327" fg:w="2174"/><text x="10.3770%" y="271.50">&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend</text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (2,174 samples, 67.33%)</title><rect x="10.1270%" y="245" width="67.3273%" height="15" fill="rgb(225,31,38)" fg:x="327" fg:w="2174"/><text x="10.3770%" y="255.50">&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend</text></g><g><title>chacha20::backends::sse2::inner (2,173 samples, 67.30%)</title><rect x="10.1579%" y="229" width="67.2964%" height="15" fill="rgb(250,208,3)" fg:x="328" fg:w="2173"/><text x="10.4079%" y="239.50">chacha20::backends::sse2::inner</text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.03%)</title><rect x="77.4234%" y="213" width="0.0310%" height="15" fill="rgb(246,54,23)" fg:x="2500" fg:w="1"/><text x="77.6734%" y="223.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_add_epi32 (6 samples, 0.19%)</title><rect x="77.8879%" y="133" width="0.1858%" height="15" fill="rgb(243,76,11)" fg:x="2515" fg:w="6"/><text x="78.1379%" y="143.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i32x4 (1 samples, 0.03%)</title><rect x="78.0427%" y="117" width="0.0310%" height="15" fill="rgb(245,21,50)" fg:x="2520" fg:w="1"/><text x="78.2927%" y="127.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_slli_epi32 (5 samples, 0.15%)</title><rect x="78.0737%" y="133" width="0.1548%" height="15" fill="rgb(228,9,43)" fg:x="2521" fg:w="5"/><text x="78.3237%" y="143.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i32x4 (2 samples, 0.06%)</title><rect x="78.1666%" y="117" width="0.0619%" height="15" fill="rgb(208,100,47)" fg:x="2524" fg:w="2"/><text x="78.4166%" y="127.50"></text></g><g><title>chacha20::backends::sse2::add_xor_rot (22 samples, 0.68%)</title><rect x="77.5782%" y="149" width="0.6813%" height="15" fill="rgb(232,26,8)" fg:x="2505" fg:w="22"/><text x="77.8282%" y="159.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_srli_epi32 (1 samples, 0.03%)</title><rect x="78.2286%" y="133" width="0.0310%" height="15" fill="rgb(216,166,38)" fg:x="2526" fg:w="1"/><text x="78.4786%" y="143.50"></text></g><g><title>chacha20::backends::sse2::double_quarter_round (23 samples, 0.71%)</title><rect x="77.5782%" y="165" width="0.7123%" height="15" fill="rgb(251,202,51)" fg:x="2505" fg:w="23"/><text x="77.8282%" y="175.50"></text></g><g><title>chacha20::backends::sse2::rows_to_cols (1 samples, 0.03%)</title><rect x="78.2595%" y="149" width="0.0310%" height="15" fill="rgb(254,216,34)" fg:x="2527" fg:w="1"/><text x="78.5095%" y="159.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_shuffle_epi32 (1 samples, 0.03%)</title><rect x="78.2595%" y="133" width="0.0310%" height="15" fill="rgb(251,32,27)" fg:x="2527" fg:w="1"/><text x="78.5095%" y="143.50"></text></g><g><title>chacha20::backends::sse2::rounds (24 samples, 0.74%)</title><rect x="77.5782%" y="181" width="0.7433%" height="15" fill="rgb(208,127,28)" fg:x="2505" fg:w="24"/><text x="77.8282%" y="191.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_add_epi32 (1 samples, 0.03%)</title><rect x="78.2905%" y="165" width="0.0310%" height="15" fill="rgb(224,137,22)" fg:x="2528" fg:w="1"/><text x="78.5405%" y="175.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi32 (1 samples, 0.03%)</title><rect x="78.3215%" y="181" width="0.0310%" height="15" fill="rgb(254,70,32)" fg:x="2529" fg:w="1"/><text x="78.5715%" y="191.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::write_keystream_block (30 samples, 0.93%)</title><rect x="77.4543%" y="277" width="0.9291%" height="15" fill="rgb(229,75,37)" fg:x="2501" fg:w="30"/><text x="77.7043%" y="287.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (30 samples, 0.93%)</title><rect x="77.4543%" y="261" width="0.9291%" height="15" fill="rgb(252,64,23)" fg:x="2501" fg:w="30"/><text x="77.7043%" y="271.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (30 samples, 0.93%)</title><rect x="77.4543%" y="245" width="0.9291%" height="15" fill="rgb(232,162,48)" fg:x="2501" fg:w="30"/><text x="77.7043%" y="255.50"></text></g><g><title>chacha20::backends::sse2::inner (29 samples, 0.90%)</title><rect x="77.4853%" y="229" width="0.8981%" height="15" fill="rgb(246,160,12)" fg:x="2502" fg:w="29"/><text x="77.7353%" y="239.50"></text></g><g><title>&lt;cipher::stream_core::WriteBlockCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (28 samples, 0.87%)</title><rect x="77.5163%" y="213" width="0.8671%" height="15" fill="rgb(247,166,0)" fg:x="2503" fg:w="28"/><text x="77.7663%" y="223.50"></text></g><g><title>&lt;chacha20::backends::sse2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (28 samples, 0.87%)</title><rect x="77.5163%" y="197" width="0.8671%" height="15" fill="rgb(249,219,21)" fg:x="2503" fg:w="28"/><text x="77.7663%" y="207.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.03%)</title><rect x="78.3524%" y="181" width="0.0310%" height="15" fill="rgb(205,209,3)" fg:x="2530" fg:w="1"/><text x="78.6024%" y="191.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.03%)</title><rect x="78.3524%" y="165" width="0.0310%" height="15" fill="rgb(243,44,1)" fg:x="2530" fg:w="1"/><text x="78.6024%" y="175.50"></text></g><g><title>core::mem::replace (1 samples, 0.03%)</title><rect x="78.3524%" y="149" width="0.0310%" height="15" fill="rgb(206,159,16)" fg:x="2530" fg:w="1"/><text x="78.6024%" y="159.50"></text></g><g><title>core::ptr::read (1 samples, 0.03%)</title><rect x="78.3524%" y="133" width="0.0310%" height="15" fill="rgb(244,77,30)" fg:x="2530" fg:w="1"/><text x="78.6024%" y="143.50"></text></g><g><title>cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt;::check_remaining (2 samples, 0.06%)</title><rect x="78.3834%" y="277" width="0.0619%" height="15" fill="rgb(218,69,12)" fg:x="2531" fg:w="2"/><text x="78.6334%" y="287.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.03%)</title><rect x="78.6621%" y="229" width="0.0310%" height="15" fill="rgb(212,87,7)" fg:x="2540" fg:w="1"/><text x="78.9121%" y="239.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (2,218 samples, 68.69%)</title><rect x="10.0960%" y="325" width="68.6900%" height="15" fill="rgb(245,114,25)" fg:x="326" fg:w="2218"/><text x="10.3460%" y="335.50">cipher::stream::StreamCipher::apply_keystream</text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (2,218 samples, 68.69%)</title><rect x="10.0960%" y="309" width="68.6900%" height="15" fill="rgb(210,61,42)" fg:x="326" fg:w="2218"/><text x="10.3460%" y="319.50">cipher::stream::StreamCipher::try_apply_keystream</text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (2,218 samples, 68.69%)</title><rect x="10.0960%" y="293" width="68.6900%" height="15" fill="rgb(211,52,33)" fg:x="326" fg:w="2218"/><text x="10.3460%" y="303.50">&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout</text></g><g><title>inout::inout_buf::InOutBuf&lt;u8&gt;::xor_in2out (11 samples, 0.34%)</title><rect x="78.4453%" y="277" width="0.3407%" height="15" fill="rgb(234,58,33)" fg:x="2533" fg:w="11"/><text x="78.6953%" y="287.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (7 samples, 0.22%)</title><rect x="78.5692%" y="261" width="0.2168%" height="15" fill="rgb(220,115,36)" fg:x="2537" fg:w="7"/><text x="78.8192%" y="271.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (5 samples, 0.15%)</title><rect x="78.6312%" y="245" width="0.1548%" height="15" fill="rgb(243,153,54)" fg:x="2539" fg:w="5"/><text x="78.8812%" y="255.50"></text></g><g><title>core::mem::replace (3 samples, 0.09%)</title><rect x="78.6931%" y="229" width="0.0929%" height="15" fill="rgb(251,47,18)" fg:x="2541" fg:w="3"/><text x="78.9431%" y="239.50"></text></g><g><title>core::ptr::read (3 samples, 0.09%)</title><rect x="78.6931%" y="213" width="0.0929%" height="15" fill="rgb(242,102,42)" fg:x="2541" fg:w="3"/><text x="78.9431%" y="223.50"></text></g><g><title>&lt;Z as zeroize::Zeroize&gt;::zeroize (2 samples, 0.06%)</title><rect x="78.7860%" y="293" width="0.0619%" height="15" fill="rgb(234,31,38)" fg:x="2544" fg:w="2"/><text x="79.0360%" y="303.50"></text></g><g><title>zeroize::atomic_fence (1 samples, 0.03%)</title><rect x="78.8170%" y="277" width="0.0310%" height="15" fill="rgb(221,117,51)" fg:x="2545" fg:w="1"/><text x="79.0670%" y="287.50"></text></g><g><title>core::sync::atomic::compiler_fence (1 samples, 0.03%)</title><rect x="78.8170%" y="261" width="0.0310%" height="15" fill="rgb(212,20,18)" fg:x="2545" fg:w="1"/><text x="79.0670%" y="271.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (3 samples, 0.09%)</title><rect x="78.9099%" y="229" width="0.0929%" height="15" fill="rgb(245,133,36)" fg:x="2548" fg:w="3"/><text x="79.1599%" y="239.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.03%)</title><rect x="79.0028%" y="229" width="0.0310%" height="15" fill="rgb(212,6,19)" fg:x="2551" fg:w="1"/><text x="79.2528%" y="239.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (8 samples, 0.25%)</title><rect x="78.8789%" y="261" width="0.2478%" height="15" fill="rgb(218,1,36)" fg:x="2547" fg:w="8"/><text x="79.1289%" y="271.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (8 samples, 0.25%)</title><rect x="78.8789%" y="245" width="0.2478%" height="15" fill="rgb(246,84,54)" fg:x="2547" fg:w="8"/><text x="79.1289%" y="255.50"></text></g><g><title>core::mem::replace (3 samples, 0.09%)</title><rect x="79.0338%" y="229" width="0.0929%" height="15" fill="rgb(242,110,6)" fg:x="2552" fg:w="3"/><text x="79.2838%" y="239.50"></text></g><g><title>core::ptr::read (2 samples, 0.06%)</title><rect x="79.0647%" y="213" width="0.0619%" height="15" fill="rgb(214,47,5)" fg:x="2553" fg:w="2"/><text x="79.3147%" y="223.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (2 samples, 0.06%)</title><rect x="79.1267%" y="261" width="0.0619%" height="15" fill="rgb(218,159,25)" fg:x="2555" fg:w="2"/><text x="79.3767%" y="271.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.43%)</title><rect x="78.7860%" y="309" width="0.4336%" height="15" fill="rgb(215,211,28)" fg:x="2544" fg:w="14"/><text x="79.0360%" y="319.50"></text></g><g><title>&lt;[Z] as zeroize::Zeroize&gt;::zeroize (12 samples, 0.37%)</title><rect x="78.8479%" y="293" width="0.3716%" height="15" fill="rgb(238,59,32)" fg:x="2546" fg:w="12"/><text x="79.0979%" y="303.50"></text></g><g><title>zeroize::volatile_set (12 samples, 0.37%)</title><rect x="78.8479%" y="277" width="0.3716%" height="15" fill="rgb(226,82,3)" fg:x="2546" fg:w="12"/><text x="79.0979%" y="287.50"></text></g><g><title>core::ptr::write_volatile (1 samples, 0.03%)</title><rect x="79.1886%" y="261" width="0.0310%" height="15" fill="rgb(240,164,32)" fg:x="2557" fg:w="1"/><text x="79.4386%" y="271.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="79.3434%" y="229" width="0.0310%" height="15" fill="rgb(232,46,7)" fg:x="2562" fg:w="1"/><text x="79.5934%" y="239.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="79.3434%" y="213" width="0.0310%" height="15" fill="rgb(229,129,53)" fg:x="2562" fg:w="1"/><text x="79.5934%" y="223.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (1 samples, 0.03%)</title><rect x="79.3434%" y="197" width="0.0310%" height="15" fill="rgb(234,188,29)" fg:x="2562" fg:w="1"/><text x="79.5934%" y="207.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;Z&gt; as zeroize::Zeroize&gt;::zeroize (6 samples, 0.19%)</title><rect x="79.2505%" y="245" width="0.1858%" height="15" fill="rgb(246,141,4)" fg:x="2559" fg:w="6"/><text x="79.5005%" y="255.50"></text></g><g><title>&lt;Z as zeroize::Zeroize&gt;::zeroize (2 samples, 0.06%)</title><rect x="79.3744%" y="229" width="0.0619%" height="15" fill="rgb(229,23,39)" fg:x="2563" fg:w="2"/><text x="79.6244%" y="239.50"></text></g><g><title>zeroize::atomic_fence (1 samples, 0.03%)</title><rect x="79.4054%" y="213" width="0.0310%" height="15" fill="rgb(206,12,3)" fg:x="2564" fg:w="1"/><text x="79.6554%" y="223.50"></text></g><g><title>core::sync::atomic::compiler_fence (1 samples, 0.03%)</title><rect x="79.4054%" y="197" width="0.0310%" height="15" fill="rgb(252,226,20)" fg:x="2564" fg:w="1"/><text x="79.6554%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;chacha20::xchacha::XChaChaCore&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm,typenum::bit::B1&gt;,typenum::bit::B0&gt;,typenum::bit::B1&gt;,typenum::bit::B0&gt;&gt;&gt;&gt; (22 samples, 0.68%)</title><rect x="78.7860%" y="325" width="0.6813%" height="15" fill="rgb(216,123,35)" fg:x="2544" fg:w="22"/><text x="79.0360%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;chacha20::xchacha::XChaChaCore&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm,typenum::bit::B1&gt;,typenum::bit::B0&gt;,typenum::bit::B1&gt;,typenum::bit::B0&gt;&gt;&gt; (8 samples, 0.25%)</title><rect x="79.2196%" y="309" width="0.2478%" height="15" fill="rgb(212,68,40)" fg:x="2558" fg:w="8"/><text x="79.4696%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;chacha20::ChaChaCore&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm,typenum::bit::B1&gt;,typenum::bit::B0&gt;,typenum::bit::B1&gt;,typenum::bit::B0&gt;&gt;&gt; (8 samples, 0.25%)</title><rect x="79.2196%" y="293" width="0.2478%" height="15" fill="rgb(254,125,32)" fg:x="2558" fg:w="8"/><text x="79.4696%" y="303.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.22%)</title><rect x="79.2505%" y="277" width="0.2168%" height="15" fill="rgb(253,97,22)" fg:x="2559" fg:w="7"/><text x="79.5005%" y="287.50"></text></g><g><title>&lt;[Z: N] as zeroize::Zeroize&gt;::zeroize (7 samples, 0.22%)</title><rect x="79.2505%" y="261" width="0.2168%" height="15" fill="rgb(241,101,14)" fg:x="2559" fg:w="7"/><text x="79.5005%" y="271.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (1 samples, 0.03%)</title><rect x="79.4364%" y="245" width="0.0310%" height="15" fill="rgb(238,103,29)" fg:x="2565" fg:w="1"/><text x="79.6864%" y="255.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.03%)</title><rect x="79.4673%" y="309" width="0.0310%" height="15" fill="rgb(233,195,47)" fg:x="2566" fg:w="1"/><text x="79.7173%" y="319.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (2 samples, 0.06%)</title><rect x="79.4983%" y="309" width="0.0619%" height="15" fill="rgb(246,218,30)" fg:x="2567" fg:w="2"/><text x="79.7483%" y="319.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.03%)</title><rect x="79.5293%" y="293" width="0.0310%" height="15" fill="rgb(219,145,47)" fg:x="2568" fg:w="1"/><text x="79.7793%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (5 samples, 0.15%)</title><rect x="79.5602%" y="229" width="0.1548%" height="15" fill="rgb(243,12,26)" fg:x="2569" fg:w="5"/><text x="79.8102%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (5 samples, 0.15%)</title><rect x="79.5602%" y="213" width="0.1548%" height="15" fill="rgb(214,87,16)" fg:x="2569" fg:w="5"/><text x="79.8102%" y="223.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (4 samples, 0.12%)</title><rect x="79.5912%" y="197" width="0.1239%" height="15" fill="rgb(208,99,42)" fg:x="2570" fg:w="4"/><text x="79.8412%" y="207.50"></text></g><g><title>core::ptr::write (1 samples, 0.03%)</title><rect x="79.6841%" y="181" width="0.0310%" height="15" fill="rgb(253,99,2)" fg:x="2573" fg:w="1"/><text x="79.9341%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (6 samples, 0.19%)</title><rect x="79.5602%" y="277" width="0.1858%" height="15" fill="rgb(220,168,23)" fg:x="2569" fg:w="6"/><text x="79.8102%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.19%)</title><rect x="79.5602%" y="261" width="0.1858%" height="15" fill="rgb(242,38,24)" fg:x="2569" fg:w="6"/><text x="79.8102%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (6 samples, 0.19%)</title><rect x="79.5602%" y="245" width="0.1858%" height="15" fill="rgb(225,182,9)" fg:x="2569" fg:w="6"/><text x="79.8102%" y="255.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="79.7151%" y="229" width="0.0310%" height="15" fill="rgb(243,178,37)" fg:x="2574" fg:w="1"/><text x="79.9651%" y="239.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (1 samples, 0.03%)</title><rect x="79.7151%" y="213" width="0.0310%" height="15" fill="rgb(232,139,19)" fg:x="2574" fg:w="1"/><text x="79.9651%" y="223.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.03%)</title><rect x="79.7151%" y="197" width="0.0310%" height="15" fill="rgb(225,201,24)" fg:x="2574" fg:w="1"/><text x="79.9651%" y="207.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (8 samples, 0.25%)</title><rect x="79.5602%" y="309" width="0.2478%" height="15" fill="rgb(221,47,46)" fg:x="2569" fg:w="8"/><text x="79.8102%" y="319.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (8 samples, 0.25%)</title><rect x="79.5602%" y="293" width="0.2478%" height="15" fill="rgb(249,23,13)" fg:x="2569" fg:w="8"/><text x="79.8102%" y="303.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::iter_position (2 samples, 0.06%)</title><rect x="79.7461%" y="277" width="0.0619%" height="15" fill="rgb(219,9,5)" fg:x="2575" fg:w="2"/><text x="79.9961%" y="287.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.15%)</title><rect x="79.9628%" y="245" width="0.1548%" height="15" fill="rgb(254,171,16)" fg:x="2582" fg:w="5"/><text x="80.2128%" y="255.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (5 samples, 0.15%)</title><rect x="79.9628%" y="229" width="0.1548%" height="15" fill="rgb(230,171,20)" fg:x="2582" fg:w="5"/><text x="80.2128%" y="239.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.03%)</title><rect x="80.0867%" y="213" width="0.0310%" height="15" fill="rgb(210,71,41)" fg:x="2586" fg:w="1"/><text x="80.3367%" y="223.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for &amp;[T: N]&gt;::try_from (23 samples, 0.71%)</title><rect x="85.3825%" y="181" width="0.7123%" height="15" fill="rgb(206,173,20)" fg:x="2757" fg:w="23"/><text x="85.6325%" y="191.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (133 samples, 4.12%)</title><rect x="84.0198%" y="213" width="4.1189%" height="15" fill="rgb(233,88,34)" fg:x="2713" fg:w="133"/><text x="84.2698%" y="223.50">&lt;T a..</text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (110 samples, 3.41%)</title><rect x="84.7321%" y="197" width="3.4066%" height="15" fill="rgb(223,209,46)" fg:x="2736" fg:w="110"/><text x="84.9821%" y="207.50">cor..</text></g><g><title>core::result::Result&lt;T,E&gt;::map (66 samples, 2.04%)</title><rect x="86.0948%" y="181" width="2.0440%" height="15" fill="rgb(250,43,18)" fg:x="2780" fg:w="66"/><text x="86.3448%" y="191.50">c..</text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from::{{closure}} (12 samples, 0.37%)</title><rect x="87.7671%" y="165" width="0.3716%" height="15" fill="rgb(208,13,10)" fg:x="2834" fg:w="12"/><text x="88.0171%" y="175.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::cast (2 samples, 0.06%)</title><rect x="88.3246%" y="165" width="0.0619%" height="15" fill="rgb(212,200,36)" fg:x="2852" fg:w="2"/><text x="88.5746%" y="175.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::Deref&gt;::deref (11 samples, 0.34%)</title><rect x="88.1387%" y="213" width="0.3407%" height="15" fill="rgb(225,90,30)" fg:x="2846" fg:w="11"/><text x="88.3887%" y="223.50"></text></g><g><title>core::slice::raw::from_raw_parts (8 samples, 0.25%)</title><rect x="88.2317%" y="197" width="0.2478%" height="15" fill="rgb(236,182,39)" fg:x="2849" fg:w="8"/><text x="88.4817%" y="207.50"></text></g><g><title>core::ptr::slice_from_raw_parts (5 samples, 0.15%)</title><rect x="88.3246%" y="181" width="0.1548%" height="15" fill="rgb(212,144,35)" fg:x="2852" fg:w="5"/><text x="88.5746%" y="191.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (3 samples, 0.09%)</title><rect x="88.3865%" y="165" width="0.0929%" height="15" fill="rgb(228,63,44)" fg:x="2854" fg:w="3"/><text x="88.6365%" y="175.50"></text></g><g><title>core::convert::num::&lt;impl core::convert::From&lt;u32&gt; for u64&gt;::from (4 samples, 0.12%)</title><rect x="88.4794%" y="213" width="0.1239%" height="15" fill="rgb(228,109,6)" fg:x="2857" fg:w="4"/><text x="88.7294%" y="223.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_le_bytes (40 samples, 1.24%)</title><rect x="88.6033%" y="213" width="1.2388%" height="15" fill="rgb(238,117,24)" fg:x="2861" fg:w="40"/><text x="88.8533%" y="223.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_ne_bytes (18 samples, 0.56%)</title><rect x="89.2846%" y="197" width="0.5574%" height="15" fill="rgb(242,26,26)" fg:x="2883" fg:w="18"/><text x="89.5346%" y="207.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (49 samples, 1.52%)</title><rect x="89.8421%" y="213" width="1.5175%" height="15" fill="rgb(221,92,48)" fg:x="2901" fg:w="49"/><text x="90.0921%" y="223.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (8 samples, 0.25%)</title><rect x="92.6603%" y="165" width="0.2478%" height="15" fill="rgb(209,209,32)" fg:x="2992" fg:w="8"/><text x="92.9103%" y="175.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (7 samples, 0.22%)</title><rect x="92.6912%" y="149" width="0.2168%" height="15" fill="rgb(221,70,22)" fg:x="2993" fg:w="7"/><text x="92.9412%" y="159.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const [T]&gt;::as_ptr (1 samples, 0.03%)</title><rect x="92.9080%" y="165" width="0.0310%" height="15" fill="rgb(248,145,5)" fg:x="3000" fg:w="1"/><text x="93.1580%" y="175.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::cast (4 samples, 0.12%)</title><rect x="92.9700%" y="149" width="0.1239%" height="15" fill="rgb(226,116,26)" fg:x="3002" fg:w="4"/><text x="93.2200%" y="159.50"></text></g><g><title>&lt;poly1305::backend::soft::State as universal_hash::UhfBackend&gt;::proc_block (437 samples, 13.53%)</title><rect x="80.1177%" y="245" width="13.5336%" height="15" fill="rgb(244,5,17)" fg:x="2587" fg:w="437"/><text x="80.3677%" y="255.50">&lt;poly1305::backend::..</text></g><g><title>poly1305::backend::soft::State::compute_block (437 samples, 13.53%)</title><rect x="80.1177%" y="229" width="13.5336%" height="15" fill="rgb(252,159,33)" fg:x="2587" fg:w="437"/><text x="80.3677%" y="239.50">poly1305::backend::s..</text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (74 samples, 2.29%)</title><rect x="91.3596%" y="213" width="2.2917%" height="15" fill="rgb(206,71,0)" fg:x="2950" fg:w="74"/><text x="91.6096%" y="223.50">c..</text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (66 samples, 2.04%)</title><rect x="91.6073%" y="197" width="2.0440%" height="15" fill="rgb(233,118,54)" fg:x="2958" fg:w="66"/><text x="91.8573%" y="207.50">&lt;..</text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (54 samples, 1.67%)</title><rect x="91.9789%" y="181" width="1.6723%" height="15" fill="rgb(234,83,48)" fg:x="2970" fg:w="54"/><text x="92.2289%" y="191.50"></text></g><g><title>core::ptr::slice_from_raw_parts (23 samples, 0.71%)</title><rect x="92.9390%" y="165" width="0.7123%" height="15" fill="rgb(228,3,54)" fg:x="3001" fg:w="23"/><text x="93.1890%" y="175.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (18 samples, 0.56%)</title><rect x="93.0938%" y="149" width="0.5574%" height="15" fill="rgb(226,155,13)" fg:x="3006" fg:w="18"/><text x="93.3438%" y="159.50"></text></g><g><title>universal_hash::UniversalHash::update (448 samples, 13.87%)</title><rect x="79.8080%" y="309" width="13.8743%" height="15" fill="rgb(241,28,37)" fg:x="2577" fg:w="448"/><text x="80.0580%" y="319.50">universal_hash::Unive..</text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (447 samples, 13.84%)</title><rect x="79.8390%" y="293" width="13.8433%" height="15" fill="rgb(233,93,10)" fg:x="2578" fg:w="447"/><text x="80.0890%" y="303.50">&lt;poly1305::Poly1305 a..</text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (447 samples, 13.84%)</title><rect x="79.8390%" y="277" width="13.8433%" height="15" fill="rgb(225,113,19)" fg:x="2578" fg:w="447"/><text x="80.0890%" y="287.50">&lt;poly1305::backend::a..</text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (445 samples, 13.78%)</title><rect x="79.9009%" y="261" width="13.7814%" height="15" fill="rgb(241,2,18)" fg:x="2580" fg:w="445"/><text x="80.1509%" y="271.50">&lt;universal_hash::Univ..</text></g><g><title>core::slice::iter::&lt;impl core::iter::traits::collect::IntoIterator for &amp;[T]&gt;::into_iter (1 samples, 0.03%)</title><rect x="93.6513%" y="245" width="0.0310%" height="15" fill="rgb(228,207,21)" fg:x="3024" fg:w="1"/><text x="93.9013%" y="255.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.03%)</title><rect x="93.6513%" y="229" width="0.0310%" height="15" fill="rgb(213,211,35)" fg:x="3024" fg:w="1"/><text x="93.9013%" y="239.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="93.6513%" y="213" width="0.0310%" height="15" fill="rgb(209,83,10)" fg:x="3024" fg:w="1"/><text x="93.9013%" y="223.50"></text></g><g><title>universal_hash::UniversalHash::update_padded (461 samples, 14.28%)</title><rect x="79.4673%" y="325" width="14.2769%" height="15" fill="rgb(209,164,1)" fg:x="2566" fg:w="461"/><text x="79.7173%" y="335.50">universal_hash::Univer..</text></g><g><title>universal_hash::to_blocks (2 samples, 0.06%)</title><rect x="93.6823%" y="309" width="0.0619%" height="15" fill="rgb(213,184,43)" fg:x="3025" fg:w="2"/><text x="93.9323%" y="319.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at (1 samples, 0.03%)</title><rect x="93.7132%" y="293" width="0.0310%" height="15" fill="rgb(231,61,34)" fg:x="3026" fg:w="1"/><text x="93.9632%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.09%)</title><rect x="93.7752%" y="293" width="0.0929%" height="15" fill="rgb(235,75,3)" fg:x="3028" fg:w="3"/><text x="94.0252%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (2 samples, 0.06%)</title><rect x="93.8061%" y="277" width="0.0619%" height="15" fill="rgb(220,106,47)" fg:x="3029" fg:w="2"/><text x="94.0561%" y="287.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (1 samples, 0.03%)</title><rect x="93.8371%" y="261" width="0.0310%" height="15" fill="rgb(210,196,33)" fg:x="3030" fg:w="1"/><text x="94.0871%" y="271.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.03%)</title><rect x="93.8371%" y="245" width="0.0310%" height="15" fill="rgb(229,154,42)" fg:x="3030" fg:w="1"/><text x="94.0871%" y="255.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.03%)</title><rect x="93.8371%" y="229" width="0.0310%" height="15" fill="rgb(228,114,26)" fg:x="3030" fg:w="1"/><text x="94.0871%" y="239.50"></text></g><g><title>&lt;u8 as subtle::ConstantTimeEq&gt;::ct_eq (3 samples, 0.09%)</title><rect x="93.8681%" y="293" width="0.0929%" height="15" fill="rgb(208,144,1)" fg:x="3031" fg:w="3"/><text x="94.1181%" y="303.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.06%)</title><rect x="93.8990%" y="277" width="0.0619%" height="15" fill="rgb(239,112,37)" fg:x="3032" fg:w="2"/><text x="94.1490%" y="287.50"></text></g><g><title>&lt;subtle::Choice as core::convert::From&lt;u8&gt;&gt;::from (2 samples, 0.06%)</title><rect x="93.8990%" y="261" width="0.0619%" height="15" fill="rgb(210,96,50)" fg:x="3032" fg:w="2"/><text x="94.1490%" y="271.50"></text></g><g><title>subtle::black_box (2 samples, 0.06%)</title><rect x="93.8990%" y="245" width="0.0619%" height="15" fill="rgb(222,178,2)" fg:x="3032" fg:w="2"/><text x="94.1490%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (3 samples, 0.09%)</title><rect x="93.9610%" y="293" width="0.0929%" height="15" fill="rgb(226,74,18)" fg:x="3034" fg:w="3"/><text x="94.2110%" y="303.50"></text></g><g><title>core::iter::adapters::zip::Zip&lt;A,B&gt;::new (2 samples, 0.06%)</title><rect x="93.9919%" y="277" width="0.0619%" height="15" fill="rgb(225,67,54)" fg:x="3035" fg:w="2"/><text x="94.2419%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (2 samples, 0.06%)</title><rect x="93.9919%" y="261" width="0.0619%" height="15" fill="rgb(251,92,32)" fg:x="3035" fg:w="2"/><text x="94.2419%" y="271.50"></text></g><g><title>core::cmp::min (2 samples, 0.06%)</title><rect x="93.9919%" y="245" width="0.0619%" height="15" fill="rgb(228,149,22)" fg:x="3035" fg:w="2"/><text x="94.2419%" y="255.50"></text></g><g><title>core::cmp::Ord::min (2 samples, 0.06%)</title><rect x="93.9919%" y="229" width="0.0619%" height="15" fill="rgb(243,54,13)" fg:x="3035" fg:w="2"/><text x="94.2419%" y="239.50"></text></g><g><title>core::cmp::min_by (2 samples, 0.06%)</title><rect x="93.9919%" y="213" width="0.0619%" height="15" fill="rgb(243,180,28)" fg:x="3035" fg:w="2"/><text x="94.2419%" y="223.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.03%)</title><rect x="94.0229%" y="197" width="0.0310%" height="15" fill="rgb(208,167,24)" fg:x="3036" fg:w="1"/><text x="94.2729%" y="207.50"></text></g><g><title>&lt;[T] as subtle::ConstantTimeEq&gt;::ct_eq (11 samples, 0.34%)</title><rect x="93.7442%" y="309" width="0.3407%" height="15" fill="rgb(245,73,45)" fg:x="3027" fg:w="11"/><text x="93.9942%" y="319.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.03%)</title><rect x="94.0539%" y="293" width="0.0310%" height="15" fill="rgb(237,203,48)" fg:x="3037" fg:w="1"/><text x="94.3039%" y="303.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="94.0539%" y="277" width="0.0310%" height="15" fill="rgb(211,197,16)" fg:x="3037" fg:w="1"/><text x="94.3039%" y="287.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.03%)</title><rect x="94.1158%" y="261" width="0.0310%" height="15" fill="rgb(243,99,51)" fg:x="3039" fg:w="1"/><text x="94.3658%" y="271.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.03%)</title><rect x="94.1158%" y="245" width="0.0310%" height="15" fill="rgb(215,123,29)" fg:x="3039" fg:w="1"/><text x="94.3658%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (4 samples, 0.12%)</title><rect x="94.1778%" y="181" width="0.1239%" height="15" fill="rgb(239,186,37)" fg:x="3041" fg:w="4"/><text x="94.4278%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (4 samples, 0.12%)</title><rect x="94.1778%" y="165" width="0.1239%" height="15" fill="rgb(252,136,39)" fg:x="3041" fg:w="4"/><text x="94.4278%" y="175.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (2 samples, 0.06%)</title><rect x="94.2397%" y="149" width="0.0619%" height="15" fill="rgb(223,213,32)" fg:x="3043" fg:w="2"/><text x="94.4897%" y="159.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (7 samples, 0.22%)</title><rect x="94.1468%" y="229" width="0.2168%" height="15" fill="rgb(233,115,5)" fg:x="3040" fg:w="7"/><text x="94.3968%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.22%)</title><rect x="94.1468%" y="213" width="0.2168%" height="15" fill="rgb(207,226,44)" fg:x="3040" fg:w="7"/><text x="94.3968%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (7 samples, 0.22%)</title><rect x="94.1468%" y="197" width="0.2168%" height="15" fill="rgb(208,126,0)" fg:x="3040" fg:w="7"/><text x="94.3968%" y="207.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.06%)</title><rect x="94.3016%" y="181" width="0.0619%" height="15" fill="rgb(244,66,21)" fg:x="3045" fg:w="2"/><text x="94.5516%" y="191.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (1 samples, 0.03%)</title><rect x="94.3326%" y="165" width="0.0310%" height="15" fill="rgb(222,97,12)" fg:x="3046" fg:w="1"/><text x="94.5826%" y="175.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.03%)</title><rect x="94.3326%" y="149" width="0.0310%" height="15" fill="rgb(219,213,19)" fg:x="3046" fg:w="1"/><text x="94.5826%" y="159.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.03%)</title><rect x="94.3326%" y="133" width="0.0310%" height="15" fill="rgb(252,169,30)" fg:x="3046" fg:w="1"/><text x="94.5826%" y="143.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::decrypt_in_place_detached (2,734 samples, 84.67%)</title><rect x="9.7244%" y="341" width="84.6702%" height="15" fill="rgb(206,32,51)" fg:x="314" fg:w="2734"/><text x="9.9744%" y="351.50">chacha20poly1305::cipher::Cipher&lt;C&gt;::decrypt_in_place_detached</text></g><g><title>universal_hash::UniversalHash::verify (21 samples, 0.65%)</title><rect x="93.7442%" y="325" width="0.6504%" height="15" fill="rgb(250,172,42)" fg:x="3027" fg:w="21"/><text x="93.9942%" y="335.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::finalize (10 samples, 0.31%)</title><rect x="94.0849%" y="309" width="0.3097%" height="15" fill="rgb(209,34,43)" fg:x="3038" fg:w="10"/><text x="94.3349%" y="319.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::finalize (10 samples, 0.31%)</title><rect x="94.0849%" y="293" width="0.3097%" height="15" fill="rgb(223,11,35)" fg:x="3038" fg:w="10"/><text x="94.3349%" y="303.50"></text></g><g><title>poly1305::backend::soft::State::finalize_mut (10 samples, 0.31%)</title><rect x="94.0849%" y="277" width="0.3097%" height="15" fill="rgb(251,219,26)" fg:x="3038" fg:w="10"/><text x="94.3349%" y="287.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (8 samples, 0.25%)</title><rect x="94.1468%" y="261" width="0.2478%" height="15" fill="rgb(231,119,3)" fg:x="3040" fg:w="8"/><text x="94.3968%" y="271.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (8 samples, 0.25%)</title><rect x="94.1468%" y="245" width="0.2478%" height="15" fill="rgb(216,97,11)" fg:x="3040" fg:w="8"/><text x="94.3968%" y="255.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (1 samples, 0.03%)</title><rect x="94.3636%" y="229" width="0.0310%" height="15" fill="rgb(223,59,9)" fg:x="3047" fg:w="1"/><text x="94.6136%" y="239.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (2 samples, 0.06%)</title><rect x="94.5804%" y="261" width="0.0619%" height="15" fill="rgb(233,93,31)" fg:x="3054" fg:w="2"/><text x="94.8304%" y="271.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (8 samples, 0.25%)</title><rect x="94.4255%" y="293" width="0.2478%" height="15" fill="rgb(239,81,33)" fg:x="3049" fg:w="8"/><text x="94.6755%" y="303.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (6 samples, 0.19%)</title><rect x="94.4875%" y="277" width="0.1858%" height="15" fill="rgb(213,120,34)" fg:x="3051" fg:w="6"/><text x="94.7375%" y="287.50"></text></g><g><title>core::mem::replace (1 samples, 0.03%)</title><rect x="94.6423%" y="261" width="0.0310%" height="15" fill="rgb(243,49,53)" fg:x="3056" fg:w="1"/><text x="94.8923%" y="271.50"></text></g><g><title>core::ptr::read (1 samples, 0.03%)</title><rect x="94.6423%" y="245" width="0.0310%" height="15" fill="rgb(247,216,33)" fg:x="3056" fg:w="1"/><text x="94.8923%" y="255.50"></text></g><g><title>&lt;[Z] as zeroize::Zeroize&gt;::zeroize (10 samples, 0.31%)</title><rect x="94.3945%" y="325" width="0.3097%" height="15" fill="rgb(226,26,14)" fg:x="3048" fg:w="10"/><text x="94.6445%" y="335.50"></text></g><g><title>zeroize::volatile_set (10 samples, 0.31%)</title><rect x="94.3945%" y="309" width="0.3097%" height="15" fill="rgb(215,49,53)" fg:x="3048" fg:w="10"/><text x="94.6445%" y="319.50"></text></g><g><title>core::ptr::write_volatile (1 samples, 0.03%)</title><rect x="94.6733%" y="293" width="0.0310%" height="15" fill="rgb(245,162,40)" fg:x="3057" fg:w="1"/><text x="94.9233%" y="303.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="94.7042%" y="293" width="0.0310%" height="15" fill="rgb(229,68,17)" fg:x="3058" fg:w="1"/><text x="94.9542%" y="303.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (2 samples, 0.06%)</title><rect x="94.7352%" y="293" width="0.0619%" height="15" fill="rgb(213,182,10)" fg:x="3059" fg:w="2"/><text x="94.9852%" y="303.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="94.7662%" y="277" width="0.0310%" height="15" fill="rgb(245,125,30)" fg:x="3060" fg:w="1"/><text x="95.0162%" y="287.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (4 samples, 0.12%)</title><rect x="94.8281%" y="277" width="0.1239%" height="15" fill="rgb(232,202,2)" fg:x="3062" fg:w="4"/><text x="95.0781%" y="287.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (3 samples, 0.09%)</title><rect x="94.8591%" y="261" width="0.0929%" height="15" fill="rgb(237,140,51)" fg:x="3063" fg:w="3"/><text x="95.1091%" y="271.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (2 samples, 0.06%)</title><rect x="94.8901%" y="245" width="0.0619%" height="15" fill="rgb(236,157,25)" fg:x="3064" fg:w="2"/><text x="95.1401%" y="255.50"></text></g><g><title>&lt;poly1305::backend::soft::State as core::default::Default&gt;::default (2 samples, 0.06%)</title><rect x="94.9520%" y="277" width="0.0619%" height="15" fill="rgb(219,209,0)" fg:x="3066" fg:w="2"/><text x="95.2020%" y="287.50"></text></g><g><title>core::array::&lt;impl core::default::Default for [T: _]&gt;::default (1 samples, 0.03%)</title><rect x="94.9830%" y="261" width="0.0310%" height="15" fill="rgb(240,116,54)" fg:x="3067" fg:w="1"/><text x="95.2330%" y="271.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (2 samples, 0.06%)</title><rect x="95.0139%" y="277" width="0.0619%" height="15" fill="rgb(216,10,36)" fg:x="3068" fg:w="2"/><text x="95.2639%" y="287.50"></text></g><g><title>&lt;poly1305::Poly1305 as crypto_common::KeyInit&gt;::new (14 samples, 0.43%)</title><rect x="94.7042%" y="325" width="0.4336%" height="15" fill="rgb(222,72,44)" fg:x="3058" fg:w="14"/><text x="94.9542%" y="335.50"></text></g><g><title>poly1305::backend::autodetect::State::new (14 samples, 0.43%)</title><rect x="94.7042%" y="309" width="0.4336%" height="15" fill="rgb(232,159,9)" fg:x="3058" fg:w="14"/><text x="94.9542%" y="319.50"></text></g><g><title>poly1305::backend::soft::State::new (11 samples, 0.34%)</title><rect x="94.7972%" y="293" width="0.3407%" height="15" fill="rgb(210,39,32)" fg:x="3061" fg:w="11"/><text x="95.0472%" y="303.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 0.06%)</title><rect x="95.0759%" y="277" width="0.0619%" height="15" fill="rgb(216,194,45)" fg:x="3070" fg:w="2"/><text x="95.3259%" y="287.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.06%)</title><rect x="95.0759%" y="261" width="0.0619%" height="15" fill="rgb(218,18,35)" fg:x="3070" fg:w="2"/><text x="95.3259%" y="271.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (2 samples, 0.06%)</title><rect x="95.0759%" y="245" width="0.0619%" height="15" fill="rgb(207,83,51)" fg:x="3070" fg:w="2"/><text x="95.3259%" y="255.50"></text></g><g><title>core::ptr::slice_from_raw_parts (2 samples, 0.06%)</title><rect x="95.0759%" y="229" width="0.0619%" height="15" fill="rgb(225,63,43)" fg:x="3070" fg:w="2"/><text x="95.3259%" y="239.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (2 samples, 0.06%)</title><rect x="95.0759%" y="213" width="0.0619%" height="15" fill="rgb(207,57,36)" fg:x="3070" fg:w="2"/><text x="95.3259%" y="223.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="95.1378%" y="325" width="0.0310%" height="15" fill="rgb(216,99,33)" fg:x="3072" fg:w="1"/><text x="95.3878%" y="335.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.03%)</title><rect x="95.1688%" y="293" width="0.0310%" height="15" fill="rgb(225,42,16)" fg:x="3073" fg:w="1"/><text x="95.4188%" y="303.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (1 samples, 0.03%)</title><rect x="95.2617%" y="213" width="0.0310%" height="15" fill="rgb(220,201,45)" fg:x="3076" fg:w="1"/><text x="95.5117%" y="223.50"></text></g><g><title>&lt;inout::inout_buf::InOutBufIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="95.2617%" y="197" width="0.0310%" height="15" fill="rgb(225,33,4)" fg:x="3076" fg:w="1"/><text x="95.5117%" y="207.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (3 samples, 0.09%)</title><rect x="95.2307%" y="277" width="0.0929%" height="15" fill="rgb(224,33,50)" fg:x="3075" fg:w="3"/><text x="95.4807%" y="287.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (3 samples, 0.09%)</title><rect x="95.2307%" y="261" width="0.0929%" height="15" fill="rgb(246,198,51)" fg:x="3075" fg:w="3"/><text x="95.4807%" y="271.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (3 samples, 0.09%)</title><rect x="95.2307%" y="245" width="0.0929%" height="15" fill="rgb(205,22,4)" fg:x="3075" fg:w="3"/><text x="95.4807%" y="255.50"></text></g><g><title>chacha20::backends::sse2::inner (3 samples, 0.09%)</title><rect x="95.2307%" y="229" width="0.0929%" height="15" fill="rgb(206,3,8)" fg:x="3075" fg:w="3"/><text x="95.4807%" y="239.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.03%)</title><rect x="95.2927%" y="213" width="0.0310%" height="15" fill="rgb(251,23,15)" fg:x="3077" fg:w="1"/><text x="95.5427%" y="223.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_undefined_si128 (1 samples, 0.03%)</title><rect x="95.2927%" y="197" width="0.0310%" height="15" fill="rgb(252,88,28)" fg:x="3077" fg:w="1"/><text x="95.5427%" y="207.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_add_epi32 (7 samples, 0.22%)</title><rect x="96.0669%" y="133" width="0.2168%" height="15" fill="rgb(212,127,14)" fg:x="3102" fg:w="7"/><text x="96.3169%" y="143.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i32x4 (1 samples, 0.03%)</title><rect x="96.2527%" y="117" width="0.0310%" height="15" fill="rgb(247,145,37)" fg:x="3108" fg:w="1"/><text x="96.5027%" y="127.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_slli_epi32 (4 samples, 0.12%)</title><rect x="96.2837%" y="133" width="0.1239%" height="15" fill="rgb(209,117,53)" fg:x="3109" fg:w="4"/><text x="96.5337%" y="143.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i32x4 (1 samples, 0.03%)</title><rect x="96.3766%" y="117" width="0.0310%" height="15" fill="rgb(212,90,42)" fg:x="3112" fg:w="1"/><text x="96.6266%" y="127.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_srli_epi32 (5 samples, 0.15%)</title><rect x="96.4076%" y="133" width="0.1548%" height="15" fill="rgb(218,164,37)" fg:x="3113" fg:w="5"/><text x="96.6576%" y="143.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i32x4 (2 samples, 0.06%)</title><rect x="96.5005%" y="117" width="0.0619%" height="15" fill="rgb(246,65,34)" fg:x="3116" fg:w="2"/><text x="96.7505%" y="127.50"></text></g><g><title>chacha20::backends::sse2::add_xor_rot (40 samples, 1.24%)</title><rect x="95.5094%" y="149" width="1.2388%" height="15" fill="rgb(231,100,33)" fg:x="3084" fg:w="40"/><text x="95.7594%" y="159.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_xor_si128 (6 samples, 0.19%)</title><rect x="96.5624%" y="133" width="0.1858%" height="15" fill="rgb(228,126,14)" fg:x="3118" fg:w="6"/><text x="96.8124%" y="143.50"></text></g><g><title>chacha20::backends::sse2::cols_to_rows (3 samples, 0.09%)</title><rect x="96.7482%" y="149" width="0.0929%" height="15" fill="rgb(215,173,21)" fg:x="3124" fg:w="3"/><text x="96.9982%" y="159.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_shuffle_epi32 (2 samples, 0.06%)</title><rect x="96.7792%" y="133" width="0.0619%" height="15" fill="rgb(210,6,40)" fg:x="3125" fg:w="2"/><text x="97.0292%" y="143.50"></text></g><g><title>chacha20::backends::sse2::double_quarter_round (44 samples, 1.36%)</title><rect x="95.5094%" y="165" width="1.3627%" height="15" fill="rgb(212,48,18)" fg:x="3084" fg:w="44"/><text x="95.7594%" y="175.50"></text></g><g><title>chacha20::backends::sse2::rows_to_cols (1 samples, 0.03%)</title><rect x="96.8411%" y="149" width="0.0310%" height="15" fill="rgb(230,214,11)" fg:x="3127" fg:w="1"/><text x="97.0911%" y="159.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_shuffle_epi32 (1 samples, 0.03%)</title><rect x="96.8411%" y="133" width="0.0310%" height="15" fill="rgb(254,105,39)" fg:x="3127" fg:w="1"/><text x="97.0911%" y="143.50"></text></g><g><title>chacha20::backends::sse2::rounds (48 samples, 1.49%)</title><rect x="95.4475%" y="181" width="1.4865%" height="15" fill="rgb(245,158,5)" fg:x="3082" fg:w="48"/><text x="95.6975%" y="191.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.06%)</title><rect x="96.8721%" y="165" width="0.0619%" height="15" fill="rgb(249,208,11)" fg:x="3128" fg:w="2"/><text x="97.1221%" y="175.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.03%)</title><rect x="96.9031%" y="149" width="0.0310%" height="15" fill="rgb(210,39,28)" fg:x="3129" fg:w="1"/><text x="97.1531%" y="159.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::write_keystream_block (54 samples, 1.67%)</title><rect x="95.3236%" y="277" width="1.6723%" height="15" fill="rgb(211,56,53)" fg:x="3078" fg:w="54"/><text x="95.5736%" y="287.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (54 samples, 1.67%)</title><rect x="95.3236%" y="261" width="1.6723%" height="15" fill="rgb(226,201,30)" fg:x="3078" fg:w="54"/><text x="95.5736%" y="271.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (54 samples, 1.67%)</title><rect x="95.3236%" y="245" width="1.6723%" height="15" fill="rgb(239,101,34)" fg:x="3078" fg:w="54"/><text x="95.5736%" y="255.50"></text></g><g><title>chacha20::backends::sse2::inner (54 samples, 1.67%)</title><rect x="95.3236%" y="229" width="1.6723%" height="15" fill="rgb(226,209,5)" fg:x="3078" fg:w="54"/><text x="95.5736%" y="239.50"></text></g><g><title>&lt;cipher::stream_core::WriteBlockCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (54 samples, 1.67%)</title><rect x="95.3236%" y="213" width="1.6723%" height="15" fill="rgb(250,105,47)" fg:x="3078" fg:w="54"/><text x="95.5736%" y="223.50"></text></g><g><title>&lt;chacha20::backends::sse2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (51 samples, 1.58%)</title><rect x="95.4165%" y="197" width="1.5794%" height="15" fill="rgb(230,72,3)" fg:x="3081" fg:w="51"/><text x="95.6665%" y="207.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.06%)</title><rect x="96.9340%" y="181" width="0.0619%" height="15" fill="rgb(232,218,39)" fg:x="3130" fg:w="2"/><text x="97.1840%" y="191.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.06%)</title><rect x="96.9340%" y="165" width="0.0619%" height="15" fill="rgb(248,166,6)" fg:x="3130" fg:w="2"/><text x="97.1840%" y="175.50"></text></g><g><title>core::mem::replace (1 samples, 0.03%)</title><rect x="96.9650%" y="149" width="0.0310%" height="15" fill="rgb(247,89,20)" fg:x="3131" fg:w="1"/><text x="97.2150%" y="159.50"></text></g><g><title>cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt;::check_remaining (1 samples, 0.03%)</title><rect x="96.9960%" y="277" width="0.0310%" height="15" fill="rgb(248,130,54)" fg:x="3132" fg:w="1"/><text x="97.2460%" y="287.50"></text></g><g><title>cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt;::set_pos_unchecked (1 samples, 0.03%)</title><rect x="97.0269%" y="277" width="0.0310%" height="15" fill="rgb(234,196,4)" fg:x="3133" fg:w="1"/><text x="97.2769%" y="287.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.03%)</title><rect x="97.0579%" y="277" width="0.0310%" height="15" fill="rgb(250,143,31)" fg:x="3134" fg:w="1"/><text x="97.3079%" y="287.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (2 samples, 0.06%)</title><rect x="97.2437%" y="229" width="0.0619%" height="15" fill="rgb(211,110,34)" fg:x="3140" fg:w="2"/><text x="97.4937%" y="239.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (6 samples, 0.19%)</title><rect x="97.1818%" y="261" width="0.1858%" height="15" fill="rgb(215,124,48)" fg:x="3138" fg:w="6"/><text x="97.4318%" y="271.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (5 samples, 0.15%)</title><rect x="97.2128%" y="245" width="0.1548%" height="15" fill="rgb(216,46,13)" fg:x="3139" fg:w="5"/><text x="97.4628%" y="255.50"></text></g><g><title>core::mem::replace (2 samples, 0.06%)</title><rect x="97.3057%" y="229" width="0.0619%" height="15" fill="rgb(205,184,25)" fg:x="3142" fg:w="2"/><text x="97.5557%" y="239.50"></text></g><g><title>core::ptr::read (1 samples, 0.03%)</title><rect x="97.3366%" y="213" width="0.0310%" height="15" fill="rgb(228,1,10)" fg:x="3143" fg:w="1"/><text x="97.5866%" y="223.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (72 samples, 2.23%)</title><rect x="95.1688%" y="325" width="2.2298%" height="15" fill="rgb(213,116,27)" fg:x="3073" fg:w="72"/><text x="95.4188%" y="335.50">c..</text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (72 samples, 2.23%)</title><rect x="95.1688%" y="309" width="2.2298%" height="15" fill="rgb(241,95,50)" fg:x="3073" fg:w="72"/><text x="95.4188%" y="319.50">c..</text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (71 samples, 2.20%)</title><rect x="95.1998%" y="293" width="2.1988%" height="15" fill="rgb(238,48,32)" fg:x="3074" fg:w="71"/><text x="95.4498%" y="303.50">&lt;..</text></g><g><title>inout::inout_buf::InOutBuf&lt;u8&gt;::xor_in2out (10 samples, 0.31%)</title><rect x="97.0889%" y="277" width="0.3097%" height="15" fill="rgb(235,113,49)" fg:x="3135" fg:w="10"/><text x="97.3389%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.03%)</title><rect x="97.3676%" y="261" width="0.0310%" height="15" fill="rgb(205,127,43)" fg:x="3144" fg:w="1"/><text x="97.6176%" y="271.50"></text></g><g><title>generic_array::GenericArray&lt;T,N&gt;::from_slice (3 samples, 0.09%)</title><rect x="97.3986%" y="325" width="0.0929%" height="15" fill="rgb(250,162,2)" fg:x="3145" fg:w="3"/><text x="97.6486%" y="335.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3 samples, 0.09%)</title><rect x="97.3986%" y="309" width="0.0929%" height="15" fill="rgb(220,13,41)" fg:x="3145" fg:w="3"/><text x="97.6486%" y="319.50"></text></g><g><title>&lt;&amp;generic_array::GenericArray&lt;T,N&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (2 samples, 0.06%)</title><rect x="97.4295%" y="293" width="0.0619%" height="15" fill="rgb(249,221,25)" fg:x="3146" fg:w="2"/><text x="97.6795%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (5 samples, 0.15%)</title><rect x="97.5534%" y="245" width="0.1548%" height="15" fill="rgb(215,208,19)" fg:x="3150" fg:w="5"/><text x="97.8034%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (3 samples, 0.09%)</title><rect x="97.6154%" y="229" width="0.0929%" height="15" fill="rgb(236,175,2)" fg:x="3152" fg:w="3"/><text x="97.8654%" y="239.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (2 samples, 0.06%)</title><rect x="97.6463%" y="213" width="0.0619%" height="15" fill="rgb(241,52,2)" fg:x="3153" fg:w="2"/><text x="97.8963%" y="223.50"></text></g><g><title>core::ptr::write (1 samples, 0.03%)</title><rect x="97.6773%" y="197" width="0.0310%" height="15" fill="rgb(248,140,14)" fg:x="3154" fg:w="1"/><text x="97.9273%" y="207.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.03%)</title><rect x="97.7392%" y="229" width="0.0310%" height="15" fill="rgb(253,22,42)" fg:x="3156" fg:w="1"/><text x="97.9892%" y="239.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null::runtime_impl (1 samples, 0.03%)</title><rect x="97.7392%" y="213" width="0.0310%" height="15" fill="rgb(234,61,47)" fg:x="3156" fg:w="1"/><text x="97.9892%" y="223.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::addr (1 samples, 0.03%)</title><rect x="97.7392%" y="197" width="0.0310%" height="15" fill="rgb(208,226,15)" fg:x="3156" fg:w="1"/><text x="97.9892%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (10 samples, 0.31%)</title><rect x="97.4915%" y="293" width="0.3097%" height="15" fill="rgb(217,221,4)" fg:x="3148" fg:w="10"/><text x="97.7415%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10 samples, 0.31%)</title><rect x="97.4915%" y="277" width="0.3097%" height="15" fill="rgb(212,174,34)" fg:x="3148" fg:w="10"/><text x="97.7415%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (10 samples, 0.31%)</title><rect x="97.4915%" y="261" width="0.3097%" height="15" fill="rgb(253,83,4)" fg:x="3148" fg:w="10"/><text x="97.7415%" y="271.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.09%)</title><rect x="97.7083%" y="245" width="0.0929%" height="15" fill="rgb(250,195,49)" fg:x="3155" fg:w="3"/><text x="97.9583%" y="255.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (1 samples, 0.03%)</title><rect x="97.7702%" y="229" width="0.0310%" height="15" fill="rgb(241,192,25)" fg:x="3157" fg:w="1"/><text x="98.0202%" y="239.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (3,005 samples, 93.06%)</title><rect x="4.7693%" y="357" width="93.0629%" height="15" fill="rgb(208,124,10)" fg:x="154" fg:w="3005"/><text x="5.0193%" y="367.50">&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached</text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (111 samples, 3.44%)</title><rect x="94.3945%" y="341" width="3.4376%" height="15" fill="rgb(222,33,0)" fg:x="3048" fg:w="111"/><text x="94.6445%" y="351.50">cha..</text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (11 samples, 0.34%)</title><rect x="97.4915%" y="325" width="0.3407%" height="15" fill="rgb(234,209,28)" fg:x="3148" fg:w="11"/><text x="97.7415%" y="335.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (11 samples, 0.34%)</title><rect x="97.4915%" y="309" width="0.3407%" height="15" fill="rgb(224,11,23)" fg:x="3148" fg:w="11"/><text x="97.7415%" y="319.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (1 samples, 0.03%)</title><rect x="97.8012%" y="293" width="0.0310%" height="15" fill="rgb(232,99,1)" fg:x="3158" fg:w="1"/><text x="98.0512%" y="303.50"></text></g><g><title>&lt;heapless::vec::Vec&lt;u8,_&gt; as aead::Buffer&gt;::truncate (2 samples, 0.06%)</title><rect x="97.8321%" y="357" width="0.0619%" height="15" fill="rgb(237,95,45)" fg:x="3159" fg:w="2"/><text x="98.0821%" y="367.50"></text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::truncate (1 samples, 0.03%)</title><rect x="97.8631%" y="341" width="0.0310%" height="15" fill="rgb(208,109,11)" fg:x="3160" fg:w="1"/><text x="98.1131%" y="351.50"></text></g><g><title>&lt;typenum::uint::UInt&lt;U,B&gt; as typenum::marker_traits::Unsigned&gt;::to_usize (1 samples, 0.03%)</title><rect x="97.8941%" y="357" width="0.0310%" height="15" fill="rgb(216,190,48)" fg:x="3161" fg:w="1"/><text x="98.1441%" y="367.50"></text></g><g><title>&lt;typenum::uint::UInt&lt;U,B&gt; as typenum::marker_traits::Unsigned&gt;::to_usize (1 samples, 0.03%)</title><rect x="97.8941%" y="341" width="0.0310%" height="15" fill="rgb(251,171,36)" fg:x="3161" fg:w="1"/><text x="98.1441%" y="351.50"></text></g><g><title>aead::Buffer::len (1 samples, 0.03%)</title><rect x="97.9251%" y="357" width="0.0310%" height="15" fill="rgb(230,62,22)" fg:x="3162" fg:w="1"/><text x="98.1751%" y="367.50"></text></g><g><title>&lt;heapless::vec::Vec&lt;T,_&gt; as core::convert::AsRef&lt;[T]&gt;&gt;::as_ref (1 samples, 0.03%)</title><rect x="97.9251%" y="341" width="0.0310%" height="15" fill="rgb(225,114,35)" fg:x="3162" fg:w="1"/><text x="98.1751%" y="351.50"></text></g><g><title>&lt;heapless::vec::Vec&lt;T,_&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="97.9251%" y="325" width="0.0310%" height="15" fill="rgb(215,118,42)" fg:x="3162" fg:w="1"/><text x="98.1751%" y="335.50"></text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::as_slice (1 samples, 0.03%)</title><rect x="97.9251%" y="309" width="0.0310%" height="15" fill="rgb(243,119,21)" fg:x="3162" fg:w="1"/><text x="98.1751%" y="319.50"></text></g><g><title>core::slice::raw::from_raw_parts (1 samples, 0.03%)</title><rect x="97.9251%" y="293" width="0.0310%" height="15" fill="rgb(252,177,53)" fg:x="3162" fg:w="1"/><text x="98.1751%" y="303.50"></text></g><g><title>tftp::encryption::Encryptor::decrypt (3,013 samples, 93.31%)</title><rect x="4.6764%" y="389" width="93.3106%" height="15" fill="rgb(237,209,29)" fg:x="151" fg:w="3013"/><text x="4.9264%" y="399.50">tftp::encryption::Encryptor::decrypt</text></g><g><title>aead::AeadInPlace::decrypt_in_place (3,012 samples, 93.28%)</title><rect x="4.7073%" y="373" width="93.2797%" height="15" fill="rgb(212,65,23)" fg:x="152" fg:w="3012"/><text x="4.9573%" y="383.50">aead::AeadInPlace::decrypt_in_place</text></g><g><title>generic_array::GenericArray&lt;T,N&gt;::from_slice (1 samples, 0.03%)</title><rect x="97.9560%" y="357" width="0.0310%" height="15" fill="rgb(230,222,46)" fg:x="3163" fg:w="1"/><text x="98.2060%" y="367.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.03%)</title><rect x="97.9560%" y="341" width="0.0310%" height="15" fill="rgb(215,135,32)" fg:x="3163" fg:w="1"/><text x="98.2060%" y="351.50"></text></g><g><title>&lt;&amp;generic_array::GenericArray&lt;T,N&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (1 samples, 0.03%)</title><rect x="97.9560%" y="325" width="0.0310%" height="15" fill="rgb(246,101,22)" fg:x="3163" fg:w="1"/><text x="98.2060%" y="335.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (4 samples, 0.12%)</title><rect x="97.9870%" y="357" width="0.1239%" height="15" fill="rgb(206,107,13)" fg:x="3164" fg:w="4"/><text x="98.2370%" y="367.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (4 samples, 0.12%)</title><rect x="97.9870%" y="341" width="0.1239%" height="15" fill="rgb(250,100,44)" fg:x="3164" fg:w="4"/><text x="98.2370%" y="351.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (4 samples, 0.12%)</title><rect x="97.9870%" y="325" width="0.1239%" height="15" fill="rgb(231,147,38)" fg:x="3164" fg:w="4"/><text x="98.2370%" y="335.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from::{{closure}} (3 samples, 0.09%)</title><rect x="98.0180%" y="309" width="0.0929%" height="15" fill="rgb(229,8,40)" fg:x="3165" fg:w="3"/><text x="98.2680%" y="319.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.03%)</title><rect x="98.1109%" y="357" width="0.0310%" height="15" fill="rgb(221,135,30)" fg:x="3168" fg:w="1"/><text x="98.3609%" y="367.50"></text></g><g><title>tftp::server::connection::Connection&lt;R,W,S&gt;::receive_packet (3,020 samples, 93.53%)</title><rect x="4.6454%" y="405" width="93.5274%" height="15" fill="rgb(249,193,18)" fg:x="150" fg:w="3020"/><text x="4.8954%" y="415.50">tftp::server::connection::Connection&lt;R,W,S&gt;::receive_packet</text></g><g><title>tftp::packet::PacketType::from_bytes (6 samples, 0.19%)</title><rect x="97.9870%" y="389" width="0.1858%" height="15" fill="rgb(209,133,39)" fg:x="3164" fg:w="6"/><text x="98.2370%" y="399.50"></text></g><g><title>tftp::packet::try_from (6 samples, 0.19%)</title><rect x="97.9870%" y="373" width="0.1858%" height="15" fill="rgb(232,100,14)" fg:x="3164" fg:w="6"/><text x="98.2370%" y="383.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.03%)</title><rect x="98.1418%" y="357" width="0.0310%" height="15" fill="rgb(224,185,1)" fg:x="3169" fg:w="1"/><text x="98.3918%" y="367.50"></text></g><g><title>tftp::server::connection::ConnectionBuilder::with_request (1 samples, 0.03%)</title><rect x="98.1728%" y="405" width="0.0310%" height="15" fill="rgb(223,139,8)" fg:x="3170" fg:w="1"/><text x="98.4228%" y="415.50"></text></g><g><title>tftp::server::extensions::create_options (1 samples, 0.03%)</title><rect x="98.1728%" y="389" width="0.0310%" height="15" fill="rgb(232,213,38)" fg:x="3170" fg:w="1"/><text x="98.4228%" y="399.50"></text></g><g><title>tftp::key_management::create_finalized_keys (1 samples, 0.03%)</title><rect x="98.1728%" y="373" width="0.0310%" height="15" fill="rgb(207,94,22)" fg:x="3170" fg:w="1"/><text x="98.4228%" y="383.50"></text></g><g><title>tftp::encryption::InitialKeys::finalize (1 samples, 0.03%)</title><rect x="98.1728%" y="357" width="0.0310%" height="15" fill="rgb(219,183,54)" fg:x="3170" fg:w="1"/><text x="98.4228%" y="367.50"></text></g><g><title>x25519_dalek::x25519::EphemeralSecret::diffie_hellman (1 samples, 0.03%)</title><rect x="98.1728%" y="341" width="0.0310%" height="15" fill="rgb(216,185,54)" fg:x="3170" fg:w="1"/><text x="98.4228%" y="351.50"></text></g><g><title>curve25519_dalek::montgomery::&lt;impl core::ops::arith::Mul&lt;curve25519_dalek::montgomery::MontgomeryPoint&gt; for curve25519_dalek::scalar::Scalar&gt;::mul (1 samples, 0.03%)</title><rect x="98.1728%" y="325" width="0.0310%" height="15" fill="rgb(254,217,39)" fg:x="3170" fg:w="1"/><text x="98.4228%" y="335.50"></text></g><g><title>curve25519_dalek::montgomery::&lt;impl core::ops::arith::Mul&lt;&amp;curve25519_dalek::montgomery::MontgomeryPoint&gt; for &amp;curve25519_dalek::scalar::Scalar&gt;::mul (1 samples, 0.03%)</title><rect x="98.1728%" y="309" width="0.0310%" height="15" fill="rgb(240,178,23)" fg:x="3170" fg:w="1"/><text x="98.4228%" y="319.50"></text></g><g><title>&lt;&amp;curve25519_dalek::montgomery::MontgomeryPoint as core::ops::arith::Mul&lt;&amp;curve25519_dalek::scalar::Scalar&gt;&gt;::mul (1 samples, 0.03%)</title><rect x="98.1728%" y="293" width="0.0310%" height="15" fill="rgb(218,11,47)" fg:x="3170" fg:w="1"/><text x="98.4228%" y="303.50"></text></g><g><title>curve25519_dalek::montgomery::differential_add_and_double (1 samples, 0.03%)</title><rect x="98.1728%" y="277" width="0.0310%" height="15" fill="rgb(218,51,51)" fg:x="3170" fg:w="1"/><text x="98.4228%" y="287.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (1 samples, 0.03%)</title><rect x="98.1728%" y="261" width="0.0310%" height="15" fill="rgb(238,126,27)" fg:x="3170" fg:w="1"/><text x="98.4228%" y="271.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.03%)</title><rect x="98.3277%" y="309" width="0.0310%" height="15" fill="rgb(249,202,22)" fg:x="3175" fg:w="1"/><text x="98.5777%" y="319.50"></text></g><g><title>tftp::server::server::send_data_blocks (8 samples, 0.25%)</title><rect x="98.2038%" y="405" width="0.2478%" height="15" fill="rgb(254,195,49)" fg:x="3171" fg:w="8"/><text x="98.4538%" y="415.50"></text></g><g><title>tftp::map::Map&lt;K,V,_&gt;::retain (7 samples, 0.22%)</title><rect x="98.2347%" y="389" width="0.2168%" height="15" fill="rgb(208,123,14)" fg:x="3172" fg:w="7"/><text x="98.4847%" y="399.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::retain (6 samples, 0.19%)</title><rect x="98.2657%" y="373" width="0.1858%" height="15" fill="rgb(224,200,8)" fg:x="3173" fg:w="6"/><text x="98.5157%" y="383.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::retain::process_one (6 samples, 0.19%)</title><rect x="98.2657%" y="357" width="0.1858%" height="15" fill="rgb(217,61,36)" fg:x="3173" fg:w="6"/><text x="98.5157%" y="367.50"></text></g><g><title>tftp::map::Map&lt;K,V,_&gt;::retain::{{closure}} (4 samples, 0.12%)</title><rect x="98.3277%" y="341" width="0.1239%" height="15" fill="rgb(206,35,45)" fg:x="3175" fg:w="4"/><text x="98.5777%" y="351.50"></text></g><g><title>tftp::server::server::send_data_blocks::{{closure}} (4 samples, 0.12%)</title><rect x="98.3277%" y="325" width="0.1239%" height="15" fill="rgb(217,65,33)" fg:x="3175" fg:w="4"/><text x="98.5777%" y="335.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3 samples, 0.09%)</title><rect x="98.3586%" y="309" width="0.0929%" height="15" fill="rgb(222,158,48)" fg:x="3176" fg:w="3"/><text x="98.6086%" y="319.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3 samples, 0.09%)</title><rect x="98.3586%" y="293" width="0.0929%" height="15" fill="rgb(254,2,54)" fg:x="3176" fg:w="3"/><text x="98.6086%" y="303.50"></text></g><g><title>&lt;i32 as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.03%)</title><rect x="98.4206%" y="277" width="0.0310%" height="15" fill="rgb(250,143,38)" fg:x="3178" fg:w="1"/><text x="98.6706%" y="287.50"></text></g><g><title>&lt;log::Level as core::cmp::PartialOrd&lt;log::LevelFilter&gt;&gt;::le (1 samples, 0.03%)</title><rect x="98.4825%" y="389" width="0.0310%" height="15" fill="rgb(248,25,0)" fg:x="3180" fg:w="1"/><text x="98.7325%" y="399.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.03%)</title><rect x="98.6064%" y="373" width="0.0310%" height="15" fill="rgb(206,152,27)" fg:x="3184" fg:w="1"/><text x="98.8564%" y="383.50"></text></g><g><title>&lt;tftp::io::StdCompatFile as tftp::std_compat::io::Write&gt;::write (1 samples, 0.03%)</title><rect x="98.6373%" y="373" width="0.0310%" height="15" fill="rgb(240,77,30)" fg:x="3185" fg:w="1"/><text x="98.8873%" y="383.50"></text></g><g><title>std::os::unix::net::datagram::UnixDatagram::send (1 samples, 0.03%)</title><rect x="98.6373%" y="357" width="0.0310%" height="15" fill="rgb(231,5,3)" fg:x="3185" fg:w="1"/><text x="98.8873%" y="367.50"></text></g><g><title>&lt;tftp::storage::BlockMapper as core::clone::Clone&gt;::clone (1 samples, 0.03%)</title><rect x="98.6683%" y="373" width="0.0310%" height="15" fill="rgb(207,226,32)" fg:x="3186" fg:w="1"/><text x="98.9183%" y="383.50"></text></g><g><title>tftp::map::Map&lt;K,V,_&gt;::get (1 samples, 0.03%)</title><rect x="98.6993%" y="373" width="0.0310%" height="15" fill="rgb(222,207,47)" fg:x="3187" fg:w="1"/><text x="98.9493%" y="383.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (1 samples, 0.03%)</title><rect x="98.6993%" y="357" width="0.0310%" height="15" fill="rgb(229,115,45)" fg:x="3187" fg:w="1"/><text x="98.9493%" y="367.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (1 samples, 0.03%)</title><rect x="98.7612%" y="357" width="0.0310%" height="15" fill="rgb(224,191,6)" fg:x="3189" fg:w="1"/><text x="99.0112%" y="367.50"></text></g><g><title>tftp::map::Map&lt;K,V,_&gt;::remove (3 samples, 0.09%)</title><rect x="98.7303%" y="373" width="0.0929%" height="15" fill="rgb(230,227,24)" fg:x="3188" fg:w="3"/><text x="98.9803%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.03%)</title><rect x="98.7922%" y="357" width="0.0310%" height="15" fill="rgb(228,80,19)" fg:x="3190" fg:w="1"/><text x="99.0422%" y="367.50"></text></g><g><title>&lt;tftp::storage::FileWriter&lt;T&gt; as tftp::storage::BlockWriter&gt;::write_block (11 samples, 0.34%)</title><rect x="98.5135%" y="389" width="0.3407%" height="15" fill="rgb(247,229,0)" fg:x="3181" fg:w="11"/><text x="98.7635%" y="399.50"></text></g><g><title>tftp::storage::BlockMapper::index (1 samples, 0.03%)</title><rect x="98.8232%" y="373" width="0.0310%" height="15" fill="rgb(237,194,15)" fg:x="3191" fg:w="1"/><text x="99.0732%" y="383.50"></text></g><g><title>log::max_level (1 samples, 0.03%)</title><rect x="98.8541%" y="389" width="0.0310%" height="15" fill="rgb(219,203,20)" fg:x="3192" fg:w="1"/><text x="99.1041%" y="399.50"></text></g><g><title>&lt;tftp::socket::StdSocket as tftp::socket::Socket&gt;::send_to (2 samples, 0.06%)</title><rect x="98.8851%" y="373" width="0.0619%" height="15" fill="rgb(234,128,8)" fg:x="3193" fg:w="2"/><text x="99.1351%" y="383.50"></text></g><g><title>std::net::udp::UdpSocket::send_to (2 samples, 0.06%)</title><rect x="98.8851%" y="357" width="0.0619%" height="15" fill="rgb(248,202,8)" fg:x="3193" fg:w="2"/><text x="99.1351%" y="367.50"></text></g><g><title>std::sys_common::net::UdpSocket::send_to (1 samples, 0.03%)</title><rect x="98.9161%" y="341" width="0.0310%" height="15" fill="rgb(206,104,37)" fg:x="3194" fg:w="1"/><text x="99.1661%" y="351.50"></text></g><g><title>std::sys::unix::cvt (1 samples, 0.03%)</title><rect x="98.9161%" y="325" width="0.0310%" height="15" fill="rgb(223,8,27)" fg:x="3194" fg:w="1"/><text x="99.1661%" y="335.50"></text></g><g><title>&lt;isize as std::sys::unix::IsMinusOne&gt;::is_minus_one (1 samples, 0.03%)</title><rect x="98.9161%" y="309" width="0.0310%" height="15" fill="rgb(216,217,28)" fg:x="3194" fg:w="1"/><text x="99.1661%" y="319.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (1 samples, 0.03%)</title><rect x="98.9470%" y="293" width="0.0310%" height="15" fill="rgb(249,199,1)" fg:x="3195" fg:w="1"/><text x="99.1970%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (1 samples, 0.03%)</title><rect x="98.9470%" y="277" width="0.0310%" height="15" fill="rgb(240,85,17)" fg:x="3195" fg:w="1"/><text x="99.1970%" y="287.50"></text></g><g><title>core::iter::adapters::zip::Zip&lt;A,B&gt;::new (1 samples, 0.03%)</title><rect x="98.9470%" y="261" width="0.0310%" height="15" fill="rgb(206,108,45)" fg:x="3195" fg:w="1"/><text x="99.1970%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (1 samples, 0.03%)</title><rect x="98.9470%" y="245" width="0.0310%" height="15" fill="rgb(245,210,41)" fg:x="3195" fg:w="1"/><text x="99.1970%" y="255.50"></text></g><g><title>core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size (1 samples, 0.03%)</title><rect x="98.9470%" y="229" width="0.0310%" height="15" fill="rgb(206,13,37)" fg:x="3195" fg:w="1"/><text x="99.1970%" y="239.50"></text></g><g><title>&lt;core::slice::iter::ChunksExact&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.03%)</title><rect x="98.9470%" y="213" width="0.0310%" height="15" fill="rgb(250,61,18)" fg:x="3195" fg:w="1"/><text x="99.1970%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="98.9780%" y="277" width="0.0310%" height="15" fill="rgb(235,172,48)" fg:x="3196" fg:w="1"/><text x="99.2280%" y="287.50"></text></g><g><title>chacha20::xchacha::quarter_round (3 samples, 0.09%)</title><rect x="99.0090%" y="277" width="0.0929%" height="15" fill="rgb(249,201,17)" fg:x="3197" fg:w="3"/><text x="99.2590%" y="287.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.03%)</title><rect x="99.0709%" y="261" width="0.0310%" height="15" fill="rgb(219,208,6)" fg:x="3199" fg:w="1"/><text x="99.3209%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (1 samples, 0.03%)</title><rect x="99.1019%" y="277" width="0.0310%" height="15" fill="rgb(248,31,23)" fg:x="3200" fg:w="1"/><text x="99.3519%" y="287.50"></text></g><g><title>core::iter::adapters::zip::Zip&lt;A,B&gt;::new (1 samples, 0.03%)</title><rect x="99.1019%" y="261" width="0.0310%" height="15" fill="rgb(245,15,42)" fg:x="3200" fg:w="1"/><text x="99.3519%" y="271.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="99.1019%" y="245" width="0.0310%" height="15" fill="rgb(222,217,39)" fg:x="3200" fg:w="1"/><text x="99.3519%" y="255.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (7 samples, 0.22%)</title><rect x="98.9470%" y="309" width="0.2168%" height="15" fill="rgb(210,219,27)" fg:x="3195" fg:w="7"/><text x="99.1970%" y="319.50"></text></g><g><title>chacha20::xchacha::hchacha (6 samples, 0.19%)</title><rect x="98.9780%" y="293" width="0.1858%" height="15" fill="rgb(252,166,36)" fg:x="3196" fg:w="6"/><text x="99.2280%" y="303.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_le_bytes (1 samples, 0.03%)</title><rect x="99.1329%" y="277" width="0.0310%" height="15" fill="rgb(245,132,34)" fg:x="3201" fg:w="1"/><text x="99.3829%" y="287.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as crypto_common::KeyIvInit&gt;::new (8 samples, 0.25%)</title><rect x="98.9470%" y="325" width="0.2478%" height="15" fill="rgb(236,54,3)" fg:x="3195" fg:w="8"/><text x="99.1970%" y="335.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.03%)</title><rect x="99.1638%" y="309" width="0.0310%" height="15" fill="rgb(241,173,43)" fg:x="3202" fg:w="1"/><text x="99.4138%" y="319.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.03%)</title><rect x="99.1638%" y="293" width="0.0310%" height="15" fill="rgb(215,190,9)" fg:x="3202" fg:w="1"/><text x="99.4138%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.03%)</title><rect x="99.1638%" y="277" width="0.0310%" height="15" fill="rgb(242,101,16)" fg:x="3202" fg:w="1"/><text x="99.4138%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="99.1638%" y="261" width="0.0310%" height="15" fill="rgb(223,190,21)" fg:x="3202" fg:w="1"/><text x="99.4138%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.03%)</title><rect x="99.1638%" y="245" width="0.0310%" height="15" fill="rgb(215,228,25)" fg:x="3202" fg:w="1"/><text x="99.4138%" y="255.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::finalize (1 samples, 0.03%)</title><rect x="99.1948%" y="309" width="0.0310%" height="15" fill="rgb(225,36,22)" fg:x="3203" fg:w="1"/><text x="99.4448%" y="319.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::finalize (1 samples, 0.03%)</title><rect x="99.1948%" y="293" width="0.0310%" height="15" fill="rgb(251,106,46)" fg:x="3203" fg:w="1"/><text x="99.4448%" y="303.50"></text></g><g><title>poly1305::backend::soft::State::finalize_mut (1 samples, 0.03%)</title><rect x="99.1948%" y="277" width="0.0310%" height="15" fill="rgb(208,90,1)" fg:x="3203" fg:w="1"/><text x="99.4448%" y="287.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.03%)</title><rect x="99.1948%" y="261" width="0.0310%" height="15" fill="rgb(243,10,4)" fg:x="3203" fg:w="1"/><text x="99.4448%" y="271.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.03%)</title><rect x="99.1948%" y="245" width="0.0310%" height="15" fill="rgb(212,137,27)" fg:x="3203" fg:w="1"/><text x="99.4448%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.03%)</title><rect x="99.1948%" y="229" width="0.0310%" height="15" fill="rgb(231,220,49)" fg:x="3203" fg:w="1"/><text x="99.4448%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="99.1948%" y="213" width="0.0310%" height="15" fill="rgb(237,96,20)" fg:x="3203" fg:w="1"/><text x="99.4448%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.03%)</title><rect x="99.1948%" y="197" width="0.0310%" height="15" fill="rgb(239,229,30)" fg:x="3203" fg:w="1"/><text x="99.4448%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.03%)</title><rect x="99.1948%" y="181" width="0.0310%" height="15" fill="rgb(219,65,33)" fg:x="3203" fg:w="1"/><text x="99.4448%" y="191.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.03%)</title><rect x="99.2258%" y="293" width="0.0310%" height="15" fill="rgb(243,134,7)" fg:x="3204" fg:w="1"/><text x="99.4758%" y="303.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (2 samples, 0.06%)</title><rect x="99.2567%" y="293" width="0.0619%" height="15" fill="rgb(216,177,54)" fg:x="3205" fg:w="2"/><text x="99.5067%" y="303.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (2 samples, 0.06%)</title><rect x="99.2567%" y="277" width="0.0619%" height="15" fill="rgb(211,160,20)" fg:x="3205" fg:w="2"/><text x="99.5067%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.06%)</title><rect x="99.2567%" y="261" width="0.0619%" height="15" fill="rgb(239,85,39)" fg:x="3205" fg:w="2"/><text x="99.5067%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.06%)</title><rect x="99.2567%" y="245" width="0.0619%" height="15" fill="rgb(232,125,22)" fg:x="3205" fg:w="2"/><text x="99.5067%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.06%)</title><rect x="99.2567%" y="229" width="0.0619%" height="15" fill="rgb(244,57,34)" fg:x="3205" fg:w="2"/><text x="99.5067%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (2 samples, 0.06%)</title><rect x="99.2567%" y="213" width="0.0619%" height="15" fill="rgb(214,203,32)" fg:x="3205" fg:w="2"/><text x="99.5067%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.03%)</title><rect x="99.2877%" y="197" width="0.0310%" height="15" fill="rgb(207,58,43)" fg:x="3206" fg:w="1"/><text x="99.5377%" y="207.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (1 samples, 0.03%)</title><rect x="99.2877%" y="181" width="0.0310%" height="15" fill="rgb(215,193,15)" fg:x="3206" fg:w="1"/><text x="99.5377%" y="191.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::authenticate_lengths (4 samples, 0.12%)</title><rect x="99.2258%" y="309" width="0.1239%" height="15" fill="rgb(232,15,44)" fg:x="3204" fg:w="4"/><text x="99.4758%" y="319.50"></text></g><g><title>universal_hash::UniversalHash::update (1 samples, 0.03%)</title><rect x="99.3187%" y="293" width="0.0310%" height="15" fill="rgb(212,3,48)" fg:x="3207" fg:w="1"/><text x="99.5687%" y="303.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (1 samples, 0.03%)</title><rect x="99.3187%" y="277" width="0.0310%" height="15" fill="rgb(218,128,7)" fg:x="3207" fg:w="1"/><text x="99.5687%" y="287.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (1 samples, 0.03%)</title><rect x="99.3187%" y="261" width="0.0310%" height="15" fill="rgb(226,216,39)" fg:x="3207" fg:w="1"/><text x="99.5687%" y="271.50"></text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (1 samples, 0.03%)</title><rect x="99.3187%" y="245" width="0.0310%" height="15" fill="rgb(243,47,51)" fg:x="3207" fg:w="1"/><text x="99.5687%" y="255.50"></text></g><g><title>chacha20::backends::sse2::double_quarter_round (4 samples, 0.12%)</title><rect x="99.3496%" y="149" width="0.1239%" height="15" fill="rgb(241,183,40)" fg:x="3208" fg:w="4"/><text x="99.5996%" y="159.50"></text></g><g><title>chacha20::backends::sse2::add_xor_rot (4 samples, 0.12%)</title><rect x="99.3496%" y="133" width="0.1239%" height="15" fill="rgb(231,217,32)" fg:x="3208" fg:w="4"/><text x="99.5996%" y="143.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_add_epi32 (2 samples, 0.06%)</title><rect x="99.4116%" y="117" width="0.0619%" height="15" fill="rgb(229,61,38)" fg:x="3210" fg:w="2"/><text x="99.6616%" y="127.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (5 samples, 0.15%)</title><rect x="99.3496%" y="309" width="0.1548%" height="15" fill="rgb(225,210,5)" fg:x="3208" fg:w="5"/><text x="99.5996%" y="319.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (5 samples, 0.15%)</title><rect x="99.3496%" y="293" width="0.1548%" height="15" fill="rgb(231,79,45)" fg:x="3208" fg:w="5"/><text x="99.5996%" y="303.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (5 samples, 0.15%)</title><rect x="99.3496%" y="277" width="0.1548%" height="15" fill="rgb(224,100,7)" fg:x="3208" fg:w="5"/><text x="99.5996%" y="287.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::write_keystream_block (5 samples, 0.15%)</title><rect x="99.3496%" y="261" width="0.1548%" height="15" fill="rgb(241,198,18)" fg:x="3208" fg:w="5"/><text x="99.5996%" y="271.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (5 samples, 0.15%)</title><rect x="99.3496%" y="245" width="0.1548%" height="15" fill="rgb(252,97,53)" fg:x="3208" fg:w="5"/><text x="99.5996%" y="255.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (5 samples, 0.15%)</title><rect x="99.3496%" y="229" width="0.1548%" height="15" fill="rgb(220,88,7)" fg:x="3208" fg:w="5"/><text x="99.5996%" y="239.50"></text></g><g><title>chacha20::backends::sse2::inner (5 samples, 0.15%)</title><rect x="99.3496%" y="213" width="0.1548%" height="15" fill="rgb(213,176,14)" fg:x="3208" fg:w="5"/><text x="99.5996%" y="223.50"></text></g><g><title>&lt;cipher::stream_core::WriteBlockCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (5 samples, 0.15%)</title><rect x="99.3496%" y="197" width="0.1548%" height="15" fill="rgb(246,73,7)" fg:x="3208" fg:w="5"/><text x="99.5996%" y="207.50"></text></g><g><title>&lt;chacha20::backends::sse2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (5 samples, 0.15%)</title><rect x="99.3496%" y="181" width="0.1548%" height="15" fill="rgb(245,64,36)" fg:x="3208" fg:w="5"/><text x="99.5996%" y="191.50"></text></g><g><title>chacha20::backends::sse2::rounds (5 samples, 0.15%)</title><rect x="99.3496%" y="165" width="0.1548%" height="15" fill="rgb(245,80,10)" fg:x="3208" fg:w="5"/><text x="99.5996%" y="175.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.03%)</title><rect x="99.4735%" y="149" width="0.0310%" height="15" fill="rgb(232,107,50)" fg:x="3212" fg:w="1"/><text x="99.7235%" y="159.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.03%)</title><rect x="99.4735%" y="133" width="0.0310%" height="15" fill="rgb(253,3,0)" fg:x="3212" fg:w="1"/><text x="99.7235%" y="143.50"></text></g><g><title>core::mem::replace (1 samples, 0.03%)</title><rect x="99.4735%" y="117" width="0.0310%" height="15" fill="rgb(212,99,53)" fg:x="3212" fg:w="1"/><text x="99.7235%" y="127.50"></text></g><g><title>&lt;Z as zeroize::Zeroize&gt;::zeroize (1 samples, 0.03%)</title><rect x="99.5045%" y="277" width="0.0310%" height="15" fill="rgb(249,111,54)" fg:x="3213" fg:w="1"/><text x="99.7545%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;chacha20::xchacha::XChaChaCore&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm,typenum::bit::B1&gt;,typenum::bit::B0&gt;,typenum::bit::B1&gt;,typenum::bit::B0&gt;&gt;&gt;&gt; (2 samples, 0.06%)</title><rect x="99.5045%" y="309" width="0.0619%" height="15" fill="rgb(249,55,30)" fg:x="3213" fg:w="2"/><text x="99.7545%" y="319.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.06%)</title><rect x="99.5045%" y="293" width="0.0619%" height="15" fill="rgb(237,47,42)" fg:x="3213" fg:w="2"/><text x="99.7545%" y="303.50"></text></g><g><title>&lt;[Z] as zeroize::Zeroize&gt;::zeroize (1 samples, 0.03%)</title><rect x="99.5355%" y="277" width="0.0310%" height="15" fill="rgb(211,20,18)" fg:x="3214" fg:w="1"/><text x="99.7855%" y="287.50"></text></g><g><title>zeroize::volatile_set (1 samples, 0.03%)</title><rect x="99.5355%" y="261" width="0.0310%" height="15" fill="rgb(231,203,46)" fg:x="3214" fg:w="1"/><text x="99.7855%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.03%)</title><rect x="99.5664%" y="213" width="0.0310%" height="15" fill="rgb(237,142,3)" fg:x="3215" fg:w="1"/><text x="99.8164%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.06%)</title><rect x="99.5664%" y="261" width="0.0619%" height="15" fill="rgb(241,107,1)" fg:x="3215" fg:w="2"/><text x="99.8164%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.06%)</title><rect x="99.5664%" y="245" width="0.0619%" height="15" fill="rgb(229,83,13)" fg:x="3215" fg:w="2"/><text x="99.8164%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.06%)</title><rect x="99.5664%" y="229" width="0.0619%" height="15" fill="rgb(241,91,40)" fg:x="3215" fg:w="2"/><text x="99.8164%" y="239.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="99.5974%" y="213" width="0.0310%" height="15" fill="rgb(225,3,45)" fg:x="3216" fg:w="1"/><text x="99.8474%" y="223.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (1 samples, 0.03%)</title><rect x="99.5974%" y="197" width="0.0310%" height="15" fill="rgb(244,223,14)" fg:x="3216" fg:w="1"/><text x="99.8474%" y="207.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::encrypt_in_place_detached (15 samples, 0.46%)</title><rect x="99.1948%" y="325" width="0.4645%" height="15" fill="rgb(224,124,37)" fg:x="3203" fg:w="15"/><text x="99.4448%" y="335.50"></text></g><g><title>universal_hash::UniversalHash::update_padded (3 samples, 0.09%)</title><rect x="99.5664%" y="309" width="0.0929%" height="15" fill="rgb(251,171,30)" fg:x="3215" fg:w="3"/><text x="99.8164%" y="319.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (3 samples, 0.09%)</title><rect x="99.5664%" y="293" width="0.0929%" height="15" fill="rgb(236,46,54)" fg:x="3215" fg:w="3"/><text x="99.8164%" y="303.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (3 samples, 0.09%)</title><rect x="99.5664%" y="277" width="0.0929%" height="15" fill="rgb(245,213,5)" fg:x="3215" fg:w="3"/><text x="99.8164%" y="287.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (1 samples, 0.03%)</title><rect x="99.6284%" y="261" width="0.0310%" height="15" fill="rgb(230,144,27)" fg:x="3217" fg:w="1"/><text x="99.8784%" y="271.50"></text></g><g><title>core::mem::forget (1 samples, 0.03%)</title><rect x="99.6284%" y="245" width="0.0310%" height="15" fill="rgb(220,86,6)" fg:x="3217" fg:w="1"/><text x="99.8784%" y="255.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.03%)</title><rect x="99.6903%" y="149" width="0.0310%" height="15" fill="rgb(240,20,13)" fg:x="3219" fg:w="1"/><text x="99.9403%" y="159.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_slli_epi32 (1 samples, 0.03%)</title><rect x="99.7522%" y="117" width="0.0310%" height="15" fill="rgb(217,89,34)" fg:x="3221" fg:w="1"/><text x="100.0022%" y="127.50"></text></g><g><title>chacha20::backends::sse2::add_xor_rot (3 samples, 0.09%)</title><rect x="99.7213%" y="133" width="0.0929%" height="15" fill="rgb(229,13,5)" fg:x="3220" fg:w="3"/><text x="99.9713%" y="143.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_xor_si128 (1 samples, 0.03%)</title><rect x="99.7832%" y="117" width="0.0310%" height="15" fill="rgb(244,67,35)" fg:x="3222" fg:w="1"/><text x="100.0332%" y="127.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (6 samples, 0.19%)</title><rect x="99.6593%" y="309" width="0.1858%" height="15" fill="rgb(221,40,2)" fg:x="3218" fg:w="6"/><text x="99.9093%" y="319.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (6 samples, 0.19%)</title><rect x="99.6593%" y="293" width="0.1858%" height="15" fill="rgb(237,157,21)" fg:x="3218" fg:w="6"/><text x="99.9093%" y="303.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (6 samples, 0.19%)</title><rect x="99.6593%" y="277" width="0.1858%" height="15" fill="rgb(222,94,11)" fg:x="3218" fg:w="6"/><text x="99.9093%" y="287.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::write_keystream_block (6 samples, 0.19%)</title><rect x="99.6593%" y="261" width="0.1858%" height="15" fill="rgb(249,113,6)" fg:x="3218" fg:w="6"/><text x="99.9093%" y="271.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (6 samples, 0.19%)</title><rect x="99.6593%" y="245" width="0.1858%" height="15" fill="rgb(238,137,36)" fg:x="3218" fg:w="6"/><text x="99.9093%" y="255.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (6 samples, 0.19%)</title><rect x="99.6593%" y="229" width="0.1858%" height="15" fill="rgb(210,102,26)" fg:x="3218" fg:w="6"/><text x="99.9093%" y="239.50"></text></g><g><title>chacha20::backends::sse2::inner (6 samples, 0.19%)</title><rect x="99.6593%" y="213" width="0.1858%" height="15" fill="rgb(218,30,30)" fg:x="3218" fg:w="6"/><text x="99.9093%" y="223.50"></text></g><g><title>&lt;cipher::stream_core::WriteBlockCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (5 samples, 0.15%)</title><rect x="99.6903%" y="197" width="0.1548%" height="15" fill="rgb(214,67,26)" fg:x="3219" fg:w="5"/><text x="99.9403%" y="207.50"></text></g><g><title>&lt;chacha20::backends::sse2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (5 samples, 0.15%)</title><rect x="99.6903%" y="181" width="0.1548%" height="15" fill="rgb(251,9,53)" fg:x="3219" fg:w="5"/><text x="99.9403%" y="191.50"></text></g><g><title>chacha20::backends::sse2::rounds (5 samples, 0.15%)</title><rect x="99.6903%" y="165" width="0.1548%" height="15" fill="rgb(228,204,25)" fg:x="3219" fg:w="5"/><text x="99.9403%" y="175.50"></text></g><g><title>chacha20::backends::sse2::double_quarter_round (4 samples, 0.12%)</title><rect x="99.7213%" y="149" width="0.1239%" height="15" fill="rgb(207,153,8)" fg:x="3220" fg:w="4"/><text x="99.9713%" y="159.50"></text></g><g><title>chacha20::backends::sse2::rows_to_cols (1 samples, 0.03%)</title><rect x="99.8142%" y="133" width="0.0310%" height="15" fill="rgb(242,9,16)" fg:x="3223" fg:w="1"/><text x="100.0642%" y="143.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_shuffle_epi32 (1 samples, 0.03%)</title><rect x="99.8142%" y="117" width="0.0310%" height="15" fill="rgb(217,211,10)" fg:x="3223" fg:w="1"/><text x="100.0642%" y="127.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::encrypt_in_place_detached (30 samples, 0.93%)</title><rect x="98.9470%" y="341" width="0.9291%" height="15" fill="rgb(219,228,52)" fg:x="3195" fg:w="30"/><text x="99.1970%" y="351.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (7 samples, 0.22%)</title><rect x="99.6593%" y="325" width="0.2168%" height="15" fill="rgb(231,92,29)" fg:x="3218" fg:w="7"/><text x="99.9093%" y="335.50"></text></g><g><title>generic_array::GenericArray&lt;T,N&gt;::from_slice (1 samples, 0.03%)</title><rect x="99.8452%" y="309" width="0.0310%" height="15" fill="rgb(232,8,23)" fg:x="3224" fg:w="1"/><text x="100.0952%" y="319.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.03%)</title><rect x="99.8452%" y="293" width="0.0310%" height="15" fill="rgb(216,211,34)" fg:x="3224" fg:w="1"/><text x="100.0952%" y="303.50"></text></g><g><title>&lt;&amp;generic_array::GenericArray&lt;T,N&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (1 samples, 0.03%)</title><rect x="99.8452%" y="277" width="0.0310%" height="15" fill="rgb(236,151,0)" fg:x="3224" fg:w="1"/><text x="100.0952%" y="287.50"></text></g><g><title>tftp::server::server::write_block (47 samples, 1.46%)</title><rect x="98.4515%" y="405" width="1.4556%" height="15" fill="rgb(209,168,3)" fg:x="3179" fg:w="47"/><text x="98.7015%" y="415.50"></text></g><g><title>tftp::server::connection::Connection&lt;R,W,S&gt;::send_packet (33 samples, 1.02%)</title><rect x="98.8851%" y="389" width="1.0220%" height="15" fill="rgb(208,129,28)" fg:x="3193" fg:w="33"/><text x="99.1351%" y="399.50"></text></g><g><title>tftp::encryption::Encryptor::encrypt (31 samples, 0.96%)</title><rect x="98.9470%" y="373" width="0.9600%" height="15" fill="rgb(229,78,22)" fg:x="3195" fg:w="31"/><text x="99.1970%" y="383.50"></text></g><g><title>aead::AeadInPlace::encrypt_in_place (31 samples, 0.96%)</title><rect x="98.9470%" y="357" width="0.9600%" height="15" fill="rgb(228,187,13)" fg:x="3195" fg:w="31"/><text x="99.1970%" y="367.50"></text></g><g><title>&lt;heapless::vec::Vec&lt;u8,_&gt; as aead::Buffer&gt;::extend_from_slice (1 samples, 0.03%)</title><rect x="99.8761%" y="341" width="0.0310%" height="15" fill="rgb(240,119,24)" fg:x="3225" fg:w="1"/><text x="100.1261%" y="351.50"></text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::extend_from_slice (1 samples, 0.03%)</title><rect x="99.8761%" y="325" width="0.0310%" height="15" fill="rgb(209,194,42)" fg:x="3225" fg:w="1"/><text x="100.1261%" y="335.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="99.8761%" y="309" width="0.0310%" height="15" fill="rgb(247,200,46)" fg:x="3225" fg:w="1"/><text x="100.1261%" y="319.50"></text></g><g><title>tftp::server::validation::handle_file_size (1 samples, 0.03%)</title><rect x="99.9071%" y="405" width="0.0310%" height="15" fill="rgb(218,76,16)" fg:x="3226" fg:w="1"/><text x="100.1571%" y="415.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.03%)</title><rect x="99.9381%" y="389" width="0.0310%" height="15" fill="rgb(225,21,48)" fg:x="3227" fg:w="1"/><text x="100.1881%" y="399.50"></text></g><g><title>tftp::instant_callback::{{closure}} (1 samples, 0.03%)</title><rect x="99.9381%" y="373" width="0.0310%" height="15" fill="rgb(239,223,50)" fg:x="3227" fg:w="1"/><text x="100.1881%" y="383.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.03%)</title><rect x="99.9381%" y="357" width="0.0310%" height="15" fill="rgb(244,45,21)" fg:x="3227" fg:w="1"/><text x="100.1881%" y="367.50"></text></g><g><title>clock_gettime (1 samples, 0.03%)</title><rect x="99.9381%" y="341" width="0.0310%" height="15" fill="rgb(232,33,43)" fg:x="3227" fg:w="1"/><text x="100.1881%" y="351.50"></text></g><g><title>all (3,229 samples, 100%)</title><rect x="0.0000%" y="469" width="100.0000%" height="15" fill="rgb(209,8,3)" fg:x="0" fg:w="3229"/><text x="0.2500%" y="479.50"></text></g><g><title>tftp (3,229 samples, 100.00%)</title><rect x="0.0000%" y="453" width="100.0000%" height="15" fill="rgb(214,25,53)" fg:x="0" fg:w="3229"/><text x="0.2500%" y="463.50">tftp</text></g><g><title>[unknown] (3,219 samples, 99.69%)</title><rect x="0.3097%" y="437" width="99.6903%" height="15" fill="rgb(254,186,54)" fg:x="10" fg:w="3219"/><text x="0.5597%" y="447.50">[unknown]</text></g><g><title>tftp::server::server::server (3,209 samples, 99.38%)</title><rect x="0.6194%" y="421" width="99.3806%" height="15" fill="rgb(208,174,49)" fg:x="20" fg:w="3209"/><text x="0.8694%" y="431.50">tftp::server::server::server</text></g><g><title>tftp::std_compat::time::Instant::elapsed (2 samples, 0.06%)</title><rect x="99.9381%" y="405" width="0.0619%" height="15" fill="rgb(233,191,51)" fg:x="3227" fg:w="2"/><text x="100.1881%" y="415.50"></text></g><g><title>core::time::Duration::from_micros (1 samples, 0.03%)</title><rect x="99.9690%" y="389" width="0.0310%" height="15" fill="rgb(222,134,10)" fg:x="3228" fg:w="1"/><text x="100.2190%" y="399.50"></text></g><g><title>core::time::Duration::new (1 samples, 0.03%)</title><rect x="99.9690%" y="373" width="0.0310%" height="15" fill="rgb(230,226,20)" fg:x="3228" fg:w="1"/><text x="100.2190%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::checked_add (1 samples, 0.03%)</title><rect x="99.9690%" y="357" width="0.0310%" height="15" fill="rgb(251,111,25)" fg:x="3228" fg:w="1"/><text x="100.2190%" y="367.50"></text></g></svg></svg>