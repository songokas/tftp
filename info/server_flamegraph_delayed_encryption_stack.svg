<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="710" onload="init(evt)" viewBox="0 0 1200 710" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="710" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="693.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="693.00"> </text><svg id="frames" x="10" width="1180" total_samples="4077"><g><title>perf_event_exec (3 samples, 0.07%)</title><rect x="0.0000%" y="517" width="0.0736%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="3"/><text x="0.2500%" y="527.50"></text></g><g><title>ctx_resched (2 samples, 0.05%)</title><rect x="0.0245%" y="501" width="0.0491%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="2"/><text x="0.2745%" y="511.50"></text></g><g><title>perf_ctx_enable (2 samples, 0.05%)</title><rect x="0.0245%" y="485" width="0.0491%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="2"/><text x="0.2745%" y="495.50"></text></g><g><title>amd_pmu_enable_all (1 samples, 0.02%)</title><rect x="0.0491%" y="469" width="0.0245%" height="15" fill="rgb(248,212,6)" fg:x="2" fg:w="1"/><text x="0.2991%" y="479.50"></text></g><g><title>perf-exec (4 samples, 0.10%)</title><rect x="0.0000%" y="645" width="0.0981%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="4"/><text x="0.2500%" y="655.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4 samples, 0.10%)</title><rect x="0.0000%" y="629" width="0.0981%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="4"/><text x="0.2500%" y="639.50"></text></g><g><title>do_syscall_64 (4 samples, 0.10%)</title><rect x="0.0000%" y="613" width="0.0981%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="4"/><text x="0.2500%" y="623.50"></text></g><g><title>__x64_sys_execve (4 samples, 0.10%)</title><rect x="0.0000%" y="597" width="0.0981%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="4"/><text x="0.2500%" y="607.50"></text></g><g><title>do_execveat_common.isra.0 (4 samples, 0.10%)</title><rect x="0.0000%" y="581" width="0.0981%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="4"/><text x="0.2500%" y="591.50"></text></g><g><title>bprm_execve (4 samples, 0.10%)</title><rect x="0.0000%" y="565" width="0.0981%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="4"/><text x="0.2500%" y="575.50"></text></g><g><title>load_elf_binary (4 samples, 0.10%)</title><rect x="0.0000%" y="549" width="0.0981%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="4"/><text x="0.2500%" y="559.50"></text></g><g><title>begin_new_exec (4 samples, 0.10%)</title><rect x="0.0000%" y="533" width="0.0981%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="4"/><text x="0.2500%" y="543.50"></text></g><g><title>strrchr (1 samples, 0.02%)</title><rect x="0.0736%" y="517" width="0.0245%" height="15" fill="rgb(216,20,37)" fg:x="3" fg:w="1"/><text x="0.3236%" y="527.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.02%)</title><rect x="0.0981%" y="629" width="0.0245%" height="15" fill="rgb(206,188,39)" fg:x="4" fg:w="1"/><text x="0.3481%" y="639.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="0.1226%" y="629" width="0.0245%" height="15" fill="rgb(217,207,13)" fg:x="5" fg:w="1"/><text x="0.3726%" y="639.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::AdditionKey as core::ops::arith::Add&lt;poly1305::backend::avx2::helpers::Aligned130&gt;&gt;::add::propagate_carry (1 samples, 0.02%)</title><rect x="0.1472%" y="629" width="0.0245%" height="15" fill="rgb(231,73,38)" fg:x="6" fg:w="1"/><text x="0.3972%" y="639.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="0.1472%" y="613" width="0.0245%" height="15" fill="rgb(225,20,46)" fg:x="6" fg:w="1"/><text x="0.3972%" y="623.50"></text></g><g><title>&lt;rustix::backend::reg::RetReg&lt;Num&gt; as rustix::backend::reg::FromAsm&gt;::from_asm (1 samples, 0.02%)</title><rect x="0.1717%" y="629" width="0.0245%" height="15" fill="rgb(210,31,41)" fg:x="7" fg:w="1"/><text x="0.4217%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="0.1962%" y="613" width="0.0245%" height="15" fill="rgb(221,200,47)" fg:x="8" fg:w="1"/><text x="0.4462%" y="623.50"></text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::as_mut_slice (1 samples, 0.02%)</title><rect x="0.2208%" y="613" width="0.0245%" height="15" fill="rgb(226,26,5)" fg:x="9" fg:w="1"/><text x="0.4708%" y="623.50"></text></g><g><title>[[heap]] (3 samples, 0.07%)</title><rect x="0.1962%" y="629" width="0.0736%" height="15" fill="rgb(249,33,26)" fg:x="8" fg:w="3"/><text x="0.4462%" y="639.50"></text></g><g><title>rustix::backend::conv::raw_fd (1 samples, 0.02%)</title><rect x="0.2453%" y="613" width="0.0245%" height="15" fill="rgb(235,183,28)" fg:x="10" fg:w="1"/><text x="0.4953%" y="623.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="0.2698%" y="613" width="0.0491%" height="15" fill="rgb(221,5,38)" fg:x="11" fg:w="2"/><text x="0.5198%" y="623.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.02%)</title><rect x="0.3189%" y="613" width="0.0245%" height="15" fill="rgb(247,18,42)" fg:x="13" fg:w="1"/><text x="0.5689%" y="623.50"></text></g><g><title>&lt;[u8] as tftp::buffer::SliceExt&gt;::rslice_to_array (1 samples, 0.02%)</title><rect x="0.3434%" y="613" width="0.0245%" height="15" fill="rgb(241,131,45)" fg:x="14" fg:w="1"/><text x="0.5934%" y="623.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (2 samples, 0.05%)</title><rect x="0.3679%" y="613" width="0.0491%" height="15" fill="rgb(249,31,29)" fg:x="15" fg:w="2"/><text x="0.6179%" y="623.50"></text></g><g><title>inout::inout_buf::InOutBuf&lt;u8&gt;::xor_in2out (1 samples, 0.02%)</title><rect x="0.3924%" y="597" width="0.0245%" height="15" fill="rgb(225,111,53)" fg:x="16" fg:w="1"/><text x="0.6424%" y="607.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (8 samples, 0.20%)</title><rect x="0.4170%" y="613" width="0.1962%" height="15" fill="rgb(238,160,17)" fg:x="17" fg:w="8"/><text x="0.6670%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (41 samples, 1.01%)</title><rect x="0.6132%" y="613" width="1.0056%" height="15" fill="rgb(214,148,48)" fg:x="25" fg:w="41"/><text x="0.8632%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.02%)</title><rect x="1.6188%" y="613" width="0.0245%" height="15" fill="rgb(232,36,49)" fg:x="66" fg:w="1"/><text x="1.8688%" y="623.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (7 samples, 0.17%)</title><rect x="1.6434%" y="613" width="0.1717%" height="15" fill="rgb(209,103,24)" fg:x="67" fg:w="7"/><text x="1.8934%" y="623.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.07%)</title><rect x="1.8151%" y="613" width="0.0736%" height="15" fill="rgb(229,88,8)" fg:x="74" fg:w="3"/><text x="2.0651%" y="623.50"></text></g><g><title>&lt;core::slice::iter::ChunksExact&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (4 samples, 0.10%)</title><rect x="1.8886%" y="613" width="0.0981%" height="15" fill="rgb(213,181,19)" fg:x="77" fg:w="4"/><text x="2.1386%" y="623.50"></text></g><g><title>core::slice::raw::from_raw_parts (2 samples, 0.05%)</title><rect x="1.9377%" y="597" width="0.0491%" height="15" fill="rgb(254,191,54)" fg:x="79" fg:w="2"/><text x="2.1877%" y="607.50"></text></g><g><title>core::ptr::slice_from_raw_parts (2 samples, 0.05%)</title><rect x="1.9377%" y="581" width="0.0491%" height="15" fill="rgb(241,83,37)" fg:x="79" fg:w="2"/><text x="2.1877%" y="591.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (2 samples, 0.05%)</title><rect x="1.9377%" y="565" width="0.0491%" height="15" fill="rgb(233,36,39)" fg:x="79" fg:w="2"/><text x="2.1877%" y="575.50"></text></g><g><title>&lt;core::slice::iter::ChunksExactMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (1 samples, 0.02%)</title><rect x="1.9868%" y="613" width="0.0245%" height="15" fill="rgb(226,3,54)" fg:x="81" fg:w="1"/><text x="2.2368%" y="623.50"></text></g><g><title>&lt;core::slice::iter::ChunksExactMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.02%)</title><rect x="2.0113%" y="613" width="0.0245%" height="15" fill="rgb(245,192,40)" fg:x="82" fg:w="1"/><text x="2.2613%" y="623.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="2.0358%" y="613" width="0.0245%" height="15" fill="rgb(238,167,29)" fg:x="83" fg:w="1"/><text x="2.2858%" y="623.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.02%)</title><rect x="2.0358%" y="597" width="0.0245%" height="15" fill="rgb(232,182,51)" fg:x="83" fg:w="1"/><text x="2.2858%" y="607.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (2 samples, 0.05%)</title><rect x="3.0905%" y="597" width="0.0491%" height="15" fill="rgb(231,60,39)" fg:x="126" fg:w="2"/><text x="3.3405%" y="607.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (9 samples, 0.22%)</title><rect x="3.1396%" y="597" width="0.2208%" height="15" fill="rgb(208,69,12)" fg:x="128" fg:w="9"/><text x="3.3896%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (3 samples, 0.07%)</title><rect x="3.2867%" y="581" width="0.0736%" height="15" fill="rgb(235,93,37)" fg:x="134" fg:w="3"/><text x="3.5367%" y="591.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (54 samples, 1.32%)</title><rect x="2.0603%" y="613" width="1.3245%" height="15" fill="rgb(213,116,39)" fg:x="84" fg:w="54"/><text x="2.3103%" y="623.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.02%)</title><rect x="3.3603%" y="597" width="0.0245%" height="15" fill="rgb(222,207,29)" fg:x="137" fg:w="1"/><text x="3.6103%" y="607.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (92 samples, 2.26%)</title><rect x="5.3716%" y="597" width="2.2566%" height="15" fill="rgb(206,96,30)" fg:x="219" fg:w="92"/><text x="5.6216%" y="607.50">&lt;..</text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_mut (1 samples, 0.02%)</title><rect x="7.6282%" y="597" width="0.0245%" height="15" fill="rgb(218,138,4)" fg:x="311" fg:w="1"/><text x="7.8782%" y="607.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_sub (6 samples, 0.15%)</title><rect x="8.8545%" y="581" width="0.1472%" height="15" fill="rgb(250,191,14)" fg:x="361" fg:w="6"/><text x="9.1045%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::cast (9 samples, 0.22%)</title><rect x="9.0017%" y="581" width="0.2208%" height="15" fill="rgb(239,60,40)" fg:x="367" fg:w="9"/><text x="9.2517%" y="591.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (249 samples, 6.11%)</title><rect x="3.3848%" y="613" width="6.1074%" height="15" fill="rgb(206,27,48)" fg:x="138" fg:w="249"/><text x="3.6348%" y="623.50">&lt;core::s..</text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (75 samples, 1.84%)</title><rect x="7.6527%" y="597" width="1.8396%" height="15" fill="rgb(225,35,8)" fg:x="312" fg:w="75"/><text x="7.9027%" y="607.50">c..</text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (11 samples, 0.27%)</title><rect x="9.2225%" y="581" width="0.2698%" height="15" fill="rgb(250,213,24)" fg:x="376" fg:w="11"/><text x="9.4725%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (6 samples, 0.15%)</title><rect x="9.3451%" y="565" width="0.1472%" height="15" fill="rgb(247,123,22)" fg:x="381" fg:w="6"/><text x="9.5951%" y="575.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (9 samples, 0.22%)</title><rect x="9.4923%" y="613" width="0.2208%" height="15" fill="rgb(231,138,38)" fg:x="387" fg:w="9"/><text x="9.7423%" y="623.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (53 samples, 1.30%)</title><rect x="9.7130%" y="613" width="1.3000%" height="15" fill="rgb(231,145,46)" fg:x="396" fg:w="53"/><text x="9.9630%" y="623.50"></text></g><g><title>&lt;hash32::fnv::Hasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="11.0130%" y="613" width="0.0245%" height="15" fill="rgb(251,118,11)" fg:x="449" fg:w="1"/><text x="11.2630%" y="623.50"></text></g><g><title>&lt;poly1305::backend::avx2::State as universal_hash::UhfBackend&gt;::proc_par_blocks (1 samples, 0.02%)</title><rect x="11.0375%" y="613" width="0.0245%" height="15" fill="rgb(217,147,25)" fg:x="450" fg:w="1"/><text x="11.2875%" y="623.50"></text></g><g><title>&lt;std::io::error::repr_bitpacked::Repr as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="11.0621%" y="613" width="0.0245%" height="15" fill="rgb(247,81,37)" fg:x="451" fg:w="1"/><text x="11.3121%" y="623.50"></text></g><g><title>&lt;u8 as subtle::ConstantTimeEq&gt;::ct_eq (1 samples, 0.02%)</title><rect x="11.0866%" y="613" width="0.0245%" height="15" fill="rgb(209,12,38)" fg:x="452" fg:w="1"/><text x="11.3366%" y="623.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (2 samples, 0.05%)</title><rect x="11.1111%" y="613" width="0.0491%" height="15" fill="rgb(227,1,9)" fg:x="453" fg:w="2"/><text x="11.3611%" y="623.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (1 samples, 0.02%)</title><rect x="11.1356%" y="597" width="0.0245%" height="15" fill="rgb(248,47,43)" fg:x="454" fg:w="1"/><text x="11.3856%" y="607.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.02%)</title><rect x="11.1602%" y="613" width="0.0245%" height="15" fill="rgb(221,10,30)" fg:x="455" fg:w="1"/><text x="11.4102%" y="623.50"></text></g><g><title>__memcpy_avx_unaligned_erms (3 samples, 0.07%)</title><rect x="11.1847%" y="613" width="0.0736%" height="15" fill="rgb(210,229,1)" fg:x="456" fg:w="3"/><text x="11.4347%" y="623.50"></text></g><g><title>_init (2 samples, 0.05%)</title><rect x="11.2583%" y="613" width="0.0491%" height="15" fill="rgb(222,148,37)" fg:x="459" fg:w="2"/><text x="11.5083%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="11.3073%" y="613" width="0.0245%" height="15" fill="rgb(234,67,33)" fg:x="461" fg:w="1"/><text x="11.5573%" y="623.50"></text></g><g><title>chacha20::xchacha::hchacha (2 samples, 0.05%)</title><rect x="11.3319%" y="613" width="0.0491%" height="15" fill="rgb(247,98,35)" fg:x="462" fg:w="2"/><text x="11.5819%" y="623.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (1 samples, 0.02%)</title><rect x="11.4790%" y="597" width="0.0245%" height="15" fill="rgb(247,138,52)" fg:x="468" fg:w="1"/><text x="11.7290%" y="607.50"></text></g><g><title>chacha20::xchacha::quarter_round (6 samples, 0.15%)</title><rect x="11.3809%" y="613" width="0.1472%" height="15" fill="rgb(213,79,30)" fg:x="464" fg:w="6"/><text x="11.6309%" y="623.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="11.5036%" y="597" width="0.0245%" height="15" fill="rgb(246,177,23)" fg:x="469" fg:w="1"/><text x="11.7536%" y="607.50"></text></g><g><title>core::cmp::PartialOrd::le (2 samples, 0.05%)</title><rect x="11.5281%" y="613" width="0.0491%" height="15" fill="rgb(230,62,27)" fg:x="470" fg:w="2"/><text x="11.7781%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (2 samples, 0.05%)</title><rect x="11.5771%" y="613" width="0.0491%" height="15" fill="rgb(216,154,8)" fg:x="472" fg:w="2"/><text x="11.8271%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.02%)</title><rect x="11.6262%" y="613" width="0.0245%" height="15" fill="rgb(244,35,45)" fg:x="474" fg:w="1"/><text x="11.8762%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.02%)</title><rect x="11.6507%" y="613" width="0.0245%" height="15" fill="rgb(251,115,12)" fg:x="475" fg:w="1"/><text x="11.9007%" y="623.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.02%)</title><rect x="11.6753%" y="613" width="0.0245%" height="15" fill="rgb(240,54,50)" fg:x="476" fg:w="1"/><text x="11.9253%" y="623.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="11.6998%" y="613" width="0.0245%" height="15" fill="rgb(233,84,52)" fg:x="477" fg:w="1"/><text x="11.9498%" y="623.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.02%)</title><rect x="11.7243%" y="613" width="0.0245%" height="15" fill="rgb(207,117,47)" fg:x="478" fg:w="1"/><text x="11.9743%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_setzero_si128 (1 samples, 0.02%)</title><rect x="11.7488%" y="613" width="0.0245%" height="15" fill="rgb(249,43,39)" fg:x="479" fg:w="1"/><text x="11.9988%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi64x (1 samples, 0.02%)</title><rect x="11.7488%" y="597" width="0.0245%" height="15" fill="rgb(209,38,44)" fg:x="479" fg:w="1"/><text x="11.9988%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi64x (1 samples, 0.02%)</title><rect x="11.7488%" y="581" width="0.0245%" height="15" fill="rgb(236,212,23)" fg:x="479" fg:w="1"/><text x="11.9988%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_storeu_si128 (3 samples, 0.07%)</title><rect x="11.7734%" y="613" width="0.0736%" height="15" fill="rgb(242,79,21)" fg:x="480" fg:w="3"/><text x="12.0234%" y="623.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_unaligned (2 samples, 0.05%)</title><rect x="11.7979%" y="597" width="0.0491%" height="15" fill="rgb(211,96,35)" fg:x="481" fg:w="2"/><text x="12.0479%" y="607.50"></text></g><g><title>core::ptr::write_unaligned (2 samples, 0.05%)</title><rect x="11.7979%" y="581" width="0.0491%" height="15" fill="rgb(253,215,40)" fg:x="481" fg:w="2"/><text x="12.0479%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="11.8469%" y="613" width="0.0245%" height="15" fill="rgb(211,81,21)" fg:x="483" fg:w="1"/><text x="12.0969%" y="623.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.02%)</title><rect x="11.8715%" y="613" width="0.0245%" height="15" fill="rgb(208,190,38)" fg:x="484" fg:w="1"/><text x="12.1215%" y="623.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (1 samples, 0.02%)</title><rect x="11.8960%" y="613" width="0.0245%" height="15" fill="rgb(235,213,38)" fg:x="485" fg:w="1"/><text x="12.1460%" y="623.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (1 samples, 0.02%)</title><rect x="11.9205%" y="613" width="0.0245%" height="15" fill="rgb(237,122,38)" fg:x="486" fg:w="1"/><text x="12.1705%" y="623.50"></text></g><g><title>core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size (1 samples, 0.02%)</title><rect x="11.9451%" y="613" width="0.0245%" height="15" fill="rgb(244,218,35)" fg:x="487" fg:w="1"/><text x="12.1951%" y="623.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3 samples, 0.07%)</title><rect x="11.9696%" y="613" width="0.0736%" height="15" fill="rgb(240,68,47)" fg:x="488" fg:w="3"/><text x="12.2196%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::enumerate (1 samples, 0.02%)</title><rect x="12.0432%" y="613" width="0.0245%" height="15" fill="rgb(210,16,53)" fg:x="491" fg:w="1"/><text x="12.2932%" y="623.50"></text></g><g><title>core::iter::adapters::enumerate::Enumerate&lt;I&gt;::new (1 samples, 0.02%)</title><rect x="12.0432%" y="597" width="0.0245%" height="15" fill="rgb(235,124,12)" fg:x="491" fg:w="1"/><text x="12.2932%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.02%)</title><rect x="12.0677%" y="613" width="0.0245%" height="15" fill="rgb(224,169,11)" fg:x="492" fg:w="1"/><text x="12.3177%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (15 samples, 0.37%)</title><rect x="12.0922%" y="613" width="0.3679%" height="15" fill="rgb(250,166,2)" fg:x="493" fg:w="15"/><text x="12.3422%" y="623.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_le_bytes (1 samples, 0.02%)</title><rect x="12.4601%" y="613" width="0.0245%" height="15" fill="rgb(242,216,29)" fg:x="508" fg:w="1"/><text x="12.7101%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.02%)</title><rect x="12.4847%" y="613" width="0.0245%" height="15" fill="rgb(230,116,27)" fg:x="509" fg:w="1"/><text x="12.7347%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (1 samples, 0.02%)</title><rect x="12.5092%" y="613" width="0.0245%" height="15" fill="rgb(228,99,48)" fg:x="510" fg:w="1"/><text x="12.7592%" y="623.50"></text></g><g><title>core::ptr::read (1 samples, 0.02%)</title><rect x="12.5337%" y="613" width="0.0245%" height="15" fill="rgb(253,11,6)" fg:x="511" fg:w="1"/><text x="12.7837%" y="623.50"></text></g><g><title>core::ptr::write (6 samples, 0.15%)</title><rect x="12.5583%" y="613" width="0.1472%" height="15" fill="rgb(247,143,39)" fg:x="512" fg:w="6"/><text x="12.8083%" y="623.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.02%)</title><rect x="12.7054%" y="613" width="0.0245%" height="15" fill="rgb(236,97,10)" fg:x="518" fg:w="1"/><text x="12.9554%" y="623.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.02%)</title><rect x="12.7299%" y="613" width="0.0245%" height="15" fill="rgb(233,208,19)" fg:x="519" fg:w="1"/><text x="12.9799%" y="623.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (1 samples, 0.02%)</title><rect x="12.7545%" y="613" width="0.0245%" height="15" fill="rgb(216,164,2)" fg:x="520" fg:w="1"/><text x="13.0045%" y="623.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (2 samples, 0.05%)</title><rect x="12.7790%" y="613" width="0.0491%" height="15" fill="rgb(220,129,5)" fg:x="521" fg:w="2"/><text x="13.0290%" y="623.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="12.8035%" y="597" width="0.0245%" height="15" fill="rgb(242,17,10)" fg:x="522" fg:w="1"/><text x="13.0535%" y="607.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.02%)</title><rect x="12.8035%" y="581" width="0.0245%" height="15" fill="rgb(242,107,0)" fg:x="522" fg:w="1"/><text x="13.0535%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::cast (1 samples, 0.02%)</title><rect x="12.8281%" y="581" width="0.0245%" height="15" fill="rgb(251,28,31)" fg:x="523" fg:w="1"/><text x="13.0781%" y="591.50"></text></g><g><title>core::slice::raw::from_raw_parts (4 samples, 0.10%)</title><rect x="12.8281%" y="613" width="0.0981%" height="15" fill="rgb(233,223,10)" fg:x="523" fg:w="4"/><text x="13.0781%" y="623.50"></text></g><g><title>core::ptr::slice_from_raw_parts (4 samples, 0.10%)</title><rect x="12.8281%" y="597" width="0.0981%" height="15" fill="rgb(215,21,27)" fg:x="523" fg:w="4"/><text x="13.0781%" y="607.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (3 samples, 0.07%)</title><rect x="12.8526%" y="581" width="0.0736%" height="15" fill="rgb(232,23,21)" fg:x="524" fg:w="3"/><text x="13.1026%" y="591.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (2 samples, 0.05%)</title><rect x="12.9262%" y="581" width="0.0491%" height="15" fill="rgb(244,5,23)" fg:x="527" fg:w="2"/><text x="13.1762%" y="591.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (3 samples, 0.07%)</title><rect x="12.9262%" y="613" width="0.0736%" height="15" fill="rgb(226,81,46)" fg:x="527" fg:w="3"/><text x="13.1762%" y="623.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (3 samples, 0.07%)</title><rect x="12.9262%" y="597" width="0.0736%" height="15" fill="rgb(247,70,30)" fg:x="527" fg:w="3"/><text x="13.1762%" y="607.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::cast (1 samples, 0.02%)</title><rect x="12.9752%" y="581" width="0.0245%" height="15" fill="rgb(212,68,19)" fg:x="529" fg:w="1"/><text x="13.2252%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="12.9998%" y="613" width="0.0245%" height="15" fill="rgb(240,187,13)" fg:x="530" fg:w="1"/><text x="13.2498%" y="623.50"></text></g><g><title>core::time::Duration::from_micros (1 samples, 0.02%)</title><rect x="13.0243%" y="613" width="0.0245%" height="15" fill="rgb(223,113,26)" fg:x="531" fg:w="1"/><text x="13.2743%" y="623.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (2 samples, 0.05%)</title><rect x="13.0488%" y="613" width="0.0491%" height="15" fill="rgb(206,192,2)" fg:x="532" fg:w="2"/><text x="13.2988%" y="623.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::iter_position (2 samples, 0.05%)</title><rect x="13.0979%" y="613" width="0.0491%" height="15" fill="rgb(241,108,4)" fg:x="534" fg:w="2"/><text x="13.3479%" y="623.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.02%)</title><rect x="13.1224%" y="597" width="0.0245%" height="15" fill="rgb(247,173,49)" fg:x="535" fg:w="1"/><text x="13.3724%" y="607.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (4 samples, 0.10%)</title><rect x="13.1469%" y="613" width="0.0981%" height="15" fill="rgb(224,114,35)" fg:x="536" fg:w="4"/><text x="13.3969%" y="623.50"></text></g><g><title>generic_array::transmute (1 samples, 0.02%)</title><rect x="13.2450%" y="613" width="0.0245%" height="15" fill="rgb(245,159,27)" fg:x="540" fg:w="1"/><text x="13.4950%" y="623.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="13.2450%" y="597" width="0.0245%" height="15" fill="rgb(245,172,44)" fg:x="540" fg:w="1"/><text x="13.4950%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="13.2696%" y="613" width="0.0245%" height="15" fill="rgb(236,23,11)" fg:x="541" fg:w="1"/><text x="13.5196%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (1 samples, 0.02%)</title><rect x="13.2941%" y="613" width="0.0245%" height="15" fill="rgb(205,117,38)" fg:x="542" fg:w="1"/><text x="13.5441%" y="623.50"></text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::as_mut_slice (1 samples, 0.02%)</title><rect x="13.3186%" y="613" width="0.0245%" height="15" fill="rgb(237,72,25)" fg:x="543" fg:w="1"/><text x="13.5686%" y="623.50"></text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::is_full (1 samples, 0.02%)</title><rect x="13.3431%" y="613" width="0.0245%" height="15" fill="rgb(244,70,9)" fg:x="544" fg:w="1"/><text x="13.5931%" y="623.50"></text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::push (3 samples, 0.07%)</title><rect x="13.3677%" y="613" width="0.0736%" height="15" fill="rgb(217,125,39)" fg:x="545" fg:w="3"/><text x="13.6177%" y="623.50"></text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::push_unchecked (2 samples, 0.05%)</title><rect x="13.4413%" y="613" width="0.0491%" height="15" fill="rgb(235,36,10)" fg:x="548" fg:w="2"/><text x="13.6913%" y="623.50"></text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::truncate (1 samples, 0.02%)</title><rect x="13.4903%" y="613" width="0.0245%" height="15" fill="rgb(251,123,47)" fg:x="550" fg:w="1"/><text x="13.7403%" y="623.50"></text></g><g><title>polling::Event::new (1 samples, 0.02%)</title><rect x="13.5148%" y="613" width="0.0245%" height="15" fill="rgb(221,13,13)" fg:x="551" fg:w="1"/><text x="13.7648%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="13.5148%" y="597" width="0.0245%" height="15" fill="rgb(238,131,9)" fg:x="551" fg:w="1"/><text x="13.7648%" y="607.50"></text></g><g><title>polling::epoll::Poller::wait (1 samples, 0.02%)</title><rect x="13.5394%" y="613" width="0.0245%" height="15" fill="rgb(211,50,8)" fg:x="552" fg:w="1"/><text x="13.7894%" y="623.50"></text></g><g><title>rustix::backend::event::epoll::modify (1 samples, 0.02%)</title><rect x="13.5639%" y="613" width="0.0245%" height="15" fill="rgb(245,182,24)" fg:x="553" fg:w="1"/><text x="13.8139%" y="623.50"></text></g><g><title>rustix::backend::reg::RetReg&lt;Num&gt;::decode_void (1 samples, 0.02%)</title><rect x="13.5884%" y="613" width="0.0245%" height="15" fill="rgb(242,14,37)" fg:x="554" fg:w="1"/><text x="13.8384%" y="623.50"></text></g><g><title>std::io::error::repr_bitpacked::decode_repr (2 samples, 0.05%)</title><rect x="13.6130%" y="613" width="0.0491%" height="15" fill="rgb(246,228,12)" fg:x="555" fg:w="2"/><text x="13.8630%" y="623.50"></text></g><g><title>subtle::black_box (2 samples, 0.05%)</title><rect x="13.6620%" y="613" width="0.0491%" height="15" fill="rgb(213,55,15)" fg:x="557" fg:w="2"/><text x="13.9120%" y="623.50"></text></g><g><title>tftp::encryption::apply_bit_padding (3 samples, 0.07%)</title><rect x="13.7111%" y="613" width="0.0736%" height="15" fill="rgb(209,9,3)" fg:x="559" fg:w="3"/><text x="13.9611%" y="623.50"></text></g><g><title>tftp::encryption::remove_bit_padding (1 samples, 0.02%)</title><rect x="13.7846%" y="613" width="0.0245%" height="15" fill="rgb(230,59,30)" fg:x="562" fg:w="1"/><text x="14.0346%" y="623.50"></text></g><g><title>tftp::server::single_thread::server::{{closure}} (1 samples, 0.02%)</title><rect x="13.8092%" y="613" width="0.0245%" height="15" fill="rgb(209,121,21)" fg:x="563" fg:w="1"/><text x="14.0592%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.02%)</title><rect x="13.8092%" y="597" width="0.0245%" height="15" fill="rgb(220,109,13)" fg:x="563" fg:w="1"/><text x="14.0592%" y="607.50"></text></g><g><title>[[stack]] (554 samples, 13.59%)</title><rect x="0.2698%" y="629" width="13.5884%" height="15" fill="rgb(232,18,1)" fg:x="11" fg:w="554"/><text x="0.5198%" y="639.50">[[stack]]</text></g><g><title>universal_hash::UniversalHash::verify (1 samples, 0.02%)</title><rect x="13.8337%" y="613" width="0.0245%" height="15" fill="rgb(215,41,42)" fg:x="564" fg:w="1"/><text x="14.0837%" y="623.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4 as &lt;&amp;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4&gt;&gt;::mul::__Impl_mul__&gt;::_impl_mul::m (2 samples, 0.05%)</title><rect x="13.8582%" y="597" width="0.0491%" height="15" fill="rgb(224,123,36)" fg:x="565" fg:w="2"/><text x="14.1082%" y="607.50"></text></g><g><title>curve25519_dalek::backend::vector::packed_simd::u32x8::mul32 (2 samples, 0.05%)</title><rect x="13.8582%" y="581" width="0.0491%" height="15" fill="rgb(240,125,3)" fg:x="565" fg:w="2"/><text x="14.1082%" y="591.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::packed_simd::u32x8 as curve25519_dalek::backend::vector::packed_simd::u32x8::mul32::__Impl_mul32__&gt;::_impl_mul32 (2 samples, 0.05%)</title><rect x="13.8582%" y="565" width="0.0491%" height="15" fill="rgb(205,98,50)" fg:x="565" fg:w="2"/><text x="14.1082%" y="575.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.05%)</title><rect x="13.8582%" y="549" width="0.0491%" height="15" fill="rgb(205,185,37)" fg:x="565" fg:w="2"/><text x="14.1082%" y="559.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::packed_simd::u64x4 as core::convert::From&lt;core::core_arch::x86::__m256i&gt;&gt;::from (2 samples, 0.05%)</title><rect x="13.8582%" y="533" width="0.0491%" height="15" fill="rgb(238,207,15)" fg:x="565" fg:w="2"/><text x="14.1082%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.02%)</title><rect x="13.8828%" y="517" width="0.0245%" height="15" fill="rgb(213,199,42)" fg:x="566" fg:w="1"/><text x="14.1328%" y="527.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::packed_simd::u32x8 as core::ops::arith::Add&gt;::add (1 samples, 0.02%)</title><rect x="13.9073%" y="597" width="0.0245%" height="15" fill="rgb(235,201,11)" fg:x="567" fg:w="1"/><text x="14.1573%" y="607.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::packed_simd::u32x8 as &lt;curve25519_dalek::backend::vector::packed_simd::u32x8 as core::ops::arith::Add&gt;::add::__Impl_add__&gt;::_impl_add (1 samples, 0.02%)</title><rect x="13.9073%" y="581" width="0.0245%" height="15" fill="rgb(207,46,11)" fg:x="567" fg:w="1"/><text x="14.1573%" y="591.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.02%)</title><rect x="13.9073%" y="565" width="0.0245%" height="15" fill="rgb(241,35,35)" fg:x="567" fg:w="1"/><text x="14.1573%" y="575.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.02%)</title><rect x="13.9073%" y="549" width="0.0245%" height="15" fill="rgb(243,32,47)" fg:x="567" fg:w="1"/><text x="14.1573%" y="559.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.02%)</title><rect x="13.9318%" y="565" width="0.0245%" height="15" fill="rgb(247,202,23)" fg:x="568" fg:w="1"/><text x="14.1818%" y="575.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4 as &lt;&amp;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4&gt;&gt;::mul::__Impl_mul__&gt;::_impl_mul (6 samples, 0.15%)</title><rect x="13.8582%" y="613" width="0.1472%" height="15" fill="rgb(219,102,11)" fg:x="565" fg:w="6"/><text x="14.1082%" y="623.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::packed_simd::u64x4 as core::ops::arith::Add&gt;::add (3 samples, 0.07%)</title><rect x="13.9318%" y="597" width="0.0736%" height="15" fill="rgb(243,110,44)" fg:x="568" fg:w="3"/><text x="14.1818%" y="607.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::packed_simd::u64x4 as &lt;curve25519_dalek::backend::vector::packed_simd::u64x4 as core::ops::arith::Add&gt;::add::__Impl_add__&gt;::_impl_add (3 samples, 0.07%)</title><rect x="13.9318%" y="581" width="0.0736%" height="15" fill="rgb(222,74,54)" fg:x="568" fg:w="3"/><text x="14.1818%" y="591.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (2 samples, 0.05%)</title><rect x="13.9563%" y="565" width="0.0491%" height="15" fill="rgb(216,99,12)" fg:x="569" fg:w="2"/><text x="14.2063%" y="575.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (3 samples, 0.07%)</title><rect x="14.0054%" y="613" width="0.0736%" height="15" fill="rgb(226,22,26)" fg:x="571" fg:w="3"/><text x="14.2554%" y="623.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3 samples, 0.07%)</title><rect x="14.0790%" y="613" width="0.0736%" height="15" fill="rgb(217,163,10)" fg:x="574" fg:w="3"/><text x="14.3290%" y="623.50"></text></g><g><title>&lt;[T] as subtle::ConstantTimeEq&gt;::ct_eq (1 samples, 0.02%)</title><rect x="14.1526%" y="613" width="0.0245%" height="15" fill="rgb(213,25,53)" fg:x="577" fg:w="1"/><text x="14.4026%" y="623.50"></text></g><g><title>&lt;[Z] as zeroize::Zeroize&gt;::zeroize (1 samples, 0.02%)</title><rect x="14.1771%" y="613" width="0.0245%" height="15" fill="rgb(252,105,26)" fg:x="578" fg:w="1"/><text x="14.4271%" y="623.50"></text></g><g><title>zeroize::volatile_set (1 samples, 0.02%)</title><rect x="14.1771%" y="597" width="0.0245%" height="15" fill="rgb(220,39,43)" fg:x="578" fg:w="1"/><text x="14.4271%" y="607.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.02%)</title><rect x="14.1771%" y="581" width="0.0245%" height="15" fill="rgb(229,68,48)" fg:x="578" fg:w="1"/><text x="14.4271%" y="591.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (1 samples, 0.02%)</title><rect x="14.2016%" y="613" width="0.0245%" height="15" fill="rgb(252,8,32)" fg:x="579" fg:w="1"/><text x="14.4516%" y="623.50"></text></g><g><title>chacha20::avx2_cpuid::InitToken::get (1 samples, 0.02%)</title><rect x="14.2016%" y="597" width="0.0245%" height="15" fill="rgb(223,20,43)" fg:x="579" fg:w="1"/><text x="14.4516%" y="607.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (2 samples, 0.05%)</title><rect x="14.2261%" y="613" width="0.0491%" height="15" fill="rgb(229,81,49)" fg:x="580" fg:w="2"/><text x="14.4761%" y="623.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (2 samples, 0.05%)</title><rect x="14.5941%" y="389" width="0.0491%" height="15" fill="rgb(236,28,36)" fg:x="595" fg:w="2"/><text x="14.8441%" y="399.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="14.6676%" y="373" width="0.0245%" height="15" fill="rgb(249,185,26)" fg:x="598" fg:w="1"/><text x="14.9176%" y="383.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="14.6431%" y="389" width="0.0736%" height="15" fill="rgb(249,174,33)" fg:x="597" fg:w="3"/><text x="14.8931%" y="399.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (1 samples, 0.02%)</title><rect x="14.6922%" y="373" width="0.0245%" height="15" fill="rgb(233,201,37)" fg:x="599" fg:w="1"/><text x="14.9422%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::cast (1 samples, 0.02%)</title><rect x="14.6922%" y="357" width="0.0245%" height="15" fill="rgb(221,78,26)" fg:x="599" fg:w="1"/><text x="14.9422%" y="367.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (55 samples, 1.35%)</title><rect x="14.7167%" y="389" width="1.3490%" height="15" fill="rgb(250,127,30)" fg:x="600" fg:w="55"/><text x="14.9667%" y="399.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (5 samples, 0.12%)</title><rect x="16.0657%" y="389" width="0.1226%" height="15" fill="rgb(230,49,44)" fg:x="655" fg:w="5"/><text x="16.3157%" y="399.50"></text></g><g><title>chacha20::backends::avx2::rounds (1 samples, 0.02%)</title><rect x="16.1884%" y="389" width="0.0245%" height="15" fill="rgb(229,67,23)" fg:x="660" fg:w="1"/><text x="16.4384%" y="399.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (7 samples, 0.17%)</title><rect x="16.2129%" y="389" width="0.1717%" height="15" fill="rgb(249,83,47)" fg:x="661" fg:w="7"/><text x="16.4629%" y="399.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (2 samples, 0.05%)</title><rect x="16.7770%" y="373" width="0.0491%" height="15" fill="rgb(215,43,3)" fg:x="684" fg:w="2"/><text x="17.0270%" y="383.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (2 samples, 0.05%)</title><rect x="16.8261%" y="373" width="0.0491%" height="15" fill="rgb(238,154,13)" fg:x="686" fg:w="2"/><text x="17.0761%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (3 samples, 0.07%)</title><rect x="16.8752%" y="373" width="0.0736%" height="15" fill="rgb(219,56,2)" fg:x="688" fg:w="3"/><text x="17.1252%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect x="16.9487%" y="373" width="0.0245%" height="15" fill="rgb(233,0,4)" fg:x="691" fg:w="1"/><text x="17.1987%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (2 samples, 0.05%)</title><rect x="16.9733%" y="373" width="0.0491%" height="15" fill="rgb(235,30,7)" fg:x="692" fg:w="2"/><text x="17.2233%" y="383.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (2 samples, 0.05%)</title><rect x="16.9733%" y="357" width="0.0491%" height="15" fill="rgb(250,79,13)" fg:x="692" fg:w="2"/><text x="17.2233%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (5 samples, 0.12%)</title><rect x="17.0223%" y="373" width="0.1226%" height="15" fill="rgb(211,146,34)" fg:x="694" fg:w="5"/><text x="17.2723%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (4 samples, 0.10%)</title><rect x="17.1450%" y="373" width="0.0981%" height="15" fill="rgb(228,22,38)" fg:x="699" fg:w="4"/><text x="17.3950%" y="383.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (2 samples, 0.05%)</title><rect x="17.1940%" y="357" width="0.0491%" height="15" fill="rgb(235,168,5)" fg:x="701" fg:w="2"/><text x="17.4440%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.05%)</title><rect x="17.2431%" y="373" width="0.0491%" height="15" fill="rgb(221,155,16)" fg:x="703" fg:w="2"/><text x="17.4931%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (6 samples, 0.15%)</title><rect x="17.2921%" y="373" width="0.1472%" height="15" fill="rgb(215,215,53)" fg:x="705" fg:w="6"/><text x="17.5421%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (45 samples, 1.10%)</title><rect x="16.3846%" y="389" width="1.1038%" height="15" fill="rgb(223,4,10)" fg:x="668" fg:w="45"/><text x="16.6346%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (2 samples, 0.05%)</title><rect x="17.4393%" y="373" width="0.0491%" height="15" fill="rgb(234,103,6)" fg:x="711" fg:w="2"/><text x="17.6893%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (4 samples, 0.10%)</title><rect x="17.4883%" y="389" width="0.0981%" height="15" fill="rgb(227,97,0)" fg:x="713" fg:w="4"/><text x="17.7383%" y="399.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (4 samples, 0.10%)</title><rect x="18.0034%" y="373" width="0.0981%" height="15" fill="rgb(234,150,53)" fg:x="734" fg:w="4"/><text x="18.2534%" y="383.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (1 samples, 0.02%)</title><rect x="18.1015%" y="373" width="0.0245%" height="15" fill="rgb(228,201,54)" fg:x="738" fg:w="1"/><text x="18.3515%" y="383.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (1 samples, 0.02%)</title><rect x="18.1261%" y="373" width="0.0245%" height="15" fill="rgb(222,22,37)" fg:x="739" fg:w="1"/><text x="18.3761%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.02%)</title><rect x="18.1506%" y="373" width="0.0245%" height="15" fill="rgb(237,53,32)" fg:x="740" fg:w="1"/><text x="18.4006%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (2 samples, 0.05%)</title><rect x="18.1751%" y="373" width="0.0491%" height="15" fill="rgb(233,25,53)" fg:x="741" fg:w="2"/><text x="18.4251%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.02%)</title><rect x="18.2242%" y="373" width="0.0245%" height="15" fill="rgb(210,40,34)" fg:x="743" fg:w="1"/><text x="18.4742%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (3 samples, 0.07%)</title><rect x="18.2487%" y="373" width="0.0736%" height="15" fill="rgb(241,220,44)" fg:x="744" fg:w="3"/><text x="18.4987%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (8 samples, 0.20%)</title><rect x="18.3223%" y="373" width="0.1962%" height="15" fill="rgb(235,28,35)" fg:x="747" fg:w="8"/><text x="18.5723%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (5 samples, 0.12%)</title><rect x="18.5185%" y="373" width="0.1226%" height="15" fill="rgb(210,56,17)" fg:x="755" fg:w="5"/><text x="18.7685%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (44 samples, 1.08%)</title><rect x="17.5865%" y="389" width="1.0792%" height="15" fill="rgb(224,130,29)" fg:x="717" fg:w="44"/><text x="17.8365%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.02%)</title><rect x="18.6412%" y="373" width="0.0245%" height="15" fill="rgb(235,212,8)" fg:x="760" fg:w="1"/><text x="18.8912%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.02%)</title><rect x="18.6412%" y="357" width="0.0245%" height="15" fill="rgb(223,33,50)" fg:x="760" fg:w="1"/><text x="18.8912%" y="367.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (2 samples, 0.05%)</title><rect x="18.8864%" y="373" width="0.0491%" height="15" fill="rgb(219,149,13)" fg:x="770" fg:w="2"/><text x="19.1364%" y="383.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (2 samples, 0.05%)</title><rect x="18.9355%" y="373" width="0.0491%" height="15" fill="rgb(250,156,29)" fg:x="772" fg:w="2"/><text x="19.1855%" y="383.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (3 samples, 0.07%)</title><rect x="18.9845%" y="373" width="0.0736%" height="15" fill="rgb(216,193,19)" fg:x="774" fg:w="3"/><text x="19.2345%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.02%)</title><rect x="19.0581%" y="373" width="0.0245%" height="15" fill="rgb(216,135,14)" fg:x="777" fg:w="1"/><text x="19.3081%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (2 samples, 0.05%)</title><rect x="19.0827%" y="373" width="0.0491%" height="15" fill="rgb(241,47,5)" fg:x="778" fg:w="2"/><text x="19.3327%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (5 samples, 0.12%)</title><rect x="19.1317%" y="373" width="0.1226%" height="15" fill="rgb(233,42,35)" fg:x="780" fg:w="5"/><text x="19.3817%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (3 samples, 0.07%)</title><rect x="19.2544%" y="373" width="0.0736%" height="15" fill="rgb(231,13,6)" fg:x="785" fg:w="3"/><text x="19.5044%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (2 samples, 0.05%)</title><rect x="19.3279%" y="373" width="0.0491%" height="15" fill="rgb(207,181,40)" fg:x="788" fg:w="2"/><text x="19.5779%" y="383.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.02%)</title><rect x="19.3525%" y="357" width="0.0245%" height="15" fill="rgb(254,173,49)" fg:x="789" fg:w="1"/><text x="19.6025%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (30 samples, 0.74%)</title><rect x="18.6657%" y="389" width="0.7358%" height="15" fill="rgb(221,1,38)" fg:x="761" fg:w="30"/><text x="18.9157%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.02%)</title><rect x="19.3770%" y="373" width="0.0245%" height="15" fill="rgb(206,124,46)" fg:x="790" fg:w="1"/><text x="19.6270%" y="383.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (6 samples, 0.15%)</title><rect x="19.7694%" y="373" width="0.1472%" height="15" fill="rgb(249,21,11)" fg:x="806" fg:w="6"/><text x="20.0194%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (22 samples, 0.54%)</title><rect x="19.4015%" y="389" width="0.5396%" height="15" fill="rgb(222,201,40)" fg:x="791" fg:w="22"/><text x="19.6515%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect x="19.9166%" y="373" width="0.0245%" height="15" fill="rgb(235,61,29)" fg:x="812" fg:w="1"/><text x="20.1666%" y="383.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="21.3883%" y="373" width="0.0245%" height="15" fill="rgb(219,207,3)" fg:x="872" fg:w="1"/><text x="21.6383%" y="383.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.02%)</title><rect x="21.4128%" y="373" width="0.0245%" height="15" fill="rgb(222,56,46)" fg:x="873" fg:w="1"/><text x="21.6628%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.02%)</title><rect x="21.4373%" y="373" width="0.0245%" height="15" fill="rgb(239,76,54)" fg:x="874" fg:w="1"/><text x="21.6873%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.02%)</title><rect x="21.4619%" y="373" width="0.0245%" height="15" fill="rgb(231,124,27)" fg:x="875" fg:w="1"/><text x="21.7119%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.02%)</title><rect x="21.4864%" y="373" width="0.0245%" height="15" fill="rgb(249,195,6)" fg:x="876" fg:w="1"/><text x="21.7364%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.02%)</title><rect x="21.5109%" y="373" width="0.0245%" height="15" fill="rgb(237,174,47)" fg:x="877" fg:w="1"/><text x="21.7609%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.05%)</title><rect x="21.5354%" y="373" width="0.0491%" height="15" fill="rgb(206,201,31)" fg:x="878" fg:w="2"/><text x="21.7854%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.05%)</title><rect x="21.5845%" y="373" width="0.0491%" height="15" fill="rgb(231,57,52)" fg:x="880" fg:w="2"/><text x="21.8345%" y="383.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.02%)</title><rect x="21.6090%" y="357" width="0.0245%" height="15" fill="rgb(248,177,22)" fg:x="881" fg:w="1"/><text x="21.8590%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (70 samples, 1.72%)</title><rect x="19.9411%" y="389" width="1.7169%" height="15" fill="rgb(215,211,37)" fg:x="813" fg:w="70"/><text x="20.1911%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.02%)</title><rect x="21.6336%" y="373" width="0.0245%" height="15" fill="rgb(241,128,51)" fg:x="882" fg:w="1"/><text x="21.8836%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (11 samples, 0.27%)</title><rect x="21.6581%" y="389" width="0.2698%" height="15" fill="rgb(227,165,31)" fg:x="883" fg:w="11"/><text x="21.9081%" y="399.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi64x (6 samples, 0.15%)</title><rect x="21.7807%" y="373" width="0.1472%" height="15" fill="rgb(228,167,24)" fg:x="888" fg:w="6"/><text x="22.0307%" y="383.50"></text></g><g><title>core::core_arch::simd::i64x4::new (4 samples, 0.10%)</title><rect x="21.8298%" y="357" width="0.0981%" height="15" fill="rgb(228,143,12)" fg:x="890" fg:w="4"/><text x="22.0798%" y="367.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.02%)</title><rect x="21.9279%" y="389" width="0.0245%" height="15" fill="rgb(249,149,8)" fg:x="894" fg:w="1"/><text x="22.1779%" y="399.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.02%)</title><rect x="21.9279%" y="373" width="0.0245%" height="15" fill="rgb(243,35,44)" fg:x="894" fg:w="1"/><text x="22.1779%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.02%)</title><rect x="21.9279%" y="357" width="0.0245%" height="15" fill="rgb(246,89,9)" fg:x="894" fg:w="1"/><text x="22.1779%" y="367.50"></text></g><g><title>core::core_arch::simd::i8x32::new (1 samples, 0.02%)</title><rect x="21.9279%" y="341" width="0.0245%" height="15" fill="rgb(233,213,13)" fg:x="894" fg:w="1"/><text x="22.1779%" y="351.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (29 samples, 0.71%)</title><rect x="21.9524%" y="389" width="0.7113%" height="15" fill="rgb(233,141,41)" fg:x="895" fg:w="29"/><text x="22.2024%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (20 samples, 0.49%)</title><rect x="22.6637%" y="389" width="0.4906%" height="15" fill="rgb(239,167,4)" fg:x="924" fg:w="20"/><text x="22.9137%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (31 samples, 0.76%)</title><rect x="23.1543%" y="389" width="0.7604%" height="15" fill="rgb(209,217,16)" fg:x="944" fg:w="31"/><text x="23.4043%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (44 samples, 1.08%)</title><rect x="23.9146%" y="389" width="1.0792%" height="15" fill="rgb(219,88,35)" fg:x="975" fg:w="44"/><text x="24.1646%" y="399.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (438 samples, 10.74%)</title><rect x="14.2752%" y="405" width="10.7432%" height="15" fill="rgb(220,193,23)" fg:x="582" fg:w="438"/><text x="14.5252%" y="415.50">chacha20::backen..</text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (1 samples, 0.02%)</title><rect x="24.9939%" y="389" width="0.0245%" height="15" fill="rgb(230,90,52)" fg:x="1019" fg:w="1"/><text x="25.2439%" y="399.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (1 samples, 0.02%)</title><rect x="25.0184%" y="405" width="0.0245%" height="15" fill="rgb(252,106,19)" fg:x="1020" fg:w="1"/><text x="25.2684%" y="415.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (6 samples, 0.15%)</title><rect x="25.0429%" y="405" width="0.1472%" height="15" fill="rgb(206,74,20)" fg:x="1021" fg:w="6"/><text x="25.2929%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (6 samples, 0.15%)</title><rect x="25.1901%" y="405" width="0.1472%" height="15" fill="rgb(230,138,44)" fg:x="1027" fg:w="6"/><text x="25.4401%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (2 samples, 0.05%)</title><rect x="25.3373%" y="405" width="0.0491%" height="15" fill="rgb(235,182,43)" fg:x="1033" fg:w="2"/><text x="25.5873%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect x="25.3863%" y="405" width="0.0245%" height="15" fill="rgb(242,16,51)" fg:x="1035" fg:w="1"/><text x="25.6363%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.02%)</title><rect x="25.4108%" y="405" width="0.0245%" height="15" fill="rgb(248,9,4)" fg:x="1036" fg:w="1"/><text x="25.6608%" y="415.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.02%)</title><rect x="25.4108%" y="389" width="0.0245%" height="15" fill="rgb(210,31,22)" fg:x="1036" fg:w="1"/><text x="25.6608%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (3 samples, 0.07%)</title><rect x="25.4354%" y="405" width="0.0736%" height="15" fill="rgb(239,54,39)" fg:x="1037" fg:w="3"/><text x="25.6854%" y="415.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.02%)</title><rect x="25.4844%" y="389" width="0.0245%" height="15" fill="rgb(230,99,41)" fg:x="1039" fg:w="1"/><text x="25.7344%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (18 samples, 0.44%)</title><rect x="25.5090%" y="405" width="0.4415%" height="15" fill="rgb(253,106,12)" fg:x="1040" fg:w="18"/><text x="25.7590%" y="415.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (2 samples, 0.05%)</title><rect x="25.9505%" y="405" width="0.0491%" height="15" fill="rgb(213,46,41)" fg:x="1058" fg:w="2"/><text x="26.2005%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (12 samples, 0.29%)</title><rect x="25.9995%" y="405" width="0.2943%" height="15" fill="rgb(215,133,35)" fg:x="1060" fg:w="12"/><text x="26.2495%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (10 samples, 0.25%)</title><rect x="26.2938%" y="405" width="0.2453%" height="15" fill="rgb(213,28,5)" fg:x="1072" fg:w="10"/><text x="26.5438%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (11 samples, 0.27%)</title><rect x="26.5391%" y="405" width="0.2698%" height="15" fill="rgb(215,77,49)" fg:x="1082" fg:w="11"/><text x="26.7891%" y="415.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_par_ks_blocks (519 samples, 12.73%)</title><rect x="14.2752%" y="453" width="12.7299%" height="15" fill="rgb(248,100,22)" fg:x="582" fg:w="519"/><text x="14.5252%" y="463.50">&lt;chacha20::backends..</text></g><g><title>chacha20::backends::avx2::rounds (519 samples, 12.73%)</title><rect x="14.2752%" y="437" width="12.7299%" height="15" fill="rgb(208,67,9)" fg:x="582" fg:w="519"/><text x="14.5252%" y="447.50">chacha20::backends:..</text></g><g><title>chacha20::backends::avx2::double_quarter_round (519 samples, 12.73%)</title><rect x="14.2752%" y="421" width="12.7299%" height="15" fill="rgb(219,133,21)" fg:x="582" fg:w="519"/><text x="14.5252%" y="431.50">chacha20::backends:..</text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (8 samples, 0.20%)</title><rect x="26.8089%" y="405" width="0.1962%" height="15" fill="rgb(246,46,29)" fg:x="1093" fg:w="8"/><text x="27.0589%" y="415.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="27.1523%" y="373" width="0.0245%" height="15" fill="rgb(246,185,52)" fg:x="1107" fg:w="1"/><text x="27.4023%" y="383.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (1 samples, 0.02%)</title><rect x="27.1523%" y="357" width="0.0245%" height="15" fill="rgb(252,136,11)" fg:x="1107" fg:w="1"/><text x="27.4023%" y="367.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (14 samples, 0.34%)</title><rect x="27.1768%" y="373" width="0.3434%" height="15" fill="rgb(219,138,53)" fg:x="1108" fg:w="14"/><text x="27.4268%" y="383.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (1 samples, 0.02%)</title><rect x="27.5202%" y="373" width="0.0245%" height="15" fill="rgb(211,51,23)" fg:x="1122" fg:w="1"/><text x="27.7702%" y="383.50"></text></g><g><title>chacha20::backends::avx2::rounds (1 samples, 0.02%)</title><rect x="27.5448%" y="373" width="0.0245%" height="15" fill="rgb(247,221,28)" fg:x="1123" fg:w="1"/><text x="27.7948%" y="383.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (4 samples, 0.10%)</title><rect x="27.5693%" y="373" width="0.0981%" height="15" fill="rgb(251,222,45)" fg:x="1124" fg:w="4"/><text x="27.8193%" y="383.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.02%)</title><rect x="27.7410%" y="357" width="0.0245%" height="15" fill="rgb(217,162,53)" fg:x="1131" fg:w="1"/><text x="27.9910%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (2 samples, 0.05%)</title><rect x="27.7655%" y="357" width="0.0491%" height="15" fill="rgb(229,93,14)" fg:x="1132" fg:w="2"/><text x="28.0155%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.02%)</title><rect x="27.8146%" y="357" width="0.0245%" height="15" fill="rgb(209,67,49)" fg:x="1134" fg:w="1"/><text x="28.0646%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect x="27.8391%" y="357" width="0.0245%" height="15" fill="rgb(213,87,29)" fg:x="1135" fg:w="1"/><text x="28.0891%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.02%)</title><rect x="27.8636%" y="357" width="0.0245%" height="15" fill="rgb(205,151,52)" fg:x="1136" fg:w="1"/><text x="28.1136%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.05%)</title><rect x="27.8882%" y="357" width="0.0491%" height="15" fill="rgb(253,215,39)" fg:x="1137" fg:w="2"/><text x="28.1382%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (12 samples, 0.29%)</title><rect x="27.6674%" y="373" width="0.2943%" height="15" fill="rgb(221,220,41)" fg:x="1128" fg:w="12"/><text x="27.9174%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.02%)</title><rect x="27.9372%" y="357" width="0.0245%" height="15" fill="rgb(218,133,21)" fg:x="1139" fg:w="1"/><text x="28.1872%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.02%)</title><rect x="27.9617%" y="373" width="0.0245%" height="15" fill="rgb(221,193,43)" fg:x="1140" fg:w="1"/><text x="28.2117%" y="383.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (1 samples, 0.02%)</title><rect x="27.9863%" y="357" width="0.0245%" height="15" fill="rgb(240,128,52)" fg:x="1141" fg:w="1"/><text x="28.2363%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.02%)</title><rect x="28.0108%" y="357" width="0.0245%" height="15" fill="rgb(253,114,12)" fg:x="1142" fg:w="1"/><text x="28.2608%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.02%)</title><rect x="28.0353%" y="357" width="0.0245%" height="15" fill="rgb(215,223,47)" fg:x="1143" fg:w="1"/><text x="28.2853%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (4 samples, 0.10%)</title><rect x="27.9863%" y="373" width="0.0981%" height="15" fill="rgb(248,225,23)" fg:x="1141" fg:w="4"/><text x="28.2363%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.02%)</title><rect x="28.0598%" y="357" width="0.0245%" height="15" fill="rgb(250,108,0)" fg:x="1144" fg:w="1"/><text x="28.3098%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.02%)</title><rect x="28.0598%" y="341" width="0.0245%" height="15" fill="rgb(228,208,7)" fg:x="1144" fg:w="1"/><text x="28.3098%" y="351.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.02%)</title><rect x="28.0844%" y="357" width="0.0245%" height="15" fill="rgb(244,45,10)" fg:x="1145" fg:w="1"/><text x="28.3344%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect x="28.1089%" y="357" width="0.0245%" height="15" fill="rgb(207,125,25)" fg:x="1146" fg:w="1"/><text x="28.3589%" y="367.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.02%)</title><rect x="28.1334%" y="357" width="0.0245%" height="15" fill="rgb(210,195,18)" fg:x="1147" fg:w="1"/><text x="28.3834%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.02%)</title><rect x="28.1580%" y="357" width="0.0245%" height="15" fill="rgb(249,80,12)" fg:x="1148" fg:w="1"/><text x="28.4080%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (5 samples, 0.12%)</title><rect x="28.0844%" y="373" width="0.1226%" height="15" fill="rgb(221,65,9)" fg:x="1145" fg:w="5"/><text x="28.3344%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.02%)</title><rect x="28.1825%" y="357" width="0.0245%" height="15" fill="rgb(235,49,36)" fg:x="1149" fg:w="1"/><text x="28.4325%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (3 samples, 0.07%)</title><rect x="28.2070%" y="373" width="0.0736%" height="15" fill="rgb(225,32,20)" fg:x="1150" fg:w="3"/><text x="28.4570%" y="383.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.02%)</title><rect x="28.2561%" y="357" width="0.0245%" height="15" fill="rgb(215,141,46)" fg:x="1152" fg:w="1"/><text x="28.5061%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.02%)</title><rect x="28.5995%" y="357" width="0.0245%" height="15" fill="rgb(250,160,47)" fg:x="1166" fg:w="1"/><text x="28.8495%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (15 samples, 0.37%)</title><rect x="28.2806%" y="373" width="0.3679%" height="15" fill="rgb(216,222,40)" fg:x="1153" fg:w="15"/><text x="28.5306%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.02%)</title><rect x="28.6240%" y="357" width="0.0245%" height="15" fill="rgb(234,217,39)" fg:x="1167" fg:w="1"/><text x="28.8740%" y="367.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (3 samples, 0.07%)</title><rect x="28.6485%" y="373" width="0.0736%" height="15" fill="rgb(207,178,40)" fg:x="1168" fg:w="3"/><text x="28.8985%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi64x (1 samples, 0.02%)</title><rect x="28.6976%" y="357" width="0.0245%" height="15" fill="rgb(221,136,13)" fg:x="1170" fg:w="1"/><text x="28.9476%" y="367.50"></text></g><g><title>core::core_arch::simd::i64x4::new (1 samples, 0.02%)</title><rect x="28.6976%" y="341" width="0.0245%" height="15" fill="rgb(249,199,10)" fg:x="1170" fg:w="1"/><text x="28.9476%" y="351.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (11 samples, 0.27%)</title><rect x="28.7221%" y="373" width="0.2698%" height="15" fill="rgb(249,222,13)" fg:x="1171" fg:w="11"/><text x="28.9721%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (6 samples, 0.15%)</title><rect x="28.9919%" y="373" width="0.1472%" height="15" fill="rgb(244,185,38)" fg:x="1182" fg:w="6"/><text x="29.2419%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (5 samples, 0.12%)</title><rect x="29.1391%" y="373" width="0.1226%" height="15" fill="rgb(236,202,9)" fg:x="1188" fg:w="5"/><text x="29.3891%" y="383.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (93 samples, 2.28%)</title><rect x="27.0052%" y="389" width="2.2811%" height="15" fill="rgb(250,229,37)" fg:x="1101" fg:w="93"/><text x="27.2552%" y="399.50">c..</text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.02%)</title><rect x="29.2617%" y="373" width="0.0245%" height="15" fill="rgb(206,174,23)" fg:x="1193" fg:w="1"/><text x="29.5117%" y="383.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (2 samples, 0.05%)</title><rect x="29.2862%" y="389" width="0.0491%" height="15" fill="rgb(211,33,43)" fg:x="1194" fg:w="2"/><text x="29.5362%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (2 samples, 0.05%)</title><rect x="29.3353%" y="389" width="0.0491%" height="15" fill="rgb(245,58,50)" fg:x="1196" fg:w="2"/><text x="29.5853%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (2 samples, 0.05%)</title><rect x="29.3844%" y="389" width="0.0491%" height="15" fill="rgb(244,68,36)" fg:x="1198" fg:w="2"/><text x="29.6344%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (2 samples, 0.05%)</title><rect x="29.4334%" y="389" width="0.0491%" height="15" fill="rgb(232,229,15)" fg:x="1200" fg:w="2"/><text x="29.6834%" y="399.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.02%)</title><rect x="29.4579%" y="373" width="0.0245%" height="15" fill="rgb(254,30,23)" fg:x="1201" fg:w="1"/><text x="29.7079%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (3 samples, 0.07%)</title><rect x="29.4825%" y="389" width="0.0736%" height="15" fill="rgb(235,160,14)" fg:x="1202" fg:w="3"/><text x="29.7325%" y="399.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.02%)</title><rect x="29.5560%" y="389" width="0.0245%" height="15" fill="rgb(212,155,44)" fg:x="1205" fg:w="1"/><text x="29.8060%" y="399.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi64x (1 samples, 0.02%)</title><rect x="29.5560%" y="373" width="0.0245%" height="15" fill="rgb(226,2,50)" fg:x="1205" fg:w="1"/><text x="29.8060%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.05%)</title><rect x="29.5806%" y="389" width="0.0491%" height="15" fill="rgb(234,177,6)" fg:x="1206" fg:w="2"/><text x="29.8306%" y="399.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (632 samples, 15.50%)</title><rect x="14.2752%" y="613" width="15.5016%" height="15" fill="rgb(217,24,9)" fg:x="582" fg:w="632"/><text x="14.5252%" y="623.50">&lt;chacha20poly1305::ChaCh..</text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::decrypt_in_place_detached (632 samples, 15.50%)</title><rect x="14.2752%" y="597" width="15.5016%" height="15" fill="rgb(220,13,46)" fg:x="582" fg:w="632"/><text x="14.5252%" y="607.50">chacha20poly1305::cipher..</text></g><g><title>cipher::stream::StreamCipher::apply_keystream (632 samples, 15.50%)</title><rect x="14.2752%" y="581" width="15.5016%" height="15" fill="rgb(239,221,27)" fg:x="582" fg:w="632"/><text x="14.5252%" y="591.50">cipher::stream::StreamCi..</text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (632 samples, 15.50%)</title><rect x="14.2752%" y="565" width="15.5016%" height="15" fill="rgb(222,198,25)" fg:x="582" fg:w="632"/><text x="14.5252%" y="575.50">cipher::stream::StreamCi..</text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (632 samples, 15.50%)</title><rect x="14.2752%" y="549" width="15.5016%" height="15" fill="rgb(211,99,13)" fg:x="582" fg:w="632"/><text x="14.5252%" y="559.50">&lt;cipher::stream_wrapper:..</text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (632 samples, 15.50%)</title><rect x="14.2752%" y="533" width="15.5016%" height="15" fill="rgb(232,111,31)" fg:x="582" fg:w="632"/><text x="14.5252%" y="543.50">cipher::stream_core::Str..</text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (632 samples, 15.50%)</title><rect x="14.2752%" y="517" width="15.5016%" height="15" fill="rgb(245,82,37)" fg:x="582" fg:w="632"/><text x="14.5252%" y="527.50">&lt;chacha20::xchacha::XCha..</text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (632 samples, 15.50%)</title><rect x="14.2752%" y="501" width="15.5016%" height="15" fill="rgb(227,149,46)" fg:x="582" fg:w="632"/><text x="14.5252%" y="511.50">&lt;chacha20::ChaChaCore&lt;R&gt;..</text></g><g><title>chacha20::backends::avx2::inner (632 samples, 15.50%)</title><rect x="14.2752%" y="485" width="15.5016%" height="15" fill="rgb(218,36,50)" fg:x="582" fg:w="632"/><text x="14.5252%" y="495.50">chacha20::backends::avx2..</text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (632 samples, 15.50%)</title><rect x="14.2752%" y="469" width="15.5016%" height="15" fill="rgb(226,80,48)" fg:x="582" fg:w="632"/><text x="14.5252%" y="479.50">&lt;cipher::stream_core::Ap..</text></g><g><title>cipher::stream_core::StreamBackend::gen_tail_blocks (113 samples, 2.77%)</title><rect x="27.0052%" y="453" width="2.7716%" height="15" fill="rgb(238,224,15)" fg:x="1101" fg:w="113"/><text x="27.2552%" y="463.50">ci..</text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (113 samples, 2.77%)</title><rect x="27.0052%" y="437" width="2.7716%" height="15" fill="rgb(241,136,10)" fg:x="1101" fg:w="113"/><text x="27.2552%" y="447.50">&lt;c..</text></g><g><title>chacha20::backends::avx2::rounds (113 samples, 2.77%)</title><rect x="27.0052%" y="421" width="2.7716%" height="15" fill="rgb(208,32,45)" fg:x="1101" fg:w="113"/><text x="27.2552%" y="431.50">ch..</text></g><g><title>chacha20::backends::avx2::double_quarter_round (113 samples, 2.77%)</title><rect x="27.0052%" y="405" width="2.7716%" height="15" fill="rgb(207,135,9)" fg:x="1101" fg:w="113"/><text x="27.2552%" y="415.50">ch..</text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (6 samples, 0.15%)</title><rect x="29.6296%" y="389" width="0.1472%" height="15" fill="rgb(206,86,44)" fg:x="1208" fg:w="6"/><text x="29.8796%" y="399.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="29.8749%" y="389" width="0.0245%" height="15" fill="rgb(245,177,15)" fg:x="1218" fg:w="1"/><text x="30.1249%" y="399.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (22 samples, 0.54%)</title><rect x="29.8994%" y="389" width="0.5396%" height="15" fill="rgb(206,64,50)" fg:x="1219" fg:w="22"/><text x="30.1494%" y="399.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (2 samples, 0.05%)</title><rect x="30.4390%" y="389" width="0.0491%" height="15" fill="rgb(234,36,40)" fg:x="1241" fg:w="2"/><text x="30.6890%" y="399.50"></text></g><g><title>chacha20::backends::avx2::inner (1 samples, 0.02%)</title><rect x="30.4881%" y="389" width="0.0245%" height="15" fill="rgb(213,64,8)" fg:x="1243" fg:w="1"/><text x="30.7381%" y="399.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (1 samples, 0.02%)</title><rect x="30.4881%" y="373" width="0.0245%" height="15" fill="rgb(210,75,36)" fg:x="1243" fg:w="1"/><text x="30.7381%" y="383.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (1 samples, 0.02%)</title><rect x="30.5126%" y="389" width="0.0245%" height="15" fill="rgb(229,88,21)" fg:x="1244" fg:w="1"/><text x="30.7626%" y="399.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.02%)</title><rect x="30.7824%" y="373" width="0.0245%" height="15" fill="rgb(252,204,47)" fg:x="1255" fg:w="1"/><text x="31.0324%" y="383.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (1 samples, 0.02%)</title><rect x="30.8070%" y="373" width="0.0245%" height="15" fill="rgb(208,77,27)" fg:x="1256" fg:w="1"/><text x="31.0570%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (14 samples, 0.34%)</title><rect x="30.5372%" y="389" width="0.3434%" height="15" fill="rgb(221,76,26)" fg:x="1245" fg:w="14"/><text x="30.7872%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (2 samples, 0.05%)</title><rect x="30.8315%" y="373" width="0.0491%" height="15" fill="rgb(225,139,18)" fg:x="1257" fg:w="2"/><text x="31.0815%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.02%)</title><rect x="30.8805%" y="389" width="0.0245%" height="15" fill="rgb(230,137,11)" fg:x="1259" fg:w="1"/><text x="31.1305%" y="399.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (2 samples, 0.05%)</title><rect x="30.9787%" y="373" width="0.0491%" height="15" fill="rgb(212,28,1)" fg:x="1263" fg:w="2"/><text x="31.2287%" y="383.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (3 samples, 0.07%)</title><rect x="31.0277%" y="373" width="0.0736%" height="15" fill="rgb(248,164,17)" fg:x="1265" fg:w="3"/><text x="31.2777%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (3 samples, 0.07%)</title><rect x="31.1013%" y="373" width="0.0736%" height="15" fill="rgb(222,171,42)" fg:x="1268" fg:w="3"/><text x="31.3513%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (2 samples, 0.05%)</title><rect x="31.1749%" y="373" width="0.0491%" height="15" fill="rgb(243,84,45)" fg:x="1271" fg:w="2"/><text x="31.4249%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (5 samples, 0.12%)</title><rect x="31.2239%" y="373" width="0.1226%" height="15" fill="rgb(252,49,23)" fg:x="1273" fg:w="5"/><text x="31.4739%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="31.3466%" y="373" width="0.0245%" height="15" fill="rgb(215,19,7)" fg:x="1278" fg:w="1"/><text x="31.5966%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (20 samples, 0.49%)</title><rect x="30.9051%" y="389" width="0.4906%" height="15" fill="rgb(238,81,41)" fg:x="1260" fg:w="20"/><text x="31.1551%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.02%)</title><rect x="31.3711%" y="373" width="0.0245%" height="15" fill="rgb(210,199,37)" fg:x="1279" fg:w="1"/><text x="31.6211%" y="383.50"></text></g><g><title>chacha20::backends::avx2::rounds (1 samples, 0.02%)</title><rect x="31.4447%" y="373" width="0.0245%" height="15" fill="rgb(244,192,49)" fg:x="1282" fg:w="1"/><text x="31.6947%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.02%)</title><rect x="31.4692%" y="373" width="0.0245%" height="15" fill="rgb(226,211,11)" fg:x="1283" fg:w="1"/><text x="31.7192%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (5 samples, 0.12%)</title><rect x="31.3956%" y="389" width="0.1226%" height="15" fill="rgb(236,162,54)" fg:x="1280" fg:w="5"/><text x="31.6456%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.02%)</title><rect x="31.4937%" y="373" width="0.0245%" height="15" fill="rgb(220,229,9)" fg:x="1284" fg:w="1"/><text x="31.7437%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (2 samples, 0.05%)</title><rect x="31.5183%" y="389" width="0.0491%" height="15" fill="rgb(250,87,22)" fg:x="1285" fg:w="2"/><text x="31.7683%" y="399.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.02%)</title><rect x="31.5428%" y="373" width="0.0245%" height="15" fill="rgb(239,43,17)" fg:x="1286" fg:w="1"/><text x="31.7928%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (15 samples, 0.37%)</title><rect x="31.5673%" y="389" width="0.3679%" height="15" fill="rgb(231,177,25)" fg:x="1287" fg:w="15"/><text x="31.8173%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.02%)</title><rect x="31.9107%" y="373" width="0.0245%" height="15" fill="rgb(219,179,1)" fg:x="1301" fg:w="1"/><text x="32.1607%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (3 samples, 0.07%)</title><rect x="31.9352%" y="389" width="0.0736%" height="15" fill="rgb(238,219,53)" fg:x="1302" fg:w="3"/><text x="32.1852%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (5 samples, 0.12%)</title><rect x="32.0088%" y="389" width="0.1226%" height="15" fill="rgb(232,167,36)" fg:x="1305" fg:w="5"/><text x="32.2588%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (4 samples, 0.10%)</title><rect x="32.1315%" y="389" width="0.0981%" height="15" fill="rgb(244,19,51)" fg:x="1310" fg:w="4"/><text x="32.3815%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (13 samples, 0.32%)</title><rect x="32.2296%" y="389" width="0.3189%" height="15" fill="rgb(224,6,22)" fg:x="1314" fg:w="13"/><text x="32.4796%" y="399.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (120 samples, 2.94%)</title><rect x="29.7768%" y="405" width="2.9433%" height="15" fill="rgb(224,145,5)" fg:x="1214" fg:w="120"/><text x="30.0268%" y="415.50">ch..</text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (7 samples, 0.17%)</title><rect x="32.5484%" y="389" width="0.1717%" height="15" fill="rgb(234,130,49)" fg:x="1327" fg:w="7"/><text x="32.7984%" y="399.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (1 samples, 0.02%)</title><rect x="32.7201%" y="405" width="0.0245%" height="15" fill="rgb(254,6,2)" fg:x="1334" fg:w="1"/><text x="32.9701%" y="415.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (1 samples, 0.02%)</title><rect x="32.7447%" y="405" width="0.0245%" height="15" fill="rgb(208,96,46)" fg:x="1335" fg:w="1"/><text x="32.9947%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.02%)</title><rect x="32.7692%" y="405" width="0.0245%" height="15" fill="rgb(239,3,39)" fg:x="1336" fg:w="1"/><text x="33.0192%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (2 samples, 0.05%)</title><rect x="32.7937%" y="405" width="0.0491%" height="15" fill="rgb(233,210,1)" fg:x="1337" fg:w="2"/><text x="33.0437%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (2 samples, 0.05%)</title><rect x="32.8428%" y="405" width="0.0491%" height="15" fill="rgb(244,137,37)" fg:x="1339" fg:w="2"/><text x="33.0928%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.02%)</title><rect x="32.8918%" y="405" width="0.0245%" height="15" fill="rgb(240,136,2)" fg:x="1341" fg:w="1"/><text x="33.1418%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (3 samples, 0.07%)</title><rect x="32.9164%" y="405" width="0.0736%" height="15" fill="rgb(239,18,37)" fg:x="1342" fg:w="3"/><text x="33.1664%" y="415.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.02%)</title><rect x="32.9654%" y="389" width="0.0245%" height="15" fill="rgb(218,185,22)" fg:x="1344" fg:w="1"/><text x="33.2154%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.02%)</title><rect x="32.9899%" y="405" width="0.0245%" height="15" fill="rgb(225,218,4)" fg:x="1345" fg:w="1"/><text x="33.2399%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (4 samples, 0.10%)</title><rect x="33.0145%" y="405" width="0.0981%" height="15" fill="rgb(230,182,32)" fg:x="1346" fg:w="4"/><text x="33.2645%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (3 samples, 0.07%)</title><rect x="33.1126%" y="405" width="0.0736%" height="15" fill="rgb(242,56,43)" fg:x="1350" fg:w="3"/><text x="33.3626%" y="415.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_par_ks_blocks (142 samples, 3.48%)</title><rect x="29.7768%" y="453" width="3.4830%" height="15" fill="rgb(233,99,24)" fg:x="1214" fg:w="142"/><text x="30.0268%" y="463.50">&lt;ch..</text></g><g><title>chacha20::backends::avx2::rounds (142 samples, 3.48%)</title><rect x="29.7768%" y="437" width="3.4830%" height="15" fill="rgb(234,209,42)" fg:x="1214" fg:w="142"/><text x="30.0268%" y="447.50">cha..</text></g><g><title>chacha20::backends::avx2::double_quarter_round (142 samples, 3.48%)</title><rect x="29.7768%" y="421" width="3.4830%" height="15" fill="rgb(227,7,12)" fg:x="1214" fg:w="142"/><text x="30.0268%" y="431.50">cha..</text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (3 samples, 0.07%)</title><rect x="33.1862%" y="405" width="0.0736%" height="15" fill="rgb(245,203,43)" fg:x="1353" fg:w="3"/><text x="33.4362%" y="415.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="33.2597%" y="373" width="0.0245%" height="15" fill="rgb(238,205,33)" fg:x="1356" fg:w="1"/><text x="33.5097%" y="383.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (2 samples, 0.05%)</title><rect x="33.2843%" y="373" width="0.0491%" height="15" fill="rgb(231,56,7)" fg:x="1357" fg:w="2"/><text x="33.5343%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.02%)</title><rect x="33.3333%" y="373" width="0.0245%" height="15" fill="rgb(244,186,29)" fg:x="1359" fg:w="1"/><text x="33.5833%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (2 samples, 0.05%)</title><rect x="33.3579%" y="373" width="0.0491%" height="15" fill="rgb(234,111,31)" fg:x="1360" fg:w="2"/><text x="33.6079%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.02%)</title><rect x="33.3824%" y="357" width="0.0245%" height="15" fill="rgb(241,149,10)" fg:x="1361" fg:w="1"/><text x="33.6324%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.02%)</title><rect x="33.4069%" y="373" width="0.0245%" height="15" fill="rgb(249,206,44)" fg:x="1362" fg:w="1"/><text x="33.6569%" y="383.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.02%)</title><rect x="33.4069%" y="357" width="0.0245%" height="15" fill="rgb(251,153,30)" fg:x="1362" fg:w="1"/><text x="33.6569%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.02%)</title><rect x="33.4314%" y="373" width="0.0245%" height="15" fill="rgb(239,152,38)" fg:x="1363" fg:w="1"/><text x="33.6814%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (4 samples, 0.10%)</title><rect x="33.4560%" y="373" width="0.0981%" height="15" fill="rgb(249,139,47)" fg:x="1364" fg:w="4"/><text x="33.7060%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.02%)</title><rect x="33.5296%" y="357" width="0.0245%" height="15" fill="rgb(244,64,35)" fg:x="1367" fg:w="1"/><text x="33.7796%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (3 samples, 0.07%)</title><rect x="33.5541%" y="373" width="0.0736%" height="15" fill="rgb(216,46,15)" fg:x="1368" fg:w="3"/><text x="33.8041%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (2 samples, 0.05%)</title><rect x="33.6277%" y="373" width="0.0491%" height="15" fill="rgb(250,74,19)" fg:x="1371" fg:w="2"/><text x="33.8777%" y="383.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (18 samples, 0.44%)</title><rect x="33.2597%" y="389" width="0.4415%" height="15" fill="rgb(249,42,33)" fg:x="1356" fg:w="18"/><text x="33.5097%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.02%)</title><rect x="33.6767%" y="373" width="0.0245%" height="15" fill="rgb(242,149,17)" fg:x="1373" fg:w="1"/><text x="33.9267%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (2 samples, 0.05%)</title><rect x="33.7013%" y="389" width="0.0491%" height="15" fill="rgb(244,29,21)" fg:x="1374" fg:w="2"/><text x="33.9513%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.02%)</title><rect x="33.7503%" y="389" width="0.0245%" height="15" fill="rgb(220,130,37)" fg:x="1376" fg:w="1"/><text x="34.0003%" y="399.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::encrypt_in_place_detached (164 samples, 4.02%)</title><rect x="29.7768%" y="613" width="4.0226%" height="15" fill="rgb(211,67,2)" fg:x="1214" fg:w="164"/><text x="30.0268%" y="623.50">&lt;cha..</text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::encrypt_in_place_detached (164 samples, 4.02%)</title><rect x="29.7768%" y="597" width="4.0226%" height="15" fill="rgb(235,68,52)" fg:x="1214" fg:w="164"/><text x="30.0268%" y="607.50">chac..</text></g><g><title>cipher::stream::StreamCipher::apply_keystream (164 samples, 4.02%)</title><rect x="29.7768%" y="581" width="4.0226%" height="15" fill="rgb(246,142,3)" fg:x="1214" fg:w="164"/><text x="30.0268%" y="591.50">ciph..</text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (164 samples, 4.02%)</title><rect x="29.7768%" y="565" width="4.0226%" height="15" fill="rgb(241,25,7)" fg:x="1214" fg:w="164"/><text x="30.0268%" y="575.50">ciph..</text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (164 samples, 4.02%)</title><rect x="29.7768%" y="549" width="4.0226%" height="15" fill="rgb(242,119,39)" fg:x="1214" fg:w="164"/><text x="30.0268%" y="559.50">&lt;cip..</text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (164 samples, 4.02%)</title><rect x="29.7768%" y="533" width="4.0226%" height="15" fill="rgb(241,98,45)" fg:x="1214" fg:w="164"/><text x="30.0268%" y="543.50">ciph..</text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (164 samples, 4.02%)</title><rect x="29.7768%" y="517" width="4.0226%" height="15" fill="rgb(254,28,30)" fg:x="1214" fg:w="164"/><text x="30.0268%" y="527.50">&lt;cha..</text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (164 samples, 4.02%)</title><rect x="29.7768%" y="501" width="4.0226%" height="15" fill="rgb(241,142,54)" fg:x="1214" fg:w="164"/><text x="30.0268%" y="511.50">&lt;cha..</text></g><g><title>chacha20::backends::avx2::inner (164 samples, 4.02%)</title><rect x="29.7768%" y="485" width="4.0226%" height="15" fill="rgb(222,85,15)" fg:x="1214" fg:w="164"/><text x="30.0268%" y="495.50">chac..</text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (164 samples, 4.02%)</title><rect x="29.7768%" y="469" width="4.0226%" height="15" fill="rgb(210,85,47)" fg:x="1214" fg:w="164"/><text x="30.0268%" y="479.50">&lt;cip..</text></g><g><title>cipher::stream_core::StreamBackend::gen_tail_blocks (22 samples, 0.54%)</title><rect x="33.2597%" y="453" width="0.5396%" height="15" fill="rgb(224,206,25)" fg:x="1356" fg:w="22"/><text x="33.5097%" y="463.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (22 samples, 0.54%)</title><rect x="33.2597%" y="437" width="0.5396%" height="15" fill="rgb(243,201,19)" fg:x="1356" fg:w="22"/><text x="33.5097%" y="447.50"></text></g><g><title>chacha20::backends::avx2::rounds (22 samples, 0.54%)</title><rect x="33.2597%" y="421" width="0.5396%" height="15" fill="rgb(236,59,4)" fg:x="1356" fg:w="22"/><text x="33.5097%" y="431.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (22 samples, 0.54%)</title><rect x="33.2597%" y="405" width="0.5396%" height="15" fill="rgb(254,179,45)" fg:x="1356" fg:w="22"/><text x="33.5097%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.02%)</title><rect x="33.7748%" y="389" width="0.0245%" height="15" fill="rgb(226,14,10)" fg:x="1377" fg:w="1"/><text x="34.0248%" y="399.50"></text></g><g><title>inout::inout_buf::InOutBuf&lt;T&gt;::into_chunks (1 samples, 0.02%)</title><rect x="33.8239%" y="597" width="0.0245%" height="15" fill="rgb(244,27,41)" fg:x="1379" fg:w="1"/><text x="34.0739%" y="607.50"></text></g><g><title>inout::inout_buf::InOutBuf&lt;T&gt;::len (1 samples, 0.02%)</title><rect x="33.8484%" y="597" width="0.0245%" height="15" fill="rgb(235,35,32)" fg:x="1380" fg:w="1"/><text x="34.0984%" y="607.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (4 samples, 0.10%)</title><rect x="33.7994%" y="613" width="0.0981%" height="15" fill="rgb(218,68,31)" fg:x="1378" fg:w="4"/><text x="34.0494%" y="623.50"></text></g><g><title>inout::inout_buf::InOutBuf&lt;u8&gt;::xor_in2out (1 samples, 0.02%)</title><rect x="33.8729%" y="597" width="0.0245%" height="15" fill="rgb(207,120,37)" fg:x="1381" fg:w="1"/><text x="34.1229%" y="607.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipherSeek&gt;::try_seek (2 samples, 0.05%)</title><rect x="33.8975%" y="613" width="0.0491%" height="15" fill="rgb(227,98,0)" fg:x="1382" fg:w="2"/><text x="34.1475%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.02%)</title><rect x="33.9220%" y="597" width="0.0245%" height="15" fill="rgb(207,7,3)" fg:x="1383" fg:w="1"/><text x="34.1720%" y="607.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (200 samples, 4.91%)</title><rect x="33.9465%" y="613" width="4.9056%" height="15" fill="rgb(206,98,19)" fg:x="1384" fg:w="200"/><text x="34.1965%" y="623.50">&lt;core:..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="38.8521%" y="613" width="0.0245%" height="15" fill="rgb(217,5,26)" fg:x="1584" fg:w="1"/><text x="39.1021%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (29 samples, 0.71%)</title><rect x="38.8766%" y="613" width="0.7113%" height="15" fill="rgb(235,190,38)" fg:x="1585" fg:w="29"/><text x="39.1266%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.05%)</title><rect x="39.5879%" y="613" width="0.0491%" height="15" fill="rgb(247,86,24)" fg:x="1614" fg:w="2"/><text x="39.8379%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (1 samples, 0.02%)</title><rect x="39.6370%" y="613" width="0.0245%" height="15" fill="rgb(205,101,16)" fg:x="1616" fg:w="1"/><text x="39.8870%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (3 samples, 0.07%)</title><rect x="39.6615%" y="613" width="0.0736%" height="15" fill="rgb(246,168,33)" fg:x="1617" fg:w="3"/><text x="39.9115%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="39.7351%" y="613" width="0.0491%" height="15" fill="rgb(231,114,1)" fg:x="1620" fg:w="2"/><text x="39.9851%" y="623.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (44 samples, 1.08%)</title><rect x="39.7842%" y="613" width="1.0792%" height="15" fill="rgb(207,184,53)" fg:x="1622" fg:w="44"/><text x="40.0342%" y="623.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (3 samples, 0.07%)</title><rect x="40.7898%" y="597" width="0.0736%" height="15" fill="rgb(224,95,51)" fg:x="1663" fg:w="3"/><text x="41.0398%" y="607.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.07%)</title><rect x="40.8634%" y="613" width="0.0736%" height="15" fill="rgb(212,188,45)" fg:x="1666" fg:w="3"/><text x="41.1134%" y="623.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="40.9370%" y="613" width="0.0736%" height="15" fill="rgb(223,154,38)" fg:x="1669" fg:w="3"/><text x="41.1870%" y="623.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.02%)</title><rect x="40.9860%" y="597" width="0.0245%" height="15" fill="rgb(251,22,52)" fg:x="1671" fg:w="1"/><text x="41.2360%" y="607.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (1 samples, 0.02%)</title><rect x="41.5992%" y="597" width="0.0245%" height="15" fill="rgb(229,209,22)" fg:x="1696" fg:w="1"/><text x="41.8492%" y="607.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (3 samples, 0.07%)</title><rect x="41.6237%" y="597" width="0.0736%" height="15" fill="rgb(234,138,34)" fg:x="1697" fg:w="3"/><text x="41.8737%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.02%)</title><rect x="41.6728%" y="581" width="0.0245%" height="15" fill="rgb(212,95,11)" fg:x="1699" fg:w="1"/><text x="41.9228%" y="591.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (30 samples, 0.74%)</title><rect x="41.0105%" y="613" width="0.7358%" height="15" fill="rgb(240,179,47)" fg:x="1672" fg:w="30"/><text x="41.2605%" y="623.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::sub_ptr (2 samples, 0.05%)</title><rect x="41.6973%" y="597" width="0.0491%" height="15" fill="rgb(240,163,11)" fg:x="1700" fg:w="2"/><text x="41.9473%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (1 samples, 0.02%)</title><rect x="41.7219%" y="581" width="0.0245%" height="15" fill="rgb(236,37,12)" fg:x="1701" fg:w="1"/><text x="41.9719%" y="591.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (50 samples, 1.23%)</title><rect x="43.1445%" y="597" width="1.2264%" height="15" fill="rgb(232,164,16)" fg:x="1759" fg:w="50"/><text x="43.3945%" y="607.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_mut (4 samples, 0.10%)</title><rect x="44.3709%" y="597" width="0.0981%" height="15" fill="rgb(244,205,15)" fg:x="1809" fg:w="4"/><text x="44.6209%" y="607.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_sub (1 samples, 0.02%)</title><rect x="45.0822%" y="581" width="0.0245%" height="15" fill="rgb(223,117,47)" fg:x="1838" fg:w="1"/><text x="45.3322%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::cast (1 samples, 0.02%)</title><rect x="45.1067%" y="581" width="0.0245%" height="15" fill="rgb(244,107,35)" fg:x="1839" fg:w="1"/><text x="45.3567%" y="591.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (146 samples, 3.58%)</title><rect x="41.7464%" y="613" width="3.5811%" height="15" fill="rgb(205,140,8)" fg:x="1702" fg:w="146"/><text x="41.9964%" y="623.50">&lt;cor..</text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (35 samples, 0.86%)</title><rect x="44.4690%" y="597" width="0.8585%" height="15" fill="rgb(228,84,46)" fg:x="1813" fg:w="35"/><text x="44.7190%" y="607.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (8 samples, 0.20%)</title><rect x="45.1312%" y="581" width="0.1962%" height="15" fill="rgb(254,188,9)" fg:x="1840" fg:w="8"/><text x="45.3812%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (2 samples, 0.05%)</title><rect x="45.2784%" y="565" width="0.0491%" height="15" fill="rgb(206,112,54)" fg:x="1846" fg:w="2"/><text x="45.5284%" y="575.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::avx2::edwards::ExtendedPoint as curve25519_dalek::backend::vector::avx2::edwards::ExtendedPoint::double::__Impl_double__&gt;::_impl_double (1 samples, 0.02%)</title><rect x="45.3274%" y="613" width="0.0245%" height="15" fill="rgb(216,84,49)" fg:x="1848" fg:w="1"/><text x="45.5774%" y="623.50"></text></g><g><title>curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4::blend (1 samples, 0.02%)</title><rect x="45.3274%" y="597" width="0.0245%" height="15" fill="rgb(214,194,35)" fg:x="1848" fg:w="1"/><text x="45.5774%" y="607.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4 as curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4::blend::__Impl_blend__&gt;::_impl_blend (1 samples, 0.02%)</title><rect x="45.3274%" y="581" width="0.0245%" height="15" fill="rgb(249,28,3)" fg:x="1848" fg:w="1"/><text x="45.5774%" y="591.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4 as curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4::blend::__Impl_blend__&gt;::_impl_blend::blend_lanes (1 samples, 0.02%)</title><rect x="45.3274%" y="565" width="0.0245%" height="15" fill="rgb(222,56,52)" fg:x="1848" fg:w="1"/><text x="45.5774%" y="575.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.02%)</title><rect x="45.3274%" y="549" width="0.0245%" height="15" fill="rgb(245,217,50)" fg:x="1848" fg:w="1"/><text x="45.5774%" y="559.50"></text></g><g><title>curve25519_dalek::backend::vector::packed_simd::&lt;impl core::convert::From&lt;curve25519_dalek::backend::vector::packed_simd::u32x8&gt; for core::core_arch::x86::__m256i&gt;::from (1 samples, 0.02%)</title><rect x="45.3274%" y="533" width="0.0245%" height="15" fill="rgb(213,201,24)" fg:x="1848" fg:w="1"/><text x="45.5774%" y="543.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="45.3274%" y="517" width="0.0245%" height="15" fill="rgb(248,116,28)" fg:x="1848" fg:w="1"/><text x="45.5774%" y="527.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::packed_simd::u64x4 as core::ops::arith::Sub&gt;::sub (1 samples, 0.02%)</title><rect x="45.3520%" y="581" width="0.0245%" height="15" fill="rgb(219,72,43)" fg:x="1849" fg:w="1"/><text x="45.6020%" y="591.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.02%)</title><rect x="45.3520%" y="565" width="0.0245%" height="15" fill="rgb(209,138,14)" fg:x="1849" fg:w="1"/><text x="45.6020%" y="575.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4 as curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4::square_and_negate_D::__Impl_square_and_negate_D__&gt;::_impl_square_and_negate_D (2 samples, 0.05%)</title><rect x="45.3520%" y="613" width="0.0491%" height="15" fill="rgb(222,18,33)" fg:x="1849" fg:w="2"/><text x="45.6020%" y="623.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4 as curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4::square_and_negate_D::__Impl_square_and_negate_D__&gt;::_impl_square_and_negate_D::{{closure}} (2 samples, 0.05%)</title><rect x="45.3520%" y="597" width="0.0491%" height="15" fill="rgb(213,199,7)" fg:x="1849" fg:w="2"/><text x="45.6020%" y="607.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi64x (1 samples, 0.02%)</title><rect x="45.3765%" y="581" width="0.0245%" height="15" fill="rgb(250,110,10)" fg:x="1850" fg:w="1"/><text x="45.6265%" y="591.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi64x (1 samples, 0.02%)</title><rect x="45.3765%" y="565" width="0.0245%" height="15" fill="rgb(248,123,6)" fg:x="1850" fg:w="1"/><text x="45.6265%" y="575.50"></text></g><g><title>core::core_arch::simd::i64x4::new (1 samples, 0.02%)</title><rect x="45.3765%" y="549" width="0.0245%" height="15" fill="rgb(206,91,31)" fg:x="1850" fg:w="1"/><text x="45.6265%" y="559.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::packed_simd::u32x8 as &lt;curve25519_dalek::backend::vector::packed_simd::u32x8 as core::convert::From&lt;curve25519_dalek::backend::vector::packed_simd::u64x4&gt;&gt;::from::__Impl_from__&gt;::_impl_from (1 samples, 0.02%)</title><rect x="45.4010%" y="613" width="0.0245%" height="15" fill="rgb(211,154,13)" fg:x="1851" fg:w="1"/><text x="45.6510%" y="623.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (3 samples, 0.07%)</title><rect x="45.4256%" y="613" width="0.0736%" height="15" fill="rgb(225,148,7)" fg:x="1852" fg:w="3"/><text x="45.6756%" y="623.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (44 samples, 1.08%)</title><rect x="45.4991%" y="613" width="1.0792%" height="15" fill="rgb(220,160,43)" fg:x="1855" fg:w="44"/><text x="45.7491%" y="623.50"></text></g><g><title>&lt;hash32::fnv::Hasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="46.5784%" y="613" width="0.0245%" height="15" fill="rgb(213,52,39)" fg:x="1899" fg:w="1"/><text x="46.8284%" y="623.50"></text></g><g><title>&lt;i32 as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.02%)</title><rect x="46.6029%" y="613" width="0.0245%" height="15" fill="rgb(243,137,7)" fg:x="1900" fg:w="1"/><text x="46.8529%" y="623.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (4 samples, 0.10%)</title><rect x="46.6274%" y="613" width="0.0981%" height="15" fill="rgb(230,79,13)" fg:x="1901" fg:w="4"/><text x="46.8774%" y="623.50"></text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (4 samples, 0.10%)</title><rect x="46.6274%" y="597" width="0.0981%" height="15" fill="rgb(247,105,23)" fg:x="1901" fg:w="4"/><text x="46.8774%" y="607.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::AdditionKey as core::ops::arith::Add&lt;poly1305::backend::avx2::helpers::Aligned130&gt;&gt;::add::propagate_carry (1 samples, 0.02%)</title><rect x="46.7255%" y="613" width="0.0245%" height="15" fill="rgb(223,179,41)" fg:x="1905" fg:w="1"/><text x="46.9755%" y="623.50"></text></g><g><title>&lt;tftp::socket::UdpUnboundSocket as tftp::socket::ToSocketId&gt;::as_raw_fd (1 samples, 0.02%)</title><rect x="46.7501%" y="613" width="0.0245%" height="15" fill="rgb(218,9,34)" fg:x="1906" fg:w="1"/><text x="47.0001%" y="623.50"></text></g><g><title>&lt;tftp::std_compat::net::IpVersion as core::hash::Hash&gt;::hash (1 samples, 0.02%)</title><rect x="46.7746%" y="613" width="0.0245%" height="15" fill="rgb(222,106,8)" fg:x="1907" fg:w="1"/><text x="47.0246%" y="623.50"></text></g><g><title>&lt;u8 as subtle::ConstantTimeEq&gt;::ct_eq (1 samples, 0.02%)</title><rect x="46.7991%" y="613" width="0.0245%" height="15" fill="rgb(211,220,0)" fg:x="1908" fg:w="1"/><text x="47.0491%" y="623.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (5 samples, 0.12%)</title><rect x="46.8236%" y="613" width="0.1226%" height="15" fill="rgb(229,52,16)" fg:x="1909" fg:w="5"/><text x="47.0736%" y="623.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (2 samples, 0.05%)</title><rect x="46.8972%" y="597" width="0.0491%" height="15" fill="rgb(212,155,18)" fg:x="1912" fg:w="2"/><text x="47.1472%" y="607.50"></text></g><g><title>__GI___libc_write (1 samples, 0.02%)</title><rect x="46.9463%" y="613" width="0.0245%" height="15" fill="rgb(242,21,14)" fg:x="1914" fg:w="1"/><text x="47.1963%" y="623.50"></text></g><g><title>__memcpy_avx_unaligned (3 samples, 0.07%)</title><rect x="46.9708%" y="613" width="0.0736%" height="15" fill="rgb(222,19,48)" fg:x="1915" fg:w="3"/><text x="47.2208%" y="623.50"></text></g><g><title>__memcpy_avx_unaligned_erms (6 samples, 0.15%)</title><rect x="47.0444%" y="613" width="0.1472%" height="15" fill="rgb(232,45,27)" fg:x="1918" fg:w="6"/><text x="47.2944%" y="623.50"></text></g><g><title>_init (1 samples, 0.02%)</title><rect x="47.1916%" y="613" width="0.0245%" height="15" fill="rgb(249,103,42)" fg:x="1924" fg:w="1"/><text x="47.4416%" y="623.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.02%)</title><rect x="47.2161%" y="613" width="0.0245%" height="15" fill="rgb(246,81,33)" fg:x="1925" fg:w="1"/><text x="47.4661%" y="623.50"></text></g><g><title>chacha20::xchacha::hchacha (2 samples, 0.05%)</title><rect x="47.2406%" y="613" width="0.0491%" height="15" fill="rgb(252,33,42)" fg:x="1926" fg:w="2"/><text x="47.4906%" y="623.50"></text></g><g><title>chacha20::xchacha::quarter_round (5 samples, 0.12%)</title><rect x="47.2897%" y="613" width="0.1226%" height="15" fill="rgb(209,212,41)" fg:x="1928" fg:w="5"/><text x="47.5397%" y="623.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (1 samples, 0.02%)</title><rect x="47.3878%" y="597" width="0.0245%" height="15" fill="rgb(207,154,6)" fg:x="1932" fg:w="1"/><text x="47.6378%" y="607.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::authenticate_lengths (1 samples, 0.02%)</title><rect x="47.4123%" y="613" width="0.0245%" height="15" fill="rgb(223,64,47)" fg:x="1933" fg:w="1"/><text x="47.6623%" y="623.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (2 samples, 0.05%)</title><rect x="47.4368%" y="613" width="0.0491%" height="15" fill="rgb(211,161,38)" fg:x="1934" fg:w="2"/><text x="47.6868%" y="623.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for &amp;[T: N]&gt;::try_from (1 samples, 0.02%)</title><rect x="47.4614%" y="597" width="0.0245%" height="15" fill="rgb(219,138,40)" fg:x="1935" fg:w="1"/><text x="47.7114%" y="607.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.02%)</title><rect x="47.4614%" y="581" width="0.0245%" height="15" fill="rgb(241,228,46)" fg:x="1935" fg:w="1"/><text x="47.7114%" y="591.50"></text></g><g><title>core::array::&lt;impl core::iter::traits::collect::IntoIterator for &amp;mut [T: N]&gt;::into_iter (2 samples, 0.05%)</title><rect x="47.4859%" y="613" width="0.0491%" height="15" fill="rgb(223,209,38)" fg:x="1936" fg:w="2"/><text x="47.7359%" y="623.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (1 samples, 0.02%)</title><rect x="47.5104%" y="597" width="0.0245%" height="15" fill="rgb(236,164,45)" fg:x="1937" fg:w="1"/><text x="47.7604%" y="607.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="47.5104%" y="581" width="0.0245%" height="15" fill="rgb(231,15,5)" fg:x="1937" fg:w="1"/><text x="47.7604%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.02%)</title><rect x="47.5104%" y="565" width="0.0245%" height="15" fill="rgb(252,35,15)" fg:x="1937" fg:w="1"/><text x="47.7604%" y="575.50"></text></g><g><title>core::cmp::PartialOrd::le (1 samples, 0.02%)</title><rect x="47.5350%" y="613" width="0.0245%" height="15" fill="rgb(248,181,18)" fg:x="1938" fg:w="1"/><text x="47.7850%" y="623.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.02%)</title><rect x="47.5595%" y="613" width="0.0245%" height="15" fill="rgb(233,39,42)" fg:x="1939" fg:w="1"/><text x="47.8095%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (13 samples, 0.32%)</title><rect x="47.5840%" y="613" width="0.3189%" height="15" fill="rgb(238,110,33)" fg:x="1940" fg:w="13"/><text x="47.8340%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (13 samples, 0.32%)</title><rect x="47.9029%" y="613" width="0.3189%" height="15" fill="rgb(233,195,10)" fg:x="1953" fg:w="13"/><text x="48.1529%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (2 samples, 0.05%)</title><rect x="48.2217%" y="613" width="0.0491%" height="15" fill="rgb(254,105,3)" fg:x="1966" fg:w="2"/><text x="48.4717%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_blend_epi32 (2 samples, 0.05%)</title><rect x="48.2708%" y="613" width="0.0491%" height="15" fill="rgb(221,225,9)" fg:x="1968" fg:w="2"/><text x="48.5208%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_inserti128_si256 (1 samples, 0.02%)</title><rect x="48.3198%" y="613" width="0.0245%" height="15" fill="rgb(224,227,45)" fg:x="1970" fg:w="1"/><text x="48.5698%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (3 samples, 0.07%)</title><rect x="48.3444%" y="613" width="0.0736%" height="15" fill="rgb(229,198,43)" fg:x="1971" fg:w="3"/><text x="48.5944%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (2 samples, 0.05%)</title><rect x="48.4180%" y="613" width="0.0491%" height="15" fill="rgb(206,209,35)" fg:x="1974" fg:w="2"/><text x="48.6680%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (3 samples, 0.07%)</title><rect x="48.4670%" y="613" width="0.0736%" height="15" fill="rgb(245,195,53)" fg:x="1976" fg:w="3"/><text x="48.7170%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (5 samples, 0.12%)</title><rect x="48.5406%" y="613" width="0.1226%" height="15" fill="rgb(240,92,26)" fg:x="1979" fg:w="5"/><text x="48.7906%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.02%)</title><rect x="48.6632%" y="613" width="0.0245%" height="15" fill="rgb(207,40,23)" fg:x="1984" fg:w="1"/><text x="48.9132%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (11 samples, 0.27%)</title><rect x="48.6878%" y="613" width="0.2698%" height="15" fill="rgb(223,111,35)" fg:x="1985" fg:w="11"/><text x="48.9378%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (1 samples, 0.02%)</title><rect x="48.9576%" y="613" width="0.0245%" height="15" fill="rgb(229,147,28)" fg:x="1996" fg:w="1"/><text x="49.2076%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (26 samples, 0.64%)</title><rect x="48.9821%" y="613" width="0.6377%" height="15" fill="rgb(211,29,28)" fg:x="1997" fg:w="26"/><text x="49.2321%" y="623.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (2 samples, 0.05%)</title><rect x="49.6198%" y="613" width="0.0491%" height="15" fill="rgb(228,72,33)" fg:x="2023" fg:w="2"/><text x="49.8698%" y="623.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.02%)</title><rect x="49.6689%" y="613" width="0.0245%" height="15" fill="rgb(205,214,31)" fg:x="2025" fg:w="1"/><text x="49.9189%" y="623.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i32x4 (1 samples, 0.02%)</title><rect x="49.6934%" y="613" width="0.0245%" height="15" fill="rgb(224,111,15)" fg:x="2026" fg:w="1"/><text x="49.9434%" y="623.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (14 samples, 0.34%)</title><rect x="49.7179%" y="613" width="0.3434%" height="15" fill="rgb(253,21,26)" fg:x="2027" fg:w="14"/><text x="49.9679%" y="623.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (22 samples, 0.54%)</title><rect x="50.0613%" y="613" width="0.5396%" height="15" fill="rgb(245,139,43)" fg:x="2041" fg:w="22"/><text x="50.3113%" y="623.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (11 samples, 0.27%)</title><rect x="50.6009%" y="613" width="0.2698%" height="15" fill="rgb(252,170,7)" fg:x="2063" fg:w="11"/><text x="50.8509%" y="623.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (7 samples, 0.17%)</title><rect x="50.8707%" y="613" width="0.1717%" height="15" fill="rgb(231,118,14)" fg:x="2074" fg:w="7"/><text x="51.1207%" y="623.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (3 samples, 0.07%)</title><rect x="51.0424%" y="613" width="0.0736%" height="15" fill="rgb(238,83,0)" fg:x="2081" fg:w="3"/><text x="51.2924%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (2 samples, 0.05%)</title><rect x="51.1160%" y="613" width="0.0491%" height="15" fill="rgb(221,39,39)" fg:x="2084" fg:w="2"/><text x="51.3660%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_undefined_si128 (1 samples, 0.02%)</title><rect x="51.1405%" y="597" width="0.0245%" height="15" fill="rgb(222,119,46)" fg:x="2085" fg:w="1"/><text x="51.3905%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.02%)</title><rect x="51.1651%" y="613" width="0.0245%" height="15" fill="rgb(222,165,49)" fg:x="2086" fg:w="1"/><text x="51.4151%" y="623.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.02%)</title><rect x="51.1896%" y="613" width="0.0245%" height="15" fill="rgb(219,113,52)" fg:x="2087" fg:w="1"/><text x="51.4396%" y="623.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (14 samples, 0.34%)</title><rect x="51.2141%" y="613" width="0.3434%" height="15" fill="rgb(214,7,15)" fg:x="2088" fg:w="14"/><text x="51.4641%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::filter (1 samples, 0.02%)</title><rect x="51.5575%" y="613" width="0.0245%" height="15" fill="rgb(235,32,4)" fg:x="2102" fg:w="1"/><text x="51.8075%" y="623.50"></text></g><g><title>core::iter::adapters::filter::Filter&lt;I,P&gt;::new (1 samples, 0.02%)</title><rect x="51.5575%" y="597" width="0.0245%" height="15" fill="rgb(238,90,54)" fg:x="2102" fg:w="1"/><text x="51.8075%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.02%)</title><rect x="51.5820%" y="613" width="0.0245%" height="15" fill="rgb(213,208,19)" fg:x="2103" fg:w="1"/><text x="51.8320%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (43 samples, 1.05%)</title><rect x="51.6066%" y="613" width="1.0547%" height="15" fill="rgb(233,156,4)" fg:x="2104" fg:w="43"/><text x="51.8566%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (2 samples, 0.05%)</title><rect x="52.6613%" y="613" width="0.0491%" height="15" fill="rgb(207,194,5)" fg:x="2147" fg:w="2"/><text x="52.9113%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (2 samples, 0.05%)</title><rect x="52.6613%" y="597" width="0.0491%" height="15" fill="rgb(206,111,30)" fg:x="2147" fg:w="2"/><text x="52.9113%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.02%)</title><rect x="52.7103%" y="613" width="0.0245%" height="15" fill="rgb(243,70,54)" fg:x="2149" fg:w="1"/><text x="52.9603%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;(),std::io::error::Error&gt;&gt; (1 samples, 0.02%)</title><rect x="52.7349%" y="613" width="0.0245%" height="15" fill="rgb(242,28,8)" fg:x="2150" fg:w="1"/><text x="52.9849%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;tftp::error::PacketError&gt; (1 samples, 0.02%)</title><rect x="52.7594%" y="613" width="0.0245%" height="15" fill="rgb(219,106,18)" fg:x="2151" fg:w="1"/><text x="53.0094%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (1 samples, 0.02%)</title><rect x="52.7839%" y="613" width="0.0245%" height="15" fill="rgb(244,222,10)" fg:x="2152" fg:w="1"/><text x="53.0339%" y="623.50"></text></g><g><title>&lt;tracing::span::Entered as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="52.7839%" y="597" width="0.0245%" height="15" fill="rgb(236,179,52)" fg:x="2152" fg:w="1"/><text x="53.0339%" y="607.50"></text></g><g><title>tracing::span::Span::do_exit (1 samples, 0.02%)</title><rect x="52.7839%" y="581" width="0.0245%" height="15" fill="rgb(213,23,39)" fg:x="2152" fg:w="1"/><text x="53.0339%" y="591.50"></text></g><g><title>core::ptr::read (1 samples, 0.02%)</title><rect x="52.8084%" y="613" width="0.0245%" height="15" fill="rgb(238,48,10)" fg:x="2153" fg:w="1"/><text x="53.0584%" y="623.50"></text></g><g><title>core::ptr::write (4 samples, 0.10%)</title><rect x="52.8330%" y="613" width="0.0981%" height="15" fill="rgb(251,196,23)" fg:x="2154" fg:w="4"/><text x="53.0830%" y="623.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (1 samples, 0.02%)</title><rect x="52.9311%" y="613" width="0.0245%" height="15" fill="rgb(250,152,24)" fg:x="2158" fg:w="1"/><text x="53.1811%" y="623.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (7 samples, 0.17%)</title><rect x="52.9556%" y="613" width="0.1717%" height="15" fill="rgb(209,150,17)" fg:x="2159" fg:w="7"/><text x="53.2056%" y="623.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (1 samples, 0.02%)</title><rect x="53.1273%" y="613" width="0.0245%" height="15" fill="rgb(234,202,34)" fg:x="2166" fg:w="1"/><text x="53.3773%" y="623.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (1 samples, 0.02%)</title><rect x="53.1518%" y="613" width="0.0245%" height="15" fill="rgb(253,148,53)" fg:x="2167" fg:w="1"/><text x="53.4018%" y="623.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.02%)</title><rect x="53.1764%" y="613" width="0.0245%" height="15" fill="rgb(218,129,16)" fg:x="2168" fg:w="1"/><text x="53.4264%" y="623.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (6 samples, 0.15%)</title><rect x="53.5688%" y="581" width="0.1472%" height="15" fill="rgb(216,85,19)" fg:x="2184" fg:w="6"/><text x="53.8188%" y="591.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (22 samples, 0.54%)</title><rect x="53.2009%" y="613" width="0.5396%" height="15" fill="rgb(235,228,7)" fg:x="2169" fg:w="22"/><text x="53.4509%" y="623.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (17 samples, 0.42%)</title><rect x="53.3235%" y="597" width="0.4170%" height="15" fill="rgb(245,175,0)" fg:x="2174" fg:w="17"/><text x="53.5735%" y="607.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::as_mut_ptr (1 samples, 0.02%)</title><rect x="53.7160%" y="581" width="0.0245%" height="15" fill="rgb(208,168,36)" fg:x="2190" fg:w="1"/><text x="53.9660%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::cast (2 samples, 0.05%)</title><rect x="53.9122%" y="581" width="0.0491%" height="15" fill="rgb(246,171,24)" fg:x="2198" fg:w="2"/><text x="54.1622%" y="591.50"></text></g><g><title>core::slice::raw::from_raw_parts (41 samples, 1.01%)</title><rect x="53.7405%" y="613" width="1.0056%" height="15" fill="rgb(215,142,24)" fg:x="2191" fg:w="41"/><text x="53.9905%" y="623.50"></text></g><g><title>core::ptr::slice_from_raw_parts (34 samples, 0.83%)</title><rect x="53.9122%" y="597" width="0.8339%" height="15" fill="rgb(250,187,7)" fg:x="2198" fg:w="34"/><text x="54.1622%" y="607.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (32 samples, 0.78%)</title><rect x="53.9612%" y="581" width="0.7849%" height="15" fill="rgb(228,66,33)" fg:x="2200" fg:w="32"/><text x="54.2112%" y="591.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (18 samples, 0.44%)</title><rect x="54.8442%" y="581" width="0.4415%" height="15" fill="rgb(234,215,21)" fg:x="2236" fg:w="18"/><text x="55.0942%" y="591.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (23 samples, 0.56%)</title><rect x="54.7461%" y="613" width="0.5641%" height="15" fill="rgb(222,191,20)" fg:x="2232" fg:w="23"/><text x="54.9961%" y="623.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (19 samples, 0.47%)</title><rect x="54.8442%" y="597" width="0.4660%" height="15" fill="rgb(245,79,54)" fg:x="2236" fg:w="19"/><text x="55.0942%" y="607.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::cast (1 samples, 0.02%)</title><rect x="55.2857%" y="581" width="0.0245%" height="15" fill="rgb(240,10,37)" fg:x="2254" fg:w="1"/><text x="55.5357%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicU8::load (1 samples, 0.02%)</title><rect x="55.3103%" y="613" width="0.0245%" height="15" fill="rgb(214,192,32)" fg:x="2255" fg:w="1"/><text x="55.5603%" y="623.50"></text></g><g><title>curve25519_dalek::backend::vector::packed_simd::u32x8::splat::_impl_splat (1 samples, 0.02%)</title><rect x="55.3348%" y="613" width="0.0245%" height="15" fill="rgb(209,36,54)" fg:x="2256" fg:w="1"/><text x="55.5848%" y="623.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (4 samples, 0.10%)</title><rect x="55.3593%" y="613" width="0.0981%" height="15" fill="rgb(220,10,11)" fg:x="2257" fg:w="4"/><text x="55.6093%" y="623.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (2 samples, 0.05%)</title><rect x="55.4084%" y="597" width="0.0491%" height="15" fill="rgb(221,106,17)" fg:x="2259" fg:w="2"/><text x="55.6584%" y="607.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::iter_position (3 samples, 0.07%)</title><rect x="55.4574%" y="613" width="0.0736%" height="15" fill="rgb(251,142,44)" fg:x="2261" fg:w="3"/><text x="55.7074%" y="623.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::new (1 samples, 0.02%)</title><rect x="55.5310%" y="613" width="0.0245%" height="15" fill="rgb(238,13,15)" fg:x="2264" fg:w="1"/><text x="55.7810%" y="623.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (8 samples, 0.20%)</title><rect x="55.5556%" y="613" width="0.1962%" height="15" fill="rgb(208,107,27)" fg:x="2265" fg:w="8"/><text x="55.8056%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (1 samples, 0.02%)</title><rect x="55.7518%" y="613" width="0.0245%" height="15" fill="rgb(205,136,37)" fg:x="2273" fg:w="1"/><text x="56.0018%" y="623.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (1 samples, 0.02%)</title><rect x="55.7518%" y="597" width="0.0245%" height="15" fill="rgb(250,205,27)" fg:x="2273" fg:w="1"/><text x="56.0018%" y="607.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (1 samples, 0.02%)</title><rect x="55.7518%" y="581" width="0.0245%" height="15" fill="rgb(210,80,43)" fg:x="2273" fg:w="1"/><text x="56.0018%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.02%)</title><rect x="55.7518%" y="565" width="0.0245%" height="15" fill="rgb(247,160,36)" fg:x="2273" fg:w="1"/><text x="56.0018%" y="575.50"></text></g><g><title>hashbrown::raw::RawTableInner::fix_insert_slot (1 samples, 0.02%)</title><rect x="55.7763%" y="613" width="0.0245%" height="15" fill="rgb(234,13,49)" fg:x="2274" fg:w="1"/><text x="56.0263%" y="623.50"></text></g><g><title>heapless::indexmap::CoreMap&lt;K,V,_&gt;::find (1 samples, 0.02%)</title><rect x="55.8008%" y="613" width="0.0245%" height="15" fill="rgb(234,122,0)" fg:x="2275" fg:w="1"/><text x="56.0508%" y="623.50"></text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::is_full (5 samples, 0.12%)</title><rect x="55.8254%" y="613" width="0.1226%" height="15" fill="rgb(207,146,38)" fg:x="2276" fg:w="5"/><text x="56.0754%" y="623.50"></text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::push (1 samples, 0.02%)</title><rect x="55.9480%" y="613" width="0.0245%" height="15" fill="rgb(207,177,25)" fg:x="2281" fg:w="1"/><text x="56.1980%" y="623.50"></text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::push_unchecked (14 samples, 0.34%)</title><rect x="55.9725%" y="613" width="0.3434%" height="15" fill="rgb(211,178,42)" fg:x="2282" fg:w="14"/><text x="56.2225%" y="623.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::new (2 samples, 0.05%)</title><rect x="56.2669%" y="597" width="0.0491%" height="15" fill="rgb(230,69,54)" fg:x="2294" fg:w="2"/><text x="56.5169%" y="607.50"></text></g><g><title>polling::epoll::Notifier::as_fd (1 samples, 0.02%)</title><rect x="56.3159%" y="613" width="0.0245%" height="15" fill="rgb(214,135,41)" fg:x="2296" fg:w="1"/><text x="56.5659%" y="623.50"></text></g><g><title>&lt;tracing_core::metadata::Level as core::cmp::PartialOrd&lt;tracing_core::metadata::LevelFilter&gt;&gt;::le (1 samples, 0.02%)</title><rect x="56.3650%" y="597" width="0.0245%" height="15" fill="rgb(237,67,25)" fg:x="2298" fg:w="1"/><text x="56.6150%" y="607.50"></text></g><g><title>tracing_core::metadata::filter_as_usize (1 samples, 0.02%)</title><rect x="56.3650%" y="581" width="0.0245%" height="15" fill="rgb(222,189,50)" fg:x="2298" fg:w="1"/><text x="56.6150%" y="591.50"></text></g><g><title>__entry_text_start (1 samples, 0.02%)</title><rect x="56.3650%" y="565" width="0.0245%" height="15" fill="rgb(245,148,34)" fg:x="2298" fg:w="1"/><text x="56.6150%" y="575.50"></text></g><g><title>polling::epoll::Poller::wait (3 samples, 0.07%)</title><rect x="56.3404%" y="613" width="0.0736%" height="15" fill="rgb(222,29,6)" fg:x="2297" fg:w="3"/><text x="56.5904%" y="623.50"></text></g><g><title>core::mem::zeroed (1 samples, 0.02%)</title><rect x="56.3895%" y="597" width="0.0245%" height="15" fill="rgb(221,189,43)" fg:x="2299" fg:w="1"/><text x="56.6395%" y="607.50"></text></g><g><title>poly1305::backend::autodetect::avx2_cpuid::init_get (1 samples, 0.02%)</title><rect x="56.4140%" y="613" width="0.0245%" height="15" fill="rgb(207,36,27)" fg:x="2300" fg:w="1"/><text x="56.6640%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (2 samples, 0.05%)</title><rect x="56.4876%" y="565" width="0.0491%" height="15" fill="rgb(217,90,24)" fg:x="2303" fg:w="2"/><text x="56.7376%" y="575.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (1 samples, 0.02%)</title><rect x="56.5121%" y="549" width="0.0245%" height="15" fill="rgb(224,66,35)" fg:x="2304" fg:w="1"/><text x="56.7621%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.02%)</title><rect x="56.5367%" y="565" width="0.0245%" height="15" fill="rgb(221,13,50)" fg:x="2305" fg:w="1"/><text x="56.7867%" y="575.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.02%)</title><rect x="56.5612%" y="565" width="0.0245%" height="15" fill="rgb(236,68,49)" fg:x="2306" fg:w="1"/><text x="56.8112%" y="575.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.02%)</title><rect x="56.5612%" y="549" width="0.0245%" height="15" fill="rgb(229,146,28)" fg:x="2306" fg:w="1"/><text x="56.8112%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.02%)</title><rect x="56.6103%" y="549" width="0.0245%" height="15" fill="rgb(225,31,38)" fg:x="2308" fg:w="1"/><text x="56.8603%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (3 samples, 0.07%)</title><rect x="56.5857%" y="565" width="0.0736%" height="15" fill="rgb(250,208,3)" fg:x="2307" fg:w="3"/><text x="56.8357%" y="575.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.02%)</title><rect x="56.6348%" y="549" width="0.0245%" height="15" fill="rgb(246,54,23)" fg:x="2309" fg:w="1"/><text x="56.8848%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (2 samples, 0.05%)</title><rect x="56.6593%" y="565" width="0.0491%" height="15" fill="rgb(243,76,11)" fg:x="2310" fg:w="2"/><text x="56.9093%" y="575.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.02%)</title><rect x="56.6838%" y="549" width="0.0245%" height="15" fill="rgb(245,21,50)" fg:x="2311" fg:w="1"/><text x="56.9338%" y="559.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (3 samples, 0.07%)</title><rect x="56.7084%" y="565" width="0.0736%" height="15" fill="rgb(228,9,43)" fg:x="2312" fg:w="3"/><text x="56.9584%" y="575.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi32 (1 samples, 0.02%)</title><rect x="56.7574%" y="549" width="0.0245%" height="15" fill="rgb(208,100,47)" fg:x="2314" fg:w="1"/><text x="57.0074%" y="559.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.02%)</title><rect x="56.7819%" y="565" width="0.0245%" height="15" fill="rgb(232,26,8)" fg:x="2315" fg:w="1"/><text x="57.0319%" y="575.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.02%)</title><rect x="56.7819%" y="549" width="0.0245%" height="15" fill="rgb(216,166,38)" fg:x="2315" fg:w="1"/><text x="57.0319%" y="559.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.02%)</title><rect x="56.7819%" y="533" width="0.0245%" height="15" fill="rgb(251,202,51)" fg:x="2315" fg:w="1"/><text x="57.0319%" y="543.50"></text></g><g><title>core::core_arch::simd::i8x32::new (1 samples, 0.02%)</title><rect x="56.7819%" y="517" width="0.0245%" height="15" fill="rgb(254,216,34)" fg:x="2315" fg:w="1"/><text x="57.0319%" y="527.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.05%)</title><rect x="56.8065%" y="565" width="0.0491%" height="15" fill="rgb(251,32,27)" fg:x="2316" fg:w="2"/><text x="57.0565%" y="575.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="56.8555%" y="565" width="0.0245%" height="15" fill="rgb(208,127,28)" fg:x="2318" fg:w="1"/><text x="57.1055%" y="575.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (3 samples, 0.07%)</title><rect x="56.8801%" y="565" width="0.0736%" height="15" fill="rgb(224,137,22)" fg:x="2319" fg:w="3"/><text x="57.1301%" y="575.50"></text></g><g><title>poly1305::backend::avx2::State::finalize::{{closure}} (1 samples, 0.02%)</title><rect x="56.9536%" y="565" width="0.0245%" height="15" fill="rgb(254,70,32)" fg:x="2322" fg:w="1"/><text x="57.2036%" y="575.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced130::reduce (1 samples, 0.02%)</title><rect x="56.9536%" y="549" width="0.0245%" height="15" fill="rgb(229,75,37)" fg:x="2322" fg:w="1"/><text x="57.2036%" y="559.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::AdditionKey as core::ops::arith::Add&lt;poly1305::backend::avx2::helpers::Aligned130&gt;&gt;::add::propagate_carry (23 samples, 0.56%)</title><rect x="56.4386%" y="581" width="0.5641%" height="15" fill="rgb(252,64,23)" fg:x="2301" fg:w="23"/><text x="56.6886%" y="591.50"></text></g><g><title>poly1305::backend::avx2::State::finalize (1 samples, 0.02%)</title><rect x="56.9782%" y="565" width="0.0245%" height="15" fill="rgb(232,162,48)" fg:x="2323" fg:w="1"/><text x="57.2282%" y="575.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::AdditionKey as core::ops::arith::Add&lt;poly1305::backend::avx2::helpers::Aligned130&gt;&gt;::add (1 samples, 0.02%)</title><rect x="56.9782%" y="549" width="0.0245%" height="15" fill="rgb(246,160,12)" fg:x="2323" fg:w="1"/><text x="57.2282%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.02%)</title><rect x="57.0027%" y="565" width="0.0245%" height="15" fill="rgb(247,166,0)" fg:x="2324" fg:w="1"/><text x="57.2527%" y="575.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (1 samples, 0.02%)</title><rect x="57.0027%" y="549" width="0.0245%" height="15" fill="rgb(249,219,21)" fg:x="2324" fg:w="1"/><text x="57.2527%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (2 samples, 0.05%)</title><rect x="57.0272%" y="565" width="0.0491%" height="15" fill="rgb(205,209,3)" fg:x="2325" fg:w="2"/><text x="57.2772%" y="575.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::AdditionKey as core::ops::arith::Add&lt;poly1305::backend::avx2::helpers::Aligned130&gt;&gt;::add::propagate_carry_32 (4 samples, 0.10%)</title><rect x="57.0027%" y="581" width="0.0981%" height="15" fill="rgb(243,44,1)" fg:x="2324" fg:w="4"/><text x="57.2527%" y="591.50"></text></g><g><title>poly1305::backend::avx2::State::finalize (1 samples, 0.02%)</title><rect x="57.0763%" y="565" width="0.0245%" height="15" fill="rgb(206,159,16)" fg:x="2327" fg:w="1"/><text x="57.3263%" y="575.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::AdditionKey as core::ops::arith::Add&lt;poly1305::backend::avx2::helpers::Aligned130&gt;&gt;::add (1 samples, 0.02%)</title><rect x="57.0763%" y="549" width="0.0245%" height="15" fill="rgb(244,77,30)" fg:x="2327" fg:w="1"/><text x="57.3263%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.02%)</title><rect x="57.1008%" y="581" width="0.0245%" height="15" fill="rgb(218,69,12)" fg:x="2328" fg:w="1"/><text x="57.3508%" y="591.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.02%)</title><rect x="57.1008%" y="565" width="0.0245%" height="15" fill="rgb(212,87,7)" fg:x="2328" fg:w="1"/><text x="57.3508%" y="575.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_sub_epi32 (1 samples, 0.02%)</title><rect x="57.1253%" y="581" width="0.0245%" height="15" fill="rgb(245,114,25)" fg:x="2329" fg:w="1"/><text x="57.3753%" y="591.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::AdditionKey as core::ops::arith::Add&lt;poly1305::backend::avx2::helpers::Aligned130&gt;&gt;::add::propagate_carry (1 samples, 0.02%)</title><rect x="57.1253%" y="565" width="0.0245%" height="15" fill="rgb(210,61,42)" fg:x="2329" fg:w="1"/><text x="57.3753%" y="575.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (2 samples, 0.05%)</title><rect x="57.1499%" y="581" width="0.0491%" height="15" fill="rgb(211,52,33)" fg:x="2330" fg:w="2"/><text x="57.3999%" y="591.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.02%)</title><rect x="57.1989%" y="581" width="0.0245%" height="15" fill="rgb(234,58,33)" fg:x="2332" fg:w="1"/><text x="57.4489%" y="591.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi64x (1 samples, 0.02%)</title><rect x="57.1989%" y="565" width="0.0245%" height="15" fill="rgb(220,115,36)" fg:x="2332" fg:w="1"/><text x="57.4489%" y="575.50"></text></g><g><title>core::core_arch::simd::i64x4::new (1 samples, 0.02%)</title><rect x="57.1989%" y="549" width="0.0245%" height="15" fill="rgb(243,153,54)" fg:x="2332" fg:w="1"/><text x="57.4489%" y="559.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::AdditionKey as core::ops::arith::Add&lt;poly1305::backend::avx2::helpers::Aligned130&gt;&gt;::add (33 samples, 0.81%)</title><rect x="56.4386%" y="597" width="0.8094%" height="15" fill="rgb(251,47,18)" fg:x="2301" fg:w="33"/><text x="56.6886%" y="607.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.02%)</title><rect x="57.2234%" y="581" width="0.0245%" height="15" fill="rgb(242,102,42)" fg:x="2333" fg:w="1"/><text x="57.4734%" y="591.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.02%)</title><rect x="57.2480%" y="597" width="0.0245%" height="15" fill="rgb(234,31,38)" fg:x="2334" fg:w="1"/><text x="57.4980%" y="607.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi64 (1 samples, 0.02%)</title><rect x="57.2725%" y="581" width="0.0245%" height="15" fill="rgb(221,117,51)" fg:x="2335" fg:w="1"/><text x="57.5225%" y="591.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.05%)</title><rect x="57.2970%" y="581" width="0.0491%" height="15" fill="rgb(212,20,18)" fg:x="2336" fg:w="2"/><text x="57.5470%" y="591.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (2 samples, 0.05%)</title><rect x="57.3461%" y="581" width="0.0491%" height="15" fill="rgb(245,133,36)" fg:x="2338" fg:w="2"/><text x="57.5961%" y="591.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_blend_epi32 (1 samples, 0.02%)</title><rect x="57.4442%" y="533" width="0.0245%" height="15" fill="rgb(212,6,19)" fg:x="2342" fg:w="1"/><text x="57.6942%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (4 samples, 0.10%)</title><rect x="57.3951%" y="549" width="0.0981%" height="15" fill="rgb(218,1,36)" fg:x="2340" fg:w="4"/><text x="57.6451%" y="559.50"></text></g><g><title>poly1305::backend::avx2::State::finalize::{{closure}} (1 samples, 0.02%)</title><rect x="57.4687%" y="533" width="0.0245%" height="15" fill="rgb(246,84,54)" fg:x="2343" fg:w="1"/><text x="57.7187%" y="543.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::SpacedMultiplier4x130&gt;&gt;::mul (1 samples, 0.02%)</title><rect x="57.4687%" y="517" width="0.0245%" height="15" fill="rgb(242,110,6)" fg:x="2343" fg:w="1"/><text x="57.7187%" y="527.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.02%)</title><rect x="57.5668%" y="533" width="0.0245%" height="15" fill="rgb(214,47,5)" fg:x="2347" fg:w="1"/><text x="57.8168%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (5 samples, 0.12%)</title><rect x="57.4933%" y="549" width="0.1226%" height="15" fill="rgb(218,159,25)" fg:x="2344" fg:w="5"/><text x="57.7433%" y="559.50"></text></g><g><title>poly1305::backend::avx2::State::finalize::{{closure}} (1 samples, 0.02%)</title><rect x="57.5914%" y="533" width="0.0245%" height="15" fill="rgb(215,211,28)" fg:x="2348" fg:w="1"/><text x="57.8414%" y="543.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::SpacedMultiplier4x130&gt;&gt;::mul (1 samples, 0.02%)</title><rect x="57.5914%" y="517" width="0.0245%" height="15" fill="rgb(238,59,32)" fg:x="2348" fg:w="1"/><text x="57.8414%" y="527.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (2 samples, 0.05%)</title><rect x="57.6159%" y="549" width="0.0491%" height="15" fill="rgb(226,82,3)" fg:x="2349" fg:w="2"/><text x="57.8659%" y="559.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (3 samples, 0.07%)</title><rect x="57.6649%" y="549" width="0.0736%" height="15" fill="rgb(240,164,32)" fg:x="2351" fg:w="3"/><text x="57.9149%" y="559.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.02%)</title><rect x="57.7385%" y="549" width="0.0245%" height="15" fill="rgb(232,46,7)" fg:x="2354" fg:w="1"/><text x="57.9885%" y="559.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::SpacedMultiplier4x130&gt;&gt;::mul (16 samples, 0.39%)</title><rect x="57.3951%" y="565" width="0.3924%" height="15" fill="rgb(229,129,53)" fg:x="2340" fg:w="16"/><text x="57.6451%" y="575.50"></text></g><g><title>poly1305::backend::avx2::State::finalize::{{closure}} (1 samples, 0.02%)</title><rect x="57.7631%" y="549" width="0.0245%" height="15" fill="rgb(234,188,29)" fg:x="2355" fg:w="1"/><text x="58.0131%" y="559.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::SpacedMultiplier4x130&gt;&gt;::mul (1 samples, 0.02%)</title><rect x="57.7631%" y="533" width="0.0245%" height="15" fill="rgb(246,141,4)" fg:x="2355" fg:w="1"/><text x="58.0131%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (1 samples, 0.02%)</title><rect x="57.7876%" y="533" width="0.0245%" height="15" fill="rgb(229,23,39)" fg:x="2356" fg:w="1"/><text x="58.0376%" y="543.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.02%)</title><rect x="57.7876%" y="517" width="0.0245%" height="15" fill="rgb(206,12,3)" fg:x="2356" fg:w="1"/><text x="58.0376%" y="527.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.02%)</title><rect x="57.7876%" y="501" width="0.0245%" height="15" fill="rgb(252,226,20)" fg:x="2356" fg:w="1"/><text x="58.0376%" y="511.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.02%)</title><rect x="57.7876%" y="485" width="0.0245%" height="15" fill="rgb(216,123,35)" fg:x="2356" fg:w="1"/><text x="58.0376%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srlv_epi64 (1 samples, 0.02%)</title><rect x="57.8121%" y="533" width="0.0245%" height="15" fill="rgb(212,68,40)" fg:x="2357" fg:w="1"/><text x="58.0621%" y="543.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="57.8121%" y="517" width="0.0245%" height="15" fill="rgb(254,125,32)" fg:x="2357" fg:w="1"/><text x="58.0621%" y="527.50"></text></g><g><title>poly1305::backend::avx2::helpers::adc (3 samples, 0.07%)</title><rect x="57.7876%" y="549" width="0.0736%" height="15" fill="rgb(253,97,22)" fg:x="2356" fg:w="3"/><text x="58.0376%" y="559.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="57.8366%" y="533" width="0.0245%" height="15" fill="rgb(241,101,14)" fg:x="2358" fg:w="1"/><text x="58.0866%" y="543.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced130::reduce (4 samples, 0.10%)</title><rect x="57.7876%" y="565" width="0.0981%" height="15" fill="rgb(238,103,29)" fg:x="2356" fg:w="4"/><text x="58.0376%" y="575.50"></text></g><g><title>poly1305::backend::avx2::helpers::red (1 samples, 0.02%)</title><rect x="57.8612%" y="549" width="0.0245%" height="15" fill="rgb(233,195,47)" fg:x="2359" fg:w="1"/><text x="58.1112%" y="559.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_castsi128_si256 (1 samples, 0.02%)</title><rect x="57.8612%" y="533" width="0.0245%" height="15" fill="rgb(246,218,30)" fg:x="2359" fg:w="1"/><text x="58.1112%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.02%)</title><rect x="57.8857%" y="549" width="0.0245%" height="15" fill="rgb(219,145,47)" fg:x="2360" fg:w="1"/><text x="58.1357%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.02%)</title><rect x="57.8857%" y="533" width="0.0245%" height="15" fill="rgb(243,12,26)" fg:x="2360" fg:w="1"/><text x="58.1357%" y="543.50"></text></g><g><title>core::core_arch::simd::u64x4::splat (1 samples, 0.02%)</title><rect x="57.8857%" y="517" width="0.0245%" height="15" fill="rgb(214,87,16)" fg:x="2360" fg:w="1"/><text x="58.1357%" y="527.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (2 samples, 0.05%)</title><rect x="57.9102%" y="549" width="0.0491%" height="15" fill="rgb(208,99,42)" fg:x="2361" fg:w="2"/><text x="58.1602%" y="559.50"></text></g><g><title>poly1305::backend::avx2::State::finalize::{{closure}} (24 samples, 0.59%)</title><rect x="57.3951%" y="581" width="0.5887%" height="15" fill="rgb(253,99,2)" fg:x="2340" fg:w="24"/><text x="57.6451%" y="591.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::sum (4 samples, 0.10%)</title><rect x="57.8857%" y="565" width="0.0981%" height="15" fill="rgb(220,168,23)" fg:x="2360" fg:w="4"/><text x="58.1357%" y="575.50"></text></g><g><title>poly1305::backend::avx2::State::finalize::{{closure}} (1 samples, 0.02%)</title><rect x="57.9593%" y="549" width="0.0245%" height="15" fill="rgb(242,38,24)" fg:x="2363" fg:w="1"/><text x="58.2093%" y="559.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::SpacedMultiplier4x130&gt;&gt;::mul (1 samples, 0.02%)</title><rect x="57.9593%" y="533" width="0.0245%" height="15" fill="rgb(225,182,9)" fg:x="2363" fg:w="1"/><text x="58.2093%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (30 samples, 0.74%)</title><rect x="57.2725%" y="597" width="0.7358%" height="15" fill="rgb(243,178,37)" fg:x="2335" fg:w="30"/><text x="57.5225%" y="607.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (1 samples, 0.02%)</title><rect x="57.9838%" y="581" width="0.0245%" height="15" fill="rgb(232,139,19)" fg:x="2364" fg:w="1"/><text x="58.2338%" y="591.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (1 samples, 0.02%)</title><rect x="57.9838%" y="565" width="0.0245%" height="15" fill="rgb(225,201,24)" fg:x="2364" fg:w="1"/><text x="58.2338%" y="575.50"></text></g><g><title>poly1305::backend::avx2::State::finalize (65 samples, 1.59%)</title><rect x="56.4386%" y="613" width="1.5943%" height="15" fill="rgb(221,47,46)" fg:x="2301" fg:w="65"/><text x="56.6886%" y="623.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (1 samples, 0.02%)</title><rect x="58.0083%" y="597" width="0.0245%" height="15" fill="rgb(249,23,13)" fg:x="2365" fg:w="1"/><text x="58.2583%" y="607.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (1 samples, 0.02%)</title><rect x="58.0083%" y="581" width="0.0245%" height="15" fill="rgb(219,9,5)" fg:x="2365" fg:w="1"/><text x="58.2583%" y="591.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier as core::ops::arith::Mul&gt;::mul (1 samples, 0.02%)</title><rect x="58.0329%" y="597" width="0.0245%" height="15" fill="rgb(254,171,16)" fg:x="2366" fg:w="1"/><text x="58.2829%" y="607.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (1 samples, 0.02%)</title><rect x="58.0329%" y="581" width="0.0245%" height="15" fill="rgb(230,171,20)" fg:x="2366" fg:w="1"/><text x="58.2829%" y="591.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_blend_epi32 (1 samples, 0.02%)</title><rect x="58.0574%" y="597" width="0.0245%" height="15" fill="rgb(210,71,41)" fg:x="2367" fg:w="1"/><text x="58.3074%" y="607.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier as core::convert::From&lt;poly1305::backend::avx2::helpers::Aligned130&gt;&gt;::from (1 samples, 0.02%)</title><rect x="58.0819%" y="565" width="0.0245%" height="15" fill="rgb(206,173,20)" fg:x="2368" fg:w="1"/><text x="58.3319%" y="575.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.02%)</title><rect x="58.0819%" y="549" width="0.0245%" height="15" fill="rgb(233,88,34)" fg:x="2368" fg:w="1"/><text x="58.3319%" y="559.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.05%)</title><rect x="58.0819%" y="581" width="0.0491%" height="15" fill="rgb(223,209,46)" fg:x="2368" fg:w="2"/><text x="58.3319%" y="591.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.02%)</title><rect x="58.1065%" y="565" width="0.0245%" height="15" fill="rgb(250,43,18)" fg:x="2369" fg:w="1"/><text x="58.3565%" y="575.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier as core::ops::arith::Mul&gt;::mul (1 samples, 0.02%)</title><rect x="58.1310%" y="549" width="0.0245%" height="15" fill="rgb(208,13,10)" fg:x="2370" fg:w="1"/><text x="58.3810%" y="559.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (1 samples, 0.02%)</title><rect x="58.1310%" y="533" width="0.0245%" height="15" fill="rgb(212,200,36)" fg:x="2370" fg:w="1"/><text x="58.3810%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (2 samples, 0.05%)</title><rect x="58.1555%" y="549" width="0.0491%" height="15" fill="rgb(225,90,30)" fg:x="2371" fg:w="2"/><text x="58.4055%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_blend_epi32 (1 samples, 0.02%)</title><rect x="58.2046%" y="549" width="0.0245%" height="15" fill="rgb(236,182,39)" fg:x="2373" fg:w="1"/><text x="58.4546%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (2 samples, 0.05%)</title><rect x="58.2291%" y="549" width="0.0491%" height="15" fill="rgb(212,144,35)" fg:x="2374" fg:w="2"/><text x="58.4791%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (1 samples, 0.02%)</title><rect x="58.2781%" y="549" width="0.0245%" height="15" fill="rgb(228,63,44)" fg:x="2376" fg:w="1"/><text x="58.5281%" y="559.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.02%)</title><rect x="58.2781%" y="533" width="0.0245%" height="15" fill="rgb(228,109,6)" fg:x="2376" fg:w="1"/><text x="58.5281%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.02%)</title><rect x="58.3027%" y="533" width="0.0245%" height="15" fill="rgb(238,117,24)" fg:x="2377" fg:w="1"/><text x="58.5527%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (2 samples, 0.05%)</title><rect x="58.3027%" y="549" width="0.0491%" height="15" fill="rgb(242,26,26)" fg:x="2377" fg:w="2"/><text x="58.5527%" y="559.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.02%)</title><rect x="58.3272%" y="533" width="0.0245%" height="15" fill="rgb(221,92,48)" fg:x="2378" fg:w="1"/><text x="58.5772%" y="543.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.02%)</title><rect x="58.3272%" y="517" width="0.0245%" height="15" fill="rgb(209,209,32)" fg:x="2378" fg:w="1"/><text x="58.5772%" y="527.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.02%)</title><rect x="58.3272%" y="501" width="0.0245%" height="15" fill="rgb(221,70,22)" fg:x="2378" fg:w="1"/><text x="58.5772%" y="511.50"></text></g><g><title>core::core_arch::simd::i8x32::new (1 samples, 0.02%)</title><rect x="58.3272%" y="485" width="0.0245%" height="15" fill="rgb(248,145,5)" fg:x="2378" fg:w="1"/><text x="58.5772%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi64 (1 samples, 0.02%)</title><rect x="58.3517%" y="549" width="0.0245%" height="15" fill="rgb(226,116,26)" fg:x="2379" fg:w="1"/><text x="58.6017%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (1 samples, 0.02%)</title><rect x="58.3763%" y="549" width="0.0245%" height="15" fill="rgb(244,5,17)" fg:x="2380" fg:w="1"/><text x="58.6263%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srlv_epi64 (1 samples, 0.02%)</title><rect x="58.4008%" y="549" width="0.0245%" height="15" fill="rgb(252,159,33)" fg:x="2381" fg:w="1"/><text x="58.6508%" y="559.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (3 samples, 0.07%)</title><rect x="58.4253%" y="549" width="0.0736%" height="15" fill="rgb(206,71,0)" fg:x="2382" fg:w="3"/><text x="58.6753%" y="559.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier as core::ops::arith::Mul&gt;::mul (16 samples, 0.39%)</title><rect x="58.1310%" y="581" width="0.3924%" height="15" fill="rgb(233,118,54)" fg:x="2370" fg:w="16"/><text x="58.3810%" y="591.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (16 samples, 0.39%)</title><rect x="58.1310%" y="565" width="0.3924%" height="15" fill="rgb(234,83,48)" fg:x="2370" fg:w="16"/><text x="58.3810%" y="575.50"></text></g><g><title>poly1305::backend::avx2::helpers::SpacedMultiplier4x130::new (1 samples, 0.02%)</title><rect x="58.4989%" y="549" width="0.0245%" height="15" fill="rgb(228,3,54)" fg:x="2385" fg:w="1"/><text x="58.7489%" y="559.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced130::reduce (1 samples, 0.02%)</title><rect x="58.4989%" y="533" width="0.0245%" height="15" fill="rgb(226,155,13)" fg:x="2385" fg:w="1"/><text x="58.7489%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (1 samples, 0.02%)</title><rect x="58.5234%" y="581" width="0.0245%" height="15" fill="rgb(241,28,37)" fg:x="2386" fg:w="1"/><text x="58.7734%" y="591.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.02%)</title><rect x="58.5234%" y="565" width="0.0245%" height="15" fill="rgb(233,93,10)" fg:x="2386" fg:w="1"/><text x="58.7734%" y="575.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (2 samples, 0.05%)</title><rect x="58.5480%" y="581" width="0.0491%" height="15" fill="rgb(225,113,19)" fg:x="2387" fg:w="2"/><text x="58.7980%" y="591.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (2 samples, 0.05%)</title><rect x="58.5480%" y="565" width="0.0491%" height="15" fill="rgb(241,2,18)" fg:x="2387" fg:w="2"/><text x="58.7980%" y="575.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (2 samples, 0.05%)</title><rect x="58.5480%" y="549" width="0.0491%" height="15" fill="rgb(228,207,21)" fg:x="2387" fg:w="2"/><text x="58.7980%" y="559.50"></text></g><g><title>core::core_arch::simd::i8x32::new (1 samples, 0.02%)</title><rect x="58.5725%" y="533" width="0.0245%" height="15" fill="rgb(213,211,35)" fg:x="2388" fg:w="1"/><text x="58.8225%" y="543.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="58.5970%" y="581" width="0.0245%" height="15" fill="rgb(209,83,10)" fg:x="2389" fg:w="1"/><text x="58.8470%" y="591.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_blend_epi32 (1 samples, 0.02%)</title><rect x="58.6215%" y="565" width="0.0245%" height="15" fill="rgb(209,164,1)" fg:x="2390" fg:w="1"/><text x="58.8715%" y="575.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="58.6215%" y="549" width="0.0245%" height="15" fill="rgb(213,184,43)" fg:x="2390" fg:w="1"/><text x="58.8715%" y="559.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.02%)</title><rect x="58.6461%" y="565" width="0.0245%" height="15" fill="rgb(231,61,34)" fg:x="2391" fg:w="1"/><text x="58.8961%" y="575.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.02%)</title><rect x="58.6461%" y="549" width="0.0245%" height="15" fill="rgb(235,75,3)" fg:x="2391" fg:w="1"/><text x="58.8961%" y="559.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.02%)</title><rect x="58.6461%" y="533" width="0.0245%" height="15" fill="rgb(220,106,47)" fg:x="2391" fg:w="1"/><text x="58.8961%" y="543.50"></text></g><g><title>poly1305::backend::avx2::helpers::SpacedMultiplier4x130::new (1 samples, 0.02%)</title><rect x="58.6706%" y="565" width="0.0245%" height="15" fill="rgb(210,196,33)" fg:x="2392" fg:w="1"/><text x="58.9206%" y="575.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced130::reduce (1 samples, 0.02%)</title><rect x="58.6706%" y="549" width="0.0245%" height="15" fill="rgb(229,154,42)" fg:x="2392" fg:w="1"/><text x="58.9206%" y="559.50"></text></g><g><title>poly1305::backend::avx2::helpers::adc (1 samples, 0.02%)</title><rect x="58.6706%" y="533" width="0.0245%" height="15" fill="rgb(228,114,26)" fg:x="2392" fg:w="1"/><text x="58.9206%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.02%)</title><rect x="58.6951%" y="549" width="0.0245%" height="15" fill="rgb(208,144,1)" fg:x="2393" fg:w="1"/><text x="58.9451%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (2 samples, 0.05%)</title><rect x="58.7196%" y="533" width="0.0491%" height="15" fill="rgb(239,112,37)" fg:x="2394" fg:w="2"/><text x="58.9696%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (3 samples, 0.07%)</title><rect x="58.7196%" y="549" width="0.0736%" height="15" fill="rgb(210,96,50)" fg:x="2394" fg:w="3"/><text x="58.9696%" y="559.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="58.7687%" y="533" width="0.0245%" height="15" fill="rgb(222,178,2)" fg:x="2396" fg:w="1"/><text x="59.0187%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (1 samples, 0.02%)</title><rect x="58.7932%" y="549" width="0.0245%" height="15" fill="rgb(226,74,18)" fg:x="2397" fg:w="1"/><text x="59.0432%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (1 samples, 0.02%)</title><rect x="58.7932%" y="533" width="0.0245%" height="15" fill="rgb(225,67,54)" fg:x="2397" fg:w="1"/><text x="59.0432%" y="543.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.02%)</title><rect x="58.8178%" y="549" width="0.0245%" height="15" fill="rgb(251,92,32)" fg:x="2398" fg:w="1"/><text x="59.0678%" y="559.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi64x (1 samples, 0.02%)</title><rect x="58.8178%" y="533" width="0.0245%" height="15" fill="rgb(228,149,22)" fg:x="2398" fg:w="1"/><text x="59.0678%" y="543.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.02%)</title><rect x="58.8423%" y="549" width="0.0245%" height="15" fill="rgb(243,54,13)" fg:x="2399" fg:w="1"/><text x="59.0923%" y="559.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.02%)</title><rect x="58.8423%" y="533" width="0.0245%" height="15" fill="rgb(243,180,28)" fg:x="2399" fg:w="1"/><text x="59.0923%" y="543.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.02%)</title><rect x="58.8423%" y="517" width="0.0245%" height="15" fill="rgb(208,167,24)" fg:x="2399" fg:w="1"/><text x="59.0923%" y="527.50"></text></g><g><title>core::core_arch::simd::i8x32::new (1 samples, 0.02%)</title><rect x="58.8423%" y="501" width="0.0245%" height="15" fill="rgb(245,73,45)" fg:x="2399" fg:w="1"/><text x="59.0923%" y="511.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="58.8668%" y="549" width="0.0245%" height="15" fill="rgb(237,203,48)" fg:x="2400" fg:w="1"/><text x="59.1168%" y="559.50"></text></g><g><title>poly1305::backend::avx2::helpers::adc (9 samples, 0.22%)</title><rect x="58.6951%" y="565" width="0.2208%" height="15" fill="rgb(211,197,16)" fg:x="2393" fg:w="9"/><text x="58.9451%" y="575.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.02%)</title><rect x="58.8913%" y="549" width="0.0245%" height="15" fill="rgb(243,99,51)" fg:x="2401" fg:w="1"/><text x="59.1413%" y="559.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier as core::ops::arith::Mul&gt;::mul (1 samples, 0.02%)</title><rect x="58.9159%" y="549" width="0.0245%" height="15" fill="rgb(215,123,29)" fg:x="2402" fg:w="1"/><text x="59.1659%" y="559.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (1 samples, 0.02%)</title><rect x="58.9159%" y="533" width="0.0245%" height="15" fill="rgb(239,186,37)" fg:x="2402" fg:w="1"/><text x="59.1659%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.02%)</title><rect x="58.9404%" y="549" width="0.0245%" height="15" fill="rgb(252,136,39)" fg:x="2403" fg:w="1"/><text x="59.1904%" y="559.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="58.9404%" y="533" width="0.0245%" height="15" fill="rgb(223,213,32)" fg:x="2403" fg:w="1"/><text x="59.1904%" y="543.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.02%)</title><rect x="58.9649%" y="549" width="0.0245%" height="15" fill="rgb(233,115,5)" fg:x="2404" fg:w="1"/><text x="59.2149%" y="559.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.02%)</title><rect x="58.9649%" y="533" width="0.0245%" height="15" fill="rgb(207,226,44)" fg:x="2404" fg:w="1"/><text x="59.2149%" y="543.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.02%)</title><rect x="58.9649%" y="517" width="0.0245%" height="15" fill="rgb(208,126,0)" fg:x="2404" fg:w="1"/><text x="59.2149%" y="527.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (40 samples, 0.98%)</title><rect x="58.0329%" y="613" width="0.9811%" height="15" fill="rgb(244,66,21)" fg:x="2366" fg:w="40"/><text x="58.2829%" y="623.50"></text></g><g><title>poly1305::backend::avx2::helpers::SpacedMultiplier4x130::new (38 samples, 0.93%)</title><rect x="58.0819%" y="597" width="0.9321%" height="15" fill="rgb(222,97,12)" fg:x="2368" fg:w="38"/><text x="58.3319%" y="607.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced130::reduce (16 samples, 0.39%)</title><rect x="58.6215%" y="581" width="0.3924%" height="15" fill="rgb(219,213,19)" fg:x="2390" fg:w="16"/><text x="58.8715%" y="591.50"></text></g><g><title>poly1305::backend::avx2::helpers::red (4 samples, 0.10%)</title><rect x="58.9159%" y="565" width="0.0981%" height="15" fill="rgb(252,169,30)" fg:x="2402" fg:w="4"/><text x="59.1659%" y="575.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="58.9895%" y="549" width="0.0245%" height="15" fill="rgb(206,32,51)" fg:x="2405" fg:w="1"/><text x="59.2395%" y="559.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (1 samples, 0.02%)</title><rect x="59.0140%" y="613" width="0.0245%" height="15" fill="rgb(250,172,42)" fg:x="2406" fg:w="1"/><text x="59.2640%" y="623.50"></text></g><g><title>rustix::backend::arch::asm::syscall4 (2 samples, 0.05%)</title><rect x="59.0385%" y="613" width="0.0491%" height="15" fill="rgb(209,34,43)" fg:x="2407" fg:w="2"/><text x="59.2885%" y="623.50"></text></g><g><title>__entry_text_start (1 samples, 0.02%)</title><rect x="59.0630%" y="597" width="0.0245%" height="15" fill="rgb(223,11,35)" fg:x="2408" fg:w="1"/><text x="59.3130%" y="607.50"></text></g><g><title>rustix::backend::conv::raw_fd (1 samples, 0.02%)</title><rect x="59.0876%" y="613" width="0.0245%" height="15" fill="rgb(251,219,26)" fg:x="2409" fg:w="1"/><text x="59.3376%" y="623.50"></text></g><g><title>rustix::backend::event::epoll::_::&lt;impl core::ops::bit::BitOr for rustix::backend::event::epoll::EventFlags&gt;::bitor (2 samples, 0.05%)</title><rect x="59.1121%" y="613" width="0.0491%" height="15" fill="rgb(231,119,3)" fg:x="2410" fg:w="2"/><text x="59.3621%" y="623.50"></text></g><g><title>__entry_text_start (1 samples, 0.02%)</title><rect x="59.1366%" y="597" width="0.0245%" height="15" fill="rgb(216,97,11)" fg:x="2411" fg:w="1"/><text x="59.3866%" y="607.50"></text></g><g><title>rustix::backend::event::epoll::_::&lt;impl rustix::backend::event::epoll::EventFlags&gt;::insert (1 samples, 0.02%)</title><rect x="59.1611%" y="613" width="0.0245%" height="15" fill="rgb(223,59,9)" fg:x="2412" fg:w="1"/><text x="59.4111%" y="623.50"></text></g><g><title>rustix::backend::event::epoll::_::InternalBitFlags::insert (1 samples, 0.02%)</title><rect x="59.1857%" y="613" width="0.0245%" height="15" fill="rgb(233,93,31)" fg:x="2413" fg:w="1"/><text x="59.4357%" y="623.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::remove (1 samples, 0.02%)</title><rect x="59.2102%" y="613" width="0.0245%" height="15" fill="rgb(239,81,33)" fg:x="2414" fg:w="1"/><text x="59.4602%" y="623.50"></text></g><g><title>chacha20::backends::avx2::inner (3 samples, 0.07%)</title><rect x="59.2347%" y="469" width="0.0736%" height="15" fill="rgb(213,120,34)" fg:x="2415" fg:w="3"/><text x="59.4847%" y="479.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (3 samples, 0.07%)</title><rect x="59.2347%" y="453" width="0.0736%" height="15" fill="rgb(243,49,53)" fg:x="2415" fg:w="3"/><text x="59.4847%" y="463.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (3 samples, 0.07%)</title><rect x="59.2347%" y="437" width="0.0736%" height="15" fill="rgb(247,216,33)" fg:x="2415" fg:w="3"/><text x="59.4847%" y="447.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (3 samples, 0.07%)</title><rect x="59.2347%" y="421" width="0.0736%" height="15" fill="rgb(226,26,14)" fg:x="2415" fg:w="3"/><text x="59.4847%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.07%)</title><rect x="59.2347%" y="405" width="0.0736%" height="15" fill="rgb(215,49,53)" fg:x="2415" fg:w="3"/><text x="59.4847%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.07%)</title><rect x="59.2347%" y="389" width="0.0736%" height="15" fill="rgb(245,162,40)" fg:x="2415" fg:w="3"/><text x="59.4847%" y="399.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.07%)</title><rect x="59.2347%" y="373" width="0.0736%" height="15" fill="rgb(229,68,17)" fg:x="2415" fg:w="3"/><text x="59.4847%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (3 samples, 0.07%)</title><rect x="59.2347%" y="357" width="0.0736%" height="15" fill="rgb(213,182,10)" fg:x="2415" fg:w="3"/><text x="59.4847%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (3 samples, 0.07%)</title><rect x="59.2347%" y="341" width="0.0736%" height="15" fill="rgb(245,125,30)" fg:x="2415" fg:w="3"/><text x="59.4847%" y="351.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (3 samples, 0.07%)</title><rect x="59.2347%" y="325" width="0.0736%" height="15" fill="rgb(232,202,2)" fg:x="2415" fg:w="3"/><text x="59.4847%" y="335.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (3 samples, 0.07%)</title><rect x="59.2347%" y="309" width="0.0736%" height="15" fill="rgb(237,140,51)" fg:x="2415" fg:w="3"/><text x="59.4847%" y="319.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (3 samples, 0.07%)</title><rect x="59.2347%" y="293" width="0.0736%" height="15" fill="rgb(236,157,25)" fg:x="2415" fg:w="3"/><text x="59.4847%" y="303.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (3 samples, 0.07%)</title><rect x="59.2347%" y="277" width="0.0736%" height="15" fill="rgb(219,209,0)" fg:x="2415" fg:w="3"/><text x="59.4847%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.07%)</title><rect x="59.2347%" y="261" width="0.0736%" height="15" fill="rgb(240,116,54)" fg:x="2415" fg:w="3"/><text x="59.4847%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.07%)</title><rect x="59.2347%" y="245" width="0.0736%" height="15" fill="rgb(216,10,36)" fg:x="2415" fg:w="3"/><text x="59.4847%" y="255.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.07%)</title><rect x="59.2347%" y="229" width="0.0736%" height="15" fill="rgb(222,72,44)" fg:x="2415" fg:w="3"/><text x="59.4847%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (3 samples, 0.07%)</title><rect x="59.2347%" y="213" width="0.0736%" height="15" fill="rgb(232,159,9)" fg:x="2415" fg:w="3"/><text x="59.4847%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (3 samples, 0.07%)</title><rect x="59.2347%" y="197" width="0.0736%" height="15" fill="rgb(210,39,32)" fg:x="2415" fg:w="3"/><text x="59.4847%" y="207.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (3 samples, 0.07%)</title><rect x="59.2347%" y="181" width="0.0736%" height="15" fill="rgb(216,194,45)" fg:x="2415" fg:w="3"/><text x="59.4847%" y="191.50"></text></g><g><title>tftp::encryption::Encryptor&lt;R&gt;::decrypt (4 samples, 0.10%)</title><rect x="59.2347%" y="613" width="0.0981%" height="15" fill="rgb(218,18,35)" fg:x="2415" fg:w="4"/><text x="59.4847%" y="623.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (4 samples, 0.10%)</title><rect x="59.2347%" y="597" width="0.0981%" height="15" fill="rgb(207,83,51)" fg:x="2415" fg:w="4"/><text x="59.4847%" y="607.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (4 samples, 0.10%)</title><rect x="59.2347%" y="581" width="0.0981%" height="15" fill="rgb(225,63,43)" fg:x="2415" fg:w="4"/><text x="59.4847%" y="591.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (4 samples, 0.10%)</title><rect x="59.2347%" y="565" width="0.0981%" height="15" fill="rgb(207,57,36)" fg:x="2415" fg:w="4"/><text x="59.4847%" y="575.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (4 samples, 0.10%)</title><rect x="59.2347%" y="549" width="0.0981%" height="15" fill="rgb(216,99,33)" fg:x="2415" fg:w="4"/><text x="59.4847%" y="559.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (4 samples, 0.10%)</title><rect x="59.2347%" y="533" width="0.0981%" height="15" fill="rgb(225,42,16)" fg:x="2415" fg:w="4"/><text x="59.4847%" y="543.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (4 samples, 0.10%)</title><rect x="59.2347%" y="517" width="0.0981%" height="15" fill="rgb(220,201,45)" fg:x="2415" fg:w="4"/><text x="59.4847%" y="527.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (4 samples, 0.10%)</title><rect x="59.2347%" y="501" width="0.0981%" height="15" fill="rgb(225,33,4)" fg:x="2415" fg:w="4"/><text x="59.4847%" y="511.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (4 samples, 0.10%)</title><rect x="59.2347%" y="485" width="0.0981%" height="15" fill="rgb(224,33,50)" fg:x="2415" fg:w="4"/><text x="59.4847%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.02%)</title><rect x="59.3083%" y="469" width="0.0245%" height="15" fill="rgb(246,198,51)" fg:x="2418" fg:w="1"/><text x="59.5583%" y="479.50"></text></g><g><title>tftp::encryption::apply_bit_padding (14 samples, 0.34%)</title><rect x="59.3328%" y="613" width="0.3434%" height="15" fill="rgb(205,22,4)" fg:x="2419" fg:w="14"/><text x="59.5828%" y="623.50"></text></g><g><title>tftp::packet::PacketType::from_repr (1 samples, 0.02%)</title><rect x="59.6762%" y="613" width="0.0245%" height="15" fill="rgb(206,3,8)" fg:x="2433" fg:w="1"/><text x="59.9262%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.02%)</title><rect x="59.7008%" y="421" width="0.0245%" height="15" fill="rgb(251,23,15)" fg:x="2434" fg:w="1"/><text x="59.9508%" y="431.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.02%)</title><rect x="59.7253%" y="421" width="0.0245%" height="15" fill="rgb(252,88,28)" fg:x="2435" fg:w="1"/><text x="59.9753%" y="431.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.02%)</title><rect x="59.7253%" y="405" width="0.0245%" height="15" fill="rgb(212,127,14)" fg:x="2435" fg:w="1"/><text x="59.9753%" y="415.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.02%)</title><rect x="59.7253%" y="389" width="0.0245%" height="15" fill="rgb(247,145,37)" fg:x="2435" fg:w="1"/><text x="59.9753%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_blend_epi32 (1 samples, 0.02%)</title><rect x="59.7498%" y="389" width="0.0245%" height="15" fill="rgb(209,117,53)" fg:x="2436" fg:w="1"/><text x="59.9998%" y="399.50"></text></g><g><title>core::core_arch::simd::u64x4::splat (1 samples, 0.02%)</title><rect x="59.7989%" y="373" width="0.0245%" height="15" fill="rgb(212,90,42)" fg:x="2438" fg:w="1"/><text x="60.0489%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (3 samples, 0.07%)</title><rect x="59.7743%" y="389" width="0.0736%" height="15" fill="rgb(218,164,37)" fg:x="2437" fg:w="3"/><text x="60.0243%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_blend_epi32 (1 samples, 0.02%)</title><rect x="59.8234%" y="373" width="0.0245%" height="15" fill="rgb(246,65,34)" fg:x="2439" fg:w="1"/><text x="60.0734%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (1 samples, 0.02%)</title><rect x="59.8479%" y="389" width="0.0245%" height="15" fill="rgb(231,100,33)" fg:x="2440" fg:w="1"/><text x="60.0979%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.02%)</title><rect x="59.8479%" y="373" width="0.0245%" height="15" fill="rgb(228,126,14)" fg:x="2440" fg:w="1"/><text x="60.0979%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.02%)</title><rect x="59.8725%" y="389" width="0.0245%" height="15" fill="rgb(215,173,21)" fg:x="2441" fg:w="1"/><text x="60.1225%" y="399.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.02%)</title><rect x="59.8725%" y="373" width="0.0245%" height="15" fill="rgb(210,6,40)" fg:x="2441" fg:w="1"/><text x="60.1225%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.02%)</title><rect x="59.8725%" y="357" width="0.0245%" height="15" fill="rgb(212,48,18)" fg:x="2441" fg:w="1"/><text x="60.1225%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.05%)</title><rect x="59.8970%" y="389" width="0.0491%" height="15" fill="rgb(230,214,11)" fg:x="2442" fg:w="2"/><text x="60.1470%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.02%)</title><rect x="59.9460%" y="389" width="0.0245%" height="15" fill="rgb(254,105,39)" fg:x="2444" fg:w="1"/><text x="60.1960%" y="399.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (10 samples, 0.25%)</title><rect x="59.7498%" y="405" width="0.2453%" height="15" fill="rgb(245,158,5)" fg:x="2436" fg:w="10"/><text x="59.9998%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.02%)</title><rect x="59.9706%" y="389" width="0.0245%" height="15" fill="rgb(249,208,11)" fg:x="2445" fg:w="1"/><text x="60.2206%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.02%)</title><rect x="59.9951%" y="373" width="0.0245%" height="15" fill="rgb(210,39,28)" fg:x="2446" fg:w="1"/><text x="60.2451%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (1 samples, 0.02%)</title><rect x="59.9951%" y="357" width="0.0245%" height="15" fill="rgb(211,56,53)" fg:x="2446" fg:w="1"/><text x="60.2451%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.02%)</title><rect x="60.0196%" y="357" width="0.0245%" height="15" fill="rgb(226,201,30)" fg:x="2447" fg:w="1"/><text x="60.2696%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (2 samples, 0.05%)</title><rect x="60.0196%" y="373" width="0.0491%" height="15" fill="rgb(239,101,34)" fg:x="2447" fg:w="2"/><text x="60.2696%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.02%)</title><rect x="60.0442%" y="357" width="0.0245%" height="15" fill="rgb(226,209,5)" fg:x="2448" fg:w="1"/><text x="60.2942%" y="367.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.02%)</title><rect x="60.0442%" y="341" width="0.0245%" height="15" fill="rgb(250,105,47)" fg:x="2448" fg:w="1"/><text x="60.2942%" y="351.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.02%)</title><rect x="60.0442%" y="325" width="0.0245%" height="15" fill="rgb(230,72,3)" fg:x="2448" fg:w="1"/><text x="60.2942%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (2 samples, 0.05%)</title><rect x="60.0687%" y="373" width="0.0491%" height="15" fill="rgb(232,218,39)" fg:x="2449" fg:w="2"/><text x="60.3187%" y="383.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::authenticate_lengths (18 samples, 0.44%)</title><rect x="59.7008%" y="533" width="0.4415%" height="15" fill="rgb(248,166,6)" fg:x="2434" fg:w="18"/><text x="59.9508%" y="543.50"></text></g><g><title>universal_hash::UniversalHash::update (18 samples, 0.44%)</title><rect x="59.7008%" y="517" width="0.4415%" height="15" fill="rgb(247,89,20)" fg:x="2434" fg:w="18"/><text x="59.9508%" y="527.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (18 samples, 0.44%)</title><rect x="59.7008%" y="501" width="0.4415%" height="15" fill="rgb(248,130,54)" fg:x="2434" fg:w="18"/><text x="59.9508%" y="511.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (18 samples, 0.44%)</title><rect x="59.7008%" y="485" width="0.4415%" height="15" fill="rgb(234,196,4)" fg:x="2434" fg:w="18"/><text x="59.9508%" y="495.50"></text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (18 samples, 0.44%)</title><rect x="59.7008%" y="469" width="0.4415%" height="15" fill="rgb(250,143,31)" fg:x="2434" fg:w="18"/><text x="59.9508%" y="479.50"></text></g><g><title>&lt;poly1305::backend::avx2::State as universal_hash::UhfBackend&gt;::proc_block (18 samples, 0.44%)</title><rect x="59.7008%" y="453" width="0.4415%" height="15" fill="rgb(211,110,34)" fg:x="2434" fg:w="18"/><text x="59.9508%" y="463.50"></text></g><g><title>poly1305::backend::avx2::State::compute_block (18 samples, 0.44%)</title><rect x="59.7008%" y="437" width="0.4415%" height="15" fill="rgb(215,124,48)" fg:x="2434" fg:w="18"/><text x="59.9508%" y="447.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (16 samples, 0.39%)</title><rect x="59.7498%" y="421" width="0.3924%" height="15" fill="rgb(216,46,13)" fg:x="2436" fg:w="16"/><text x="59.9998%" y="431.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (6 samples, 0.15%)</title><rect x="59.9951%" y="405" width="0.1472%" height="15" fill="rgb(205,184,25)" fg:x="2446" fg:w="6"/><text x="60.2451%" y="415.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (6 samples, 0.15%)</title><rect x="59.9951%" y="389" width="0.1472%" height="15" fill="rgb(228,1,10)" fg:x="2446" fg:w="6"/><text x="60.2451%" y="399.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.02%)</title><rect x="60.1177%" y="373" width="0.0245%" height="15" fill="rgb(213,116,27)" fg:x="2451" fg:w="1"/><text x="60.3677%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.02%)</title><rect x="60.1177%" y="357" width="0.0245%" height="15" fill="rgb(241,95,50)" fg:x="2451" fg:w="1"/><text x="60.3677%" y="367.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.02%)</title><rect x="60.1177%" y="341" width="0.0245%" height="15" fill="rgb(238,48,32)" fg:x="2451" fg:w="1"/><text x="60.3677%" y="351.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="60.1423%" y="437" width="0.0245%" height="15" fill="rgb(235,113,49)" fg:x="2452" fg:w="1"/><text x="60.3923%" y="447.50"></text></g><g><title>&lt;core::ops::index_range::IndexRange as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="60.1423%" y="421" width="0.0245%" height="15" fill="rgb(205,127,43)" fg:x="2452" fg:w="1"/><text x="60.3923%" y="431.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.02%)</title><rect x="60.1668%" y="437" width="0.0245%" height="15" fill="rgb(250,162,2)" fg:x="2453" fg:w="1"/><text x="60.4168%" y="447.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (1 samples, 0.02%)</title><rect x="60.1913%" y="437" width="0.0245%" height="15" fill="rgb(220,13,41)" fg:x="2454" fg:w="1"/><text x="60.4413%" y="447.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.02%)</title><rect x="60.2894%" y="373" width="0.0245%" height="15" fill="rgb(249,221,25)" fg:x="2458" fg:w="1"/><text x="60.5394%" y="383.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (2 samples, 0.05%)</title><rect x="60.3140%" y="357" width="0.0491%" height="15" fill="rgb(215,208,19)" fg:x="2459" fg:w="2"/><text x="60.5640%" y="367.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (2 samples, 0.05%)</title><rect x="60.3630%" y="341" width="0.0491%" height="15" fill="rgb(236,175,2)" fg:x="2461" fg:w="2"/><text x="60.6130%" y="351.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (3 samples, 0.07%)</title><rect x="60.4121%" y="325" width="0.0736%" height="15" fill="rgb(241,52,2)" fg:x="2463" fg:w="3"/><text x="60.6621%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect x="60.4857%" y="325" width="0.0245%" height="15" fill="rgb(248,140,14)" fg:x="2466" fg:w="1"/><text x="60.7357%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (3 samples, 0.07%)</title><rect x="60.5102%" y="325" width="0.0736%" height="15" fill="rgb(253,22,42)" fg:x="2467" fg:w="3"/><text x="60.7602%" y="335.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.02%)</title><rect x="60.5592%" y="309" width="0.0245%" height="15" fill="rgb(234,61,47)" fg:x="2469" fg:w="1"/><text x="60.8092%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (2 samples, 0.05%)</title><rect x="60.5838%" y="325" width="0.0491%" height="15" fill="rgb(208,226,15)" fg:x="2470" fg:w="2"/><text x="60.8338%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.05%)</title><rect x="60.6328%" y="325" width="0.0491%" height="15" fill="rgb(217,221,4)" fg:x="2472" fg:w="2"/><text x="60.8828%" y="335.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (2 samples, 0.05%)</title><rect x="60.6328%" y="309" width="0.0491%" height="15" fill="rgb(212,174,34)" fg:x="2472" fg:w="2"/><text x="60.8828%" y="319.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="60.6819%" y="325" width="0.0245%" height="15" fill="rgb(253,83,4)" fg:x="2474" fg:w="1"/><text x="60.9319%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.02%)</title><rect x="60.7064%" y="325" width="0.0245%" height="15" fill="rgb(250,195,49)" fg:x="2475" fg:w="1"/><text x="60.9564%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (2 samples, 0.05%)</title><rect x="60.7309%" y="325" width="0.0491%" height="15" fill="rgb(241,192,25)" fg:x="2476" fg:w="2"/><text x="60.9809%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (16 samples, 0.39%)</title><rect x="60.4121%" y="341" width="0.3924%" height="15" fill="rgb(208,124,10)" fg:x="2463" fg:w="16"/><text x="60.6621%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (1 samples, 0.02%)</title><rect x="60.7800%" y="325" width="0.0245%" height="15" fill="rgb(222,33,0)" fg:x="2478" fg:w="1"/><text x="61.0300%" y="335.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="60.7800%" y="309" width="0.0245%" height="15" fill="rgb(234,209,28)" fg:x="2478" fg:w="1"/><text x="61.0300%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect x="60.8045%" y="341" width="0.0245%" height="15" fill="rgb(224,11,23)" fg:x="2479" fg:w="1"/><text x="61.0545%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.02%)</title><rect x="60.8290%" y="341" width="0.0245%" height="15" fill="rgb(232,99,1)" fg:x="2480" fg:w="1"/><text x="61.0790%" y="351.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.02%)</title><rect x="60.8290%" y="325" width="0.0245%" height="15" fill="rgb(237,95,45)" fg:x="2480" fg:w="1"/><text x="61.0790%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (4 samples, 0.10%)</title><rect x="60.8536%" y="341" width="0.0981%" height="15" fill="rgb(208,109,11)" fg:x="2481" fg:w="4"/><text x="61.1036%" y="351.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="60.9517%" y="341" width="0.0245%" height="15" fill="rgb(216,190,48)" fg:x="2485" fg:w="1"/><text x="61.2017%" y="351.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (30 samples, 0.74%)</title><rect x="60.3630%" y="357" width="0.7358%" height="15" fill="rgb(251,171,36)" fg:x="2461" fg:w="30"/><text x="60.6130%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (5 samples, 0.12%)</title><rect x="60.9762%" y="341" width="0.1226%" height="15" fill="rgb(230,62,22)" fg:x="2486" fg:w="5"/><text x="61.2262%" y="351.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.02%)</title><rect x="61.0988%" y="341" width="0.0245%" height="15" fill="rgb(225,114,35)" fg:x="2491" fg:w="1"/><text x="61.3488%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.02%)</title><rect x="61.1234%" y="341" width="0.0245%" height="15" fill="rgb(215,118,42)" fg:x="2492" fg:w="1"/><text x="61.3734%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.02%)</title><rect x="61.1479%" y="325" width="0.0245%" height="15" fill="rgb(243,119,21)" fg:x="2493" fg:w="1"/><text x="61.3979%" y="335.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.02%)</title><rect x="61.1479%" y="309" width="0.0245%" height="15" fill="rgb(252,177,53)" fg:x="2493" fg:w="1"/><text x="61.3979%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.02%)</title><rect x="61.1724%" y="325" width="0.0245%" height="15" fill="rgb(237,209,29)" fg:x="2494" fg:w="1"/><text x="61.4224%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.02%)</title><rect x="61.1970%" y="325" width="0.0245%" height="15" fill="rgb(212,65,23)" fg:x="2495" fg:w="1"/><text x="61.4470%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.05%)</title><rect x="61.2215%" y="325" width="0.0491%" height="15" fill="rgb(230,222,46)" fg:x="2496" fg:w="2"/><text x="61.4715%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (7 samples, 0.17%)</title><rect x="61.1479%" y="341" width="0.1717%" height="15" fill="rgb(215,135,32)" fg:x="2493" fg:w="7"/><text x="61.3979%" y="351.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (2 samples, 0.05%)</title><rect x="61.2705%" y="325" width="0.0491%" height="15" fill="rgb(246,101,22)" fg:x="2498" fg:w="2"/><text x="61.5205%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (3 samples, 0.07%)</title><rect x="61.3196%" y="341" width="0.0736%" height="15" fill="rgb(206,107,13)" fg:x="2500" fg:w="3"/><text x="61.5696%" y="351.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.02%)</title><rect x="61.3687%" y="325" width="0.0245%" height="15" fill="rgb(250,100,44)" fg:x="2502" fg:w="1"/><text x="61.6187%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (5 samples, 0.12%)</title><rect x="61.3932%" y="341" width="0.1226%" height="15" fill="rgb(231,147,38)" fg:x="2503" fg:w="5"/><text x="61.6432%" y="351.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.02%)</title><rect x="61.5158%" y="341" width="0.0245%" height="15" fill="rgb(229,8,40)" fg:x="2508" fg:w="1"/><text x="61.7658%" y="351.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="61.5403%" y="341" width="0.0245%" height="15" fill="rgb(221,135,30)" fg:x="2509" fg:w="1"/><text x="61.7903%" y="351.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (21 samples, 0.52%)</title><rect x="61.0988%" y="357" width="0.5151%" height="15" fill="rgb(249,193,18)" fg:x="2491" fg:w="21"/><text x="61.3488%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (2 samples, 0.05%)</title><rect x="61.5649%" y="341" width="0.0491%" height="15" fill="rgb(209,133,39)" fg:x="2510" fg:w="2"/><text x="61.8149%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect x="61.6139%" y="357" width="0.0245%" height="15" fill="rgb(232,100,14)" fg:x="2512" fg:w="1"/><text x="61.8639%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (3 samples, 0.07%)</title><rect x="61.6385%" y="357" width="0.0736%" height="15" fill="rgb(224,185,1)" fg:x="2513" fg:w="3"/><text x="61.8885%" y="367.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.02%)</title><rect x="61.6875%" y="341" width="0.0245%" height="15" fill="rgb(223,139,8)" fg:x="2515" fg:w="1"/><text x="61.9375%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (3 samples, 0.07%)</title><rect x="61.7120%" y="357" width="0.0736%" height="15" fill="rgb(232,213,38)" fg:x="2516" fg:w="3"/><text x="61.9620%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="61.7856%" y="357" width="0.0245%" height="15" fill="rgb(207,94,22)" fg:x="2519" fg:w="1"/><text x="62.0356%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.02%)</title><rect x="61.8102%" y="357" width="0.0245%" height="15" fill="rgb(219,183,54)" fg:x="2520" fg:w="1"/><text x="62.0602%" y="367.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (65 samples, 1.59%)</title><rect x="60.3140%" y="373" width="1.5943%" height="15" fill="rgb(216,185,54)" fg:x="2459" fg:w="65"/><text x="60.5640%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (3 samples, 0.07%)</title><rect x="61.8347%" y="357" width="0.0736%" height="15" fill="rgb(254,217,39)" fg:x="2521" fg:w="3"/><text x="62.0847%" y="367.50"></text></g><g><title>chacha20::backends::avx2::rounds (67 samples, 1.64%)</title><rect x="60.2894%" y="389" width="1.6434%" height="15" fill="rgb(240,178,23)" fg:x="2458" fg:w="67"/><text x="60.5394%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.02%)</title><rect x="61.9083%" y="373" width="0.0245%" height="15" fill="rgb(218,11,47)" fg:x="2524" fg:w="1"/><text x="62.1583%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (2 samples, 0.05%)</title><rect x="61.9328%" y="389" width="0.0491%" height="15" fill="rgb(218,51,51)" fg:x="2525" fg:w="2"/><text x="62.1828%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.02%)</title><rect x="61.9818%" y="389" width="0.0245%" height="15" fill="rgb(238,126,27)" fg:x="2527" fg:w="1"/><text x="62.2318%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.02%)</title><rect x="62.0064%" y="389" width="0.0245%" height="15" fill="rgb(249,202,22)" fg:x="2528" fg:w="1"/><text x="62.2564%" y="399.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_par_ks_blocks (75 samples, 1.84%)</title><rect x="60.2158%" y="405" width="1.8396%" height="15" fill="rgb(254,195,49)" fg:x="2455" fg:w="75"/><text x="60.4658%" y="415.50">&lt;..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.02%)</title><rect x="62.0309%" y="389" width="0.0245%" height="15" fill="rgb(208,123,14)" fg:x="2529" fg:w="1"/><text x="62.2809%" y="399.50"></text></g><g><title>&lt;inout::inout_buf::InOutBufIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="62.0554%" y="405" width="0.0245%" height="15" fill="rgb(224,200,8)" fg:x="2530" fg:w="1"/><text x="62.3054%" y="415.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (2 samples, 0.05%)</title><rect x="62.1045%" y="325" width="0.0491%" height="15" fill="rgb(217,61,36)" fg:x="2532" fg:w="2"/><text x="62.3545%" y="335.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (3 samples, 0.07%)</title><rect x="62.1045%" y="341" width="0.0736%" height="15" fill="rgb(206,35,45)" fg:x="2532" fg:w="3"/><text x="62.3545%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.02%)</title><rect x="62.1535%" y="325" width="0.0245%" height="15" fill="rgb(217,65,33)" fg:x="2534" fg:w="1"/><text x="62.4035%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.02%)</title><rect x="62.1535%" y="309" width="0.0245%" height="15" fill="rgb(222,158,48)" fg:x="2534" fg:w="1"/><text x="62.4035%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.02%)</title><rect x="62.1781%" y="325" width="0.0245%" height="15" fill="rgb(254,2,54)" fg:x="2535" fg:w="1"/><text x="62.4281%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.02%)</title><rect x="62.2026%" y="325" width="0.0245%" height="15" fill="rgb(250,143,38)" fg:x="2536" fg:w="1"/><text x="62.4526%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect x="62.2026%" y="309" width="0.0245%" height="15" fill="rgb(248,25,0)" fg:x="2536" fg:w="1"/><text x="62.4526%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.02%)</title><rect x="62.2271%" y="325" width="0.0245%" height="15" fill="rgb(206,152,27)" fg:x="2537" fg:w="1"/><text x="62.4771%" y="335.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (5 samples, 0.12%)</title><rect x="62.1781%" y="341" width="0.1226%" height="15" fill="rgb(240,77,30)" fg:x="2535" fg:w="5"/><text x="62.4281%" y="351.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (2 samples, 0.05%)</title><rect x="62.2517%" y="325" width="0.0491%" height="15" fill="rgb(231,5,3)" fg:x="2538" fg:w="2"/><text x="62.5017%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (2 samples, 0.05%)</title><rect x="62.3007%" y="341" width="0.0491%" height="15" fill="rgb(207,226,32)" fg:x="2540" fg:w="2"/><text x="62.5507%" y="351.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.02%)</title><rect x="62.3252%" y="325" width="0.0245%" height="15" fill="rgb(222,207,47)" fg:x="2541" fg:w="1"/><text x="62.5752%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.02%)</title><rect x="62.3498%" y="341" width="0.0245%" height="15" fill="rgb(229,115,45)" fg:x="2542" fg:w="1"/><text x="62.5998%" y="351.50"></text></g><g><title>cipher::stream_core::StreamBackend::gen_tail_blocks (13 samples, 0.32%)</title><rect x="62.0800%" y="405" width="0.3189%" height="15" fill="rgb(224,191,6)" fg:x="2531" fg:w="13"/><text x="62.3300%" y="415.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (13 samples, 0.32%)</title><rect x="62.0800%" y="389" width="0.3189%" height="15" fill="rgb(230,227,24)" fg:x="2531" fg:w="13"/><text x="62.3300%" y="399.50"></text></g><g><title>chacha20::backends::avx2::rounds (12 samples, 0.29%)</title><rect x="62.1045%" y="373" width="0.2943%" height="15" fill="rgb(228,80,19)" fg:x="2532" fg:w="12"/><text x="62.3545%" y="383.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (12 samples, 0.29%)</title><rect x="62.1045%" y="357" width="0.2943%" height="15" fill="rgb(247,229,0)" fg:x="2532" fg:w="12"/><text x="62.3545%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.02%)</title><rect x="62.3743%" y="341" width="0.0245%" height="15" fill="rgb(237,194,15)" fg:x="2543" fg:w="1"/><text x="62.6243%" y="351.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.02%)</title><rect x="62.6196%" y="149" width="0.0245%" height="15" fill="rgb(219,203,20)" fg:x="2553" fg:w="1"/><text x="62.8696%" y="159.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="63.0611%" y="133" width="0.0245%" height="15" fill="rgb(234,128,8)" fg:x="2571" fg:w="1"/><text x="63.3111%" y="143.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (19 samples, 0.47%)</title><rect x="62.6441%" y="149" width="0.4660%" height="15" fill="rgb(248,202,8)" fg:x="2554" fg:w="19"/><text x="62.8941%" y="159.50"></text></g><g><title>core::slice::raw::from_raw_parts (1 samples, 0.02%)</title><rect x="63.0856%" y="133" width="0.0245%" height="15" fill="rgb(206,104,37)" fg:x="2572" fg:w="1"/><text x="63.3356%" y="143.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.02%)</title><rect x="63.0856%" y="117" width="0.0245%" height="15" fill="rgb(223,8,27)" fg:x="2572" fg:w="1"/><text x="63.3356%" y="127.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (1 samples, 0.02%)</title><rect x="63.0856%" y="101" width="0.0245%" height="15" fill="rgb(216,217,28)" fg:x="2572" fg:w="1"/><text x="63.3356%" y="111.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (23 samples, 0.56%)</title><rect x="62.5705%" y="165" width="0.5641%" height="15" fill="rgb(249,199,1)" fg:x="2551" fg:w="23"/><text x="62.8205%" y="175.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (1 samples, 0.02%)</title><rect x="63.1101%" y="149" width="0.0245%" height="15" fill="rgb(240,85,17)" fg:x="2573" fg:w="1"/><text x="63.3601%" y="159.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (1 samples, 0.02%)</title><rect x="63.1347%" y="165" width="0.0245%" height="15" fill="rgb(206,108,45)" fg:x="2574" fg:w="1"/><text x="63.3847%" y="175.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (1 samples, 0.02%)</title><rect x="63.1347%" y="149" width="0.0245%" height="15" fill="rgb(245,210,41)" fg:x="2574" fg:w="1"/><text x="63.3847%" y="159.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (1 samples, 0.02%)</title><rect x="63.1347%" y="133" width="0.0245%" height="15" fill="rgb(206,13,37)" fg:x="2574" fg:w="1"/><text x="63.3847%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (30 samples, 0.74%)</title><rect x="62.4479%" y="181" width="0.7358%" height="15" fill="rgb(250,61,18)" fg:x="2546" fg:w="30"/><text x="62.6979%" y="191.50"></text></g><g><title>universal_hash::UniversalHash::verify (1 samples, 0.02%)</title><rect x="63.1592%" y="165" width="0.0245%" height="15" fill="rgb(235,172,48)" fg:x="2575" fg:w="1"/><text x="63.4092%" y="175.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (32 samples, 0.78%)</title><rect x="62.4234%" y="229" width="0.7849%" height="15" fill="rgb(249,201,17)" fg:x="2545" fg:w="32"/><text x="62.6734%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (32 samples, 0.78%)</title><rect x="62.4234%" y="213" width="0.7849%" height="15" fill="rgb(219,208,6)" fg:x="2545" fg:w="32"/><text x="62.6734%" y="223.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (32 samples, 0.78%)</title><rect x="62.4234%" y="197" width="0.7849%" height="15" fill="rgb(248,31,23)" fg:x="2545" fg:w="32"/><text x="62.6734%" y="207.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (1 samples, 0.02%)</title><rect x="63.1837%" y="181" width="0.0245%" height="15" fill="rgb(245,15,42)" fg:x="2576" fg:w="1"/><text x="63.4337%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (34 samples, 0.83%)</title><rect x="62.3988%" y="373" width="0.8339%" height="15" fill="rgb(222,217,39)" fg:x="2544" fg:w="34"/><text x="62.6488%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (34 samples, 0.83%)</title><rect x="62.3988%" y="357" width="0.8339%" height="15" fill="rgb(210,219,27)" fg:x="2544" fg:w="34"/><text x="62.6488%" y="367.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (34 samples, 0.83%)</title><rect x="62.3988%" y="341" width="0.8339%" height="15" fill="rgb(252,166,36)" fg:x="2544" fg:w="34"/><text x="62.6488%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (34 samples, 0.83%)</title><rect x="62.3988%" y="325" width="0.8339%" height="15" fill="rgb(245,132,34)" fg:x="2544" fg:w="34"/><text x="62.6488%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (34 samples, 0.83%)</title><rect x="62.3988%" y="309" width="0.8339%" height="15" fill="rgb(236,54,3)" fg:x="2544" fg:w="34"/><text x="62.6488%" y="319.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (34 samples, 0.83%)</title><rect x="62.3988%" y="293" width="0.8339%" height="15" fill="rgb(241,173,43)" fg:x="2544" fg:w="34"/><text x="62.6488%" y="303.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (34 samples, 0.83%)</title><rect x="62.3988%" y="277" width="0.8339%" height="15" fill="rgb(215,190,9)" fg:x="2544" fg:w="34"/><text x="62.6488%" y="287.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (34 samples, 0.83%)</title><rect x="62.3988%" y="261" width="0.8339%" height="15" fill="rgb(242,101,16)" fg:x="2544" fg:w="34"/><text x="62.6488%" y="271.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (34 samples, 0.83%)</title><rect x="62.3988%" y="245" width="0.8339%" height="15" fill="rgb(223,190,21)" fg:x="2544" fg:w="34"/><text x="62.6488%" y="255.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (1 samples, 0.02%)</title><rect x="63.2082%" y="229" width="0.0245%" height="15" fill="rgb(215,228,25)" fg:x="2577" fg:w="1"/><text x="63.4582%" y="239.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (1 samples, 0.02%)</title><rect x="63.2082%" y="213" width="0.0245%" height="15" fill="rgb(225,36,22)" fg:x="2577" fg:w="1"/><text x="63.4582%" y="223.50"></text></g><g><title>__memcpy_avx_unaligned (1 samples, 0.02%)</title><rect x="63.2082%" y="197" width="0.0245%" height="15" fill="rgb(251,106,46)" fg:x="2577" fg:w="1"/><text x="63.4582%" y="207.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (35 samples, 0.86%)</title><rect x="62.3988%" y="405" width="0.8585%" height="15" fill="rgb(208,90,1)" fg:x="2544" fg:w="35"/><text x="62.6488%" y="415.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (35 samples, 0.86%)</title><rect x="62.3988%" y="389" width="0.8585%" height="15" fill="rgb(243,10,4)" fg:x="2544" fg:w="35"/><text x="62.6488%" y="399.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (1 samples, 0.02%)</title><rect x="63.2328%" y="373" width="0.0245%" height="15" fill="rgb(212,137,27)" fg:x="2578" fg:w="1"/><text x="63.4828%" y="383.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (1 samples, 0.02%)</title><rect x="63.2328%" y="357" width="0.0245%" height="15" fill="rgb(231,220,49)" fg:x="2578" fg:w="1"/><text x="63.4828%" y="367.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::Deref&gt;::deref (4 samples, 0.10%)</title><rect x="63.5762%" y="389" width="0.0981%" height="15" fill="rgb(237,96,20)" fg:x="2592" fg:w="4"/><text x="63.8262%" y="399.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.02%)</title><rect x="63.6743%" y="389" width="0.0245%" height="15" fill="rgb(239,229,30)" fg:x="2596" fg:w="1"/><text x="63.9243%" y="399.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="63.6988%" y="261" width="0.0245%" height="15" fill="rgb(219,65,33)" fg:x="2597" fg:w="1"/><text x="63.9488%" y="271.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (1 samples, 0.02%)</title><rect x="63.6988%" y="245" width="0.0245%" height="15" fill="rgb(243,134,7)" fg:x="2597" fg:w="1"/><text x="63.9488%" y="255.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (1 samples, 0.02%)</title><rect x="63.6988%" y="229" width="0.0245%" height="15" fill="rgb(216,177,54)" fg:x="2597" fg:w="1"/><text x="63.9488%" y="239.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (1 samples, 0.02%)</title><rect x="63.6988%" y="213" width="0.0245%" height="15" fill="rgb(211,160,20)" fg:x="2597" fg:w="1"/><text x="63.9488%" y="223.50"></text></g><g><title>_init (1 samples, 0.02%)</title><rect x="64.2384%" y="117" width="0.0245%" height="15" fill="rgb(239,85,39)" fg:x="2619" fg:w="1"/><text x="64.4884%" y="127.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="64.2629%" y="117" width="0.0245%" height="15" fill="rgb(232,125,22)" fg:x="2620" fg:w="1"/><text x="64.5129%" y="127.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (12 samples, 0.29%)</title><rect x="64.0177%" y="133" width="0.2943%" height="15" fill="rgb(244,57,34)" fg:x="2610" fg:w="12"/><text x="64.2677%" y="143.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (1 samples, 0.02%)</title><rect x="64.2875%" y="117" width="0.0245%" height="15" fill="rgb(214,203,32)" fg:x="2621" fg:w="1"/><text x="64.5375%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (21 samples, 0.52%)</title><rect x="63.8214%" y="165" width="0.5151%" height="15" fill="rgb(207,58,43)" fg:x="2602" fg:w="21"/><text x="64.0714%" y="175.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (13 samples, 0.32%)</title><rect x="64.0177%" y="149" width="0.3189%" height="15" fill="rgb(215,193,15)" fg:x="2610" fg:w="13"/><text x="64.2677%" y="159.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (1 samples, 0.02%)</title><rect x="64.3120%" y="133" width="0.0245%" height="15" fill="rgb(232,15,44)" fg:x="2622" fg:w="1"/><text x="64.5620%" y="143.50"></text></g><g><title>_init (1 samples, 0.02%)</title><rect x="64.3365%" y="165" width="0.0245%" height="15" fill="rgb(212,3,48)" fg:x="2623" fg:w="1"/><text x="64.5865%" y="175.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (26 samples, 0.64%)</title><rect x="63.7479%" y="213" width="0.6377%" height="15" fill="rgb(218,128,7)" fg:x="2599" fg:w="26"/><text x="63.9979%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (26 samples, 0.64%)</title><rect x="63.7479%" y="197" width="0.6377%" height="15" fill="rgb(226,216,39)" fg:x="2599" fg:w="26"/><text x="63.9979%" y="207.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (26 samples, 0.64%)</title><rect x="63.7479%" y="181" width="0.6377%" height="15" fill="rgb(243,47,51)" fg:x="2599" fg:w="26"/><text x="63.9979%" y="191.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (1 samples, 0.02%)</title><rect x="64.3610%" y="165" width="0.0245%" height="15" fill="rgb(241,183,40)" fg:x="2624" fg:w="1"/><text x="64.6110%" y="175.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.02%)</title><rect x="64.3610%" y="149" width="0.0245%" height="15" fill="rgb(231,217,32)" fg:x="2624" fg:w="1"/><text x="64.6110%" y="159.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (1 samples, 0.02%)</title><rect x="64.3856%" y="213" width="0.0245%" height="15" fill="rgb(229,61,38)" fg:x="2625" fg:w="1"/><text x="64.6356%" y="223.50"></text></g><g><title>core::ptr::read (1 samples, 0.02%)</title><rect x="64.3856%" y="197" width="0.0245%" height="15" fill="rgb(225,210,5)" fg:x="2625" fg:w="1"/><text x="64.6356%" y="207.50"></text></g><g><title>_init (1 samples, 0.02%)</title><rect x="64.3856%" y="181" width="0.0245%" height="15" fill="rgb(231,79,45)" fg:x="2625" fg:w="1"/><text x="64.6356%" y="191.50"></text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;generic_array::GenericArray&lt;u8,N&gt;,M&gt;&gt;::xor_in2out (48 samples, 1.18%)</title><rect x="63.2573%" y="405" width="1.1773%" height="15" fill="rgb(224,100,7)" fg:x="2579" fg:w="48"/><text x="63.5073%" y="415.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (30 samples, 0.74%)</title><rect x="63.6988%" y="389" width="0.7358%" height="15" fill="rgb(241,198,18)" fg:x="2597" fg:w="30"/><text x="63.9488%" y="399.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (30 samples, 0.74%)</title><rect x="63.6988%" y="373" width="0.7358%" height="15" fill="rgb(252,97,53)" fg:x="2597" fg:w="30"/><text x="63.9488%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (30 samples, 0.74%)</title><rect x="63.6988%" y="357" width="0.7358%" height="15" fill="rgb(220,88,7)" fg:x="2597" fg:w="30"/><text x="63.9488%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (30 samples, 0.74%)</title><rect x="63.6988%" y="341" width="0.7358%" height="15" fill="rgb(213,176,14)" fg:x="2597" fg:w="30"/><text x="63.9488%" y="351.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (30 samples, 0.74%)</title><rect x="63.6988%" y="325" width="0.7358%" height="15" fill="rgb(246,73,7)" fg:x="2597" fg:w="30"/><text x="63.9488%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (30 samples, 0.74%)</title><rect x="63.6988%" y="309" width="0.7358%" height="15" fill="rgb(245,64,36)" fg:x="2597" fg:w="30"/><text x="63.9488%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (30 samples, 0.74%)</title><rect x="63.6988%" y="293" width="0.7358%" height="15" fill="rgb(245,80,10)" fg:x="2597" fg:w="30"/><text x="63.9488%" y="303.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (30 samples, 0.74%)</title><rect x="63.6988%" y="277" width="0.7358%" height="15" fill="rgb(232,107,50)" fg:x="2597" fg:w="30"/><text x="63.9488%" y="287.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (29 samples, 0.71%)</title><rect x="63.7233%" y="261" width="0.7113%" height="15" fill="rgb(253,3,0)" fg:x="2598" fg:w="29"/><text x="63.9733%" y="271.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (29 samples, 0.71%)</title><rect x="63.7233%" y="245" width="0.7113%" height="15" fill="rgb(212,99,53)" fg:x="2598" fg:w="29"/><text x="63.9733%" y="255.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (29 samples, 0.71%)</title><rect x="63.7233%" y="229" width="0.7113%" height="15" fill="rgb(249,111,54)" fg:x="2598" fg:w="29"/><text x="63.9733%" y="239.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::iter_position (1 samples, 0.02%)</title><rect x="64.4101%" y="213" width="0.0245%" height="15" fill="rgb(249,55,30)" fg:x="2626" fg:w="1"/><text x="64.6601%" y="223.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (1 samples, 0.02%)</title><rect x="64.4101%" y="197" width="0.0245%" height="15" fill="rgb(237,47,42)" fg:x="2626" fg:w="1"/><text x="64.6601%" y="207.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (1 samples, 0.02%)</title><rect x="64.4101%" y="181" width="0.0245%" height="15" fill="rgb(211,20,18)" fg:x="2626" fg:w="1"/><text x="64.6601%" y="191.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (1 samples, 0.02%)</title><rect x="64.4101%" y="165" width="0.0245%" height="15" fill="rgb(231,203,46)" fg:x="2626" fg:w="1"/><text x="64.6601%" y="175.50"></text></g><g><title>chacha20::backends::avx2::inner (173 samples, 4.24%)</title><rect x="60.2158%" y="437" width="4.2433%" height="15" fill="rgb(237,142,3)" fg:x="2455" fg:w="173"/><text x="60.4658%" y="447.50">chach..</text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (173 samples, 4.24%)</title><rect x="60.2158%" y="421" width="4.2433%" height="15" fill="rgb(241,107,1)" fg:x="2455" fg:w="173"/><text x="60.4658%" y="431.50">&lt;ciph..</text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;u8,N&gt;&gt;::xor_in2out (1 samples, 0.02%)</title><rect x="64.4346%" y="405" width="0.0245%" height="15" fill="rgb(229,83,13)" fg:x="2627" fg:w="1"/><text x="64.6846%" y="415.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.02%)</title><rect x="64.4346%" y="389" width="0.0245%" height="15" fill="rgb(241,91,40)" fg:x="2627" fg:w="1"/><text x="64.6846%" y="399.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.02%)</title><rect x="64.4346%" y="373" width="0.0245%" height="15" fill="rgb(225,3,45)" fg:x="2627" fg:w="1"/><text x="64.6846%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.02%)</title><rect x="64.4346%" y="357" width="0.0245%" height="15" fill="rgb(244,223,14)" fg:x="2627" fg:w="1"/><text x="64.6846%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="64.4346%" y="341" width="0.0245%" height="15" fill="rgb(224,124,37)" fg:x="2627" fg:w="1"/><text x="64.6846%" y="351.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="64.4346%" y="325" width="0.0245%" height="15" fill="rgb(251,171,30)" fg:x="2627" fg:w="1"/><text x="64.6846%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.02%)</title><rect x="64.4346%" y="309" width="0.0245%" height="15" fill="rgb(236,46,54)" fg:x="2627" fg:w="1"/><text x="64.6846%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.02%)</title><rect x="64.4346%" y="293" width="0.0245%" height="15" fill="rgb(245,213,5)" fg:x="2627" fg:w="1"/><text x="64.6846%" y="303.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.02%)</title><rect x="64.4346%" y="277" width="0.0245%" height="15" fill="rgb(230,144,27)" fg:x="2627" fg:w="1"/><text x="64.6846%" y="287.50"></text></g><g><title>chacha20::backends::avx2::rounds (4 samples, 0.10%)</title><rect x="64.4592%" y="437" width="0.0981%" height="15" fill="rgb(220,86,6)" fg:x="2628" fg:w="4"/><text x="64.7092%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (4 samples, 0.10%)</title><rect x="64.5573%" y="437" width="0.0981%" height="15" fill="rgb(240,20,13)" fg:x="2632" fg:w="4"/><text x="64.8073%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.02%)</title><rect x="64.6554%" y="437" width="0.0245%" height="15" fill="rgb(217,89,34)" fg:x="2636" fg:w="1"/><text x="64.9054%" y="447.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (2 samples, 0.05%)</title><rect x="64.6799%" y="437" width="0.0491%" height="15" fill="rgb(229,13,5)" fg:x="2637" fg:w="2"/><text x="64.9299%" y="447.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (194 samples, 4.76%)</title><rect x="60.1423%" y="533" width="4.7584%" height="15" fill="rgb(244,67,35)" fg:x="2452" fg:w="194"/><text x="60.3923%" y="543.50">cipher..</text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (194 samples, 4.76%)</title><rect x="60.1423%" y="517" width="4.7584%" height="15" fill="rgb(221,40,2)" fg:x="2452" fg:w="194"/><text x="60.3923%" y="527.50">cipher..</text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (194 samples, 4.76%)</title><rect x="60.1423%" y="501" width="4.7584%" height="15" fill="rgb(237,157,21)" fg:x="2452" fg:w="194"/><text x="60.3923%" y="511.50">&lt;ciphe..</text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (194 samples, 4.76%)</title><rect x="60.1423%" y="485" width="4.7584%" height="15" fill="rgb(222,94,11)" fg:x="2452" fg:w="194"/><text x="60.3923%" y="495.50">cipher..</text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (194 samples, 4.76%)</title><rect x="60.1423%" y="469" width="4.7584%" height="15" fill="rgb(249,113,6)" fg:x="2452" fg:w="194"/><text x="60.3923%" y="479.50">&lt;chach..</text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (194 samples, 4.76%)</title><rect x="60.1423%" y="453" width="4.7584%" height="15" fill="rgb(238,137,36)" fg:x="2452" fg:w="194"/><text x="60.3923%" y="463.50">&lt;chach..</text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (7 samples, 0.17%)</title><rect x="64.7290%" y="437" width="0.1717%" height="15" fill="rgb(210,102,26)" fg:x="2639" fg:w="7"/><text x="64.9790%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.02%)</title><rect x="64.9007%" y="421" width="0.0245%" height="15" fill="rgb(218,30,30)" fg:x="2646" fg:w="1"/><text x="65.1507%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.02%)</title><rect x="64.9252%" y="421" width="0.0245%" height="15" fill="rgb(214,67,26)" fg:x="2647" fg:w="1"/><text x="65.1752%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.02%)</title><rect x="64.9497%" y="421" width="0.0245%" height="15" fill="rgb(251,9,53)" fg:x="2648" fg:w="1"/><text x="65.1997%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi64 (1 samples, 0.02%)</title><rect x="64.9742%" y="421" width="0.0245%" height="15" fill="rgb(228,204,25)" fg:x="2649" fg:w="1"/><text x="65.2242%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (1 samples, 0.02%)</title><rect x="64.9988%" y="421" width="0.0245%" height="15" fill="rgb(207,153,8)" fg:x="2650" fg:w="1"/><text x="65.2488%" y="431.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (1 samples, 0.02%)</title><rect x="65.0233%" y="421" width="0.0245%" height="15" fill="rgb(242,9,16)" fg:x="2651" fg:w="1"/><text x="65.2733%" y="431.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi32 (1 samples, 0.02%)</title><rect x="65.0233%" y="405" width="0.0245%" height="15" fill="rgb(217,211,10)" fg:x="2651" fg:w="1"/><text x="65.2733%" y="415.50"></text></g><g><title>core::core_arch::simd::i32x8::new (1 samples, 0.02%)</title><rect x="65.0233%" y="389" width="0.0245%" height="15" fill="rgb(219,228,52)" fg:x="2651" fg:w="1"/><text x="65.2733%" y="399.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (2 samples, 0.05%)</title><rect x="65.0478%" y="421" width="0.0491%" height="15" fill="rgb(231,92,29)" fg:x="2652" fg:w="2"/><text x="65.2978%" y="431.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.02%)</title><rect x="65.0724%" y="405" width="0.0245%" height="15" fill="rgb(232,8,23)" fg:x="2653" fg:w="1"/><text x="65.3224%" y="415.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.02%)</title><rect x="65.0724%" y="389" width="0.0245%" height="15" fill="rgb(216,211,34)" fg:x="2653" fg:w="1"/><text x="65.3224%" y="399.50"></text></g><g><title>core::core_arch::simd::i8x32::new (1 samples, 0.02%)</title><rect x="65.0724%" y="373" width="0.0245%" height="15" fill="rgb(236,151,0)" fg:x="2653" fg:w="1"/><text x="65.3224%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.02%)</title><rect x="65.0969%" y="421" width="0.0245%" height="15" fill="rgb(209,168,3)" fg:x="2654" fg:w="1"/><text x="65.3469%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (3 samples, 0.07%)</title><rect x="65.1214%" y="421" width="0.0736%" height="15" fill="rgb(208,129,28)" fg:x="2655" fg:w="3"/><text x="65.3714%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.02%)</title><rect x="65.1950%" y="421" width="0.0245%" height="15" fill="rgb(229,78,22)" fg:x="2658" fg:w="1"/><text x="65.4450%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (7 samples, 0.17%)</title><rect x="65.2195%" y="421" width="0.1717%" height="15" fill="rgb(228,187,13)" fg:x="2659" fg:w="7"/><text x="65.4695%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (2 samples, 0.05%)</title><rect x="65.4157%" y="389" width="0.0491%" height="15" fill="rgb(240,119,24)" fg:x="2667" fg:w="2"/><text x="65.6657%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.02%)</title><rect x="65.7101%" y="373" width="0.0245%" height="15" fill="rgb(209,194,42)" fg:x="2679" fg:w="1"/><text x="65.9601%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.02%)</title><rect x="65.7346%" y="373" width="0.0245%" height="15" fill="rgb(247,200,46)" fg:x="2680" fg:w="1"/><text x="65.9846%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.02%)</title><rect x="65.7591%" y="373" width="0.0245%" height="15" fill="rgb(218,76,16)" fg:x="2681" fg:w="1"/><text x="66.0091%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.02%)</title><rect x="65.7591%" y="357" width="0.0245%" height="15" fill="rgb(225,21,48)" fg:x="2681" fg:w="1"/><text x="66.0091%" y="367.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.02%)</title><rect x="65.7591%" y="341" width="0.0245%" height="15" fill="rgb(239,223,50)" fg:x="2681" fg:w="1"/><text x="66.0091%" y="351.50"></text></g><g><title>core::core_arch::simd::i8x32::new (1 samples, 0.02%)</title><rect x="65.7591%" y="325" width="0.0245%" height="15" fill="rgb(244,45,21)" fg:x="2681" fg:w="1"/><text x="66.0091%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="65.7837%" y="373" width="0.0245%" height="15" fill="rgb(232,33,43)" fg:x="2682" fg:w="1"/><text x="66.0337%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (15 samples, 0.37%)</title><rect x="65.4648%" y="389" width="0.3679%" height="15" fill="rgb(209,8,3)" fg:x="2669" fg:w="15"/><text x="65.7148%" y="399.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (1 samples, 0.02%)</title><rect x="65.8082%" y="373" width="0.0245%" height="15" fill="rgb(214,25,53)" fg:x="2683" fg:w="1"/><text x="66.0582%" y="383.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (1 samples, 0.02%)</title><rect x="65.8082%" y="357" width="0.0245%" height="15" fill="rgb(254,186,54)" fg:x="2683" fg:w="1"/><text x="66.0582%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.02%)</title><rect x="65.8327%" y="389" width="0.0245%" height="15" fill="rgb(208,174,49)" fg:x="2684" fg:w="1"/><text x="66.0827%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_blend_epi32 (3 samples, 0.07%)</title><rect x="65.8572%" y="389" width="0.0736%" height="15" fill="rgb(233,191,51)" fg:x="2685" fg:w="3"/><text x="66.1072%" y="399.50"></text></g><g><title>core::core_arch::simd::u64x4::splat (2 samples, 0.05%)</title><rect x="66.7157%" y="373" width="0.0491%" height="15" fill="rgb(222,134,10)" fg:x="2720" fg:w="2"/><text x="66.9657%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (3 samples, 0.07%)</title><rect x="66.7648%" y="373" width="0.0736%" height="15" fill="rgb(230,226,20)" fg:x="2722" fg:w="3"/><text x="67.0148%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (3 samples, 0.07%)</title><rect x="66.8384%" y="373" width="0.0736%" height="15" fill="rgb(251,111,25)" fg:x="2725" fg:w="3"/><text x="67.0884%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (1 samples, 0.02%)</title><rect x="66.9119%" y="373" width="0.0245%" height="15" fill="rgb(224,40,46)" fg:x="2728" fg:w="1"/><text x="67.1619%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (1 samples, 0.02%)</title><rect x="66.9365%" y="373" width="0.0245%" height="15" fill="rgb(236,108,47)" fg:x="2729" fg:w="1"/><text x="67.1865%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (3 samples, 0.07%)</title><rect x="66.9610%" y="373" width="0.0736%" height="15" fill="rgb(234,93,0)" fg:x="2730" fg:w="3"/><text x="67.2110%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (3 samples, 0.07%)</title><rect x="66.9610%" y="357" width="0.0736%" height="15" fill="rgb(224,213,32)" fg:x="2730" fg:w="3"/><text x="67.2110%" y="367.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (3 samples, 0.07%)</title><rect x="66.9610%" y="341" width="0.0736%" height="15" fill="rgb(251,11,48)" fg:x="2730" fg:w="3"/><text x="67.2110%" y="351.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="67.0346%" y="373" width="0.0245%" height="15" fill="rgb(236,173,5)" fg:x="2733" fg:w="1"/><text x="67.2846%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.02%)</title><rect x="67.0591%" y="373" width="0.0245%" height="15" fill="rgb(230,95,12)" fg:x="2734" fg:w="1"/><text x="67.3091%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (2 samples, 0.05%)</title><rect x="67.0836%" y="373" width="0.0491%" height="15" fill="rgb(232,209,1)" fg:x="2735" fg:w="2"/><text x="67.3336%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (51 samples, 1.25%)</title><rect x="65.9308%" y="389" width="1.2509%" height="15" fill="rgb(232,6,1)" fg:x="2688" fg:w="51"/><text x="66.1808%" y="399.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (2 samples, 0.05%)</title><rect x="67.1327%" y="373" width="0.0491%" height="15" fill="rgb(210,224,50)" fg:x="2737" fg:w="2"/><text x="67.3827%" y="383.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (1 samples, 0.02%)</title><rect x="67.1572%" y="357" width="0.0245%" height="15" fill="rgb(228,127,35)" fg:x="2738" fg:w="1"/><text x="67.4072%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (2 samples, 0.05%)</title><rect x="67.1818%" y="389" width="0.0491%" height="15" fill="rgb(245,102,45)" fg:x="2739" fg:w="2"/><text x="67.4318%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (2 samples, 0.05%)</title><rect x="67.3534%" y="373" width="0.0491%" height="15" fill="rgb(214,1,49)" fg:x="2746" fg:w="2"/><text x="67.6034%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.02%)</title><rect x="67.4025%" y="373" width="0.0245%" height="15" fill="rgb(226,163,40)" fg:x="2748" fg:w="1"/><text x="67.6525%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_blend_epi32 (1 samples, 0.02%)</title><rect x="67.4270%" y="373" width="0.0245%" height="15" fill="rgb(239,212,28)" fg:x="2749" fg:w="1"/><text x="67.6770%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (2 samples, 0.05%)</title><rect x="67.4516%" y="373" width="0.0491%" height="15" fill="rgb(220,20,13)" fg:x="2750" fg:w="2"/><text x="67.7016%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi64 (1 samples, 0.02%)</title><rect x="67.5006%" y="373" width="0.0245%" height="15" fill="rgb(210,164,35)" fg:x="2752" fg:w="1"/><text x="67.7506%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (9 samples, 0.22%)</title><rect x="67.5251%" y="373" width="0.2208%" height="15" fill="rgb(248,109,41)" fg:x="2753" fg:w="9"/><text x="67.7751%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (9 samples, 0.22%)</title><rect x="67.5251%" y="357" width="0.2208%" height="15" fill="rgb(238,23,50)" fg:x="2753" fg:w="9"/><text x="67.7751%" y="367.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (8 samples, 0.20%)</title><rect x="67.5497%" y="341" width="0.1962%" height="15" fill="rgb(211,48,49)" fg:x="2754" fg:w="8"/><text x="67.7997%" y="351.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.05%)</title><rect x="67.7459%" y="373" width="0.0491%" height="15" fill="rgb(223,36,21)" fg:x="2762" fg:w="2"/><text x="67.9959%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.05%)</title><rect x="67.7949%" y="373" width="0.0491%" height="15" fill="rgb(207,123,46)" fg:x="2764" fg:w="2"/><text x="68.0449%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.02%)</title><rect x="67.8440%" y="373" width="0.0245%" height="15" fill="rgb(240,218,32)" fg:x="2766" fg:w="1"/><text x="68.0940%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (28 samples, 0.69%)</title><rect x="67.2308%" y="389" width="0.6868%" height="15" fill="rgb(252,5,43)" fg:x="2741" fg:w="28"/><text x="67.4808%" y="399.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (2 samples, 0.05%)</title><rect x="67.8685%" y="373" width="0.0491%" height="15" fill="rgb(252,84,19)" fg:x="2767" fg:w="2"/><text x="68.1185%" y="383.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Add&gt;::add (1 samples, 0.02%)</title><rect x="67.8931%" y="357" width="0.0245%" height="15" fill="rgb(243,152,39)" fg:x="2768" fg:w="1"/><text x="68.1431%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.02%)</title><rect x="68.2364%" y="373" width="0.0245%" height="15" fill="rgb(234,160,15)" fg:x="2782" fg:w="1"/><text x="68.4864%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (2 samples, 0.05%)</title><rect x="68.2610%" y="373" width="0.0491%" height="15" fill="rgb(237,34,20)" fg:x="2783" fg:w="2"/><text x="68.5110%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="68.3100%" y="373" width="0.0245%" height="15" fill="rgb(229,97,13)" fg:x="2785" fg:w="1"/><text x="68.5600%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (19 samples, 0.47%)</title><rect x="67.9176%" y="389" width="0.4660%" height="15" fill="rgb(234,71,50)" fg:x="2769" fg:w="19"/><text x="68.1676%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (2 samples, 0.05%)</title><rect x="68.3346%" y="373" width="0.0491%" height="15" fill="rgb(253,155,4)" fg:x="2786" fg:w="2"/><text x="68.5846%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi64 (4 samples, 0.10%)</title><rect x="68.3836%" y="389" width="0.0981%" height="15" fill="rgb(222,185,37)" fg:x="2788" fg:w="4"/><text x="68.6336%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (2 samples, 0.05%)</title><rect x="68.4817%" y="389" width="0.0491%" height="15" fill="rgb(251,177,13)" fg:x="2792" fg:w="2"/><text x="68.7317%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_unpacklo_epi64 (2 samples, 0.05%)</title><rect x="68.5308%" y="389" width="0.0491%" height="15" fill="rgb(250,179,40)" fg:x="2794" fg:w="2"/><text x="68.7808%" y="399.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi32 (2 samples, 0.05%)</title><rect x="68.5798%" y="389" width="0.0491%" height="15" fill="rgb(242,44,2)" fg:x="2796" fg:w="2"/><text x="68.8298%" y="399.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi32 (1 samples, 0.02%)</title><rect x="68.6044%" y="373" width="0.0245%" height="15" fill="rgb(216,177,13)" fg:x="2797" fg:w="1"/><text x="68.8544%" y="383.50"></text></g><g><title>core::core_arch::simd::i32x8::new (1 samples, 0.02%)</title><rect x="68.6044%" y="357" width="0.0245%" height="15" fill="rgb(216,106,43)" fg:x="2797" fg:w="1"/><text x="68.8544%" y="367.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (2 samples, 0.05%)</title><rect x="68.6289%" y="389" width="0.0491%" height="15" fill="rgb(216,183,2)" fg:x="2798" fg:w="2"/><text x="68.8789%" y="399.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi32 (2 samples, 0.05%)</title><rect x="68.6289%" y="373" width="0.0491%" height="15" fill="rgb(249,75,3)" fg:x="2798" fg:w="2"/><text x="68.8789%" y="383.50"></text></g><g><title>core::core_arch::simd::i32x8::new (2 samples, 0.05%)</title><rect x="68.6289%" y="357" width="0.0491%" height="15" fill="rgb(219,67,39)" fg:x="2798" fg:w="2"/><text x="68.8789%" y="367.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (21 samples, 0.52%)</title><rect x="68.6779%" y="389" width="0.5151%" height="15" fill="rgb(253,228,2)" fg:x="2800" fg:w="21"/><text x="68.9279%" y="399.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (21 samples, 0.52%)</title><rect x="68.6779%" y="373" width="0.5151%" height="15" fill="rgb(235,138,27)" fg:x="2800" fg:w="21"/><text x="68.9279%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (21 samples, 0.52%)</title><rect x="68.6779%" y="357" width="0.5151%" height="15" fill="rgb(236,97,51)" fg:x="2800" fg:w="21"/><text x="68.9279%" y="367.50"></text></g><g><title>core::core_arch::simd::i8x32::new (1 samples, 0.02%)</title><rect x="69.1685%" y="341" width="0.0245%" height="15" fill="rgb(240,80,30)" fg:x="2820" fg:w="1"/><text x="69.4185%" y="351.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (5 samples, 0.12%)</title><rect x="69.1930%" y="389" width="0.1226%" height="15" fill="rgb(230,178,19)" fg:x="2821" fg:w="5"/><text x="69.4430%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (9 samples, 0.22%)</title><rect x="69.3157%" y="389" width="0.2208%" height="15" fill="rgb(210,190,27)" fg:x="2826" fg:w="9"/><text x="69.5657%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (9 samples, 0.22%)</title><rect x="69.5364%" y="389" width="0.2208%" height="15" fill="rgb(222,107,31)" fg:x="2835" fg:w="9"/><text x="69.7864%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (15 samples, 0.37%)</title><rect x="69.7572%" y="389" width="0.3679%" height="15" fill="rgb(216,127,34)" fg:x="2844" fg:w="15"/><text x="70.0072%" y="399.50"></text></g><g><title>poly1305::backend::avx2::State::compute_par_blocks (2 samples, 0.05%)</title><rect x="70.1251%" y="389" width="0.0491%" height="15" fill="rgb(234,116,52)" fg:x="2859" fg:w="2"/><text x="70.3751%" y="399.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (11 samples, 0.27%)</title><rect x="70.1987%" y="373" width="0.2698%" height="15" fill="rgb(222,124,15)" fg:x="2862" fg:w="11"/><text x="70.4487%" y="383.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Add&gt;::add (1 samples, 0.02%)</title><rect x="70.4685%" y="373" width="0.0245%" height="15" fill="rgb(231,179,28)" fg:x="2873" fg:w="1"/><text x="70.7185%" y="383.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (14 samples, 0.34%)</title><rect x="70.1741%" y="389" width="0.3434%" height="15" fill="rgb(226,93,45)" fg:x="2861" fg:w="14"/><text x="70.4241%" y="399.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (1 samples, 0.02%)</title><rect x="70.4930%" y="373" width="0.0245%" height="15" fill="rgb(215,8,51)" fg:x="2874" fg:w="1"/><text x="70.7430%" y="383.50"></text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_loaded_blocks (3 samples, 0.07%)</title><rect x="70.5175%" y="389" width="0.0736%" height="15" fill="rgb(223,106,5)" fg:x="2875" fg:w="3"/><text x="70.7675%" y="399.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (214 samples, 5.25%)</title><rect x="65.3912%" y="405" width="5.2490%" height="15" fill="rgb(250,191,5)" fg:x="2666" fg:w="214"/><text x="65.6412%" y="415.50">&lt;&amp;poly..</text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_par_blocks (2 samples, 0.05%)</title><rect x="70.5911%" y="389" width="0.0491%" height="15" fill="rgb(242,132,44)" fg:x="2878" fg:w="2"/><text x="70.8411%" y="399.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="70.6156%" y="373" width="0.0245%" height="15" fill="rgb(251,152,29)" fg:x="2879" fg:w="1"/><text x="70.8656%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.02%)</title><rect x="70.6402%" y="373" width="0.0245%" height="15" fill="rgb(218,179,5)" fg:x="2880" fg:w="1"/><text x="70.8902%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (1 samples, 0.02%)</title><rect x="70.6647%" y="373" width="0.0245%" height="15" fill="rgb(227,67,19)" fg:x="2881" fg:w="1"/><text x="70.9147%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (3 samples, 0.07%)</title><rect x="70.6402%" y="389" width="0.0736%" height="15" fill="rgb(233,119,31)" fg:x="2880" fg:w="3"/><text x="70.8902%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="70.6892%" y="373" width="0.0245%" height="15" fill="rgb(241,120,22)" fg:x="2882" fg:w="1"/><text x="70.9392%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (2 samples, 0.05%)</title><rect x="70.7138%" y="389" width="0.0491%" height="15" fill="rgb(224,102,30)" fg:x="2883" fg:w="2"/><text x="70.9638%" y="399.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Add&gt;::add (6 samples, 0.15%)</title><rect x="70.6402%" y="405" width="0.1472%" height="15" fill="rgb(210,164,37)" fg:x="2880" fg:w="6"/><text x="70.8902%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (1 samples, 0.02%)</title><rect x="70.7628%" y="389" width="0.0245%" height="15" fill="rgb(226,191,16)" fg:x="2885" fg:w="1"/><text x="71.0128%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (5 samples, 0.12%)</title><rect x="70.7873%" y="389" width="0.1226%" height="15" fill="rgb(214,40,45)" fg:x="2886" fg:w="5"/><text x="71.0373%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.02%)</title><rect x="70.9100%" y="389" width="0.0245%" height="15" fill="rgb(244,29,26)" fg:x="2891" fg:w="1"/><text x="71.1600%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_blend_epi32 (1 samples, 0.02%)</title><rect x="70.9345%" y="389" width="0.0245%" height="15" fill="rgb(216,16,5)" fg:x="2892" fg:w="1"/><text x="71.1845%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.02%)</title><rect x="70.9345%" y="373" width="0.0245%" height="15" fill="rgb(249,76,35)" fg:x="2892" fg:w="1"/><text x="71.1845%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (7 samples, 0.17%)</title><rect x="70.9590%" y="389" width="0.1717%" height="15" fill="rgb(207,11,44)" fg:x="2893" fg:w="7"/><text x="71.2090%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (2 samples, 0.05%)</title><rect x="71.1307%" y="389" width="0.0491%" height="15" fill="rgb(228,190,49)" fg:x="2900" fg:w="2"/><text x="71.3807%" y="399.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.02%)</title><rect x="71.1798%" y="389" width="0.0245%" height="15" fill="rgb(214,173,12)" fg:x="2902" fg:w="1"/><text x="71.4298%" y="399.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.02%)</title><rect x="71.1798%" y="373" width="0.0245%" height="15" fill="rgb(218,26,35)" fg:x="2902" fg:w="1"/><text x="71.4298%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.02%)</title><rect x="71.1798%" y="357" width="0.0245%" height="15" fill="rgb(220,200,19)" fg:x="2902" fg:w="1"/><text x="71.4298%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (5 samples, 0.12%)</title><rect x="71.2043%" y="389" width="0.1226%" height="15" fill="rgb(239,95,49)" fg:x="2903" fg:w="5"/><text x="71.4543%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (3 samples, 0.07%)</title><rect x="71.3270%" y="389" width="0.0736%" height="15" fill="rgb(235,85,53)" fg:x="2908" fg:w="3"/><text x="71.5770%" y="399.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (2 samples, 0.05%)</title><rect x="71.4005%" y="389" width="0.0491%" height="15" fill="rgb(233,133,31)" fg:x="2911" fg:w="2"/><text x="71.6505%" y="399.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (2 samples, 0.05%)</title><rect x="71.4005%" y="373" width="0.0491%" height="15" fill="rgb(218,25,20)" fg:x="2911" fg:w="2"/><text x="71.6505%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.02%)</title><rect x="71.8911%" y="357" width="0.0245%" height="15" fill="rgb(252,210,38)" fg:x="2931" fg:w="1"/><text x="72.1411%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (4 samples, 0.10%)</title><rect x="71.9156%" y="357" width="0.0981%" height="15" fill="rgb(242,134,21)" fg:x="2932" fg:w="4"/><text x="72.1656%" y="367.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi64x (1 samples, 0.02%)</title><rect x="72.0137%" y="357" width="0.0245%" height="15" fill="rgb(213,28,48)" fg:x="2936" fg:w="1"/><text x="72.2637%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.05%)</title><rect x="72.0383%" y="357" width="0.0491%" height="15" fill="rgb(250,196,2)" fg:x="2937" fg:w="2"/><text x="72.2883%" y="367.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.02%)</title><rect x="72.0628%" y="341" width="0.0245%" height="15" fill="rgb(227,5,17)" fg:x="2938" fg:w="1"/><text x="72.3128%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (27 samples, 0.66%)</title><rect x="71.4496%" y="373" width="0.6623%" height="15" fill="rgb(221,226,24)" fg:x="2913" fg:w="27"/><text x="71.6996%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.02%)</title><rect x="72.0873%" y="357" width="0.0245%" height="15" fill="rgb(211,5,48)" fg:x="2939" fg:w="1"/><text x="72.3373%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (3 samples, 0.07%)</title><rect x="72.1118%" y="357" width="0.0736%" height="15" fill="rgb(219,150,6)" fg:x="2940" fg:w="3"/><text x="72.3618%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (6 samples, 0.15%)</title><rect x="72.1854%" y="357" width="0.1472%" height="15" fill="rgb(251,46,16)" fg:x="2943" fg:w="6"/><text x="72.4354%" y="367.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi64x (3 samples, 0.07%)</title><rect x="72.3326%" y="357" width="0.0736%" height="15" fill="rgb(220,204,40)" fg:x="2949" fg:w="3"/><text x="72.5826%" y="367.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi64x (1 samples, 0.02%)</title><rect x="72.3817%" y="341" width="0.0245%" height="15" fill="rgb(211,85,2)" fg:x="2951" fg:w="1"/><text x="72.6317%" y="351.50"></text></g><g><title>core::core_arch::simd::i64x4::new (1 samples, 0.02%)</title><rect x="72.3817%" y="325" width="0.0245%" height="15" fill="rgb(229,17,7)" fg:x="2951" fg:w="1"/><text x="72.6317%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (3 samples, 0.07%)</title><rect x="72.4062%" y="357" width="0.0736%" height="15" fill="rgb(239,72,28)" fg:x="2952" fg:w="3"/><text x="72.6562%" y="367.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.02%)</title><rect x="72.4552%" y="341" width="0.0245%" height="15" fill="rgb(230,47,54)" fg:x="2954" fg:w="1"/><text x="72.7052%" y="351.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (2 samples, 0.05%)</title><rect x="72.4798%" y="357" width="0.0491%" height="15" fill="rgb(214,50,8)" fg:x="2955" fg:w="2"/><text x="72.7298%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (18 samples, 0.44%)</title><rect x="72.1118%" y="373" width="0.4415%" height="15" fill="rgb(216,198,43)" fg:x="2940" fg:w="18"/><text x="72.3618%" y="383.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (1 samples, 0.02%)</title><rect x="72.5288%" y="357" width="0.0245%" height="15" fill="rgb(234,20,35)" fg:x="2957" fg:w="1"/><text x="72.7788%" y="367.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (1 samples, 0.02%)</title><rect x="72.5288%" y="341" width="0.0245%" height="15" fill="rgb(254,45,19)" fg:x="2957" fg:w="1"/><text x="72.7788%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (22 samples, 0.54%)</title><rect x="72.5533%" y="373" width="0.5396%" height="15" fill="rgb(219,14,44)" fg:x="2958" fg:w="22"/><text x="72.8033%" y="383.50"></text></g><g><title>core::core_arch::simd::u64x4::splat (2 samples, 0.05%)</title><rect x="73.0439%" y="357" width="0.0491%" height="15" fill="rgb(217,220,26)" fg:x="2978" fg:w="2"/><text x="73.2939%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (1 samples, 0.02%)</title><rect x="73.0930%" y="373" width="0.0245%" height="15" fill="rgb(213,158,28)" fg:x="2980" fg:w="1"/><text x="73.3430%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.02%)</title><rect x="73.1175%" y="357" width="0.0245%" height="15" fill="rgb(252,51,52)" fg:x="2981" fg:w="1"/><text x="73.3675%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (4 samples, 0.10%)</title><rect x="73.1420%" y="357" width="0.0981%" height="15" fill="rgb(246,89,16)" fg:x="2982" fg:w="4"/><text x="73.3920%" y="367.50"></text></g><g><title>core::core_arch::simd::u64x4::splat (1 samples, 0.02%)</title><rect x="73.2156%" y="341" width="0.0245%" height="15" fill="rgb(216,158,49)" fg:x="2985" fg:w="1"/><text x="73.4656%" y="351.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (3 samples, 0.07%)</title><rect x="73.2401%" y="357" width="0.0736%" height="15" fill="rgb(236,107,19)" fg:x="2986" fg:w="3"/><text x="73.4901%" y="367.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (3 samples, 0.07%)</title><rect x="73.2401%" y="341" width="0.0736%" height="15" fill="rgb(228,185,30)" fg:x="2986" fg:w="3"/><text x="73.4901%" y="351.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (3 samples, 0.07%)</title><rect x="73.2401%" y="325" width="0.0736%" height="15" fill="rgb(246,134,8)" fg:x="2986" fg:w="3"/><text x="73.4901%" y="335.50"></text></g><g><title>core::core_arch::simd::i8x32::new (2 samples, 0.05%)</title><rect x="73.2647%" y="309" width="0.0491%" height="15" fill="rgb(214,143,50)" fg:x="2987" fg:w="2"/><text x="73.5147%" y="319.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="73.3137%" y="357" width="0.0245%" height="15" fill="rgb(228,75,8)" fg:x="2989" fg:w="1"/><text x="73.5637%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (10 samples, 0.25%)</title><rect x="73.1175%" y="373" width="0.2453%" height="15" fill="rgb(207,175,4)" fg:x="2981" fg:w="10"/><text x="73.3675%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.02%)</title><rect x="73.3382%" y="357" width="0.0245%" height="15" fill="rgb(205,108,24)" fg:x="2990" fg:w="1"/><text x="73.5882%" y="367.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.02%)</title><rect x="73.3382%" y="341" width="0.0245%" height="15" fill="rgb(244,120,49)" fg:x="2990" fg:w="1"/><text x="73.5882%" y="351.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi64x (1 samples, 0.02%)</title><rect x="73.3628%" y="373" width="0.0245%" height="15" fill="rgb(223,47,38)" fg:x="2991" fg:w="1"/><text x="73.6128%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (3 samples, 0.07%)</title><rect x="73.3873%" y="373" width="0.0736%" height="15" fill="rgb(229,179,11)" fg:x="2992" fg:w="3"/><text x="73.6373%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (3 samples, 0.07%)</title><rect x="73.3873%" y="357" width="0.0736%" height="15" fill="rgb(231,122,1)" fg:x="2992" fg:w="3"/><text x="73.6373%" y="367.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (3 samples, 0.07%)</title><rect x="73.3873%" y="341" width="0.0736%" height="15" fill="rgb(245,119,9)" fg:x="2992" fg:w="3"/><text x="73.6373%" y="351.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (3 samples, 0.07%)</title><rect x="73.4609%" y="373" width="0.0736%" height="15" fill="rgb(241,163,25)" fg:x="2995" fg:w="3"/><text x="73.7109%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (3 samples, 0.07%)</title><rect x="73.5345%" y="373" width="0.0736%" height="15" fill="rgb(217,214,3)" fg:x="2998" fg:w="3"/><text x="73.7845%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (9 samples, 0.22%)</title><rect x="73.6080%" y="373" width="0.2208%" height="15" fill="rgb(240,86,28)" fg:x="3001" fg:w="9"/><text x="73.8580%" y="383.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (2 samples, 0.05%)</title><rect x="73.8288%" y="357" width="0.0491%" height="15" fill="rgb(215,47,9)" fg:x="3010" fg:w="2"/><text x="74.0788%" y="367.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (3 samples, 0.07%)</title><rect x="73.8288%" y="373" width="0.0736%" height="15" fill="rgb(252,25,45)" fg:x="3010" fg:w="3"/><text x="74.0788%" y="383.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (1 samples, 0.02%)</title><rect x="73.8779%" y="357" width="0.0245%" height="15" fill="rgb(251,164,9)" fg:x="3012" fg:w="1"/><text x="74.1279%" y="367.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::decrypt_in_place_detached (581 samples, 14.25%)</title><rect x="59.7008%" y="549" width="14.2507%" height="15" fill="rgb(233,194,0)" fg:x="2434" fg:w="581"/><text x="59.9508%" y="559.50">chacha20poly1305::ciph..</text></g><g><title>universal_hash::UniversalHash::update_padded (369 samples, 9.05%)</title><rect x="64.9007%" y="533" width="9.0508%" height="15" fill="rgb(249,111,24)" fg:x="2646" fg:w="369"/><text x="65.1507%" y="543.50">universal_has..</text></g><g><title>universal_hash::UniversalHash::update (369 samples, 9.05%)</title><rect x="64.9007%" y="517" width="9.0508%" height="15" fill="rgb(250,223,3)" fg:x="2646" fg:w="369"/><text x="65.1507%" y="527.50">universal_has..</text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (369 samples, 9.05%)</title><rect x="64.9007%" y="501" width="9.0508%" height="15" fill="rgb(236,178,37)" fg:x="2646" fg:w="369"/><text x="65.1507%" y="511.50">&lt;poly1305::Po..</text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (369 samples, 9.05%)</title><rect x="64.9007%" y="485" width="9.0508%" height="15" fill="rgb(241,158,50)" fg:x="2646" fg:w="369"/><text x="65.1507%" y="495.50">&lt;poly1305::ba..</text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (369 samples, 9.05%)</title><rect x="64.9007%" y="469" width="9.0508%" height="15" fill="rgb(213,121,41)" fg:x="2646" fg:w="369"/><text x="65.1507%" y="479.50">&lt;universal_ha..</text></g><g><title>&lt;poly1305::backend::avx2::State as universal_hash::UhfBackend&gt;::proc_par_blocks (369 samples, 9.05%)</title><rect x="64.9007%" y="453" width="9.0508%" height="15" fill="rgb(240,92,3)" fg:x="2646" fg:w="369"/><text x="65.1507%" y="463.50">&lt;poly1305::ba..</text></g><g><title>poly1305::backend::avx2::State::compute_par_blocks (369 samples, 9.05%)</title><rect x="64.9007%" y="437" width="9.0508%" height="15" fill="rgb(205,123,3)" fg:x="2646" fg:w="369"/><text x="65.1507%" y="447.50">poly1305::bac..</text></g><g><title>poly1305::backend::avx2::State::process_blocks (349 samples, 8.56%)</title><rect x="65.3912%" y="421" width="8.5602%" height="15" fill="rgb(205,97,47)" fg:x="2666" fg:w="349"/><text x="65.6412%" y="431.50">poly1305::ba..</text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (129 samples, 3.16%)</title><rect x="70.7873%" y="405" width="3.1641%" height="15" fill="rgb(247,152,14)" fg:x="2886" fg:w="129"/><text x="71.0373%" y="415.50">pol..</text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (102 samples, 2.50%)</title><rect x="71.4496%" y="389" width="2.5018%" height="15" fill="rgb(248,195,53)" fg:x="2913" fg:w="102"/><text x="71.6996%" y="399.50">po..</text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (2 samples, 0.05%)</title><rect x="73.9024%" y="373" width="0.0491%" height="15" fill="rgb(226,201,16)" fg:x="3013" fg:w="2"/><text x="74.1524%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.02%)</title><rect x="73.9514%" y="453" width="0.0245%" height="15" fill="rgb(205,98,0)" fg:x="3015" fg:w="1"/><text x="74.2014%" y="463.50"></text></g><g><title>core::core_arch::simd::u64x4::splat (1 samples, 0.02%)</title><rect x="73.9514%" y="437" width="0.0245%" height="15" fill="rgb(214,191,48)" fg:x="3015" fg:w="1"/><text x="74.2014%" y="447.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier as core::ops::arith::Mul&gt;::mul (1 samples, 0.02%)</title><rect x="73.9760%" y="437" width="0.0245%" height="15" fill="rgb(237,112,39)" fg:x="3016" fg:w="1"/><text x="74.2260%" y="447.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (1 samples, 0.02%)</title><rect x="73.9760%" y="421" width="0.0245%" height="15" fill="rgb(247,203,27)" fg:x="3016" fg:w="1"/><text x="74.2260%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (2 samples, 0.05%)</title><rect x="73.9760%" y="453" width="0.0491%" height="15" fill="rgb(235,124,28)" fg:x="3016" fg:w="2"/><text x="74.2260%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.02%)</title><rect x="74.0005%" y="437" width="0.0245%" height="15" fill="rgb(208,207,46)" fg:x="3017" fg:w="1"/><text x="74.2505%" y="447.50"></text></g><g><title>&lt;poly1305::Poly1305 as crypto_common::KeyInit&gt;::new (4 samples, 0.10%)</title><rect x="73.9514%" y="533" width="0.0981%" height="15" fill="rgb(234,176,4)" fg:x="3015" fg:w="4"/><text x="74.2014%" y="543.50"></text></g><g><title>poly1305::backend::autodetect::State::new (4 samples, 0.10%)</title><rect x="73.9514%" y="517" width="0.0981%" height="15" fill="rgb(230,133,28)" fg:x="3015" fg:w="4"/><text x="74.2014%" y="527.50"></text></g><g><title>poly1305::backend::avx2::State::new (4 samples, 0.10%)</title><rect x="73.9514%" y="501" width="0.0981%" height="15" fill="rgb(211,137,40)" fg:x="3015" fg:w="4"/><text x="74.2014%" y="511.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier as core::ops::arith::Mul&gt;::mul (4 samples, 0.10%)</title><rect x="73.9514%" y="485" width="0.0981%" height="15" fill="rgb(254,35,13)" fg:x="3015" fg:w="4"/><text x="74.2014%" y="495.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (4 samples, 0.10%)</title><rect x="73.9514%" y="469" width="0.0981%" height="15" fill="rgb(225,49,51)" fg:x="3015" fg:w="4"/><text x="74.2014%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (1 samples, 0.02%)</title><rect x="74.0250%" y="453" width="0.0245%" height="15" fill="rgb(251,10,15)" fg:x="3018" fg:w="1"/><text x="74.2750%" y="463.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (1 samples, 0.02%)</title><rect x="74.0250%" y="437" width="0.0245%" height="15" fill="rgb(228,207,15)" fg:x="3018" fg:w="1"/><text x="74.2750%" y="447.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi32 (1 samples, 0.02%)</title><rect x="74.0250%" y="421" width="0.0245%" height="15" fill="rgb(241,99,19)" fg:x="3018" fg:w="1"/><text x="74.2750%" y="431.50"></text></g><g><title>core::core_arch::simd::i32x8::new (1 samples, 0.02%)</title><rect x="74.0250%" y="405" width="0.0245%" height="15" fill="rgb(207,104,49)" fg:x="3018" fg:w="1"/><text x="74.2750%" y="415.50"></text></g><g><title>tftp::server::connection::Connection&lt;B,Rng&gt;::decrypt_packet (589 samples, 14.45%)</title><rect x="59.7008%" y="613" width="14.4469%" height="15" fill="rgb(234,99,18)" fg:x="2434" fg:w="589"/><text x="59.9508%" y="623.50">tftp::server::connecti..</text></g><g><title>tftp::encrypted_packet::EncryptedPacket::decrypt (589 samples, 14.45%)</title><rect x="59.7008%" y="597" width="14.4469%" height="15" fill="rgb(213,191,49)" fg:x="2434" fg:w="589"/><text x="59.9508%" y="607.50">tftp::encrypted_packet..</text></g><g><title>tftp::encryption::Encryptor&lt;R&gt;::decrypt (589 samples, 14.45%)</title><rect x="59.7008%" y="581" width="14.4469%" height="15" fill="rgb(210,226,19)" fg:x="2434" fg:w="589"/><text x="59.9508%" y="591.50">tftp::encryption::Encr..</text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (589 samples, 14.45%)</title><rect x="59.7008%" y="565" width="14.4469%" height="15" fill="rgb(229,97,18)" fg:x="2434" fg:w="589"/><text x="59.9508%" y="575.50">&lt;chacha20poly1305::Cha..</text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (8 samples, 0.20%)</title><rect x="73.9514%" y="549" width="0.1962%" height="15" fill="rgb(211,167,15)" fg:x="3015" fg:w="8"/><text x="74.2014%" y="559.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (4 samples, 0.10%)</title><rect x="74.0495%" y="533" width="0.0981%" height="15" fill="rgb(210,169,34)" fg:x="3019" fg:w="4"/><text x="74.2995%" y="543.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (4 samples, 0.10%)</title><rect x="74.0495%" y="517" width="0.0981%" height="15" fill="rgb(241,121,31)" fg:x="3019" fg:w="4"/><text x="74.2995%" y="527.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (4 samples, 0.10%)</title><rect x="74.0495%" y="501" width="0.0981%" height="15" fill="rgb(232,40,11)" fg:x="3019" fg:w="4"/><text x="74.2995%" y="511.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (4 samples, 0.10%)</title><rect x="74.0495%" y="485" width="0.0981%" height="15" fill="rgb(205,86,26)" fg:x="3019" fg:w="4"/><text x="74.2995%" y="495.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (4 samples, 0.10%)</title><rect x="74.0495%" y="469" width="0.0981%" height="15" fill="rgb(231,126,28)" fg:x="3019" fg:w="4"/><text x="74.2995%" y="479.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (4 samples, 0.10%)</title><rect x="74.0495%" y="453" width="0.0981%" height="15" fill="rgb(219,221,18)" fg:x="3019" fg:w="4"/><text x="74.2995%" y="463.50"></text></g><g><title>chacha20::backends::avx2::inner (4 samples, 0.10%)</title><rect x="74.0495%" y="437" width="0.0981%" height="15" fill="rgb(211,40,0)" fg:x="3019" fg:w="4"/><text x="74.2995%" y="447.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (4 samples, 0.10%)</title><rect x="74.0495%" y="421" width="0.0981%" height="15" fill="rgb(239,85,43)" fg:x="3019" fg:w="4"/><text x="74.2995%" y="431.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (3 samples, 0.07%)</title><rect x="74.0741%" y="405" width="0.0736%" height="15" fill="rgb(231,55,21)" fg:x="3020" fg:w="3"/><text x="74.3241%" y="415.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (3 samples, 0.07%)</title><rect x="74.0741%" y="389" width="0.0736%" height="15" fill="rgb(225,184,43)" fg:x="3020" fg:w="3"/><text x="74.3241%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.07%)</title><rect x="74.0741%" y="373" width="0.0736%" height="15" fill="rgb(251,158,41)" fg:x="3020" fg:w="3"/><text x="74.3241%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.07%)</title><rect x="74.0741%" y="357" width="0.0736%" height="15" fill="rgb(234,159,37)" fg:x="3020" fg:w="3"/><text x="74.3241%" y="367.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.07%)</title><rect x="74.0741%" y="341" width="0.0736%" height="15" fill="rgb(216,204,22)" fg:x="3020" fg:w="3"/><text x="74.3241%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (3 samples, 0.07%)</title><rect x="74.0741%" y="325" width="0.0736%" height="15" fill="rgb(214,17,3)" fg:x="3020" fg:w="3"/><text x="74.3241%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (3 samples, 0.07%)</title><rect x="74.0741%" y="309" width="0.0736%" height="15" fill="rgb(212,111,17)" fg:x="3020" fg:w="3"/><text x="74.3241%" y="319.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (3 samples, 0.07%)</title><rect x="74.0741%" y="293" width="0.0736%" height="15" fill="rgb(221,157,24)" fg:x="3020" fg:w="3"/><text x="74.3241%" y="303.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (3 samples, 0.07%)</title><rect x="74.0741%" y="277" width="0.0736%" height="15" fill="rgb(252,16,13)" fg:x="3020" fg:w="3"/><text x="74.3241%" y="287.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (3 samples, 0.07%)</title><rect x="74.0741%" y="261" width="0.0736%" height="15" fill="rgb(221,62,2)" fg:x="3020" fg:w="3"/><text x="74.3241%" y="271.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (3 samples, 0.07%)</title><rect x="74.0741%" y="245" width="0.0736%" height="15" fill="rgb(247,87,22)" fg:x="3020" fg:w="3"/><text x="74.3241%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.07%)</title><rect x="74.0741%" y="229" width="0.0736%" height="15" fill="rgb(215,73,9)" fg:x="3020" fg:w="3"/><text x="74.3241%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.07%)</title><rect x="74.0741%" y="213" width="0.0736%" height="15" fill="rgb(207,175,33)" fg:x="3020" fg:w="3"/><text x="74.3241%" y="223.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.07%)</title><rect x="74.0741%" y="197" width="0.0736%" height="15" fill="rgb(243,129,54)" fg:x="3020" fg:w="3"/><text x="74.3241%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (3 samples, 0.07%)</title><rect x="74.0741%" y="181" width="0.0736%" height="15" fill="rgb(227,119,45)" fg:x="3020" fg:w="3"/><text x="74.3241%" y="191.50"></text></g><g><title>tftp::server::connection::Connection&lt;B,Rng&gt;::recv (1 samples, 0.02%)</title><rect x="74.1477%" y="613" width="0.0245%" height="15" fill="rgb(205,109,36)" fg:x="3023" fg:w="1"/><text x="74.3977%" y="623.50"></text></g><g><title>__entry_text_start (1 samples, 0.02%)</title><rect x="74.1477%" y="597" width="0.0245%" height="15" fill="rgb(205,6,39)" fg:x="3023" fg:w="1"/><text x="74.3977%" y="607.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_blend_epi32 (1 samples, 0.02%)</title><rect x="74.1722%" y="373" width="0.0245%" height="15" fill="rgb(221,32,16)" fg:x="3024" fg:w="1"/><text x="74.4222%" y="383.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (2 samples, 0.05%)</title><rect x="74.1722%" y="405" width="0.0491%" height="15" fill="rgb(228,144,50)" fg:x="3024" fg:w="2"/><text x="74.4222%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (2 samples, 0.05%)</title><rect x="74.1722%" y="389" width="0.0491%" height="15" fill="rgb(229,201,53)" fg:x="3024" fg:w="2"/><text x="74.4222%" y="399.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (1 samples, 0.02%)</title><rect x="74.1967%" y="373" width="0.0245%" height="15" fill="rgb(249,153,27)" fg:x="3025" fg:w="1"/><text x="74.4467%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.02%)</title><rect x="74.2212%" y="373" width="0.0245%" height="15" fill="rgb(227,106,25)" fg:x="3026" fg:w="1"/><text x="74.4712%" y="383.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::authenticate_lengths (4 samples, 0.10%)</title><rect x="74.1722%" y="533" width="0.0981%" height="15" fill="rgb(230,65,29)" fg:x="3024" fg:w="4"/><text x="74.4222%" y="543.50"></text></g><g><title>universal_hash::UniversalHash::update (4 samples, 0.10%)</title><rect x="74.1722%" y="517" width="0.0981%" height="15" fill="rgb(221,57,46)" fg:x="3024" fg:w="4"/><text x="74.4222%" y="527.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (4 samples, 0.10%)</title><rect x="74.1722%" y="501" width="0.0981%" height="15" fill="rgb(229,161,17)" fg:x="3024" fg:w="4"/><text x="74.4222%" y="511.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (4 samples, 0.10%)</title><rect x="74.1722%" y="485" width="0.0981%" height="15" fill="rgb(222,213,11)" fg:x="3024" fg:w="4"/><text x="74.4222%" y="495.50"></text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (4 samples, 0.10%)</title><rect x="74.1722%" y="469" width="0.0981%" height="15" fill="rgb(235,35,13)" fg:x="3024" fg:w="4"/><text x="74.4222%" y="479.50"></text></g><g><title>&lt;poly1305::backend::avx2::State as universal_hash::UhfBackend&gt;::proc_block (4 samples, 0.10%)</title><rect x="74.1722%" y="453" width="0.0981%" height="15" fill="rgb(233,158,34)" fg:x="3024" fg:w="4"/><text x="74.4222%" y="463.50"></text></g><g><title>poly1305::backend::avx2::State::compute_block (4 samples, 0.10%)</title><rect x="74.1722%" y="437" width="0.0981%" height="15" fill="rgb(215,151,48)" fg:x="3024" fg:w="4"/><text x="74.4222%" y="447.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (4 samples, 0.10%)</title><rect x="74.1722%" y="421" width="0.0981%" height="15" fill="rgb(229,84,14)" fg:x="3024" fg:w="4"/><text x="74.4222%" y="431.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (2 samples, 0.05%)</title><rect x="74.2212%" y="405" width="0.0491%" height="15" fill="rgb(229,68,14)" fg:x="3026" fg:w="2"/><text x="74.4712%" y="415.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (2 samples, 0.05%)</title><rect x="74.2212%" y="389" width="0.0491%" height="15" fill="rgb(243,106,26)" fg:x="3026" fg:w="2"/><text x="74.4712%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.02%)</title><rect x="74.2458%" y="373" width="0.0245%" height="15" fill="rgb(206,45,38)" fg:x="3027" fg:w="1"/><text x="74.4958%" y="383.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (1 samples, 0.02%)</title><rect x="74.2703%" y="437" width="0.0245%" height="15" fill="rgb(226,6,15)" fg:x="3028" fg:w="1"/><text x="74.5203%" y="447.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.02%)</title><rect x="74.2948%" y="357" width="0.0245%" height="15" fill="rgb(232,22,54)" fg:x="3029" fg:w="1"/><text x="74.5448%" y="367.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.02%)</title><rect x="74.3194%" y="325" width="0.0245%" height="15" fill="rgb(229,222,32)" fg:x="3030" fg:w="1"/><text x="74.5694%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.02%)</title><rect x="74.3439%" y="325" width="0.0245%" height="15" fill="rgb(228,62,29)" fg:x="3031" fg:w="1"/><text x="74.5939%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (3 samples, 0.07%)</title><rect x="74.3194%" y="341" width="0.0736%" height="15" fill="rgb(251,103,34)" fg:x="3030" fg:w="3"/><text x="74.5694%" y="351.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.02%)</title><rect x="74.3684%" y="325" width="0.0245%" height="15" fill="rgb(233,12,30)" fg:x="3032" fg:w="1"/><text x="74.6184%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.02%)</title><rect x="74.3929%" y="341" width="0.0245%" height="15" fill="rgb(238,52,0)" fg:x="3033" fg:w="1"/><text x="74.6429%" y="351.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.02%)</title><rect x="74.3929%" y="325" width="0.0245%" height="15" fill="rgb(223,98,5)" fg:x="3033" fg:w="1"/><text x="74.6429%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (2 samples, 0.05%)</title><rect x="74.4175%" y="341" width="0.0491%" height="15" fill="rgb(228,75,37)" fg:x="3034" fg:w="2"/><text x="74.6675%" y="351.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="74.4665%" y="341" width="0.0245%" height="15" fill="rgb(205,115,49)" fg:x="3036" fg:w="1"/><text x="74.7165%" y="351.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (2 samples, 0.05%)</title><rect x="74.4910%" y="341" width="0.0491%" height="15" fill="rgb(250,154,43)" fg:x="3037" fg:w="2"/><text x="74.7410%" y="351.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (10 samples, 0.25%)</title><rect x="74.3194%" y="357" width="0.2453%" height="15" fill="rgb(226,43,29)" fg:x="3030" fg:w="10"/><text x="74.5694%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.02%)</title><rect x="74.5401%" y="341" width="0.0245%" height="15" fill="rgb(249,228,39)" fg:x="3039" fg:w="1"/><text x="74.7901%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.02%)</title><rect x="74.5646%" y="341" width="0.0245%" height="15" fill="rgb(216,79,43)" fg:x="3040" fg:w="1"/><text x="74.8146%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.02%)</title><rect x="74.5892%" y="325" width="0.0245%" height="15" fill="rgb(228,95,12)" fg:x="3041" fg:w="1"/><text x="74.8392%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.02%)</title><rect x="74.6137%" y="325" width="0.0245%" height="15" fill="rgb(249,221,15)" fg:x="3042" fg:w="1"/><text x="74.8637%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (2 samples, 0.05%)</title><rect x="74.6382%" y="325" width="0.0491%" height="15" fill="rgb(233,34,13)" fg:x="3043" fg:w="2"/><text x="74.8882%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (5 samples, 0.12%)</title><rect x="74.5892%" y="341" width="0.1226%" height="15" fill="rgb(214,103,39)" fg:x="3041" fg:w="5"/><text x="74.8392%" y="351.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.02%)</title><rect x="74.6873%" y="325" width="0.0245%" height="15" fill="rgb(251,126,39)" fg:x="3045" fg:w="1"/><text x="74.9373%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.02%)</title><rect x="74.7118%" y="341" width="0.0245%" height="15" fill="rgb(214,216,36)" fg:x="3046" fg:w="1"/><text x="74.9618%" y="351.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.02%)</title><rect x="74.7363%" y="341" width="0.0245%" height="15" fill="rgb(220,221,8)" fg:x="3047" fg:w="1"/><text x="74.9863%" y="351.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (10 samples, 0.25%)</title><rect x="74.5646%" y="357" width="0.2453%" height="15" fill="rgb(240,216,3)" fg:x="3040" fg:w="10"/><text x="74.8146%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (2 samples, 0.05%)</title><rect x="74.7609%" y="341" width="0.0491%" height="15" fill="rgb(232,218,17)" fg:x="3048" fg:w="2"/><text x="75.0109%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.02%)</title><rect x="74.8099%" y="357" width="0.0245%" height="15" fill="rgb(229,163,45)" fg:x="3050" fg:w="1"/><text x="75.0599%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.02%)</title><rect x="74.8344%" y="357" width="0.0245%" height="15" fill="rgb(231,110,42)" fg:x="3051" fg:w="1"/><text x="75.0844%" y="367.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.02%)</title><rect x="74.8344%" y="341" width="0.0245%" height="15" fill="rgb(208,170,48)" fg:x="3051" fg:w="1"/><text x="75.0844%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.02%)</title><rect x="74.8590%" y="357" width="0.0245%" height="15" fill="rgb(239,116,25)" fg:x="3052" fg:w="1"/><text x="75.1090%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="74.8835%" y="357" width="0.0245%" height="15" fill="rgb(219,200,50)" fg:x="3053" fg:w="1"/><text x="75.1335%" y="367.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_par_ks_blocks (26 samples, 0.64%)</title><rect x="74.2948%" y="405" width="0.6377%" height="15" fill="rgb(245,200,0)" fg:x="3029" fg:w="26"/><text x="74.5448%" y="415.50"></text></g><g><title>chacha20::backends::avx2::rounds (26 samples, 0.64%)</title><rect x="74.2948%" y="389" width="0.6377%" height="15" fill="rgb(245,119,33)" fg:x="3029" fg:w="26"/><text x="74.5448%" y="399.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (26 samples, 0.64%)</title><rect x="74.2948%" y="373" width="0.6377%" height="15" fill="rgb(231,125,12)" fg:x="3029" fg:w="26"/><text x="74.5448%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.02%)</title><rect x="74.9080%" y="357" width="0.0245%" height="15" fill="rgb(216,96,41)" fg:x="3054" fg:w="1"/><text x="75.1580%" y="367.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.02%)</title><rect x="74.9325%" y="309" width="0.0245%" height="15" fill="rgb(248,43,45)" fg:x="3055" fg:w="1"/><text x="75.1825%" y="319.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (2 samples, 0.05%)</title><rect x="74.9325%" y="341" width="0.0491%" height="15" fill="rgb(217,222,7)" fg:x="3055" fg:w="2"/><text x="75.1825%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (2 samples, 0.05%)</title><rect x="74.9325%" y="325" width="0.0491%" height="15" fill="rgb(233,28,6)" fg:x="3055" fg:w="2"/><text x="75.1825%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.02%)</title><rect x="74.9571%" y="309" width="0.0245%" height="15" fill="rgb(231,218,15)" fg:x="3056" fg:w="1"/><text x="75.2071%" y="319.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="74.9571%" y="293" width="0.0245%" height="15" fill="rgb(226,171,48)" fg:x="3056" fg:w="1"/><text x="75.2071%" y="303.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="74.9571%" y="277" width="0.0245%" height="15" fill="rgb(235,201,9)" fg:x="3056" fg:w="1"/><text x="75.2071%" y="287.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="74.9571%" y="261" width="0.0245%" height="15" fill="rgb(217,80,15)" fg:x="3056" fg:w="1"/><text x="75.2071%" y="271.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="74.9571%" y="245" width="0.0245%" height="15" fill="rgb(219,152,8)" fg:x="3056" fg:w="1"/><text x="75.2071%" y="255.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="74.9571%" y="229" width="0.0245%" height="15" fill="rgb(243,107,38)" fg:x="3056" fg:w="1"/><text x="75.2071%" y="239.50"></text></g><g><title>tick_sched_timer (1 samples, 0.02%)</title><rect x="74.9571%" y="213" width="0.0245%" height="15" fill="rgb(231,17,5)" fg:x="3056" fg:w="1"/><text x="75.2071%" y="223.50"></text></g><g><title>tick_sched_handle (1 samples, 0.02%)</title><rect x="74.9571%" y="197" width="0.0245%" height="15" fill="rgb(209,25,54)" fg:x="3056" fg:w="1"/><text x="75.2071%" y="207.50"></text></g><g><title>update_process_times (1 samples, 0.02%)</title><rect x="74.9571%" y="181" width="0.0245%" height="15" fill="rgb(219,0,2)" fg:x="3056" fg:w="1"/><text x="75.2071%" y="191.50"></text></g><g><title>scheduler_tick (1 samples, 0.02%)</title><rect x="74.9571%" y="165" width="0.0245%" height="15" fill="rgb(246,9,5)" fg:x="3056" fg:w="1"/><text x="75.2071%" y="175.50"></text></g><g><title>task_tick_fair (1 samples, 0.02%)</title><rect x="74.9571%" y="149" width="0.0245%" height="15" fill="rgb(226,159,4)" fg:x="3056" fg:w="1"/><text x="75.2071%" y="159.50"></text></g><g><title>update_load_avg (1 samples, 0.02%)</title><rect x="74.9571%" y="133" width="0.0245%" height="15" fill="rgb(219,175,34)" fg:x="3056" fg:w="1"/><text x="75.2071%" y="143.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.02%)</title><rect x="74.9571%" y="117" width="0.0245%" height="15" fill="rgb(236,10,46)" fg:x="3056" fg:w="1"/><text x="75.2071%" y="127.50"></text></g><g><title>cipher::stream_core::StreamBackend::gen_tail_blocks (3 samples, 0.07%)</title><rect x="74.9325%" y="405" width="0.0736%" height="15" fill="rgb(240,211,16)" fg:x="3055" fg:w="3"/><text x="75.1825%" y="415.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (3 samples, 0.07%)</title><rect x="74.9325%" y="389" width="0.0736%" height="15" fill="rgb(205,3,43)" fg:x="3055" fg:w="3"/><text x="75.1825%" y="399.50"></text></g><g><title>chacha20::backends::avx2::rounds (3 samples, 0.07%)</title><rect x="74.9325%" y="373" width="0.0736%" height="15" fill="rgb(245,7,22)" fg:x="3055" fg:w="3"/><text x="75.1825%" y="383.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (3 samples, 0.07%)</title><rect x="74.9325%" y="357" width="0.0736%" height="15" fill="rgb(239,132,32)" fg:x="3055" fg:w="3"/><text x="75.1825%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="74.9816%" y="341" width="0.0245%" height="15" fill="rgb(228,202,34)" fg:x="3057" fg:w="1"/><text x="75.2316%" y="351.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.05%)</title><rect x="75.1288%" y="149" width="0.0491%" height="15" fill="rgb(254,200,22)" fg:x="3063" fg:w="2"/><text x="75.3788%" y="159.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (13 samples, 0.32%)</title><rect x="75.0061%" y="405" width="0.3189%" height="15" fill="rgb(219,10,39)" fg:x="3058" fg:w="13"/><text x="75.2561%" y="415.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (13 samples, 0.32%)</title><rect x="75.0061%" y="389" width="0.3189%" height="15" fill="rgb(226,210,39)" fg:x="3058" fg:w="13"/><text x="75.2561%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (13 samples, 0.32%)</title><rect x="75.0061%" y="373" width="0.3189%" height="15" fill="rgb(208,219,16)" fg:x="3058" fg:w="13"/><text x="75.2561%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (13 samples, 0.32%)</title><rect x="75.0061%" y="357" width="0.3189%" height="15" fill="rgb(216,158,51)" fg:x="3058" fg:w="13"/><text x="75.2561%" y="367.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (13 samples, 0.32%)</title><rect x="75.0061%" y="341" width="0.3189%" height="15" fill="rgb(233,14,44)" fg:x="3058" fg:w="13"/><text x="75.2561%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (13 samples, 0.32%)</title><rect x="75.0061%" y="325" width="0.3189%" height="15" fill="rgb(237,97,39)" fg:x="3058" fg:w="13"/><text x="75.2561%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (13 samples, 0.32%)</title><rect x="75.0061%" y="309" width="0.3189%" height="15" fill="rgb(218,198,43)" fg:x="3058" fg:w="13"/><text x="75.2561%" y="319.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (13 samples, 0.32%)</title><rect x="75.0061%" y="293" width="0.3189%" height="15" fill="rgb(231,104,20)" fg:x="3058" fg:w="13"/><text x="75.2561%" y="303.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (13 samples, 0.32%)</title><rect x="75.0061%" y="277" width="0.3189%" height="15" fill="rgb(254,36,13)" fg:x="3058" fg:w="13"/><text x="75.2561%" y="287.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (13 samples, 0.32%)</title><rect x="75.0061%" y="261" width="0.3189%" height="15" fill="rgb(248,14,50)" fg:x="3058" fg:w="13"/><text x="75.2561%" y="271.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (13 samples, 0.32%)</title><rect x="75.0061%" y="245" width="0.3189%" height="15" fill="rgb(217,107,29)" fg:x="3058" fg:w="13"/><text x="75.2561%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (13 samples, 0.32%)</title><rect x="75.0061%" y="229" width="0.3189%" height="15" fill="rgb(251,169,33)" fg:x="3058" fg:w="13"/><text x="75.2561%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (13 samples, 0.32%)</title><rect x="75.0061%" y="213" width="0.3189%" height="15" fill="rgb(217,108,32)" fg:x="3058" fg:w="13"/><text x="75.2561%" y="223.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (13 samples, 0.32%)</title><rect x="75.0061%" y="197" width="0.3189%" height="15" fill="rgb(219,66,42)" fg:x="3058" fg:w="13"/><text x="75.2561%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (11 samples, 0.27%)</title><rect x="75.0552%" y="181" width="0.2698%" height="15" fill="rgb(206,180,7)" fg:x="3060" fg:w="11"/><text x="75.3052%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (9 samples, 0.22%)</title><rect x="75.1042%" y="165" width="0.2208%" height="15" fill="rgb(208,226,31)" fg:x="3062" fg:w="9"/><text x="75.3542%" y="175.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (6 samples, 0.15%)</title><rect x="75.1778%" y="149" width="0.1472%" height="15" fill="rgb(218,26,49)" fg:x="3065" fg:w="6"/><text x="75.4278%" y="159.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.05%)</title><rect x="75.3986%" y="389" width="0.0491%" height="15" fill="rgb(233,197,48)" fg:x="3074" fg:w="2"/><text x="75.6486%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (7 samples, 0.17%)</title><rect x="75.4476%" y="213" width="0.1717%" height="15" fill="rgb(252,181,51)" fg:x="3076" fg:w="7"/><text x="75.6976%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.17%)</title><rect x="75.4476%" y="197" width="0.1717%" height="15" fill="rgb(253,90,19)" fg:x="3076" fg:w="7"/><text x="75.6976%" y="207.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.17%)</title><rect x="75.4476%" y="181" width="0.1717%" height="15" fill="rgb(215,171,30)" fg:x="3076" fg:w="7"/><text x="75.6976%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (4 samples, 0.10%)</title><rect x="75.5212%" y="165" width="0.0981%" height="15" fill="rgb(214,222,9)" fg:x="3079" fg:w="4"/><text x="75.7712%" y="175.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (3 samples, 0.07%)</title><rect x="75.5457%" y="149" width="0.0736%" height="15" fill="rgb(223,3,22)" fg:x="3080" fg:w="3"/><text x="75.7957%" y="159.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (2 samples, 0.05%)</title><rect x="75.5703%" y="133" width="0.0491%" height="15" fill="rgb(225,196,46)" fg:x="3081" fg:w="2"/><text x="75.8203%" y="143.50"></text></g><g><title>chacha20::backends::avx2::inner (55 samples, 1.35%)</title><rect x="74.2948%" y="437" width="1.3490%" height="15" fill="rgb(209,110,37)" fg:x="3029" fg:w="55"/><text x="74.5448%" y="447.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (55 samples, 1.35%)</title><rect x="74.2948%" y="421" width="1.3490%" height="15" fill="rgb(249,89,12)" fg:x="3029" fg:w="55"/><text x="74.5448%" y="431.50"></text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;generic_array::GenericArray&lt;u8,N&gt;,M&gt;&gt;::xor_in2out (13 samples, 0.32%)</title><rect x="75.3250%" y="405" width="0.3189%" height="15" fill="rgb(226,27,33)" fg:x="3071" fg:w="13"/><text x="75.5750%" y="415.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (8 samples, 0.20%)</title><rect x="75.4476%" y="389" width="0.1962%" height="15" fill="rgb(213,82,22)" fg:x="3076" fg:w="8"/><text x="75.6976%" y="399.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (8 samples, 0.20%)</title><rect x="75.4476%" y="373" width="0.1962%" height="15" fill="rgb(248,140,0)" fg:x="3076" fg:w="8"/><text x="75.6976%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (8 samples, 0.20%)</title><rect x="75.4476%" y="357" width="0.1962%" height="15" fill="rgb(228,106,3)" fg:x="3076" fg:w="8"/><text x="75.6976%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.20%)</title><rect x="75.4476%" y="341" width="0.1962%" height="15" fill="rgb(209,23,37)" fg:x="3076" fg:w="8"/><text x="75.6976%" y="351.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.20%)</title><rect x="75.4476%" y="325" width="0.1962%" height="15" fill="rgb(241,93,50)" fg:x="3076" fg:w="8"/><text x="75.6976%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (8 samples, 0.20%)</title><rect x="75.4476%" y="309" width="0.1962%" height="15" fill="rgb(253,46,43)" fg:x="3076" fg:w="8"/><text x="75.6976%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (8 samples, 0.20%)</title><rect x="75.4476%" y="293" width="0.1962%" height="15" fill="rgb(226,206,43)" fg:x="3076" fg:w="8"/><text x="75.6976%" y="303.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (8 samples, 0.20%)</title><rect x="75.4476%" y="277" width="0.1962%" height="15" fill="rgb(217,54,7)" fg:x="3076" fg:w="8"/><text x="75.6976%" y="287.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (8 samples, 0.20%)</title><rect x="75.4476%" y="261" width="0.1962%" height="15" fill="rgb(223,5,52)" fg:x="3076" fg:w="8"/><text x="75.6976%" y="271.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (8 samples, 0.20%)</title><rect x="75.4476%" y="245" width="0.1962%" height="15" fill="rgb(206,52,46)" fg:x="3076" fg:w="8"/><text x="75.6976%" y="255.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (8 samples, 0.20%)</title><rect x="75.4476%" y="229" width="0.1962%" height="15" fill="rgb(253,136,11)" fg:x="3076" fg:w="8"/><text x="75.6976%" y="239.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (1 samples, 0.02%)</title><rect x="75.6193%" y="213" width="0.0245%" height="15" fill="rgb(208,106,33)" fg:x="3083" fg:w="1"/><text x="75.8693%" y="223.50"></text></g><g><title>_init (1 samples, 0.02%)</title><rect x="75.6193%" y="197" width="0.0245%" height="15" fill="rgb(206,54,4)" fg:x="3083" fg:w="1"/><text x="75.8693%" y="207.50"></text></g><g><title>chacha20::backends::avx2::rounds (1 samples, 0.02%)</title><rect x="75.6439%" y="437" width="0.0245%" height="15" fill="rgb(213,3,15)" fg:x="3084" fg:w="1"/><text x="75.8939%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.02%)</title><rect x="75.6684%" y="437" width="0.0245%" height="15" fill="rgb(252,211,39)" fg:x="3085" fg:w="1"/><text x="75.9184%" y="447.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (1 samples, 0.02%)</title><rect x="75.6929%" y="437" width="0.0245%" height="15" fill="rgb(223,6,36)" fg:x="3086" fg:w="1"/><text x="75.9429%" y="447.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (61 samples, 1.50%)</title><rect x="74.2703%" y="533" width="1.4962%" height="15" fill="rgb(252,169,45)" fg:x="3028" fg:w="61"/><text x="74.5203%" y="543.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (61 samples, 1.50%)</title><rect x="74.2703%" y="517" width="1.4962%" height="15" fill="rgb(212,48,26)" fg:x="3028" fg:w="61"/><text x="74.5203%" y="527.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (61 samples, 1.50%)</title><rect x="74.2703%" y="501" width="1.4962%" height="15" fill="rgb(251,102,48)" fg:x="3028" fg:w="61"/><text x="74.5203%" y="511.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (61 samples, 1.50%)</title><rect x="74.2703%" y="485" width="1.4962%" height="15" fill="rgb(243,208,16)" fg:x="3028" fg:w="61"/><text x="74.5203%" y="495.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (61 samples, 1.50%)</title><rect x="74.2703%" y="469" width="1.4962%" height="15" fill="rgb(219,96,24)" fg:x="3028" fg:w="61"/><text x="74.5203%" y="479.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (61 samples, 1.50%)</title><rect x="74.2703%" y="453" width="1.4962%" height="15" fill="rgb(219,33,29)" fg:x="3028" fg:w="61"/><text x="74.5203%" y="463.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.05%)</title><rect x="75.7174%" y="437" width="0.0491%" height="15" fill="rgb(223,176,5)" fg:x="3087" fg:w="2"/><text x="75.9674%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.02%)</title><rect x="75.9382%" y="373" width="0.0245%" height="15" fill="rgb(228,140,14)" fg:x="3096" fg:w="1"/><text x="76.1882%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.02%)</title><rect x="75.9627%" y="373" width="0.0245%" height="15" fill="rgb(217,179,31)" fg:x="3097" fg:w="1"/><text x="76.2127%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.02%)</title><rect x="75.9627%" y="357" width="0.0245%" height="15" fill="rgb(230,9,30)" fg:x="3097" fg:w="1"/><text x="76.2127%" y="367.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.02%)</title><rect x="75.9627%" y="341" width="0.0245%" height="15" fill="rgb(230,136,20)" fg:x="3097" fg:w="1"/><text x="76.2127%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (11 samples, 0.27%)</title><rect x="75.7665%" y="389" width="0.2698%" height="15" fill="rgb(215,210,22)" fg:x="3089" fg:w="11"/><text x="76.0165%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.05%)</title><rect x="75.9872%" y="373" width="0.0491%" height="15" fill="rgb(218,43,5)" fg:x="3098" fg:w="2"/><text x="76.2372%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.02%)</title><rect x="76.0363%" y="373" width="0.0245%" height="15" fill="rgb(216,11,5)" fg:x="3100" fg:w="1"/><text x="76.2863%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.02%)</title><rect x="76.0608%" y="373" width="0.0245%" height="15" fill="rgb(209,82,29)" fg:x="3101" fg:w="1"/><text x="76.3108%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (2 samples, 0.05%)</title><rect x="76.0854%" y="373" width="0.0491%" height="15" fill="rgb(244,115,12)" fg:x="3102" fg:w="2"/><text x="76.3354%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (2 samples, 0.05%)</title><rect x="76.0854%" y="357" width="0.0491%" height="15" fill="rgb(222,82,18)" fg:x="3102" fg:w="2"/><text x="76.3354%" y="367.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (2 samples, 0.05%)</title><rect x="76.0854%" y="341" width="0.0491%" height="15" fill="rgb(249,227,8)" fg:x="3102" fg:w="2"/><text x="76.3354%" y="351.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.02%)</title><rect x="76.1344%" y="373" width="0.0245%" height="15" fill="rgb(253,141,45)" fg:x="3104" fg:w="1"/><text x="76.3844%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (6 samples, 0.15%)</title><rect x="76.0363%" y="389" width="0.1472%" height="15" fill="rgb(234,184,4)" fg:x="3100" fg:w="6"/><text x="76.2863%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="76.1589%" y="373" width="0.0245%" height="15" fill="rgb(218,194,23)" fg:x="3105" fg:w="1"/><text x="76.4089%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (1 samples, 0.02%)</title><rect x="76.1835%" y="389" width="0.0245%" height="15" fill="rgb(235,66,41)" fg:x="3106" fg:w="1"/><text x="76.4335%" y="399.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (4 samples, 0.10%)</title><rect x="76.2080%" y="389" width="0.0981%" height="15" fill="rgb(245,217,1)" fg:x="3107" fg:w="4"/><text x="76.4580%" y="399.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (3 samples, 0.07%)</title><rect x="76.2325%" y="373" width="0.0736%" height="15" fill="rgb(229,91,1)" fg:x="3108" fg:w="3"/><text x="76.4825%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (3 samples, 0.07%)</title><rect x="76.2325%" y="357" width="0.0736%" height="15" fill="rgb(207,101,30)" fg:x="3108" fg:w="3"/><text x="76.4825%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="76.3061%" y="389" width="0.0245%" height="15" fill="rgb(223,82,49)" fg:x="3111" fg:w="1"/><text x="76.5561%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (2 samples, 0.05%)</title><rect x="76.3306%" y="389" width="0.0491%" height="15" fill="rgb(218,167,17)" fg:x="3112" fg:w="2"/><text x="76.5806%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (4 samples, 0.10%)</title><rect x="76.3797%" y="389" width="0.0981%" height="15" fill="rgb(208,103,14)" fg:x="3114" fg:w="4"/><text x="76.6297%" y="399.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (1 samples, 0.02%)</title><rect x="76.4778%" y="389" width="0.0245%" height="15" fill="rgb(238,20,8)" fg:x="3118" fg:w="1"/><text x="76.7278%" y="399.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (1 samples, 0.02%)</title><rect x="76.4778%" y="373" width="0.0245%" height="15" fill="rgb(218,80,54)" fg:x="3118" fg:w="1"/><text x="76.7278%" y="383.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (31 samples, 0.76%)</title><rect x="75.7665%" y="405" width="0.7604%" height="15" fill="rgb(240,144,17)" fg:x="3089" fg:w="31"/><text x="76.0165%" y="415.50"></text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_loaded_blocks (1 samples, 0.02%)</title><rect x="76.5023%" y="389" width="0.0245%" height="15" fill="rgb(245,27,50)" fg:x="3119" fg:w="1"/><text x="76.7523%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.02%)</title><rect x="76.5269%" y="389" width="0.0245%" height="15" fill="rgb(251,51,7)" fg:x="3120" fg:w="1"/><text x="76.7769%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_blend_epi32 (1 samples, 0.02%)</title><rect x="76.5514%" y="389" width="0.0245%" height="15" fill="rgb(245,217,29)" fg:x="3121" fg:w="1"/><text x="76.8014%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (1 samples, 0.02%)</title><rect x="76.5514%" y="373" width="0.0245%" height="15" fill="rgb(221,176,29)" fg:x="3121" fg:w="1"/><text x="76.8014%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (1 samples, 0.02%)</title><rect x="76.5759%" y="389" width="0.0245%" height="15" fill="rgb(212,180,24)" fg:x="3122" fg:w="1"/><text x="76.8259%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.02%)</title><rect x="76.6004%" y="389" width="0.0245%" height="15" fill="rgb(254,24,2)" fg:x="3123" fg:w="1"/><text x="76.8504%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (2 samples, 0.05%)</title><rect x="76.6250%" y="373" width="0.0491%" height="15" fill="rgb(230,100,2)" fg:x="3124" fg:w="2"/><text x="76.8750%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="76.6495%" y="357" width="0.0245%" height="15" fill="rgb(219,142,25)" fg:x="3125" fg:w="1"/><text x="76.8995%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.02%)</title><rect x="76.6740%" y="357" width="0.0245%" height="15" fill="rgb(240,73,43)" fg:x="3126" fg:w="1"/><text x="76.9240%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (2 samples, 0.05%)</title><rect x="76.6740%" y="373" width="0.0491%" height="15" fill="rgb(214,114,15)" fg:x="3126" fg:w="2"/><text x="76.9240%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (1 samples, 0.02%)</title><rect x="76.6986%" y="357" width="0.0245%" height="15" fill="rgb(207,130,4)" fg:x="3127" fg:w="1"/><text x="76.9486%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (10 samples, 0.25%)</title><rect x="76.7231%" y="373" width="0.2453%" height="15" fill="rgb(221,25,40)" fg:x="3128" fg:w="10"/><text x="76.9731%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.02%)</title><rect x="76.9438%" y="357" width="0.0245%" height="15" fill="rgb(241,184,7)" fg:x="3137" fg:w="1"/><text x="77.1938%" y="367.50"></text></g><g><title>core::core_arch::simd::u64x4::splat (1 samples, 0.02%)</title><rect x="76.9684%" y="357" width="0.0245%" height="15" fill="rgb(235,159,4)" fg:x="3138" fg:w="1"/><text x="77.2184%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.02%)</title><rect x="76.9929%" y="357" width="0.0245%" height="15" fill="rgb(214,87,48)" fg:x="3139" fg:w="1"/><text x="77.2429%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (3 samples, 0.07%)</title><rect x="76.9684%" y="373" width="0.0736%" height="15" fill="rgb(246,198,24)" fg:x="3138" fg:w="3"/><text x="77.2184%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.02%)</title><rect x="77.0174%" y="357" width="0.0245%" height="15" fill="rgb(209,66,40)" fg:x="3140" fg:w="1"/><text x="77.2674%" y="367.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi64x (1 samples, 0.02%)</title><rect x="77.0419%" y="373" width="0.0245%" height="15" fill="rgb(233,147,39)" fg:x="3141" fg:w="1"/><text x="77.2919%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.02%)</title><rect x="77.0665%" y="373" width="0.0245%" height="15" fill="rgb(231,145,52)" fg:x="3142" fg:w="1"/><text x="77.3165%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.02%)</title><rect x="77.0665%" y="357" width="0.0245%" height="15" fill="rgb(206,20,26)" fg:x="3142" fg:w="1"/><text x="77.3165%" y="367.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.02%)</title><rect x="77.0665%" y="341" width="0.0245%" height="15" fill="rgb(238,220,4)" fg:x="3142" fg:w="1"/><text x="77.3165%" y="351.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.02%)</title><rect x="77.0910%" y="373" width="0.0245%" height="15" fill="rgb(252,195,42)" fg:x="3143" fg:w="1"/><text x="77.3410%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (3 samples, 0.07%)</title><rect x="77.1155%" y="373" width="0.0736%" height="15" fill="rgb(209,10,6)" fg:x="3144" fg:w="3"/><text x="77.3655%" y="383.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::encrypt_in_place_detached (124 samples, 3.04%)</title><rect x="74.1722%" y="549" width="3.0415%" height="15" fill="rgb(229,3,52)" fg:x="3024" fg:w="124"/><text x="74.4222%" y="559.50">cha..</text></g><g><title>universal_hash::UniversalHash::update_padded (59 samples, 1.45%)</title><rect x="75.7665%" y="533" width="1.4471%" height="15" fill="rgb(253,49,37)" fg:x="3089" fg:w="59"/><text x="76.0165%" y="543.50"></text></g><g><title>universal_hash::UniversalHash::update (59 samples, 1.45%)</title><rect x="75.7665%" y="517" width="1.4471%" height="15" fill="rgb(240,103,49)" fg:x="3089" fg:w="59"/><text x="76.0165%" y="527.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (59 samples, 1.45%)</title><rect x="75.7665%" y="501" width="1.4471%" height="15" fill="rgb(250,182,30)" fg:x="3089" fg:w="59"/><text x="76.0165%" y="511.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (59 samples, 1.45%)</title><rect x="75.7665%" y="485" width="1.4471%" height="15" fill="rgb(248,8,30)" fg:x="3089" fg:w="59"/><text x="76.0165%" y="495.50"></text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (59 samples, 1.45%)</title><rect x="75.7665%" y="469" width="1.4471%" height="15" fill="rgb(237,120,30)" fg:x="3089" fg:w="59"/><text x="76.0165%" y="479.50"></text></g><g><title>&lt;poly1305::backend::avx2::State as universal_hash::UhfBackend&gt;::proc_par_blocks (59 samples, 1.45%)</title><rect x="75.7665%" y="453" width="1.4471%" height="15" fill="rgb(221,146,34)" fg:x="3089" fg:w="59"/><text x="76.0165%" y="463.50"></text></g><g><title>poly1305::backend::avx2::State::compute_par_blocks (59 samples, 1.45%)</title><rect x="75.7665%" y="437" width="1.4471%" height="15" fill="rgb(242,55,13)" fg:x="3089" fg:w="59"/><text x="76.0165%" y="447.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (59 samples, 1.45%)</title><rect x="75.7665%" y="421" width="1.4471%" height="15" fill="rgb(242,112,31)" fg:x="3089" fg:w="59"/><text x="76.0165%" y="431.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (28 samples, 0.69%)</title><rect x="76.5269%" y="405" width="0.6868%" height="15" fill="rgb(249,192,27)" fg:x="3120" fg:w="28"/><text x="76.7769%" y="415.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (24 samples, 0.59%)</title><rect x="76.6250%" y="389" width="0.5887%" height="15" fill="rgb(208,204,44)" fg:x="3124" fg:w="24"/><text x="76.8750%" y="399.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (1 samples, 0.02%)</title><rect x="77.1891%" y="373" width="0.0245%" height="15" fill="rgb(208,93,54)" fg:x="3147" fg:w="1"/><text x="77.4391%" y="383.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (1 samples, 0.02%)</title><rect x="77.1891%" y="357" width="0.0245%" height="15" fill="rgb(242,1,31)" fg:x="3147" fg:w="1"/><text x="77.4391%" y="367.50"></text></g><g><title>&lt;poly1305::Poly1305 as crypto_common::KeyInit&gt;::new (1 samples, 0.02%)</title><rect x="77.2136%" y="533" width="0.0245%" height="15" fill="rgb(241,83,25)" fg:x="3148" fg:w="1"/><text x="77.4636%" y="543.50"></text></g><g><title>poly1305::backend::autodetect::State::new (1 samples, 0.02%)</title><rect x="77.2136%" y="517" width="0.0245%" height="15" fill="rgb(205,169,50)" fg:x="3148" fg:w="1"/><text x="77.4636%" y="527.50"></text></g><g><title>poly1305::backend::avx2::State::new (1 samples, 0.02%)</title><rect x="77.2136%" y="501" width="0.0245%" height="15" fill="rgb(239,186,37)" fg:x="3148" fg:w="1"/><text x="77.4636%" y="511.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier as core::ops::arith::Mul&gt;::mul (1 samples, 0.02%)</title><rect x="77.2136%" y="485" width="0.0245%" height="15" fill="rgb(205,221,10)" fg:x="3148" fg:w="1"/><text x="77.4636%" y="495.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (1 samples, 0.02%)</title><rect x="77.2136%" y="469" width="0.0245%" height="15" fill="rgb(218,196,15)" fg:x="3148" fg:w="1"/><text x="77.4636%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.02%)</title><rect x="77.2136%" y="453" width="0.0245%" height="15" fill="rgb(218,196,35)" fg:x="3148" fg:w="1"/><text x="77.4636%" y="463.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.02%)</title><rect x="77.2136%" y="437" width="0.0245%" height="15" fill="rgb(233,63,24)" fg:x="3148" fg:w="1"/><text x="77.4636%" y="447.50"></text></g><g><title>tftp::server::connection::Connection&lt;B,Rng&gt;::send_bytes (126 samples, 3.09%)</title><rect x="74.1722%" y="613" width="3.0905%" height="15" fill="rgb(225,8,4)" fg:x="3024" fg:w="126"/><text x="74.4222%" y="623.50">tft..</text></g><g><title>tftp::encrypted_packet::EncryptedPacket::encrypt (126 samples, 3.09%)</title><rect x="74.1722%" y="597" width="3.0905%" height="15" fill="rgb(234,105,35)" fg:x="3024" fg:w="126"/><text x="74.4222%" y="607.50">tft..</text></g><g><title>tftp::encryption::Encryptor&lt;R&gt;::encrypt (126 samples, 3.09%)</title><rect x="74.1722%" y="581" width="3.0905%" height="15" fill="rgb(236,21,32)" fg:x="3024" fg:w="126"/><text x="74.4222%" y="591.50">tft..</text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::encrypt_in_place_detached (126 samples, 3.09%)</title><rect x="74.1722%" y="565" width="3.0905%" height="15" fill="rgb(228,109,6)" fg:x="3024" fg:w="126"/><text x="74.4222%" y="575.50">&lt;ch..</text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (2 samples, 0.05%)</title><rect x="77.2136%" y="549" width="0.0491%" height="15" fill="rgb(229,215,31)" fg:x="3148" fg:w="2"/><text x="77.4636%" y="559.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (1 samples, 0.02%)</title><rect x="77.2382%" y="533" width="0.0245%" height="15" fill="rgb(221,52,54)" fg:x="3149" fg:w="1"/><text x="77.4882%" y="543.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (1 samples, 0.02%)</title><rect x="77.2382%" y="517" width="0.0245%" height="15" fill="rgb(252,129,43)" fg:x="3149" fg:w="1"/><text x="77.4882%" y="527.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (1 samples, 0.02%)</title><rect x="77.2382%" y="501" width="0.0245%" height="15" fill="rgb(248,183,27)" fg:x="3149" fg:w="1"/><text x="77.4882%" y="511.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (1 samples, 0.02%)</title><rect x="77.2382%" y="485" width="0.0245%" height="15" fill="rgb(250,0,22)" fg:x="3149" fg:w="1"/><text x="77.4882%" y="495.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (1 samples, 0.02%)</title><rect x="77.2382%" y="469" width="0.0245%" height="15" fill="rgb(213,166,10)" fg:x="3149" fg:w="1"/><text x="77.4882%" y="479.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (1 samples, 0.02%)</title><rect x="77.2382%" y="453" width="0.0245%" height="15" fill="rgb(207,163,36)" fg:x="3149" fg:w="1"/><text x="77.4882%" y="463.50"></text></g><g><title>chacha20::backends::avx2::inner (1 samples, 0.02%)</title><rect x="77.2382%" y="437" width="0.0245%" height="15" fill="rgb(208,122,22)" fg:x="3149" fg:w="1"/><text x="77.4882%" y="447.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (1 samples, 0.02%)</title><rect x="77.2382%" y="421" width="0.0245%" height="15" fill="rgb(207,104,49)" fg:x="3149" fg:w="1"/><text x="77.4882%" y="431.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.02%)</title><rect x="77.2382%" y="405" width="0.0245%" height="15" fill="rgb(248,211,50)" fg:x="3149" fg:w="1"/><text x="77.4882%" y="415.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.02%)</title><rect x="77.2382%" y="389" width="0.0245%" height="15" fill="rgb(217,13,45)" fg:x="3149" fg:w="1"/><text x="77.4882%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.02%)</title><rect x="77.2382%" y="373" width="0.0245%" height="15" fill="rgb(211,216,49)" fg:x="3149" fg:w="1"/><text x="77.4882%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="77.2382%" y="357" width="0.0245%" height="15" fill="rgb(221,58,53)" fg:x="3149" fg:w="1"/><text x="77.4882%" y="367.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="77.2382%" y="341" width="0.0245%" height="15" fill="rgb(220,112,41)" fg:x="3149" fg:w="1"/><text x="77.4882%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.02%)</title><rect x="77.2382%" y="325" width="0.0245%" height="15" fill="rgb(236,38,28)" fg:x="3149" fg:w="1"/><text x="77.4882%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.02%)</title><rect x="77.2382%" y="309" width="0.0245%" height="15" fill="rgb(227,195,22)" fg:x="3149" fg:w="1"/><text x="77.4882%" y="319.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (1 samples, 0.02%)</title><rect x="77.2382%" y="293" width="0.0245%" height="15" fill="rgb(214,55,33)" fg:x="3149" fg:w="1"/><text x="77.4882%" y="303.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (1 samples, 0.02%)</title><rect x="77.2382%" y="277" width="0.0245%" height="15" fill="rgb(248,80,13)" fg:x="3149" fg:w="1"/><text x="77.4882%" y="287.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.02%)</title><rect x="77.2382%" y="261" width="0.0245%" height="15" fill="rgb(238,52,6)" fg:x="3149" fg:w="1"/><text x="77.4882%" y="271.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.02%)</title><rect x="77.2382%" y="245" width="0.0245%" height="15" fill="rgb(224,198,47)" fg:x="3149" fg:w="1"/><text x="77.4882%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.02%)</title><rect x="77.2382%" y="229" width="0.0245%" height="15" fill="rgb(233,171,20)" fg:x="3149" fg:w="1"/><text x="77.4882%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="77.2382%" y="213" width="0.0245%" height="15" fill="rgb(241,30,25)" fg:x="3149" fg:w="1"/><text x="77.4882%" y="223.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="77.2382%" y="197" width="0.0245%" height="15" fill="rgb(207,171,38)" fg:x="3149" fg:w="1"/><text x="77.4882%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.02%)</title><rect x="77.2382%" y="181" width="0.0245%" height="15" fill="rgb(234,70,1)" fg:x="3149" fg:w="1"/><text x="77.4882%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.02%)</title><rect x="77.2382%" y="165" width="0.0245%" height="15" fill="rgb(232,178,18)" fg:x="3149" fg:w="1"/><text x="77.4882%" y="175.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (1 samples, 0.02%)</title><rect x="77.2382%" y="149" width="0.0245%" height="15" fill="rgb(241,78,40)" fg:x="3149" fg:w="1"/><text x="77.4882%" y="159.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (1 samples, 0.02%)</title><rect x="77.2627%" y="389" width="0.0245%" height="15" fill="rgb(222,35,25)" fg:x="3150" fg:w="1"/><text x="77.5127%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.02%)</title><rect x="77.2627%" y="373" width="0.0245%" height="15" fill="rgb(207,92,16)" fg:x="3150" fg:w="1"/><text x="77.5127%" y="383.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::authenticate_lengths (3 samples, 0.07%)</title><rect x="77.2627%" y="517" width="0.0736%" height="15" fill="rgb(216,59,51)" fg:x="3150" fg:w="3"/><text x="77.5127%" y="527.50"></text></g><g><title>universal_hash::UniversalHash::update (3 samples, 0.07%)</title><rect x="77.2627%" y="501" width="0.0736%" height="15" fill="rgb(213,80,28)" fg:x="3150" fg:w="3"/><text x="77.5127%" y="511.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (3 samples, 0.07%)</title><rect x="77.2627%" y="485" width="0.0736%" height="15" fill="rgb(220,93,7)" fg:x="3150" fg:w="3"/><text x="77.5127%" y="495.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (3 samples, 0.07%)</title><rect x="77.2627%" y="469" width="0.0736%" height="15" fill="rgb(225,24,44)" fg:x="3150" fg:w="3"/><text x="77.5127%" y="479.50"></text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (3 samples, 0.07%)</title><rect x="77.2627%" y="453" width="0.0736%" height="15" fill="rgb(243,74,40)" fg:x="3150" fg:w="3"/><text x="77.5127%" y="463.50"></text></g><g><title>&lt;poly1305::backend::avx2::State as universal_hash::UhfBackend&gt;::proc_block (3 samples, 0.07%)</title><rect x="77.2627%" y="437" width="0.0736%" height="15" fill="rgb(228,39,7)" fg:x="3150" fg:w="3"/><text x="77.5127%" y="447.50"></text></g><g><title>poly1305::backend::avx2::State::compute_block (3 samples, 0.07%)</title><rect x="77.2627%" y="421" width="0.0736%" height="15" fill="rgb(227,79,8)" fg:x="3150" fg:w="3"/><text x="77.5127%" y="431.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (3 samples, 0.07%)</title><rect x="77.2627%" y="405" width="0.0736%" height="15" fill="rgb(236,58,11)" fg:x="3150" fg:w="3"/><text x="77.5127%" y="415.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (2 samples, 0.05%)</title><rect x="77.2872%" y="389" width="0.0491%" height="15" fill="rgb(249,63,35)" fg:x="3151" fg:w="2"/><text x="77.5372%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (2 samples, 0.05%)</title><rect x="77.2872%" y="373" width="0.0491%" height="15" fill="rgb(252,114,16)" fg:x="3151" fg:w="2"/><text x="77.5372%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.02%)</title><rect x="77.3363%" y="373" width="0.0245%" height="15" fill="rgb(254,151,24)" fg:x="3153" fg:w="1"/><text x="77.5863%" y="383.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_par_ks_blocks (3 samples, 0.07%)</title><rect x="77.3363%" y="389" width="0.0736%" height="15" fill="rgb(253,54,39)" fg:x="3153" fg:w="3"/><text x="77.5863%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (2 samples, 0.05%)</title><rect x="77.3608%" y="373" width="0.0491%" height="15" fill="rgb(243,25,45)" fg:x="3154" fg:w="2"/><text x="77.6108%" y="383.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (2 samples, 0.05%)</title><rect x="77.3608%" y="357" width="0.0491%" height="15" fill="rgb(234,134,9)" fg:x="3154" fg:w="2"/><text x="77.6108%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::cast (1 samples, 0.02%)</title><rect x="78.1212%" y="325" width="0.0245%" height="15" fill="rgb(227,166,31)" fg:x="3185" fg:w="1"/><text x="78.3712%" y="335.50"></text></g><g><title>core::slice::raw::from_raw_parts (4 samples, 0.10%)</title><rect x="78.0966%" y="357" width="0.0981%" height="15" fill="rgb(245,143,41)" fg:x="3184" fg:w="4"/><text x="78.3466%" y="367.50"></text></g><g><title>core::ptr::slice_from_raw_parts (3 samples, 0.07%)</title><rect x="78.1212%" y="341" width="0.0736%" height="15" fill="rgb(238,181,32)" fg:x="3185" fg:w="3"/><text x="78.3712%" y="351.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (2 samples, 0.05%)</title><rect x="78.1457%" y="325" width="0.0491%" height="15" fill="rgb(224,113,18)" fg:x="3186" fg:w="2"/><text x="78.3957%" y="335.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::Deref&gt;::deref (12 samples, 0.29%)</title><rect x="77.9249%" y="373" width="0.2943%" height="15" fill="rgb(240,229,28)" fg:x="3177" fg:w="12"/><text x="78.1749%" y="383.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (1 samples, 0.02%)</title><rect x="78.1948%" y="357" width="0.0245%" height="15" fill="rgb(250,185,3)" fg:x="3188" fg:w="1"/><text x="78.4448%" y="367.50"></text></g><g><title>core::slice::raw::from_raw_parts (4 samples, 0.10%)</title><rect x="78.3174%" y="357" width="0.0981%" height="15" fill="rgb(212,59,25)" fg:x="3193" fg:w="4"/><text x="78.5674%" y="367.50"></text></g><g><title>core::ptr::slice_from_raw_parts (2 samples, 0.05%)</title><rect x="78.3664%" y="341" width="0.0491%" height="15" fill="rgb(221,87,20)" fg:x="3195" fg:w="2"/><text x="78.6164%" y="351.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (2 samples, 0.05%)</title><rect x="78.3664%" y="325" width="0.0491%" height="15" fill="rgb(213,74,28)" fg:x="3195" fg:w="2"/><text x="78.6164%" y="335.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (9 samples, 0.22%)</title><rect x="78.2193%" y="373" width="0.2208%" height="15" fill="rgb(224,132,34)" fg:x="3189" fg:w="9"/><text x="78.4693%" y="383.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (1 samples, 0.02%)</title><rect x="78.4155%" y="357" width="0.0245%" height="15" fill="rgb(222,101,24)" fg:x="3197" fg:w="1"/><text x="78.6655%" y="367.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (1 samples, 0.02%)</title><rect x="78.4155%" y="341" width="0.0245%" height="15" fill="rgb(254,142,4)" fg:x="3197" fg:w="1"/><text x="78.6655%" y="351.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (1 samples, 0.02%)</title><rect x="78.4155%" y="325" width="0.0245%" height="15" fill="rgb(230,229,49)" fg:x="3197" fg:w="1"/><text x="78.6655%" y="335.50"></text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;generic_array::GenericArray&lt;u8,N&gt;,M&gt;&gt;::xor_in2out (43 samples, 1.05%)</title><rect x="77.4099%" y="389" width="1.0547%" height="15" fill="rgb(238,70,47)" fg:x="3156" fg:w="43"/><text x="77.6599%" y="399.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.02%)</title><rect x="78.4400%" y="373" width="0.0245%" height="15" fill="rgb(231,160,17)" fg:x="3198" fg:w="1"/><text x="78.6900%" y="383.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.02%)</title><rect x="78.4400%" y="357" width="0.0245%" height="15" fill="rgb(218,68,53)" fg:x="3198" fg:w="1"/><text x="78.6900%" y="367.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.02%)</title><rect x="78.4400%" y="341" width="0.0245%" height="15" fill="rgb(236,111,10)" fg:x="3198" fg:w="1"/><text x="78.6900%" y="351.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (1 samples, 0.02%)</title><rect x="78.4400%" y="325" width="0.0245%" height="15" fill="rgb(224,34,41)" fg:x="3198" fg:w="1"/><text x="78.6900%" y="335.50"></text></g><g><title>chacha20::backends::avx2::inner (47 samples, 1.15%)</title><rect x="77.3363%" y="421" width="1.1528%" height="15" fill="rgb(241,118,19)" fg:x="3153" fg:w="47"/><text x="77.5863%" y="431.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (47 samples, 1.15%)</title><rect x="77.3363%" y="405" width="1.1528%" height="15" fill="rgb(238,129,25)" fg:x="3153" fg:w="47"/><text x="77.5863%" y="415.50"></text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;u8,N&gt;&gt;::xor_in2out (1 samples, 0.02%)</title><rect x="78.4646%" y="389" width="0.0245%" height="15" fill="rgb(238,22,31)" fg:x="3199" fg:w="1"/><text x="78.7146%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.02%)</title><rect x="78.4891%" y="421" width="0.0245%" height="15" fill="rgb(222,174,48)" fg:x="3200" fg:w="1"/><text x="78.7391%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.02%)</title><rect x="78.5136%" y="421" width="0.0245%" height="15" fill="rgb(206,152,40)" fg:x="3201" fg:w="1"/><text x="78.7636%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="78.5381%" y="421" width="0.0245%" height="15" fill="rgb(218,99,54)" fg:x="3202" fg:w="1"/><text x="78.7881%" y="431.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (53 samples, 1.30%)</title><rect x="77.3363%" y="517" width="1.3000%" height="15" fill="rgb(220,174,26)" fg:x="3153" fg:w="53"/><text x="77.5863%" y="527.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (53 samples, 1.30%)</title><rect x="77.3363%" y="501" width="1.3000%" height="15" fill="rgb(245,116,9)" fg:x="3153" fg:w="53"/><text x="77.5863%" y="511.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (53 samples, 1.30%)</title><rect x="77.3363%" y="485" width="1.3000%" height="15" fill="rgb(209,72,35)" fg:x="3153" fg:w="53"/><text x="77.5863%" y="495.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (53 samples, 1.30%)</title><rect x="77.3363%" y="469" width="1.3000%" height="15" fill="rgb(226,126,21)" fg:x="3153" fg:w="53"/><text x="77.5863%" y="479.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (53 samples, 1.30%)</title><rect x="77.3363%" y="453" width="1.3000%" height="15" fill="rgb(227,192,1)" fg:x="3153" fg:w="53"/><text x="77.5863%" y="463.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (53 samples, 1.30%)</title><rect x="77.3363%" y="437" width="1.3000%" height="15" fill="rgb(237,180,29)" fg:x="3153" fg:w="53"/><text x="77.5863%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (3 samples, 0.07%)</title><rect x="78.5627%" y="421" width="0.0736%" height="15" fill="rgb(230,197,35)" fg:x="3203" fg:w="3"/><text x="78.8127%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (2 samples, 0.05%)</title><rect x="78.6363%" y="405" width="0.0491%" height="15" fill="rgb(246,193,31)" fg:x="3206" fg:w="2"/><text x="78.8863%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.02%)</title><rect x="78.6853%" y="405" width="0.0245%" height="15" fill="rgb(241,36,4)" fg:x="3208" fg:w="1"/><text x="78.9353%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (2 samples, 0.05%)</title><rect x="78.7098%" y="405" width="0.0491%" height="15" fill="rgb(241,130,17)" fg:x="3209" fg:w="2"/><text x="78.9598%" y="415.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (2 samples, 0.05%)</title><rect x="78.7589%" y="405" width="0.0491%" height="15" fill="rgb(206,137,32)" fg:x="3211" fg:w="2"/><text x="79.0089%" y="415.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (2 samples, 0.05%)</title><rect x="78.7589%" y="389" width="0.0491%" height="15" fill="rgb(237,228,51)" fg:x="3211" fg:w="2"/><text x="79.0089%" y="399.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (2 samples, 0.05%)</title><rect x="78.7589%" y="373" width="0.0491%" height="15" fill="rgb(243,6,42)" fg:x="3211" fg:w="2"/><text x="79.0089%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="78.8079%" y="405" width="0.0245%" height="15" fill="rgb(251,74,28)" fg:x="3213" fg:w="1"/><text x="79.0579%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (2 samples, 0.05%)</title><rect x="78.8325%" y="373" width="0.0491%" height="15" fill="rgb(218,20,49)" fg:x="3214" fg:w="2"/><text x="79.0825%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (3 samples, 0.07%)</title><rect x="78.8815%" y="373" width="0.0736%" height="15" fill="rgb(238,28,14)" fg:x="3216" fg:w="3"/><text x="79.1315%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (1 samples, 0.02%)</title><rect x="78.9551%" y="373" width="0.0245%" height="15" fill="rgb(229,40,46)" fg:x="3219" fg:w="1"/><text x="79.2051%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi64 (1 samples, 0.02%)</title><rect x="78.9796%" y="373" width="0.0245%" height="15" fill="rgb(244,195,20)" fg:x="3220" fg:w="1"/><text x="79.2296%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (1 samples, 0.02%)</title><rect x="79.0042%" y="373" width="0.0245%" height="15" fill="rgb(253,56,35)" fg:x="3221" fg:w="1"/><text x="79.2542%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (3 samples, 0.07%)</title><rect x="79.0287%" y="373" width="0.0736%" height="15" fill="rgb(210,149,44)" fg:x="3222" fg:w="3"/><text x="79.2787%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (3 samples, 0.07%)</title><rect x="79.0287%" y="357" width="0.0736%" height="15" fill="rgb(240,135,12)" fg:x="3222" fg:w="3"/><text x="79.2787%" y="367.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (3 samples, 0.07%)</title><rect x="79.0287%" y="341" width="0.0736%" height="15" fill="rgb(251,24,50)" fg:x="3222" fg:w="3"/><text x="79.2787%" y="351.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.02%)</title><rect x="79.1023%" y="373" width="0.0245%" height="15" fill="rgb(243,200,47)" fg:x="3225" fg:w="1"/><text x="79.3523%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="79.1268%" y="373" width="0.0245%" height="15" fill="rgb(224,166,26)" fg:x="3226" fg:w="1"/><text x="79.3768%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (5 samples, 0.12%)</title><rect x="79.1513%" y="373" width="0.1226%" height="15" fill="rgb(233,0,47)" fg:x="3227" fg:w="5"/><text x="79.4013%" y="383.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (2 samples, 0.05%)</title><rect x="79.2740%" y="357" width="0.0491%" height="15" fill="rgb(253,80,5)" fg:x="3232" fg:w="2"/><text x="79.5240%" y="367.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (3 samples, 0.07%)</title><rect x="79.2740%" y="373" width="0.0736%" height="15" fill="rgb(214,133,25)" fg:x="3232" fg:w="3"/><text x="79.5240%" y="383.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Add&gt;::add (1 samples, 0.02%)</title><rect x="79.3230%" y="357" width="0.0245%" height="15" fill="rgb(209,27,14)" fg:x="3234" fg:w="1"/><text x="79.5730%" y="367.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (22 samples, 0.54%)</title><rect x="78.8325%" y="389" width="0.5396%" height="15" fill="rgb(219,102,51)" fg:x="3214" fg:w="22"/><text x="79.0825%" y="399.50"></text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_loaded_blocks (1 samples, 0.02%)</title><rect x="79.3476%" y="373" width="0.0245%" height="15" fill="rgb(237,18,16)" fg:x="3235" fg:w="1"/><text x="79.5976%" y="383.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::encrypt_in_place_detached (88 samples, 2.16%)</title><rect x="77.2627%" y="533" width="2.1584%" height="15" fill="rgb(241,85,17)" fg:x="3150" fg:w="88"/><text x="77.5127%" y="543.50">c..</text></g><g><title>universal_hash::UniversalHash::update_padded (32 samples, 0.78%)</title><rect x="78.6363%" y="517" width="0.7849%" height="15" fill="rgb(236,90,42)" fg:x="3206" fg:w="32"/><text x="78.8863%" y="527.50"></text></g><g><title>universal_hash::UniversalHash::update (32 samples, 0.78%)</title><rect x="78.6363%" y="501" width="0.7849%" height="15" fill="rgb(249,57,21)" fg:x="3206" fg:w="32"/><text x="78.8863%" y="511.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (32 samples, 0.78%)</title><rect x="78.6363%" y="485" width="0.7849%" height="15" fill="rgb(243,12,36)" fg:x="3206" fg:w="32"/><text x="78.8863%" y="495.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (32 samples, 0.78%)</title><rect x="78.6363%" y="469" width="0.7849%" height="15" fill="rgb(253,128,47)" fg:x="3206" fg:w="32"/><text x="78.8863%" y="479.50"></text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (32 samples, 0.78%)</title><rect x="78.6363%" y="453" width="0.7849%" height="15" fill="rgb(207,33,20)" fg:x="3206" fg:w="32"/><text x="78.8863%" y="463.50"></text></g><g><title>&lt;poly1305::backend::avx2::State as universal_hash::UhfBackend&gt;::proc_par_blocks (32 samples, 0.78%)</title><rect x="78.6363%" y="437" width="0.7849%" height="15" fill="rgb(233,215,35)" fg:x="3206" fg:w="32"/><text x="78.8863%" y="447.50"></text></g><g><title>poly1305::backend::avx2::State::compute_par_blocks (32 samples, 0.78%)</title><rect x="78.6363%" y="421" width="0.7849%" height="15" fill="rgb(249,188,52)" fg:x="3206" fg:w="32"/><text x="78.8863%" y="431.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (24 samples, 0.59%)</title><rect x="78.8325%" y="405" width="0.5887%" height="15" fill="rgb(225,12,32)" fg:x="3214" fg:w="24"/><text x="79.0825%" y="415.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (2 samples, 0.05%)</title><rect x="79.3721%" y="389" width="0.0491%" height="15" fill="rgb(247,98,14)" fg:x="3236" fg:w="2"/><text x="79.6221%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (2 samples, 0.05%)</title><rect x="79.3721%" y="373" width="0.0491%" height="15" fill="rgb(247,219,48)" fg:x="3236" fg:w="2"/><text x="79.6221%" y="383.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier as core::ops::arith::Mul&gt;::mul (1 samples, 0.02%)</title><rect x="79.4211%" y="437" width="0.0245%" height="15" fill="rgb(253,60,48)" fg:x="3238" fg:w="1"/><text x="79.6711%" y="447.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (1 samples, 0.02%)</title><rect x="79.4211%" y="421" width="0.0245%" height="15" fill="rgb(245,15,52)" fg:x="3238" fg:w="1"/><text x="79.6711%" y="431.50"></text></g><g><title>tftp::server::connection::Connection&lt;B,Rng&gt;::send_packet (90 samples, 2.21%)</title><rect x="77.2627%" y="613" width="2.2075%" height="15" fill="rgb(220,133,28)" fg:x="3150" fg:w="90"/><text x="77.5127%" y="623.50">t..</text></g><g><title>tftp::server::connection::Connection&lt;B,Rng&gt;::send_bytes (90 samples, 2.21%)</title><rect x="77.2627%" y="597" width="2.2075%" height="15" fill="rgb(217,180,4)" fg:x="3150" fg:w="90"/><text x="77.5127%" y="607.50">t..</text></g><g><title>tftp::encrypted_packet::EncryptedPacket::encrypt (90 samples, 2.21%)</title><rect x="77.2627%" y="581" width="2.2075%" height="15" fill="rgb(251,24,1)" fg:x="3150" fg:w="90"/><text x="77.5127%" y="591.50">t..</text></g><g><title>tftp::encryption::Encryptor&lt;R&gt;::encrypt (90 samples, 2.21%)</title><rect x="77.2627%" y="565" width="2.2075%" height="15" fill="rgb(212,185,49)" fg:x="3150" fg:w="90"/><text x="77.5127%" y="575.50">t..</text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::encrypt_in_place_detached (90 samples, 2.21%)</title><rect x="77.2627%" y="549" width="2.2075%" height="15" fill="rgb(215,175,22)" fg:x="3150" fg:w="90"/><text x="77.5127%" y="559.50">&lt;..</text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (2 samples, 0.05%)</title><rect x="79.4211%" y="533" width="0.0491%" height="15" fill="rgb(250,205,14)" fg:x="3238" fg:w="2"/><text x="79.6711%" y="543.50"></text></g><g><title>&lt;poly1305::Poly1305 as crypto_common::KeyInit&gt;::new (2 samples, 0.05%)</title><rect x="79.4211%" y="517" width="0.0491%" height="15" fill="rgb(225,211,22)" fg:x="3238" fg:w="2"/><text x="79.6711%" y="527.50"></text></g><g><title>poly1305::backend::autodetect::State::new (2 samples, 0.05%)</title><rect x="79.4211%" y="501" width="0.0491%" height="15" fill="rgb(251,179,42)" fg:x="3238" fg:w="2"/><text x="79.6711%" y="511.50"></text></g><g><title>poly1305::backend::avx2::State::new (2 samples, 0.05%)</title><rect x="79.4211%" y="485" width="0.0491%" height="15" fill="rgb(208,216,51)" fg:x="3238" fg:w="2"/><text x="79.6711%" y="495.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier as core::ops::arith::Mul&gt;::mul (2 samples, 0.05%)</title><rect x="79.4211%" y="469" width="0.0491%" height="15" fill="rgb(235,36,11)" fg:x="3238" fg:w="2"/><text x="79.6711%" y="479.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (2 samples, 0.05%)</title><rect x="79.4211%" y="453" width="0.0491%" height="15" fill="rgb(213,189,28)" fg:x="3238" fg:w="2"/><text x="79.6711%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (1 samples, 0.02%)</title><rect x="79.4457%" y="437" width="0.0245%" height="15" fill="rgb(227,203,42)" fg:x="3239" fg:w="1"/><text x="79.6957%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.02%)</title><rect x="79.4457%" y="421" width="0.0245%" height="15" fill="rgb(244,72,36)" fg:x="3239" fg:w="1"/><text x="79.6957%" y="431.50"></text></g><g><title>tftp::server::extensions::create_options (1 samples, 0.02%)</title><rect x="79.4702%" y="613" width="0.0245%" height="15" fill="rgb(213,53,17)" fg:x="3240" fg:w="1"/><text x="79.7202%" y="623.50"></text></g><g><title>tftp::key_management::create_finalized_keys (1 samples, 0.02%)</title><rect x="79.4702%" y="597" width="0.0245%" height="15" fill="rgb(207,167,3)" fg:x="3240" fg:w="1"/><text x="79.7202%" y="607.50"></text></g><g><title>tftp::key_management::create_initial_keys (1 samples, 0.02%)</title><rect x="79.4702%" y="581" width="0.0245%" height="15" fill="rgb(216,98,30)" fg:x="3240" fg:w="1"/><text x="79.7202%" y="591.50"></text></g><g><title>&lt;x25519_dalek::x25519::PublicKey as core::convert::From&lt;&amp;x25519_dalek::x25519::EphemeralSecret&gt;&gt;::from (1 samples, 0.02%)</title><rect x="79.4702%" y="565" width="0.0245%" height="15" fill="rgb(236,123,15)" fg:x="3240" fg:w="1"/><text x="79.7202%" y="575.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::mul_base_clamped (1 samples, 0.02%)</title><rect x="79.4702%" y="549" width="0.0245%" height="15" fill="rgb(248,81,50)" fg:x="3240" fg:w="1"/><text x="79.7202%" y="559.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::mul_base (1 samples, 0.02%)</title><rect x="79.4702%" y="533" width="0.0245%" height="15" fill="rgb(214,120,4)" fg:x="3240" fg:w="1"/><text x="79.7202%" y="543.50"></text></g><g><title>curve25519_dalek::edwards::&lt;impl core::ops::arith::Mul&lt;curve25519_dalek::edwards::EdwardsPoint&gt; for &amp;curve25519_dalek::scalar::Scalar&gt;::mul (1 samples, 0.02%)</title><rect x="79.4702%" y="517" width="0.0245%" height="15" fill="rgb(208,179,34)" fg:x="3240" fg:w="1"/><text x="79.7202%" y="527.50"></text></g><g><title>curve25519_dalek::edwards::&lt;impl core::ops::arith::Mul&lt;&amp;curve25519_dalek::edwards::EdwardsPoint&gt; for &amp;curve25519_dalek::scalar::Scalar&gt;::mul (1 samples, 0.02%)</title><rect x="79.4702%" y="501" width="0.0245%" height="15" fill="rgb(227,140,7)" fg:x="3240" fg:w="1"/><text x="79.7202%" y="511.50"></text></g><g><title>&lt;&amp;curve25519_dalek::edwards::EdwardsPoint as core::ops::arith::Mul&lt;&amp;curve25519_dalek::scalar::Scalar&gt;&gt;::mul (1 samples, 0.02%)</title><rect x="79.4702%" y="485" width="0.0245%" height="15" fill="rgb(214,22,6)" fg:x="3240" fg:w="1"/><text x="79.7202%" y="495.50"></text></g><g><title>curve25519_dalek::backend::variable_base_mul (1 samples, 0.02%)</title><rect x="79.4702%" y="469" width="0.0245%" height="15" fill="rgb(207,137,27)" fg:x="3240" fg:w="1"/><text x="79.7202%" y="479.50"></text></g><g><title>curve25519_dalek::backend::vector::scalar_mul::variable_base::spec_avx2::mul (1 samples, 0.02%)</title><rect x="79.4702%" y="453" width="0.0245%" height="15" fill="rgb(210,8,46)" fg:x="3240" fg:w="1"/><text x="79.7202%" y="463.50"></text></g><g><title>curve25519_dalek::backend::vector::scalar_mul::variable_base::spec_avx2::mul::_impl_mul (1 samples, 0.02%)</title><rect x="79.4702%" y="437" width="0.0245%" height="15" fill="rgb(240,16,54)" fg:x="3240" fg:w="1"/><text x="79.7202%" y="447.50"></text></g><g><title>curve25519_dalek::backend::vector::avx2::edwards::ExtendedPoint::mul_by_pow_2 (1 samples, 0.02%)</title><rect x="79.4702%" y="421" width="0.0245%" height="15" fill="rgb(211,209,29)" fg:x="3240" fg:w="1"/><text x="79.7202%" y="431.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::avx2::edwards::ExtendedPoint as curve25519_dalek::backend::vector::avx2::edwards::ExtendedPoint::mul_by_pow_2::__Impl_mul_by_pow_2__&gt;::_impl_mul_by_pow_2 (1 samples, 0.02%)</title><rect x="79.4702%" y="405" width="0.0245%" height="15" fill="rgb(226,228,24)" fg:x="3240" fg:w="1"/><text x="79.7202%" y="415.50"></text></g><g><title>curve25519_dalek::backend::vector::avx2::edwards::ExtendedPoint::double (1 samples, 0.02%)</title><rect x="79.4702%" y="389" width="0.0245%" height="15" fill="rgb(222,84,9)" fg:x="3240" fg:w="1"/><text x="79.7202%" y="399.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::avx2::edwards::ExtendedPoint as curve25519_dalek::backend::vector::avx2::edwards::ExtendedPoint::double::__Impl_double__&gt;::_impl_double (1 samples, 0.02%)</title><rect x="79.4702%" y="373" width="0.0245%" height="15" fill="rgb(234,203,30)" fg:x="3240" fg:w="1"/><text x="79.7202%" y="383.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4 as core::ops::arith::Add&gt;::add (1 samples, 0.02%)</title><rect x="79.4702%" y="357" width="0.0245%" height="15" fill="rgb(238,109,14)" fg:x="3240" fg:w="1"/><text x="79.7202%" y="367.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4 as &lt;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4 as core::ops::arith::Add&gt;::add::__Impl_add__&gt;::_impl_add (1 samples, 0.02%)</title><rect x="79.4702%" y="341" width="0.0245%" height="15" fill="rgb(233,206,34)" fg:x="3240" fg:w="1"/><text x="79.7202%" y="351.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::packed_simd::u32x8 as core::ops::arith::Add&gt;::add (1 samples, 0.02%)</title><rect x="79.4702%" y="325" width="0.0245%" height="15" fill="rgb(220,167,47)" fg:x="3240" fg:w="1"/><text x="79.7202%" y="335.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::packed_simd::u32x8 as &lt;curve25519_dalek::backend::vector::packed_simd::u32x8 as core::ops::arith::Add&gt;::add::__Impl_add__&gt;::_impl_add (1 samples, 0.02%)</title><rect x="79.4702%" y="309" width="0.0245%" height="15" fill="rgb(238,105,10)" fg:x="3240" fg:w="1"/><text x="79.7202%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (1 samples, 0.02%)</title><rect x="79.4702%" y="293" width="0.0245%" height="15" fill="rgb(213,227,17)" fg:x="3240" fg:w="1"/><text x="79.7202%" y="303.50"></text></g><g><title>tftp::server::helpers::connection::create_builder (1 samples, 0.02%)</title><rect x="79.4947%" y="613" width="0.0245%" height="15" fill="rgb(217,132,38)" fg:x="3241" fg:w="1"/><text x="79.7447%" y="623.50"></text></g><g><title>tftp::server::connection_builder::ConnectionBuilder&lt;Rng&gt;::from_new_connection (1 samples, 0.02%)</title><rect x="79.4947%" y="597" width="0.0245%" height="15" fill="rgb(242,146,4)" fg:x="3241" fg:w="1"/><text x="79.7447%" y="607.50"></text></g><g><title>tftp::server::connection_builder::handle_encrypted (1 samples, 0.02%)</title><rect x="79.4947%" y="581" width="0.0245%" height="15" fill="rgb(212,61,9)" fg:x="3241" fg:w="1"/><text x="79.7447%" y="591.50"></text></g><g><title>tftp::key_management::create_finalized_keys (1 samples, 0.02%)</title><rect x="79.4947%" y="565" width="0.0245%" height="15" fill="rgb(247,126,22)" fg:x="3241" fg:w="1"/><text x="79.7447%" y="575.50"></text></g><g><title>tftp::key_management::create_initial_keys (1 samples, 0.02%)</title><rect x="79.4947%" y="549" width="0.0245%" height="15" fill="rgb(220,196,2)" fg:x="3241" fg:w="1"/><text x="79.7447%" y="559.50"></text></g><g><title>&lt;x25519_dalek::x25519::PublicKey as core::convert::From&lt;&amp;x25519_dalek::x25519::EphemeralSecret&gt;&gt;::from (1 samples, 0.02%)</title><rect x="79.4947%" y="533" width="0.0245%" height="15" fill="rgb(208,46,4)" fg:x="3241" fg:w="1"/><text x="79.7447%" y="543.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::mul_base_clamped (1 samples, 0.02%)</title><rect x="79.4947%" y="517" width="0.0245%" height="15" fill="rgb(252,104,46)" fg:x="3241" fg:w="1"/><text x="79.7447%" y="527.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::mul_base (1 samples, 0.02%)</title><rect x="79.4947%" y="501" width="0.0245%" height="15" fill="rgb(237,152,48)" fg:x="3241" fg:w="1"/><text x="79.7447%" y="511.50"></text></g><g><title>curve25519_dalek::edwards::&lt;impl core::ops::arith::Mul&lt;curve25519_dalek::edwards::EdwardsPoint&gt; for &amp;curve25519_dalek::scalar::Scalar&gt;::mul (1 samples, 0.02%)</title><rect x="79.4947%" y="485" width="0.0245%" height="15" fill="rgb(221,59,37)" fg:x="3241" fg:w="1"/><text x="79.7447%" y="495.50"></text></g><g><title>curve25519_dalek::edwards::&lt;impl core::ops::arith::Mul&lt;&amp;curve25519_dalek::edwards::EdwardsPoint&gt; for &amp;curve25519_dalek::scalar::Scalar&gt;::mul (1 samples, 0.02%)</title><rect x="79.4947%" y="469" width="0.0245%" height="15" fill="rgb(209,202,51)" fg:x="3241" fg:w="1"/><text x="79.7447%" y="479.50"></text></g><g><title>&lt;&amp;curve25519_dalek::edwards::EdwardsPoint as core::ops::arith::Mul&lt;&amp;curve25519_dalek::scalar::Scalar&gt;&gt;::mul (1 samples, 0.02%)</title><rect x="79.4947%" y="453" width="0.0245%" height="15" fill="rgb(228,81,30)" fg:x="3241" fg:w="1"/><text x="79.7447%" y="463.50"></text></g><g><title>curve25519_dalek::backend::variable_base_mul (1 samples, 0.02%)</title><rect x="79.4947%" y="437" width="0.0245%" height="15" fill="rgb(227,42,39)" fg:x="3241" fg:w="1"/><text x="79.7447%" y="447.50"></text></g><g><title>curve25519_dalek::backend::vector::scalar_mul::variable_base::spec_avx2::mul (1 samples, 0.02%)</title><rect x="79.4947%" y="421" width="0.0245%" height="15" fill="rgb(221,26,2)" fg:x="3241" fg:w="1"/><text x="79.7447%" y="431.50"></text></g><g><title>curve25519_dalek::backend::vector::scalar_mul::variable_base::spec_avx2::mul::_impl_mul (1 samples, 0.02%)</title><rect x="79.4947%" y="405" width="0.0245%" height="15" fill="rgb(254,61,31)" fg:x="3241" fg:w="1"/><text x="79.7447%" y="415.50"></text></g><g><title>curve25519_dalek::window::LookupTable&lt;T&gt;::select (1 samples, 0.02%)</title><rect x="79.4947%" y="389" width="0.0245%" height="15" fill="rgb(222,173,38)" fg:x="3241" fg:w="1"/><text x="79.7447%" y="399.50"></text></g><g><title>&lt;T as subtle::ConditionallyNegatable&gt;::conditional_negate (1 samples, 0.02%)</title><rect x="79.4947%" y="373" width="0.0245%" height="15" fill="rgb(218,50,12)" fg:x="3241" fg:w="1"/><text x="79.7447%" y="383.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::avx2::edwards::CachedPoint as subtle::ConditionallySelectable&gt;::conditional_assign (1 samples, 0.02%)</title><rect x="79.4947%" y="357" width="0.0245%" height="15" fill="rgb(223,88,40)" fg:x="3241" fg:w="1"/><text x="79.7447%" y="367.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::avx2::edwards::CachedPoint as &lt;curve25519_dalek::backend::vector::avx2::edwards::CachedPoint as subtle::ConditionallySelectable&gt;::conditional_assign::__Impl_conditional_assign__&gt;::_impl_conditional_assign (1 samples, 0.02%)</title><rect x="79.4947%" y="341" width="0.0245%" height="15" fill="rgb(237,54,19)" fg:x="3241" fg:w="1"/><text x="79.7447%" y="351.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4 as subtle::ConditionallySelectable&gt;::conditional_assign (1 samples, 0.02%)</title><rect x="79.4947%" y="325" width="0.0245%" height="15" fill="rgb(251,129,25)" fg:x="3241" fg:w="1"/><text x="79.7447%" y="335.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (1 samples, 0.02%)</title><rect x="79.4947%" y="309" width="0.0245%" height="15" fill="rgb(238,97,19)" fg:x="3241" fg:w="1"/><text x="79.7447%" y="319.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi32 (1 samples, 0.02%)</title><rect x="79.4947%" y="293" width="0.0245%" height="15" fill="rgb(240,169,18)" fg:x="3241" fg:w="1"/><text x="79.7447%" y="303.50"></text></g><g><title>core::core_arch::simd::i32x8::new (1 samples, 0.02%)</title><rect x="79.4947%" y="277" width="0.0245%" height="15" fill="rgb(230,187,49)" fg:x="3241" fg:w="1"/><text x="79.7447%" y="287.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (3 samples, 0.07%)</title><rect x="79.5193%" y="421" width="0.0736%" height="15" fill="rgb(209,44,26)" fg:x="3242" fg:w="3"/><text x="79.7693%" y="431.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (1 samples, 0.02%)</title><rect x="79.5928%" y="421" width="0.0245%" height="15" fill="rgb(244,0,6)" fg:x="3245" fg:w="1"/><text x="79.8428%" y="431.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="79.6174%" y="373" width="0.0245%" height="15" fill="rgb(248,18,21)" fg:x="3246" fg:w="1"/><text x="79.8674%" y="383.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (1 samples, 0.02%)</title><rect x="79.6174%" y="357" width="0.0245%" height="15" fill="rgb(245,180,19)" fg:x="3246" fg:w="1"/><text x="79.8674%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.02%)</title><rect x="79.6419%" y="373" width="0.0245%" height="15" fill="rgb(252,118,36)" fg:x="3247" fg:w="1"/><text x="79.8919%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.02%)</title><rect x="79.6664%" y="373" width="0.0245%" height="15" fill="rgb(210,224,19)" fg:x="3248" fg:w="1"/><text x="79.9164%" y="383.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_par_ks_blocks (4 samples, 0.10%)</title><rect x="79.6174%" y="389" width="0.0981%" height="15" fill="rgb(218,30,24)" fg:x="3246" fg:w="4"/><text x="79.8674%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.02%)</title><rect x="79.6909%" y="373" width="0.0245%" height="15" fill="rgb(219,75,50)" fg:x="3249" fg:w="1"/><text x="79.9409%" y="383.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (2 samples, 0.05%)</title><rect x="82.6098%" y="357" width="0.0491%" height="15" fill="rgb(234,72,50)" fg:x="3368" fg:w="2"/><text x="82.8598%" y="367.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="82.6588%" y="357" width="0.0245%" height="15" fill="rgb(219,100,48)" fg:x="3370" fg:w="1"/><text x="82.9088%" y="367.50"></text></g><g><title>_init (1 samples, 0.02%)</title><rect x="82.6833%" y="357" width="0.0245%" height="15" fill="rgb(253,5,41)" fg:x="3371" fg:w="1"/><text x="82.9333%" y="367.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.02%)</title><rect x="82.7079%" y="357" width="0.0245%" height="15" fill="rgb(247,181,11)" fg:x="3372" fg:w="1"/><text x="82.9579%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::cast (1 samples, 0.02%)</title><rect x="82.7569%" y="325" width="0.0245%" height="15" fill="rgb(222,223,25)" fg:x="3374" fg:w="1"/><text x="83.0069%" y="335.50"></text></g><g><title>core::slice::raw::from_raw_parts (7 samples, 0.17%)</title><rect x="82.7324%" y="357" width="0.1717%" height="15" fill="rgb(214,198,28)" fg:x="3373" fg:w="7"/><text x="82.9824%" y="367.50"></text></g><g><title>core::ptr::slice_from_raw_parts (6 samples, 0.15%)</title><rect x="82.7569%" y="341" width="0.1472%" height="15" fill="rgb(230,46,43)" fg:x="3374" fg:w="6"/><text x="83.0069%" y="351.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (5 samples, 0.12%)</title><rect x="82.7815%" y="325" width="0.1226%" height="15" fill="rgb(233,65,53)" fg:x="3375" fg:w="5"/><text x="83.0315%" y="335.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (8 samples, 0.20%)</title><rect x="82.9041%" y="357" width="0.1962%" height="15" fill="rgb(221,121,27)" fg:x="3380" fg:w="8"/><text x="83.1541%" y="367.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (8 samples, 0.20%)</title><rect x="82.9041%" y="341" width="0.1962%" height="15" fill="rgb(247,70,47)" fg:x="3380" fg:w="8"/><text x="83.1541%" y="351.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (8 samples, 0.20%)</title><rect x="82.9041%" y="325" width="0.1962%" height="15" fill="rgb(228,85,35)" fg:x="3380" fg:w="8"/><text x="83.1541%" y="335.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::Deref&gt;::deref (62 samples, 1.52%)</title><rect x="81.6286%" y="373" width="1.5207%" height="15" fill="rgb(209,50,18)" fg:x="3328" fg:w="62"/><text x="81.8786%" y="383.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (2 samples, 0.05%)</title><rect x="83.1003%" y="357" width="0.0491%" height="15" fill="rgb(250,19,35)" fg:x="3388" fg:w="2"/><text x="83.3503%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.02%)</title><rect x="83.4682%" y="357" width="0.0245%" height="15" fill="rgb(253,107,29)" fg:x="3403" fg:w="1"/><text x="83.7182%" y="367.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.02%)</title><rect x="83.4928%" y="357" width="0.0245%" height="15" fill="rgb(252,179,29)" fg:x="3404" fg:w="1"/><text x="83.7428%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::cast (1 samples, 0.02%)</title><rect x="83.6154%" y="325" width="0.0245%" height="15" fill="rgb(238,194,6)" fg:x="3409" fg:w="1"/><text x="83.8654%" y="335.50"></text></g><g><title>core::slice::raw::from_raw_parts (12 samples, 0.29%)</title><rect x="83.5173%" y="357" width="0.2943%" height="15" fill="rgb(238,164,29)" fg:x="3405" fg:w="12"/><text x="83.7673%" y="367.50"></text></g><g><title>core::ptr::slice_from_raw_parts (8 samples, 0.20%)</title><rect x="83.6154%" y="341" width="0.1962%" height="15" fill="rgb(224,25,9)" fg:x="3409" fg:w="8"/><text x="83.8654%" y="351.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (7 samples, 0.17%)</title><rect x="83.6399%" y="325" width="0.1717%" height="15" fill="rgb(244,153,23)" fg:x="3410" fg:w="7"/><text x="83.8899%" y="335.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (32 samples, 0.78%)</title><rect x="83.1494%" y="373" width="0.7849%" height="15" fill="rgb(212,203,14)" fg:x="3390" fg:w="32"/><text x="83.3994%" y="383.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (5 samples, 0.12%)</title><rect x="83.8116%" y="357" width="0.1226%" height="15" fill="rgb(220,164,20)" fg:x="3417" fg:w="5"/><text x="84.0616%" y="367.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (4 samples, 0.10%)</title><rect x="83.8362%" y="341" width="0.0981%" height="15" fill="rgb(222,203,48)" fg:x="3418" fg:w="4"/><text x="84.0862%" y="351.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (4 samples, 0.10%)</title><rect x="83.8362%" y="325" width="0.0981%" height="15" fill="rgb(215,159,22)" fg:x="3418" fg:w="4"/><text x="84.0862%" y="335.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3 samples, 0.07%)</title><rect x="83.9343%" y="357" width="0.0736%" height="15" fill="rgb(216,183,47)" fg:x="3422" fg:w="3"/><text x="84.1843%" y="367.50"></text></g><g><title>core::slice::raw::from_raw_parts (1 samples, 0.02%)</title><rect x="83.9833%" y="341" width="0.0245%" height="15" fill="rgb(229,195,25)" fg:x="3424" fg:w="1"/><text x="84.2333%" y="351.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.02%)</title><rect x="83.9833%" y="325" width="0.0245%" height="15" fill="rgb(224,132,51)" fg:x="3424" fg:w="1"/><text x="84.2333%" y="335.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (1 samples, 0.02%)</title><rect x="83.9833%" y="309" width="0.0245%" height="15" fill="rgb(240,63,7)" fg:x="3424" fg:w="1"/><text x="84.2333%" y="319.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (5 samples, 0.12%)</title><rect x="83.9343%" y="373" width="0.1226%" height="15" fill="rgb(249,182,41)" fg:x="3422" fg:w="5"/><text x="84.1843%" y="383.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (2 samples, 0.05%)</title><rect x="84.0078%" y="357" width="0.0491%" height="15" fill="rgb(243,47,26)" fg:x="3425" fg:w="2"/><text x="84.2578%" y="367.50"></text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;generic_array::GenericArray&lt;u8,N&gt;,M&gt;&gt;::xor_in2out (178 samples, 4.37%)</title><rect x="79.7155%" y="389" width="4.3660%" height="15" fill="rgb(233,48,2)" fg:x="3250" fg:w="178"/><text x="79.9655%" y="399.50">inout..</text></g><g><title>core::slice::raw::from_raw_parts_mut (1 samples, 0.02%)</title><rect x="84.0569%" y="373" width="0.0245%" height="15" fill="rgb(244,165,34)" fg:x="3427" fg:w="1"/><text x="84.3069%" y="383.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (1 samples, 0.02%)</title><rect x="84.0569%" y="357" width="0.0245%" height="15" fill="rgb(207,89,7)" fg:x="3427" fg:w="1"/><text x="84.3069%" y="367.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (1 samples, 0.02%)</title><rect x="84.0569%" y="341" width="0.0245%" height="15" fill="rgb(244,117,36)" fg:x="3427" fg:w="1"/><text x="84.3069%" y="351.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="84.1060%" y="373" width="0.0245%" height="15" fill="rgb(226,144,34)" fg:x="3429" fg:w="1"/><text x="84.3560%" y="383.50"></text></g><g><title>core::slice::raw::from_raw_parts (1 samples, 0.02%)</title><rect x="84.1060%" y="357" width="0.0245%" height="15" fill="rgb(213,23,19)" fg:x="3429" fg:w="1"/><text x="84.3560%" y="367.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.02%)</title><rect x="84.1060%" y="341" width="0.0245%" height="15" fill="rgb(217,75,12)" fg:x="3429" fg:w="1"/><text x="84.3560%" y="351.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (1 samples, 0.02%)</title><rect x="84.1060%" y="325" width="0.0245%" height="15" fill="rgb(224,159,17)" fg:x="3429" fg:w="1"/><text x="84.3560%" y="335.50"></text></g><g><title>chacha20::backends::avx2::inner (185 samples, 4.54%)</title><rect x="79.6174%" y="421" width="4.5377%" height="15" fill="rgb(217,118,1)" fg:x="3246" fg:w="185"/><text x="79.8674%" y="431.50">chach..</text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (185 samples, 4.54%)</title><rect x="79.6174%" y="405" width="4.5377%" height="15" fill="rgb(232,180,48)" fg:x="3246" fg:w="185"/><text x="79.8674%" y="415.50">&lt;ciph..</text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;u8,N&gt;&gt;::xor_in2out (3 samples, 0.07%)</title><rect x="84.0814%" y="389" width="0.0736%" height="15" fill="rgb(230,27,33)" fg:x="3428" fg:w="3"/><text x="84.3314%" y="399.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.02%)</title><rect x="84.1305%" y="373" width="0.0245%" height="15" fill="rgb(205,31,21)" fg:x="3430" fg:w="1"/><text x="84.3805%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.02%)</title><rect x="84.1305%" y="357" width="0.0245%" height="15" fill="rgb(253,59,4)" fg:x="3430" fg:w="1"/><text x="84.3805%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.02%)</title><rect x="84.1550%" y="421" width="0.0245%" height="15" fill="rgb(224,201,9)" fg:x="3431" fg:w="1"/><text x="84.4050%" y="431.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.02%)</title><rect x="84.1550%" y="405" width="0.0245%" height="15" fill="rgb(229,206,30)" fg:x="3431" fg:w="1"/><text x="84.4050%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.02%)</title><rect x="84.1795%" y="421" width="0.0245%" height="15" fill="rgb(212,67,47)" fg:x="3432" fg:w="1"/><text x="84.4295%" y="431.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.02%)</title><rect x="84.1795%" y="405" width="0.0245%" height="15" fill="rgb(211,96,50)" fg:x="3432" fg:w="1"/><text x="84.4295%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (2 samples, 0.05%)</title><rect x="84.2041%" y="421" width="0.0491%" height="15" fill="rgb(252,114,18)" fg:x="3433" fg:w="2"/><text x="84.4541%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.05%)</title><rect x="84.2531%" y="421" width="0.0491%" height="15" fill="rgb(223,58,37)" fg:x="3435" fg:w="2"/><text x="84.5031%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.02%)</title><rect x="84.3022%" y="421" width="0.0245%" height="15" fill="rgb(237,70,4)" fg:x="3437" fg:w="1"/><text x="84.5522%" y="431.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (197 samples, 4.83%)</title><rect x="79.5193%" y="469" width="4.8320%" height="15" fill="rgb(244,85,46)" fg:x="3242" fg:w="197"/><text x="79.7693%" y="479.50">cipher..</text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (197 samples, 4.83%)</title><rect x="79.5193%" y="453" width="4.8320%" height="15" fill="rgb(223,39,52)" fg:x="3242" fg:w="197"/><text x="79.7693%" y="463.50">&lt;chach..</text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (197 samples, 4.83%)</title><rect x="79.5193%" y="437" width="4.8320%" height="15" fill="rgb(218,200,14)" fg:x="3242" fg:w="197"/><text x="79.7693%" y="447.50">&lt;chach..</text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.02%)</title><rect x="84.3267%" y="421" width="0.0245%" height="15" fill="rgb(208,171,16)" fg:x="3438" fg:w="1"/><text x="84.5767%" y="431.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (6 samples, 0.15%)</title><rect x="84.4248%" y="325" width="0.1472%" height="15" fill="rgb(234,200,18)" fg:x="3442" fg:w="6"/><text x="84.6748%" y="335.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (1 samples, 0.02%)</title><rect x="84.5720%" y="325" width="0.0245%" height="15" fill="rgb(228,45,11)" fg:x="3448" fg:w="1"/><text x="84.8220%" y="335.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.02%)</title><rect x="84.6701%" y="309" width="0.0245%" height="15" fill="rgb(237,182,11)" fg:x="3452" fg:w="1"/><text x="84.9201%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.02%)</title><rect x="84.6946%" y="309" width="0.0245%" height="15" fill="rgb(241,175,49)" fg:x="3453" fg:w="1"/><text x="84.9446%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.02%)</title><rect x="84.7192%" y="309" width="0.0245%" height="15" fill="rgb(247,38,35)" fg:x="3454" fg:w="1"/><text x="84.9692%" y="319.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.02%)</title><rect x="84.7437%" y="309" width="0.0245%" height="15" fill="rgb(228,39,49)" fg:x="3455" fg:w="1"/><text x="84.9937%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (8 samples, 0.20%)</title><rect x="84.5965%" y="325" width="0.1962%" height="15" fill="rgb(226,101,26)" fg:x="3449" fg:w="8"/><text x="84.8465%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.02%)</title><rect x="84.7682%" y="309" width="0.0245%" height="15" fill="rgb(206,141,19)" fg:x="3456" fg:w="1"/><text x="85.0182%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_broadcastsi128_si256 (1 samples, 0.02%)</title><rect x="84.7927%" y="325" width="0.0245%" height="15" fill="rgb(211,200,13)" fg:x="3457" fg:w="1"/><text x="85.0427%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (2 samples, 0.05%)</title><rect x="84.8173%" y="325" width="0.0491%" height="15" fill="rgb(241,121,6)" fg:x="3458" fg:w="2"/><text x="85.0673%" y="335.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (1 samples, 0.02%)</title><rect x="84.9890%" y="309" width="0.0245%" height="15" fill="rgb(234,221,29)" fg:x="3465" fg:w="1"/><text x="85.2390%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (2 samples, 0.05%)</title><rect x="85.0135%" y="309" width="0.0491%" height="15" fill="rgb(229,136,5)" fg:x="3466" fg:w="2"/><text x="85.2635%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.02%)</title><rect x="85.0625%" y="309" width="0.0245%" height="15" fill="rgb(238,36,11)" fg:x="3468" fg:w="1"/><text x="85.3125%" y="319.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.05%)</title><rect x="85.0871%" y="309" width="0.0491%" height="15" fill="rgb(251,55,41)" fg:x="3469" fg:w="2"/><text x="85.3371%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (15 samples, 0.37%)</title><rect x="84.8663%" y="325" width="0.3679%" height="15" fill="rgb(242,34,40)" fg:x="3460" fg:w="15"/><text x="85.1163%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (4 samples, 0.10%)</title><rect x="85.1361%" y="309" width="0.0981%" height="15" fill="rgb(215,42,17)" fg:x="3471" fg:w="4"/><text x="85.3861%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect x="85.2342%" y="309" width="0.0245%" height="15" fill="rgb(207,44,46)" fg:x="3475" fg:w="1"/><text x="85.4842%" y="319.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.05%)</title><rect x="85.2588%" y="309" width="0.0491%" height="15" fill="rgb(211,206,28)" fg:x="3476" fg:w="2"/><text x="85.5088%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (4 samples, 0.10%)</title><rect x="85.2342%" y="325" width="0.0981%" height="15" fill="rgb(237,167,16)" fg:x="3475" fg:w="4"/><text x="85.4842%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.02%)</title><rect x="85.3078%" y="309" width="0.0245%" height="15" fill="rgb(233,66,6)" fg:x="3478" fg:w="1"/><text x="85.5578%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (2 samples, 0.05%)</title><rect x="85.3324%" y="325" width="0.0491%" height="15" fill="rgb(246,123,29)" fg:x="3479" fg:w="2"/><text x="85.5824%" y="335.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.02%)</title><rect x="85.6512%" y="309" width="0.0245%" height="15" fill="rgb(209,62,40)" fg:x="3492" fg:w="1"/><text x="85.9012%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.02%)</title><rect x="85.6757%" y="309" width="0.0245%" height="15" fill="rgb(218,4,25)" fg:x="3493" fg:w="1"/><text x="85.9257%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.02%)</title><rect x="85.7003%" y="309" width="0.0245%" height="15" fill="rgb(253,91,49)" fg:x="3494" fg:w="1"/><text x="85.9503%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (15 samples, 0.37%)</title><rect x="85.3814%" y="325" width="0.3679%" height="15" fill="rgb(228,155,29)" fg:x="3481" fg:w="15"/><text x="85.6314%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.02%)</title><rect x="85.7248%" y="309" width="0.0245%" height="15" fill="rgb(243,57,37)" fg:x="3495" fg:w="1"/><text x="85.9748%" y="319.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (1 samples, 0.02%)</title><rect x="85.7493%" y="325" width="0.0245%" height="15" fill="rgb(244,167,17)" fg:x="3496" fg:w="1"/><text x="85.9993%" y="335.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi32 (1 samples, 0.02%)</title><rect x="85.7493%" y="309" width="0.0245%" height="15" fill="rgb(207,181,38)" fg:x="3496" fg:w="1"/><text x="85.9993%" y="319.50"></text></g><g><title>core::core_arch::simd::i32x8::new (1 samples, 0.02%)</title><rect x="85.7493%" y="293" width="0.0245%" height="15" fill="rgb(211,8,23)" fg:x="3496" fg:w="1"/><text x="85.9993%" y="303.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (12 samples, 0.29%)</title><rect x="85.7739%" y="325" width="0.2943%" height="15" fill="rgb(235,11,44)" fg:x="3497" fg:w="12"/><text x="86.0239%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (9 samples, 0.22%)</title><rect x="86.0682%" y="325" width="0.2208%" height="15" fill="rgb(248,18,52)" fg:x="3509" fg:w="9"/><text x="86.3182%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (5 samples, 0.12%)</title><rect x="86.2889%" y="325" width="0.1226%" height="15" fill="rgb(208,4,7)" fg:x="3518" fg:w="5"/><text x="86.5389%" y="335.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (89 samples, 2.18%)</title><rect x="84.3512%" y="341" width="2.1830%" height="15" fill="rgb(240,17,39)" fg:x="3439" fg:w="89"/><text x="84.6012%" y="351.50">c..</text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (5 samples, 0.12%)</title><rect x="86.4116%" y="325" width="0.1226%" height="15" fill="rgb(207,170,3)" fg:x="3523" fg:w="5"/><text x="86.6616%" y="335.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="86.5342%" y="325" width="0.0245%" height="15" fill="rgb(236,100,52)" fg:x="3528" fg:w="1"/><text x="86.7842%" y="335.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (1 samples, 0.02%)</title><rect x="86.5342%" y="309" width="0.0245%" height="15" fill="rgb(246,78,51)" fg:x="3528" fg:w="1"/><text x="86.7842%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect x="86.5587%" y="309" width="0.0245%" height="15" fill="rgb(211,17,15)" fg:x="3529" fg:w="1"/><text x="86.8087%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (2 samples, 0.05%)</title><rect x="86.5587%" y="325" width="0.0491%" height="15" fill="rgb(209,59,46)" fg:x="3529" fg:w="2"/><text x="86.8087%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.02%)</title><rect x="86.5833%" y="309" width="0.0245%" height="15" fill="rgb(210,92,25)" fg:x="3530" fg:w="1"/><text x="86.8333%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.02%)</title><rect x="86.6078%" y="325" width="0.0245%" height="15" fill="rgb(238,174,52)" fg:x="3531" fg:w="1"/><text x="86.8578%" y="335.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (5 samples, 0.12%)</title><rect x="86.5342%" y="341" width="0.1226%" height="15" fill="rgb(230,73,7)" fg:x="3528" fg:w="5"/><text x="86.7842%" y="351.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.02%)</title><rect x="86.6323%" y="325" width="0.0245%" height="15" fill="rgb(243,124,40)" fg:x="3532" fg:w="1"/><text x="86.8823%" y="335.50"></text></g><g><title>chacha20::backends::avx2::inner (1 samples, 0.02%)</title><rect x="86.6569%" y="341" width="0.0245%" height="15" fill="rgb(244,170,11)" fg:x="3533" fg:w="1"/><text x="86.9069%" y="351.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (2 samples, 0.05%)</title><rect x="86.6814%" y="325" width="0.0491%" height="15" fill="rgb(207,114,54)" fg:x="3534" fg:w="2"/><text x="86.9314%" y="335.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (3 samples, 0.07%)</title><rect x="86.6814%" y="341" width="0.0736%" height="15" fill="rgb(205,42,20)" fg:x="3534" fg:w="3"/><text x="86.9314%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.02%)</title><rect x="86.7304%" y="325" width="0.0245%" height="15" fill="rgb(230,30,28)" fg:x="3536" fg:w="1"/><text x="86.9804%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.02%)</title><rect x="86.7550%" y="341" width="0.0245%" height="15" fill="rgb(205,73,54)" fg:x="3537" fg:w="1"/><text x="87.0050%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.02%)</title><rect x="86.7795%" y="341" width="0.0245%" height="15" fill="rgb(254,227,23)" fg:x="3538" fg:w="1"/><text x="87.0295%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect x="86.8040%" y="341" width="0.0245%" height="15" fill="rgb(228,202,34)" fg:x="3539" fg:w="1"/><text x="87.0540%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (7 samples, 0.17%)</title><rect x="86.8286%" y="341" width="0.1717%" height="15" fill="rgb(222,225,37)" fg:x="3540" fg:w="7"/><text x="87.0786%" y="351.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (3 samples, 0.07%)</title><rect x="87.0002%" y="341" width="0.0736%" height="15" fill="rgb(221,14,54)" fg:x="3547" fg:w="3"/><text x="87.2502%" y="351.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.05%)</title><rect x="87.0738%" y="341" width="0.0491%" height="15" fill="rgb(254,102,2)" fg:x="3550" fg:w="2"/><text x="87.3238%" y="351.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (6 samples, 0.15%)</title><rect x="87.1229%" y="341" width="0.1472%" height="15" fill="rgb(232,104,17)" fg:x="3552" fg:w="6"/><text x="87.3729%" y="351.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (122 samples, 2.99%)</title><rect x="84.3512%" y="357" width="2.9924%" height="15" fill="rgb(250,220,14)" fg:x="3439" fg:w="122"/><text x="84.6012%" y="367.50">cha..</text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (3 samples, 0.07%)</title><rect x="87.2701%" y="341" width="0.0736%" height="15" fill="rgb(241,158,9)" fg:x="3558" fg:w="3"/><text x="87.5201%" y="351.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::decrypt_in_place_detached (321 samples, 7.87%)</title><rect x="79.5193%" y="533" width="7.8734%" height="15" fill="rgb(246,9,43)" fg:x="3242" fg:w="321"/><text x="79.7693%" y="543.50">chacha20pol..</text></g><g><title>cipher::stream::StreamCipher::apply_keystream (321 samples, 7.87%)</title><rect x="79.5193%" y="517" width="7.8734%" height="15" fill="rgb(206,73,33)" fg:x="3242" fg:w="321"/><text x="79.7693%" y="527.50">cipher::str..</text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (321 samples, 7.87%)</title><rect x="79.5193%" y="501" width="7.8734%" height="15" fill="rgb(222,79,8)" fg:x="3242" fg:w="321"/><text x="79.7693%" y="511.50">cipher::str..</text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (321 samples, 7.87%)</title><rect x="79.5193%" y="485" width="7.8734%" height="15" fill="rgb(234,8,54)" fg:x="3242" fg:w="321"/><text x="79.7693%" y="495.50">&lt;cipher::st..</text></g><g><title>cipher::stream_core::StreamCipherCore::write_keystream_block (124 samples, 3.04%)</title><rect x="84.3512%" y="469" width="3.0415%" height="15" fill="rgb(209,134,38)" fg:x="3439" fg:w="124"/><text x="84.6012%" y="479.50">cip..</text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (124 samples, 3.04%)</title><rect x="84.3512%" y="453" width="3.0415%" height="15" fill="rgb(230,127,29)" fg:x="3439" fg:w="124"/><text x="84.6012%" y="463.50">&lt;ch..</text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (124 samples, 3.04%)</title><rect x="84.3512%" y="437" width="3.0415%" height="15" fill="rgb(242,44,41)" fg:x="3439" fg:w="124"/><text x="84.6012%" y="447.50">&lt;ch..</text></g><g><title>chacha20::backends::avx2::inner (124 samples, 3.04%)</title><rect x="84.3512%" y="421" width="3.0415%" height="15" fill="rgb(222,56,43)" fg:x="3439" fg:w="124"/><text x="84.6012%" y="431.50">cha..</text></g><g><title>&lt;cipher::stream_core::WriteBlockCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (124 samples, 3.04%)</title><rect x="84.3512%" y="405" width="3.0415%" height="15" fill="rgb(238,39,47)" fg:x="3439" fg:w="124"/><text x="84.6012%" y="415.50">&lt;ci..</text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (124 samples, 3.04%)</title><rect x="84.3512%" y="389" width="3.0415%" height="15" fill="rgb(226,79,43)" fg:x="3439" fg:w="124"/><text x="84.6012%" y="399.50">&lt;ch..</text></g><g><title>chacha20::backends::avx2::rounds (124 samples, 3.04%)</title><rect x="84.3512%" y="373" width="3.0415%" height="15" fill="rgb(242,105,53)" fg:x="3439" fg:w="124"/><text x="84.6012%" y="383.50">cha..</text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (2 samples, 0.05%)</title><rect x="87.3436%" y="357" width="0.0491%" height="15" fill="rgb(251,132,46)" fg:x="3561" fg:w="2"/><text x="87.5936%" y="367.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.02%)</title><rect x="87.3927%" y="485" width="0.0245%" height="15" fill="rgb(231,77,14)" fg:x="3563" fg:w="1"/><text x="87.6427%" y="495.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.02%)</title><rect x="87.3927%" y="469" width="0.0245%" height="15" fill="rgb(240,135,9)" fg:x="3563" fg:w="1"/><text x="87.6427%" y="479.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.02%)</title><rect x="87.3927%" y="453" width="0.0245%" height="15" fill="rgb(248,109,14)" fg:x="3563" fg:w="1"/><text x="87.6427%" y="463.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.02%)</title><rect x="87.4172%" y="453" width="0.0245%" height="15" fill="rgb(227,146,52)" fg:x="3564" fg:w="1"/><text x="87.6672%" y="463.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.02%)</title><rect x="87.4172%" y="437" width="0.0245%" height="15" fill="rgb(232,54,3)" fg:x="3564" fg:w="1"/><text x="87.6672%" y="447.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.02%)</title><rect x="87.4172%" y="421" width="0.0245%" height="15" fill="rgb(229,201,43)" fg:x="3564" fg:w="1"/><text x="87.6672%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="87.4417%" y="453" width="0.0245%" height="15" fill="rgb(252,161,33)" fg:x="3565" fg:w="1"/><text x="87.6917%" y="463.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.02%)</title><rect x="87.4663%" y="437" width="0.0245%" height="15" fill="rgb(226,146,40)" fg:x="3566" fg:w="1"/><text x="87.7163%" y="447.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi64x (1 samples, 0.02%)</title><rect x="87.4663%" y="421" width="0.0245%" height="15" fill="rgb(219,47,25)" fg:x="3566" fg:w="1"/><text x="87.7163%" y="431.50"></text></g><g><title>core::core_arch::simd::i64x4::new (1 samples, 0.02%)</title><rect x="87.4663%" y="405" width="0.0245%" height="15" fill="rgb(250,135,13)" fg:x="3566" fg:w="1"/><text x="87.7163%" y="415.50"></text></g><g><title>poly1305::backend::avx2::helpers::adc (2 samples, 0.05%)</title><rect x="87.4663%" y="453" width="0.0491%" height="15" fill="rgb(219,229,18)" fg:x="3566" fg:w="2"/><text x="87.7163%" y="463.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.02%)</title><rect x="87.4908%" y="437" width="0.0245%" height="15" fill="rgb(217,152,27)" fg:x="3567" fg:w="1"/><text x="87.7408%" y="447.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.02%)</title><rect x="87.4908%" y="421" width="0.0245%" height="15" fill="rgb(225,71,47)" fg:x="3567" fg:w="1"/><text x="87.7408%" y="431.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.02%)</title><rect x="87.4908%" y="405" width="0.0245%" height="15" fill="rgb(220,139,14)" fg:x="3567" fg:w="1"/><text x="87.7408%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (1 samples, 0.02%)</title><rect x="87.5153%" y="437" width="0.0245%" height="15" fill="rgb(247,54,32)" fg:x="3568" fg:w="1"/><text x="87.7653%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srlv_epi64 (1 samples, 0.02%)</title><rect x="87.5399%" y="437" width="0.0245%" height="15" fill="rgb(252,131,39)" fg:x="3569" fg:w="1"/><text x="87.7899%" y="447.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.02%)</title><rect x="87.5399%" y="421" width="0.0245%" height="15" fill="rgb(210,108,39)" fg:x="3569" fg:w="1"/><text x="87.7899%" y="431.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.02%)</title><rect x="87.5399%" y="405" width="0.0245%" height="15" fill="rgb(205,23,29)" fg:x="3569" fg:w="1"/><text x="87.7899%" y="415.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.02%)</title><rect x="87.5399%" y="389" width="0.0245%" height="15" fill="rgb(246,139,46)" fg:x="3569" fg:w="1"/><text x="87.7899%" y="399.50"></text></g><g><title>core::core_arch::simd::i8x32::new (1 samples, 0.02%)</title><rect x="87.5399%" y="373" width="0.0245%" height="15" fill="rgb(250,81,26)" fg:x="3569" fg:w="1"/><text x="87.7899%" y="383.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced130::reduce (7 samples, 0.17%)</title><rect x="87.4172%" y="469" width="0.1717%" height="15" fill="rgb(214,104,7)" fg:x="3564" fg:w="7"/><text x="87.6672%" y="479.50"></text></g><g><title>poly1305::backend::avx2::helpers::red (3 samples, 0.07%)</title><rect x="87.5153%" y="453" width="0.0736%" height="15" fill="rgb(233,189,8)" fg:x="3568" fg:w="3"/><text x="87.7653%" y="463.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="87.5644%" y="437" width="0.0245%" height="15" fill="rgb(228,141,17)" fg:x="3570" fg:w="1"/><text x="87.8144%" y="447.50"></text></g><g><title>&lt;poly1305::Poly1305 as crypto_common::KeyInit&gt;::new (9 samples, 0.22%)</title><rect x="87.3927%" y="517" width="0.2208%" height="15" fill="rgb(247,157,1)" fg:x="3563" fg:w="9"/><text x="87.6427%" y="527.50"></text></g><g><title>poly1305::backend::autodetect::State::new (9 samples, 0.22%)</title><rect x="87.3927%" y="501" width="0.2208%" height="15" fill="rgb(249,225,5)" fg:x="3563" fg:w="9"/><text x="87.6427%" y="511.50"></text></g><g><title>poly1305::backend::avx2::State::new (8 samples, 0.20%)</title><rect x="87.4172%" y="485" width="0.1962%" height="15" fill="rgb(242,55,13)" fg:x="3564" fg:w="8"/><text x="87.6672%" y="495.50"></text></g><g><title>poly1305::backend::avx2::helpers::prepare_keys (1 samples, 0.02%)</title><rect x="87.5889%" y="469" width="0.0245%" height="15" fill="rgb(230,49,50)" fg:x="3571" fg:w="1"/><text x="87.8389%" y="479.50"></text></g><g><title>chacha20::backends::avx2::rounds (1 samples, 0.02%)</title><rect x="87.5889%" y="453" width="0.0245%" height="15" fill="rgb(241,111,38)" fg:x="3571" fg:w="1"/><text x="87.8389%" y="463.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.02%)</title><rect x="87.6134%" y="373" width="0.0245%" height="15" fill="rgb(252,155,4)" fg:x="3572" fg:w="1"/><text x="87.8634%" y="383.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="87.7606%" y="325" width="0.0491%" height="15" fill="rgb(212,69,32)" fg:x="3578" fg:w="2"/><text x="88.0106%" y="335.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (2 samples, 0.05%)</title><rect x="87.7606%" y="309" width="0.0491%" height="15" fill="rgb(243,107,47)" fg:x="3578" fg:w="2"/><text x="88.0106%" y="319.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (16 samples, 0.39%)</title><rect x="87.8097%" y="325" width="0.3924%" height="15" fill="rgb(247,130,12)" fg:x="3580" fg:w="16"/><text x="88.0597%" y="335.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (1 samples, 0.02%)</title><rect x="88.2021%" y="325" width="0.0245%" height="15" fill="rgb(233,74,16)" fg:x="3596" fg:w="1"/><text x="88.4521%" y="335.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (2 samples, 0.05%)</title><rect x="88.2266%" y="325" width="0.0491%" height="15" fill="rgb(208,58,18)" fg:x="3597" fg:w="2"/><text x="88.4766%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.02%)</title><rect x="88.3738%" y="309" width="0.0245%" height="15" fill="rgb(242,225,1)" fg:x="3603" fg:w="1"/><text x="88.6238%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (6 samples, 0.15%)</title><rect x="88.2757%" y="325" width="0.1472%" height="15" fill="rgb(249,39,40)" fg:x="3599" fg:w="6"/><text x="88.5257%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.02%)</title><rect x="88.3983%" y="309" width="0.0245%" height="15" fill="rgb(207,72,44)" fg:x="3604" fg:w="1"/><text x="88.6483%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.02%)</title><rect x="88.4229%" y="325" width="0.0245%" height="15" fill="rgb(215,193,12)" fg:x="3605" fg:w="1"/><text x="88.6729%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.02%)</title><rect x="88.4964%" y="309" width="0.0245%" height="15" fill="rgb(248,41,39)" fg:x="3608" fg:w="1"/><text x="88.7464%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (5 samples, 0.12%)</title><rect x="88.4474%" y="325" width="0.1226%" height="15" fill="rgb(253,85,4)" fg:x="3606" fg:w="5"/><text x="88.6974%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (2 samples, 0.05%)</title><rect x="88.5210%" y="309" width="0.0491%" height="15" fill="rgb(243,70,31)" fg:x="3609" fg:w="2"/><text x="88.7710%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.02%)</title><rect x="88.5700%" y="309" width="0.0245%" height="15" fill="rgb(253,195,26)" fg:x="3611" fg:w="1"/><text x="88.8200%" y="319.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.02%)</title><rect x="88.5946%" y="309" width="0.0245%" height="15" fill="rgb(243,42,11)" fg:x="3612" fg:w="1"/><text x="88.8446%" y="319.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi64x (1 samples, 0.02%)</title><rect x="88.5946%" y="293" width="0.0245%" height="15" fill="rgb(239,66,17)" fg:x="3612" fg:w="1"/><text x="88.8446%" y="303.50"></text></g><g><title>core::core_arch::simd::i64x4::new (1 samples, 0.02%)</title><rect x="88.5946%" y="277" width="0.0245%" height="15" fill="rgb(217,132,21)" fg:x="3612" fg:w="1"/><text x="88.8446%" y="287.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (3 samples, 0.07%)</title><rect x="88.5700%" y="325" width="0.0736%" height="15" fill="rgb(252,202,21)" fg:x="3611" fg:w="3"/><text x="88.8200%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.02%)</title><rect x="88.6191%" y="309" width="0.0245%" height="15" fill="rgb(233,98,36)" fg:x="3613" fg:w="1"/><text x="88.8691%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (3 samples, 0.07%)</title><rect x="88.6436%" y="325" width="0.0736%" height="15" fill="rgb(216,153,54)" fg:x="3614" fg:w="3"/><text x="88.8936%" y="335.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.02%)</title><rect x="88.6927%" y="309" width="0.0245%" height="15" fill="rgb(250,99,7)" fg:x="3616" fg:w="1"/><text x="88.9427%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (20 samples, 0.49%)</title><rect x="88.7172%" y="325" width="0.4906%" height="15" fill="rgb(207,56,50)" fg:x="3617" fg:w="20"/><text x="88.9672%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.02%)</title><rect x="89.1832%" y="309" width="0.0245%" height="15" fill="rgb(244,61,34)" fg:x="3636" fg:w="1"/><text x="89.4332%" y="319.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.02%)</title><rect x="89.2078%" y="325" width="0.0245%" height="15" fill="rgb(241,50,38)" fg:x="3637" fg:w="1"/><text x="89.4578%" y="335.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.02%)</title><rect x="89.2323%" y="325" width="0.0245%" height="15" fill="rgb(212,166,30)" fg:x="3638" fg:w="1"/><text x="89.4823%" y="335.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.02%)</title><rect x="89.2323%" y="309" width="0.0245%" height="15" fill="rgb(249,127,32)" fg:x="3638" fg:w="1"/><text x="89.4823%" y="319.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.02%)</title><rect x="89.2323%" y="293" width="0.0245%" height="15" fill="rgb(209,103,0)" fg:x="3638" fg:w="1"/><text x="89.4823%" y="303.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (4 samples, 0.10%)</title><rect x="89.2568%" y="325" width="0.0981%" height="15" fill="rgb(238,209,51)" fg:x="3639" fg:w="4"/><text x="89.5068%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (7 samples, 0.17%)</title><rect x="89.3549%" y="325" width="0.1717%" height="15" fill="rgb(237,56,23)" fg:x="3643" fg:w="7"/><text x="89.6049%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (2 samples, 0.05%)</title><rect x="89.5266%" y="325" width="0.0491%" height="15" fill="rgb(215,153,46)" fg:x="3650" fg:w="2"/><text x="89.7766%" y="335.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (82 samples, 2.01%)</title><rect x="87.6380%" y="341" width="2.0113%" height="15" fill="rgb(224,49,31)" fg:x="3573" fg:w="82"/><text x="87.8880%" y="351.50">c..</text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (3 samples, 0.07%)</title><rect x="89.5757%" y="325" width="0.0736%" height="15" fill="rgb(250,18,42)" fg:x="3652" fg:w="3"/><text x="89.8257%" y="335.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.02%)</title><rect x="89.6493%" y="325" width="0.0245%" height="15" fill="rgb(215,176,39)" fg:x="3655" fg:w="1"/><text x="89.8993%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.02%)</title><rect x="89.6738%" y="309" width="0.0245%" height="15" fill="rgb(223,77,29)" fg:x="3656" fg:w="1"/><text x="89.9238%" y="319.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (3 samples, 0.07%)</title><rect x="89.6493%" y="341" width="0.0736%" height="15" fill="rgb(234,94,52)" fg:x="3655" fg:w="3"/><text x="89.8993%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (2 samples, 0.05%)</title><rect x="89.6738%" y="325" width="0.0491%" height="15" fill="rgb(220,154,50)" fg:x="3656" fg:w="2"/><text x="89.9238%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="89.6983%" y="309" width="0.0245%" height="15" fill="rgb(212,11,10)" fg:x="3657" fg:w="1"/><text x="89.9483%" y="319.50"></text></g><g><title>chacha20::backends::avx2::inner (1 samples, 0.02%)</title><rect x="89.7228%" y="341" width="0.0245%" height="15" fill="rgb(205,166,19)" fg:x="3658" fg:w="1"/><text x="89.9728%" y="351.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.02%)</title><rect x="89.7719%" y="325" width="0.0245%" height="15" fill="rgb(244,198,16)" fg:x="3660" fg:w="1"/><text x="90.0219%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.02%)</title><rect x="89.7964%" y="325" width="0.0245%" height="15" fill="rgb(219,69,12)" fg:x="3661" fg:w="1"/><text x="90.0464%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect x="89.7964%" y="309" width="0.0245%" height="15" fill="rgb(245,30,7)" fg:x="3661" fg:w="1"/><text x="90.0464%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.02%)</title><rect x="89.8209%" y="325" width="0.0245%" height="15" fill="rgb(218,221,48)" fg:x="3662" fg:w="1"/><text x="90.0709%" y="335.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (5 samples, 0.12%)</title><rect x="89.7474%" y="341" width="0.1226%" height="15" fill="rgb(216,66,15)" fg:x="3659" fg:w="5"/><text x="89.9974%" y="351.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.02%)</title><rect x="89.8455%" y="325" width="0.0245%" height="15" fill="rgb(226,122,50)" fg:x="3663" fg:w="1"/><text x="90.0955%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.02%)</title><rect x="89.8700%" y="341" width="0.0245%" height="15" fill="rgb(239,156,16)" fg:x="3664" fg:w="1"/><text x="90.1200%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.02%)</title><rect x="89.8945%" y="341" width="0.0245%" height="15" fill="rgb(224,27,38)" fg:x="3665" fg:w="1"/><text x="90.1445%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect x="89.9191%" y="341" width="0.0245%" height="15" fill="rgb(224,39,27)" fg:x="3666" fg:w="1"/><text x="90.1691%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.02%)</title><rect x="89.9436%" y="341" width="0.0245%" height="15" fill="rgb(215,92,29)" fg:x="3667" fg:w="1"/><text x="90.1936%" y="351.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.02%)</title><rect x="89.9436%" y="325" width="0.0245%" height="15" fill="rgb(207,159,16)" fg:x="3667" fg:w="1"/><text x="90.1936%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (3 samples, 0.07%)</title><rect x="89.9681%" y="341" width="0.0736%" height="15" fill="rgb(238,163,47)" fg:x="3668" fg:w="3"/><text x="90.2181%" y="351.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.02%)</title><rect x="90.0417%" y="341" width="0.0245%" height="15" fill="rgb(219,91,49)" fg:x="3671" fg:w="1"/><text x="90.2917%" y="351.50"></text></g><g><title>tftp::server::connection::Connection&lt;B,Rng&gt;::decrypt_packet (434 samples, 10.65%)</title><rect x="79.5193%" y="597" width="10.6451%" height="15" fill="rgb(227,167,31)" fg:x="3242" fg:w="434"/><text x="79.7693%" y="607.50">tftp::server::co..</text></g><g><title>tftp::encrypted_packet::EncryptedPacket::decrypt (434 samples, 10.65%)</title><rect x="79.5193%" y="581" width="10.6451%" height="15" fill="rgb(234,80,54)" fg:x="3242" fg:w="434"/><text x="79.7693%" y="591.50">tftp::encrypted_..</text></g><g><title>tftp::encryption::Encryptor&lt;R&gt;::decrypt (434 samples, 10.65%)</title><rect x="79.5193%" y="565" width="10.6451%" height="15" fill="rgb(212,114,2)" fg:x="3242" fg:w="434"/><text x="79.7693%" y="575.50">tftp::encryption..</text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (434 samples, 10.65%)</title><rect x="79.5193%" y="549" width="10.6451%" height="15" fill="rgb(234,50,24)" fg:x="3242" fg:w="434"/><text x="79.7693%" y="559.50">&lt;chacha20poly130..</text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (113 samples, 2.77%)</title><rect x="87.3927%" y="533" width="2.7716%" height="15" fill="rgb(221,68,8)" fg:x="3563" fg:w="113"/><text x="87.6427%" y="543.50">ch..</text></g><g><title>cipher::stream::StreamCipher::apply_keystream (104 samples, 2.55%)</title><rect x="87.6134%" y="517" width="2.5509%" height="15" fill="rgb(254,180,31)" fg:x="3572" fg:w="104"/><text x="87.8634%" y="527.50">ci..</text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (104 samples, 2.55%)</title><rect x="87.6134%" y="501" width="2.5509%" height="15" fill="rgb(247,130,50)" fg:x="3572" fg:w="104"/><text x="87.8634%" y="511.50">ci..</text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (104 samples, 2.55%)</title><rect x="87.6134%" y="485" width="2.5509%" height="15" fill="rgb(211,109,4)" fg:x="3572" fg:w="104"/><text x="87.8634%" y="495.50">&lt;c..</text></g><g><title>cipher::stream_core::StreamCipherCore::write_keystream_block (104 samples, 2.55%)</title><rect x="87.6134%" y="469" width="2.5509%" height="15" fill="rgb(238,50,21)" fg:x="3572" fg:w="104"/><text x="87.8634%" y="479.50">ci..</text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (104 samples, 2.55%)</title><rect x="87.6134%" y="453" width="2.5509%" height="15" fill="rgb(225,57,45)" fg:x="3572" fg:w="104"/><text x="87.8634%" y="463.50">&lt;c..</text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (104 samples, 2.55%)</title><rect x="87.6134%" y="437" width="2.5509%" height="15" fill="rgb(209,196,50)" fg:x="3572" fg:w="104"/><text x="87.8634%" y="447.50">&lt;c..</text></g><g><title>chacha20::backends::avx2::inner (104 samples, 2.55%)</title><rect x="87.6134%" y="421" width="2.5509%" height="15" fill="rgb(242,140,13)" fg:x="3572" fg:w="104"/><text x="87.8634%" y="431.50">ch..</text></g><g><title>&lt;cipher::stream_core::WriteBlockCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (104 samples, 2.55%)</title><rect x="87.6134%" y="405" width="2.5509%" height="15" fill="rgb(217,111,7)" fg:x="3572" fg:w="104"/><text x="87.8634%" y="415.50">&lt;c..</text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (104 samples, 2.55%)</title><rect x="87.6134%" y="389" width="2.5509%" height="15" fill="rgb(253,193,51)" fg:x="3572" fg:w="104"/><text x="87.8634%" y="399.50">&lt;c..</text></g><g><title>chacha20::backends::avx2::rounds (103 samples, 2.53%)</title><rect x="87.6380%" y="373" width="2.5264%" height="15" fill="rgb(252,70,29)" fg:x="3573" fg:w="103"/><text x="87.8880%" y="383.50">ch..</text></g><g><title>chacha20::backends::avx2::double_quarter_round (103 samples, 2.53%)</title><rect x="87.6380%" y="357" width="2.5264%" height="15" fill="rgb(232,127,12)" fg:x="3573" fg:w="103"/><text x="87.8880%" y="367.50">ch..</text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (4 samples, 0.10%)</title><rect x="90.0662%" y="341" width="0.0981%" height="15" fill="rgb(211,180,21)" fg:x="3672" fg:w="4"/><text x="90.3162%" y="351.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (3 samples, 0.07%)</title><rect x="90.1643%" y="309" width="0.0736%" height="15" fill="rgb(229,72,13)" fg:x="3676" fg:w="3"/><text x="90.4143%" y="319.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (1 samples, 0.02%)</title><rect x="90.2379%" y="309" width="0.0245%" height="15" fill="rgb(240,211,49)" fg:x="3679" fg:w="1"/><text x="90.4879%" y="319.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.02%)</title><rect x="90.2870%" y="293" width="0.0245%" height="15" fill="rgb(219,149,40)" fg:x="3681" fg:w="1"/><text x="90.5370%" y="303.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (3 samples, 0.07%)</title><rect x="90.2624%" y="309" width="0.0736%" height="15" fill="rgb(210,127,46)" fg:x="3680" fg:w="3"/><text x="90.5124%" y="319.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.02%)</title><rect x="90.3115%" y="293" width="0.0245%" height="15" fill="rgb(220,106,7)" fg:x="3682" fg:w="1"/><text x="90.5615%" y="303.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect x="90.3360%" y="309" width="0.0245%" height="15" fill="rgb(249,31,22)" fg:x="3683" fg:w="1"/><text x="90.5860%" y="319.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.02%)</title><rect x="90.3360%" y="293" width="0.0245%" height="15" fill="rgb(253,1,49)" fg:x="3683" fg:w="1"/><text x="90.5860%" y="303.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.02%)</title><rect x="90.3606%" y="309" width="0.0245%" height="15" fill="rgb(227,144,33)" fg:x="3684" fg:w="1"/><text x="90.6106%" y="319.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.02%)</title><rect x="90.3606%" y="293" width="0.0245%" height="15" fill="rgb(249,163,44)" fg:x="3684" fg:w="1"/><text x="90.6106%" y="303.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (4 samples, 0.10%)</title><rect x="90.3851%" y="309" width="0.0981%" height="15" fill="rgb(234,15,39)" fg:x="3685" fg:w="4"/><text x="90.6351%" y="319.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.05%)</title><rect x="90.4832%" y="309" width="0.0491%" height="15" fill="rgb(207,66,16)" fg:x="3689" fg:w="2"/><text x="90.7332%" y="319.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="90.5323%" y="309" width="0.0245%" height="15" fill="rgb(233,112,24)" fg:x="3691" fg:w="1"/><text x="90.7823%" y="319.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (2 samples, 0.05%)</title><rect x="90.5568%" y="309" width="0.0491%" height="15" fill="rgb(230,90,22)" fg:x="3692" fg:w="2"/><text x="90.8068%" y="319.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (20 samples, 0.49%)</title><rect x="90.1643%" y="325" width="0.4906%" height="15" fill="rgb(229,61,13)" fg:x="3676" fg:w="20"/><text x="90.4143%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (2 samples, 0.05%)</title><rect x="90.6058%" y="309" width="0.0491%" height="15" fill="rgb(225,57,24)" fg:x="3694" fg:w="2"/><text x="90.8558%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.02%)</title><rect x="90.6549%" y="293" width="0.0245%" height="15" fill="rgb(208,169,48)" fg:x="3696" fg:w="1"/><text x="90.9049%" y="303.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (2 samples, 0.05%)</title><rect x="90.6549%" y="309" width="0.0491%" height="15" fill="rgb(244,218,51)" fg:x="3696" fg:w="2"/><text x="90.9049%" y="319.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="90.6794%" y="293" width="0.0245%" height="15" fill="rgb(214,148,10)" fg:x="3697" fg:w="1"/><text x="90.9294%" y="303.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.02%)</title><rect x="90.7039%" y="309" width="0.0245%" height="15" fill="rgb(225,174,27)" fg:x="3698" fg:w="1"/><text x="90.9539%" y="319.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (4 samples, 0.10%)</title><rect x="90.6549%" y="325" width="0.0981%" height="15" fill="rgb(230,96,26)" fg:x="3696" fg:w="4"/><text x="90.9049%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.02%)</title><rect x="90.7285%" y="309" width="0.0245%" height="15" fill="rgb(232,10,30)" fg:x="3699" fg:w="1"/><text x="90.9785%" y="319.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (1 samples, 0.02%)</title><rect x="90.7530%" y="325" width="0.0245%" height="15" fill="rgb(222,8,50)" fg:x="3700" fg:w="1"/><text x="91.0030%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.02%)</title><rect x="90.7530%" y="309" width="0.0245%" height="15" fill="rgb(213,81,27)" fg:x="3700" fg:w="1"/><text x="91.0030%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.02%)</title><rect x="90.7775%" y="325" width="0.0245%" height="15" fill="rgb(245,50,10)" fg:x="3701" fg:w="1"/><text x="91.0275%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect x="90.8021%" y="325" width="0.0245%" height="15" fill="rgb(216,100,18)" fg:x="3702" fg:w="1"/><text x="91.0521%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (2 samples, 0.05%)</title><rect x="90.8266%" y="325" width="0.0491%" height="15" fill="rgb(236,147,54)" fg:x="3703" fg:w="2"/><text x="91.0766%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.05%)</title><rect x="90.8756%" y="325" width="0.0491%" height="15" fill="rgb(205,143,26)" fg:x="3705" fg:w="2"/><text x="91.1256%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.02%)</title><rect x="90.9247%" y="325" width="0.0245%" height="15" fill="rgb(236,26,9)" fg:x="3707" fg:w="1"/><text x="91.1747%" y="335.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (33 samples, 0.81%)</title><rect x="90.1643%" y="501" width="0.8094%" height="15" fill="rgb(221,165,53)" fg:x="3676" fg:w="33"/><text x="90.4143%" y="511.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (33 samples, 0.81%)</title><rect x="90.1643%" y="485" width="0.8094%" height="15" fill="rgb(214,110,17)" fg:x="3676" fg:w="33"/><text x="90.4143%" y="495.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (33 samples, 0.81%)</title><rect x="90.1643%" y="469" width="0.8094%" height="15" fill="rgb(237,197,12)" fg:x="3676" fg:w="33"/><text x="90.4143%" y="479.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::write_keystream_block (33 samples, 0.81%)</title><rect x="90.1643%" y="453" width="0.8094%" height="15" fill="rgb(205,84,17)" fg:x="3676" fg:w="33"/><text x="90.4143%" y="463.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (33 samples, 0.81%)</title><rect x="90.1643%" y="437" width="0.8094%" height="15" fill="rgb(237,18,45)" fg:x="3676" fg:w="33"/><text x="90.4143%" y="447.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (33 samples, 0.81%)</title><rect x="90.1643%" y="421" width="0.8094%" height="15" fill="rgb(221,87,14)" fg:x="3676" fg:w="33"/><text x="90.4143%" y="431.50"></text></g><g><title>chacha20::backends::avx2::inner (33 samples, 0.81%)</title><rect x="90.1643%" y="405" width="0.8094%" height="15" fill="rgb(238,186,15)" fg:x="3676" fg:w="33"/><text x="90.4143%" y="415.50"></text></g><g><title>&lt;cipher::stream_core::WriteBlockCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (33 samples, 0.81%)</title><rect x="90.1643%" y="389" width="0.8094%" height="15" fill="rgb(208,115,11)" fg:x="3676" fg:w="33"/><text x="90.4143%" y="399.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (33 samples, 0.81%)</title><rect x="90.1643%" y="373" width="0.8094%" height="15" fill="rgb(254,175,0)" fg:x="3676" fg:w="33"/><text x="90.4143%" y="383.50"></text></g><g><title>chacha20::backends::avx2::rounds (33 samples, 0.81%)</title><rect x="90.1643%" y="357" width="0.8094%" height="15" fill="rgb(227,24,42)" fg:x="3676" fg:w="33"/><text x="90.4143%" y="367.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (33 samples, 0.81%)</title><rect x="90.1643%" y="341" width="0.8094%" height="15" fill="rgb(223,211,37)" fg:x="3676" fg:w="33"/><text x="90.4143%" y="351.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.02%)</title><rect x="90.9492%" y="325" width="0.0245%" height="15" fill="rgb(235,49,27)" fg:x="3708" fg:w="1"/><text x="91.1992%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (3 samples, 0.07%)</title><rect x="90.9738%" y="357" width="0.0736%" height="15" fill="rgb(254,97,51)" fg:x="3709" fg:w="3"/><text x="91.2238%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.02%)</title><rect x="91.0228%" y="341" width="0.0245%" height="15" fill="rgb(249,51,40)" fg:x="3711" fg:w="1"/><text x="91.2728%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (3 samples, 0.07%)</title><rect x="91.0473%" y="341" width="0.0736%" height="15" fill="rgb(210,128,45)" fg:x="3712" fg:w="3"/><text x="91.2973%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (1 samples, 0.02%)</title><rect x="91.1209%" y="341" width="0.0245%" height="15" fill="rgb(224,137,50)" fg:x="3715" fg:w="1"/><text x="91.3709%" y="351.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="91.1455%" y="341" width="0.0245%" height="15" fill="rgb(242,15,9)" fg:x="3716" fg:w="1"/><text x="91.3955%" y="351.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.02%)</title><rect x="91.1700%" y="341" width="0.0245%" height="15" fill="rgb(233,187,41)" fg:x="3717" fg:w="1"/><text x="91.4200%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (7 samples, 0.17%)</title><rect x="91.0473%" y="357" width="0.1717%" height="15" fill="rgb(227,2,29)" fg:x="3712" fg:w="7"/><text x="91.2973%" y="367.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (1 samples, 0.02%)</title><rect x="91.1945%" y="341" width="0.0245%" height="15" fill="rgb(222,70,3)" fg:x="3718" fg:w="1"/><text x="91.4445%" y="351.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (2 samples, 0.05%)</title><rect x="91.2190%" y="357" width="0.0491%" height="15" fill="rgb(213,11,42)" fg:x="3719" fg:w="2"/><text x="91.4690%" y="367.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::encrypt_in_place_detached (47 samples, 1.15%)</title><rect x="90.1643%" y="517" width="1.1528%" height="15" fill="rgb(225,150,9)" fg:x="3676" fg:w="47"/><text x="90.4143%" y="527.50"></text></g><g><title>universal_hash::UniversalHash::update_padded (14 samples, 0.34%)</title><rect x="90.9738%" y="501" width="0.3434%" height="15" fill="rgb(230,162,45)" fg:x="3709" fg:w="14"/><text x="91.2238%" y="511.50"></text></g><g><title>universal_hash::UniversalHash::update (14 samples, 0.34%)</title><rect x="90.9738%" y="485" width="0.3434%" height="15" fill="rgb(222,14,52)" fg:x="3709" fg:w="14"/><text x="91.2238%" y="495.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (14 samples, 0.34%)</title><rect x="90.9738%" y="469" width="0.3434%" height="15" fill="rgb(254,198,14)" fg:x="3709" fg:w="14"/><text x="91.2238%" y="479.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (14 samples, 0.34%)</title><rect x="90.9738%" y="453" width="0.3434%" height="15" fill="rgb(220,217,30)" fg:x="3709" fg:w="14"/><text x="91.2238%" y="463.50"></text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (14 samples, 0.34%)</title><rect x="90.9738%" y="437" width="0.3434%" height="15" fill="rgb(215,146,41)" fg:x="3709" fg:w="14"/><text x="91.2238%" y="447.50"></text></g><g><title>&lt;poly1305::backend::avx2::State as universal_hash::UhfBackend&gt;::proc_par_blocks (14 samples, 0.34%)</title><rect x="90.9738%" y="421" width="0.3434%" height="15" fill="rgb(217,27,36)" fg:x="3709" fg:w="14"/><text x="91.2238%" y="431.50"></text></g><g><title>poly1305::backend::avx2::State::compute_par_blocks (14 samples, 0.34%)</title><rect x="90.9738%" y="405" width="0.3434%" height="15" fill="rgb(219,218,39)" fg:x="3709" fg:w="14"/><text x="91.2238%" y="415.50"></text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_par_blocks (14 samples, 0.34%)</title><rect x="90.9738%" y="389" width="0.3434%" height="15" fill="rgb(219,4,42)" fg:x="3709" fg:w="14"/><text x="91.2238%" y="399.50"></text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_loaded_blocks (14 samples, 0.34%)</title><rect x="90.9738%" y="373" width="0.3434%" height="15" fill="rgb(249,119,36)" fg:x="3709" fg:w="14"/><text x="91.2238%" y="383.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (2 samples, 0.05%)</title><rect x="91.2681%" y="357" width="0.0491%" height="15" fill="rgb(209,23,33)" fg:x="3721" fg:w="2"/><text x="91.5181%" y="367.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.02%)</title><rect x="91.3171%" y="453" width="0.0245%" height="15" fill="rgb(211,10,0)" fg:x="3723" fg:w="1"/><text x="91.5671%" y="463.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier as core::convert::From&lt;poly1305::backend::avx2::helpers::Aligned130&gt;&gt;::from (1 samples, 0.02%)</title><rect x="91.3171%" y="437" width="0.0245%" height="15" fill="rgb(208,99,37)" fg:x="3723" fg:w="1"/><text x="91.5671%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="91.3171%" y="421" width="0.0245%" height="15" fill="rgb(213,132,31)" fg:x="3723" fg:w="1"/><text x="91.5671%" y="431.50"></text></g><g><title>&lt;poly1305::Poly1305 as crypto_common::KeyInit&gt;::new (2 samples, 0.05%)</title><rect x="91.3171%" y="501" width="0.0491%" height="15" fill="rgb(243,129,40)" fg:x="3723" fg:w="2"/><text x="91.5671%" y="511.50"></text></g><g><title>poly1305::backend::autodetect::State::new (2 samples, 0.05%)</title><rect x="91.3171%" y="485" width="0.0491%" height="15" fill="rgb(210,66,33)" fg:x="3723" fg:w="2"/><text x="91.5671%" y="495.50"></text></g><g><title>poly1305::backend::avx2::State::new (2 samples, 0.05%)</title><rect x="91.3171%" y="469" width="0.0491%" height="15" fill="rgb(209,189,4)" fg:x="3723" fg:w="2"/><text x="91.5671%" y="479.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced130::reduce (1 samples, 0.02%)</title><rect x="91.3417%" y="453" width="0.0245%" height="15" fill="rgb(214,107,37)" fg:x="3724" fg:w="1"/><text x="91.5917%" y="463.50"></text></g><g><title>poly1305::backend::avx2::helpers::adc (1 samples, 0.02%)</title><rect x="91.3417%" y="437" width="0.0245%" height="15" fill="rgb(245,88,54)" fg:x="3724" fg:w="1"/><text x="91.5917%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (1 samples, 0.02%)</title><rect x="91.3417%" y="421" width="0.0245%" height="15" fill="rgb(205,146,20)" fg:x="3724" fg:w="1"/><text x="91.5917%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="91.3417%" y="405" width="0.0245%" height="15" fill="rgb(220,161,25)" fg:x="3724" fg:w="1"/><text x="91.5917%" y="415.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (3 samples, 0.07%)</title><rect x="91.4398%" y="309" width="0.0736%" height="15" fill="rgb(215,152,15)" fg:x="3728" fg:w="3"/><text x="91.6898%" y="319.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (2 samples, 0.05%)</title><rect x="91.5134%" y="309" width="0.0491%" height="15" fill="rgb(233,192,44)" fg:x="3731" fg:w="2"/><text x="91.7634%" y="319.50"></text></g><g><title>chacha20::backends::avx2::inner (1 samples, 0.02%)</title><rect x="91.5624%" y="309" width="0.0245%" height="15" fill="rgb(240,170,46)" fg:x="3733" fg:w="1"/><text x="91.8124%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.02%)</title><rect x="91.5870%" y="309" width="0.0245%" height="15" fill="rgb(207,104,33)" fg:x="3734" fg:w="1"/><text x="91.8370%" y="319.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.02%)</title><rect x="91.5870%" y="293" width="0.0245%" height="15" fill="rgb(219,21,39)" fg:x="3734" fg:w="1"/><text x="91.8370%" y="303.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.02%)</title><rect x="91.6115%" y="309" width="0.0245%" height="15" fill="rgb(214,133,29)" fg:x="3735" fg:w="1"/><text x="91.8615%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect x="91.6360%" y="309" width="0.0245%" height="15" fill="rgb(226,93,6)" fg:x="3736" fg:w="1"/><text x="91.8860%" y="319.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.02%)</title><rect x="91.6360%" y="293" width="0.0245%" height="15" fill="rgb(252,222,34)" fg:x="3736" fg:w="1"/><text x="91.8860%" y="303.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.02%)</title><rect x="91.6605%" y="309" width="0.0245%" height="15" fill="rgb(252,92,48)" fg:x="3737" fg:w="1"/><text x="91.9105%" y="319.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.02%)</title><rect x="91.6605%" y="293" width="0.0245%" height="15" fill="rgb(245,223,24)" fg:x="3737" fg:w="1"/><text x="91.9105%" y="303.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (2 samples, 0.05%)</title><rect x="91.6851%" y="309" width="0.0491%" height="15" fill="rgb(205,176,3)" fg:x="3738" fg:w="2"/><text x="91.9351%" y="319.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.05%)</title><rect x="91.7341%" y="309" width="0.0491%" height="15" fill="rgb(235,151,15)" fg:x="3740" fg:w="2"/><text x="91.9841%" y="319.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (4 samples, 0.10%)</title><rect x="91.7832%" y="309" width="0.0981%" height="15" fill="rgb(237,209,11)" fg:x="3742" fg:w="4"/><text x="92.0332%" y="319.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.02%)</title><rect x="91.8813%" y="309" width="0.0245%" height="15" fill="rgb(243,227,24)" fg:x="3746" fg:w="1"/><text x="92.1313%" y="319.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (23 samples, 0.56%)</title><rect x="91.3662%" y="325" width="0.5641%" height="15" fill="rgb(239,193,16)" fg:x="3725" fg:w="23"/><text x="91.6162%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.02%)</title><rect x="91.9058%" y="309" width="0.0245%" height="15" fill="rgb(231,27,9)" fg:x="3747" fg:w="1"/><text x="92.1558%" y="319.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.02%)</title><rect x="91.9303%" y="293" width="0.0245%" height="15" fill="rgb(219,169,10)" fg:x="3748" fg:w="1"/><text x="92.1803%" y="303.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (2 samples, 0.05%)</title><rect x="91.9303%" y="325" width="0.0491%" height="15" fill="rgb(244,229,43)" fg:x="3748" fg:w="2"/><text x="92.1803%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (2 samples, 0.05%)</title><rect x="91.9303%" y="309" width="0.0491%" height="15" fill="rgb(254,38,20)" fg:x="3748" fg:w="2"/><text x="92.1803%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.02%)</title><rect x="91.9549%" y="293" width="0.0245%" height="15" fill="rgb(250,47,30)" fg:x="3749" fg:w="1"/><text x="92.2049%" y="303.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (1 samples, 0.02%)</title><rect x="91.9794%" y="325" width="0.0245%" height="15" fill="rgb(224,124,36)" fg:x="3750" fg:w="1"/><text x="92.2294%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.02%)</title><rect x="91.9794%" y="309" width="0.0245%" height="15" fill="rgb(246,68,51)" fg:x="3750" fg:w="1"/><text x="92.2294%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.02%)</title><rect x="92.0039%" y="325" width="0.0245%" height="15" fill="rgb(253,43,49)" fg:x="3751" fg:w="1"/><text x="92.2539%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect x="92.0285%" y="325" width="0.0245%" height="15" fill="rgb(219,54,36)" fg:x="3752" fg:w="1"/><text x="92.2785%" y="335.50"></text></g><g><title>tftp::server::helpers::write::handle_write (513 samples, 12.58%)</title><rect x="79.5193%" y="613" width="12.5828%" height="15" fill="rgb(227,133,34)" fg:x="3242" fg:w="513"/><text x="79.7693%" y="623.50">tftp::server::helpe..</text></g><g><title>tftp::server::connection::Connection&lt;B,Rng&gt;::send_packet (79 samples, 1.94%)</title><rect x="90.1643%" y="597" width="1.9377%" height="15" fill="rgb(247,227,15)" fg:x="3676" fg:w="79"/><text x="90.4143%" y="607.50">t..</text></g><g><title>tftp::server::connection::Connection&lt;B,Rng&gt;::send_bytes (79 samples, 1.94%)</title><rect x="90.1643%" y="581" width="1.9377%" height="15" fill="rgb(229,96,14)" fg:x="3676" fg:w="79"/><text x="90.4143%" y="591.50">t..</text></g><g><title>tftp::encrypted_packet::EncryptedPacket::encrypt (79 samples, 1.94%)</title><rect x="90.1643%" y="565" width="1.9377%" height="15" fill="rgb(220,79,17)" fg:x="3676" fg:w="79"/><text x="90.4143%" y="575.50">t..</text></g><g><title>tftp::encryption::Encryptor&lt;R&gt;::encrypt (79 samples, 1.94%)</title><rect x="90.1643%" y="549" width="1.9377%" height="15" fill="rgb(205,131,53)" fg:x="3676" fg:w="79"/><text x="90.4143%" y="559.50">t..</text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::encrypt_in_place_detached (79 samples, 1.94%)</title><rect x="90.1643%" y="533" width="1.9377%" height="15" fill="rgb(209,50,29)" fg:x="3676" fg:w="79"/><text x="90.4143%" y="543.50">&lt;..</text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (32 samples, 0.78%)</title><rect x="91.3171%" y="517" width="0.7849%" height="15" fill="rgb(245,86,46)" fg:x="3723" fg:w="32"/><text x="91.5671%" y="527.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (30 samples, 0.74%)</title><rect x="91.3662%" y="501" width="0.7358%" height="15" fill="rgb(235,66,46)" fg:x="3725" fg:w="30"/><text x="91.6162%" y="511.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (30 samples, 0.74%)</title><rect x="91.3662%" y="485" width="0.7358%" height="15" fill="rgb(232,148,31)" fg:x="3725" fg:w="30"/><text x="91.6162%" y="495.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (30 samples, 0.74%)</title><rect x="91.3662%" y="469" width="0.7358%" height="15" fill="rgb(217,149,8)" fg:x="3725" fg:w="30"/><text x="91.6162%" y="479.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::write_keystream_block (30 samples, 0.74%)</title><rect x="91.3662%" y="453" width="0.7358%" height="15" fill="rgb(209,183,11)" fg:x="3725" fg:w="30"/><text x="91.6162%" y="463.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (30 samples, 0.74%)</title><rect x="91.3662%" y="437" width="0.7358%" height="15" fill="rgb(208,55,20)" fg:x="3725" fg:w="30"/><text x="91.6162%" y="447.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (30 samples, 0.74%)</title><rect x="91.3662%" y="421" width="0.7358%" height="15" fill="rgb(218,39,14)" fg:x="3725" fg:w="30"/><text x="91.6162%" y="431.50"></text></g><g><title>chacha20::backends::avx2::inner (30 samples, 0.74%)</title><rect x="91.3662%" y="405" width="0.7358%" height="15" fill="rgb(216,169,33)" fg:x="3725" fg:w="30"/><text x="91.6162%" y="415.50"></text></g><g><title>&lt;cipher::stream_core::WriteBlockCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (30 samples, 0.74%)</title><rect x="91.3662%" y="389" width="0.7358%" height="15" fill="rgb(233,80,24)" fg:x="3725" fg:w="30"/><text x="91.6162%" y="399.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (30 samples, 0.74%)</title><rect x="91.3662%" y="373" width="0.7358%" height="15" fill="rgb(213,179,31)" fg:x="3725" fg:w="30"/><text x="91.6162%" y="383.50"></text></g><g><title>chacha20::backends::avx2::rounds (30 samples, 0.74%)</title><rect x="91.3662%" y="357" width="0.7358%" height="15" fill="rgb(209,19,5)" fg:x="3725" fg:w="30"/><text x="91.6162%" y="367.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (30 samples, 0.74%)</title><rect x="91.3662%" y="341" width="0.7358%" height="15" fill="rgb(219,18,35)" fg:x="3725" fg:w="30"/><text x="91.6162%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (2 samples, 0.05%)</title><rect x="92.0530%" y="325" width="0.0491%" height="15" fill="rgb(209,169,16)" fg:x="3753" fg:w="2"/><text x="92.3030%" y="335.50"></text></g><g><title>tftp::server::single_thread::send_data_blocks (1 samples, 0.02%)</title><rect x="92.1020%" y="613" width="0.0245%" height="15" fill="rgb(245,90,51)" fg:x="3755" fg:w="1"/><text x="92.3520%" y="623.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::from_output (1 samples, 0.02%)</title><rect x="92.2247%" y="517" width="0.0245%" height="15" fill="rgb(220,99,45)" fg:x="3760" fg:w="1"/><text x="92.4747%" y="527.50"></text></g><g><title>polling::Poller::modify (2 samples, 0.05%)</title><rect x="92.2247%" y="565" width="0.0491%" height="15" fill="rgb(249,89,25)" fg:x="3760" fg:w="2"/><text x="92.4747%" y="575.50"></text></g><g><title>polling::Poller::modify_with_mode (2 samples, 0.05%)</title><rect x="92.2247%" y="549" width="0.0491%" height="15" fill="rgb(239,193,0)" fg:x="3760" fg:w="2"/><text x="92.4747%" y="559.50"></text></g><g><title>polling::epoll::Poller::modify (2 samples, 0.05%)</title><rect x="92.2247%" y="533" width="0.0491%" height="15" fill="rgb(231,126,1)" fg:x="3760" fg:w="2"/><text x="92.4747%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (1 samples, 0.02%)</title><rect x="92.2492%" y="517" width="0.0245%" height="15" fill="rgb(243,166,3)" fg:x="3761" fg:w="1"/><text x="92.4992%" y="527.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.02%)</title><rect x="92.2737%" y="453" width="0.0245%" height="15" fill="rgb(223,22,34)" fg:x="3762" fg:w="1"/><text x="92.5237%" y="463.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (1 samples, 0.02%)</title><rect x="92.2737%" y="437" width="0.0245%" height="15" fill="rgb(251,52,51)" fg:x="3762" fg:w="1"/><text x="92.5237%" y="447.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="92.2737%" y="421" width="0.0245%" height="15" fill="rgb(221,165,28)" fg:x="3762" fg:w="1"/><text x="92.5237%" y="431.50"></text></g><g><title>&lt;tftp::socket::UdpUnboundSocket as tftp::socket::Socket&gt;::modify_interest (4 samples, 0.10%)</title><rect x="92.2247%" y="581" width="0.0981%" height="15" fill="rgb(218,121,47)" fg:x="3760" fg:w="4"/><text x="92.4747%" y="591.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::remove (2 samples, 0.05%)</title><rect x="92.2737%" y="565" width="0.0491%" height="15" fill="rgb(209,120,9)" fg:x="3762" fg:w="2"/><text x="92.5237%" y="575.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::remove (2 samples, 0.05%)</title><rect x="92.2737%" y="549" width="0.0491%" height="15" fill="rgb(236,68,12)" fg:x="3762" fg:w="2"/><text x="92.5237%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (2 samples, 0.05%)</title><rect x="92.2737%" y="533" width="0.0491%" height="15" fill="rgb(225,194,26)" fg:x="3762" fg:w="2"/><text x="92.5237%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (2 samples, 0.05%)</title><rect x="92.2737%" y="517" width="0.0491%" height="15" fill="rgb(231,84,39)" fg:x="3762" fg:w="2"/><text x="92.5237%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (2 samples, 0.05%)</title><rect x="92.2737%" y="501" width="0.0491%" height="15" fill="rgb(210,11,45)" fg:x="3762" fg:w="2"/><text x="92.5237%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.05%)</title><rect x="92.2737%" y="485" width="0.0491%" height="15" fill="rgb(224,54,52)" fg:x="3762" fg:w="2"/><text x="92.5237%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (2 samples, 0.05%)</title><rect x="92.2737%" y="469" width="0.0491%" height="15" fill="rgb(238,102,14)" fg:x="3762" fg:w="2"/><text x="92.5237%" y="479.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (1 samples, 0.02%)</title><rect x="92.2983%" y="453" width="0.0245%" height="15" fill="rgb(243,160,52)" fg:x="3763" fg:w="1"/><text x="92.5483%" y="463.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.02%)</title><rect x="92.2983%" y="437" width="0.0245%" height="15" fill="rgb(216,114,19)" fg:x="3763" fg:w="1"/><text x="92.5483%" y="447.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (1 samples, 0.02%)</title><rect x="92.2983%" y="421" width="0.0245%" height="15" fill="rgb(244,166,37)" fg:x="3763" fg:w="1"/><text x="92.5483%" y="431.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (1 samples, 0.02%)</title><rect x="92.2983%" y="405" width="0.0245%" height="15" fill="rgb(246,29,44)" fg:x="3763" fg:w="1"/><text x="92.5483%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (1 samples, 0.02%)</title><rect x="92.2983%" y="389" width="0.0245%" height="15" fill="rgb(215,56,53)" fg:x="3763" fg:w="1"/><text x="92.5483%" y="399.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.02%)</title><rect x="92.3228%" y="581" width="0.0245%" height="15" fill="rgb(217,60,2)" fg:x="3764" fg:w="1"/><text x="92.5728%" y="591.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.02%)</title><rect x="92.3228%" y="565" width="0.0245%" height="15" fill="rgb(207,26,24)" fg:x="3764" fg:w="1"/><text x="92.5728%" y="575.50"></text></g><g><title>tftp::std_compat::io::from_io_err (1 samples, 0.02%)</title><rect x="92.3228%" y="549" width="0.0245%" height="15" fill="rgb(252,210,15)" fg:x="3764" fg:w="1"/><text x="92.5728%" y="559.50"></text></g><g><title>std::io::error::Error::kind (1 samples, 0.02%)</title><rect x="92.3228%" y="533" width="0.0245%" height="15" fill="rgb(253,209,26)" fg:x="3764" fg:w="1"/><text x="92.5728%" y="543.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.02%)</title><rect x="92.3228%" y="517" width="0.0245%" height="15" fill="rgb(238,170,14)" fg:x="3764" fg:w="1"/><text x="92.5728%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (1 samples, 0.02%)</title><rect x="92.3473%" y="565" width="0.0245%" height="15" fill="rgb(216,178,15)" fg:x="3765" fg:w="1"/><text x="92.5973%" y="575.50"></text></g><g><title>polling::Event::readable (1 samples, 0.02%)</title><rect x="92.4209%" y="549" width="0.0245%" height="15" fill="rgb(250,197,2)" fg:x="3768" fg:w="1"/><text x="92.6709%" y="559.50"></text></g><g><title>polling::Event::new (1 samples, 0.02%)</title><rect x="92.4209%" y="533" width="0.0245%" height="15" fill="rgb(212,70,42)" fg:x="3768" fg:w="1"/><text x="92.6709%" y="543.50"></text></g><g><title>rustix::backend::time::syscalls::timerfd_settime (1 samples, 0.02%)</title><rect x="92.4209%" y="517" width="0.0245%" height="15" fill="rgb(227,213,9)" fg:x="3768" fg:w="1"/><text x="92.6709%" y="527.50"></text></g><g><title>rustix::backend::arch::asm::syscall4 (1 samples, 0.02%)</title><rect x="92.4209%" y="501" width="0.0245%" height="15" fill="rgb(245,99,25)" fg:x="3768" fg:w="1"/><text x="92.6709%" y="511.50"></text></g><g><title>__entry_text_start (1 samples, 0.02%)</title><rect x="92.4209%" y="485" width="0.0245%" height="15" fill="rgb(250,82,29)" fg:x="3768" fg:w="1"/><text x="92.6709%" y="495.50"></text></g><g><title>rustix::backend::reg::nr (1 samples, 0.02%)</title><rect x="92.4454%" y="533" width="0.0245%" height="15" fill="rgb(241,226,54)" fg:x="3769" fg:w="1"/><text x="92.6954%" y="543.50"></text></g><g><title>eventfd_read (1 samples, 0.02%)</title><rect x="92.4700%" y="421" width="0.0245%" height="15" fill="rgb(221,99,41)" fg:x="3770" fg:w="1"/><text x="92.7200%" y="431.50"></text></g><g><title>_raw_spin_unlock_irq (1 samples, 0.02%)</title><rect x="92.4700%" y="405" width="0.0245%" height="15" fill="rgb(213,90,21)" fg:x="3770" fg:w="1"/><text x="92.7200%" y="415.50"></text></g><g><title>polling::epoll::Notifier::clear (3 samples, 0.07%)</title><rect x="92.4454%" y="549" width="0.0736%" height="15" fill="rgb(205,208,24)" fg:x="3769" fg:w="3"/><text x="92.6954%" y="559.50"></text></g><g><title>rustix::io::read_write::read (2 samples, 0.05%)</title><rect x="92.4700%" y="533" width="0.0491%" height="15" fill="rgb(246,31,12)" fg:x="3770" fg:w="2"/><text x="92.7200%" y="543.50"></text></g><g><title>rustix::backend::io::syscalls::read (2 samples, 0.05%)</title><rect x="92.4700%" y="517" width="0.0491%" height="15" fill="rgb(213,154,6)" fg:x="3770" fg:w="2"/><text x="92.7200%" y="527.50"></text></g><g><title>rustix::backend::arch::asm::syscall3 (2 samples, 0.05%)</title><rect x="92.4700%" y="501" width="0.0491%" height="15" fill="rgb(222,163,29)" fg:x="3770" fg:w="2"/><text x="92.7200%" y="511.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="92.4700%" y="485" width="0.0491%" height="15" fill="rgb(227,201,8)" fg:x="3770" fg:w="2"/><text x="92.7200%" y="495.50"></text></g><g><title>do_syscall_64 (2 samples, 0.05%)</title><rect x="92.4700%" y="469" width="0.0491%" height="15" fill="rgb(233,9,32)" fg:x="3770" fg:w="2"/><text x="92.7200%" y="479.50"></text></g><g><title>ksys_read (2 samples, 0.05%)</title><rect x="92.4700%" y="453" width="0.0491%" height="15" fill="rgb(217,54,24)" fg:x="3770" fg:w="2"/><text x="92.7200%" y="463.50"></text></g><g><title>vfs_read (2 samples, 0.05%)</title><rect x="92.4700%" y="437" width="0.0491%" height="15" fill="rgb(235,192,0)" fg:x="3770" fg:w="2"/><text x="92.7200%" y="447.50"></text></g><g><title>security_file_permission (1 samples, 0.02%)</title><rect x="92.4945%" y="421" width="0.0245%" height="15" fill="rgb(235,45,9)" fg:x="3771" fg:w="1"/><text x="92.7445%" y="431.50"></text></g><g><title>apparmor_file_permission (1 samples, 0.02%)</title><rect x="92.4945%" y="405" width="0.0245%" height="15" fill="rgb(246,42,40)" fg:x="3771" fg:w="1"/><text x="92.7445%" y="415.50"></text></g><g><title>polling::epoll::Poller::modify (1 samples, 0.02%)</title><rect x="92.5190%" y="549" width="0.0245%" height="15" fill="rgb(248,111,24)" fg:x="3772" fg:w="1"/><text x="92.7690%" y="559.50"></text></g><g><title>rustix::backend::event::epoll::modify (1 samples, 0.02%)</title><rect x="92.5190%" y="533" width="0.0245%" height="15" fill="rgb(249,65,22)" fg:x="3772" fg:w="1"/><text x="92.7690%" y="543.50"></text></g><g><title>rustix::backend::event::syscalls::epoll_mod (1 samples, 0.02%)</title><rect x="92.5190%" y="517" width="0.0245%" height="15" fill="rgb(238,111,51)" fg:x="3772" fg:w="1"/><text x="92.7690%" y="527.50"></text></g><g><title>rustix::backend::arch::asm::syscall4_readonly (1 samples, 0.02%)</title><rect x="92.5190%" y="501" width="0.0245%" height="15" fill="rgb(250,118,22)" fg:x="3772" fg:w="1"/><text x="92.7690%" y="511.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="92.5190%" y="485" width="0.0245%" height="15" fill="rgb(234,84,26)" fg:x="3772" fg:w="1"/><text x="92.7690%" y="495.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="92.5190%" y="469" width="0.0245%" height="15" fill="rgb(243,172,12)" fg:x="3772" fg:w="1"/><text x="92.7690%" y="479.50"></text></g><g><title>__x64_sys_epoll_ctl (1 samples, 0.02%)</title><rect x="92.5190%" y="453" width="0.0245%" height="15" fill="rgb(236,150,49)" fg:x="3772" fg:w="1"/><text x="92.7690%" y="463.50"></text></g><g><title>_copy_from_user (1 samples, 0.02%)</title><rect x="92.5190%" y="437" width="0.0245%" height="15" fill="rgb(225,197,26)" fg:x="3772" fg:w="1"/><text x="92.7690%" y="447.50"></text></g><g><title>copy_user_generic_string (1 samples, 0.02%)</title><rect x="92.5190%" y="421" width="0.0245%" height="15" fill="rgb(214,17,42)" fg:x="3772" fg:w="1"/><text x="92.7690%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (1 samples, 0.02%)</title><rect x="92.5435%" y="533" width="0.0245%" height="15" fill="rgb(224,165,40)" fg:x="3773" fg:w="1"/><text x="92.7935%" y="543.50"></text></g><g><title>_raw_write_unlock_irq (1 samples, 0.02%)</title><rect x="92.5926%" y="437" width="0.0245%" height="15" fill="rgb(246,100,4)" fg:x="3775" fg:w="1"/><text x="92.8426%" y="447.50"></text></g><g><title>ep_item_poll.isra.0 (1 samples, 0.02%)</title><rect x="92.6171%" y="437" width="0.0245%" height="15" fill="rgb(222,103,0)" fg:x="3776" fg:w="1"/><text x="92.8671%" y="447.50"></text></g><g><title>mutex_unlock (1 samples, 0.02%)</title><rect x="92.6416%" y="437" width="0.0245%" height="15" fill="rgb(227,189,26)" fg:x="3777" fg:w="1"/><text x="92.8916%" y="447.50"></text></g><g><title>dequeue_task_fair (2 samples, 0.05%)</title><rect x="92.6907%" y="389" width="0.0491%" height="15" fill="rgb(214,202,17)" fg:x="3779" fg:w="2"/><text x="92.9407%" y="399.50"></text></g><g><title>dequeue_entity (1 samples, 0.02%)</title><rect x="92.7152%" y="373" width="0.0245%" height="15" fill="rgb(229,111,3)" fg:x="3780" fg:w="1"/><text x="92.9652%" y="383.50"></text></g><g><title>reweight_entity (1 samples, 0.02%)</title><rect x="92.7152%" y="357" width="0.0245%" height="15" fill="rgb(229,172,15)" fg:x="3780" fg:w="1"/><text x="92.9652%" y="367.50"></text></g><g><title>merge_sched_in (1 samples, 0.02%)</title><rect x="92.7398%" y="325" width="0.0245%" height="15" fill="rgb(230,224,35)" fg:x="3781" fg:w="1"/><text x="92.9898%" y="335.50"></text></g><g><title>event_sched_in (1 samples, 0.02%)</title><rect x="92.7398%" y="309" width="0.0245%" height="15" fill="rgb(251,141,6)" fg:x="3781" fg:w="1"/><text x="92.9898%" y="319.50"></text></g><g><title>perf_ibs_add (1 samples, 0.02%)</title><rect x="92.7398%" y="293" width="0.0245%" height="15" fill="rgb(225,208,6)" fg:x="3781" fg:w="1"/><text x="92.9898%" y="303.50"></text></g><g><title>perf_event_update_userpage (1 samples, 0.02%)</title><rect x="92.7398%" y="277" width="0.0245%" height="15" fill="rgb(246,181,16)" fg:x="3781" fg:w="1"/><text x="92.9898%" y="287.50"></text></g><g><title>arch_perf_update_userpage (1 samples, 0.02%)</title><rect x="92.7398%" y="261" width="0.0245%" height="15" fill="rgb(227,129,36)" fg:x="3781" fg:w="1"/><text x="92.9898%" y="271.50"></text></g><g><title>using_native_sched_clock (1 samples, 0.02%)</title><rect x="92.7398%" y="245" width="0.0245%" height="15" fill="rgb(248,117,24)" fg:x="3781" fg:w="1"/><text x="92.9898%" y="255.50"></text></g><g><title>__x64_sys_epoll_wait (9 samples, 0.22%)</title><rect x="92.5681%" y="469" width="0.2208%" height="15" fill="rgb(214,185,35)" fg:x="3774" fg:w="9"/><text x="92.8181%" y="479.50"></text></g><g><title>do_epoll_wait (9 samples, 0.22%)</title><rect x="92.5681%" y="453" width="0.2208%" height="15" fill="rgb(236,150,34)" fg:x="3774" fg:w="9"/><text x="92.8181%" y="463.50"></text></g><g><title>schedule_hrtimeout_range_clock (5 samples, 0.12%)</title><rect x="92.6662%" y="437" width="0.1226%" height="15" fill="rgb(243,228,27)" fg:x="3778" fg:w="5"/><text x="92.9162%" y="447.50"></text></g><g><title>schedule (4 samples, 0.10%)</title><rect x="92.6907%" y="421" width="0.0981%" height="15" fill="rgb(245,77,44)" fg:x="3779" fg:w="4"/><text x="92.9407%" y="431.50"></text></g><g><title>__schedule (4 samples, 0.10%)</title><rect x="92.6907%" y="405" width="0.0981%" height="15" fill="rgb(235,214,42)" fg:x="3779" fg:w="4"/><text x="92.9407%" y="415.50"></text></g><g><title>finish_task_switch.isra.0 (2 samples, 0.05%)</title><rect x="92.7398%" y="389" width="0.0491%" height="15" fill="rgb(221,74,3)" fg:x="3781" fg:w="2"/><text x="92.9898%" y="399.50"></text></g><g><title>__perf_event_task_sched_in (2 samples, 0.05%)</title><rect x="92.7398%" y="373" width="0.0491%" height="15" fill="rgb(206,121,29)" fg:x="3781" fg:w="2"/><text x="92.9898%" y="383.50"></text></g><g><title>ctx_flexible_sched_in (2 samples, 0.05%)</title><rect x="92.7398%" y="357" width="0.0491%" height="15" fill="rgb(249,131,53)" fg:x="3781" fg:w="2"/><text x="92.9898%" y="367.50"></text></g><g><title>visit_groups_merge.constprop.0.isra.0 (2 samples, 0.05%)</title><rect x="92.7398%" y="341" width="0.0491%" height="15" fill="rgb(236,170,29)" fg:x="3781" fg:w="2"/><text x="92.9898%" y="351.50"></text></g><g><title>perf_event_groups_next (1 samples, 0.02%)</title><rect x="92.7643%" y="325" width="0.0245%" height="15" fill="rgb(247,96,15)" fg:x="3782" fg:w="1"/><text x="93.0143%" y="335.50"></text></g><g><title>rb_next (1 samples, 0.02%)</title><rect x="92.7643%" y="309" width="0.0245%" height="15" fill="rgb(211,210,7)" fg:x="3782" fg:w="1"/><text x="93.0143%" y="319.50"></text></g><g><title>rustix::backend::event::epoll::wait (11 samples, 0.27%)</title><rect x="92.5435%" y="549" width="0.2698%" height="15" fill="rgb(240,88,50)" fg:x="3773" fg:w="11"/><text x="92.7935%" y="559.50"></text></g><g><title>rustix::backend::event::syscalls::epoll_wait (10 samples, 0.25%)</title><rect x="92.5681%" y="533" width="0.2453%" height="15" fill="rgb(209,229,26)" fg:x="3774" fg:w="10"/><text x="92.8181%" y="543.50"></text></g><g><title>rustix::backend::arch::asm::syscall4 (10 samples, 0.25%)</title><rect x="92.5681%" y="517" width="0.2453%" height="15" fill="rgb(210,68,23)" fg:x="3774" fg:w="10"/><text x="92.8181%" y="527.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (10 samples, 0.25%)</title><rect x="92.5681%" y="501" width="0.2453%" height="15" fill="rgb(229,180,13)" fg:x="3774" fg:w="10"/><text x="92.8181%" y="511.50"></text></g><g><title>do_syscall_64 (10 samples, 0.25%)</title><rect x="92.5681%" y="485" width="0.2453%" height="15" fill="rgb(236,53,44)" fg:x="3774" fg:w="10"/><text x="92.8181%" y="495.50"></text></g><g><title>syscall_exit_to_user_mode (1 samples, 0.02%)</title><rect x="92.7888%" y="469" width="0.0245%" height="15" fill="rgb(244,214,29)" fg:x="3783" fg:w="1"/><text x="93.0388%" y="479.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.02%)</title><rect x="92.7888%" y="453" width="0.0245%" height="15" fill="rgb(220,75,29)" fg:x="3783" fg:w="1"/><text x="93.0388%" y="463.50"></text></g><g><title>__fget_light (1 samples, 0.02%)</title><rect x="92.8133%" y="437" width="0.0245%" height="15" fill="rgb(214,183,37)" fg:x="3784" fg:w="1"/><text x="93.0633%" y="447.50"></text></g><g><title>rustix::backend::arch::asm::syscall4 (2 samples, 0.05%)</title><rect x="92.8133%" y="517" width="0.0491%" height="15" fill="rgb(239,117,29)" fg:x="3784" fg:w="2"/><text x="93.0633%" y="527.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="92.8133%" y="501" width="0.0491%" height="15" fill="rgb(237,171,35)" fg:x="3784" fg:w="2"/><text x="93.0633%" y="511.50"></text></g><g><title>do_syscall_64 (2 samples, 0.05%)</title><rect x="92.8133%" y="485" width="0.0491%" height="15" fill="rgb(229,178,53)" fg:x="3784" fg:w="2"/><text x="93.0633%" y="495.50"></text></g><g><title>__x64_sys_timerfd_settime (2 samples, 0.05%)</title><rect x="92.8133%" y="469" width="0.0491%" height="15" fill="rgb(210,102,19)" fg:x="3784" fg:w="2"/><text x="93.0633%" y="479.50"></text></g><g><title>do_timerfd_settime (2 samples, 0.05%)</title><rect x="92.8133%" y="453" width="0.0491%" height="15" fill="rgb(235,127,22)" fg:x="3784" fg:w="2"/><text x="93.0633%" y="463.50"></text></g><g><title>hrtimer_start_range_ns (1 samples, 0.02%)</title><rect x="92.8379%" y="437" width="0.0245%" height="15" fill="rgb(244,31,31)" fg:x="3785" fg:w="1"/><text x="93.0879%" y="447.50"></text></g><g><title>check_preemption_disabled (1 samples, 0.02%)</title><rect x="92.8379%" y="421" width="0.0245%" height="15" fill="rgb(231,43,21)" fg:x="3785" fg:w="1"/><text x="93.0879%" y="431.50"></text></g><g><title>rustix::time::timerfd::timerfd_settime (3 samples, 0.07%)</title><rect x="92.8133%" y="549" width="0.0736%" height="15" fill="rgb(217,131,35)" fg:x="3784" fg:w="3"/><text x="93.0633%" y="559.50"></text></g><g><title>rustix::backend::time::syscalls::timerfd_settime (3 samples, 0.07%)</title><rect x="92.8133%" y="533" width="0.0736%" height="15" fill="rgb(221,149,4)" fg:x="3784" fg:w="3"/><text x="93.0633%" y="543.50"></text></g><g><title>rustix::backend::conv::by_ref (1 samples, 0.02%)</title><rect x="92.8624%" y="517" width="0.0245%" height="15" fill="rgb(232,170,28)" fg:x="3786" fg:w="1"/><text x="93.1124%" y="527.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="92.8624%" y="501" width="0.0245%" height="15" fill="rgb(238,56,10)" fg:x="3786" fg:w="1"/><text x="93.1124%" y="511.50"></text></g><g><title>polling::epoll::Poller::wait (22 samples, 0.54%)</title><rect x="92.3718%" y="565" width="0.5396%" height="15" fill="rgb(235,196,14)" fg:x="3766" fg:w="22"/><text x="92.6218%" y="575.50"></text></g><g><title>tracing::span::Span::enter (1 samples, 0.02%)</title><rect x="92.8869%" y="549" width="0.0245%" height="15" fill="rgb(216,45,48)" fg:x="3787" fg:w="1"/><text x="93.1369%" y="559.50"></text></g><g><title>tracing::span::Span::do_enter (1 samples, 0.02%)</title><rect x="92.8869%" y="533" width="0.0245%" height="15" fill="rgb(238,213,17)" fg:x="3787" fg:w="1"/><text x="93.1369%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.02%)</title><rect x="92.8869%" y="517" width="0.0245%" height="15" fill="rgb(212,13,2)" fg:x="3787" fg:w="1"/><text x="93.1369%" y="527.50"></text></g><g><title>polling::Poller::wait (24 samples, 0.59%)</title><rect x="92.3473%" y="581" width="0.5887%" height="15" fill="rgb(240,114,20)" fg:x="3765" fg:w="24"/><text x="92.5973%" y="591.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (1 samples, 0.02%)</title><rect x="92.9115%" y="565" width="0.0245%" height="15" fill="rgb(228,41,40)" fg:x="3788" fg:w="1"/><text x="93.1615%" y="575.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="92.9115%" y="549" width="0.0245%" height="15" fill="rgb(244,132,35)" fg:x="3788" fg:w="1"/><text x="93.1615%" y="559.50"></text></g><g><title>std::sync::poison::Flag::guard (1 samples, 0.02%)</title><rect x="92.9115%" y="533" width="0.0245%" height="15" fill="rgb(253,189,4)" fg:x="3788" fg:w="1"/><text x="93.1615%" y="543.50"></text></g><g><title>&lt;tftp::socket::UdpUnboundSocket as tftp::socket::Socket&gt;::recv_from (30 samples, 0.74%)</title><rect x="92.2247%" y="597" width="0.7358%" height="15" fill="rgb(224,37,19)" fg:x="3760" fg:w="30"/><text x="92.4747%" y="607.50"></text></g><g><title>rustix::backend::reg::raw_arg (1 samples, 0.02%)</title><rect x="92.9360%" y="581" width="0.0245%" height="15" fill="rgb(235,223,18)" fg:x="3789" fg:w="1"/><text x="93.1860%" y="591.50"></text></g><g><title>&lt;tftp::std_compat::io::ErrorKind as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="92.9605%" y="597" width="0.0245%" height="15" fill="rgb(235,163,25)" fg:x="3790" fg:w="1"/><text x="93.2105%" y="607.50"></text></g><g><title>&lt;i32 as std::os::fd::raw::AsRawFd&gt;::as_raw_fd (1 samples, 0.02%)</title><rect x="92.9850%" y="501" width="0.0245%" height="15" fill="rgb(217,145,28)" fg:x="3791" fg:w="1"/><text x="93.2350%" y="511.50"></text></g><g><title>polling::Event::readable (1 samples, 0.02%)</title><rect x="93.0096%" y="501" width="0.0245%" height="15" fill="rgb(223,223,32)" fg:x="3792" fg:w="1"/><text x="93.2596%" y="511.50"></text></g><g><title>polling::Event::new (1 samples, 0.02%)</title><rect x="93.0096%" y="485" width="0.0245%" height="15" fill="rgb(227,189,39)" fg:x="3792" fg:w="1"/><text x="93.2596%" y="495.50"></text></g><g><title>polling::Poller::modify (1 samples, 0.02%)</title><rect x="93.0341%" y="501" width="0.0245%" height="15" fill="rgb(248,10,22)" fg:x="3793" fg:w="1"/><text x="93.2841%" y="511.50"></text></g><g><title>polling::Poller::modify_with_mode (1 samples, 0.02%)</title><rect x="93.0341%" y="485" width="0.0245%" height="15" fill="rgb(248,46,39)" fg:x="3793" fg:w="1"/><text x="93.2841%" y="495.50"></text></g><g><title>polling::epoll::Poller::modify (1 samples, 0.02%)</title><rect x="93.0341%" y="469" width="0.0245%" height="15" fill="rgb(248,113,48)" fg:x="3793" fg:w="1"/><text x="93.2841%" y="479.50"></text></g><g><title>rustix::backend::event::epoll::modify (1 samples, 0.02%)</title><rect x="93.0341%" y="453" width="0.0245%" height="15" fill="rgb(245,16,25)" fg:x="3793" fg:w="1"/><text x="93.2841%" y="463.50"></text></g><g><title>rustix::backend::event::syscalls::epoll_mod (1 samples, 0.02%)</title><rect x="93.0341%" y="437" width="0.0245%" height="15" fill="rgb(249,152,16)" fg:x="3793" fg:w="1"/><text x="93.2841%" y="447.50"></text></g><g><title>rustix::backend::conv::by_ref (1 samples, 0.02%)</title><rect x="93.0341%" y="421" width="0.0245%" height="15" fill="rgb(250,16,1)" fg:x="3793" fg:w="1"/><text x="93.2841%" y="431.50"></text></g><g><title>rustix::utils::as_ptr (1 samples, 0.02%)</title><rect x="93.0341%" y="405" width="0.0245%" height="15" fill="rgb(249,138,3)" fg:x="3793" fg:w="1"/><text x="93.2841%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.05%)</title><rect x="93.0586%" y="405" width="0.0491%" height="15" fill="rgb(227,71,41)" fg:x="3794" fg:w="2"/><text x="93.3086%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.05%)</title><rect x="93.0586%" y="389" width="0.0491%" height="15" fill="rgb(209,184,23)" fg:x="3794" fg:w="2"/><text x="93.3086%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.05%)</title><rect x="93.0586%" y="373" width="0.0491%" height="15" fill="rgb(223,215,31)" fg:x="3794" fg:w="2"/><text x="93.3086%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.05%)</title><rect x="93.0586%" y="357" width="0.0491%" height="15" fill="rgb(210,146,28)" fg:x="3794" fg:w="2"/><text x="93.3086%" y="367.50"></text></g><g><title>__memcpy_avx_unaligned (1 samples, 0.02%)</title><rect x="93.1077%" y="389" width="0.0245%" height="15" fill="rgb(209,183,41)" fg:x="3796" fg:w="1"/><text x="93.3577%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.05%)</title><rect x="93.1077%" y="405" width="0.0491%" height="15" fill="rgb(209,224,45)" fg:x="3796" fg:w="2"/><text x="93.3577%" y="415.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.02%)</title><rect x="93.1322%" y="389" width="0.0245%" height="15" fill="rgb(224,209,51)" fg:x="3797" fg:w="1"/><text x="93.3822%" y="399.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.02%)</title><rect x="93.1322%" y="373" width="0.0245%" height="15" fill="rgb(223,17,39)" fg:x="3797" fg:w="1"/><text x="93.3822%" y="383.50"></text></g><g><title>hashbrown::map::make_hash (5 samples, 0.12%)</title><rect x="93.0586%" y="437" width="0.1226%" height="15" fill="rgb(234,204,37)" fg:x="3794" fg:w="5"/><text x="93.3086%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5 samples, 0.12%)</title><rect x="93.0586%" y="421" width="0.1226%" height="15" fill="rgb(236,120,5)" fg:x="3794" fg:w="5"/><text x="93.3086%" y="431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.02%)</title><rect x="93.1567%" y="405" width="0.0245%" height="15" fill="rgb(248,97,27)" fg:x="3798" fg:w="1"/><text x="93.4067%" y="415.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.02%)</title><rect x="93.1567%" y="389" width="0.0245%" height="15" fill="rgb(240,66,17)" fg:x="3798" fg:w="1"/><text x="93.4067%" y="399.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.02%)</title><rect x="93.1567%" y="373" width="0.0245%" height="15" fill="rgb(210,79,3)" fg:x="3798" fg:w="1"/><text x="93.4067%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="93.1567%" y="357" width="0.0245%" height="15" fill="rgb(214,176,27)" fg:x="3798" fg:w="1"/><text x="93.4067%" y="367.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="93.1567%" y="341" width="0.0245%" height="15" fill="rgb(235,185,3)" fg:x="3798" fg:w="1"/><text x="93.4067%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="93.1567%" y="325" width="0.0245%" height="15" fill="rgb(227,24,12)" fg:x="3798" fg:w="1"/><text x="93.4067%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.02%)</title><rect x="93.1567%" y="309" width="0.0245%" height="15" fill="rgb(252,169,48)" fg:x="3798" fg:w="1"/><text x="93.4067%" y="319.50"></text></g><g><title>&lt;tftp::socket::UdpUnboundSocket as tftp::socket::Socket&gt;::modify_interest (10 samples, 0.25%)</title><rect x="92.9850%" y="517" width="0.2453%" height="15" fill="rgb(212,65,1)" fg:x="3791" fg:w="10"/><text x="93.2350%" y="527.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::remove (7 samples, 0.17%)</title><rect x="93.0586%" y="501" width="0.1717%" height="15" fill="rgb(242,39,24)" fg:x="3794" fg:w="7"/><text x="93.3086%" y="511.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::remove (7 samples, 0.17%)</title><rect x="93.0586%" y="485" width="0.1717%" height="15" fill="rgb(249,32,23)" fg:x="3794" fg:w="7"/><text x="93.3086%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (7 samples, 0.17%)</title><rect x="93.0586%" y="469" width="0.1717%" height="15" fill="rgb(251,195,23)" fg:x="3794" fg:w="7"/><text x="93.3086%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (7 samples, 0.17%)</title><rect x="93.0586%" y="453" width="0.1717%" height="15" fill="rgb(236,174,8)" fg:x="3794" fg:w="7"/><text x="93.3086%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (2 samples, 0.05%)</title><rect x="93.1813%" y="437" width="0.0491%" height="15" fill="rgb(220,197,8)" fg:x="3799" fg:w="2"/><text x="93.4313%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove (2 samples, 0.05%)</title><rect x="93.1813%" y="421" width="0.0491%" height="15" fill="rgb(240,108,37)" fg:x="3799" fg:w="2"/><text x="93.4313%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::erase_no_drop (2 samples, 0.05%)</title><rect x="93.1813%" y="405" width="0.0491%" height="15" fill="rgb(232,176,24)" fg:x="3799" fg:w="2"/><text x="93.4313%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner::erase (2 samples, 0.05%)</title><rect x="93.1813%" y="389" width="0.0491%" height="15" fill="rgb(243,35,29)" fg:x="3799" fg:w="2"/><text x="93.4313%" y="399.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (2 samples, 0.05%)</title><rect x="93.1813%" y="373" width="0.0491%" height="15" fill="rgb(210,37,18)" fg:x="3799" fg:w="2"/><text x="93.4313%" y="383.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.05%)</title><rect x="93.1813%" y="357" width="0.0491%" height="15" fill="rgb(224,184,40)" fg:x="3799" fg:w="2"/><text x="93.4313%" y="367.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.05%)</title><rect x="93.1813%" y="341" width="0.0491%" height="15" fill="rgb(236,39,29)" fg:x="3799" fg:w="2"/><text x="93.4313%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (11 samples, 0.27%)</title><rect x="92.9850%" y="597" width="0.2698%" height="15" fill="rgb(232,48,39)" fg:x="3791" fg:w="11"/><text x="93.2350%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.27%)</title><rect x="92.9850%" y="581" width="0.2698%" height="15" fill="rgb(236,34,42)" fg:x="3791" fg:w="11"/><text x="93.2350%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (11 samples, 0.27%)</title><rect x="92.9850%" y="565" width="0.2698%" height="15" fill="rgb(243,106,37)" fg:x="3791" fg:w="11"/><text x="93.2350%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (11 samples, 0.27%)</title><rect x="92.9850%" y="549" width="0.2698%" height="15" fill="rgb(218,96,6)" fg:x="3791" fg:w="11"/><text x="93.2350%" y="559.50"></text></g><g><title>tftp::server::single_thread::server::{{closure}} (11 samples, 0.27%)</title><rect x="92.9850%" y="533" width="0.2698%" height="15" fill="rgb(235,130,12)" fg:x="3791" fg:w="11"/><text x="93.2350%" y="543.50"></text></g><g><title>tftp::server::connection::Connection&lt;B,Rng&gt;::recv (1 samples, 0.02%)</title><rect x="93.2303%" y="517" width="0.0245%" height="15" fill="rgb(231,95,0)" fg:x="3801" fg:w="1"/><text x="93.4803%" y="527.50"></text></g><g><title>&lt;tftp::socket::UdpBoundSocket as tftp::socket::BoundSocket&gt;::recv (1 samples, 0.02%)</title><rect x="93.2303%" y="501" width="0.0245%" height="15" fill="rgb(228,12,23)" fg:x="3801" fg:w="1"/><text x="93.4803%" y="511.50"></text></g><g><title>std::net::udp::UdpSocket::recv (1 samples, 0.02%)</title><rect x="93.2303%" y="485" width="0.0245%" height="15" fill="rgb(216,12,1)" fg:x="3801" fg:w="1"/><text x="93.4803%" y="495.50"></text></g><g><title>std::sys_common::net::UdpSocket::recv (1 samples, 0.02%)</title><rect x="93.2303%" y="469" width="0.0245%" height="15" fill="rgb(219,59,3)" fg:x="3801" fg:w="1"/><text x="93.4803%" y="479.50"></text></g><g><title>std::sys::unix::net::Socket::read (1 samples, 0.02%)</title><rect x="93.2303%" y="453" width="0.0245%" height="15" fill="rgb(215,208,46)" fg:x="3801" fg:w="1"/><text x="93.4803%" y="463.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (1 samples, 0.02%)</title><rect x="93.2303%" y="437" width="0.0245%" height="15" fill="rgb(254,224,29)" fg:x="3801" fg:w="1"/><text x="93.4803%" y="447.50"></text></g><g><title>__libc_recv (1 samples, 0.02%)</title><rect x="93.2303%" y="421" width="0.0245%" height="15" fill="rgb(232,14,29)" fg:x="3801" fg:w="1"/><text x="93.4803%" y="431.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="93.2303%" y="405" width="0.0245%" height="15" fill="rgb(208,45,52)" fg:x="3801" fg:w="1"/><text x="93.4803%" y="415.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="93.2303%" y="389" width="0.0245%" height="15" fill="rgb(234,191,28)" fg:x="3801" fg:w="1"/><text x="93.4803%" y="399.50"></text></g><g><title>__x64_sys_recvfrom (1 samples, 0.02%)</title><rect x="93.2303%" y="373" width="0.0245%" height="15" fill="rgb(244,67,43)" fg:x="3801" fg:w="1"/><text x="93.4803%" y="383.50"></text></g><g><title>__sys_recvfrom (1 samples, 0.02%)</title><rect x="93.2303%" y="357" width="0.0245%" height="15" fill="rgb(236,189,24)" fg:x="3801" fg:w="1"/><text x="93.4803%" y="367.50"></text></g><g><title>sock_recvmsg (1 samples, 0.02%)</title><rect x="93.2303%" y="341" width="0.0245%" height="15" fill="rgb(239,214,33)" fg:x="3801" fg:w="1"/><text x="93.4803%" y="351.50"></text></g><g><title>inet_recvmsg (1 samples, 0.02%)</title><rect x="93.2303%" y="325" width="0.0245%" height="15" fill="rgb(226,176,41)" fg:x="3801" fg:w="1"/><text x="93.4803%" y="335.50"></text></g><g><title>udp_recvmsg (1 samples, 0.02%)</title><rect x="93.2303%" y="309" width="0.0245%" height="15" fill="rgb(248,47,8)" fg:x="3801" fg:w="1"/><text x="93.4803%" y="319.50"></text></g><g><title>__consume_stateless_skb (1 samples, 0.02%)</title><rect x="93.2303%" y="293" width="0.0245%" height="15" fill="rgb(218,81,44)" fg:x="3801" fg:w="1"/><text x="93.4803%" y="303.50"></text></g><g><title>skb_release_data (1 samples, 0.02%)</title><rect x="93.2303%" y="277" width="0.0245%" height="15" fill="rgb(213,98,6)" fg:x="3801" fg:w="1"/><text x="93.4803%" y="287.50"></text></g><g><title>__kmem_cache_free (1 samples, 0.02%)</title><rect x="93.2303%" y="261" width="0.0245%" height="15" fill="rgb(222,85,22)" fg:x="3801" fg:w="1"/><text x="93.4803%" y="271.50"></text></g><g><title>heapless::indexmap::IndexMap&lt;K,V,S,_&gt;::entry (1 samples, 0.02%)</title><rect x="93.2548%" y="597" width="0.0245%" height="15" fill="rgb(239,46,39)" fg:x="3802" fg:w="1"/><text x="93.5048%" y="607.50"></text></g><g><title>heapless::indexmap::hash_with (1 samples, 0.02%)</title><rect x="93.2548%" y="581" width="0.0245%" height="15" fill="rgb(237,12,29)" fg:x="3802" fg:w="1"/><text x="93.5048%" y="591.50"></text></g><g><title>&lt;hash32::BuildHasherDefault&lt;H&gt; as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.02%)</title><rect x="93.2548%" y="565" width="0.0245%" height="15" fill="rgb(214,77,8)" fg:x="3802" fg:w="1"/><text x="93.5048%" y="575.50"></text></g><g><title>&lt;hash32::fnv::Hasher as core::default::Default&gt;::default (1 samples, 0.02%)</title><rect x="93.2548%" y="549" width="0.0245%" height="15" fill="rgb(217,168,37)" fg:x="3802" fg:w="1"/><text x="93.5048%" y="559.50"></text></g><g><title>log::max_level (1 samples, 0.02%)</title><rect x="93.2794%" y="597" width="0.0245%" height="15" fill="rgb(221,217,23)" fg:x="3803" fg:w="1"/><text x="93.5294%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.02%)</title><rect x="93.2794%" y="581" width="0.0245%" height="15" fill="rgb(243,229,36)" fg:x="3803" fg:w="1"/><text x="93.5294%" y="591.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.02%)</title><rect x="93.2794%" y="565" width="0.0245%" height="15" fill="rgb(251,163,40)" fg:x="3803" fg:w="1"/><text x="93.5294%" y="575.50"></text></g><g><title>tftp::io::instant_callback (1 samples, 0.02%)</title><rect x="93.3039%" y="597" width="0.0245%" height="15" fill="rgb(237,222,12)" fg:x="3804" fg:w="1"/><text x="93.5539%" y="607.50"></text></g><g><title>tftp::std_compat::time::Instant::from_time (1 samples, 0.02%)</title><rect x="93.3039%" y="581" width="0.0245%" height="15" fill="rgb(248,132,6)" fg:x="3804" fg:w="1"/><text x="93.5539%" y="591.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.02%)</title><rect x="93.3039%" y="565" width="0.0245%" height="15" fill="rgb(227,167,50)" fg:x="3804" fg:w="1"/><text x="93.5539%" y="575.50"></text></g><g><title>tftp::io::instant_callback::{{closure}} (1 samples, 0.02%)</title><rect x="93.3039%" y="549" width="0.0245%" height="15" fill="rgb(242,84,37)" fg:x="3804" fg:w="1"/><text x="93.5539%" y="559.50"></text></g><g><title>tftp::server::connection_builder::ConnectionBuilder&lt;Rng&gt;::build_writer (1 samples, 0.02%)</title><rect x="93.3284%" y="597" width="0.0245%" height="15" fill="rgb(212,4,50)" fg:x="3805" fg:w="1"/><text x="93.5784%" y="607.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.02%)</title><rect x="93.3284%" y="581" width="0.0245%" height="15" fill="rgb(230,228,32)" fg:x="3805" fg:w="1"/><text x="93.5784%" y="591.50"></text></g><g><title>tftp::io::create_server_writer (1 samples, 0.02%)</title><rect x="93.3284%" y="565" width="0.0245%" height="15" fill="rgb(248,217,23)" fg:x="3805" fg:w="1"/><text x="93.5784%" y="575.50"></text></g><g><title>std::fs::canonicalize (1 samples, 0.02%)</title><rect x="93.3284%" y="549" width="0.0245%" height="15" fill="rgb(238,197,32)" fg:x="3805" fg:w="1"/><text x="93.5784%" y="559.50"></text></g><g><title>std::sys::unix::fs::canonicalize (1 samples, 0.02%)</title><rect x="93.3284%" y="533" width="0.0245%" height="15" fill="rgb(236,106,1)" fg:x="3805" fg:w="1"/><text x="93.5784%" y="543.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (1 samples, 0.02%)</title><rect x="93.3284%" y="517" width="0.0245%" height="15" fill="rgb(219,228,13)" fg:x="3805" fg:w="1"/><text x="93.5784%" y="527.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.02%)</title><rect x="93.3284%" y="501" width="0.0245%" height="15" fill="rgb(238,30,35)" fg:x="3805" fg:w="1"/><text x="93.5784%" y="511.50"></text></g><g><title>std::sys::unix::fs::canonicalize::{{closure}} (1 samples, 0.02%)</title><rect x="93.3284%" y="485" width="0.0245%" height="15" fill="rgb(236,70,23)" fg:x="3805" fg:w="1"/><text x="93.5784%" y="495.50"></text></g><g><title>__GI___realpath (1 samples, 0.02%)</title><rect x="93.3284%" y="469" width="0.0245%" height="15" fill="rgb(249,104,48)" fg:x="3805" fg:w="1"/><text x="93.5784%" y="479.50"></text></g><g><title>core::cmp::PartialOrd::le (1 samples, 0.02%)</title><rect x="93.3530%" y="581" width="0.0245%" height="15" fill="rgb(254,117,50)" fg:x="3806" fg:w="1"/><text x="93.6030%" y="591.50"></text></g><g><title>&lt;log::Level as core::cmp::PartialOrd&lt;log::LevelFilter&gt;&gt;::partial_cmp (1 samples, 0.02%)</title><rect x="93.3530%" y="565" width="0.0245%" height="15" fill="rgb(223,152,4)" fg:x="3806" fg:w="1"/><text x="93.6030%" y="575.50"></text></g><g><title>tftp::server::connection::Connection&lt;B,Rng&gt;::decrypt_packet (1 samples, 0.02%)</title><rect x="93.3530%" y="549" width="0.0245%" height="15" fill="rgb(245,6,2)" fg:x="3806" fg:w="1"/><text x="93.6030%" y="559.50"></text></g><g><title>tftp::io::instant_callback (1 samples, 0.02%)</title><rect x="93.3775%" y="581" width="0.0245%" height="15" fill="rgb(249,150,24)" fg:x="3807" fg:w="1"/><text x="93.6275%" y="591.50"></text></g><g><title>tftp::std_compat::time::Instant::from_time (1 samples, 0.02%)</title><rect x="93.3775%" y="565" width="0.0245%" height="15" fill="rgb(228,185,42)" fg:x="3807" fg:w="1"/><text x="93.6275%" y="575.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.02%)</title><rect x="93.3775%" y="549" width="0.0245%" height="15" fill="rgb(226,39,33)" fg:x="3807" fg:w="1"/><text x="93.6275%" y="559.50"></text></g><g><title>tftp::io::instant_callback::{{closure}} (1 samples, 0.02%)</title><rect x="93.3775%" y="533" width="0.0245%" height="15" fill="rgb(221,166,19)" fg:x="3807" fg:w="1"/><text x="93.6275%" y="543.50"></text></g><g><title>std::time::SystemTime::duration_since (1 samples, 0.02%)</title><rect x="93.3775%" y="517" width="0.0245%" height="15" fill="rgb(209,109,2)" fg:x="3807" fg:w="1"/><text x="93.6275%" y="527.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.02%)</title><rect x="93.3775%" y="501" width="0.0245%" height="15" fill="rgb(252,216,26)" fg:x="3807" fg:w="1"/><text x="93.6275%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.02%)</title><rect x="93.4020%" y="469" width="0.0245%" height="15" fill="rgb(227,173,36)" fg:x="3808" fg:w="1"/><text x="93.6520%" y="479.50"></text></g><g><title>chacha20::xchacha::quarter_round (7 samples, 0.17%)</title><rect x="93.4265%" y="469" width="0.1717%" height="15" fill="rgb(209,90,7)" fg:x="3809" fg:w="7"/><text x="93.6765%" y="479.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (1 samples, 0.02%)</title><rect x="93.5982%" y="469" width="0.0245%" height="15" fill="rgb(250,194,11)" fg:x="3816" fg:w="1"/><text x="93.8482%" y="479.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (1 samples, 0.02%)</title><rect x="93.5982%" y="453" width="0.0245%" height="15" fill="rgb(220,72,50)" fg:x="3816" fg:w="1"/><text x="93.8482%" y="463.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (1 samples, 0.02%)</title><rect x="93.5982%" y="437" width="0.0245%" height="15" fill="rgb(222,106,48)" fg:x="3816" fg:w="1"/><text x="93.8482%" y="447.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (10 samples, 0.25%)</title><rect x="93.4020%" y="501" width="0.2453%" height="15" fill="rgb(216,220,45)" fg:x="3808" fg:w="10"/><text x="93.6520%" y="511.50"></text></g><g><title>chacha20::xchacha::hchacha (10 samples, 0.25%)</title><rect x="93.4020%" y="485" width="0.2453%" height="15" fill="rgb(234,112,18)" fg:x="3808" fg:w="10"/><text x="93.6520%" y="495.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.02%)</title><rect x="93.6228%" y="469" width="0.0245%" height="15" fill="rgb(206,179,9)" fg:x="3817" fg:w="1"/><text x="93.8728%" y="479.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.02%)</title><rect x="93.6228%" y="453" width="0.0245%" height="15" fill="rgb(215,115,40)" fg:x="3817" fg:w="1"/><text x="93.8728%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.02%)</title><rect x="93.6228%" y="437" width="0.0245%" height="15" fill="rgb(222,69,34)" fg:x="3817" fg:w="1"/><text x="93.8728%" y="447.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.02%)</title><rect x="93.6228%" y="421" width="0.0245%" height="15" fill="rgb(209,161,10)" fg:x="3817" fg:w="1"/><text x="93.8728%" y="431.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.02%)</title><rect x="93.6228%" y="405" width="0.0245%" height="15" fill="rgb(217,6,38)" fg:x="3817" fg:w="1"/><text x="93.8728%" y="415.50"></text></g><g><title>chacha20::xchacha::quarter_round (1 samples, 0.02%)</title><rect x="93.6228%" y="389" width="0.0245%" height="15" fill="rgb(229,229,48)" fg:x="3817" fg:w="1"/><text x="93.8728%" y="399.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as crypto_common::KeyIvInit&gt;::new (11 samples, 0.27%)</title><rect x="93.4020%" y="517" width="0.2698%" height="15" fill="rgb(225,21,28)" fg:x="3808" fg:w="11"/><text x="93.6520%" y="527.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.02%)</title><rect x="93.6473%" y="501" width="0.0245%" height="15" fill="rgb(206,33,13)" fg:x="3818" fg:w="1"/><text x="93.8973%" y="511.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.02%)</title><rect x="93.6473%" y="485" width="0.0245%" height="15" fill="rgb(242,178,17)" fg:x="3818" fg:w="1"/><text x="93.8973%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.02%)</title><rect x="93.6473%" y="469" width="0.0245%" height="15" fill="rgb(220,162,5)" fg:x="3818" fg:w="1"/><text x="93.8973%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="93.6473%" y="453" width="0.0245%" height="15" fill="rgb(210,33,43)" fg:x="3818" fg:w="1"/><text x="93.8973%" y="463.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="93.6473%" y="437" width="0.0245%" height="15" fill="rgb(216,116,54)" fg:x="3818" fg:w="1"/><text x="93.8973%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.02%)</title><rect x="93.6473%" y="421" width="0.0245%" height="15" fill="rgb(249,92,24)" fg:x="3818" fg:w="1"/><text x="93.8973%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.02%)</title><rect x="93.6473%" y="405" width="0.0245%" height="15" fill="rgb(231,189,14)" fg:x="3818" fg:w="1"/><text x="93.8973%" y="415.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (1 samples, 0.02%)</title><rect x="93.6473%" y="389" width="0.0245%" height="15" fill="rgb(230,8,41)" fg:x="3818" fg:w="1"/><text x="93.8973%" y="399.50"></text></g><g><title>&lt;core::slice::iter::ChunksExact&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (1 samples, 0.02%)</title><rect x="93.6473%" y="373" width="0.0245%" height="15" fill="rgb(249,7,27)" fg:x="3818" fg:w="1"/><text x="93.8973%" y="383.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.02%)</title><rect x="93.6718%" y="517" width="0.0245%" height="15" fill="rgb(232,86,5)" fg:x="3819" fg:w="1"/><text x="93.9218%" y="527.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (1 samples, 0.02%)</title><rect x="93.6963%" y="517" width="0.0245%" height="15" fill="rgb(224,175,18)" fg:x="3820" fg:w="1"/><text x="93.9463%" y="527.50"></text></g><g><title>chacha20::backends::avx2::rounds (2 samples, 0.05%)</title><rect x="93.7209%" y="517" width="0.0491%" height="15" fill="rgb(220,129,12)" fg:x="3821" fg:w="2"/><text x="93.9709%" y="527.50"></text></g><g><title>&lt;[T] as subtle::ConstantTimeEq&gt;::ct_eq (1 samples, 0.02%)</title><rect x="93.7945%" y="469" width="0.0245%" height="15" fill="rgb(210,19,36)" fg:x="3824" fg:w="1"/><text x="94.0445%" y="479.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (2 samples, 0.05%)</title><rect x="93.7945%" y="501" width="0.0491%" height="15" fill="rgb(219,96,14)" fg:x="3824" fg:w="2"/><text x="94.0445%" y="511.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (2 samples, 0.05%)</title><rect x="93.7945%" y="485" width="0.0491%" height="15" fill="rgb(249,106,1)" fg:x="3824" fg:w="2"/><text x="94.0445%" y="495.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (1 samples, 0.02%)</title><rect x="93.8190%" y="469" width="0.0245%" height="15" fill="rgb(249,155,20)" fg:x="3825" fg:w="1"/><text x="94.0690%" y="479.50"></text></g><g><title>core::slice::raw::from_raw_parts (1 samples, 0.02%)</title><rect x="93.8190%" y="453" width="0.0245%" height="15" fill="rgb(244,168,9)" fg:x="3825" fg:w="1"/><text x="94.0690%" y="463.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.02%)</title><rect x="93.8190%" y="437" width="0.0245%" height="15" fill="rgb(216,23,50)" fg:x="3825" fg:w="1"/><text x="94.0690%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::cast (1 samples, 0.02%)</title><rect x="93.8190%" y="421" width="0.0245%" height="15" fill="rgb(224,219,20)" fg:x="3825" fg:w="1"/><text x="94.0690%" y="431.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.02%)</title><rect x="93.8435%" y="357" width="0.0245%" height="15" fill="rgb(222,156,15)" fg:x="3826" fg:w="1"/><text x="94.0935%" y="367.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (1 samples, 0.02%)</title><rect x="93.8435%" y="341" width="0.0245%" height="15" fill="rgb(231,97,17)" fg:x="3826" fg:w="1"/><text x="94.0935%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;chacha20poly1305::cipher::Cipher&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;chacha20::xchacha::XChaChaCore&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm,typenum::bit::B1&gt;,typenum::bit::B0&gt;,typenum::bit::B1&gt;,typenum::bit::B0&gt;&gt;&gt;&gt;&gt; (2 samples, 0.05%)</title><rect x="93.8435%" y="501" width="0.0491%" height="15" fill="rgb(218,70,48)" fg:x="3826" fg:w="2"/><text x="94.0935%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;chacha20::xchacha::XChaChaCore&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm,typenum::bit::B1&gt;,typenum::bit::B0&gt;,typenum::bit::B1&gt;,typenum::bit::B0&gt;&gt;&gt;&gt; (2 samples, 0.05%)</title><rect x="93.8435%" y="485" width="0.0491%" height="15" fill="rgb(212,196,52)" fg:x="3826" fg:w="2"/><text x="94.0935%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;chacha20::xchacha::XChaChaCore&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm,typenum::bit::B1&gt;,typenum::bit::B0&gt;,typenum::bit::B1&gt;,typenum::bit::B0&gt;&gt;&gt; (2 samples, 0.05%)</title><rect x="93.8435%" y="469" width="0.0491%" height="15" fill="rgb(243,203,18)" fg:x="3826" fg:w="2"/><text x="94.0935%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;chacha20::ChaChaCore&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm,typenum::bit::B1&gt;,typenum::bit::B0&gt;,typenum::bit::B1&gt;,typenum::bit::B0&gt;&gt;&gt; (2 samples, 0.05%)</title><rect x="93.8435%" y="453" width="0.0491%" height="15" fill="rgb(252,125,41)" fg:x="3826" fg:w="2"/><text x="94.0935%" y="463.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.05%)</title><rect x="93.8435%" y="437" width="0.0491%" height="15" fill="rgb(223,180,33)" fg:x="3826" fg:w="2"/><text x="94.0935%" y="447.50"></text></g><g><title>&lt;[Z: N] as zeroize::Zeroize&gt;::zeroize (2 samples, 0.05%)</title><rect x="93.8435%" y="421" width="0.0491%" height="15" fill="rgb(254,159,46)" fg:x="3826" fg:w="2"/><text x="94.0935%" y="431.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;Z&gt; as zeroize::Zeroize&gt;::zeroize (2 samples, 0.05%)</title><rect x="93.8435%" y="405" width="0.0491%" height="15" fill="rgb(254,38,10)" fg:x="3826" fg:w="2"/><text x="94.0935%" y="415.50"></text></g><g><title>&lt;Z as zeroize::Zeroize&gt;::zeroize (2 samples, 0.05%)</title><rect x="93.8435%" y="389" width="0.0491%" height="15" fill="rgb(208,217,32)" fg:x="3826" fg:w="2"/><text x="94.0935%" y="399.50"></text></g><g><title>zeroize::atomic_fence (2 samples, 0.05%)</title><rect x="93.8435%" y="373" width="0.0491%" height="15" fill="rgb(221,120,13)" fg:x="3826" fg:w="2"/><text x="94.0935%" y="383.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (1 samples, 0.02%)</title><rect x="93.8680%" y="357" width="0.0245%" height="15" fill="rgb(246,54,52)" fg:x="3827" fg:w="1"/><text x="94.1180%" y="367.50"></text></g><g><title>&lt;poly1305::backend::avx2::State as universal_hash::UhfBackend&gt;::proc_block (1 samples, 0.02%)</title><rect x="93.8926%" y="421" width="0.0245%" height="15" fill="rgb(242,34,25)" fg:x="3828" fg:w="1"/><text x="94.1426%" y="431.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (1 samples, 0.02%)</title><rect x="93.8926%" y="405" width="0.0245%" height="15" fill="rgb(247,209,9)" fg:x="3828" fg:w="1"/><text x="94.1426%" y="415.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (1 samples, 0.02%)</title><rect x="93.8926%" y="389" width="0.0245%" height="15" fill="rgb(228,71,26)" fg:x="3828" fg:w="1"/><text x="94.1426%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="93.9171%" y="389" width="0.0245%" height="15" fill="rgb(222,145,49)" fg:x="3829" fg:w="1"/><text x="94.1671%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (2 samples, 0.05%)</title><rect x="93.9416%" y="373" width="0.0491%" height="15" fill="rgb(218,121,17)" fg:x="3830" fg:w="2"/><text x="94.1916%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (2 samples, 0.05%)</title><rect x="93.9907%" y="373" width="0.0491%" height="15" fill="rgb(244,50,7)" fg:x="3832" fg:w="2"/><text x="94.2407%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi64x (1 samples, 0.02%)</title><rect x="94.0397%" y="373" width="0.0245%" height="15" fill="rgb(246,229,37)" fg:x="3834" fg:w="1"/><text x="94.2897%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="94.0643%" y="373" width="0.0245%" height="15" fill="rgb(225,18,5)" fg:x="3835" fg:w="1"/><text x="94.3143%" y="383.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (1 samples, 0.02%)</title><rect x="94.0888%" y="357" width="0.0245%" height="15" fill="rgb(213,204,8)" fg:x="3836" fg:w="1"/><text x="94.3388%" y="367.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (1 samples, 0.02%)</title><rect x="94.1133%" y="357" width="0.0245%" height="15" fill="rgb(238,103,6)" fg:x="3837" fg:w="1"/><text x="94.3633%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (4 samples, 0.10%)</title><rect x="94.1378%" y="357" width="0.0981%" height="15" fill="rgb(222,25,35)" fg:x="3838" fg:w="4"/><text x="94.3878%" y="367.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="94.3341%" y="341" width="0.0245%" height="15" fill="rgb(213,203,35)" fg:x="3846" fg:w="1"/><text x="94.5841%" y="351.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="94.3341%" y="325" width="0.0245%" height="15" fill="rgb(221,79,53)" fg:x="3846" fg:w="1"/><text x="94.5841%" y="335.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="94.3341%" y="309" width="0.0245%" height="15" fill="rgb(243,200,35)" fg:x="3846" fg:w="1"/><text x="94.5841%" y="319.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="94.3341%" y="293" width="0.0245%" height="15" fill="rgb(248,60,25)" fg:x="3846" fg:w="1"/><text x="94.5841%" y="303.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="94.3341%" y="277" width="0.0245%" height="15" fill="rgb(227,53,46)" fg:x="3846" fg:w="1"/><text x="94.5841%" y="287.50"></text></g><g><title>tick_sched_timer (1 samples, 0.02%)</title><rect x="94.3341%" y="261" width="0.0245%" height="15" fill="rgb(216,120,32)" fg:x="3846" fg:w="1"/><text x="94.5841%" y="271.50"></text></g><g><title>tick_sched_handle (1 samples, 0.02%)</title><rect x="94.3341%" y="245" width="0.0245%" height="15" fill="rgb(220,134,1)" fg:x="3846" fg:w="1"/><text x="94.5841%" y="255.50"></text></g><g><title>update_process_times (1 samples, 0.02%)</title><rect x="94.3341%" y="229" width="0.0245%" height="15" fill="rgb(237,168,5)" fg:x="3846" fg:w="1"/><text x="94.5841%" y="239.50"></text></g><g><title>scheduler_tick (1 samples, 0.02%)</title><rect x="94.3341%" y="213" width="0.0245%" height="15" fill="rgb(231,100,33)" fg:x="3846" fg:w="1"/><text x="94.5841%" y="223.50"></text></g><g><title>perf_event_task_tick (1 samples, 0.02%)</title><rect x="94.3341%" y="197" width="0.0245%" height="15" fill="rgb(236,177,47)" fg:x="3846" fg:w="1"/><text x="94.5841%" y="207.50"></text></g><g><title>perf_adjust_freq_unthr_context (1 samples, 0.02%)</title><rect x="94.3341%" y="181" width="0.0245%" height="15" fill="rgb(235,7,49)" fg:x="3846" fg:w="1"/><text x="94.5841%" y="191.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (1 samples, 0.02%)</title><rect x="94.3586%" y="341" width="0.0245%" height="15" fill="rgb(232,119,22)" fg:x="3847" fg:w="1"/><text x="94.6086%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (7 samples, 0.17%)</title><rect x="94.2360%" y="357" width="0.1717%" height="15" fill="rgb(254,73,53)" fg:x="3842" fg:w="7"/><text x="94.4860%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="94.3831%" y="341" width="0.0245%" height="15" fill="rgb(251,35,20)" fg:x="3848" fg:w="1"/><text x="94.6331%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_blend_epi32 (2 samples, 0.05%)</title><rect x="94.4077%" y="357" width="0.0491%" height="15" fill="rgb(241,119,20)" fg:x="3849" fg:w="2"/><text x="94.6577%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (1 samples, 0.02%)</title><rect x="94.4322%" y="341" width="0.0245%" height="15" fill="rgb(207,102,14)" fg:x="3850" fg:w="1"/><text x="94.6822%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.02%)</title><rect x="94.4567%" y="357" width="0.0245%" height="15" fill="rgb(248,201,50)" fg:x="3851" fg:w="1"/><text x="94.7067%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (2 samples, 0.05%)</title><rect x="94.4812%" y="341" width="0.0491%" height="15" fill="rgb(222,185,44)" fg:x="3852" fg:w="2"/><text x="94.7312%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.02%)</title><rect x="94.5303%" y="341" width="0.0245%" height="15" fill="rgb(218,107,18)" fg:x="3854" fg:w="1"/><text x="94.7803%" y="351.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (1 samples, 0.02%)</title><rect x="94.5548%" y="341" width="0.0245%" height="15" fill="rgb(237,177,39)" fg:x="3855" fg:w="1"/><text x="94.8048%" y="351.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="94.5793%" y="341" width="0.0245%" height="15" fill="rgb(246,69,6)" fg:x="3856" fg:w="1"/><text x="94.8293%" y="351.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (1 samples, 0.02%)</title><rect x="94.6039%" y="341" width="0.0245%" height="15" fill="rgb(234,208,37)" fg:x="3857" fg:w="1"/><text x="94.8539%" y="351.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (1 samples, 0.02%)</title><rect x="94.6039%" y="325" width="0.0245%" height="15" fill="rgb(225,4,6)" fg:x="3857" fg:w="1"/><text x="94.8539%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (7 samples, 0.17%)</title><rect x="94.4812%" y="357" width="0.1717%" height="15" fill="rgb(233,45,0)" fg:x="3852" fg:w="7"/><text x="94.7312%" y="367.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (1 samples, 0.02%)</title><rect x="94.6284%" y="341" width="0.0245%" height="15" fill="rgb(226,136,5)" fg:x="3858" fg:w="1"/><text x="94.8784%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi64 (1 samples, 0.02%)</title><rect x="94.6529%" y="357" width="0.0245%" height="15" fill="rgb(211,91,47)" fg:x="3859" fg:w="1"/><text x="94.9029%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (3 samples, 0.07%)</title><rect x="94.6775%" y="357" width="0.0736%" height="15" fill="rgb(242,88,51)" fg:x="3860" fg:w="3"/><text x="94.9275%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (2 samples, 0.05%)</title><rect x="94.7510%" y="341" width="0.0491%" height="15" fill="rgb(230,91,28)" fg:x="3863" fg:w="2"/><text x="95.0010%" y="351.50"></text></g><g><title>core::core_arch::simd::u64x4::splat (1 samples, 0.02%)</title><rect x="94.7756%" y="325" width="0.0245%" height="15" fill="rgb(254,186,29)" fg:x="3864" fg:w="1"/><text x="95.0256%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_unpackhi_epi64 (4 samples, 0.10%)</title><rect x="94.7510%" y="357" width="0.0981%" height="15" fill="rgb(238,6,4)" fg:x="3863" fg:w="4"/><text x="95.0010%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (2 samples, 0.05%)</title><rect x="94.8001%" y="341" width="0.0491%" height="15" fill="rgb(221,151,16)" fg:x="3865" fg:w="2"/><text x="95.0501%" y="351.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="94.8492%" y="341" width="0.0245%" height="15" fill="rgb(251,143,52)" fg:x="3867" fg:w="1"/><text x="95.0992%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_unpacklo_epi64 (2 samples, 0.05%)</title><rect x="94.8492%" y="357" width="0.0491%" height="15" fill="rgb(206,90,15)" fg:x="3867" fg:w="2"/><text x="95.0992%" y="367.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (1 samples, 0.02%)</title><rect x="94.8737%" y="341" width="0.0245%" height="15" fill="rgb(218,35,8)" fg:x="3868" fg:w="1"/><text x="95.1237%" y="351.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (1 samples, 0.02%)</title><rect x="94.8737%" y="325" width="0.0245%" height="15" fill="rgb(239,215,6)" fg:x="3868" fg:w="1"/><text x="95.1237%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.05%)</title><rect x="94.8982%" y="357" width="0.0491%" height="15" fill="rgb(245,116,39)" fg:x="3869" fg:w="2"/><text x="95.1482%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (7 samples, 0.17%)</title><rect x="94.9473%" y="357" width="0.1717%" height="15" fill="rgb(242,65,28)" fg:x="3871" fg:w="7"/><text x="95.1973%" y="367.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (3 samples, 0.07%)</title><rect x="95.1190%" y="357" width="0.0736%" height="15" fill="rgb(252,132,53)" fg:x="3878" fg:w="3"/><text x="95.3690%" y="367.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (3 samples, 0.07%)</title><rect x="95.1190%" y="341" width="0.0736%" height="15" fill="rgb(224,159,50)" fg:x="3878" fg:w="3"/><text x="95.3690%" y="351.50"></text></g><g><title>universal_hash::UniversalHash::update_padded (58 samples, 1.42%)</title><rect x="93.8926%" y="501" width="1.4226%" height="15" fill="rgb(224,93,4)" fg:x="3828" fg:w="58"/><text x="94.1426%" y="511.50"></text></g><g><title>universal_hash::UniversalHash::update (58 samples, 1.42%)</title><rect x="93.8926%" y="485" width="1.4226%" height="15" fill="rgb(208,81,34)" fg:x="3828" fg:w="58"/><text x="94.1426%" y="495.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (58 samples, 1.42%)</title><rect x="93.8926%" y="469" width="1.4226%" height="15" fill="rgb(233,92,54)" fg:x="3828" fg:w="58"/><text x="94.1426%" y="479.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (58 samples, 1.42%)</title><rect x="93.8926%" y="453" width="1.4226%" height="15" fill="rgb(237,21,14)" fg:x="3828" fg:w="58"/><text x="94.1426%" y="463.50"></text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (58 samples, 1.42%)</title><rect x="93.8926%" y="437" width="1.4226%" height="15" fill="rgb(249,128,51)" fg:x="3828" fg:w="58"/><text x="94.1426%" y="447.50"></text></g><g><title>&lt;poly1305::backend::avx2::State as universal_hash::UhfBackend&gt;::proc_par_blocks (57 samples, 1.40%)</title><rect x="93.9171%" y="421" width="1.3981%" height="15" fill="rgb(223,129,24)" fg:x="3829" fg:w="57"/><text x="94.1671%" y="431.50"></text></g><g><title>poly1305::backend::avx2::State::compute_par_blocks (57 samples, 1.40%)</title><rect x="93.9171%" y="405" width="1.3981%" height="15" fill="rgb(231,168,25)" fg:x="3829" fg:w="57"/><text x="94.1671%" y="415.50"></text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_par_blocks (56 samples, 1.37%)</title><rect x="93.9416%" y="389" width="1.3736%" height="15" fill="rgb(224,39,20)" fg:x="3830" fg:w="56"/><text x="94.1916%" y="399.50"></text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_loaded_blocks (50 samples, 1.23%)</title><rect x="94.0888%" y="373" width="1.2264%" height="15" fill="rgb(225,152,53)" fg:x="3836" fg:w="50"/><text x="94.3388%" y="383.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (5 samples, 0.12%)</title><rect x="95.1925%" y="357" width="0.1226%" height="15" fill="rgb(252,17,24)" fg:x="3881" fg:w="5"/><text x="95.4425%" y="367.50"></text></g><g><title>&lt;[T] as subtle::ConstantTimeEq&gt;::ct_eq (1 samples, 0.02%)</title><rect x="95.3152%" y="485" width="0.0245%" height="15" fill="rgb(250,114,30)" fg:x="3886" fg:w="1"/><text x="95.5652%" y="495.50"></text></g><g><title>&lt;u8 as subtle::ConstantTimeEq&gt;::ct_eq (1 samples, 0.02%)</title><rect x="95.3152%" y="469" width="0.0245%" height="15" fill="rgb(229,5,4)" fg:x="3886" fg:w="1"/><text x="95.5652%" y="479.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.02%)</title><rect x="95.3152%" y="453" width="0.0245%" height="15" fill="rgb(225,176,49)" fg:x="3886" fg:w="1"/><text x="95.5652%" y="463.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::decrypt_in_place_detached (65 samples, 1.59%)</title><rect x="93.7699%" y="517" width="1.5943%" height="15" fill="rgb(224,221,49)" fg:x="3823" fg:w="65"/><text x="94.0199%" y="527.50"></text></g><g><title>universal_hash::UniversalHash::verify (2 samples, 0.05%)</title><rect x="95.3152%" y="501" width="0.0491%" height="15" fill="rgb(253,169,27)" fg:x="3886" fg:w="2"/><text x="95.5652%" y="511.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (1 samples, 0.02%)</title><rect x="95.3397%" y="485" width="0.0245%" height="15" fill="rgb(211,206,16)" fg:x="3887" fg:w="1"/><text x="95.5897%" y="495.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (1 samples, 0.02%)</title><rect x="95.3397%" y="469" width="0.0245%" height="15" fill="rgb(244,87,35)" fg:x="3887" fg:w="1"/><text x="95.5897%" y="479.50"></text></g><g><title>cipher::stream::StreamCipherSeek::seek (1 samples, 0.02%)</title><rect x="95.3642%" y="501" width="0.0245%" height="15" fill="rgb(246,28,10)" fg:x="3888" fg:w="1"/><text x="95.6142%" y="511.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipherSeek&gt;::try_seek (1 samples, 0.02%)</title><rect x="95.3642%" y="485" width="0.0245%" height="15" fill="rgb(229,12,44)" fg:x="3888" fg:w="1"/><text x="95.6142%" y="495.50"></text></g><g><title>&lt;u64 as cipher::stream::SeekNum&gt;::into_block_byte (1 samples, 0.02%)</title><rect x="95.3642%" y="469" width="0.0245%" height="15" fill="rgb(210,145,37)" fg:x="3888" fg:w="1"/><text x="95.6142%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="95.3642%" y="453" width="0.0245%" height="15" fill="rgb(227,112,52)" fg:x="3888" fg:w="1"/><text x="95.6142%" y="463.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (2 samples, 0.05%)</title><rect x="95.3642%" y="517" width="0.0491%" height="15" fill="rgb(238,155,34)" fg:x="3888" fg:w="2"/><text x="95.6142%" y="527.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.02%)</title><rect x="95.3888%" y="501" width="0.0245%" height="15" fill="rgb(239,226,36)" fg:x="3889" fg:w="1"/><text x="95.6388%" y="511.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.02%)</title><rect x="95.3888%" y="485" width="0.0245%" height="15" fill="rgb(230,16,23)" fg:x="3889" fg:w="1"/><text x="95.6388%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.02%)</title><rect x="95.3888%" y="469" width="0.0245%" height="15" fill="rgb(236,171,36)" fg:x="3889" fg:w="1"/><text x="95.6388%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="95.3888%" y="453" width="0.0245%" height="15" fill="rgb(221,22,14)" fg:x="3889" fg:w="1"/><text x="95.6388%" y="463.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="95.3888%" y="437" width="0.0245%" height="15" fill="rgb(242,43,11)" fg:x="3889" fg:w="1"/><text x="95.6388%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.02%)</title><rect x="95.3888%" y="421" width="0.0245%" height="15" fill="rgb(232,69,23)" fg:x="3889" fg:w="1"/><text x="95.6388%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.02%)</title><rect x="95.3888%" y="405" width="0.0245%" height="15" fill="rgb(216,180,54)" fg:x="3889" fg:w="1"/><text x="95.6388%" y="415.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (1 samples, 0.02%)</title><rect x="95.3888%" y="389" width="0.0245%" height="15" fill="rgb(216,5,24)" fg:x="3889" fg:w="1"/><text x="95.6388%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.02%)</title><rect x="95.4133%" y="517" width="0.0245%" height="15" fill="rgb(225,89,9)" fg:x="3890" fg:w="1"/><text x="95.6633%" y="527.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.02%)</title><rect x="95.4378%" y="517" width="0.0245%" height="15" fill="rgb(243,75,33)" fg:x="3891" fg:w="1"/><text x="95.6878%" y="527.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi64 (1 samples, 0.02%)</title><rect x="95.4623%" y="517" width="0.0245%" height="15" fill="rgb(247,141,45)" fg:x="3892" fg:w="1"/><text x="95.7123%" y="527.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.02%)</title><rect x="95.4869%" y="517" width="0.0245%" height="15" fill="rgb(232,177,36)" fg:x="3893" fg:w="1"/><text x="95.7369%" y="527.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (1 samples, 0.02%)</title><rect x="95.5114%" y="517" width="0.0245%" height="15" fill="rgb(219,125,36)" fg:x="3894" fg:w="1"/><text x="95.7614%" y="527.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (2 samples, 0.05%)</title><rect x="95.5359%" y="517" width="0.0491%" height="15" fill="rgb(227,94,9)" fg:x="3895" fg:w="2"/><text x="95.7859%" y="527.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (2 samples, 0.05%)</title><rect x="95.5359%" y="501" width="0.0491%" height="15" fill="rgb(240,34,52)" fg:x="3895" fg:w="2"/><text x="95.7859%" y="511.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (2 samples, 0.05%)</title><rect x="95.5359%" y="485" width="0.0491%" height="15" fill="rgb(216,45,12)" fg:x="3895" fg:w="2"/><text x="95.7859%" y="495.50"></text></g><g><title>core::core_arch::simd::i8x32::new (1 samples, 0.02%)</title><rect x="95.5605%" y="469" width="0.0245%" height="15" fill="rgb(246,21,19)" fg:x="3896" fg:w="1"/><text x="95.8105%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (5 samples, 0.12%)</title><rect x="95.5850%" y="517" width="0.1226%" height="15" fill="rgb(213,98,42)" fg:x="3897" fg:w="5"/><text x="95.8350%" y="527.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.02%)</title><rect x="95.7076%" y="517" width="0.0245%" height="15" fill="rgb(250,136,47)" fg:x="3902" fg:w="1"/><text x="95.9576%" y="527.50"></text></g><g><title>tftp::encryption::Encryptor&lt;R&gt;::decrypt (96 samples, 2.35%)</title><rect x="93.4020%" y="549" width="2.3547%" height="15" fill="rgb(251,124,27)" fg:x="3808" fg:w="96"/><text x="93.6520%" y="559.50">t..</text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (96 samples, 2.35%)</title><rect x="93.4020%" y="533" width="2.3547%" height="15" fill="rgb(229,180,14)" fg:x="3808" fg:w="96"/><text x="93.6520%" y="543.50">&lt;..</text></g><g><title>poly1305::backend::avx2::State::process_blocks (1 samples, 0.02%)</title><rect x="95.7322%" y="517" width="0.0245%" height="15" fill="rgb(245,216,25)" fg:x="3903" fg:w="1"/><text x="95.9822%" y="527.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (1 samples, 0.02%)</title><rect x="95.7322%" y="501" width="0.0245%" height="15" fill="rgb(251,43,5)" fg:x="3903" fg:w="1"/><text x="95.9822%" y="511.50"></text></g><g><title>tftp::server::connection::Connection&lt;B,Rng&gt;::decrypt_packet (97 samples, 2.38%)</title><rect x="93.4020%" y="581" width="2.3792%" height="15" fill="rgb(250,128,24)" fg:x="3808" fg:w="97"/><text x="93.6520%" y="591.50">tf..</text></g><g><title>tftp::encrypted_packet::EncryptedPacket::decrypt (97 samples, 2.38%)</title><rect x="93.4020%" y="565" width="2.3792%" height="15" fill="rgb(217,117,27)" fg:x="3808" fg:w="97"/><text x="93.6520%" y="575.50">tf..</text></g><g><title>tftp::encryption::remove_bit_padding (1 samples, 0.02%)</title><rect x="95.7567%" y="549" width="0.0245%" height="15" fill="rgb(245,147,4)" fg:x="3904" fg:w="1"/><text x="96.0067%" y="559.50"></text></g><g><title>core::ptr::write_volatile (1 samples, 0.02%)</title><rect x="95.7567%" y="533" width="0.0245%" height="15" fill="rgb(242,201,35)" fg:x="3904" fg:w="1"/><text x="96.0067%" y="543.50"></text></g><g><title>ip_generic_getfrag (1 samples, 0.02%)</title><rect x="95.7812%" y="357" width="0.0245%" height="15" fill="rgb(218,181,1)" fg:x="3905" fg:w="1"/><text x="96.0312%" y="367.50"></text></g><g><title>__check_object_size (1 samples, 0.02%)</title><rect x="95.7812%" y="341" width="0.0245%" height="15" fill="rgb(222,6,29)" fg:x="3905" fg:w="1"/><text x="96.0312%" y="351.50"></text></g><g><title>check_stack_object (1 samples, 0.02%)</title><rect x="95.7812%" y="325" width="0.0245%" height="15" fill="rgb(208,186,3)" fg:x="3905" fg:w="1"/><text x="96.0312%" y="335.50"></text></g><g><title>kmalloc_reserve (1 samples, 0.02%)</title><rect x="95.8057%" y="309" width="0.0245%" height="15" fill="rgb(216,36,26)" fg:x="3906" fg:w="1"/><text x="96.0557%" y="319.50"></text></g><g><title>__kmalloc_node_track_caller (1 samples, 0.02%)</title><rect x="95.8057%" y="293" width="0.0245%" height="15" fill="rgb(248,201,23)" fg:x="3906" fg:w="1"/><text x="96.0557%" y="303.50"></text></g><g><title>__kmem_cache_alloc_node (1 samples, 0.02%)</title><rect x="95.8057%" y="277" width="0.0245%" height="15" fill="rgb(251,170,31)" fg:x="3906" fg:w="1"/><text x="96.0557%" y="287.50"></text></g><g><title>ip_make_skb (3 samples, 0.07%)</title><rect x="95.7812%" y="389" width="0.0736%" height="15" fill="rgb(207,110,25)" fg:x="3905" fg:w="3"/><text x="96.0312%" y="399.50"></text></g><g><title>__ip_append_data (3 samples, 0.07%)</title><rect x="95.7812%" y="373" width="0.0736%" height="15" fill="rgb(250,54,15)" fg:x="3905" fg:w="3"/><text x="96.0312%" y="383.50"></text></g><g><title>sock_alloc_send_pskb (2 samples, 0.05%)</title><rect x="95.8057%" y="357" width="0.0491%" height="15" fill="rgb(227,68,33)" fg:x="3906" fg:w="2"/><text x="96.0557%" y="367.50"></text></g><g><title>alloc_skb_with_frags (2 samples, 0.05%)</title><rect x="95.8057%" y="341" width="0.0491%" height="15" fill="rgb(238,34,41)" fg:x="3906" fg:w="2"/><text x="96.0557%" y="351.50"></text></g><g><title>__alloc_skb (2 samples, 0.05%)</title><rect x="95.8057%" y="325" width="0.0491%" height="15" fill="rgb(220,11,15)" fg:x="3906" fg:w="2"/><text x="96.0557%" y="335.50"></text></g><g><title>kmem_cache_alloc_node (1 samples, 0.02%)</title><rect x="95.8303%" y="309" width="0.0245%" height="15" fill="rgb(246,111,35)" fg:x="3907" fg:w="1"/><text x="96.0803%" y="319.50"></text></g><g><title>__memset (1 samples, 0.02%)</title><rect x="95.8303%" y="293" width="0.0245%" height="15" fill="rgb(209,88,53)" fg:x="3907" fg:w="1"/><text x="96.0803%" y="303.50"></text></g><g><title>__ip_finish_output (1 samples, 0.02%)</title><rect x="95.8548%" y="357" width="0.0245%" height="15" fill="rgb(231,185,47)" fg:x="3908" fg:w="1"/><text x="96.1048%" y="367.50"></text></g><g><title>__ip_local_out (3 samples, 0.07%)</title><rect x="95.8793%" y="357" width="0.0736%" height="15" fill="rgb(233,154,1)" fg:x="3909" fg:w="3"/><text x="96.1293%" y="367.50"></text></g><g><title>nf_hook_slow (3 samples, 0.07%)</title><rect x="95.8793%" y="341" width="0.0736%" height="15" fill="rgb(225,15,46)" fg:x="3909" fg:w="3"/><text x="96.1293%" y="351.50"></text></g><g><title>nf_conntrack_in (3 samples, 0.07%)</title><rect x="95.8793%" y="325" width="0.0736%" height="15" fill="rgb(211,135,41)" fg:x="3909" fg:w="3"/><text x="96.1293%" y="335.50"></text></g><g><title>__nf_conntrack_find_get (3 samples, 0.07%)</title><rect x="95.8793%" y="309" width="0.0736%" height="15" fill="rgb(208,54,0)" fg:x="3909" fg:w="3"/><text x="96.1293%" y="319.50"></text></g><g><title>__netif_rx (1 samples, 0.02%)</title><rect x="95.9774%" y="293" width="0.0245%" height="15" fill="rgb(244,136,14)" fg:x="3913" fg:w="1"/><text x="96.2274%" y="303.50"></text></g><g><title>netif_rx_internal (1 samples, 0.02%)</title><rect x="95.9774%" y="277" width="0.0245%" height="15" fill="rgb(241,56,14)" fg:x="3913" fg:w="1"/><text x="96.2274%" y="287.50"></text></g><g><title>enqueue_to_backlog (1 samples, 0.02%)</title><rect x="95.9774%" y="261" width="0.0245%" height="15" fill="rgb(205,80,24)" fg:x="3913" fg:w="1"/><text x="96.2274%" y="271.50"></text></g><g><title>__dev_queue_xmit (3 samples, 0.07%)</title><rect x="95.9529%" y="341" width="0.0736%" height="15" fill="rgb(220,57,4)" fg:x="3912" fg:w="3"/><text x="96.2029%" y="351.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.05%)</title><rect x="95.9774%" y="325" width="0.0491%" height="15" fill="rgb(226,193,50)" fg:x="3913" fg:w="2"/><text x="96.2274%" y="335.50"></text></g><g><title>loopback_xmit (2 samples, 0.05%)</title><rect x="95.9774%" y="309" width="0.0491%" height="15" fill="rgb(231,168,22)" fg:x="3913" fg:w="2"/><text x="96.2274%" y="319.50"></text></g><g><title>sock_wfree (1 samples, 0.02%)</title><rect x="96.0020%" y="293" width="0.0245%" height="15" fill="rgb(254,215,14)" fg:x="3914" fg:w="1"/><text x="96.2520%" y="303.50"></text></g><g><title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="96.0020%" y="277" width="0.0245%" height="15" fill="rgb(211,115,16)" fg:x="3914" fg:w="1"/><text x="96.2520%" y="287.50"></text></g><g><title>__wake_up_common (1 samples, 0.02%)</title><rect x="96.0020%" y="261" width="0.0245%" height="15" fill="rgb(236,210,16)" fg:x="3914" fg:w="1"/><text x="96.2520%" y="271.50"></text></g><g><title>ep_poll_callback (1 samples, 0.02%)</title><rect x="96.0020%" y="245" width="0.0245%" height="15" fill="rgb(221,94,12)" fg:x="3914" fg:w="1"/><text x="96.2520%" y="255.50"></text></g><g><title>_raw_read_lock_irqsave (1 samples, 0.02%)</title><rect x="96.0020%" y="229" width="0.0245%" height="15" fill="rgb(235,218,49)" fg:x="3914" fg:w="1"/><text x="96.2520%" y="239.50"></text></g><g><title>ip_local_deliver_finish (3 samples, 0.07%)</title><rect x="96.0265%" y="229" width="0.0736%" height="15" fill="rgb(217,114,14)" fg:x="3915" fg:w="3"/><text x="96.2765%" y="239.50"></text></g><g><title>ip_protocol_deliver_rcu (3 samples, 0.07%)</title><rect x="96.0265%" y="213" width="0.0736%" height="15" fill="rgb(216,145,22)" fg:x="3915" fg:w="3"/><text x="96.2765%" y="223.50"></text></g><g><title>__udp4_lib_rcv (3 samples, 0.07%)</title><rect x="96.0265%" y="197" width="0.0736%" height="15" fill="rgb(217,112,39)" fg:x="3915" fg:w="3"/><text x="96.2765%" y="207.50"></text></g><g><title>udp_unicast_rcv_skb (2 samples, 0.05%)</title><rect x="96.0510%" y="181" width="0.0491%" height="15" fill="rgb(225,85,32)" fg:x="3916" fg:w="2"/><text x="96.3010%" y="191.50"></text></g><g><title>udp_queue_rcv_one_skb (2 samples, 0.05%)</title><rect x="96.0510%" y="165" width="0.0491%" height="15" fill="rgb(245,209,47)" fg:x="3916" fg:w="2"/><text x="96.3010%" y="175.50"></text></g><g><title>__udp_enqueue_schedule_skb (2 samples, 0.05%)</title><rect x="96.0510%" y="149" width="0.0491%" height="15" fill="rgb(218,220,15)" fg:x="3916" fg:w="2"/><text x="96.3010%" y="159.50"></text></g><g><title>sock_def_readable (1 samples, 0.02%)</title><rect x="96.0755%" y="133" width="0.0245%" height="15" fill="rgb(222,202,31)" fg:x="3917" fg:w="1"/><text x="96.3255%" y="143.50"></text></g><g><title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="96.0755%" y="117" width="0.0245%" height="15" fill="rgb(243,203,4)" fg:x="3917" fg:w="1"/><text x="96.3255%" y="127.50"></text></g><g><title>__wake_up_common (1 samples, 0.02%)</title><rect x="96.0755%" y="101" width="0.0245%" height="15" fill="rgb(237,92,17)" fg:x="3917" fg:w="1"/><text x="96.3255%" y="111.50"></text></g><g><title>ep_poll_callback (1 samples, 0.02%)</title><rect x="96.0755%" y="85" width="0.0245%" height="15" fill="rgb(231,119,7)" fg:x="3917" fg:w="1"/><text x="96.3255%" y="95.50"></text></g><g><title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="96.0755%" y="69" width="0.0245%" height="15" fill="rgb(237,82,41)" fg:x="3917" fg:w="1"/><text x="96.3255%" y="79.50"></text></g><g><title>__wake_up_common (1 samples, 0.02%)</title><rect x="96.0755%" y="53" width="0.0245%" height="15" fill="rgb(226,81,48)" fg:x="3917" fg:w="1"/><text x="96.3255%" y="63.50"></text></g><g><title>ep_autoremove_wake_function (1 samples, 0.02%)</title><rect x="96.0755%" y="37" width="0.0245%" height="15" fill="rgb(234,70,51)" fg:x="3917" fg:w="1"/><text x="96.3255%" y="47.50"></text></g><g><title>__x64_sys_sendto (14 samples, 0.34%)</title><rect x="95.7812%" y="453" width="0.3434%" height="15" fill="rgb(251,86,4)" fg:x="3905" fg:w="14"/><text x="96.0312%" y="463.50"></text></g><g><title>__sys_sendto (14 samples, 0.34%)</title><rect x="95.7812%" y="437" width="0.3434%" height="15" fill="rgb(244,144,28)" fg:x="3905" fg:w="14"/><text x="96.0312%" y="447.50"></text></g><g><title>sock_sendmsg (14 samples, 0.34%)</title><rect x="95.7812%" y="421" width="0.3434%" height="15" fill="rgb(232,161,39)" fg:x="3905" fg:w="14"/><text x="96.0312%" y="431.50"></text></g><g><title>udp_sendmsg (14 samples, 0.34%)</title><rect x="95.7812%" y="405" width="0.3434%" height="15" fill="rgb(247,34,51)" fg:x="3905" fg:w="14"/><text x="96.0312%" y="415.50"></text></g><g><title>udp_send_skb (11 samples, 0.27%)</title><rect x="95.8548%" y="389" width="0.2698%" height="15" fill="rgb(225,132,2)" fg:x="3908" fg:w="11"/><text x="96.1048%" y="399.50"></text></g><g><title>ip_send_skb (11 samples, 0.27%)</title><rect x="95.8548%" y="373" width="0.2698%" height="15" fill="rgb(209,159,44)" fg:x="3908" fg:w="11"/><text x="96.1048%" y="383.50"></text></g><g><title>ip_finish_output2 (7 samples, 0.17%)</title><rect x="95.9529%" y="357" width="0.1717%" height="15" fill="rgb(251,214,1)" fg:x="3912" fg:w="7"/><text x="96.2029%" y="367.50"></text></g><g><title>__local_bh_enable_ip (4 samples, 0.10%)</title><rect x="96.0265%" y="341" width="0.0981%" height="15" fill="rgb(247,84,47)" fg:x="3915" fg:w="4"/><text x="96.2765%" y="351.50"></text></g><g><title>do_softirq.part.0 (4 samples, 0.10%)</title><rect x="96.0265%" y="325" width="0.0981%" height="15" fill="rgb(240,111,43)" fg:x="3915" fg:w="4"/><text x="96.2765%" y="335.50"></text></g><g><title>__do_softirq (4 samples, 0.10%)</title><rect x="96.0265%" y="309" width="0.0981%" height="15" fill="rgb(215,214,35)" fg:x="3915" fg:w="4"/><text x="96.2765%" y="319.50"></text></g><g><title>net_rx_action (4 samples, 0.10%)</title><rect x="96.0265%" y="293" width="0.0981%" height="15" fill="rgb(248,207,23)" fg:x="3915" fg:w="4"/><text x="96.2765%" y="303.50"></text></g><g><title>__napi_poll (4 samples, 0.10%)</title><rect x="96.0265%" y="277" width="0.0981%" height="15" fill="rgb(214,186,4)" fg:x="3915" fg:w="4"/><text x="96.2765%" y="287.50"></text></g><g><title>process_backlog (4 samples, 0.10%)</title><rect x="96.0265%" y="261" width="0.0981%" height="15" fill="rgb(220,133,22)" fg:x="3915" fg:w="4"/><text x="96.2765%" y="271.50"></text></g><g><title>__netif_receive_skb_one_core (4 samples, 0.10%)</title><rect x="96.0265%" y="245" width="0.0981%" height="15" fill="rgb(239,134,19)" fg:x="3915" fg:w="4"/><text x="96.2765%" y="255.50"></text></g><g><title>ip_rcv (1 samples, 0.02%)</title><rect x="96.1001%" y="229" width="0.0245%" height="15" fill="rgb(250,140,9)" fg:x="3918" fg:w="1"/><text x="96.3501%" y="239.50"></text></g><g><title>nf_hook_slow (1 samples, 0.02%)</title><rect x="96.1001%" y="213" width="0.0245%" height="15" fill="rgb(225,59,14)" fg:x="3918" fg:w="1"/><text x="96.3501%" y="223.50"></text></g><g><title>ipv4_conntrack_in (1 samples, 0.02%)</title><rect x="96.1001%" y="197" width="0.0245%" height="15" fill="rgb(214,152,51)" fg:x="3918" fg:w="1"/><text x="96.3501%" y="207.50"></text></g><g><title>&lt;tftp::socket::UdpBoundSocket as tftp::socket::BoundSocket&gt;::send (15 samples, 0.37%)</title><rect x="95.7812%" y="549" width="0.3679%" height="15" fill="rgb(251,227,43)" fg:x="3905" fg:w="15"/><text x="96.0312%" y="559.50"></text></g><g><title>std::net::udp::UdpSocket::send (15 samples, 0.37%)</title><rect x="95.7812%" y="533" width="0.3679%" height="15" fill="rgb(241,96,17)" fg:x="3905" fg:w="15"/><text x="96.0312%" y="543.50"></text></g><g><title>std::sys_common::net::UdpSocket::send (15 samples, 0.37%)</title><rect x="95.7812%" y="517" width="0.3679%" height="15" fill="rgb(234,198,43)" fg:x="3905" fg:w="15"/><text x="96.0312%" y="527.50"></text></g><g><title>__libc_send (15 samples, 0.37%)</title><rect x="95.7812%" y="501" width="0.3679%" height="15" fill="rgb(220,108,29)" fg:x="3905" fg:w="15"/><text x="96.0312%" y="511.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (15 samples, 0.37%)</title><rect x="95.7812%" y="485" width="0.3679%" height="15" fill="rgb(226,163,33)" fg:x="3905" fg:w="15"/><text x="96.0312%" y="495.50"></text></g><g><title>do_syscall_64 (15 samples, 0.37%)</title><rect x="95.7812%" y="469" width="0.3679%" height="15" fill="rgb(205,194,45)" fg:x="3905" fg:w="15"/><text x="96.0312%" y="479.50"></text></g><g><title>syscall_exit_to_user_mode (1 samples, 0.02%)</title><rect x="96.1246%" y="453" width="0.0245%" height="15" fill="rgb(206,143,44)" fg:x="3919" fg:w="1"/><text x="96.3746%" y="463.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.02%)</title><rect x="96.1246%" y="437" width="0.0245%" height="15" fill="rgb(236,136,36)" fg:x="3919" fg:w="1"/><text x="96.3746%" y="447.50"></text></g><g><title>fpregs_assert_state_consistent (1 samples, 0.02%)</title><rect x="96.1246%" y="421" width="0.0245%" height="15" fill="rgb(249,172,42)" fg:x="3919" fg:w="1"/><text x="96.3746%" y="431.50"></text></g><g><title>check_preemption_disabled (1 samples, 0.02%)</title><rect x="96.1246%" y="405" width="0.0245%" height="15" fill="rgb(216,139,23)" fg:x="3919" fg:w="1"/><text x="96.3746%" y="415.50"></text></g><g><title>chacha20::xchacha::quarter_round (3 samples, 0.07%)</title><rect x="96.1491%" y="453" width="0.0736%" height="15" fill="rgb(207,166,20)" fg:x="3920" fg:w="3"/><text x="96.3991%" y="463.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as crypto_common::KeyIvInit&gt;::new (4 samples, 0.10%)</title><rect x="96.1491%" y="501" width="0.0981%" height="15" fill="rgb(210,209,22)" fg:x="3920" fg:w="4"/><text x="96.3991%" y="511.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (4 samples, 0.10%)</title><rect x="96.1491%" y="485" width="0.0981%" height="15" fill="rgb(232,118,20)" fg:x="3920" fg:w="4"/><text x="96.3991%" y="495.50"></text></g><g><title>chacha20::xchacha::hchacha (4 samples, 0.10%)</title><rect x="96.1491%" y="469" width="0.0981%" height="15" fill="rgb(238,113,42)" fg:x="3920" fg:w="4"/><text x="96.3991%" y="479.50"></text></g><g><title>core::array::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T: N]&gt;::index_mut (1 samples, 0.02%)</title><rect x="96.2227%" y="453" width="0.0245%" height="15" fill="rgb(231,42,5)" fg:x="3923" fg:w="1"/><text x="96.4727%" y="463.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.02%)</title><rect x="96.2227%" y="437" width="0.0245%" height="15" fill="rgb(243,166,24)" fg:x="3923" fg:w="1"/><text x="96.4727%" y="447.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.02%)</title><rect x="96.2227%" y="421" width="0.0245%" height="15" fill="rgb(237,226,12)" fg:x="3923" fg:w="1"/><text x="96.4727%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="96.2472%" y="373" width="0.0245%" height="15" fill="rgb(229,133,24)" fg:x="3924" fg:w="1"/><text x="96.4972%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="96.2718%" y="357" width="0.0245%" height="15" fill="rgb(238,33,43)" fg:x="3925" fg:w="1"/><text x="96.5218%" y="367.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::encrypt_in_place_detached (3 samples, 0.07%)</title><rect x="96.2472%" y="501" width="0.0736%" height="15" fill="rgb(227,59,38)" fg:x="3924" fg:w="3"/><text x="96.4972%" y="511.50"></text></g><g><title>universal_hash::UniversalHash::update_padded (3 samples, 0.07%)</title><rect x="96.2472%" y="485" width="0.0736%" height="15" fill="rgb(230,97,0)" fg:x="3924" fg:w="3"/><text x="96.4972%" y="495.50"></text></g><g><title>universal_hash::UniversalHash::update (3 samples, 0.07%)</title><rect x="96.2472%" y="469" width="0.0736%" height="15" fill="rgb(250,173,50)" fg:x="3924" fg:w="3"/><text x="96.4972%" y="479.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (3 samples, 0.07%)</title><rect x="96.2472%" y="453" width="0.0736%" height="15" fill="rgb(240,15,50)" fg:x="3924" fg:w="3"/><text x="96.4972%" y="463.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (3 samples, 0.07%)</title><rect x="96.2472%" y="437" width="0.0736%" height="15" fill="rgb(221,93,22)" fg:x="3924" fg:w="3"/><text x="96.4972%" y="447.50"></text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (3 samples, 0.07%)</title><rect x="96.2472%" y="421" width="0.0736%" height="15" fill="rgb(245,180,53)" fg:x="3924" fg:w="3"/><text x="96.4972%" y="431.50"></text></g><g><title>&lt;poly1305::backend::avx2::State as universal_hash::UhfBackend&gt;::proc_par_blocks (3 samples, 0.07%)</title><rect x="96.2472%" y="405" width="0.0736%" height="15" fill="rgb(231,88,51)" fg:x="3924" fg:w="3"/><text x="96.4972%" y="415.50"></text></g><g><title>poly1305::backend::avx2::State::compute_par_blocks (3 samples, 0.07%)</title><rect x="96.2472%" y="389" width="0.0736%" height="15" fill="rgb(240,58,21)" fg:x="3924" fg:w="3"/><text x="96.4972%" y="399.50"></text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_par_blocks (2 samples, 0.05%)</title><rect x="96.2718%" y="373" width="0.0491%" height="15" fill="rgb(237,21,10)" fg:x="3925" fg:w="2"/><text x="96.5218%" y="383.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (1 samples, 0.02%)</title><rect x="96.2963%" y="357" width="0.0245%" height="15" fill="rgb(218,43,11)" fg:x="3926" fg:w="1"/><text x="96.5463%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.02%)</title><rect x="96.3208%" y="501" width="0.0245%" height="15" fill="rgb(218,221,29)" fg:x="3927" fg:w="1"/><text x="96.5708%" y="511.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (1 samples, 0.02%)</title><rect x="96.3454%" y="501" width="0.0245%" height="15" fill="rgb(214,118,42)" fg:x="3928" fg:w="1"/><text x="96.5954%" y="511.50"></text></g><g><title>core::core_arch::simd::u64x4::splat (1 samples, 0.02%)</title><rect x="96.3454%" y="485" width="0.0245%" height="15" fill="rgb(251,200,26)" fg:x="3928" fg:w="1"/><text x="96.5954%" y="495.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.02%)</title><rect x="96.3699%" y="501" width="0.0245%" height="15" fill="rgb(237,101,39)" fg:x="3929" fg:w="1"/><text x="96.6199%" y="511.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi64x (1 samples, 0.02%)</title><rect x="96.3699%" y="485" width="0.0245%" height="15" fill="rgb(251,117,11)" fg:x="3929" fg:w="1"/><text x="96.6199%" y="495.50"></text></g><g><title>core::core_arch::simd::i64x4::new (1 samples, 0.02%)</title><rect x="96.3699%" y="469" width="0.0245%" height="15" fill="rgb(216,223,23)" fg:x="3929" fg:w="1"/><text x="96.6199%" y="479.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::encrypt_in_place_detached (11 samples, 0.27%)</title><rect x="96.1491%" y="517" width="0.2698%" height="15" fill="rgb(251,54,12)" fg:x="3920" fg:w="11"/><text x="96.3991%" y="527.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="96.3944%" y="501" width="0.0245%" height="15" fill="rgb(254,176,54)" fg:x="3930" fg:w="1"/><text x="96.6444%" y="511.50"></text></g><g><title>tftp::encryption::Encryptor&lt;R&gt;::encrypt (12 samples, 0.29%)</title><rect x="96.1491%" y="533" width="0.2943%" height="15" fill="rgb(210,32,8)" fg:x="3920" fg:w="12"/><text x="96.3991%" y="543.50"></text></g><g><title>aead::AeadCore::generate_nonce (1 samples, 0.02%)</title><rect x="96.4189%" y="517" width="0.0245%" height="15" fill="rgb(235,52,38)" fg:x="3931" fg:w="1"/><text x="96.6689%" y="527.50"></text></g><g><title>&lt;rand_core::os::OsRng as rand_core::RngCore&gt;::fill_bytes (1 samples, 0.02%)</title><rect x="96.4189%" y="501" width="0.0245%" height="15" fill="rgb(231,4,44)" fg:x="3931" fg:w="1"/><text x="96.6689%" y="511.50"></text></g><g><title>&lt;rand_core::os::OsRng as rand_core::RngCore&gt;::try_fill_bytes (1 samples, 0.02%)</title><rect x="96.4189%" y="485" width="0.0245%" height="15" fill="rgb(249,2,32)" fg:x="3931" fg:w="1"/><text x="96.6689%" y="495.50"></text></g><g><title>getrandom::util_libc::sys_fill_exact (1 samples, 0.02%)</title><rect x="96.4189%" y="469" width="0.0245%" height="15" fill="rgb(224,65,26)" fg:x="3931" fg:w="1"/><text x="96.6689%" y="479.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.02%)</title><rect x="96.4925%" y="517" width="0.0245%" height="15" fill="rgb(250,73,40)" fg:x="3934" fg:w="1"/><text x="96.7425%" y="527.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="96.5170%" y="517" width="0.0245%" height="15" fill="rgb(253,177,16)" fg:x="3935" fg:w="1"/><text x="96.7670%" y="527.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3 samples, 0.07%)</title><rect x="96.5661%" y="485" width="0.0736%" height="15" fill="rgb(217,32,34)" fg:x="3937" fg:w="3"/><text x="96.8161%" y="495.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (7 samples, 0.17%)</title><rect x="96.5661%" y="501" width="0.1717%" height="15" fill="rgb(212,7,10)" fg:x="3937" fg:w="7"/><text x="96.8161%" y="511.50"></text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::push (4 samples, 0.10%)</title><rect x="96.6397%" y="485" width="0.0981%" height="15" fill="rgb(245,89,8)" fg:x="3940" fg:w="4"/><text x="96.8897%" y="495.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (9 samples, 0.22%)</title><rect x="96.5416%" y="517" width="0.2208%" height="15" fill="rgb(237,16,53)" fg:x="3936" fg:w="9"/><text x="96.7916%" y="527.50"></text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::push (1 samples, 0.02%)</title><rect x="96.7378%" y="501" width="0.0245%" height="15" fill="rgb(250,204,30)" fg:x="3944" fg:w="1"/><text x="96.9878%" y="511.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (2 samples, 0.05%)</title><rect x="96.7623%" y="517" width="0.0491%" height="15" fill="rgb(208,77,27)" fg:x="3945" fg:w="2"/><text x="97.0123%" y="527.50"></text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::is_full (1 samples, 0.02%)</title><rect x="96.8114%" y="517" width="0.0245%" height="15" fill="rgb(250,204,28)" fg:x="3947" fg:w="1"/><text x="97.0614%" y="527.50"></text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::push (11 samples, 0.27%)</title><rect x="96.8359%" y="517" width="0.2698%" height="15" fill="rgb(244,63,21)" fg:x="3948" fg:w="11"/><text x="97.0859%" y="527.50"></text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::push_unchecked (11 samples, 0.27%)</title><rect x="96.8359%" y="501" width="0.2698%" height="15" fill="rgb(236,85,44)" fg:x="3948" fg:w="11"/><text x="97.0859%" y="511.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::new (3 samples, 0.07%)</title><rect x="97.0321%" y="485" width="0.0736%" height="15" fill="rgb(215,98,4)" fg:x="3956" fg:w="3"/><text x="97.2821%" y="495.50"></text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::push_unchecked (4 samples, 0.10%)</title><rect x="97.1057%" y="517" width="0.0981%" height="15" fill="rgb(235,38,11)" fg:x="3959" fg:w="4"/><text x="97.3557%" y="527.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::new (2 samples, 0.05%)</title><rect x="97.1548%" y="501" width="0.0491%" height="15" fill="rgb(254,186,25)" fg:x="3961" fg:w="2"/><text x="97.4048%" y="511.50"></text></g><g><title>tftp::server::connection::Connection&lt;B,Rng&gt;::send_packet (61 samples, 1.50%)</title><rect x="95.7812%" y="581" width="1.4962%" height="15" fill="rgb(225,55,31)" fg:x="3905" fg:w="61"/><text x="96.0312%" y="591.50"></text></g><g><title>tftp::server::connection::Connection&lt;B,Rng&gt;::send_bytes (61 samples, 1.50%)</title><rect x="95.7812%" y="565" width="1.4962%" height="15" fill="rgb(211,15,21)" fg:x="3905" fg:w="61"/><text x="96.0312%" y="575.50"></text></g><g><title>tftp::encrypted_packet::EncryptedPacket::encrypt (46 samples, 1.13%)</title><rect x="96.1491%" y="549" width="1.1283%" height="15" fill="rgb(215,187,41)" fg:x="3920" fg:w="46"/><text x="96.3991%" y="559.50"></text></g><g><title>tftp::encryption::apply_bit_padding (34 samples, 0.83%)</title><rect x="96.4435%" y="533" width="0.8339%" height="15" fill="rgb(248,69,32)" fg:x="3932" fg:w="34"/><text x="96.6935%" y="543.50"></text></g><g><title>tftp::encryption::apply_bit_padding (3 samples, 0.07%)</title><rect x="97.2038%" y="517" width="0.0736%" height="15" fill="rgb(252,102,52)" fg:x="3963" fg:w="3"/><text x="97.4538%" y="527.50"></text></g><g><title>dput (1 samples, 0.02%)</title><rect x="97.3019%" y="373" width="0.0245%" height="15" fill="rgb(253,140,32)" fg:x="3967" fg:w="1"/><text x="97.5519%" y="383.50"></text></g><g><title>__cond_resched (1 samples, 0.02%)</title><rect x="97.4246%" y="309" width="0.0245%" height="15" fill="rgb(216,56,42)" fg:x="3972" fg:w="1"/><text x="97.6746%" y="319.50"></text></g><g><title>__kmalloc (3 samples, 0.07%)</title><rect x="97.4000%" y="341" width="0.0736%" height="15" fill="rgb(216,184,14)" fg:x="3971" fg:w="3"/><text x="97.6500%" y="351.50"></text></g><g><title>__kmem_cache_alloc_node (3 samples, 0.07%)</title><rect x="97.4000%" y="325" width="0.0736%" height="15" fill="rgb(237,187,27)" fg:x="3971" fg:w="3"/><text x="97.6500%" y="335.50"></text></g><g><title>should_failslab (1 samples, 0.02%)</title><rect x="97.4491%" y="309" width="0.0245%" height="15" fill="rgb(219,65,3)" fg:x="3973" fg:w="1"/><text x="97.6991%" y="319.50"></text></g><g><title>select_task_rq_fair (1 samples, 0.02%)</title><rect x="97.5472%" y="261" width="0.0245%" height="15" fill="rgb(245,83,25)" fg:x="3977" fg:w="1"/><text x="97.7972%" y="271.50"></text></g><g><title>default_send_IPI_single_phys (1 samples, 0.02%)</title><rect x="97.5717%" y="245" width="0.0245%" height="15" fill="rgb(214,205,45)" fg:x="3978" fg:w="1"/><text x="97.8217%" y="255.50"></text></g><g><title>__default_send_IPI_dest_field (1 samples, 0.02%)</title><rect x="97.5717%" y="229" width="0.0245%" height="15" fill="rgb(241,20,18)" fg:x="3978" fg:w="1"/><text x="97.8217%" y="239.50"></text></g><g><title>__wake_up_common_lock (6 samples, 0.15%)</title><rect x="97.4736%" y="325" width="0.1472%" height="15" fill="rgb(232,163,23)" fg:x="3974" fg:w="6"/><text x="97.7236%" y="335.50"></text></g><g><title>__wake_up_common (6 samples, 0.15%)</title><rect x="97.4736%" y="309" width="0.1472%" height="15" fill="rgb(214,5,46)" fg:x="3974" fg:w="6"/><text x="97.7236%" y="319.50"></text></g><g><title>pollwake (4 samples, 0.10%)</title><rect x="97.5227%" y="293" width="0.0981%" height="15" fill="rgb(229,78,17)" fg:x="3976" fg:w="4"/><text x="97.7727%" y="303.50"></text></g><g><title>try_to_wake_up (4 samples, 0.10%)</title><rect x="97.5227%" y="277" width="0.0981%" height="15" fill="rgb(248,89,10)" fg:x="3976" fg:w="4"/><text x="97.7727%" y="287.50"></text></g><g><title>ttwu_queue_wakelist (2 samples, 0.05%)</title><rect x="97.5717%" y="261" width="0.0491%" height="15" fill="rgb(248,54,15)" fg:x="3978" fg:w="2"/><text x="97.8217%" y="271.50"></text></g><g><title>send_call_function_single_ipi (1 samples, 0.02%)</title><rect x="97.5963%" y="245" width="0.0245%" height="15" fill="rgb(223,116,6)" fg:x="3979" fg:w="1"/><text x="97.8463%" y="255.50"></text></g><g><title>__fsnotify_parent (14 samples, 0.34%)</title><rect x="97.3019%" y="389" width="0.3434%" height="15" fill="rgb(205,125,38)" fg:x="3967" fg:w="14"/><text x="97.5519%" y="399.50"></text></g><g><title>fsnotify (13 samples, 0.32%)</title><rect x="97.3265%" y="373" width="0.3189%" height="15" fill="rgb(251,78,38)" fg:x="3968" fg:w="13"/><text x="97.5765%" y="383.50"></text></g><g><title>inotify_handle_inode_event (10 samples, 0.25%)</title><rect x="97.4000%" y="357" width="0.2453%" height="15" fill="rgb(253,78,28)" fg:x="3971" fg:w="10"/><text x="97.6500%" y="367.50"></text></g><g><title>fsnotify_insert_event (7 samples, 0.17%)</title><rect x="97.4736%" y="341" width="0.1717%" height="15" fill="rgb(209,120,3)" fg:x="3974" fg:w="7"/><text x="97.7236%" y="351.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.02%)</title><rect x="97.6208%" y="325" width="0.0245%" height="15" fill="rgb(238,229,9)" fg:x="3980" fg:w="1"/><text x="97.8708%" y="335.50"></text></g><g><title>preempt_count_sub (1 samples, 0.02%)</title><rect x="97.6208%" y="309" width="0.0245%" height="15" fill="rgb(253,159,18)" fg:x="3980" fg:w="1"/><text x="97.8708%" y="319.50"></text></g><g><title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="97.6699%" y="293" width="0.0245%" height="15" fill="rgb(244,42,34)" fg:x="3982" fg:w="1"/><text x="97.9199%" y="303.50"></text></g><g><title>file_modified_flags (2 samples, 0.05%)</title><rect x="97.6699%" y="373" width="0.0491%" height="15" fill="rgb(224,8,7)" fg:x="3982" fg:w="2"/><text x="97.9199%" y="383.50"></text></g><g><title>generic_update_time (2 samples, 0.05%)</title><rect x="97.6699%" y="357" width="0.0491%" height="15" fill="rgb(210,201,45)" fg:x="3982" fg:w="2"/><text x="97.9199%" y="367.50"></text></g><g><title>__mark_inode_dirty (2 samples, 0.05%)</title><rect x="97.6699%" y="341" width="0.0491%" height="15" fill="rgb(252,185,21)" fg:x="3982" fg:w="2"/><text x="97.9199%" y="351.50"></text></g><g><title>ext4_dirty_inode (2 samples, 0.05%)</title><rect x="97.6699%" y="325" width="0.0491%" height="15" fill="rgb(223,131,1)" fg:x="3982" fg:w="2"/><text x="97.9199%" y="335.50"></text></g><g><title>jbd2__journal_start (2 samples, 0.05%)</title><rect x="97.6699%" y="309" width="0.0491%" height="15" fill="rgb(245,141,16)" fg:x="3982" fg:w="2"/><text x="97.9199%" y="319.50"></text></g><g><title>start_this_handle (1 samples, 0.02%)</title><rect x="97.6944%" y="293" width="0.0245%" height="15" fill="rgb(229,55,45)" fg:x="3983" fg:w="1"/><text x="97.9444%" y="303.50"></text></g><g><title>balance_dirty_pages_ratelimited_flags (1 samples, 0.02%)</title><rect x="97.7189%" y="357" width="0.0245%" height="15" fill="rgb(208,92,15)" fg:x="3984" fg:w="1"/><text x="97.9689%" y="367.50"></text></g><g><title>copy_page_from_iter_atomic (1 samples, 0.02%)</title><rect x="97.7434%" y="357" width="0.0245%" height="15" fill="rgb(234,185,47)" fg:x="3985" fg:w="1"/><text x="97.9934%" y="367.50"></text></g><g><title>create_empty_buffers (1 samples, 0.02%)</title><rect x="97.7680%" y="325" width="0.0245%" height="15" fill="rgb(253,104,50)" fg:x="3986" fg:w="1"/><text x="98.0180%" y="335.50"></text></g><g><title>alloc_page_buffers (1 samples, 0.02%)</title><rect x="97.7680%" y="309" width="0.0245%" height="15" fill="rgb(205,70,7)" fg:x="3986" fg:w="1"/><text x="98.0180%" y="319.50"></text></g><g><title>alloc_buffer_head (1 samples, 0.02%)</title><rect x="97.7680%" y="293" width="0.0245%" height="15" fill="rgb(240,178,43)" fg:x="3986" fg:w="1"/><text x="98.0180%" y="303.50"></text></g><g><title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="97.7680%" y="277" width="0.0245%" height="15" fill="rgb(214,112,2)" fg:x="3986" fg:w="1"/><text x="98.0180%" y="287.50"></text></g><g><title>__es_insert_extent (2 samples, 0.05%)</title><rect x="97.8416%" y="293" width="0.0491%" height="15" fill="rgb(206,46,17)" fg:x="3989" fg:w="2"/><text x="98.0916%" y="303.50"></text></g><g><title>ext4_es_insert_delayed_block (3 samples, 0.07%)</title><rect x="97.8416%" y="309" width="0.0736%" height="15" fill="rgb(225,220,16)" fg:x="3989" fg:w="3"/><text x="98.0916%" y="319.50"></text></g><g><title>_raw_write_unlock (1 samples, 0.02%)</title><rect x="97.8906%" y="293" width="0.0245%" height="15" fill="rgb(238,65,40)" fg:x="3991" fg:w="1"/><text x="98.1406%" y="303.50"></text></g><g><title>preempt_count_sub (1 samples, 0.02%)</title><rect x="97.8906%" y="277" width="0.0245%" height="15" fill="rgb(230,151,21)" fg:x="3991" fg:w="1"/><text x="98.1406%" y="287.50"></text></g><g><title>ext4_block_write_begin (8 samples, 0.20%)</title><rect x="97.7680%" y="341" width="0.1962%" height="15" fill="rgb(218,58,49)" fg:x="3986" fg:w="8"/><text x="98.0180%" y="351.50"></text></g><g><title>ext4_da_get_block_prep (7 samples, 0.17%)</title><rect x="97.7925%" y="325" width="0.1717%" height="15" fill="rgb(219,179,14)" fg:x="3987" fg:w="7"/><text x="98.0425%" y="335.50"></text></g><g><title>ext4_es_lookup_extent (2 samples, 0.05%)</title><rect x="97.9151%" y="309" width="0.0491%" height="15" fill="rgb(223,72,1)" fg:x="3992" fg:w="2"/><text x="98.1651%" y="319.50"></text></g><g><title>_raw_read_lock (2 samples, 0.05%)</title><rect x="97.9151%" y="293" width="0.0491%" height="15" fill="rgb(238,126,10)" fg:x="3992" fg:w="2"/><text x="98.1651%" y="303.50"></text></g><g><title>__filemap_add_folio (1 samples, 0.02%)</title><rect x="97.9642%" y="293" width="0.0245%" height="15" fill="rgb(224,206,38)" fg:x="3994" fg:w="1"/><text x="98.2142%" y="303.50"></text></g><g><title>__mem_cgroup_charge (1 samples, 0.02%)</title><rect x="97.9642%" y="277" width="0.0245%" height="15" fill="rgb(212,201,54)" fg:x="3994" fg:w="1"/><text x="98.2142%" y="287.50"></text></g><g><title>charge_memcg (1 samples, 0.02%)</title><rect x="97.9642%" y="261" width="0.0245%" height="15" fill="rgb(218,154,48)" fg:x="3994" fg:w="1"/><text x="98.2142%" y="271.50"></text></g><g><title>try_charge_memcg (1 samples, 0.02%)</title><rect x="97.9642%" y="245" width="0.0245%" height="15" fill="rgb(232,93,24)" fg:x="3994" fg:w="1"/><text x="98.2142%" y="255.50"></text></g><g><title>check_preemption_disabled (1 samples, 0.02%)</title><rect x="97.9642%" y="229" width="0.0245%" height="15" fill="rgb(245,30,21)" fg:x="3994" fg:w="1"/><text x="98.2142%" y="239.50"></text></g><g><title>filemap_add_folio (2 samples, 0.05%)</title><rect x="97.9642%" y="309" width="0.0491%" height="15" fill="rgb(242,148,29)" fg:x="3994" fg:w="2"/><text x="98.2142%" y="319.50"></text></g><g><title>folio_add_lru (1 samples, 0.02%)</title><rect x="97.9887%" y="293" width="0.0245%" height="15" fill="rgb(244,153,54)" fg:x="3995" fg:w="1"/><text x="98.2387%" y="303.50"></text></g><g><title>check_preemption_disabled (1 samples, 0.02%)</title><rect x="97.9887%" y="277" width="0.0245%" height="15" fill="rgb(252,87,22)" fg:x="3995" fg:w="1"/><text x="98.2387%" y="287.50"></text></g><g><title>ext4_da_write_begin (11 samples, 0.27%)</title><rect x="97.7680%" y="357" width="0.2698%" height="15" fill="rgb(210,51,29)" fg:x="3986" fg:w="11"/><text x="98.0180%" y="367.50"></text></g><g><title>pagecache_get_page (3 samples, 0.07%)</title><rect x="97.9642%" y="341" width="0.0736%" height="15" fill="rgb(242,136,47)" fg:x="3994" fg:w="3"/><text x="98.2142%" y="351.50"></text></g><g><title>__filemap_get_folio (3 samples, 0.07%)</title><rect x="97.9642%" y="325" width="0.0736%" height="15" fill="rgb(238,68,4)" fg:x="3994" fg:w="3"/><text x="98.2142%" y="335.50"></text></g><g><title>folio_alloc (1 samples, 0.02%)</title><rect x="98.0132%" y="309" width="0.0245%" height="15" fill="rgb(242,161,30)" fg:x="3996" fg:w="1"/><text x="98.2632%" y="319.50"></text></g><g><title>__alloc_pages (1 samples, 0.02%)</title><rect x="98.0132%" y="293" width="0.0245%" height="15" fill="rgb(218,58,44)" fg:x="3996" fg:w="1"/><text x="98.2632%" y="303.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="98.0132%" y="277" width="0.0245%" height="15" fill="rgb(252,125,32)" fg:x="3996" fg:w="1"/><text x="98.2632%" y="287.50"></text></g><g><title>clear_page_rep (1 samples, 0.02%)</title><rect x="98.0132%" y="261" width="0.0245%" height="15" fill="rgb(219,178,0)" fg:x="3996" fg:w="1"/><text x="98.2632%" y="271.50"></text></g><g><title>ext4_da_write_end (1 samples, 0.02%)</title><rect x="98.0378%" y="357" width="0.0245%" height="15" fill="rgb(213,152,7)" fg:x="3997" fg:w="1"/><text x="98.2878%" y="367.50"></text></g><g><title>__block_commit_write.constprop.0.isra.0 (2 samples, 0.05%)</title><rect x="98.0623%" y="341" width="0.0491%" height="15" fill="rgb(249,109,34)" fg:x="3998" fg:w="2"/><text x="98.3123%" y="351.50"></text></g><g><title>mark_buffer_dirty (1 samples, 0.02%)</title><rect x="98.0868%" y="325" width="0.0245%" height="15" fill="rgb(232,96,21)" fg:x="3999" fg:w="1"/><text x="98.3368%" y="335.50"></text></g><g><title>__folio_mark_dirty (1 samples, 0.02%)</title><rect x="98.0868%" y="309" width="0.0245%" height="15" fill="rgb(228,27,39)" fg:x="3999" fg:w="1"/><text x="98.3368%" y="319.50"></text></g><g><title>percpu_counter_add_batch (1 samples, 0.02%)</title><rect x="98.0868%" y="293" width="0.0245%" height="15" fill="rgb(211,182,52)" fg:x="3999" fg:w="1"/><text x="98.3368%" y="303.50"></text></g><g><title>__ext4_journal_stop (1 samples, 0.02%)</title><rect x="98.1114%" y="325" width="0.0245%" height="15" fill="rgb(234,178,38)" fg:x="4000" fg:w="1"/><text x="98.3614%" y="335.50"></text></g><g><title>jbd2_journal_stop (1 samples, 0.02%)</title><rect x="98.1114%" y="309" width="0.0245%" height="15" fill="rgb(221,111,3)" fg:x="4000" fg:w="1"/><text x="98.3614%" y="319.50"></text></g><g><title>kmem_cache_free (1 samples, 0.02%)</title><rect x="98.1114%" y="293" width="0.0245%" height="15" fill="rgb(228,175,21)" fg:x="4000" fg:w="1"/><text x="98.3614%" y="303.50"></text></g><g><title>__ext4_journal_start_sb (1 samples, 0.02%)</title><rect x="98.1359%" y="309" width="0.0245%" height="15" fill="rgb(228,174,43)" fg:x="4001" fg:w="1"/><text x="98.3859%" y="319.50"></text></g><g><title>ext4_journal_check_start (1 samples, 0.02%)</title><rect x="98.1359%" y="293" width="0.0245%" height="15" fill="rgb(211,191,0)" fg:x="4001" fg:w="1"/><text x="98.3859%" y="303.50"></text></g><g><title>crc32c_pcl_intel_update (2 samples, 0.05%)</title><rect x="98.1849%" y="229" width="0.0491%" height="15" fill="rgb(253,117,3)" fg:x="4003" fg:w="2"/><text x="98.4349%" y="239.50"></text></g><g><title>ext4_mark_iloc_dirty (4 samples, 0.10%)</title><rect x="98.1604%" y="293" width="0.0981%" height="15" fill="rgb(241,127,19)" fg:x="4002" fg:w="4"/><text x="98.4104%" y="303.50"></text></g><g><title>ext4_fill_raw_inode (4 samples, 0.10%)</title><rect x="98.1604%" y="277" width="0.0981%" height="15" fill="rgb(218,103,12)" fg:x="4002" fg:w="4"/><text x="98.4104%" y="287.50"></text></g><g><title>ext4_inode_csum_set (3 samples, 0.07%)</title><rect x="98.1849%" y="261" width="0.0736%" height="15" fill="rgb(236,214,43)" fg:x="4003" fg:w="3"/><text x="98.4349%" y="271.50"></text></g><g><title>ext4_inode_csum (3 samples, 0.07%)</title><rect x="98.1849%" y="245" width="0.0736%" height="15" fill="rgb(244,144,19)" fg:x="4003" fg:w="3"/><text x="98.4349%" y="255.50"></text></g><g><title>crypto_shash_update (1 samples, 0.02%)</title><rect x="98.2340%" y="229" width="0.0245%" height="15" fill="rgb(246,188,10)" fg:x="4005" fg:w="1"/><text x="98.4840%" y="239.50"></text></g><g><title>__ext4_mark_inode_dirty (5 samples, 0.12%)</title><rect x="98.1604%" y="309" width="0.1226%" height="15" fill="rgb(212,193,33)" fg:x="4002" fg:w="5"/><text x="98.4104%" y="319.50"></text></g><g><title>ext4_reserve_inode_write (1 samples, 0.02%)</title><rect x="98.2585%" y="293" width="0.0245%" height="15" fill="rgb(241,51,29)" fg:x="4006" fg:w="1"/><text x="98.5085%" y="303.50"></text></g><g><title>__ext4_journal_get_write_access (1 samples, 0.02%)</title><rect x="98.2585%" y="277" width="0.0245%" height="15" fill="rgb(211,58,19)" fg:x="4006" fg:w="1"/><text x="98.5085%" y="287.50"></text></g><g><title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="98.2831%" y="293" width="0.0245%" height="15" fill="rgb(229,111,26)" fg:x="4007" fg:w="1"/><text x="98.5331%" y="303.50"></text></g><g><title>ksys_write (42 samples, 1.03%)</title><rect x="97.3019%" y="421" width="1.0302%" height="15" fill="rgb(213,115,40)" fg:x="3967" fg:w="42"/><text x="97.5519%" y="431.50"></text></g><g><title>vfs_write (42 samples, 1.03%)</title><rect x="97.3019%" y="405" width="1.0302%" height="15" fill="rgb(209,56,44)" fg:x="3967" fg:w="42"/><text x="97.5519%" y="415.50"></text></g><g><title>ext4_buffered_write_iter (28 samples, 0.69%)</title><rect x="97.6453%" y="389" width="0.6868%" height="15" fill="rgb(230,108,32)" fg:x="3981" fg:w="28"/><text x="97.8953%" y="399.50"></text></g><g><title>generic_perform_write (25 samples, 0.61%)</title><rect x="97.7189%" y="373" width="0.6132%" height="15" fill="rgb(216,165,31)" fg:x="3984" fg:w="25"/><text x="97.9689%" y="383.50"></text></g><g><title>generic_write_end (11 samples, 0.27%)</title><rect x="98.0623%" y="357" width="0.2698%" height="15" fill="rgb(218,122,21)" fg:x="3998" fg:w="11"/><text x="98.3123%" y="367.50"></text></g><g><title>__mark_inode_dirty (9 samples, 0.22%)</title><rect x="98.1114%" y="341" width="0.2208%" height="15" fill="rgb(223,224,47)" fg:x="4000" fg:w="9"/><text x="98.3614%" y="351.50"></text></g><g><title>ext4_dirty_inode (8 samples, 0.20%)</title><rect x="98.1359%" y="325" width="0.1962%" height="15" fill="rgb(238,102,44)" fg:x="4001" fg:w="8"/><text x="98.3859%" y="335.50"></text></g><g><title>jbd2__journal_start (2 samples, 0.05%)</title><rect x="98.2831%" y="309" width="0.0491%" height="15" fill="rgb(236,46,40)" fg:x="4007" fg:w="2"/><text x="98.5331%" y="319.50"></text></g><g><title>start_this_handle (1 samples, 0.02%)</title><rect x="98.3076%" y="293" width="0.0245%" height="15" fill="rgb(247,202,50)" fg:x="4008" fg:w="1"/><text x="98.5576%" y="303.50"></text></g><g><title>_raw_read_lock (1 samples, 0.02%)</title><rect x="98.3076%" y="277" width="0.0245%" height="15" fill="rgb(209,99,20)" fg:x="4008" fg:w="1"/><text x="98.5576%" y="287.50"></text></g><g><title>tftp::server::helpers::write::write_block (44 samples, 1.08%)</title><rect x="97.2774%" y="581" width="1.0792%" height="15" fill="rgb(252,27,34)" fg:x="3966" fg:w="44"/><text x="97.5274%" y="591.50"></text></g><g><title>&lt;tftp::writers::single_block_writer::SingleBlockWriter&lt;W&gt; as tftp::writers::block_writer::BlockWriter&gt;::write_block (43 samples, 1.05%)</title><rect x="97.3019%" y="565" width="1.0547%" height="15" fill="rgb(215,206,23)" fg:x="3967" fg:w="43"/><text x="97.5519%" y="575.50"></text></g><g><title>&lt;tftp::std_compat::fs::File as tftp::std_compat::io::Write&gt;::write (43 samples, 1.05%)</title><rect x="97.3019%" y="549" width="1.0547%" height="15" fill="rgb(212,135,36)" fg:x="3967" fg:w="43"/><text x="97.5519%" y="559.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (43 samples, 1.05%)</title><rect x="97.3019%" y="533" width="1.0547%" height="15" fill="rgb(240,189,1)" fg:x="3967" fg:w="43"/><text x="97.5519%" y="543.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (43 samples, 1.05%)</title><rect x="97.3019%" y="517" width="1.0547%" height="15" fill="rgb(242,56,20)" fg:x="3967" fg:w="43"/><text x="97.5519%" y="527.50"></text></g><g><title>std::sys::unix::fs::File::write (43 samples, 1.05%)</title><rect x="97.3019%" y="501" width="1.0547%" height="15" fill="rgb(247,132,33)" fg:x="3967" fg:w="43"/><text x="97.5519%" y="511.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (43 samples, 1.05%)</title><rect x="97.3019%" y="485" width="1.0547%" height="15" fill="rgb(208,149,11)" fg:x="3967" fg:w="43"/><text x="97.5519%" y="495.50"></text></g><g><title>__GI___libc_write (43 samples, 1.05%)</title><rect x="97.3019%" y="469" width="1.0547%" height="15" fill="rgb(211,33,11)" fg:x="3967" fg:w="43"/><text x="97.5519%" y="479.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (43 samples, 1.05%)</title><rect x="97.3019%" y="453" width="1.0547%" height="15" fill="rgb(221,29,38)" fg:x="3967" fg:w="43"/><text x="97.5519%" y="463.50"></text></g><g><title>do_syscall_64 (43 samples, 1.05%)</title><rect x="97.3019%" y="437" width="1.0547%" height="15" fill="rgb(206,182,49)" fg:x="3967" fg:w="43"/><text x="97.5519%" y="447.50"></text></g><g><title>syscall_exit_to_user_mode (1 samples, 0.02%)</title><rect x="98.3321%" y="421" width="0.0245%" height="15" fill="rgb(216,140,1)" fg:x="4009" fg:w="1"/><text x="98.5821%" y="431.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.02%)</title><rect x="98.3321%" y="405" width="0.0245%" height="15" fill="rgb(232,57,40)" fg:x="4009" fg:w="1"/><text x="98.5821%" y="415.50"></text></g><g><title>tftp::server::helpers::write::handle_write (205 samples, 5.03%)</title><rect x="93.3530%" y="597" width="5.0282%" height="15" fill="rgb(224,186,18)" fg:x="3806" fg:w="205"/><text x="93.6030%" y="607.50">tftp::..</text></g><g><title>tftp::server::validation::handle_file_size (1 samples, 0.02%)</title><rect x="98.3566%" y="581" width="0.0245%" height="15" fill="rgb(215,121,11)" fg:x="4010" fg:w="1"/><text x="98.6066%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (1 samples, 0.02%)</title><rect x="98.3812%" y="581" width="0.0245%" height="15" fill="rgb(245,147,10)" fg:x="4011" fg:w="1"/><text x="98.6312%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.02%)</title><rect x="98.3812%" y="565" width="0.0245%" height="15" fill="rgb(238,153,13)" fg:x="4011" fg:w="1"/><text x="98.6312%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.02%)</title><rect x="98.3812%" y="549" width="0.0245%" height="15" fill="rgb(233,108,0)" fg:x="4011" fg:w="1"/><text x="98.6312%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.02%)</title><rect x="98.3812%" y="533" width="0.0245%" height="15" fill="rgb(212,157,17)" fg:x="4011" fg:w="1"/><text x="98.6312%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.02%)</title><rect x="98.3812%" y="517" width="0.0245%" height="15" fill="rgb(225,213,38)" fg:x="4011" fg:w="1"/><text x="98.6312%" y="527.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (1 samples, 0.02%)</title><rect x="98.3812%" y="501" width="0.0245%" height="15" fill="rgb(248,16,11)" fg:x="4011" fg:w="1"/><text x="98.6312%" y="511.50"></text></g><g><title>tftp::server::single_thread::send_data_blocks::{{closure}} (1 samples, 0.02%)</title><rect x="98.3812%" y="485" width="0.0245%" height="15" fill="rgb(241,33,4)" fg:x="4011" fg:w="1"/><text x="98.6312%" y="495.50"></text></g><g><title>tftp::server::single_thread::send_data_blocks (2 samples, 0.05%)</title><rect x="98.3812%" y="597" width="0.0491%" height="15" fill="rgb(222,26,43)" fg:x="4011" fg:w="2"/><text x="98.6312%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.02%)</title><rect x="98.4057%" y="581" width="0.0245%" height="15" fill="rgb(243,29,36)" fg:x="4012" fg:w="1"/><text x="98.6557%" y="591.50"></text></g><g><title>tftp::server::single_thread::server (258 samples, 6.33%)</title><rect x="92.1266%" y="613" width="6.3282%" height="15" fill="rgb(241,9,27)" fg:x="3756" fg:w="258"/><text x="92.3766%" y="623.50">tftp::se..</text></g><g><title>tftp::std_compat::time::Instant::elapsed (1 samples, 0.02%)</title><rect x="98.4302%" y="597" width="0.0245%" height="15" fill="rgb(205,117,26)" fg:x="4013" fg:w="1"/><text x="98.6802%" y="607.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.02%)</title><rect x="98.4302%" y="581" width="0.0245%" height="15" fill="rgb(209,80,39)" fg:x="4013" fg:w="1"/><text x="98.6802%" y="591.50"></text></g><g><title>tftp::io::instant_callback::{{closure}} (1 samples, 0.02%)</title><rect x="98.4302%" y="565" width="0.0245%" height="15" fill="rgb(239,155,6)" fg:x="4013" fg:w="1"/><text x="98.6802%" y="575.50"></text></g><g><title>std::time::SystemTime::duration_since (1 samples, 0.02%)</title><rect x="98.4302%" y="549" width="0.0245%" height="15" fill="rgb(212,104,12)" fg:x="4013" fg:w="1"/><text x="98.6802%" y="559.50"></text></g><g><title>std::sys::unix::time::SystemTime::sub_time (1 samples, 0.02%)</title><rect x="98.4302%" y="533" width="0.0245%" height="15" fill="rgb(234,204,3)" fg:x="4013" fg:w="1"/><text x="98.6802%" y="543.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (1 samples, 0.02%)</title><rect x="98.4302%" y="517" width="0.0245%" height="15" fill="rgb(251,218,7)" fg:x="4013" fg:w="1"/><text x="98.6802%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (1 samples, 0.02%)</title><rect x="98.4302%" y="501" width="0.0245%" height="15" fill="rgb(221,81,32)" fg:x="4013" fg:w="1"/><text x="98.6802%" y="511.50"></text></g><g><title>core::cmp::PartialOrd::ge (1 samples, 0.02%)</title><rect x="98.4302%" y="485" width="0.0245%" height="15" fill="rgb(214,152,26)" fg:x="4013" fg:w="1"/><text x="98.6802%" y="495.50"></text></g><g><title>[unknown] (3,450 samples, 84.62%)</title><rect x="13.8582%" y="629" width="84.6210%" height="15" fill="rgb(223,22,3)" fg:x="565" fg:w="3450"/><text x="14.1082%" y="639.50">[unknown]</text></g><g><title>universal_hash::UniversalHash::update_padded (1 samples, 0.02%)</title><rect x="98.4547%" y="613" width="0.0245%" height="15" fill="rgb(207,174,7)" fg:x="4014" fg:w="1"/><text x="98.7047%" y="623.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="98.4793%" y="629" width="0.0245%" height="15" fill="rgb(224,19,52)" fg:x="4015" fg:w="1"/><text x="98.7293%" y="639.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;Z&gt; as zeroize::Zeroize&gt;::zeroize (1 samples, 0.02%)</title><rect x="98.4793%" y="613" width="0.0245%" height="15" fill="rgb(228,24,14)" fg:x="4015" fg:w="1"/><text x="98.7293%" y="623.50"></text></g><g><title>_start (1 samples, 0.02%)</title><rect x="98.5038%" y="629" width="0.0245%" height="15" fill="rgb(230,153,43)" fg:x="4016" fg:w="1"/><text x="98.7538%" y="639.50"></text></g><g><title>_dl_start (1 samples, 0.02%)</title><rect x="98.5038%" y="613" width="0.0245%" height="15" fill="rgb(231,106,12)" fg:x="4016" fg:w="1"/><text x="98.7538%" y="623.50"></text></g><g><title>_dl_start_final (1 samples, 0.02%)</title><rect x="98.5038%" y="597" width="0.0245%" height="15" fill="rgb(215,92,2)" fg:x="4016" fg:w="1"/><text x="98.7538%" y="607.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.02%)</title><rect x="98.5038%" y="581" width="0.0245%" height="15" fill="rgb(249,143,25)" fg:x="4016" fg:w="1"/><text x="98.7538%" y="591.50"></text></g><g><title>__GI___tunables_init (1 samples, 0.02%)</title><rect x="98.5038%" y="565" width="0.0245%" height="15" fill="rgb(252,7,35)" fg:x="4016" fg:w="1"/><text x="98.7538%" y="575.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.02%)</title><rect x="98.5283%" y="629" width="0.0245%" height="15" fill="rgb(216,69,40)" fg:x="4017" fg:w="1"/><text x="98.7783%" y="639.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.02%)</title><rect x="98.5283%" y="613" width="0.0245%" height="15" fill="rgb(240,36,33)" fg:x="4017" fg:w="1"/><text x="98.7783%" y="623.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::decrypt_in_place_detached (1 samples, 0.02%)</title><rect x="98.5529%" y="629" width="0.0245%" height="15" fill="rgb(231,128,14)" fg:x="4018" fg:w="1"/><text x="98.8029%" y="639.50"></text></g><g><title>universal_hash::UniversalHash::verify (1 samples, 0.02%)</title><rect x="98.5529%" y="613" width="0.0245%" height="15" fill="rgb(245,143,14)" fg:x="4018" fg:w="1"/><text x="98.8029%" y="623.50"></text></g><g><title>&lt;[T] as subtle::ConstantTimeEq&gt;::ct_eq (1 samples, 0.02%)</title><rect x="98.5529%" y="597" width="0.0245%" height="15" fill="rgb(222,130,28)" fg:x="4018" fg:w="1"/><text x="98.8029%" y="607.50"></text></g><g><title>&lt;u8 as subtle::ConstantTimeEq&gt;::ct_eq (1 samples, 0.02%)</title><rect x="98.5529%" y="581" width="0.0245%" height="15" fill="rgb(212,10,48)" fg:x="4018" fg:w="1"/><text x="98.8029%" y="591.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.02%)</title><rect x="98.5529%" y="565" width="0.0245%" height="15" fill="rgb(254,118,45)" fg:x="4018" fg:w="1"/><text x="98.8029%" y="575.50"></text></g><g><title>&lt;subtle::Choice as core::convert::From&lt;u8&gt;&gt;::from (1 samples, 0.02%)</title><rect x="98.5529%" y="549" width="0.0245%" height="15" fill="rgb(228,6,45)" fg:x="4018" fg:w="1"/><text x="98.8029%" y="559.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="98.5529%" y="533" width="0.0245%" height="15" fill="rgb(241,18,35)" fg:x="4018" fg:w="1"/><text x="98.8029%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect x="98.5774%" y="629" width="0.0245%" height="15" fill="rgb(227,214,53)" fg:x="4019" fg:w="1"/><text x="98.8274%" y="639.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.02%)</title><rect x="98.5774%" y="613" width="0.0245%" height="15" fill="rgb(224,107,51)" fg:x="4019" fg:w="1"/><text x="98.8274%" y="623.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.02%)</title><rect x="98.6019%" y="629" width="0.0245%" height="15" fill="rgb(248,60,28)" fg:x="4020" fg:w="1"/><text x="98.8519%" y="639.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.02%)</title><rect x="98.6019%" y="613" width="0.0245%" height="15" fill="rgb(249,101,23)" fg:x="4020" fg:w="1"/><text x="98.8519%" y="623.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.05%)</title><rect x="98.6264%" y="629" width="0.0491%" height="15" fill="rgb(228,51,19)" fg:x="4021" fg:w="2"/><text x="98.8764%" y="639.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (2 samples, 0.05%)</title><rect x="98.6264%" y="613" width="0.0491%" height="15" fill="rgb(213,20,6)" fg:x="4021" fg:w="2"/><text x="98.8764%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.02%)</title><rect x="98.6755%" y="629" width="0.0245%" height="15" fill="rgb(212,124,10)" fg:x="4023" fg:w="1"/><text x="98.9255%" y="639.50"></text></g><g><title>_copy_from_user (3 samples, 0.07%)</title><rect x="98.7491%" y="581" width="0.0736%" height="15" fill="rgb(248,3,40)" fg:x="4026" fg:w="3"/><text x="98.9991%" y="591.50"></text></g><g><title>copy_user_generic_string (2 samples, 0.05%)</title><rect x="98.7736%" y="565" width="0.0491%" height="15" fill="rgb(223,178,23)" fg:x="4027" fg:w="2"/><text x="99.0236%" y="575.50"></text></g><g><title>__fget_light (1 samples, 0.02%)</title><rect x="98.8472%" y="565" width="0.0245%" height="15" fill="rgb(240,132,45)" fg:x="4030" fg:w="1"/><text x="99.0972%" y="575.50"></text></g><g><title>__x64_sys_epoll_ctl (8 samples, 0.20%)</title><rect x="98.7246%" y="597" width="0.1962%" height="15" fill="rgb(245,164,36)" fg:x="4025" fg:w="8"/><text x="98.9746%" y="607.50"></text></g><g><title>do_epoll_ctl (4 samples, 0.10%)</title><rect x="98.8227%" y="581" width="0.0981%" height="15" fill="rgb(231,188,53)" fg:x="4029" fg:w="4"/><text x="99.0727%" y="591.50"></text></g><g><title>ep_item_poll.isra.0 (2 samples, 0.05%)</title><rect x="98.8717%" y="565" width="0.0491%" height="15" fill="rgb(237,198,39)" fg:x="4031" fg:w="2"/><text x="99.1217%" y="575.50"></text></g><g><title>sock_poll (2 samples, 0.05%)</title><rect x="98.8717%" y="549" width="0.0491%" height="15" fill="rgb(223,120,35)" fg:x="4031" fg:w="2"/><text x="99.1217%" y="559.50"></text></g><g><title>udp_poll (2 samples, 0.05%)</title><rect x="98.8717%" y="533" width="0.0491%" height="15" fill="rgb(253,107,49)" fg:x="4031" fg:w="2"/><text x="99.1217%" y="543.50"></text></g><g><title>datagram_poll (1 samples, 0.02%)</title><rect x="98.8962%" y="517" width="0.0245%" height="15" fill="rgb(216,44,31)" fg:x="4032" fg:w="1"/><text x="99.1462%" y="527.50"></text></g><g><title>_raw_write_unlock_irq (1 samples, 0.02%)</title><rect x="98.9698%" y="565" width="0.0245%" height="15" fill="rgb(253,87,21)" fg:x="4035" fg:w="1"/><text x="99.2198%" y="575.50"></text></g><g><title>preempt_count_sub (1 samples, 0.02%)</title><rect x="98.9698%" y="549" width="0.0245%" height="15" fill="rgb(226,18,2)" fg:x="4035" fg:w="1"/><text x="99.2198%" y="559.50"></text></g><g><title>__x64_sys_epoll_wait (4 samples, 0.10%)</title><rect x="98.9208%" y="597" width="0.0981%" height="15" fill="rgb(216,8,46)" fg:x="4033" fg:w="4"/><text x="99.1708%" y="607.50"></text></g><g><title>do_epoll_wait (4 samples, 0.10%)</title><rect x="98.9208%" y="581" width="0.0981%" height="15" fill="rgb(226,140,39)" fg:x="4033" fg:w="4"/><text x="99.1708%" y="591.50"></text></g><g><title>mutex_unlock (1 samples, 0.02%)</title><rect x="98.9944%" y="565" width="0.0245%" height="15" fill="rgb(221,194,54)" fg:x="4036" fg:w="1"/><text x="99.2444%" y="575.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.02%)</title><rect x="99.0189%" y="597" width="0.0245%" height="15" fill="rgb(213,92,11)" fg:x="4037" fg:w="1"/><text x="99.2689%" y="607.50"></text></g><g><title>do_execveat_common.isra.0 (1 samples, 0.02%)</title><rect x="99.0189%" y="581" width="0.0245%" height="15" fill="rgb(229,162,46)" fg:x="4037" fg:w="1"/><text x="99.2689%" y="591.50"></text></g><g><title>bprm_execve (1 samples, 0.02%)</title><rect x="99.0189%" y="565" width="0.0245%" height="15" fill="rgb(214,111,36)" fg:x="4037" fg:w="1"/><text x="99.2689%" y="575.50"></text></g><g><title>load_elf_binary (1 samples, 0.02%)</title><rect x="99.0189%" y="549" width="0.0245%" height="15" fill="rgb(207,6,21)" fg:x="4037" fg:w="1"/><text x="99.2689%" y="559.50"></text></g><g><title>setup_arg_pages (1 samples, 0.02%)</title><rect x="99.0189%" y="533" width="0.0245%" height="15" fill="rgb(213,127,38)" fg:x="4037" fg:w="1"/><text x="99.2689%" y="543.50"></text></g><g><title>mprotect_fixup (1 samples, 0.02%)</title><rect x="99.0189%" y="517" width="0.0245%" height="15" fill="rgb(238,118,32)" fg:x="4037" fg:w="1"/><text x="99.2689%" y="527.50"></text></g><g><title>perf_event_mmap (1 samples, 0.02%)</title><rect x="99.0189%" y="501" width="0.0245%" height="15" fill="rgb(240,139,39)" fg:x="4037" fg:w="1"/><text x="99.2689%" y="511.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.02%)</title><rect x="99.0189%" y="485" width="0.0245%" height="15" fill="rgb(235,10,37)" fg:x="4037" fg:w="1"/><text x="99.2689%" y="495.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.02%)</title><rect x="99.0189%" y="469" width="0.0245%" height="15" fill="rgb(249,171,38)" fg:x="4037" fg:w="1"/><text x="99.2689%" y="479.50"></text></g><g><title>perf_event_mmap_output (1 samples, 0.02%)</title><rect x="99.0189%" y="453" width="0.0245%" height="15" fill="rgb(242,144,32)" fg:x="4037" fg:w="1"/><text x="99.2689%" y="463.50"></text></g><g><title>perf_output_copy (1 samples, 0.02%)</title><rect x="99.0189%" y="437" width="0.0245%" height="15" fill="rgb(217,117,21)" fg:x="4037" fg:w="1"/><text x="99.2689%" y="447.50"></text></g><g><title>__output_copy (1 samples, 0.02%)</title><rect x="99.0189%" y="421" width="0.0245%" height="15" fill="rgb(249,87,1)" fg:x="4037" fg:w="1"/><text x="99.2689%" y="431.50"></text></g><g><title>__memcpy (1 samples, 0.02%)</title><rect x="99.0189%" y="405" width="0.0245%" height="15" fill="rgb(248,196,48)" fg:x="4037" fg:w="1"/><text x="99.2689%" y="415.50"></text></g><g><title>__check_object_size (1 samples, 0.02%)</title><rect x="99.1415%" y="517" width="0.0245%" height="15" fill="rgb(251,206,33)" fg:x="4042" fg:w="1"/><text x="99.3915%" y="527.50"></text></g><g><title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="99.1415%" y="501" width="0.0245%" height="15" fill="rgb(232,141,28)" fg:x="4042" fg:w="1"/><text x="99.3915%" y="511.50"></text></g><g><title>__consume_stateless_skb (2 samples, 0.05%)</title><rect x="99.1661%" y="517" width="0.0491%" height="15" fill="rgb(209,167,14)" fg:x="4043" fg:w="2"/><text x="99.4161%" y="527.50"></text></g><g><title>skb_release_data (2 samples, 0.05%)</title><rect x="99.1661%" y="501" width="0.0491%" height="15" fill="rgb(225,11,50)" fg:x="4043" fg:w="2"/><text x="99.4161%" y="511.50"></text></g><g><title>__kmem_cache_free (1 samples, 0.02%)</title><rect x="99.1906%" y="485" width="0.0245%" height="15" fill="rgb(209,50,20)" fg:x="4044" fg:w="1"/><text x="99.4406%" y="495.50"></text></g><g><title>__skb_recv_udp (2 samples, 0.05%)</title><rect x="99.2151%" y="517" width="0.0491%" height="15" fill="rgb(212,17,46)" fg:x="4045" fg:w="2"/><text x="99.4651%" y="527.50"></text></g><g><title>_raw_spin_unlock (2 samples, 0.05%)</title><rect x="99.2151%" y="501" width="0.0491%" height="15" fill="rgb(216,101,39)" fg:x="4045" fg:w="2"/><text x="99.4651%" y="511.50"></text></g><g><title>preempt_count_sub (2 samples, 0.05%)</title><rect x="99.2151%" y="485" width="0.0491%" height="15" fill="rgb(212,228,48)" fg:x="4045" fg:w="2"/><text x="99.4651%" y="495.50"></text></g><g><title>inet_recvmsg (9 samples, 0.22%)</title><rect x="99.0925%" y="549" width="0.2208%" height="15" fill="rgb(250,6,50)" fg:x="4040" fg:w="9"/><text x="99.3425%" y="559.50"></text></g><g><title>udp_recvmsg (8 samples, 0.20%)</title><rect x="99.1170%" y="533" width="0.1962%" height="15" fill="rgb(250,160,48)" fg:x="4041" fg:w="8"/><text x="99.3670%" y="543.50"></text></g><g><title>_copy_to_iter (2 samples, 0.05%)</title><rect x="99.2642%" y="517" width="0.0491%" height="15" fill="rgb(244,216,33)" fg:x="4047" fg:w="2"/><text x="99.5142%" y="527.50"></text></g><g><title>copy_user_generic_string (2 samples, 0.05%)</title><rect x="99.2642%" y="501" width="0.0491%" height="15" fill="rgb(207,157,5)" fg:x="4047" fg:w="2"/><text x="99.5142%" y="511.50"></text></g><g><title>__x64_sys_recvfrom (13 samples, 0.32%)</title><rect x="99.0434%" y="597" width="0.3189%" height="15" fill="rgb(228,199,8)" fg:x="4038" fg:w="13"/><text x="99.2934%" y="607.50"></text></g><g><title>__sys_recvfrom (13 samples, 0.32%)</title><rect x="99.0434%" y="581" width="0.3189%" height="15" fill="rgb(227,80,20)" fg:x="4038" fg:w="13"/><text x="99.2934%" y="591.50"></text></g><g><title>sock_recvmsg (11 samples, 0.27%)</title><rect x="99.0925%" y="565" width="0.2698%" height="15" fill="rgb(222,9,33)" fg:x="4040" fg:w="11"/><text x="99.3425%" y="575.50"></text></g><g><title>security_socket_recvmsg (2 samples, 0.05%)</title><rect x="99.3132%" y="549" width="0.0491%" height="15" fill="rgb(239,44,28)" fg:x="4049" fg:w="2"/><text x="99.5632%" y="559.50"></text></g><g><title>aa_sk_perm (2 samples, 0.05%)</title><rect x="99.3132%" y="533" width="0.0491%" height="15" fill="rgb(249,187,43)" fg:x="4049" fg:w="2"/><text x="99.5632%" y="543.50"></text></g><g><title>__cond_resched (1 samples, 0.02%)</title><rect x="99.3377%" y="517" width="0.0245%" height="15" fill="rgb(216,141,28)" fg:x="4050" fg:w="1"/><text x="99.5877%" y="527.50"></text></g><g><title>inet_sendmsg (2 samples, 0.05%)</title><rect x="99.3623%" y="549" width="0.0491%" height="15" fill="rgb(230,154,53)" fg:x="4051" fg:w="2"/><text x="99.6123%" y="559.50"></text></g><g><title>__x64_sys_sendto (4 samples, 0.10%)</title><rect x="99.3623%" y="597" width="0.0981%" height="15" fill="rgb(227,82,4)" fg:x="4051" fg:w="4"/><text x="99.6123%" y="607.50"></text></g><g><title>__sys_sendto (4 samples, 0.10%)</title><rect x="99.3623%" y="581" width="0.0981%" height="15" fill="rgb(220,107,16)" fg:x="4051" fg:w="4"/><text x="99.6123%" y="591.50"></text></g><g><title>sock_sendmsg (4 samples, 0.10%)</title><rect x="99.3623%" y="565" width="0.0981%" height="15" fill="rgb(207,187,2)" fg:x="4051" fg:w="4"/><text x="99.6123%" y="575.50"></text></g><g><title>udp_sendmsg (2 samples, 0.05%)</title><rect x="99.4113%" y="549" width="0.0491%" height="15" fill="rgb(210,162,52)" fg:x="4053" fg:w="2"/><text x="99.6613%" y="559.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.02%)</title><rect x="99.4359%" y="533" width="0.0245%" height="15" fill="rgb(217,216,49)" fg:x="4054" fg:w="1"/><text x="99.6859%" y="543.50"></text></g><g><title>__hrtimer_init (1 samples, 0.02%)</title><rect x="99.4604%" y="565" width="0.0245%" height="15" fill="rgb(218,146,49)" fg:x="4055" fg:w="1"/><text x="99.7104%" y="575.50"></text></g><g><title>_raw_spin_unlock_irq (1 samples, 0.02%)</title><rect x="99.4849%" y="565" width="0.0245%" height="15" fill="rgb(216,55,40)" fg:x="4056" fg:w="1"/><text x="99.7349%" y="575.50"></text></g><g><title>ktime_get (2 samples, 0.05%)</title><rect x="99.5094%" y="565" width="0.0491%" height="15" fill="rgb(208,196,21)" fg:x="4057" fg:w="2"/><text x="99.7594%" y="575.50"></text></g><g><title>do_timerfd_settime (5 samples, 0.12%)</title><rect x="99.4604%" y="581" width="0.1226%" height="15" fill="rgb(242,117,42)" fg:x="4055" fg:w="5"/><text x="99.7104%" y="591.50"></text></g><g><title>ns_to_timespec64 (1 samples, 0.02%)</title><rect x="99.5585%" y="565" width="0.0245%" height="15" fill="rgb(210,11,23)" fg:x="4059" fg:w="1"/><text x="99.8085%" y="575.50"></text></g><g><title>__x64_sys_timerfd_settime (7 samples, 0.17%)</title><rect x="99.4604%" y="597" width="0.1717%" height="15" fill="rgb(217,110,2)" fg:x="4055" fg:w="7"/><text x="99.7104%" y="607.50"></text></g><g><title>get_timespec64 (2 samples, 0.05%)</title><rect x="99.5830%" y="581" width="0.0491%" height="15" fill="rgb(229,77,54)" fg:x="4060" fg:w="2"/><text x="99.8330%" y="591.50"></text></g><g><title>_copy_from_user (1 samples, 0.02%)</title><rect x="99.6076%" y="565" width="0.0245%" height="15" fill="rgb(218,53,16)" fg:x="4061" fg:w="1"/><text x="99.8576%" y="575.50"></text></g><g><title>copy_user_generic_string (1 samples, 0.02%)</title><rect x="99.6076%" y="549" width="0.0245%" height="15" fill="rgb(215,38,13)" fg:x="4061" fg:w="1"/><text x="99.8576%" y="559.50"></text></g><g><title>__x64_sys_write (1 samples, 0.02%)</title><rect x="99.6321%" y="597" width="0.0245%" height="15" fill="rgb(235,42,18)" fg:x="4062" fg:w="1"/><text x="99.8821%" y="607.50"></text></g><g><title>ext4_buffered_write_iter (3 samples, 0.07%)</title><rect x="99.6811%" y="565" width="0.0736%" height="15" fill="rgb(219,66,54)" fg:x="4064" fg:w="3"/><text x="99.9311%" y="575.50"></text></g><g><title>down_write (3 samples, 0.07%)</title><rect x="99.6811%" y="549" width="0.0736%" height="15" fill="rgb(222,205,4)" fg:x="4064" fg:w="3"/><text x="99.9311%" y="559.50"></text></g><g><title>preempt_count_add (2 samples, 0.05%)</title><rect x="99.7547%" y="565" width="0.0491%" height="15" fill="rgb(227,213,46)" fg:x="4067" fg:w="2"/><text x="100.0047%" y="575.50"></text></g><g><title>ksys_write (8 samples, 0.20%)</title><rect x="99.6566%" y="597" width="0.1962%" height="15" fill="rgb(250,145,42)" fg:x="4063" fg:w="8"/><text x="99.9066%" y="607.50"></text></g><g><title>vfs_write (8 samples, 0.20%)</title><rect x="99.6566%" y="581" width="0.1962%" height="15" fill="rgb(219,15,2)" fg:x="4063" fg:w="8"/><text x="99.9066%" y="591.50"></text></g><g><title>security_file_permission (2 samples, 0.05%)</title><rect x="99.8038%" y="565" width="0.0491%" height="15" fill="rgb(231,181,52)" fg:x="4069" fg:w="2"/><text x="100.0538%" y="575.50"></text></g><g><title>apparmor_file_permission (2 samples, 0.05%)</title><rect x="99.8038%" y="549" width="0.0491%" height="15" fill="rgb(235,1,42)" fg:x="4069" fg:w="2"/><text x="100.0538%" y="559.50"></text></g><g><title>syscall_enter_from_user_mode (1 samples, 0.02%)</title><rect x="99.8528%" y="597" width="0.0245%" height="15" fill="rgb(249,88,27)" fg:x="4071" fg:w="1"/><text x="100.1028%" y="607.50"></text></g><g><title>arch_do_signal_or_restart (1 samples, 0.02%)</title><rect x="99.9264%" y="565" width="0.0245%" height="15" fill="rgb(235,145,16)" fg:x="4074" fg:w="1"/><text x="100.1764%" y="575.50"></text></g><g><title>get_signal (1 samples, 0.02%)</title><rect x="99.9264%" y="549" width="0.0245%" height="15" fill="rgb(237,114,19)" fg:x="4074" fg:w="1"/><text x="100.1764%" y="559.50"></text></g><g><title>do_group_exit (1 samples, 0.02%)</title><rect x="99.9264%" y="533" width="0.0245%" height="15" fill="rgb(238,51,50)" fg:x="4074" fg:w="1"/><text x="100.1764%" y="543.50"></text></g><g><title>do_exit (1 samples, 0.02%)</title><rect x="99.9264%" y="517" width="0.0245%" height="15" fill="rgb(205,194,25)" fg:x="4074" fg:w="1"/><text x="100.1764%" y="527.50"></text></g><g><title>__mmput (1 samples, 0.02%)</title><rect x="99.9264%" y="501" width="0.0245%" height="15" fill="rgb(215,203,17)" fg:x="4074" fg:w="1"/><text x="100.1764%" y="511.50"></text></g><g><title>exit_mmap (1 samples, 0.02%)</title><rect x="99.9264%" y="485" width="0.0245%" height="15" fill="rgb(233,112,49)" fg:x="4074" fg:w="1"/><text x="100.1764%" y="495.50"></text></g><g><title>unmap_vmas (1 samples, 0.02%)</title><rect x="99.9264%" y="469" width="0.0245%" height="15" fill="rgb(241,130,26)" fg:x="4074" fg:w="1"/><text x="100.1764%" y="479.50"></text></g><g><title>unmap_page_range (1 samples, 0.02%)</title><rect x="99.9264%" y="453" width="0.0245%" height="15" fill="rgb(252,223,19)" fg:x="4074" fg:w="1"/><text x="100.1764%" y="463.50"></text></g><g><title>page_remove_rmap (1 samples, 0.02%)</title><rect x="99.9264%" y="437" width="0.0245%" height="15" fill="rgb(211,95,25)" fg:x="4074" fg:w="1"/><text x="100.1764%" y="447.50"></text></g><g><title>__mod_lruvec_page_state (1 samples, 0.02%)</title><rect x="99.9264%" y="421" width="0.0245%" height="15" fill="rgb(251,182,27)" fg:x="4074" fg:w="1"/><text x="100.1764%" y="431.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="99.9264%" y="405" width="0.0245%" height="15" fill="rgb(238,24,4)" fg:x="4074" fg:w="1"/><text x="100.1764%" y="415.50"></text></g><g><title>__mod_node_page_state (1 samples, 0.02%)</title><rect x="99.9264%" y="389" width="0.0245%" height="15" fill="rgb(224,220,25)" fg:x="4074" fg:w="1"/><text x="100.1764%" y="399.50"></text></g><g><title>check_preemption_disabled (1 samples, 0.02%)</title><rect x="99.9264%" y="373" width="0.0245%" height="15" fill="rgb(239,133,26)" fg:x="4074" fg:w="1"/><text x="100.1764%" y="383.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (52 samples, 1.28%)</title><rect x="98.7000%" y="629" width="1.2754%" height="15" fill="rgb(211,94,48)" fg:x="4024" fg:w="52"/><text x="98.9500%" y="639.50"></text></g><g><title>do_syscall_64 (52 samples, 1.28%)</title><rect x="98.7000%" y="613" width="1.2754%" height="15" fill="rgb(239,87,6)" fg:x="4024" fg:w="52"/><text x="98.9500%" y="623.50"></text></g><g><title>syscall_exit_to_user_mode (4 samples, 0.10%)</title><rect x="99.8774%" y="597" width="0.0981%" height="15" fill="rgb(227,62,0)" fg:x="4072" fg:w="4"/><text x="100.1274%" y="607.50"></text></g><g><title>exit_to_user_mode_prepare (4 samples, 0.10%)</title><rect x="99.8774%" y="581" width="0.0981%" height="15" fill="rgb(211,226,4)" fg:x="4072" fg:w="4"/><text x="100.1274%" y="591.50"></text></g><g><title>fpregs_assert_state_consistent (1 samples, 0.02%)</title><rect x="99.9509%" y="565" width="0.0245%" height="15" fill="rgb(253,38,52)" fg:x="4075" fg:w="1"/><text x="100.2009%" y="575.50"></text></g><g><title>check_preemption_disabled (1 samples, 0.02%)</title><rect x="99.9509%" y="549" width="0.0245%" height="15" fill="rgb(229,126,40)" fg:x="4075" fg:w="1"/><text x="100.2009%" y="559.50"></text></g><g><title>all (4,077 samples, 100%)</title><rect x="0.0000%" y="661" width="100.0000%" height="15" fill="rgb(229,165,44)" fg:x="0" fg:w="4077"/><text x="0.2500%" y="671.50"></text></g><g><title>tftp (4,073 samples, 99.90%)</title><rect x="0.0981%" y="645" width="99.9019%" height="15" fill="rgb(247,95,47)" fg:x="4" fg:w="4073"/><text x="0.3481%" y="655.50">tftp</text></g><g><title>getrandom::use_file::get_rng_fd::FD (1 samples, 0.02%)</title><rect x="99.9755%" y="629" width="0.0245%" height="15" fill="rgb(216,140,30)" fg:x="4076" fg:w="1"/><text x="100.2255%" y="639.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.02%)</title><rect x="99.9755%" y="613" width="0.0245%" height="15" fill="rgb(246,214,8)" fg:x="4076" fg:w="1"/><text x="100.2255%" y="623.50"></text></g></svg></svg>