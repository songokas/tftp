<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="646" onload="init(evt)" viewBox="0 0 1200 646" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="646" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="629.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="629.00"> </text><svg id="frames" x="10" width="1180" total_samples="2225"><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.09%)</title><rect x="0.1798%" y="549" width="0.0899%" height="15" fill="rgb(227,0,7)" fg:x="4" fg:w="2"/><text x="0.4298%" y="559.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.09%)</title><rect x="0.1798%" y="533" width="0.0899%" height="15" fill="rgb(217,0,24)" fg:x="4" fg:w="2"/><text x="0.4298%" y="543.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.04%)</title><rect x="0.2247%" y="517" width="0.0449%" height="15" fill="rgb(221,193,54)" fg:x="5" fg:w="1"/><text x="0.4747%" y="527.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.04%)</title><rect x="0.2247%" y="501" width="0.0449%" height="15" fill="rgb(248,212,6)" fg:x="5" fg:w="1"/><text x="0.4747%" y="511.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.04%)</title><rect x="0.2247%" y="485" width="0.0449%" height="15" fill="rgb(208,68,35)" fg:x="5" fg:w="1"/><text x="0.4747%" y="495.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.04%)</title><rect x="0.2247%" y="469" width="0.0449%" height="15" fill="rgb(232,128,0)" fg:x="5" fg:w="1"/><text x="0.4747%" y="479.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.04%)</title><rect x="0.2247%" y="453" width="0.0449%" height="15" fill="rgb(207,160,47)" fg:x="5" fg:w="1"/><text x="0.4747%" y="463.50"></text></g><g><title>[ld-linux-x86-64.so.2] (7 samples, 0.31%)</title><rect x="0.0000%" y="565" width="0.3146%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="7"/><text x="0.2500%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.04%)</title><rect x="0.2697%" y="549" width="0.0449%" height="15" fill="rgb(218,30,26)" fg:x="6" fg:w="1"/><text x="0.5197%" y="559.50"></text></g><g><title>&lt;tftp::cli::Commands as clap::derive::Subcommand&gt;::augment_subcommands (1 samples, 0.04%)</title><rect x="0.3146%" y="549" width="0.0449%" height="15" fill="rgb(220,122,19)" fg:x="7" fg:w="1"/><text x="0.5646%" y="559.50"></text></g><g><title>clap::builder::command::Command::new (1 samples, 0.04%)</title><rect x="0.3146%" y="533" width="0.0449%" height="15" fill="rgb(250,228,42)" fg:x="7" fg:w="1"/><text x="0.5646%" y="543.50"></text></g><g><title>clap::builder::command::Command::new::new_inner (1 samples, 0.04%)</title><rect x="0.3146%" y="517" width="0.0449%" height="15" fill="rgb(240,193,28)" fg:x="7" fg:w="1"/><text x="0.5646%" y="527.50"></text></g><g><title>&lt;clap::builder::command::Command as core::default::Default&gt;::default (1 samples, 0.04%)</title><rect x="0.3146%" y="501" width="0.0449%" height="15" fill="rgb(216,20,37)" fg:x="7" fg:w="1"/><text x="0.5646%" y="511.50"></text></g><g><title>&lt;clap::util::flat_map::FlatMap&lt;K,V&gt; as core::default::Default&gt;::default (1 samples, 0.04%)</title><rect x="0.3146%" y="485" width="0.0449%" height="15" fill="rgb(206,188,39)" fg:x="7" fg:w="1"/><text x="0.5646%" y="495.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (2 samples, 0.09%)</title><rect x="0.3596%" y="149" width="0.0899%" height="15" fill="rgb(217,207,13)" fg:x="8" fg:w="2"/><text x="0.6096%" y="159.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (2 samples, 0.09%)</title><rect x="0.3596%" y="133" width="0.0899%" height="15" fill="rgb(231,73,38)" fg:x="8" fg:w="2"/><text x="0.6096%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="0.4494%" y="149" width="0.0449%" height="15" fill="rgb(225,20,46)" fg:x="10" fg:w="1"/><text x="0.6994%" y="159.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as crypto_common::KeyIvInit&gt;::new (4 samples, 0.18%)</title><rect x="0.3596%" y="197" width="0.1798%" height="15" fill="rgb(210,31,41)" fg:x="8" fg:w="4"/><text x="0.6096%" y="207.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (4 samples, 0.18%)</title><rect x="0.3596%" y="181" width="0.1798%" height="15" fill="rgb(221,200,47)" fg:x="8" fg:w="4"/><text x="0.6096%" y="191.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (4 samples, 0.18%)</title><rect x="0.3596%" y="165" width="0.1798%" height="15" fill="rgb(226,26,5)" fg:x="8" fg:w="4"/><text x="0.6096%" y="175.50"></text></g><g><title>core::array::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T: N]&gt;::index_mut (1 samples, 0.04%)</title><rect x="0.4944%" y="149" width="0.0449%" height="15" fill="rgb(249,33,26)" fg:x="11" fg:w="1"/><text x="0.7444%" y="159.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::authenticate_lengths (1 samples, 0.04%)</title><rect x="0.5393%" y="181" width="0.0449%" height="15" fill="rgb(235,183,28)" fg:x="12" fg:w="1"/><text x="0.7893%" y="191.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.04%)</title><rect x="0.5393%" y="165" width="0.0449%" height="15" fill="rgb(221,5,38)" fg:x="12" fg:w="1"/><text x="0.7893%" y="175.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.04%)</title><rect x="0.5393%" y="149" width="0.0449%" height="15" fill="rgb(247,18,42)" fg:x="12" fg:w="1"/><text x="0.7893%" y="159.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (1 samples, 0.04%)</title><rect x="0.5393%" y="133" width="0.0449%" height="15" fill="rgb(241,131,45)" fg:x="12" fg:w="1"/><text x="0.7893%" y="143.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::decrypt_in_place_detached (3 samples, 0.13%)</title><rect x="0.5393%" y="197" width="0.1348%" height="15" fill="rgb(249,31,29)" fg:x="12" fg:w="3"/><text x="0.7893%" y="207.50"></text></g><g><title>universal_hash::UniversalHash::update_padded (2 samples, 0.09%)</title><rect x="0.5843%" y="181" width="0.0899%" height="15" fill="rgb(225,111,53)" fg:x="13" fg:w="2"/><text x="0.8343%" y="191.50"></text></g><g><title>universal_hash::to_blocks (2 samples, 0.09%)</title><rect x="0.5843%" y="165" width="0.0899%" height="15" fill="rgb(238,160,17)" fg:x="13" fg:w="2"/><text x="0.8343%" y="175.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at (2 samples, 0.09%)</title><rect x="0.5843%" y="149" width="0.0899%" height="15" fill="rgb(214,148,48)" fg:x="13" fg:w="2"/><text x="0.8343%" y="159.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (2 samples, 0.09%)</title><rect x="0.5843%" y="133" width="0.0899%" height="15" fill="rgb(232,36,49)" fg:x="13" fg:w="2"/><text x="0.8343%" y="143.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.04%)</title><rect x="0.6742%" y="181" width="0.0449%" height="15" fill="rgb(209,103,24)" fg:x="15" fg:w="1"/><text x="0.9242%" y="191.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (1 samples, 0.04%)</title><rect x="0.6742%" y="165" width="0.0449%" height="15" fill="rgb(229,88,8)" fg:x="15" fg:w="1"/><text x="0.9242%" y="175.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="0.7191%" y="181" width="0.0449%" height="15" fill="rgb(213,181,19)" fg:x="16" fg:w="1"/><text x="0.9691%" y="191.50"></text></g><g><title>&lt;tftp::socket::EncryptionBoundSocket&lt;S&gt; as tftp::socket::Socket&gt;::recv_from (10 samples, 0.45%)</title><rect x="0.3596%" y="261" width="0.4494%" height="15" fill="rgb(254,191,54)" fg:x="8" fg:w="10"/><text x="0.6096%" y="271.50"></text></g><g><title>tftp::encryption::Encryptor::decrypt (10 samples, 0.45%)</title><rect x="0.3596%" y="245" width="0.4494%" height="15" fill="rgb(241,83,37)" fg:x="8" fg:w="10"/><text x="0.6096%" y="255.50"></text></g><g><title>aead::AeadInPlace::decrypt_in_place (10 samples, 0.45%)</title><rect x="0.3596%" y="229" width="0.4494%" height="15" fill="rgb(233,36,39)" fg:x="8" fg:w="10"/><text x="0.6096%" y="239.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (10 samples, 0.45%)</title><rect x="0.3596%" y="213" width="0.4494%" height="15" fill="rgb(226,3,54)" fg:x="8" fg:w="10"/><text x="0.6096%" y="223.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (3 samples, 0.13%)</title><rect x="0.6742%" y="197" width="0.1348%" height="15" fill="rgb(245,192,40)" fg:x="15" fg:w="3"/><text x="0.9242%" y="207.50"></text></g><g><title>memcpy (1 samples, 0.04%)</title><rect x="0.7640%" y="181" width="0.0449%" height="15" fill="rgb(238,167,29)" fg:x="17" fg:w="1"/><text x="1.0140%" y="191.50"></text></g><g><title>[libc.so.6] (11 samples, 0.49%)</title><rect x="0.3596%" y="549" width="0.4944%" height="15" fill="rgb(232,182,51)" fg:x="8" fg:w="11"/><text x="0.6096%" y="559.50"></text></g><g><title>main (11 samples, 0.49%)</title><rect x="0.3596%" y="533" width="0.4944%" height="15" fill="rgb(231,60,39)" fg:x="8" fg:w="11"/><text x="0.6096%" y="543.50"></text></g><g><title>std::rt::lang_start (11 samples, 0.49%)</title><rect x="0.3596%" y="517" width="0.4944%" height="15" fill="rgb(208,69,12)" fg:x="8" fg:w="11"/><text x="0.6096%" y="527.50"></text></g><g><title>std::rt::lang_start_internal (11 samples, 0.49%)</title><rect x="0.3596%" y="501" width="0.4944%" height="15" fill="rgb(235,93,37)" fg:x="8" fg:w="11"/><text x="0.6096%" y="511.50"></text></g><g><title>std::panic::catch_unwind (11 samples, 0.49%)</title><rect x="0.3596%" y="485" width="0.4944%" height="15" fill="rgb(213,116,39)" fg:x="8" fg:w="11"/><text x="0.6096%" y="495.50"></text></g><g><title>std::panicking::try (11 samples, 0.49%)</title><rect x="0.3596%" y="469" width="0.4944%" height="15" fill="rgb(222,207,29)" fg:x="8" fg:w="11"/><text x="0.6096%" y="479.50"></text></g><g><title>std::panicking::try::do_call (11 samples, 0.49%)</title><rect x="0.3596%" y="453" width="0.4944%" height="15" fill="rgb(206,96,30)" fg:x="8" fg:w="11"/><text x="0.6096%" y="463.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (11 samples, 0.49%)</title><rect x="0.3596%" y="437" width="0.4944%" height="15" fill="rgb(218,138,4)" fg:x="8" fg:w="11"/><text x="0.6096%" y="447.50"></text></g><g><title>std::panic::catch_unwind (11 samples, 0.49%)</title><rect x="0.3596%" y="421" width="0.4944%" height="15" fill="rgb(250,191,14)" fg:x="8" fg:w="11"/><text x="0.6096%" y="431.50"></text></g><g><title>std::panicking::try (11 samples, 0.49%)</title><rect x="0.3596%" y="405" width="0.4944%" height="15" fill="rgb(239,60,40)" fg:x="8" fg:w="11"/><text x="0.6096%" y="415.50"></text></g><g><title>std::panicking::try::do_call (11 samples, 0.49%)</title><rect x="0.3596%" y="389" width="0.4944%" height="15" fill="rgb(206,27,48)" fg:x="8" fg:w="11"/><text x="0.6096%" y="399.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (11 samples, 0.49%)</title><rect x="0.3596%" y="373" width="0.4944%" height="15" fill="rgb(225,35,8)" fg:x="8" fg:w="11"/><text x="0.6096%" y="383.50"></text></g><g><title>std::rt::lang_start::{{closure}} (11 samples, 0.49%)</title><rect x="0.3596%" y="357" width="0.4944%" height="15" fill="rgb(250,213,24)" fg:x="8" fg:w="11"/><text x="0.6096%" y="367.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (11 samples, 0.49%)</title><rect x="0.3596%" y="341" width="0.4944%" height="15" fill="rgb(247,123,22)" fg:x="8" fg:w="11"/><text x="0.6096%" y="351.50"></text></g><g><title>core::ops::function::FnOnce::call_once (11 samples, 0.49%)</title><rect x="0.3596%" y="325" width="0.4944%" height="15" fill="rgb(231,138,38)" fg:x="8" fg:w="11"/><text x="0.6096%" y="335.50"></text></g><g><title>tftp::main (11 samples, 0.49%)</title><rect x="0.3596%" y="309" width="0.4944%" height="15" fill="rgb(231,145,46)" fg:x="8" fg:w="11"/><text x="0.6096%" y="319.50"></text></g><g><title>tftp::start_receive (11 samples, 0.49%)</title><rect x="0.3596%" y="293" width="0.4944%" height="15" fill="rgb(251,118,11)" fg:x="8" fg:w="11"/><text x="0.6096%" y="303.50"></text></g><g><title>tftp::client::client::receive_file (11 samples, 0.49%)</title><rect x="0.3596%" y="277" width="0.4944%" height="15" fill="rgb(217,147,25)" fg:x="8" fg:w="11"/><text x="0.6096%" y="287.50"></text></g><g><title>tftp::client::client::write_block (1 samples, 0.04%)</title><rect x="0.8090%" y="261" width="0.0449%" height="15" fill="rgb(247,81,37)" fg:x="18" fg:w="1"/><text x="1.0590%" y="271.50"></text></g><g><title>&lt;tftp::packet::Packet as tftp::packet::ByteConverter&gt;::to_bytes (1 samples, 0.04%)</title><rect x="0.8090%" y="245" width="0.0449%" height="15" fill="rgb(209,12,38)" fg:x="18" fg:w="1"/><text x="1.0590%" y="255.50"></text></g><g><title>&lt;tftp::packet::AckPacket as tftp::packet::ByteConverter&gt;::to_bytes (1 samples, 0.04%)</title><rect x="0.8090%" y="229" width="0.0449%" height="15" fill="rgb(227,1,9)" fg:x="18" fg:w="1"/><text x="1.0590%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.04%)</title><rect x="0.8090%" y="213" width="0.0449%" height="15" fill="rgb(248,47,43)" fg:x="18" fg:w="1"/><text x="1.0590%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="0.8090%" y="197" width="0.0449%" height="15" fill="rgb(221,10,30)" fg:x="18" fg:w="1"/><text x="1.0590%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="0.8090%" y="181" width="0.0449%" height="15" fill="rgb(210,229,1)" fg:x="18" fg:w="1"/><text x="1.0590%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="0.8090%" y="165" width="0.0449%" height="15" fill="rgb(222,148,37)" fg:x="18" fg:w="1"/><text x="1.0590%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.04%)</title><rect x="0.8090%" y="149" width="0.0449%" height="15" fill="rgb(234,67,33)" fg:x="18" fg:w="1"/><text x="1.0590%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="0.8090%" y="133" width="0.0449%" height="15" fill="rgb(247,98,35)" fg:x="18" fg:w="1"/><text x="1.0590%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="0.8090%" y="117" width="0.0449%" height="15" fill="rgb(247,138,52)" fg:x="18" fg:w="1"/><text x="1.0590%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.04%)</title><rect x="0.8090%" y="101" width="0.0449%" height="15" fill="rgb(213,79,30)" fg:x="18" fg:w="1"/><text x="1.0590%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="0.8090%" y="85" width="0.0449%" height="15" fill="rgb(246,177,23)" fg:x="18" fg:w="1"/><text x="1.0590%" y="95.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="0.8090%" y="69" width="0.0449%" height="15" fill="rgb(230,62,27)" fg:x="18" fg:w="1"/><text x="1.0590%" y="79.50"></text></g><g><title>clap::parser::parser::Parser::get_matches_with (1 samples, 0.04%)</title><rect x="0.8539%" y="549" width="0.0449%" height="15" fill="rgb(216,154,8)" fg:x="19" fg:w="1"/><text x="1.1039%" y="559.50"></text></g><g><title>clap::parser::parser::Parser::parse_subcommand (1 samples, 0.04%)</title><rect x="0.8539%" y="533" width="0.0449%" height="15" fill="rgb(244,35,45)" fg:x="19" fg:w="1"/><text x="1.1039%" y="543.50"></text></g><g><title>clap::builder::command::Command::_build_subcommand (1 samples, 0.04%)</title><rect x="0.8539%" y="517" width="0.0449%" height="15" fill="rgb(251,115,12)" fg:x="19" fg:w="1"/><text x="1.1039%" y="527.50"></text></g><g><title>clap::builder::command::Command::_build_self (1 samples, 0.04%)</title><rect x="0.8539%" y="501" width="0.0449%" height="15" fill="rgb(240,54,50)" fg:x="19" fg:w="1"/><text x="1.1039%" y="511.50"></text></g><g><title>clap::builder::debug_asserts::assert_app (1 samples, 0.04%)</title><rect x="0.8539%" y="485" width="0.0449%" height="15" fill="rgb(233,84,52)" fg:x="19" fg:w="1"/><text x="1.1039%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (1 samples, 0.04%)</title><rect x="0.8539%" y="469" width="0.0449%" height="15" fill="rgb(207,117,47)" fg:x="19" fg:w="1"/><text x="1.1039%" y="479.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="0.8539%" y="453" width="0.0449%" height="15" fill="rgb(249,43,39)" fg:x="19" fg:w="1"/><text x="1.1039%" y="463.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.04%)</title><rect x="0.8539%" y="437" width="0.0449%" height="15" fill="rgb(209,38,44)" fg:x="19" fg:w="1"/><text x="1.1039%" y="447.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.04%)</title><rect x="0.8989%" y="549" width="0.0449%" height="15" fill="rgb(236,212,23)" fg:x="20" fg:w="1"/><text x="1.1489%" y="559.50"></text></g><g><title>tftp::main (1 samples, 0.04%)</title><rect x="0.8989%" y="533" width="0.0449%" height="15" fill="rgb(242,79,21)" fg:x="20" fg:w="1"/><text x="1.1489%" y="543.50"></text></g><g><title>tftp::start_receive (1 samples, 0.04%)</title><rect x="0.8989%" y="517" width="0.0449%" height="15" fill="rgb(211,96,35)" fg:x="20" fg:w="1"/><text x="1.1489%" y="527.50"></text></g><g><title>tftp::client::client::receive_file (1 samples, 0.04%)</title><rect x="0.8989%" y="501" width="0.0449%" height="15" fill="rgb(253,215,40)" fg:x="20" fg:w="1"/><text x="1.1489%" y="511.50"></text></g><g><title>&lt;tftp::socket::EncryptionBoundSocket&lt;S&gt; as tftp::socket::Socket&gt;::recv_from (1 samples, 0.04%)</title><rect x="0.8989%" y="485" width="0.0449%" height="15" fill="rgb(211,81,21)" fg:x="20" fg:w="1"/><text x="1.1489%" y="495.50"></text></g><g><title>tftp::encryption::Encryptor::decrypt (1 samples, 0.04%)</title><rect x="0.8989%" y="469" width="0.0449%" height="15" fill="rgb(208,190,38)" fg:x="20" fg:w="1"/><text x="1.1489%" y="479.50"></text></g><g><title>aead::AeadInPlace::decrypt_in_place (1 samples, 0.04%)</title><rect x="0.8989%" y="453" width="0.0449%" height="15" fill="rgb(235,213,38)" fg:x="20" fg:w="1"/><text x="1.1489%" y="463.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (1 samples, 0.04%)</title><rect x="0.8989%" y="437" width="0.0449%" height="15" fill="rgb(237,122,38)" fg:x="20" fg:w="1"/><text x="1.1489%" y="447.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (1 samples, 0.04%)</title><rect x="0.8989%" y="421" width="0.0449%" height="15" fill="rgb(244,218,35)" fg:x="20" fg:w="1"/><text x="1.1489%" y="431.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.04%)</title><rect x="0.8989%" y="405" width="0.0449%" height="15" fill="rgb(240,68,47)" fg:x="20" fg:w="1"/><text x="1.1489%" y="415.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.04%)</title><rect x="0.8989%" y="389" width="0.0449%" height="15" fill="rgb(210,16,53)" fg:x="20" fg:w="1"/><text x="1.1489%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.04%)</title><rect x="0.8989%" y="373" width="0.0449%" height="15" fill="rgb(235,124,12)" fg:x="20" fg:w="1"/><text x="1.1489%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.04%)</title><rect x="0.8989%" y="357" width="0.0449%" height="15" fill="rgb(224,169,11)" fg:x="20" fg:w="1"/><text x="1.1489%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.04%)</title><rect x="0.8989%" y="341" width="0.0449%" height="15" fill="rgb(250,166,2)" fg:x="20" fg:w="1"/><text x="1.1489%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.04%)</title><rect x="0.8989%" y="325" width="0.0449%" height="15" fill="rgb(242,216,29)" fg:x="20" fg:w="1"/><text x="1.1489%" y="335.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (1 samples, 0.04%)</title><rect x="0.9438%" y="181" width="0.0449%" height="15" fill="rgb(230,116,27)" fg:x="21" fg:w="1"/><text x="1.1938%" y="191.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (1 samples, 0.04%)</title><rect x="0.9438%" y="165" width="0.0449%" height="15" fill="rgb(228,99,48)" fg:x="21" fg:w="1"/><text x="1.1938%" y="175.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.04%)</title><rect x="0.9438%" y="149" width="0.0449%" height="15" fill="rgb(253,11,6)" fg:x="21" fg:w="1"/><text x="1.1938%" y="159.50"></text></g><g><title>std::rt::lang_start (2 samples, 0.09%)</title><rect x="0.9438%" y="549" width="0.0899%" height="15" fill="rgb(247,143,39)" fg:x="21" fg:w="2"/><text x="1.1938%" y="559.50"></text></g><g><title>std::rt::lang_start_internal (2 samples, 0.09%)</title><rect x="0.9438%" y="533" width="0.0899%" height="15" fill="rgb(236,97,10)" fg:x="21" fg:w="2"/><text x="1.1938%" y="543.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.09%)</title><rect x="0.9438%" y="517" width="0.0899%" height="15" fill="rgb(233,208,19)" fg:x="21" fg:w="2"/><text x="1.1938%" y="527.50"></text></g><g><title>std::panicking::try (2 samples, 0.09%)</title><rect x="0.9438%" y="501" width="0.0899%" height="15" fill="rgb(216,164,2)" fg:x="21" fg:w="2"/><text x="1.1938%" y="511.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.09%)</title><rect x="0.9438%" y="485" width="0.0899%" height="15" fill="rgb(220,129,5)" fg:x="21" fg:w="2"/><text x="1.1938%" y="495.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (2 samples, 0.09%)</title><rect x="0.9438%" y="469" width="0.0899%" height="15" fill="rgb(242,17,10)" fg:x="21" fg:w="2"/><text x="1.1938%" y="479.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.09%)</title><rect x="0.9438%" y="453" width="0.0899%" height="15" fill="rgb(242,107,0)" fg:x="21" fg:w="2"/><text x="1.1938%" y="463.50"></text></g><g><title>std::panicking::try (2 samples, 0.09%)</title><rect x="0.9438%" y="437" width="0.0899%" height="15" fill="rgb(251,28,31)" fg:x="21" fg:w="2"/><text x="1.1938%" y="447.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.09%)</title><rect x="0.9438%" y="421" width="0.0899%" height="15" fill="rgb(233,223,10)" fg:x="21" fg:w="2"/><text x="1.1938%" y="431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (2 samples, 0.09%)</title><rect x="0.9438%" y="405" width="0.0899%" height="15" fill="rgb(215,21,27)" fg:x="21" fg:w="2"/><text x="1.1938%" y="415.50"></text></g><g><title>std::rt::lang_start::{{closure}} (2 samples, 0.09%)</title><rect x="0.9438%" y="389" width="0.0899%" height="15" fill="rgb(232,23,21)" fg:x="21" fg:w="2"/><text x="1.1938%" y="399.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2 samples, 0.09%)</title><rect x="0.9438%" y="373" width="0.0899%" height="15" fill="rgb(244,5,23)" fg:x="21" fg:w="2"/><text x="1.1938%" y="383.50"></text></g><g><title>core::ops::function::FnOnce::call_once (2 samples, 0.09%)</title><rect x="0.9438%" y="357" width="0.0899%" height="15" fill="rgb(226,81,46)" fg:x="21" fg:w="2"/><text x="1.1938%" y="367.50"></text></g><g><title>tftp::main (2 samples, 0.09%)</title><rect x="0.9438%" y="341" width="0.0899%" height="15" fill="rgb(247,70,30)" fg:x="21" fg:w="2"/><text x="1.1938%" y="351.50"></text></g><g><title>tftp::start_receive (2 samples, 0.09%)</title><rect x="0.9438%" y="325" width="0.0899%" height="15" fill="rgb(212,68,19)" fg:x="21" fg:w="2"/><text x="1.1938%" y="335.50"></text></g><g><title>tftp::client::client::receive_file (2 samples, 0.09%)</title><rect x="0.9438%" y="309" width="0.0899%" height="15" fill="rgb(240,187,13)" fg:x="21" fg:w="2"/><text x="1.1938%" y="319.50"></text></g><g><title>&lt;tftp::socket::EncryptionBoundSocket&lt;S&gt; as tftp::socket::Socket&gt;::recv_from (2 samples, 0.09%)</title><rect x="0.9438%" y="293" width="0.0899%" height="15" fill="rgb(223,113,26)" fg:x="21" fg:w="2"/><text x="1.1938%" y="303.50"></text></g><g><title>tftp::encryption::Encryptor::decrypt (2 samples, 0.09%)</title><rect x="0.9438%" y="277" width="0.0899%" height="15" fill="rgb(206,192,2)" fg:x="21" fg:w="2"/><text x="1.1938%" y="287.50"></text></g><g><title>aead::AeadInPlace::decrypt_in_place (2 samples, 0.09%)</title><rect x="0.9438%" y="261" width="0.0899%" height="15" fill="rgb(241,108,4)" fg:x="21" fg:w="2"/><text x="1.1938%" y="271.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (2 samples, 0.09%)</title><rect x="0.9438%" y="245" width="0.0899%" height="15" fill="rgb(247,173,49)" fg:x="21" fg:w="2"/><text x="1.1938%" y="255.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as crypto_common::KeyIvInit&gt;::new (2 samples, 0.09%)</title><rect x="0.9438%" y="229" width="0.0899%" height="15" fill="rgb(224,114,35)" fg:x="21" fg:w="2"/><text x="1.1938%" y="239.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (2 samples, 0.09%)</title><rect x="0.9438%" y="213" width="0.0899%" height="15" fill="rgb(245,159,27)" fg:x="21" fg:w="2"/><text x="1.1938%" y="223.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (2 samples, 0.09%)</title><rect x="0.9438%" y="197" width="0.0899%" height="15" fill="rgb(245,172,44)" fg:x="21" fg:w="2"/><text x="1.1938%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="0.9888%" y="181" width="0.0449%" height="15" fill="rgb(236,23,11)" fg:x="22" fg:w="1"/><text x="1.2388%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.04%)</title><rect x="0.9888%" y="165" width="0.0449%" height="15" fill="rgb(205,117,38)" fg:x="22" fg:w="1"/><text x="1.2388%" y="175.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (1 samples, 0.04%)</title><rect x="1.0337%" y="197" width="0.0449%" height="15" fill="rgb(237,72,25)" fg:x="23" fg:w="1"/><text x="1.2837%" y="207.50"></text></g><g><title>core::iter::adapters::zip::Zip&lt;A,B&gt;::new (1 samples, 0.04%)</title><rect x="1.0337%" y="181" width="0.0449%" height="15" fill="rgb(244,70,9)" fg:x="23" fg:w="1"/><text x="1.2837%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (1 samples, 0.04%)</title><rect x="1.0337%" y="165" width="0.0449%" height="15" fill="rgb(217,125,39)" fg:x="23" fg:w="1"/><text x="1.2837%" y="175.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::chunks_exact (1 samples, 0.04%)</title><rect x="1.0787%" y="197" width="0.0449%" height="15" fill="rgb(235,36,10)" fg:x="24" fg:w="1"/><text x="1.3287%" y="207.50"></text></g><g><title>core::slice::iter::ChunksExact&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="1.0787%" y="181" width="0.0449%" height="15" fill="rgb(251,123,47)" fg:x="24" fg:w="1"/><text x="1.3287%" y="191.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as crypto_common::KeyIvInit&gt;::new (3 samples, 0.13%)</title><rect x="1.0337%" y="245" width="0.1348%" height="15" fill="rgb(221,13,13)" fg:x="23" fg:w="3"/><text x="1.2837%" y="255.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (3 samples, 0.13%)</title><rect x="1.0337%" y="229" width="0.1348%" height="15" fill="rgb(238,131,9)" fg:x="23" fg:w="3"/><text x="1.2837%" y="239.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (3 samples, 0.13%)</title><rect x="1.0337%" y="213" width="0.1348%" height="15" fill="rgb(211,50,8)" fg:x="23" fg:w="3"/><text x="1.2837%" y="223.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (1 samples, 0.04%)</title><rect x="1.1236%" y="197" width="0.0449%" height="15" fill="rgb(245,182,24)" fg:x="25" fg:w="1"/><text x="1.3736%" y="207.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="1.1236%" y="181" width="0.0449%" height="15" fill="rgb(242,14,37)" fg:x="25" fg:w="1"/><text x="1.3736%" y="191.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.04%)</title><rect x="1.1236%" y="165" width="0.0449%" height="15" fill="rgb(246,228,12)" fg:x="25" fg:w="1"/><text x="1.3736%" y="175.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.04%)</title><rect x="1.1236%" y="149" width="0.0449%" height="15" fill="rgb(213,55,15)" fg:x="25" fg:w="1"/><text x="1.3736%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (3 samples, 0.13%)</title><rect x="1.1685%" y="133" width="0.1348%" height="15" fill="rgb(209,9,3)" fg:x="26" fg:w="3"/><text x="1.4185%" y="143.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.09%)</title><rect x="1.2135%" y="117" width="0.0899%" height="15" fill="rgb(230,59,30)" fg:x="27" fg:w="2"/><text x="1.4635%" y="127.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (1 samples, 0.04%)</title><rect x="1.2584%" y="101" width="0.0449%" height="15" fill="rgb(209,121,21)" fg:x="28" fg:w="1"/><text x="1.5084%" y="111.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5 samples, 0.22%)</title><rect x="1.1685%" y="181" width="0.2247%" height="15" fill="rgb(220,109,13)" fg:x="26" fg:w="5"/><text x="1.4185%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.22%)</title><rect x="1.1685%" y="165" width="0.2247%" height="15" fill="rgb(232,18,1)" fg:x="26" fg:w="5"/><text x="1.4185%" y="175.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (5 samples, 0.22%)</title><rect x="1.1685%" y="149" width="0.2247%" height="15" fill="rgb(215,41,42)" fg:x="26" fg:w="5"/><text x="1.4185%" y="159.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.09%)</title><rect x="1.3034%" y="133" width="0.0899%" height="15" fill="rgb(224,123,36)" fg:x="29" fg:w="2"/><text x="1.5534%" y="143.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::authenticate_lengths (6 samples, 0.27%)</title><rect x="1.1685%" y="229" width="0.2697%" height="15" fill="rgb(240,125,3)" fg:x="26" fg:w="6"/><text x="1.4185%" y="239.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (6 samples, 0.27%)</title><rect x="1.1685%" y="213" width="0.2697%" height="15" fill="rgb(205,98,50)" fg:x="26" fg:w="6"/><text x="1.4185%" y="223.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (6 samples, 0.27%)</title><rect x="1.1685%" y="197" width="0.2697%" height="15" fill="rgb(205,185,37)" fg:x="26" fg:w="6"/><text x="1.4185%" y="207.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::iter_position (1 samples, 0.04%)</title><rect x="1.3933%" y="181" width="0.0449%" height="15" fill="rgb(238,207,15)" fg:x="31" fg:w="1"/><text x="1.6433%" y="191.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (1 samples, 0.04%)</title><rect x="1.3933%" y="165" width="0.0449%" height="15" fill="rgb(213,199,42)" fg:x="31" fg:w="1"/><text x="1.6433%" y="175.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="1.3933%" y="149" width="0.0449%" height="15" fill="rgb(235,201,11)" fg:x="31" fg:w="1"/><text x="1.6433%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (2 samples, 0.09%)</title><rect x="1.4831%" y="133" width="0.0899%" height="15" fill="rgb(207,46,11)" fg:x="33" fg:w="2"/><text x="1.7331%" y="143.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.04%)</title><rect x="1.5281%" y="117" width="0.0449%" height="15" fill="rgb(241,35,35)" fg:x="34" fg:w="1"/><text x="1.7781%" y="127.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="1.6180%" y="117" width="0.0449%" height="15" fill="rgb(243,32,47)" fg:x="36" fg:w="1"/><text x="1.8680%" y="127.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (6 samples, 0.27%)</title><rect x="1.4382%" y="213" width="0.2697%" height="15" fill="rgb(247,202,23)" fg:x="32" fg:w="6"/><text x="1.6882%" y="223.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (6 samples, 0.27%)</title><rect x="1.4382%" y="197" width="0.2697%" height="15" fill="rgb(219,102,11)" fg:x="32" fg:w="6"/><text x="1.6882%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (6 samples, 0.27%)</title><rect x="1.4382%" y="181" width="0.2697%" height="15" fill="rgb(243,110,44)" fg:x="32" fg:w="6"/><text x="1.6882%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.27%)</title><rect x="1.4382%" y="165" width="0.2697%" height="15" fill="rgb(222,74,54)" fg:x="32" fg:w="6"/><text x="1.6882%" y="175.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (6 samples, 0.27%)</title><rect x="1.4382%" y="149" width="0.2697%" height="15" fill="rgb(216,99,12)" fg:x="32" fg:w="6"/><text x="1.6882%" y="159.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.13%)</title><rect x="1.5730%" y="133" width="0.1348%" height="15" fill="rgb(226,22,26)" fg:x="35" fg:w="3"/><text x="1.8230%" y="143.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (1 samples, 0.04%)</title><rect x="1.6629%" y="117" width="0.0449%" height="15" fill="rgb(217,163,10)" fg:x="37" fg:w="1"/><text x="1.9129%" y="127.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.04%)</title><rect x="1.6629%" y="101" width="0.0449%" height="15" fill="rgb(213,25,53)" fg:x="37" fg:w="1"/><text x="1.9129%" y="111.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="2.0225%" y="149" width="0.0449%" height="15" fill="rgb(252,105,26)" fg:x="45" fg:w="1"/><text x="2.2725%" y="159.50"></text></g><g><title>universal_hash::UniversalHash::update_padded (15 samples, 0.67%)</title><rect x="1.4382%" y="229" width="0.6742%" height="15" fill="rgb(220,39,43)" fg:x="32" fg:w="15"/><text x="1.6882%" y="239.50"></text></g><g><title>universal_hash::UniversalHash::update (9 samples, 0.40%)</title><rect x="1.7079%" y="213" width="0.4045%" height="15" fill="rgb(229,68,48)" fg:x="38" fg:w="9"/><text x="1.9579%" y="223.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (9 samples, 0.40%)</title><rect x="1.7079%" y="197" width="0.4045%" height="15" fill="rgb(252,8,32)" fg:x="38" fg:w="9"/><text x="1.9579%" y="207.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (9 samples, 0.40%)</title><rect x="1.7079%" y="181" width="0.4045%" height="15" fill="rgb(223,20,43)" fg:x="38" fg:w="9"/><text x="1.9579%" y="191.50"></text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (9 samples, 0.40%)</title><rect x="1.7079%" y="165" width="0.4045%" height="15" fill="rgb(229,81,49)" fg:x="38" fg:w="9"/><text x="1.9579%" y="175.50"></text></g><g><title>&lt;poly1305::backend::soft::State as universal_hash::UhfBackend&gt;::proc_block (1 samples, 0.04%)</title><rect x="2.0674%" y="149" width="0.0449%" height="15" fill="rgb(236,28,36)" fg:x="46" fg:w="1"/><text x="2.3174%" y="159.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::decrypt_in_place_detached (24 samples, 1.08%)</title><rect x="1.1685%" y="245" width="1.0787%" height="15" fill="rgb(249,185,26)" fg:x="26" fg:w="24"/><text x="1.4185%" y="255.50"></text></g><g><title>universal_hash::UniversalHash::verify (3 samples, 0.13%)</title><rect x="2.1124%" y="229" width="0.1348%" height="15" fill="rgb(249,174,33)" fg:x="47" fg:w="3"/><text x="2.3624%" y="239.50"></text></g><g><title>&lt;[T] as subtle::ConstantTimeEq&gt;::ct_eq (3 samples, 0.13%)</title><rect x="2.1124%" y="213" width="0.1348%" height="15" fill="rgb(233,201,37)" fg:x="47" fg:w="3"/><text x="2.3624%" y="223.50"></text></g><g><title>&lt;u8 as subtle::ConstantTimeEq&gt;::ct_eq (3 samples, 0.13%)</title><rect x="2.1124%" y="197" width="0.1348%" height="15" fill="rgb(221,78,26)" fg:x="47" fg:w="3"/><text x="2.3624%" y="207.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3 samples, 0.13%)</title><rect x="2.1124%" y="181" width="0.1348%" height="15" fill="rgb(250,127,30)" fg:x="47" fg:w="3"/><text x="2.3624%" y="191.50"></text></g><g><title>&lt;subtle::Choice as core::convert::From&lt;u8&gt;&gt;::from (2 samples, 0.09%)</title><rect x="2.1573%" y="165" width="0.0899%" height="15" fill="rgb(230,49,44)" fg:x="48" fg:w="2"/><text x="2.4073%" y="175.50"></text></g><g><title>subtle::black_box (1 samples, 0.04%)</title><rect x="2.2022%" y="149" width="0.0449%" height="15" fill="rgb(229,67,23)" fg:x="49" fg:w="1"/><text x="2.4522%" y="159.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.04%)</title><rect x="2.2022%" y="133" width="0.0449%" height="15" fill="rgb(249,83,47)" fg:x="49" fg:w="1"/><text x="2.4522%" y="143.50"></text></g><g><title>zeroize::atomic_fence (2 samples, 0.09%)</title><rect x="2.2472%" y="213" width="0.0899%" height="15" fill="rgb(215,43,3)" fg:x="50" fg:w="2"/><text x="2.4972%" y="223.50"></text></g><g><title>core::sync::atomic::compiler_fence (1 samples, 0.04%)</title><rect x="2.2921%" y="197" width="0.0449%" height="15" fill="rgb(238,154,13)" fg:x="51" fg:w="1"/><text x="2.5421%" y="207.50"></text></g><g><title>&lt;[Z] as zeroize::Zeroize&gt;::zeroize (4 samples, 0.18%)</title><rect x="2.2472%" y="229" width="0.1798%" height="15" fill="rgb(219,56,2)" fg:x="50" fg:w="4"/><text x="2.4972%" y="239.50"></text></g><g><title>zeroize::volatile_set (2 samples, 0.09%)</title><rect x="2.3371%" y="213" width="0.0899%" height="15" fill="rgb(233,0,4)" fg:x="52" fg:w="2"/><text x="2.5871%" y="223.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.09%)</title><rect x="2.3371%" y="197" width="0.0899%" height="15" fill="rgb(235,30,7)" fg:x="52" fg:w="2"/><text x="2.5871%" y="207.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.04%)</title><rect x="2.3820%" y="181" width="0.0449%" height="15" fill="rgb(250,79,13)" fg:x="53" fg:w="1"/><text x="2.6320%" y="191.50"></text></g><g><title>core::mem::replace (1 samples, 0.04%)</title><rect x="2.3820%" y="165" width="0.0449%" height="15" fill="rgb(211,146,34)" fg:x="53" fg:w="1"/><text x="2.6320%" y="175.50"></text></g><g><title>cipher::stream::StreamCipherSeek::seek (1 samples, 0.04%)</title><rect x="2.4270%" y="229" width="0.0449%" height="15" fill="rgb(228,22,38)" fg:x="54" fg:w="1"/><text x="2.6770%" y="239.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipherSeek&gt;::try_seek (1 samples, 0.04%)</title><rect x="2.4270%" y="213" width="0.0449%" height="15" fill="rgb(235,168,5)" fg:x="54" fg:w="1"/><text x="2.6770%" y="223.50"></text></g><g><title>&lt;u64 as cipher::stream::SeekNum&gt;::into_block_byte (1 samples, 0.04%)</title><rect x="2.4270%" y="197" width="0.0449%" height="15" fill="rgb(221,155,16)" fg:x="54" fg:w="1"/><text x="2.6770%" y="207.50"></text></g><g><title>generic_array::GenericArray&lt;T,N&gt;::from_slice (2 samples, 0.09%)</title><rect x="2.4719%" y="229" width="0.0899%" height="15" fill="rgb(215,215,53)" fg:x="55" fg:w="2"/><text x="2.7219%" y="239.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.09%)</title><rect x="2.4719%" y="213" width="0.0899%" height="15" fill="rgb(223,4,10)" fg:x="55" fg:w="2"/><text x="2.7219%" y="223.50"></text></g><g><title>&lt;&amp;generic_array::GenericArray&lt;T,N&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (2 samples, 0.09%)</title><rect x="2.4719%" y="197" width="0.0899%" height="15" fill="rgb(234,103,6)" fg:x="55" fg:w="2"/><text x="2.7219%" y="207.50"></text></g><g><title>std::rt::lang_start_internal (37 samples, 1.66%)</title><rect x="1.0337%" y="549" width="1.6629%" height="15" fill="rgb(227,97,0)" fg:x="23" fg:w="37"/><text x="1.2837%" y="559.50"></text></g><g><title>std::panic::catch_unwind (37 samples, 1.66%)</title><rect x="1.0337%" y="533" width="1.6629%" height="15" fill="rgb(234,150,53)" fg:x="23" fg:w="37"/><text x="1.2837%" y="543.50"></text></g><g><title>std::panicking::try (37 samples, 1.66%)</title><rect x="1.0337%" y="517" width="1.6629%" height="15" fill="rgb(228,201,54)" fg:x="23" fg:w="37"/><text x="1.2837%" y="527.50"></text></g><g><title>std::panicking::try::do_call (37 samples, 1.66%)</title><rect x="1.0337%" y="501" width="1.6629%" height="15" fill="rgb(222,22,37)" fg:x="23" fg:w="37"/><text x="1.2837%" y="511.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (37 samples, 1.66%)</title><rect x="1.0337%" y="485" width="1.6629%" height="15" fill="rgb(237,53,32)" fg:x="23" fg:w="37"/><text x="1.2837%" y="495.50"></text></g><g><title>std::panic::catch_unwind (37 samples, 1.66%)</title><rect x="1.0337%" y="469" width="1.6629%" height="15" fill="rgb(233,25,53)" fg:x="23" fg:w="37"/><text x="1.2837%" y="479.50"></text></g><g><title>std::panicking::try (37 samples, 1.66%)</title><rect x="1.0337%" y="453" width="1.6629%" height="15" fill="rgb(210,40,34)" fg:x="23" fg:w="37"/><text x="1.2837%" y="463.50"></text></g><g><title>std::panicking::try::do_call (37 samples, 1.66%)</title><rect x="1.0337%" y="437" width="1.6629%" height="15" fill="rgb(241,220,44)" fg:x="23" fg:w="37"/><text x="1.2837%" y="447.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (37 samples, 1.66%)</title><rect x="1.0337%" y="421" width="1.6629%" height="15" fill="rgb(235,28,35)" fg:x="23" fg:w="37"/><text x="1.2837%" y="431.50"></text></g><g><title>std::rt::lang_start::{{closure}} (37 samples, 1.66%)</title><rect x="1.0337%" y="405" width="1.6629%" height="15" fill="rgb(210,56,17)" fg:x="23" fg:w="37"/><text x="1.2837%" y="415.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (37 samples, 1.66%)</title><rect x="1.0337%" y="389" width="1.6629%" height="15" fill="rgb(224,130,29)" fg:x="23" fg:w="37"/><text x="1.2837%" y="399.50"></text></g><g><title>core::ops::function::FnOnce::call_once (37 samples, 1.66%)</title><rect x="1.0337%" y="373" width="1.6629%" height="15" fill="rgb(235,212,8)" fg:x="23" fg:w="37"/><text x="1.2837%" y="383.50"></text></g><g><title>tftp::main (37 samples, 1.66%)</title><rect x="1.0337%" y="357" width="1.6629%" height="15" fill="rgb(223,33,50)" fg:x="23" fg:w="37"/><text x="1.2837%" y="367.50"></text></g><g><title>tftp::start_receive (37 samples, 1.66%)</title><rect x="1.0337%" y="341" width="1.6629%" height="15" fill="rgb(219,149,13)" fg:x="23" fg:w="37"/><text x="1.2837%" y="351.50"></text></g><g><title>tftp::client::client::receive_file (37 samples, 1.66%)</title><rect x="1.0337%" y="325" width="1.6629%" height="15" fill="rgb(250,156,29)" fg:x="23" fg:w="37"/><text x="1.2837%" y="335.50"></text></g><g><title>&lt;tftp::socket::EncryptionBoundSocket&lt;S&gt; as tftp::socket::Socket&gt;::recv_from (37 samples, 1.66%)</title><rect x="1.0337%" y="309" width="1.6629%" height="15" fill="rgb(216,193,19)" fg:x="23" fg:w="37"/><text x="1.2837%" y="319.50"></text></g><g><title>tftp::encryption::Encryptor::decrypt (37 samples, 1.66%)</title><rect x="1.0337%" y="293" width="1.6629%" height="15" fill="rgb(216,135,14)" fg:x="23" fg:w="37"/><text x="1.2837%" y="303.50"></text></g><g><title>aead::AeadInPlace::decrypt_in_place (37 samples, 1.66%)</title><rect x="1.0337%" y="277" width="1.6629%" height="15" fill="rgb(241,47,5)" fg:x="23" fg:w="37"/><text x="1.2837%" y="287.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (37 samples, 1.66%)</title><rect x="1.0337%" y="261" width="1.6629%" height="15" fill="rgb(233,42,35)" fg:x="23" fg:w="37"/><text x="1.2837%" y="271.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (10 samples, 0.45%)</title><rect x="2.2472%" y="245" width="0.4494%" height="15" fill="rgb(231,13,6)" fg:x="50" fg:w="10"/><text x="2.4972%" y="255.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (3 samples, 0.13%)</title><rect x="2.5618%" y="229" width="0.1348%" height="15" fill="rgb(207,181,40)" fg:x="57" fg:w="3"/><text x="2.8118%" y="239.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (3 samples, 0.13%)</title><rect x="2.5618%" y="213" width="0.1348%" height="15" fill="rgb(254,173,49)" fg:x="57" fg:w="3"/><text x="2.8118%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.13%)</title><rect x="2.5618%" y="197" width="0.1348%" height="15" fill="rgb(221,1,38)" fg:x="57" fg:w="3"/><text x="2.8118%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.13%)</title><rect x="2.5618%" y="181" width="0.1348%" height="15" fill="rgb(206,124,46)" fg:x="57" fg:w="3"/><text x="2.8118%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.13%)</title><rect x="2.5618%" y="165" width="0.1348%" height="15" fill="rgb(249,21,11)" fg:x="57" fg:w="3"/><text x="2.8118%" y="175.50"></text></g><g><title>universal_hash::UniversalHash::update_padded (1 samples, 0.04%)</title><rect x="2.6966%" y="389" width="0.0449%" height="15" fill="rgb(222,201,40)" fg:x="60" fg:w="1"/><text x="2.9466%" y="399.50"></text></g><g><title>universal_hash::UniversalHash::update (1 samples, 0.04%)</title><rect x="2.6966%" y="373" width="0.0449%" height="15" fill="rgb(235,61,29)" fg:x="60" fg:w="1"/><text x="2.9466%" y="383.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (1 samples, 0.04%)</title><rect x="2.6966%" y="357" width="0.0449%" height="15" fill="rgb(219,207,3)" fg:x="60" fg:w="1"/><text x="2.9466%" y="367.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (1 samples, 0.04%)</title><rect x="2.6966%" y="341" width="0.0449%" height="15" fill="rgb(222,56,46)" fg:x="60" fg:w="1"/><text x="2.9466%" y="351.50"></text></g><g><title>poly1305::backend::autodetect::avx2_cpuid::InitToken::get (1 samples, 0.04%)</title><rect x="2.6966%" y="325" width="0.0449%" height="15" fill="rgb(239,76,54)" fg:x="60" fg:w="1"/><text x="2.9466%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicU8::load (1 samples, 0.04%)</title><rect x="2.6966%" y="309" width="0.0449%" height="15" fill="rgb(231,124,27)" fg:x="60" fg:w="1"/><text x="2.9466%" y="319.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.04%)</title><rect x="2.6966%" y="293" width="0.0449%" height="15" fill="rgb(249,195,6)" fg:x="60" fg:w="1"/><text x="2.9466%" y="303.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::decrypt_in_place_detached (2 samples, 0.09%)</title><rect x="2.6966%" y="405" width="0.0899%" height="15" fill="rgb(237,174,47)" fg:x="60" fg:w="2"/><text x="2.9466%" y="415.50"></text></g><g><title>universal_hash::UniversalHash::verify (1 samples, 0.04%)</title><rect x="2.7416%" y="389" width="0.0449%" height="15" fill="rgb(206,201,31)" fg:x="61" fg:w="1"/><text x="2.9916%" y="399.50"></text></g><g><title>&lt;[T] as subtle::ConstantTimeEq&gt;::ct_eq (1 samples, 0.04%)</title><rect x="2.7416%" y="373" width="0.0449%" height="15" fill="rgb(231,57,52)" fg:x="61" fg:w="1"/><text x="2.9916%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="2.7416%" y="357" width="0.0449%" height="15" fill="rgb(248,177,22)" fg:x="61" fg:w="1"/><text x="2.9916%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.04%)</title><rect x="2.7416%" y="341" width="0.0449%" height="15" fill="rgb(215,211,37)" fg:x="61" fg:w="1"/><text x="2.9916%" y="351.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (1 samples, 0.04%)</title><rect x="2.7416%" y="325" width="0.0449%" height="15" fill="rgb(241,128,51)" fg:x="61" fg:w="1"/><text x="2.9916%" y="335.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.04%)</title><rect x="2.7416%" y="309" width="0.0449%" height="15" fill="rgb(227,165,31)" fg:x="61" fg:w="1"/><text x="2.9916%" y="319.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3 samples, 0.13%)</title><rect x="2.6966%" y="549" width="0.1348%" height="15" fill="rgb(228,167,24)" fg:x="60" fg:w="3"/><text x="2.9466%" y="559.50"></text></g><g><title>core::ops::function::FnOnce::call_once (3 samples, 0.13%)</title><rect x="2.6966%" y="533" width="0.1348%" height="15" fill="rgb(228,143,12)" fg:x="60" fg:w="3"/><text x="2.9466%" y="543.50"></text></g><g><title>tftp::main (3 samples, 0.13%)</title><rect x="2.6966%" y="517" width="0.1348%" height="15" fill="rgb(249,149,8)" fg:x="60" fg:w="3"/><text x="2.9466%" y="527.50"></text></g><g><title>tftp::start_receive (3 samples, 0.13%)</title><rect x="2.6966%" y="501" width="0.1348%" height="15" fill="rgb(243,35,44)" fg:x="60" fg:w="3"/><text x="2.9466%" y="511.50"></text></g><g><title>tftp::client::client::receive_file (3 samples, 0.13%)</title><rect x="2.6966%" y="485" width="0.1348%" height="15" fill="rgb(246,89,9)" fg:x="60" fg:w="3"/><text x="2.9466%" y="495.50"></text></g><g><title>&lt;tftp::socket::EncryptionBoundSocket&lt;S&gt; as tftp::socket::Socket&gt;::recv_from (3 samples, 0.13%)</title><rect x="2.6966%" y="469" width="0.1348%" height="15" fill="rgb(233,213,13)" fg:x="60" fg:w="3"/><text x="2.9466%" y="479.50"></text></g><g><title>tftp::encryption::Encryptor::decrypt (3 samples, 0.13%)</title><rect x="2.6966%" y="453" width="0.1348%" height="15" fill="rgb(233,141,41)" fg:x="60" fg:w="3"/><text x="2.9466%" y="463.50"></text></g><g><title>aead::AeadInPlace::decrypt_in_place (3 samples, 0.13%)</title><rect x="2.6966%" y="437" width="0.1348%" height="15" fill="rgb(239,167,4)" fg:x="60" fg:w="3"/><text x="2.9466%" y="447.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (3 samples, 0.13%)</title><rect x="2.6966%" y="421" width="0.1348%" height="15" fill="rgb(209,217,16)" fg:x="60" fg:w="3"/><text x="2.9466%" y="431.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (1 samples, 0.04%)</title><rect x="2.7865%" y="405" width="0.0449%" height="15" fill="rgb(219,88,35)" fg:x="62" fg:w="1"/><text x="3.0365%" y="415.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.04%)</title><rect x="2.7865%" y="389" width="0.0449%" height="15" fill="rgb(220,193,23)" fg:x="62" fg:w="1"/><text x="3.0365%" y="399.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.04%)</title><rect x="2.7865%" y="373" width="0.0449%" height="15" fill="rgb(230,90,52)" fg:x="62" fg:w="1"/><text x="3.0365%" y="383.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::iter_position (1 samples, 0.04%)</title><rect x="2.7865%" y="357" width="0.0449%" height="15" fill="rgb(252,106,19)" fg:x="62" fg:w="1"/><text x="3.0365%" y="367.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (1 samples, 0.04%)</title><rect x="2.7865%" y="341" width="0.0449%" height="15" fill="rgb(206,74,20)" fg:x="62" fg:w="1"/><text x="3.0365%" y="351.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="2.7865%" y="325" width="0.0449%" height="15" fill="rgb(230,138,44)" fg:x="62" fg:w="1"/><text x="3.0365%" y="335.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_add_epi32 (61 samples, 2.74%)</title><rect x="10.4270%" y="261" width="2.7416%" height="15" fill="rgb(235,182,43)" fg:x="232" fg:w="61"/><text x="10.6770%" y="271.50">co..</text></g><g><title>core::core_arch::x86::m128iExt::as_i32x4 (10 samples, 0.45%)</title><rect x="12.7191%" y="245" width="0.4494%" height="15" fill="rgb(242,16,51)" fg:x="283" fg:w="10"/><text x="12.9691%" y="255.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_slli_epi32 (66 samples, 2.97%)</title><rect x="13.1685%" y="261" width="2.9663%" height="15" fill="rgb(248,9,4)" fg:x="293" fg:w="66"/><text x="13.4185%" y="271.50">cor..</text></g><g><title>core::core_arch::x86::m128iExt::as_i32x4 (21 samples, 0.94%)</title><rect x="15.1910%" y="245" width="0.9438%" height="15" fill="rgb(210,31,22)" fg:x="338" fg:w="21"/><text x="15.4410%" y="255.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_srli_epi32 (14 samples, 0.63%)</title><rect x="16.1348%" y="261" width="0.6292%" height="15" fill="rgb(239,54,39)" fg:x="359" fg:w="14"/><text x="16.3848%" y="271.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i32x4 (7 samples, 0.31%)</title><rect x="16.4494%" y="245" width="0.3146%" height="15" fill="rgb(230,99,41)" fg:x="366" fg:w="7"/><text x="16.6994%" y="255.50"></text></g><g><title>&lt;tftp::socket::EncryptionBoundSocket&lt;S&gt; as tftp::socket::Socket&gt;::recv_from (360 samples, 16.18%)</title><rect x="2.8315%" y="533" width="16.1798%" height="15" fill="rgb(253,106,12)" fg:x="63" fg:w="360"/><text x="3.0815%" y="543.50">&lt;tftp::socket::Encryption..</text></g><g><title>tftp::encryption::Encryptor::decrypt (360 samples, 16.18%)</title><rect x="2.8315%" y="517" width="16.1798%" height="15" fill="rgb(213,46,41)" fg:x="63" fg:w="360"/><text x="3.0815%" y="527.50">tftp::encryption::Encrypt..</text></g><g><title>aead::AeadInPlace::decrypt_in_place (360 samples, 16.18%)</title><rect x="2.8315%" y="501" width="16.1798%" height="15" fill="rgb(215,133,35)" fg:x="63" fg:w="360"/><text x="3.0815%" y="511.50">aead::AeadInPlace::decryp..</text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (360 samples, 16.18%)</title><rect x="2.8315%" y="485" width="16.1798%" height="15" fill="rgb(213,28,5)" fg:x="63" fg:w="360"/><text x="3.0815%" y="495.50">&lt;chacha20poly1305::ChaCha..</text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::decrypt_in_place_detached (360 samples, 16.18%)</title><rect x="2.8315%" y="469" width="16.1798%" height="15" fill="rgb(215,77,49)" fg:x="63" fg:w="360"/><text x="3.0815%" y="479.50">chacha20poly1305::cipher:..</text></g><g><title>cipher::stream::StreamCipher::apply_keystream (360 samples, 16.18%)</title><rect x="2.8315%" y="453" width="16.1798%" height="15" fill="rgb(248,100,22)" fg:x="63" fg:w="360"/><text x="3.0815%" y="463.50">cipher::stream::StreamCip..</text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (360 samples, 16.18%)</title><rect x="2.8315%" y="437" width="16.1798%" height="15" fill="rgb(208,67,9)" fg:x="63" fg:w="360"/><text x="3.0815%" y="447.50">cipher::stream::StreamCip..</text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (360 samples, 16.18%)</title><rect x="2.8315%" y="421" width="16.1798%" height="15" fill="rgb(219,133,21)" fg:x="63" fg:w="360"/><text x="3.0815%" y="431.50">&lt;cipher::stream_wrapper::..</text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (360 samples, 16.18%)</title><rect x="2.8315%" y="405" width="16.1798%" height="15" fill="rgb(246,46,29)" fg:x="63" fg:w="360"/><text x="3.0815%" y="415.50">cipher::stream_core::Stre..</text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (360 samples, 16.18%)</title><rect x="2.8315%" y="389" width="16.1798%" height="15" fill="rgb(246,185,52)" fg:x="63" fg:w="360"/><text x="3.0815%" y="399.50">&lt;chacha20::xchacha::XChaC..</text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (360 samples, 16.18%)</title><rect x="2.8315%" y="373" width="16.1798%" height="15" fill="rgb(252,136,11)" fg:x="63" fg:w="360"/><text x="3.0815%" y="383.50">&lt;chacha20::ChaChaCore&lt;R&gt; ..</text></g><g><title>chacha20::backends::sse2::inner (360 samples, 16.18%)</title><rect x="2.8315%" y="357" width="16.1798%" height="15" fill="rgb(219,138,53)" fg:x="63" fg:w="360"/><text x="3.0815%" y="367.50">chacha20::backends::sse2:..</text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (360 samples, 16.18%)</title><rect x="2.8315%" y="341" width="16.1798%" height="15" fill="rgb(211,51,23)" fg:x="63" fg:w="360"/><text x="3.0815%" y="351.50">&lt;cipher::stream_core::App..</text></g><g><title>&lt;chacha20::backends::sse2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (360 samples, 16.18%)</title><rect x="2.8315%" y="325" width="16.1798%" height="15" fill="rgb(247,221,28)" fg:x="63" fg:w="360"/><text x="3.0815%" y="335.50">&lt;chacha20::backends::sse2..</text></g><g><title>chacha20::backends::sse2::rounds (360 samples, 16.18%)</title><rect x="2.8315%" y="309" width="16.1798%" height="15" fill="rgb(251,222,45)" fg:x="63" fg:w="360"/><text x="3.0815%" y="319.50">chacha20::backends::sse2:..</text></g><g><title>chacha20::backends::sse2::double_quarter_round (360 samples, 16.18%)</title><rect x="2.8315%" y="293" width="16.1798%" height="15" fill="rgb(217,162,53)" fg:x="63" fg:w="360"/><text x="3.0815%" y="303.50">chacha20::backends::sse2:..</text></g><g><title>chacha20::backends::sse2::add_xor_rot (360 samples, 16.18%)</title><rect x="2.8315%" y="277" width="16.1798%" height="15" fill="rgb(229,93,14)" fg:x="63" fg:w="360"/><text x="3.0815%" y="287.50">chacha20::backends::sse2:..</text></g><g><title>core::core_arch::x86::sse2::_mm_xor_si128 (50 samples, 2.25%)</title><rect x="16.7640%" y="261" width="2.2472%" height="15" fill="rgb(209,67,49)" fg:x="373" fg:w="50"/><text x="17.0140%" y="271.50">c..</text></g><g><title>&lt;poly1305::Poly1305 as crypto_common::KeyInit&gt;::new (1 samples, 0.04%)</title><rect x="19.0112%" y="437" width="0.0449%" height="15" fill="rgb(213,87,29)" fg:x="423" fg:w="1"/><text x="19.2612%" y="447.50"></text></g><g><title>poly1305::backend::autodetect::State::new (1 samples, 0.04%)</title><rect x="19.0112%" y="421" width="0.0449%" height="15" fill="rgb(205,151,52)" fg:x="423" fg:w="1"/><text x="19.2612%" y="431.50"></text></g><g><title>poly1305::backend::soft::State::new (1 samples, 0.04%)</title><rect x="19.0112%" y="405" width="0.0449%" height="15" fill="rgb(253,215,39)" fg:x="423" fg:w="1"/><text x="19.2612%" y="415.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (1 samples, 0.04%)</title><rect x="19.0112%" y="389" width="0.0449%" height="15" fill="rgb(221,220,41)" fg:x="423" fg:w="1"/><text x="19.2612%" y="399.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (1 samples, 0.04%)</title><rect x="19.0112%" y="373" width="0.0449%" height="15" fill="rgb(218,133,21)" fg:x="423" fg:w="1"/><text x="19.2612%" y="383.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.04%)</title><rect x="19.0112%" y="357" width="0.0449%" height="15" fill="rgb(221,193,43)" fg:x="423" fg:w="1"/><text x="19.2612%" y="367.50"></text></g><g><title>chacha20::backends::sse2::cols_to_rows (1 samples, 0.04%)</title><rect x="19.0562%" y="261" width="0.0449%" height="15" fill="rgb(240,128,52)" fg:x="424" fg:w="1"/><text x="19.3062%" y="271.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_shuffle_epi32 (1 samples, 0.04%)</title><rect x="19.0562%" y="245" width="0.0449%" height="15" fill="rgb(253,114,12)" fg:x="424" fg:w="1"/><text x="19.3062%" y="255.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i32x4 (1 samples, 0.04%)</title><rect x="19.0562%" y="229" width="0.0449%" height="15" fill="rgb(215,223,47)" fg:x="424" fg:w="1"/><text x="19.3062%" y="239.50"></text></g><g><title>tftp::client::client::receive_file (364 samples, 16.36%)</title><rect x="2.8315%" y="549" width="16.3596%" height="15" fill="rgb(248,225,23)" fg:x="63" fg:w="364"/><text x="3.0815%" y="559.50">tftp::client::client::rec..</text></g><g><title>tftp::client::client::write_block (4 samples, 0.18%)</title><rect x="19.0112%" y="533" width="0.1798%" height="15" fill="rgb(250,108,0)" fg:x="423" fg:w="4"/><text x="19.2612%" y="543.50"></text></g><g><title>&lt;tftp::socket::EncryptionBoundSocket&lt;S&gt; as tftp::socket::Socket&gt;::send_to (4 samples, 0.18%)</title><rect x="19.0112%" y="517" width="0.1798%" height="15" fill="rgb(228,208,7)" fg:x="423" fg:w="4"/><text x="19.2612%" y="527.50"></text></g><g><title>tftp::encryption::Encryptor::encrypt (4 samples, 0.18%)</title><rect x="19.0112%" y="501" width="0.1798%" height="15" fill="rgb(244,45,10)" fg:x="423" fg:w="4"/><text x="19.2612%" y="511.50"></text></g><g><title>aead::AeadInPlace::encrypt_in_place (4 samples, 0.18%)</title><rect x="19.0112%" y="485" width="0.1798%" height="15" fill="rgb(207,125,25)" fg:x="423" fg:w="4"/><text x="19.2612%" y="495.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::encrypt_in_place_detached (4 samples, 0.18%)</title><rect x="19.0112%" y="469" width="0.1798%" height="15" fill="rgb(210,195,18)" fg:x="423" fg:w="4"/><text x="19.2612%" y="479.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (4 samples, 0.18%)</title><rect x="19.0112%" y="453" width="0.1798%" height="15" fill="rgb(249,80,12)" fg:x="423" fg:w="4"/><text x="19.2612%" y="463.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (3 samples, 0.13%)</title><rect x="19.0562%" y="437" width="0.1348%" height="15" fill="rgb(221,65,9)" fg:x="424" fg:w="3"/><text x="19.3062%" y="447.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (3 samples, 0.13%)</title><rect x="19.0562%" y="421" width="0.1348%" height="15" fill="rgb(235,49,36)" fg:x="424" fg:w="3"/><text x="19.3062%" y="431.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (3 samples, 0.13%)</title><rect x="19.0562%" y="405" width="0.1348%" height="15" fill="rgb(225,32,20)" fg:x="424" fg:w="3"/><text x="19.3062%" y="415.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::write_keystream_block (3 samples, 0.13%)</title><rect x="19.0562%" y="389" width="0.1348%" height="15" fill="rgb(215,141,46)" fg:x="424" fg:w="3"/><text x="19.3062%" y="399.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (3 samples, 0.13%)</title><rect x="19.0562%" y="373" width="0.1348%" height="15" fill="rgb(250,160,47)" fg:x="424" fg:w="3"/><text x="19.3062%" y="383.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (3 samples, 0.13%)</title><rect x="19.0562%" y="357" width="0.1348%" height="15" fill="rgb(216,222,40)" fg:x="424" fg:w="3"/><text x="19.3062%" y="367.50"></text></g><g><title>chacha20::backends::sse2::inner (3 samples, 0.13%)</title><rect x="19.0562%" y="341" width="0.1348%" height="15" fill="rgb(234,217,39)" fg:x="424" fg:w="3"/><text x="19.3062%" y="351.50"></text></g><g><title>&lt;cipher::stream_core::WriteBlockCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (3 samples, 0.13%)</title><rect x="19.0562%" y="325" width="0.1348%" height="15" fill="rgb(207,178,40)" fg:x="424" fg:w="3"/><text x="19.3062%" y="335.50"></text></g><g><title>&lt;chacha20::backends::sse2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (3 samples, 0.13%)</title><rect x="19.0562%" y="309" width="0.1348%" height="15" fill="rgb(221,136,13)" fg:x="424" fg:w="3"/><text x="19.3062%" y="319.50"></text></g><g><title>chacha20::backends::sse2::rounds (3 samples, 0.13%)</title><rect x="19.0562%" y="293" width="0.1348%" height="15" fill="rgb(249,199,10)" fg:x="424" fg:w="3"/><text x="19.3062%" y="303.50"></text></g><g><title>chacha20::backends::sse2::double_quarter_round (3 samples, 0.13%)</title><rect x="19.0562%" y="277" width="0.1348%" height="15" fill="rgb(249,222,13)" fg:x="424" fg:w="3"/><text x="19.3062%" y="287.50"></text></g><g><title>chacha20::backends::sse2::rows_to_cols (2 samples, 0.09%)</title><rect x="19.1011%" y="261" width="0.0899%" height="15" fill="rgb(244,185,38)" fg:x="425" fg:w="2"/><text x="19.3511%" y="271.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_shuffle_epi32 (1 samples, 0.04%)</title><rect x="19.1461%" y="245" width="0.0449%" height="15" fill="rgb(236,202,9)" fg:x="426" fg:w="1"/><text x="19.3961%" y="255.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (1 samples, 0.04%)</title><rect x="19.1910%" y="405" width="0.0449%" height="15" fill="rgb(250,229,37)" fg:x="427" fg:w="1"/><text x="19.4410%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (1 samples, 0.04%)</title><rect x="19.1910%" y="389" width="0.0449%" height="15" fill="rgb(206,174,23)" fg:x="427" fg:w="1"/><text x="19.4410%" y="399.50"></text></g><g><title>core::iter::adapters::zip::Zip&lt;A,B&gt;::new (1 samples, 0.04%)</title><rect x="19.1910%" y="373" width="0.0449%" height="15" fill="rgb(211,33,43)" fg:x="427" fg:w="1"/><text x="19.4410%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (1 samples, 0.04%)</title><rect x="19.1910%" y="357" width="0.0449%" height="15" fill="rgb(245,58,50)" fg:x="427" fg:w="1"/><text x="19.4410%" y="367.50"></text></g><g><title>core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size (1 samples, 0.04%)</title><rect x="19.1910%" y="341" width="0.0449%" height="15" fill="rgb(244,68,36)" fg:x="427" fg:w="1"/><text x="19.4410%" y="351.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.04%)</title><rect x="19.1910%" y="325" width="0.0449%" height="15" fill="rgb(232,229,15)" fg:x="427" fg:w="1"/><text x="19.4410%" y="335.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.04%)</title><rect x="19.4157%" y="389" width="0.0449%" height="15" fill="rgb(254,30,23)" fg:x="432" fg:w="1"/><text x="19.6657%" y="399.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (1 samples, 0.04%)</title><rect x="19.4607%" y="389" width="0.0449%" height="15" fill="rgb(235,160,14)" fg:x="433" fg:w="1"/><text x="19.7107%" y="399.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (1 samples, 0.04%)</title><rect x="19.4607%" y="373" width="0.0449%" height="15" fill="rgb(212,155,44)" fg:x="433" fg:w="1"/><text x="19.7107%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.18%)</title><rect x="19.5056%" y="389" width="0.1798%" height="15" fill="rgb(226,2,50)" fg:x="434" fg:w="4"/><text x="19.7556%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (4 samples, 0.18%)</title><rect x="19.5056%" y="373" width="0.1798%" height="15" fill="rgb(234,177,6)" fg:x="434" fg:w="4"/><text x="19.7556%" y="383.50"></text></g><g><title>&lt;core::slice::iter::ChunksExactMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (2 samples, 0.09%)</title><rect x="19.5955%" y="357" width="0.0899%" height="15" fill="rgb(217,24,9)" fg:x="436" fg:w="2"/><text x="19.8455%" y="367.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (1 samples, 0.04%)</title><rect x="19.6404%" y="341" width="0.0449%" height="15" fill="rgb(220,13,46)" fg:x="437" fg:w="1"/><text x="19.8904%" y="351.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (1 samples, 0.04%)</title><rect x="19.6404%" y="325" width="0.0449%" height="15" fill="rgb(239,221,27)" fg:x="437" fg:w="1"/><text x="19.8904%" y="335.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (1 samples, 0.04%)</title><rect x="19.6404%" y="309" width="0.0449%" height="15" fill="rgb(222,198,25)" fg:x="437" fg:w="1"/><text x="19.8904%" y="319.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.04%)</title><rect x="19.6854%" y="389" width="0.0449%" height="15" fill="rgb(211,99,13)" fg:x="438" fg:w="1"/><text x="19.9354%" y="399.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (1 samples, 0.04%)</title><rect x="19.6854%" y="373" width="0.0449%" height="15" fill="rgb(232,111,31)" fg:x="438" fg:w="1"/><text x="19.9354%" y="383.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (5 samples, 0.22%)</title><rect x="20.8539%" y="373" width="0.2247%" height="15" fill="rgb(245,82,37)" fg:x="464" fg:w="5"/><text x="21.1039%" y="383.50"></text></g><g><title>chacha20::xchacha::quarter_round (31 samples, 1.39%)</title><rect x="19.7303%" y="389" width="1.3933%" height="15" fill="rgb(227,149,46)" fg:x="439" fg:w="31"/><text x="19.9803%" y="399.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.04%)</title><rect x="21.0787%" y="373" width="0.0449%" height="15" fill="rgb(218,36,50)" fg:x="469" fg:w="1"/><text x="21.3287%" y="383.50"></text></g><g><title>core::array::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T: N]&gt;::index_mut (1 samples, 0.04%)</title><rect x="21.1236%" y="389" width="0.0449%" height="15" fill="rgb(226,80,48)" fg:x="470" fg:w="1"/><text x="21.3736%" y="399.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.04%)</title><rect x="21.1236%" y="373" width="0.0449%" height="15" fill="rgb(238,224,15)" fg:x="470" fg:w="1"/><text x="21.3736%" y="383.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.09%)</title><rect x="21.1685%" y="389" width="0.0899%" height="15" fill="rgb(241,136,10)" fg:x="471" fg:w="2"/><text x="21.4185%" y="399.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.09%)</title><rect x="21.1685%" y="373" width="0.0899%" height="15" fill="rgb(208,32,45)" fg:x="471" fg:w="2"/><text x="21.4185%" y="383.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.04%)</title><rect x="21.2135%" y="357" width="0.0449%" height="15" fill="rgb(207,135,9)" fg:x="472" fg:w="1"/><text x="21.4635%" y="367.50"></text></g><g><title>[libc.so.6] (2 samples, 0.09%)</title><rect x="21.3483%" y="341" width="0.0899%" height="15" fill="rgb(206,86,44)" fg:x="475" fg:w="2"/><text x="21.5983%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (5 samples, 0.22%)</title><rect x="21.2584%" y="389" width="0.2247%" height="15" fill="rgb(245,177,15)" fg:x="473" fg:w="5"/><text x="21.5084%" y="399.50"></text></g><g><title>core::iter::adapters::zip::Zip&lt;A,B&gt;::new (5 samples, 0.22%)</title><rect x="21.2584%" y="373" width="0.2247%" height="15" fill="rgb(206,64,50)" fg:x="473" fg:w="5"/><text x="21.5084%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (3 samples, 0.13%)</title><rect x="21.3483%" y="357" width="0.1348%" height="15" fill="rgb(234,36,40)" fg:x="475" fg:w="3"/><text x="21.5983%" y="367.50"></text></g><g><title>core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size (1 samples, 0.04%)</title><rect x="21.4382%" y="341" width="0.0449%" height="15" fill="rgb(213,64,8)" fg:x="477" fg:w="1"/><text x="21.6882%" y="351.50"></text></g><g><title>&lt;core::slice::iter::ChunksExactMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.04%)</title><rect x="21.4382%" y="325" width="0.0449%" height="15" fill="rgb(210,75,36)" fg:x="477" fg:w="1"/><text x="21.6882%" y="335.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_le_bytes (6 samples, 0.27%)</title><rect x="21.4831%" y="389" width="0.2697%" height="15" fill="rgb(229,88,21)" fg:x="478" fg:w="6"/><text x="21.7331%" y="399.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_ne_bytes (3 samples, 0.13%)</title><rect x="21.6180%" y="373" width="0.1348%" height="15" fill="rgb(252,204,47)" fg:x="481" fg:w="3"/><text x="21.8680%" y="383.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (1 samples, 0.04%)</title><rect x="21.7528%" y="389" width="0.0449%" height="15" fill="rgb(208,77,27)" fg:x="484" fg:w="1"/><text x="22.0028%" y="399.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::chunks_exact (1 samples, 0.04%)</title><rect x="21.7978%" y="389" width="0.0449%" height="15" fill="rgb(221,76,26)" fg:x="485" fg:w="1"/><text x="22.0478%" y="399.50"></text></g><g><title>core::slice::iter::ChunksExact&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="21.7978%" y="373" width="0.0449%" height="15" fill="rgb(225,139,18)" fg:x="485" fg:w="1"/><text x="22.0478%" y="383.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.04%)</title><rect x="21.8427%" y="389" width="0.0449%" height="15" fill="rgb(230,137,11)" fg:x="486" fg:w="1"/><text x="22.0927%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (9 samples, 0.40%)</title><rect x="21.9326%" y="309" width="0.4045%" height="15" fill="rgb(212,28,1)" fg:x="488" fg:w="9"/><text x="22.1826%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (8 samples, 0.36%)</title><rect x="21.9775%" y="293" width="0.3596%" height="15" fill="rgb(248,164,17)" fg:x="489" fg:w="8"/><text x="22.2275%" y="303.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (6 samples, 0.27%)</title><rect x="22.0674%" y="277" width="0.2697%" height="15" fill="rgb(222,171,42)" fg:x="491" fg:w="6"/><text x="22.3174%" y="287.50"></text></g><g><title>core::ptr::write (1 samples, 0.04%)</title><rect x="22.2921%" y="261" width="0.0449%" height="15" fill="rgb(243,84,45)" fg:x="496" fg:w="1"/><text x="22.5421%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (15 samples, 0.67%)</title><rect x="21.8876%" y="357" width="0.6742%" height="15" fill="rgb(252,49,23)" fg:x="487" fg:w="15"/><text x="22.1376%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15 samples, 0.67%)</title><rect x="21.8876%" y="341" width="0.6742%" height="15" fill="rgb(215,19,7)" fg:x="487" fg:w="15"/><text x="22.1376%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (14 samples, 0.63%)</title><rect x="21.9326%" y="325" width="0.6292%" height="15" fill="rgb(238,81,41)" fg:x="488" fg:w="14"/><text x="22.1826%" y="335.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.22%)</title><rect x="22.3371%" y="309" width="0.2247%" height="15" fill="rgb(210,199,37)" fg:x="497" fg:w="5"/><text x="22.5871%" y="319.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="22.5169%" y="293" width="0.0449%" height="15" fill="rgb(244,192,49)" fg:x="501" fg:w="1"/><text x="22.7669%" y="303.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (1 samples, 0.04%)</title><rect x="22.5618%" y="357" width="0.0449%" height="15" fill="rgb(226,211,11)" fg:x="502" fg:w="1"/><text x="22.8118%" y="367.50"></text></g><g><title>core::ptr::read (1 samples, 0.04%)</title><rect x="22.5618%" y="341" width="0.0449%" height="15" fill="rgb(236,162,54)" fg:x="502" fg:w="1"/><text x="22.8118%" y="351.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::iter_position (2 samples, 0.09%)</title><rect x="22.6067%" y="357" width="0.0899%" height="15" fill="rgb(220,229,9)" fg:x="503" fg:w="2"/><text x="22.8567%" y="367.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (19 samples, 0.85%)</title><rect x="21.8876%" y="389" width="0.8539%" height="15" fill="rgb(250,87,22)" fg:x="487" fg:w="19"/><text x="22.1376%" y="399.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (19 samples, 0.85%)</title><rect x="21.8876%" y="373" width="0.8539%" height="15" fill="rgb(239,43,17)" fg:x="487" fg:w="19"/><text x="22.1376%" y="383.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::new (1 samples, 0.04%)</title><rect x="22.6966%" y="357" width="0.0449%" height="15" fill="rgb(231,177,25)" fg:x="505" fg:w="1"/><text x="22.9466%" y="367.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as crypto_common::KeyIvInit&gt;::new (80 samples, 3.60%)</title><rect x="19.1910%" y="437" width="3.5955%" height="15" fill="rgb(219,179,1)" fg:x="427" fg:w="80"/><text x="19.4410%" y="447.50">&lt;cip..</text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (80 samples, 3.60%)</title><rect x="19.1910%" y="421" width="3.5955%" height="15" fill="rgb(238,219,53)" fg:x="427" fg:w="80"/><text x="19.4410%" y="431.50">&lt;cha..</text></g><g><title>chacha20::xchacha::hchacha (79 samples, 3.55%)</title><rect x="19.2360%" y="405" width="3.5506%" height="15" fill="rgb(232,167,36)" fg:x="428" fg:w="79"/><text x="19.4860%" y="415.50">chac..</text></g><g><title>memcpy (1 samples, 0.04%)</title><rect x="22.7416%" y="389" width="0.0449%" height="15" fill="rgb(244,19,51)" fg:x="506" fg:w="1"/><text x="22.9916%" y="399.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::authenticate_lengths (2 samples, 0.09%)</title><rect x="22.7865%" y="421" width="0.0899%" height="15" fill="rgb(224,6,22)" fg:x="507" fg:w="2"/><text x="23.0365%" y="431.50"></text></g><g><title>universal_hash::UniversalHash::update (2 samples, 0.09%)</title><rect x="22.7865%" y="405" width="0.0899%" height="15" fill="rgb(224,145,5)" fg:x="507" fg:w="2"/><text x="23.0365%" y="415.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (2 samples, 0.09%)</title><rect x="22.7865%" y="389" width="0.0899%" height="15" fill="rgb(234,130,49)" fg:x="507" fg:w="2"/><text x="23.0365%" y="399.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (2 samples, 0.09%)</title><rect x="22.7865%" y="373" width="0.0899%" height="15" fill="rgb(254,6,2)" fg:x="507" fg:w="2"/><text x="23.0365%" y="383.50"></text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (2 samples, 0.09%)</title><rect x="22.7865%" y="357" width="0.0899%" height="15" fill="rgb(208,96,46)" fg:x="507" fg:w="2"/><text x="23.0365%" y="367.50"></text></g><g><title>&lt;poly1305::backend::soft::State as universal_hash::UhfBackend&gt;::proc_block (2 samples, 0.09%)</title><rect x="22.7865%" y="341" width="0.0899%" height="15" fill="rgb(239,3,39)" fg:x="507" fg:w="2"/><text x="23.0365%" y="351.50"></text></g><g><title>poly1305::backend::soft::State::compute_block (2 samples, 0.09%)</title><rect x="22.7865%" y="325" width="0.0899%" height="15" fill="rgb(233,210,1)" fg:x="507" fg:w="2"/><text x="23.0365%" y="335.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.04%)</title><rect x="22.8315%" y="309" width="0.0449%" height="15" fill="rgb(244,137,37)" fg:x="508" fg:w="1"/><text x="23.0815%" y="319.50"></text></g><g><title>chacha20::backends::sse2::cols_to_rows (1 samples, 0.04%)</title><rect x="22.9663%" y="245" width="0.0449%" height="15" fill="rgb(240,136,2)" fg:x="511" fg:w="1"/><text x="23.2163%" y="255.50"></text></g><g><title>&lt;cipher::stream_core::WriteBlockCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (4 samples, 0.18%)</title><rect x="22.8764%" y="309" width="0.1798%" height="15" fill="rgb(239,18,37)" fg:x="509" fg:w="4"/><text x="23.1264%" y="319.50"></text></g><g><title>&lt;chacha20::backends::sse2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (4 samples, 0.18%)</title><rect x="22.8764%" y="293" width="0.1798%" height="15" fill="rgb(218,185,22)" fg:x="509" fg:w="4"/><text x="23.1264%" y="303.50"></text></g><g><title>chacha20::backends::sse2::rounds (3 samples, 0.13%)</title><rect x="22.9213%" y="277" width="0.1348%" height="15" fill="rgb(225,218,4)" fg:x="510" fg:w="3"/><text x="23.1713%" y="287.50"></text></g><g><title>chacha20::backends::sse2::double_quarter_round (2 samples, 0.09%)</title><rect x="22.9663%" y="261" width="0.0899%" height="15" fill="rgb(230,182,32)" fg:x="511" fg:w="2"/><text x="23.2163%" y="271.50"></text></g><g><title>chacha20::backends::sse2::rows_to_cols (1 samples, 0.04%)</title><rect x="23.0112%" y="245" width="0.0449%" height="15" fill="rgb(242,56,43)" fg:x="512" fg:w="1"/><text x="23.2612%" y="255.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::write_keystream_block (5 samples, 0.22%)</title><rect x="22.8764%" y="373" width="0.2247%" height="15" fill="rgb(233,99,24)" fg:x="509" fg:w="5"/><text x="23.1264%" y="383.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (5 samples, 0.22%)</title><rect x="22.8764%" y="357" width="0.2247%" height="15" fill="rgb(234,209,42)" fg:x="509" fg:w="5"/><text x="23.1264%" y="367.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (5 samples, 0.22%)</title><rect x="22.8764%" y="341" width="0.2247%" height="15" fill="rgb(227,7,12)" fg:x="509" fg:w="5"/><text x="23.1264%" y="351.50"></text></g><g><title>chacha20::backends::sse2::inner (5 samples, 0.22%)</title><rect x="22.8764%" y="325" width="0.2247%" height="15" fill="rgb(245,203,43)" fg:x="509" fg:w="5"/><text x="23.1264%" y="335.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.04%)</title><rect x="23.0562%" y="309" width="0.0449%" height="15" fill="rgb(238,205,33)" fg:x="513" fg:w="1"/><text x="23.3062%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.04%)</title><rect x="23.3258%" y="325" width="0.0449%" height="15" fill="rgb(231,56,7)" fg:x="519" fg:w="1"/><text x="23.5758%" y="335.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (5 samples, 0.22%)</title><rect x="23.2360%" y="357" width="0.2247%" height="15" fill="rgb(244,186,29)" fg:x="517" fg:w="5"/><text x="23.4860%" y="367.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4 samples, 0.18%)</title><rect x="23.2809%" y="341" width="0.1798%" height="15" fill="rgb(234,111,31)" fg:x="518" fg:w="4"/><text x="23.5309%" y="351.50"></text></g><g><title>core::mem::replace (2 samples, 0.09%)</title><rect x="23.3708%" y="325" width="0.0899%" height="15" fill="rgb(241,149,10)" fg:x="520" fg:w="2"/><text x="23.6208%" y="335.50"></text></g><g><title>core::ptr::read (1 samples, 0.04%)</title><rect x="23.4157%" y="309" width="0.0449%" height="15" fill="rgb(249,206,44)" fg:x="521" fg:w="1"/><text x="23.6657%" y="319.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (14 samples, 0.63%)</title><rect x="22.8764%" y="421" width="0.6292%" height="15" fill="rgb(251,153,30)" fg:x="509" fg:w="14"/><text x="23.1264%" y="431.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (14 samples, 0.63%)</title><rect x="22.8764%" y="405" width="0.6292%" height="15" fill="rgb(239,152,38)" fg:x="509" fg:w="14"/><text x="23.1264%" y="415.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (14 samples, 0.63%)</title><rect x="22.8764%" y="389" width="0.6292%" height="15" fill="rgb(249,139,47)" fg:x="509" fg:w="14"/><text x="23.1264%" y="399.50"></text></g><g><title>inout::inout_buf::InOutBuf&lt;u8&gt;::xor_in2out (9 samples, 0.40%)</title><rect x="23.1011%" y="373" width="0.4045%" height="15" fill="rgb(244,64,35)" fg:x="514" fg:w="9"/><text x="23.3511%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.04%)</title><rect x="23.4607%" y="357" width="0.0449%" height="15" fill="rgb(216,46,15)" fg:x="522" fg:w="1"/><text x="23.7107%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.04%)</title><rect x="23.4607%" y="341" width="0.0449%" height="15" fill="rgb(250,74,19)" fg:x="522" fg:w="1"/><text x="23.7107%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (1 samples, 0.04%)</title><rect x="23.5955%" y="325" width="0.0449%" height="15" fill="rgb(249,42,33)" fg:x="525" fg:w="1"/><text x="23.8455%" y="335.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.18%)</title><rect x="23.5056%" y="341" width="0.1798%" height="15" fill="rgb(242,149,17)" fg:x="523" fg:w="4"/><text x="23.7556%" y="351.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.04%)</title><rect x="23.6404%" y="325" width="0.0449%" height="15" fill="rgb(244,29,21)" fg:x="526" fg:w="1"/><text x="23.8904%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.04%)</title><rect x="23.6404%" y="309" width="0.0449%" height="15" fill="rgb(220,130,37)" fg:x="526" fg:w="1"/><text x="23.8904%" y="319.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.04%)</title><rect x="23.6404%" y="293" width="0.0449%" height="15" fill="rgb(211,67,2)" fg:x="526" fg:w="1"/><text x="23.8904%" y="303.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for &amp;[T: N]&gt;::try_from (16 samples, 0.72%)</title><rect x="29.8427%" y="277" width="0.7191%" height="15" fill="rgb(235,68,52)" fg:x="664" fg:w="16"/><text x="30.0927%" y="287.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (114 samples, 5.12%)</title><rect x="27.9101%" y="309" width="5.1236%" height="15" fill="rgb(246,142,3)" fg:x="621" fg:w="114"/><text x="28.1601%" y="319.50">&lt;T as ..</text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (96 samples, 4.31%)</title><rect x="28.7191%" y="293" width="4.3146%" height="15" fill="rgb(241,25,7)" fg:x="639" fg:w="96"/><text x="28.9691%" y="303.50">core:..</text></g><g><title>core::result::Result&lt;T,E&gt;::map (55 samples, 2.47%)</title><rect x="30.5618%" y="277" width="2.4719%" height="15" fill="rgb(242,119,39)" fg:x="680" fg:w="55"/><text x="30.8118%" y="287.50">co..</text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from::{{closure}} (13 samples, 0.58%)</title><rect x="32.4494%" y="261" width="0.5843%" height="15" fill="rgb(241,98,45)" fg:x="722" fg:w="13"/><text x="32.6994%" y="271.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::Deref&gt;::deref (7 samples, 0.31%)</title><rect x="33.0337%" y="309" width="0.3146%" height="15" fill="rgb(254,28,30)" fg:x="735" fg:w="7"/><text x="33.2837%" y="319.50"></text></g><g><title>core::slice::raw::from_raw_parts (7 samples, 0.31%)</title><rect x="33.0337%" y="293" width="0.3146%" height="15" fill="rgb(241,142,54)" fg:x="735" fg:w="7"/><text x="33.2837%" y="303.50"></text></g><g><title>core::ptr::slice_from_raw_parts (3 samples, 0.13%)</title><rect x="33.2135%" y="277" width="0.1348%" height="15" fill="rgb(222,85,15)" fg:x="739" fg:w="3"/><text x="33.4635%" y="287.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (3 samples, 0.13%)</title><rect x="33.2135%" y="261" width="0.1348%" height="15" fill="rgb(210,85,47)" fg:x="739" fg:w="3"/><text x="33.4635%" y="271.50"></text></g><g><title>core::convert::num::&lt;impl core::convert::From&lt;u32&gt; for u64&gt;::from (4 samples, 0.18%)</title><rect x="33.3483%" y="309" width="0.1798%" height="15" fill="rgb(224,206,25)" fg:x="742" fg:w="4"/><text x="33.5983%" y="319.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_le_bytes (20 samples, 0.90%)</title><rect x="33.5281%" y="309" width="0.8989%" height="15" fill="rgb(243,201,19)" fg:x="746" fg:w="20"/><text x="33.7781%" y="319.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_ne_bytes (10 samples, 0.45%)</title><rect x="33.9775%" y="293" width="0.4494%" height="15" fill="rgb(236,59,4)" fg:x="756" fg:w="10"/><text x="34.2275%" y="303.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (42 samples, 1.89%)</title><rect x="34.4270%" y="309" width="1.8876%" height="15" fill="rgb(254,179,45)" fg:x="766" fg:w="42"/><text x="34.6770%" y="319.50">c..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (3 samples, 0.13%)</title><rect x="37.3933%" y="261" width="0.1348%" height="15" fill="rgb(226,14,10)" fg:x="832" fg:w="3"/><text x="37.6433%" y="271.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (3 samples, 0.13%)</title><rect x="37.3933%" y="245" width="0.1348%" height="15" fill="rgb(244,27,41)" fg:x="832" fg:w="3"/><text x="37.6433%" y="255.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const [T]&gt;::as_ptr (2 samples, 0.09%)</title><rect x="37.5281%" y="261" width="0.0899%" height="15" fill="rgb(235,35,32)" fg:x="835" fg:w="2"/><text x="37.7781%" y="271.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::cast (3 samples, 0.13%)</title><rect x="37.6629%" y="245" width="0.1348%" height="15" fill="rgb(218,68,31)" fg:x="838" fg:w="3"/><text x="37.9129%" y="255.50"></text></g><g><title>universal_hash::UniversalHash::update_padded (327 samples, 14.70%)</title><rect x="23.5056%" y="421" width="14.6966%" height="15" fill="rgb(207,120,37)" fg:x="523" fg:w="327"/><text x="23.7556%" y="431.50">universal_hash::Univer..</text></g><g><title>universal_hash::UniversalHash::update (327 samples, 14.70%)</title><rect x="23.5056%" y="405" width="14.6966%" height="15" fill="rgb(227,98,0)" fg:x="523" fg:w="327"/><text x="23.7556%" y="415.50">universal_hash::Univer..</text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (327 samples, 14.70%)</title><rect x="23.5056%" y="389" width="14.6966%" height="15" fill="rgb(207,7,3)" fg:x="523" fg:w="327"/><text x="23.7556%" y="399.50">&lt;poly1305::Poly1305 as..</text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (327 samples, 14.70%)</title><rect x="23.5056%" y="373" width="14.6966%" height="15" fill="rgb(206,98,19)" fg:x="523" fg:w="327"/><text x="23.7556%" y="383.50">&lt;poly1305::backend::au..</text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (327 samples, 14.70%)</title><rect x="23.5056%" y="357" width="14.6966%" height="15" fill="rgb(217,5,26)" fg:x="523" fg:w="327"/><text x="23.7556%" y="367.50">&lt;universal_hash::Unive..</text></g><g><title>&lt;poly1305::backend::soft::State as universal_hash::UhfBackend&gt;::proc_block (323 samples, 14.52%)</title><rect x="23.6854%" y="341" width="14.5169%" height="15" fill="rgb(235,190,38)" fg:x="527" fg:w="323"/><text x="23.9354%" y="351.50">&lt;poly1305::backend::so..</text></g><g><title>poly1305::backend::soft::State::compute_block (323 samples, 14.52%)</title><rect x="23.6854%" y="325" width="14.5169%" height="15" fill="rgb(247,86,24)" fg:x="527" fg:w="323"/><text x="23.9354%" y="335.50">poly1305::backend::sof..</text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (42 samples, 1.89%)</title><rect x="36.3146%" y="309" width="1.8876%" height="15" fill="rgb(205,101,16)" fg:x="808" fg:w="42"/><text x="36.5646%" y="319.50">c..</text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (36 samples, 1.62%)</title><rect x="36.5843%" y="293" width="1.6180%" height="15" fill="rgb(246,168,33)" fg:x="814" fg:w="36"/><text x="36.8343%" y="303.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (27 samples, 1.21%)</title><rect x="36.9888%" y="277" width="1.2135%" height="15" fill="rgb(231,114,1)" fg:x="823" fg:w="27"/><text x="37.2388%" y="287.50"></text></g><g><title>core::ptr::slice_from_raw_parts (13 samples, 0.58%)</title><rect x="37.6180%" y="261" width="0.5843%" height="15" fill="rgb(207,184,53)" fg:x="837" fg:w="13"/><text x="37.8680%" y="271.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (9 samples, 0.40%)</title><rect x="37.7978%" y="245" width="0.4045%" height="15" fill="rgb(224,95,51)" fg:x="841" fg:w="9"/><text x="38.0478%" y="255.50"></text></g><g><title>poly1305::backend::autodetect::avx2_cpuid::InitToken::get (1 samples, 0.04%)</title><rect x="38.2022%" y="373" width="0.0449%" height="15" fill="rgb(212,188,45)" fg:x="850" fg:w="1"/><text x="38.4522%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicU8::load (1 samples, 0.04%)</title><rect x="38.2022%" y="357" width="0.0449%" height="15" fill="rgb(223,154,38)" fg:x="850" fg:w="1"/><text x="38.4522%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.04%)</title><rect x="38.2022%" y="341" width="0.0449%" height="15" fill="rgb(251,22,52)" fg:x="850" fg:w="1"/><text x="38.4522%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (2 samples, 0.09%)</title><rect x="38.3371%" y="357" width="0.0899%" height="15" fill="rgb(229,209,22)" fg:x="853" fg:w="2"/><text x="38.5871%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.04%)</title><rect x="38.3820%" y="341" width="0.0449%" height="15" fill="rgb(234,138,34)" fg:x="854" fg:w="1"/><text x="38.6320%" y="351.50"></text></g><g><title>memcpy (1 samples, 0.04%)</title><rect x="38.3820%" y="325" width="0.0449%" height="15" fill="rgb(212,95,11)" fg:x="854" fg:w="1"/><text x="38.6320%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.04%)</title><rect x="38.4719%" y="277" width="0.0449%" height="15" fill="rgb(240,179,47)" fg:x="856" fg:w="1"/><text x="38.7219%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.04%)</title><rect x="38.4719%" y="261" width="0.0449%" height="15" fill="rgb(240,163,11)" fg:x="856" fg:w="1"/><text x="38.7219%" y="271.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (1 samples, 0.04%)</title><rect x="38.4719%" y="245" width="0.0449%" height="15" fill="rgb(236,37,12)" fg:x="856" fg:w="1"/><text x="38.7219%" y="255.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (1 samples, 0.04%)</title><rect x="38.4719%" y="229" width="0.0449%" height="15" fill="rgb(232,164,16)" fg:x="856" fg:w="1"/><text x="38.7219%" y="239.50"></text></g><g><title>&lt;u8 as core::default::Default&gt;::default (1 samples, 0.04%)</title><rect x="38.4719%" y="213" width="0.0449%" height="15" fill="rgb(244,205,15)" fg:x="856" fg:w="1"/><text x="38.7219%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.09%)</title><rect x="38.4719%" y="325" width="0.0899%" height="15" fill="rgb(223,117,47)" fg:x="856" fg:w="2"/><text x="38.7219%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.09%)</title><rect x="38.4719%" y="309" width="0.0899%" height="15" fill="rgb(244,107,35)" fg:x="856" fg:w="2"/><text x="38.7219%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.09%)</title><rect x="38.4719%" y="293" width="0.0899%" height="15" fill="rgb(205,140,8)" fg:x="856" fg:w="2"/><text x="38.7219%" y="303.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="38.5169%" y="277" width="0.0449%" height="15" fill="rgb(228,84,46)" fg:x="857" fg:w="1"/><text x="38.7669%" y="287.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (1 samples, 0.04%)</title><rect x="38.5169%" y="261" width="0.0449%" height="15" fill="rgb(254,188,9)" fg:x="857" fg:w="1"/><text x="38.7669%" y="271.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::decrypt_in_place_detached (352 samples, 15.82%)</title><rect x="22.7865%" y="437" width="15.8202%" height="15" fill="rgb(206,112,54)" fg:x="507" fg:w="352"/><text x="23.0365%" y="447.50">chacha20poly1305::cipher..</text></g><g><title>universal_hash::UniversalHash::verify (9 samples, 0.40%)</title><rect x="38.2022%" y="421" width="0.4045%" height="15" fill="rgb(216,84,49)" fg:x="850" fg:w="9"/><text x="38.4522%" y="431.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::finalize (9 samples, 0.40%)</title><rect x="38.2022%" y="405" width="0.4045%" height="15" fill="rgb(214,194,35)" fg:x="850" fg:w="9"/><text x="38.4522%" y="415.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::finalize (9 samples, 0.40%)</title><rect x="38.2022%" y="389" width="0.4045%" height="15" fill="rgb(249,28,3)" fg:x="850" fg:w="9"/><text x="38.4522%" y="399.50"></text></g><g><title>poly1305::backend::soft::State::finalize_mut (8 samples, 0.36%)</title><rect x="38.2472%" y="373" width="0.3596%" height="15" fill="rgb(222,56,52)" fg:x="851" fg:w="8"/><text x="38.4972%" y="383.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (4 samples, 0.18%)</title><rect x="38.4270%" y="357" width="0.1798%" height="15" fill="rgb(245,217,50)" fg:x="855" fg:w="4"/><text x="38.6770%" y="367.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (4 samples, 0.18%)</title><rect x="38.4270%" y="341" width="0.1798%" height="15" fill="rgb(213,201,24)" fg:x="855" fg:w="4"/><text x="38.6770%" y="351.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (1 samples, 0.04%)</title><rect x="38.5618%" y="325" width="0.0449%" height="15" fill="rgb(248,116,28)" fg:x="858" fg:w="1"/><text x="38.8118%" y="335.50"></text></g><g><title>core::ptr::read (1 samples, 0.04%)</title><rect x="38.5618%" y="309" width="0.0449%" height="15" fill="rgb(219,72,43)" fg:x="858" fg:w="1"/><text x="38.8118%" y="319.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::write_keystream_block (1 samples, 0.04%)</title><rect x="38.6067%" y="373" width="0.0449%" height="15" fill="rgb(209,138,14)" fg:x="859" fg:w="1"/><text x="38.8567%" y="383.50"></text></g><g><title>cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt;::check_remaining (1 samples, 0.04%)</title><rect x="38.6517%" y="373" width="0.0449%" height="15" fill="rgb(222,18,33)" fg:x="860" fg:w="1"/><text x="38.9017%" y="383.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::remaining_blocks (1 samples, 0.04%)</title><rect x="38.6517%" y="357" width="0.0449%" height="15" fill="rgb(213,199,7)" fg:x="860" fg:w="1"/><text x="38.9017%" y="367.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::remaining_blocks (1 samples, 0.04%)</title><rect x="38.6517%" y="341" width="0.0449%" height="15" fill="rgb(250,110,10)" fg:x="860" fg:w="1"/><text x="38.9017%" y="351.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::ok (1 samples, 0.04%)</title><rect x="38.6517%" y="325" width="0.0449%" height="15" fill="rgb(248,123,6)" fg:x="860" fg:w="1"/><text x="38.9017%" y="335.50"></text></g><g><title>cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt;::get_pos (1 samples, 0.04%)</title><rect x="38.6966%" y="373" width="0.0449%" height="15" fill="rgb(206,91,31)" fg:x="861" fg:w="1"/><text x="38.9466%" y="383.50"></text></g><g><title>inout::inout_buf::InOutBuf&lt;T&gt;::into_chunks (1 samples, 0.04%)</title><rect x="38.7416%" y="373" width="0.0449%" height="15" fill="rgb(211,154,13)" fg:x="862" fg:w="1"/><text x="38.9916%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.04%)</title><rect x="38.7416%" y="357" width="0.0449%" height="15" fill="rgb(225,148,7)" fg:x="862" fg:w="1"/><text x="38.9916%" y="367.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.04%)</title><rect x="38.8764%" y="357" width="0.0449%" height="15" fill="rgb(220,160,43)" fg:x="865" fg:w="1"/><text x="39.1264%" y="367.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (8 samples, 0.36%)</title><rect x="38.6067%" y="421" width="0.3596%" height="15" fill="rgb(213,52,39)" fg:x="859" fg:w="8"/><text x="38.8567%" y="431.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (8 samples, 0.36%)</title><rect x="38.6067%" y="405" width="0.3596%" height="15" fill="rgb(243,137,7)" fg:x="859" fg:w="8"/><text x="38.8567%" y="415.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (8 samples, 0.36%)</title><rect x="38.6067%" y="389" width="0.3596%" height="15" fill="rgb(230,79,13)" fg:x="859" fg:w="8"/><text x="38.8567%" y="399.50"></text></g><g><title>inout::inout_buf::InOutBuf&lt;u8&gt;::xor_in2out (4 samples, 0.18%)</title><rect x="38.7865%" y="373" width="0.1798%" height="15" fill="rgb(247,105,23)" fg:x="863" fg:w="4"/><text x="39.0365%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.04%)</title><rect x="38.9213%" y="357" width="0.0449%" height="15" fill="rgb(223,179,41)" fg:x="866" fg:w="1"/><text x="39.1713%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.04%)</title><rect x="38.9213%" y="341" width="0.0449%" height="15" fill="rgb(218,9,34)" fg:x="866" fg:w="1"/><text x="39.1713%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="39.0112%" y="325" width="0.0449%" height="15" fill="rgb(222,106,8)" fg:x="868" fg:w="1"/><text x="39.2612%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null::runtime_impl (1 samples, 0.04%)</title><rect x="39.0112%" y="309" width="0.0449%" height="15" fill="rgb(211,220,0)" fg:x="868" fg:w="1"/><text x="39.2612%" y="319.50"></text></g><g><title>&lt;tftp::socket::EncryptionBoundSocket&lt;S&gt; as tftp::socket::Socket&gt;::recv_from (443 samples, 19.91%)</title><rect x="19.1910%" y="501" width="19.9101%" height="15" fill="rgb(229,52,16)" fg:x="427" fg:w="443"/><text x="19.4410%" y="511.50">&lt;tftp::socket::EncryptionBoundS..</text></g><g><title>tftp::encryption::Encryptor::decrypt (443 samples, 19.91%)</title><rect x="19.1910%" y="485" width="19.9101%" height="15" fill="rgb(212,155,18)" fg:x="427" fg:w="443"/><text x="19.4410%" y="495.50">tftp::encryption::Encryptor::de..</text></g><g><title>aead::AeadInPlace::decrypt_in_place (443 samples, 19.91%)</title><rect x="19.1910%" y="469" width="19.9101%" height="15" fill="rgb(242,21,14)" fg:x="427" fg:w="443"/><text x="19.4410%" y="479.50">aead::AeadInPlace::decrypt_in_p..</text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (443 samples, 19.91%)</title><rect x="19.1910%" y="453" width="19.9101%" height="15" fill="rgb(222,19,48)" fg:x="427" fg:w="443"/><text x="19.4410%" y="463.50">&lt;chacha20poly1305::ChaChaPoly13..</text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (11 samples, 0.49%)</title><rect x="38.6067%" y="437" width="0.4944%" height="15" fill="rgb(232,45,27)" fg:x="859" fg:w="11"/><text x="38.8567%" y="447.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (3 samples, 0.13%)</title><rect x="38.9663%" y="421" width="0.1348%" height="15" fill="rgb(249,103,42)" fg:x="867" fg:w="3"/><text x="39.2163%" y="431.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (3 samples, 0.13%)</title><rect x="38.9663%" y="405" width="0.1348%" height="15" fill="rgb(246,81,33)" fg:x="867" fg:w="3"/><text x="39.2163%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.13%)</title><rect x="38.9663%" y="389" width="0.1348%" height="15" fill="rgb(252,33,42)" fg:x="867" fg:w="3"/><text x="39.2163%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.13%)</title><rect x="38.9663%" y="373" width="0.1348%" height="15" fill="rgb(209,212,41)" fg:x="867" fg:w="3"/><text x="39.2163%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.13%)</title><rect x="38.9663%" y="357" width="0.1348%" height="15" fill="rgb(207,154,6)" fg:x="867" fg:w="3"/><text x="39.2163%" y="367.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.13%)</title><rect x="38.9663%" y="341" width="0.1348%" height="15" fill="rgb(223,64,47)" fg:x="867" fg:w="3"/><text x="39.2163%" y="351.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (1 samples, 0.04%)</title><rect x="39.0562%" y="325" width="0.0449%" height="15" fill="rgb(211,161,38)" fg:x="869" fg:w="1"/><text x="39.3062%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.04%)</title><rect x="39.0562%" y="309" width="0.0449%" height="15" fill="rgb(219,138,40)" fg:x="869" fg:w="1"/><text x="39.3062%" y="319.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.04%)</title><rect x="39.0562%" y="293" width="0.0449%" height="15" fill="rgb(241,228,46)" fg:x="869" fg:w="1"/><text x="39.3062%" y="303.50"></text></g><g><title>tftp::client::client::configure_socket (1 samples, 0.04%)</title><rect x="39.1011%" y="501" width="0.0449%" height="15" fill="rgb(223,209,38)" fg:x="870" fg:w="1"/><text x="39.3511%" y="511.50"></text></g><g><title>tftp::encryption::InitialKeys::finalize (1 samples, 0.04%)</title><rect x="39.1011%" y="485" width="0.0449%" height="15" fill="rgb(236,164,45)" fg:x="870" fg:w="1"/><text x="39.3511%" y="495.50"></text></g><g><title>x25519_dalek::x25519::EphemeralSecret::diffie_hellman (1 samples, 0.04%)</title><rect x="39.1011%" y="469" width="0.0449%" height="15" fill="rgb(231,15,5)" fg:x="870" fg:w="1"/><text x="39.3511%" y="479.50"></text></g><g><title>curve25519_dalek::montgomery::&lt;impl core::ops::arith::Mul&lt;curve25519_dalek::montgomery::MontgomeryPoint&gt; for curve25519_dalek::scalar::Scalar&gt;::mul (1 samples, 0.04%)</title><rect x="39.1011%" y="453" width="0.0449%" height="15" fill="rgb(252,35,15)" fg:x="870" fg:w="1"/><text x="39.3511%" y="463.50"></text></g><g><title>curve25519_dalek::montgomery::&lt;impl core::ops::arith::Mul&lt;&amp;curve25519_dalek::montgomery::MontgomeryPoint&gt; for &amp;curve25519_dalek::scalar::Scalar&gt;::mul (1 samples, 0.04%)</title><rect x="39.1011%" y="437" width="0.0449%" height="15" fill="rgb(248,181,18)" fg:x="870" fg:w="1"/><text x="39.3511%" y="447.50"></text></g><g><title>&lt;&amp;curve25519_dalek::montgomery::MontgomeryPoint as core::ops::arith::Mul&lt;&amp;curve25519_dalek::scalar::Scalar&gt;&gt;::mul (1 samples, 0.04%)</title><rect x="39.1011%" y="421" width="0.0449%" height="15" fill="rgb(233,39,42)" fg:x="870" fg:w="1"/><text x="39.3511%" y="431.50"></text></g><g><title>curve25519_dalek::montgomery::differential_add_and_double (1 samples, 0.04%)</title><rect x="39.1011%" y="405" width="0.0449%" height="15" fill="rgb(238,110,33)" fg:x="870" fg:w="1"/><text x="39.3511%" y="415.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (1 samples, 0.04%)</title><rect x="39.1011%" y="389" width="0.0449%" height="15" fill="rgb(233,195,10)" fg:x="870" fg:w="1"/><text x="39.3511%" y="399.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="39.1011%" y="373" width="0.0449%" height="15" fill="rgb(254,105,3)" fg:x="870" fg:w="1"/><text x="39.3511%" y="383.50"></text></g><g><title>tftp::client::client::query_server (1 samples, 0.04%)</title><rect x="39.1461%" y="501" width="0.0449%" height="15" fill="rgb(221,225,9)" fg:x="871" fg:w="1"/><text x="39.3961%" y="511.50"></text></g><g><title>tftp::client::client::wait_for_initial_packet (1 samples, 0.04%)</title><rect x="39.1461%" y="485" width="0.0449%" height="15" fill="rgb(224,227,45)" fg:x="871" fg:w="1"/><text x="39.3961%" y="495.50"></text></g><g><title>&lt;tftp::packet::Packet as tftp::packet::ByteConverter&gt;::to_bytes (3 samples, 0.13%)</title><rect x="39.1910%" y="485" width="0.1348%" height="15" fill="rgb(229,198,43)" fg:x="872" fg:w="3"/><text x="39.4410%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.13%)</title><rect x="39.1910%" y="469" width="0.1348%" height="15" fill="rgb(206,209,35)" fg:x="872" fg:w="3"/><text x="39.4410%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.13%)</title><rect x="39.1910%" y="453" width="0.1348%" height="15" fill="rgb(245,195,53)" fg:x="872" fg:w="3"/><text x="39.4410%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.13%)</title><rect x="39.1910%" y="437" width="0.1348%" height="15" fill="rgb(240,92,26)" fg:x="872" fg:w="3"/><text x="39.4410%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 0.13%)</title><rect x="39.1910%" y="421" width="0.1348%" height="15" fill="rgb(207,40,23)" fg:x="872" fg:w="3"/><text x="39.4410%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.13%)</title><rect x="39.1910%" y="405" width="0.1348%" height="15" fill="rgb(223,111,35)" fg:x="872" fg:w="3"/><text x="39.4410%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (3 samples, 0.13%)</title><rect x="39.1910%" y="389" width="0.1348%" height="15" fill="rgb(229,147,28)" fg:x="872" fg:w="3"/><text x="39.4410%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.13%)</title><rect x="39.1910%" y="373" width="0.1348%" height="15" fill="rgb(211,29,28)" fg:x="872" fg:w="3"/><text x="39.4410%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.13%)</title><rect x="39.1910%" y="357" width="0.1348%" height="15" fill="rgb(228,72,33)" fg:x="872" fg:w="3"/><text x="39.4410%" y="367.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.13%)</title><rect x="39.1910%" y="341" width="0.1348%" height="15" fill="rgb(205,214,31)" fg:x="872" fg:w="3"/><text x="39.4410%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::by_ref_sized::ByRefSized&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.13%)</title><rect x="39.1910%" y="325" width="0.1348%" height="15" fill="rgb(224,111,15)" fg:x="872" fg:w="3"/><text x="39.4410%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.04%)</title><rect x="39.2809%" y="309" width="0.0449%" height="15" fill="rgb(253,21,26)" fg:x="874" fg:w="1"/><text x="39.5309%" y="319.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (2 samples, 0.09%)</title><rect x="39.3258%" y="389" width="0.0899%" height="15" fill="rgb(245,139,43)" fg:x="875" fg:w="2"/><text x="39.5758%" y="399.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (1 samples, 0.04%)</title><rect x="39.3708%" y="373" width="0.0449%" height="15" fill="rgb(252,170,7)" fg:x="876" fg:w="1"/><text x="39.6208%" y="383.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (1 samples, 0.04%)</title><rect x="39.3708%" y="357" width="0.0449%" height="15" fill="rgb(231,118,14)" fg:x="876" fg:w="1"/><text x="39.6208%" y="367.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.04%)</title><rect x="39.4157%" y="373" width="0.0449%" height="15" fill="rgb(238,83,0)" fg:x="877" fg:w="1"/><text x="39.6657%" y="383.50"></text></g><g><title>memcpy (1 samples, 0.04%)</title><rect x="39.4157%" y="357" width="0.0449%" height="15" fill="rgb(221,39,39)" fg:x="877" fg:w="1"/><text x="39.6657%" y="367.50"></text></g><g><title>chacha20::xchacha::quarter_round (2 samples, 0.09%)</title><rect x="39.4607%" y="373" width="0.0899%" height="15" fill="rgb(222,119,46)" fg:x="878" fg:w="2"/><text x="39.7107%" y="383.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (6 samples, 0.27%)</title><rect x="39.3258%" y="405" width="0.2697%" height="15" fill="rgb(222,165,49)" fg:x="875" fg:w="6"/><text x="39.5758%" y="415.50"></text></g><g><title>chacha20::xchacha::hchacha (4 samples, 0.18%)</title><rect x="39.4157%" y="389" width="0.1798%" height="15" fill="rgb(219,113,52)" fg:x="877" fg:w="4"/><text x="39.6657%" y="399.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.04%)</title><rect x="39.5506%" y="373" width="0.0449%" height="15" fill="rgb(214,7,15)" fg:x="880" fg:w="1"/><text x="39.8006%" y="383.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.04%)</title><rect x="39.5506%" y="357" width="0.0449%" height="15" fill="rgb(235,32,4)" fg:x="880" fg:w="1"/><text x="39.8006%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.04%)</title><rect x="39.5506%" y="341" width="0.0449%" height="15" fill="rgb(238,90,54)" fg:x="880" fg:w="1"/><text x="39.8006%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.04%)</title><rect x="39.5506%" y="325" width="0.0449%" height="15" fill="rgb(213,208,19)" fg:x="880" fg:w="1"/><text x="39.8006%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.04%)</title><rect x="39.5506%" y="309" width="0.0449%" height="15" fill="rgb(233,156,4)" fg:x="880" fg:w="1"/><text x="39.8006%" y="319.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="39.5506%" y="293" width="0.0449%" height="15" fill="rgb(207,194,5)" fg:x="880" fg:w="1"/><text x="39.8006%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.04%)</title><rect x="39.5955%" y="325" width="0.0449%" height="15" fill="rgb(206,111,30)" fg:x="881" fg:w="1"/><text x="39.8455%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.04%)</title><rect x="39.5955%" y="309" width="0.0449%" height="15" fill="rgb(243,70,54)" fg:x="881" fg:w="1"/><text x="39.8455%" y="319.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (1 samples, 0.04%)</title><rect x="39.5955%" y="293" width="0.0449%" height="15" fill="rgb(242,28,8)" fg:x="881" fg:w="1"/><text x="39.8455%" y="303.50"></text></g><g><title>core::ptr::write (1 samples, 0.04%)</title><rect x="39.5955%" y="277" width="0.0449%" height="15" fill="rgb(219,106,18)" fg:x="881" fg:w="1"/><text x="39.8455%" y="287.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as crypto_common::KeyIvInit&gt;::new (9 samples, 0.40%)</title><rect x="39.3258%" y="421" width="0.4045%" height="15" fill="rgb(244,222,10)" fg:x="875" fg:w="9"/><text x="39.5758%" y="431.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (3 samples, 0.13%)</title><rect x="39.5955%" y="405" width="0.1348%" height="15" fill="rgb(236,179,52)" fg:x="881" fg:w="3"/><text x="39.8455%" y="415.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (3 samples, 0.13%)</title><rect x="39.5955%" y="389" width="0.1348%" height="15" fill="rgb(213,23,39)" fg:x="881" fg:w="3"/><text x="39.8455%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.13%)</title><rect x="39.5955%" y="373" width="0.1348%" height="15" fill="rgb(238,48,10)" fg:x="881" fg:w="3"/><text x="39.8455%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.13%)</title><rect x="39.5955%" y="357" width="0.1348%" height="15" fill="rgb(251,196,23)" fg:x="881" fg:w="3"/><text x="39.8455%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.13%)</title><rect x="39.5955%" y="341" width="0.1348%" height="15" fill="rgb(250,152,24)" fg:x="881" fg:w="3"/><text x="39.8455%" y="351.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.09%)</title><rect x="39.6404%" y="325" width="0.0899%" height="15" fill="rgb(209,150,17)" fg:x="882" fg:w="2"/><text x="39.8904%" y="335.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (1 samples, 0.04%)</title><rect x="39.6854%" y="309" width="0.0449%" height="15" fill="rgb(234,202,34)" fg:x="883" fg:w="1"/><text x="39.9354%" y="319.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::finalize (4 samples, 0.18%)</title><rect x="39.7303%" y="405" width="0.1798%" height="15" fill="rgb(253,148,53)" fg:x="884" fg:w="4"/><text x="39.9803%" y="415.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::finalize (4 samples, 0.18%)</title><rect x="39.7303%" y="389" width="0.1798%" height="15" fill="rgb(218,129,16)" fg:x="884" fg:w="4"/><text x="39.9803%" y="399.50"></text></g><g><title>poly1305::backend::soft::State::finalize_mut (4 samples, 0.18%)</title><rect x="39.7303%" y="373" width="0.1798%" height="15" fill="rgb(216,85,19)" fg:x="884" fg:w="4"/><text x="39.9803%" y="383.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (4 samples, 0.18%)</title><rect x="39.7303%" y="357" width="0.1798%" height="15" fill="rgb(235,228,7)" fg:x="884" fg:w="4"/><text x="39.9803%" y="367.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (4 samples, 0.18%)</title><rect x="39.7303%" y="341" width="0.1798%" height="15" fill="rgb(245,175,0)" fg:x="884" fg:w="4"/><text x="39.9803%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.18%)</title><rect x="39.7303%" y="325" width="0.1798%" height="15" fill="rgb(208,168,36)" fg:x="884" fg:w="4"/><text x="39.9803%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.18%)</title><rect x="39.7303%" y="309" width="0.1798%" height="15" fill="rgb(246,171,24)" fg:x="884" fg:w="4"/><text x="39.9803%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.18%)</title><rect x="39.7303%" y="293" width="0.1798%" height="15" fill="rgb(215,142,24)" fg:x="884" fg:w="4"/><text x="39.9803%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (3 samples, 0.13%)</title><rect x="39.7753%" y="277" width="0.1348%" height="15" fill="rgb(250,187,7)" fg:x="885" fg:w="3"/><text x="40.0253%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.04%)</title><rect x="39.8652%" y="261" width="0.0449%" height="15" fill="rgb(228,66,33)" fg:x="887" fg:w="1"/><text x="40.1152%" y="271.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (1 samples, 0.04%)</title><rect x="39.8652%" y="245" width="0.0449%" height="15" fill="rgb(234,215,21)" fg:x="887" fg:w="1"/><text x="40.1152%" y="255.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::authenticate_lengths (1 samples, 0.04%)</title><rect x="39.9101%" y="405" width="0.0449%" height="15" fill="rgb(222,191,20)" fg:x="888" fg:w="1"/><text x="40.1601%" y="415.50"></text></g><g><title>universal_hash::UniversalHash::update (1 samples, 0.04%)</title><rect x="39.9101%" y="389" width="0.0449%" height="15" fill="rgb(245,79,54)" fg:x="888" fg:w="1"/><text x="40.1601%" y="399.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (1 samples, 0.04%)</title><rect x="39.9101%" y="373" width="0.0449%" height="15" fill="rgb(240,10,37)" fg:x="888" fg:w="1"/><text x="40.1601%" y="383.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (1 samples, 0.04%)</title><rect x="39.9101%" y="357" width="0.0449%" height="15" fill="rgb(214,192,32)" fg:x="888" fg:w="1"/><text x="40.1601%" y="367.50"></text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (1 samples, 0.04%)</title><rect x="39.9101%" y="341" width="0.0449%" height="15" fill="rgb(209,36,54)" fg:x="888" fg:w="1"/><text x="40.1601%" y="351.50"></text></g><g><title>&lt;poly1305::backend::soft::State as universal_hash::UhfBackend&gt;::proc_block (1 samples, 0.04%)</title><rect x="39.9101%" y="325" width="0.0449%" height="15" fill="rgb(220,10,11)" fg:x="888" fg:w="1"/><text x="40.1601%" y="335.50"></text></g><g><title>poly1305::backend::soft::State::compute_block (1 samples, 0.04%)</title><rect x="39.9101%" y="309" width="0.0449%" height="15" fill="rgb(221,106,17)" fg:x="888" fg:w="1"/><text x="40.1601%" y="319.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.04%)</title><rect x="39.9101%" y="293" width="0.0449%" height="15" fill="rgb(251,142,44)" fg:x="888" fg:w="1"/><text x="40.1601%" y="303.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.04%)</title><rect x="39.9101%" y="277" width="0.0449%" height="15" fill="rgb(238,13,15)" fg:x="888" fg:w="1"/><text x="40.1601%" y="287.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="39.9101%" y="261" width="0.0449%" height="15" fill="rgb(208,107,27)" fg:x="888" fg:w="1"/><text x="40.1601%" y="271.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.04%)</title><rect x="39.9101%" y="245" width="0.0449%" height="15" fill="rgb(205,136,37)" fg:x="888" fg:w="1"/><text x="40.1601%" y="255.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (1 samples, 0.04%)</title><rect x="39.9101%" y="229" width="0.0449%" height="15" fill="rgb(250,205,27)" fg:x="888" fg:w="1"/><text x="40.1601%" y="239.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::encrypt_in_place_detached (6 samples, 0.27%)</title><rect x="39.7303%" y="421" width="0.2697%" height="15" fill="rgb(210,80,43)" fg:x="884" fg:w="6"/><text x="39.9803%" y="431.50"></text></g><g><title>universal_hash::UniversalHash::update_padded (1 samples, 0.04%)</title><rect x="39.9551%" y="405" width="0.0449%" height="15" fill="rgb(247,160,36)" fg:x="889" fg:w="1"/><text x="40.2051%" y="415.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.04%)</title><rect x="39.9551%" y="389" width="0.0449%" height="15" fill="rgb(234,13,49)" fg:x="889" fg:w="1"/><text x="40.2051%" y="399.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.04%)</title><rect x="39.9551%" y="373" width="0.0449%" height="15" fill="rgb(234,122,0)" fg:x="889" fg:w="1"/><text x="40.2051%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.04%)</title><rect x="39.9551%" y="357" width="0.0449%" height="15" fill="rgb(207,146,38)" fg:x="889" fg:w="1"/><text x="40.2051%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.04%)</title><rect x="39.9551%" y="341" width="0.0449%" height="15" fill="rgb(207,177,25)" fg:x="889" fg:w="1"/><text x="40.2051%" y="351.50"></text></g><g><title>tftp::main (465 samples, 20.90%)</title><rect x="19.1910%" y="549" width="20.8989%" height="15" fill="rgb(211,178,42)" fg:x="427" fg:w="465"/><text x="19.4410%" y="559.50">tftp::main</text></g><g><title>tftp::start_receive (465 samples, 20.90%)</title><rect x="19.1910%" y="533" width="20.8989%" height="15" fill="rgb(230,69,54)" fg:x="427" fg:w="465"/><text x="19.4410%" y="543.50">tftp::start_receive</text></g><g><title>tftp::client::client::receive_file (465 samples, 20.90%)</title><rect x="19.1910%" y="517" width="20.8989%" height="15" fill="rgb(214,135,41)" fg:x="427" fg:w="465"/><text x="19.4410%" y="527.50">tftp::client::client::receive_file</text></g><g><title>tftp::client::client::write_block (20 samples, 0.90%)</title><rect x="39.1910%" y="501" width="0.8989%" height="15" fill="rgb(237,67,25)" fg:x="872" fg:w="20"/><text x="39.4410%" y="511.50"></text></g><g><title>&lt;tftp::socket::EncryptionBoundSocket&lt;S&gt; as tftp::socket::Socket&gt;::send_to (17 samples, 0.76%)</title><rect x="39.3258%" y="485" width="0.7640%" height="15" fill="rgb(222,189,50)" fg:x="875" fg:w="17"/><text x="39.5758%" y="495.50"></text></g><g><title>tftp::encryption::Encryptor::encrypt (17 samples, 0.76%)</title><rect x="39.3258%" y="469" width="0.7640%" height="15" fill="rgb(245,148,34)" fg:x="875" fg:w="17"/><text x="39.5758%" y="479.50"></text></g><g><title>aead::AeadInPlace::encrypt_in_place (17 samples, 0.76%)</title><rect x="39.3258%" y="453" width="0.7640%" height="15" fill="rgb(222,29,6)" fg:x="875" fg:w="17"/><text x="39.5758%" y="463.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::encrypt_in_place_detached (17 samples, 0.76%)</title><rect x="39.3258%" y="437" width="0.7640%" height="15" fill="rgb(221,189,43)" fg:x="875" fg:w="17"/><text x="39.5758%" y="447.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (2 samples, 0.09%)</title><rect x="40.0000%" y="421" width="0.0899%" height="15" fill="rgb(207,36,27)" fg:x="890" fg:w="2"/><text x="40.2500%" y="431.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (2 samples, 0.09%)</title><rect x="40.0000%" y="405" width="0.0899%" height="15" fill="rgb(217,90,24)" fg:x="890" fg:w="2"/><text x="40.2500%" y="415.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (2 samples, 0.09%)</title><rect x="40.0000%" y="389" width="0.0899%" height="15" fill="rgb(224,66,35)" fg:x="890" fg:w="2"/><text x="40.2500%" y="399.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (2 samples, 0.09%)</title><rect x="40.0000%" y="373" width="0.0899%" height="15" fill="rgb(221,13,50)" fg:x="890" fg:w="2"/><text x="40.2500%" y="383.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="40.0449%" y="357" width="0.0449%" height="15" fill="rgb(236,68,49)" fg:x="891" fg:w="1"/><text x="40.2949%" y="367.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.04%)</title><rect x="40.2247%" y="293" width="0.0449%" height="15" fill="rgb(229,146,28)" fg:x="895" fg:w="1"/><text x="40.4747%" y="303.50"></text></g><g><title>chacha20::backends::sse2::cols_to_rows (19 samples, 0.85%)</title><rect x="41.1685%" y="261" width="0.8539%" height="15" fill="rgb(225,31,38)" fg:x="916" fg:w="19"/><text x="41.4185%" y="271.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_shuffle_epi32 (13 samples, 0.58%)</title><rect x="41.4382%" y="245" width="0.5843%" height="15" fill="rgb(250,208,3)" fg:x="922" fg:w="13"/><text x="41.6882%" y="255.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i32x4 (3 samples, 0.13%)</title><rect x="41.8876%" y="229" width="0.1348%" height="15" fill="rgb(246,54,23)" fg:x="932" fg:w="3"/><text x="42.1376%" y="239.50"></text></g><g><title>chacha20::backends::sse2::double_quarter_round (51 samples, 2.29%)</title><rect x="40.9888%" y="277" width="2.2921%" height="15" fill="rgb(243,76,11)" fg:x="912" fg:w="51"/><text x="41.2388%" y="287.50">c..</text></g><g><title>chacha20::backends::sse2::rows_to_cols (28 samples, 1.26%)</title><rect x="42.0225%" y="261" width="1.2584%" height="15" fill="rgb(245,21,50)" fg:x="935" fg:w="28"/><text x="42.2725%" y="271.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_shuffle_epi32 (20 samples, 0.90%)</title><rect x="42.3820%" y="245" width="0.8989%" height="15" fill="rgb(228,9,43)" fg:x="943" fg:w="20"/><text x="42.6320%" y="255.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i32x4 (1 samples, 0.04%)</title><rect x="43.2360%" y="229" width="0.0449%" height="15" fill="rgb(208,100,47)" fg:x="962" fg:w="1"/><text x="43.4860%" y="239.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_add_epi32 (6 samples, 0.27%)</title><rect x="43.2809%" y="277" width="0.2697%" height="15" fill="rgb(232,26,8)" fg:x="963" fg:w="6"/><text x="43.5309%" y="287.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i32x4 (2 samples, 0.09%)</title><rect x="43.4607%" y="261" width="0.0899%" height="15" fill="rgb(216,166,38)" fg:x="967" fg:w="2"/><text x="43.7107%" y="271.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.04%)</title><rect x="43.9101%" y="245" width="0.0449%" height="15" fill="rgb(251,202,51)" fg:x="977" fg:w="1"/><text x="44.1601%" y="255.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for usize&gt;::clone (1 samples, 0.04%)</title><rect x="43.9551%" y="245" width="0.0449%" height="15" fill="rgb(254,216,34)" fg:x="978" fg:w="1"/><text x="44.2051%" y="255.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (4 samples, 0.18%)</title><rect x="44.0000%" y="245" width="0.1798%" height="15" fill="rgb(251,32,27)" fg:x="979" fg:w="4"/><text x="44.2500%" y="255.50"></text></g><g><title>chacha20::backends::sse2::rounds (91 samples, 4.09%)</title><rect x="40.2697%" y="293" width="4.0899%" height="15" fill="rgb(208,127,28)" fg:x="896" fg:w="91"/><text x="40.5197%" y="303.50">chac..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (18 samples, 0.81%)</title><rect x="43.5506%" y="277" width="0.8090%" height="15" fill="rgb(224,137,22)" fg:x="969" fg:w="18"/><text x="43.8006%" y="287.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (16 samples, 0.72%)</title><rect x="43.6404%" y="261" width="0.7191%" height="15" fill="rgb(254,70,32)" fg:x="971" fg:w="16"/><text x="43.8904%" y="271.50"></text></g><g><title>core::mem::replace (4 samples, 0.18%)</title><rect x="44.1798%" y="245" width="0.1798%" height="15" fill="rgb(229,75,37)" fg:x="983" fg:w="4"/><text x="44.4298%" y="255.50"></text></g><g><title>core::ptr::read (1 samples, 0.04%)</title><rect x="44.3146%" y="229" width="0.0449%" height="15" fill="rgb(252,64,23)" fg:x="986" fg:w="1"/><text x="44.5646%" y="239.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_add_epi32 (2 samples, 0.09%)</title><rect x="44.3596%" y="293" width="0.0899%" height="15" fill="rgb(232,162,48)" fg:x="987" fg:w="2"/><text x="44.6096%" y="303.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi32 (2 samples, 0.09%)</title><rect x="44.4494%" y="293" width="0.0899%" height="15" fill="rgb(246,160,12)" fg:x="989" fg:w="2"/><text x="44.6994%" y="303.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_storeu_si128 (3 samples, 0.13%)</title><rect x="44.5393%" y="293" width="0.1348%" height="15" fill="rgb(247,166,0)" fg:x="991" fg:w="3"/><text x="44.7893%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (2 samples, 0.09%)</title><rect x="44.6742%" y="261" width="0.0899%" height="15" fill="rgb(249,219,21)" fg:x="994" fg:w="2"/><text x="44.9242%" y="271.50"></text></g><g><title>core::ptr::read (2 samples, 0.09%)</title><rect x="44.7640%" y="245" width="0.0899%" height="15" fill="rgb(205,209,3)" fg:x="996" fg:w="2"/><text x="45.0140%" y="255.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (5 samples, 0.22%)</title><rect x="44.6742%" y="293" width="0.2247%" height="15" fill="rgb(243,44,1)" fg:x="994" fg:w="5"/><text x="44.9242%" y="303.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (5 samples, 0.22%)</title><rect x="44.6742%" y="277" width="0.2247%" height="15" fill="rgb(206,159,16)" fg:x="994" fg:w="5"/><text x="44.9242%" y="287.50"></text></g><g><title>core::mem::replace (3 samples, 0.13%)</title><rect x="44.7640%" y="261" width="0.1348%" height="15" fill="rgb(244,77,30)" fg:x="996" fg:w="3"/><text x="45.0140%" y="271.50"></text></g><g><title>core::ptr::write (1 samples, 0.04%)</title><rect x="44.8539%" y="245" width="0.0449%" height="15" fill="rgb(218,69,12)" fg:x="998" fg:w="1"/><text x="45.1039%" y="255.50"></text></g><g><title>&lt;chacha20::backends::sse2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (107 samples, 4.81%)</title><rect x="40.1348%" y="309" width="4.8090%" height="15" fill="rgb(212,87,7)" fg:x="893" fg:w="107"/><text x="40.3848%" y="319.50">&lt;chach..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.04%)</title><rect x="44.8989%" y="293" width="0.0449%" height="15" fill="rgb(245,114,25)" fg:x="999" fg:w="1"/><text x="45.1489%" y="303.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.04%)</title><rect x="44.8989%" y="277" width="0.0449%" height="15" fill="rgb(210,61,42)" fg:x="999" fg:w="1"/><text x="45.1489%" y="287.50"></text></g><g><title>&lt;inout::inout_buf::InOutBufIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="44.9438%" y="309" width="0.0449%" height="15" fill="rgb(211,52,33)" fg:x="1000" fg:w="1"/><text x="45.1938%" y="319.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.04%)</title><rect x="44.9438%" y="293" width="0.0449%" height="15" fill="rgb(234,58,33)" fg:x="1000" fg:w="1"/><text x="45.1938%" y="303.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.04%)</title><rect x="44.9438%" y="277" width="0.0449%" height="15" fill="rgb(220,115,36)" fg:x="1000" fg:w="1"/><text x="45.1938%" y="287.50"></text></g><g><title>core::ptr::write (18 samples, 0.81%)</title><rect x="54.2022%" y="181" width="0.8090%" height="15" fill="rgb(243,153,54)" fg:x="1206" fg:w="18"/><text x="54.4522%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (149 samples, 6.70%)</title><rect x="48.7191%" y="229" width="6.6966%" height="15" fill="rgb(251,47,18)" fg:x="1084" fg:w="149"/><text x="48.9691%" y="239.50">&lt;core::it..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (99 samples, 4.45%)</title><rect x="50.9663%" y="213" width="4.4494%" height="15" fill="rgb(242,102,42)" fg:x="1134" fg:w="99"/><text x="51.2163%" y="223.50">core:..</text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (73 samples, 3.28%)</title><rect x="52.1348%" y="197" width="3.2809%" height="15" fill="rgb(234,31,38)" fg:x="1160" fg:w="73"/><text x="52.3848%" y="207.50">&lt;ge..</text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (9 samples, 0.40%)</title><rect x="55.0112%" y="181" width="0.4045%" height="15" fill="rgb(221,117,51)" fg:x="1224" fg:w="9"/><text x="55.2612%" y="191.50"></text></g><g><title>&lt;u8 as core::default::Default&gt;::default (1 samples, 0.04%)</title><rect x="55.3708%" y="165" width="0.0449%" height="15" fill="rgb(212,20,18)" fg:x="1232" fg:w="1"/><text x="55.6208%" y="175.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (21 samples, 0.94%)</title><rect x="56.4494%" y="213" width="0.9438%" height="15" fill="rgb(245,133,36)" fg:x="1256" fg:w="21"/><text x="56.6994%" y="223.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null::runtime_impl (10 samples, 0.45%)</title><rect x="56.9438%" y="197" width="0.4494%" height="15" fill="rgb(212,6,19)" fg:x="1267" fg:w="10"/><text x="57.1938%" y="207.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::addr (8 samples, 0.36%)</title><rect x="57.0337%" y="181" width="0.3596%" height="15" fill="rgb(218,1,36)" fg:x="1269" fg:w="8"/><text x="57.2837%" y="191.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (8 samples, 0.36%)</title><rect x="58.7865%" y="197" width="0.3596%" height="15" fill="rgb(246,84,54)" fg:x="1308" fg:w="8"/><text x="59.0365%" y="207.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (7 samples, 0.31%)</title><rect x="58.8315%" y="181" width="0.3146%" height="15" fill="rgb(242,110,6)" fg:x="1309" fg:w="7"/><text x="59.0815%" y="191.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.04%)</title><rect x="59.1461%" y="197" width="0.0449%" height="15" fill="rgb(214,47,5)" fg:x="1316" fg:w="1"/><text x="59.3961%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (319 samples, 14.34%)</title><rect x="45.0787%" y="277" width="14.3371%" height="15" fill="rgb(218,159,25)" fg:x="1003" fg:w="319"/><text x="45.3287%" y="287.50">core::iter::traits::it..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (316 samples, 14.20%)</title><rect x="45.2135%" y="261" width="14.2022%" height="15" fill="rgb(215,211,28)" fg:x="1006" fg:w="316"/><text x="45.4635%" y="271.50">&lt;core::iter::adapters:..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (315 samples, 14.16%)</title><rect x="45.2584%" y="245" width="14.1573%" height="15" fill="rgb(238,59,32)" fg:x="1007" fg:w="315"/><text x="45.5084%" y="255.50">core::iter::traits::i..</text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (89 samples, 4.00%)</title><rect x="55.4157%" y="229" width="4.0000%" height="15" fill="rgb(226,82,3)" fg:x="1233" fg:w="89"/><text x="55.6657%" y="239.50">&lt;cor..</text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (45 samples, 2.02%)</title><rect x="57.3933%" y="213" width="2.0225%" height="15" fill="rgb(240,164,32)" fg:x="1277" fg:w="45"/><text x="57.6433%" y="223.50">c..</text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (5 samples, 0.22%)</title><rect x="59.1910%" y="197" width="0.2247%" height="15" fill="rgb(232,46,7)" fg:x="1317" fg:w="5"/><text x="59.4410%" y="207.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (1 samples, 0.04%)</title><rect x="59.5506%" y="261" width="0.0449%" height="15" fill="rgb(229,129,53)" fg:x="1325" fg:w="1"/><text x="59.8006%" y="271.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (1 samples, 0.04%)</title><rect x="59.5506%" y="245" width="0.0449%" height="15" fill="rgb(234,188,29)" fg:x="1325" fg:w="1"/><text x="59.8006%" y="255.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="59.5506%" y="229" width="0.0449%" height="15" fill="rgb(246,141,4)" fg:x="1325" fg:w="1"/><text x="59.8006%" y="239.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (5 samples, 0.22%)</title><rect x="59.4157%" y="277" width="0.2247%" height="15" fill="rgb(229,23,39)" fg:x="1322" fg:w="5"/><text x="59.6657%" y="287.50"></text></g><g><title>core::ptr::read (1 samples, 0.04%)</title><rect x="59.5955%" y="261" width="0.0449%" height="15" fill="rgb(206,12,3)" fg:x="1326" fg:w="1"/><text x="59.8455%" y="271.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (1 samples, 0.04%)</title><rect x="59.5955%" y="245" width="0.0449%" height="15" fill="rgb(252,226,20)" fg:x="1326" fg:w="1"/><text x="59.8455%" y="255.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (1 samples, 0.04%)</title><rect x="59.5955%" y="229" width="0.0449%" height="15" fill="rgb(216,123,35)" fg:x="1326" fg:w="1"/><text x="59.8455%" y="239.50"></text></g><g><title>_init (1 samples, 0.04%)</title><rect x="59.5955%" y="213" width="0.0449%" height="15" fill="rgb(212,68,40)" fg:x="1326" fg:w="1"/><text x="59.8455%" y="223.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.04%)</title><rect x="59.6854%" y="261" width="0.0449%" height="15" fill="rgb(254,125,32)" fg:x="1328" fg:w="1"/><text x="59.9354%" y="271.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (1 samples, 0.04%)</title><rect x="59.6854%" y="245" width="0.0449%" height="15" fill="rgb(253,97,22)" fg:x="1328" fg:w="1"/><text x="59.9354%" y="255.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (1 samples, 0.04%)</title><rect x="59.6854%" y="229" width="0.0449%" height="15" fill="rgb(241,101,14)" fg:x="1328" fg:w="1"/><text x="59.9354%" y="239.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (1 samples, 0.04%)</title><rect x="59.6854%" y="213" width="0.0449%" height="15" fill="rgb(238,103,29)" fg:x="1328" fg:w="1"/><text x="59.9354%" y="223.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (329 samples, 14.79%)</title><rect x="44.9888%" y="309" width="14.7865%" height="15" fill="rgb(233,195,47)" fg:x="1001" fg:w="329"/><text x="45.2388%" y="319.50">generic_array::impls::&lt;..</text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (329 samples, 14.79%)</title><rect x="44.9888%" y="293" width="14.7865%" height="15" fill="rgb(246,218,30)" fg:x="1001" fg:w="329"/><text x="45.2388%" y="303.50">&lt;generic_array::Generic..</text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::iter_position (3 samples, 0.13%)</title><rect x="59.6404%" y="277" width="0.1348%" height="15" fill="rgb(219,145,47)" fg:x="1327" fg:w="3"/><text x="59.8904%" y="287.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (1 samples, 0.04%)</title><rect x="59.7303%" y="261" width="0.0449%" height="15" fill="rgb(243,12,26)" fg:x="1329" fg:w="1"/><text x="59.9803%" y="271.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="59.7303%" y="245" width="0.0449%" height="15" fill="rgb(214,87,16)" fg:x="1329" fg:w="1"/><text x="59.9803%" y="255.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::cast (1 samples, 0.04%)</title><rect x="67.8652%" y="245" width="0.0449%" height="15" fill="rgb(208,99,42)" fg:x="1510" fg:w="1"/><text x="68.1152%" y="255.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::Deref&gt;::deref (72 samples, 3.24%)</title><rect x="66.4270%" y="293" width="3.2360%" height="15" fill="rgb(253,99,2)" fg:x="1478" fg:w="72"/><text x="66.6770%" y="303.50">&lt;ge..</text></g><g><title>core::slice::raw::from_raw_parts (55 samples, 2.47%)</title><rect x="67.1910%" y="277" width="2.4719%" height="15" fill="rgb(220,168,23)" fg:x="1495" fg:w="55"/><text x="67.4410%" y="287.50">co..</text></g><g><title>core::ptr::slice_from_raw_parts (44 samples, 1.98%)</title><rect x="67.6854%" y="261" width="1.9775%" height="15" fill="rgb(242,38,24)" fg:x="1506" fg:w="44"/><text x="67.9354%" y="271.50">c..</text></g><g><title>core::ptr::metadata::from_raw_parts (39 samples, 1.75%)</title><rect x="67.9101%" y="245" width="1.7528%" height="15" fill="rgb(225,182,9)" fg:x="1511" fg:w="39"/><text x="68.1601%" y="255.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (11 samples, 0.49%)</title><rect x="70.4270%" y="245" width="0.4944%" height="15" fill="rgb(243,178,37)" fg:x="1567" fg:w="11"/><text x="70.6770%" y="255.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (29 samples, 1.30%)</title><rect x="69.6629%" y="293" width="1.3034%" height="15" fill="rgb(232,139,19)" fg:x="1550" fg:w="29"/><text x="69.9129%" y="303.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (22 samples, 0.99%)</title><rect x="69.9775%" y="277" width="0.9888%" height="15" fill="rgb(225,201,24)" fg:x="1557" fg:w="22"/><text x="70.2275%" y="287.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (17 samples, 0.76%)</title><rect x="70.2022%" y="261" width="0.7640%" height="15" fill="rgb(221,47,46)" fg:x="1562" fg:w="17"/><text x="70.4522%" y="271.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::cast (1 samples, 0.04%)</title><rect x="70.9213%" y="245" width="0.0449%" height="15" fill="rgb(249,23,13)" fg:x="1578" fg:w="1"/><text x="71.1713%" y="255.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (17 samples, 0.76%)</title><rect x="72.5393%" y="261" width="0.7640%" height="15" fill="rgb(219,9,5)" fg:x="1614" fg:w="17"/><text x="72.7893%" y="271.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for usize&gt;::clone (1 samples, 0.04%)</title><rect x="73.3034%" y="261" width="0.0449%" height="15" fill="rgb(254,171,16)" fg:x="1631" fg:w="1"/><text x="73.5534%" y="271.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (9 samples, 0.40%)</title><rect x="73.3483%" y="261" width="0.4045%" height="15" fill="rgb(230,171,20)" fg:x="1632" fg:w="9"/><text x="73.5983%" y="271.50"></text></g><g><title>core::ptr::read (29 samples, 1.30%)</title><rect x="74.3371%" y="245" width="1.3034%" height="15" fill="rgb(210,71,41)" fg:x="1654" fg:w="29"/><text x="74.5871%" y="255.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (2 samples, 0.09%)</title><rect x="75.5506%" y="229" width="0.0899%" height="15" fill="rgb(206,173,20)" fg:x="1681" fg:w="2"/><text x="75.8006%" y="239.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (2 samples, 0.09%)</title><rect x="75.5506%" y="213" width="0.0899%" height="15" fill="rgb(233,88,34)" fg:x="1681" fg:w="2"/><text x="75.8006%" y="223.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (105 samples, 4.72%)</title><rect x="70.9663%" y="293" width="4.7191%" height="15" fill="rgb(223,209,46)" fg:x="1579" fg:w="105"/><text x="71.2163%" y="303.50">core:..</text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (99 samples, 4.45%)</title><rect x="71.2360%" y="277" width="4.4494%" height="15" fill="rgb(250,43,18)" fg:x="1585" fg:w="99"/><text x="71.4860%" y="287.50">&lt;core..</text></g><g><title>core::mem::replace (43 samples, 1.93%)</title><rect x="73.7528%" y="261" width="1.9326%" height="15" fill="rgb(208,13,10)" fg:x="1641" fg:w="43"/><text x="74.0028%" y="271.50">c..</text></g><g><title>core::ptr::write (1 samples, 0.04%)</title><rect x="75.6404%" y="245" width="0.0449%" height="15" fill="rgb(212,200,36)" fg:x="1683" fg:w="1"/><text x="75.8904%" y="255.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="75.6854%" y="277" width="0.0449%" height="15" fill="rgb(225,90,30)" fg:x="1684" fg:w="1"/><text x="75.9354%" y="287.50"></text></g><g><title>core::ptr::read (2 samples, 0.09%)</title><rect x="75.6854%" y="293" width="0.0899%" height="15" fill="rgb(236,182,39)" fg:x="1684" fg:w="2"/><text x="75.9354%" y="303.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (1 samples, 0.04%)</title><rect x="75.7303%" y="277" width="0.0449%" height="15" fill="rgb(212,144,35)" fg:x="1685" fg:w="1"/><text x="75.9803%" y="287.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="75.7303%" y="261" width="0.0449%" height="15" fill="rgb(228,63,44)" fg:x="1685" fg:w="1"/><text x="75.9803%" y="271.50"></text></g><g><title>core::ptr::write (1 samples, 0.04%)</title><rect x="75.7753%" y="293" width="0.0449%" height="15" fill="rgb(228,109,6)" fg:x="1686" fg:w="1"/><text x="76.0253%" y="303.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="75.7753%" y="277" width="0.0449%" height="15" fill="rgb(238,117,24)" fg:x="1686" fg:w="1"/><text x="76.0253%" y="287.50"></text></g><g><title>core::ptr::write (9 samples, 0.40%)</title><rect x="85.1685%" y="165" width="0.4045%" height="15" fill="rgb(242,26,26)" fg:x="1895" fg:w="9"/><text x="85.4185%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (157 samples, 7.06%)</title><rect x="79.1461%" y="213" width="7.0562%" height="15" fill="rgb(221,92,48)" fg:x="1761" fg:w="157"/><text x="79.3961%" y="223.50">&lt;core::it..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (103 samples, 4.63%)</title><rect x="81.5730%" y="197" width="4.6292%" height="15" fill="rgb(209,209,32)" fg:x="1815" fg:w="103"/><text x="81.8230%" y="207.50">core:..</text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (77 samples, 3.46%)</title><rect x="82.7416%" y="181" width="3.4607%" height="15" fill="rgb(221,70,22)" fg:x="1841" fg:w="77"/><text x="82.9916%" y="191.50">&lt;ge..</text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (14 samples, 0.63%)</title><rect x="85.5730%" y="165" width="0.6292%" height="15" fill="rgb(248,145,5)" fg:x="1904" fg:w="14"/><text x="85.8230%" y="175.50"></text></g><g><title>&lt;u8 as core::default::Default&gt;::default (2 samples, 0.09%)</title><rect x="86.1124%" y="149" width="0.0899%" height="15" fill="rgb(226,116,26)" fg:x="1916" fg:w="2"/><text x="86.3624%" y="159.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (11 samples, 0.49%)</title><rect x="87.0562%" y="197" width="0.4944%" height="15" fill="rgb(244,5,17)" fg:x="1937" fg:w="11"/><text x="87.3062%" y="207.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null::runtime_impl (4 samples, 0.18%)</title><rect x="87.3708%" y="181" width="0.1798%" height="15" fill="rgb(252,159,33)" fg:x="1944" fg:w="4"/><text x="87.6208%" y="191.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::addr (3 samples, 0.13%)</title><rect x="87.4157%" y="165" width="0.1348%" height="15" fill="rgb(206,71,0)" fg:x="1945" fg:w="3"/><text x="87.6657%" y="175.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.04%)</title><rect x="87.5506%" y="197" width="0.0449%" height="15" fill="rgb(233,118,54)" fg:x="1948" fg:w="1"/><text x="87.8006%" y="207.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (12 samples, 0.54%)</title><rect x="88.7640%" y="181" width="0.5393%" height="15" fill="rgb(234,83,48)" fg:x="1975" fg:w="12"/><text x="89.0140%" y="191.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (12 samples, 0.54%)</title><rect x="88.7640%" y="165" width="0.5393%" height="15" fill="rgb(228,3,54)" fg:x="1975" fg:w="12"/><text x="89.0140%" y="175.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (302 samples, 13.57%)</title><rect x="75.8202%" y="261" width="13.5730%" height="15" fill="rgb(226,155,13)" fg:x="1687" fg:w="302"/><text x="76.0702%" y="271.50">core::iter::traits::i..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (300 samples, 13.48%)</title><rect x="75.9101%" y="245" width="13.4831%" height="15" fill="rgb(241,28,37)" fg:x="1689" fg:w="300"/><text x="76.1601%" y="255.50">&lt;core::iter::adapter..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (300 samples, 13.48%)</title><rect x="75.9101%" y="229" width="13.4831%" height="15" fill="rgb(233,93,10)" fg:x="1689" fg:w="300"/><text x="76.1601%" y="239.50">core::iter::traits::..</text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (71 samples, 3.19%)</title><rect x="86.2022%" y="213" width="3.1910%" height="15" fill="rgb(225,113,19)" fg:x="1918" fg:w="71"/><text x="86.4522%" y="223.50">&lt;co..</text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (40 samples, 1.80%)</title><rect x="87.5955%" y="197" width="1.7978%" height="15" fill="rgb(241,2,18)" fg:x="1949" fg:w="40"/><text x="87.8455%" y="207.50">c..</text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (2 samples, 0.09%)</title><rect x="89.3034%" y="181" width="0.0899%" height="15" fill="rgb(228,207,21)" fg:x="1987" fg:w="2"/><text x="89.5534%" y="191.50"></text></g><g><title>[libc.so.6] (2 samples, 0.09%)</title><rect x="89.4382%" y="229" width="0.0899%" height="15" fill="rgb(213,211,35)" fg:x="1990" fg:w="2"/><text x="89.6882%" y="239.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (3 samples, 0.13%)</title><rect x="89.4382%" y="245" width="0.1348%" height="15" fill="rgb(209,83,10)" fg:x="1990" fg:w="3"/><text x="89.6882%" y="255.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (1 samples, 0.04%)</title><rect x="89.5281%" y="229" width="0.0449%" height="15" fill="rgb(209,164,1)" fg:x="1992" fg:w="1"/><text x="89.7781%" y="239.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="89.5281%" y="213" width="0.0449%" height="15" fill="rgb(213,184,43)" fg:x="1992" fg:w="1"/><text x="89.7781%" y="223.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (7 samples, 0.31%)</title><rect x="89.3933%" y="261" width="0.3146%" height="15" fill="rgb(231,61,34)" fg:x="1989" fg:w="7"/><text x="89.6433%" y="271.50"></text></g><g><title>core::ptr::read (3 samples, 0.13%)</title><rect x="89.5730%" y="245" width="0.1348%" height="15" fill="rgb(235,75,3)" fg:x="1993" fg:w="3"/><text x="89.8230%" y="255.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (1 samples, 0.04%)</title><rect x="89.6629%" y="229" width="0.0449%" height="15" fill="rgb(220,106,47)" fg:x="1995" fg:w="1"/><text x="89.9129%" y="239.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (1 samples, 0.04%)</title><rect x="89.6629%" y="213" width="0.0449%" height="15" fill="rgb(210,196,33)" fg:x="1995" fg:w="1"/><text x="89.9129%" y="223.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="89.6629%" y="197" width="0.0449%" height="15" fill="rgb(229,154,42)" fg:x="1995" fg:w="1"/><text x="89.9129%" y="207.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (3 samples, 0.13%)</title><rect x="89.7079%" y="245" width="0.1348%" height="15" fill="rgb(228,114,26)" fg:x="1996" fg:w="3"/><text x="89.9579%" y="255.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (3 samples, 0.13%)</title><rect x="89.7079%" y="229" width="0.1348%" height="15" fill="rgb(208,144,1)" fg:x="1996" fg:w="3"/><text x="89.9579%" y="239.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (2 samples, 0.09%)</title><rect x="89.7528%" y="213" width="0.0899%" height="15" fill="rgb(239,112,37)" fg:x="1997" fg:w="2"/><text x="90.0028%" y="223.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (2 samples, 0.09%)</title><rect x="89.7528%" y="197" width="0.0899%" height="15" fill="rgb(210,96,50)" fg:x="1997" fg:w="2"/><text x="90.0028%" y="207.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::iter_position (5 samples, 0.22%)</title><rect x="89.7079%" y="261" width="0.2247%" height="15" fill="rgb(222,178,2)" fg:x="1996" fg:w="5"/><text x="89.9579%" y="271.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (2 samples, 0.09%)</title><rect x="89.8427%" y="245" width="0.0899%" height="15" fill="rgb(226,74,18)" fg:x="1999" fg:w="2"/><text x="90.0927%" y="255.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (2 samples, 0.09%)</title><rect x="89.8427%" y="229" width="0.0899%" height="15" fill="rgb(225,67,54)" fg:x="1999" fg:w="2"/><text x="90.0927%" y="239.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="89.8876%" y="213" width="0.0449%" height="15" fill="rgb(251,92,32)" fg:x="2000" fg:w="1"/><text x="90.1376%" y="223.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (1,110 samples, 49.89%)</title><rect x="40.0899%" y="389" width="49.8876%" height="15" fill="rgb(228,149,22)" fg:x="892" fg:w="1110"/><text x="40.3399%" y="399.50">cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout</text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (1,110 samples, 49.89%)</title><rect x="40.0899%" y="373" width="49.8876%" height="15" fill="rgb(243,54,13)" fg:x="892" fg:w="1110"/><text x="40.3399%" y="383.50">&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::proc..</text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (1,110 samples, 49.89%)</title><rect x="40.0899%" y="357" width="49.8876%" height="15" fill="rgb(243,180,28)" fg:x="892" fg:w="1110"/><text x="40.3399%" y="367.50">&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_b..</text></g><g><title>chacha20::backends::sse2::inner (1,110 samples, 49.89%)</title><rect x="40.0899%" y="341" width="49.8876%" height="15" fill="rgb(208,167,24)" fg:x="892" fg:w="1110"/><text x="40.3399%" y="351.50">chacha20::backends::sse2::inner</text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (1,110 samples, 49.89%)</title><rect x="40.0899%" y="325" width="49.8876%" height="15" fill="rgb(245,73,45)" fg:x="892" fg:w="1110"/><text x="40.3399%" y="335.50">&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::c..</text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;u8,N&gt;&gt;::xor_in2out (672 samples, 30.20%)</title><rect x="59.7753%" y="309" width="30.2022%" height="15" fill="rgb(237,203,48)" fg:x="1330" fg:w="672"/><text x="60.0253%" y="319.50">inout::inout::InOut&lt;generic_array::GenericArray&lt;u..</text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (315 samples, 14.16%)</title><rect x="75.8202%" y="293" width="14.1573%" height="15" fill="rgb(211,197,16)" fg:x="1687" fg:w="315"/><text x="76.0702%" y="303.50">generic_array::impls:..</text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (315 samples, 14.16%)</title><rect x="75.8202%" y="277" width="14.1573%" height="15" fill="rgb(243,99,51)" fg:x="1687" fg:w="315"/><text x="76.0702%" y="287.50">&lt;generic_array::Gener..</text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::new (1 samples, 0.04%)</title><rect x="89.9326%" y="261" width="0.0449%" height="15" fill="rgb(215,123,29)" fg:x="2001" fg:w="1"/><text x="90.1826%" y="271.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_add_epi32 (9 samples, 0.40%)</title><rect x="90.1573%" y="245" width="0.4045%" height="15" fill="rgb(239,186,37)" fg:x="2006" fg:w="9"/><text x="90.4073%" y="255.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i32x4 (2 samples, 0.09%)</title><rect x="90.4719%" y="229" width="0.0899%" height="15" fill="rgb(252,136,39)" fg:x="2013" fg:w="2"/><text x="90.7219%" y="239.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_slli_epi32 (3 samples, 0.13%)</title><rect x="90.5618%" y="245" width="0.1348%" height="15" fill="rgb(223,213,32)" fg:x="2015" fg:w="3"/><text x="90.8118%" y="255.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i32x4 (1 samples, 0.04%)</title><rect x="90.6517%" y="229" width="0.0449%" height="15" fill="rgb(233,115,5)" fg:x="2017" fg:w="1"/><text x="90.9017%" y="239.50"></text></g><g><title>chacha20::backends::sse2::add_xor_rot (21 samples, 0.94%)</title><rect x="89.9775%" y="261" width="0.9438%" height="15" fill="rgb(207,226,44)" fg:x="2002" fg:w="21"/><text x="90.2275%" y="271.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_xor_si128 (5 samples, 0.22%)</title><rect x="90.6966%" y="245" width="0.2247%" height="15" fill="rgb(208,126,0)" fg:x="2018" fg:w="5"/><text x="90.9466%" y="255.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::decrypt_in_place_detached (1,133 samples, 50.92%)</title><rect x="40.0899%" y="453" width="50.9213%" height="15" fill="rgb(244,66,21)" fg:x="892" fg:w="1133"/><text x="40.3399%" y="463.50">chacha20poly1305::cipher::Cipher&lt;C&gt;::decrypt_in_place_detached</text></g><g><title>cipher::stream::StreamCipher::apply_keystream (1,133 samples, 50.92%)</title><rect x="40.0899%" y="437" width="50.9213%" height="15" fill="rgb(222,97,12)" fg:x="892" fg:w="1133"/><text x="40.3399%" y="447.50">cipher::stream::StreamCipher::apply_keystream</text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (1,133 samples, 50.92%)</title><rect x="40.0899%" y="421" width="50.9213%" height="15" fill="rgb(219,213,19)" fg:x="892" fg:w="1133"/><text x="40.3399%" y="431.50">cipher::stream::StreamCipher::try_apply_keystream</text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (1,133 samples, 50.92%)</title><rect x="40.0899%" y="405" width="50.9213%" height="15" fill="rgb(252,169,30)" fg:x="892" fg:w="1133"/><text x="40.3399%" y="415.50">&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;..</text></g><g><title>cipher::stream_core::StreamCipherCore::write_keystream_block (23 samples, 1.03%)</title><rect x="89.9775%" y="389" width="1.0337%" height="15" fill="rgb(206,32,51)" fg:x="2002" fg:w="23"/><text x="90.2275%" y="399.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (23 samples, 1.03%)</title><rect x="89.9775%" y="373" width="1.0337%" height="15" fill="rgb(250,172,42)" fg:x="2002" fg:w="23"/><text x="90.2275%" y="383.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (23 samples, 1.03%)</title><rect x="89.9775%" y="357" width="1.0337%" height="15" fill="rgb(209,34,43)" fg:x="2002" fg:w="23"/><text x="90.2275%" y="367.50"></text></g><g><title>chacha20::backends::sse2::inner (23 samples, 1.03%)</title><rect x="89.9775%" y="341" width="1.0337%" height="15" fill="rgb(223,11,35)" fg:x="2002" fg:w="23"/><text x="90.2275%" y="351.50"></text></g><g><title>&lt;cipher::stream_core::WriteBlockCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (23 samples, 1.03%)</title><rect x="89.9775%" y="325" width="1.0337%" height="15" fill="rgb(251,219,26)" fg:x="2002" fg:w="23"/><text x="90.2275%" y="335.50"></text></g><g><title>&lt;chacha20::backends::sse2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (23 samples, 1.03%)</title><rect x="89.9775%" y="309" width="1.0337%" height="15" fill="rgb(231,119,3)" fg:x="2002" fg:w="23"/><text x="90.2275%" y="319.50"></text></g><g><title>chacha20::backends::sse2::rounds (23 samples, 1.03%)</title><rect x="89.9775%" y="293" width="1.0337%" height="15" fill="rgb(216,97,11)" fg:x="2002" fg:w="23"/><text x="90.2275%" y="303.50"></text></g><g><title>chacha20::backends::sse2::double_quarter_round (23 samples, 1.03%)</title><rect x="89.9775%" y="277" width="1.0337%" height="15" fill="rgb(223,59,9)" fg:x="2002" fg:w="23"/><text x="90.2275%" y="287.50"></text></g><g><title>chacha20::backends::sse2::rows_to_cols (2 samples, 0.09%)</title><rect x="90.9213%" y="261" width="0.0899%" height="15" fill="rgb(233,93,31)" fg:x="2023" fg:w="2"/><text x="91.1713%" y="271.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_shuffle_epi32 (2 samples, 0.09%)</title><rect x="90.9213%" y="245" width="0.0899%" height="15" fill="rgb(239,81,33)" fg:x="2023" fg:w="2"/><text x="91.1713%" y="255.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i32x4 (1 samples, 0.04%)</title><rect x="90.9663%" y="229" width="0.0449%" height="15" fill="rgb(213,120,34)" fg:x="2024" fg:w="1"/><text x="91.2163%" y="239.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="91.0112%" y="405" width="0.0449%" height="15" fill="rgb(243,49,53)" fg:x="2025" fg:w="1"/><text x="91.2612%" y="415.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (3 samples, 0.13%)</title><rect x="91.0562%" y="389" width="0.1348%" height="15" fill="rgb(247,216,33)" fg:x="2026" fg:w="3"/><text x="91.3062%" y="399.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (2 samples, 0.09%)</title><rect x="91.1011%" y="373" width="0.0899%" height="15" fill="rgb(226,26,14)" fg:x="2027" fg:w="2"/><text x="91.3511%" y="383.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (2 samples, 0.09%)</title><rect x="91.1011%" y="357" width="0.0899%" height="15" fill="rgb(215,49,53)" fg:x="2027" fg:w="2"/><text x="91.3511%" y="367.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_le_bytes (1 samples, 0.04%)</title><rect x="91.1910%" y="389" width="0.0449%" height="15" fill="rgb(245,162,40)" fg:x="2029" fg:w="1"/><text x="91.4410%" y="399.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_ne_bytes (1 samples, 0.04%)</title><rect x="91.1910%" y="373" width="0.0449%" height="15" fill="rgb(229,68,17)" fg:x="2029" fg:w="1"/><text x="91.4410%" y="383.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (1 samples, 0.04%)</title><rect x="91.2360%" y="389" width="0.0449%" height="15" fill="rgb(213,182,10)" fg:x="2030" fg:w="1"/><text x="91.4860%" y="399.50"></text></g><g><title>&lt;poly1305::Poly1305 as crypto_common::KeyInit&gt;::new (7 samples, 0.31%)</title><rect x="91.0112%" y="437" width="0.3146%" height="15" fill="rgb(245,125,30)" fg:x="2025" fg:w="7"/><text x="91.2612%" y="447.50"></text></g><g><title>poly1305::backend::autodetect::State::new (7 samples, 0.31%)</title><rect x="91.0112%" y="421" width="0.3146%" height="15" fill="rgb(232,202,2)" fg:x="2025" fg:w="7"/><text x="91.2612%" y="431.50"></text></g><g><title>poly1305::backend::soft::State::new (6 samples, 0.27%)</title><rect x="91.0562%" y="405" width="0.2697%" height="15" fill="rgb(237,140,51)" fg:x="2026" fg:w="6"/><text x="91.3062%" y="415.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.04%)</title><rect x="91.2809%" y="389" width="0.0449%" height="15" fill="rgb(236,157,25)" fg:x="2031" fg:w="1"/><text x="91.5309%" y="399.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.04%)</title><rect x="91.2809%" y="373" width="0.0449%" height="15" fill="rgb(219,209,0)" fg:x="2031" fg:w="1"/><text x="91.5309%" y="383.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (2 samples, 0.09%)</title><rect x="91.3258%" y="389" width="0.0899%" height="15" fill="rgb(240,116,54)" fg:x="2032" fg:w="2"/><text x="91.5758%" y="399.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (2 samples, 0.09%)</title><rect x="91.3258%" y="373" width="0.0899%" height="15" fill="rgb(216,10,36)" fg:x="2032" fg:w="2"/><text x="91.5758%" y="383.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (2 samples, 0.09%)</title><rect x="91.3258%" y="357" width="0.0899%" height="15" fill="rgb(222,72,44)" fg:x="2032" fg:w="2"/><text x="91.5758%" y="367.50"></text></g><g><title>chacha20::backends::sse2::inner (1 samples, 0.04%)</title><rect x="91.3708%" y="341" width="0.0449%" height="15" fill="rgb(232,159,9)" fg:x="2033" fg:w="1"/><text x="91.6208%" y="351.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.04%)</title><rect x="91.3708%" y="325" width="0.0449%" height="15" fill="rgb(210,39,32)" fg:x="2033" fg:w="1"/><text x="91.6208%" y="335.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_add_epi32 (3 samples, 0.13%)</title><rect x="91.9551%" y="245" width="0.1348%" height="15" fill="rgb(216,194,45)" fg:x="2046" fg:w="3"/><text x="92.2051%" y="255.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i32x4 (1 samples, 0.04%)</title><rect x="92.0449%" y="229" width="0.0449%" height="15" fill="rgb(218,18,35)" fg:x="2048" fg:w="1"/><text x="92.2949%" y="239.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_slli_epi32 (3 samples, 0.13%)</title><rect x="92.0899%" y="245" width="0.1348%" height="15" fill="rgb(207,83,51)" fg:x="2049" fg:w="3"/><text x="92.3399%" y="255.50"></text></g><g><title>chacha20::backends::sse2::add_xor_rot (16 samples, 0.72%)</title><rect x="91.5955%" y="261" width="0.7191%" height="15" fill="rgb(225,63,43)" fg:x="2038" fg:w="16"/><text x="91.8455%" y="271.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_xor_si128 (2 samples, 0.09%)</title><rect x="92.2247%" y="245" width="0.0899%" height="15" fill="rgb(207,57,36)" fg:x="2052" fg:w="2"/><text x="92.4747%" y="255.50"></text></g><g><title>chacha20::backends::sse2::cols_to_rows (1 samples, 0.04%)</title><rect x="92.3146%" y="261" width="0.0449%" height="15" fill="rgb(216,99,33)" fg:x="2054" fg:w="1"/><text x="92.5646%" y="271.50"></text></g><g><title>chacha20::backends::sse2::double_quarter_round (19 samples, 0.85%)</title><rect x="91.5506%" y="277" width="0.8539%" height="15" fill="rgb(225,42,16)" fg:x="2037" fg:w="19"/><text x="91.8006%" y="287.50"></text></g><g><title>chacha20::backends::sse2::rows_to_cols (1 samples, 0.04%)</title><rect x="92.3596%" y="261" width="0.0449%" height="15" fill="rgb(220,201,45)" fg:x="2055" fg:w="1"/><text x="92.6096%" y="271.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_shuffle_epi32 (1 samples, 0.04%)</title><rect x="92.3596%" y="245" width="0.0449%" height="15" fill="rgb(225,33,4)" fg:x="2055" fg:w="1"/><text x="92.6096%" y="255.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_add_epi32 (1 samples, 0.04%)</title><rect x="92.4045%" y="277" width="0.0449%" height="15" fill="rgb(224,33,50)" fg:x="2056" fg:w="1"/><text x="92.6545%" y="287.50"></text></g><g><title>chacha20::backends::sse2::rounds (21 samples, 0.94%)</title><rect x="91.5506%" y="293" width="0.9438%" height="15" fill="rgb(246,198,51)" fg:x="2037" fg:w="21"/><text x="91.8006%" y="303.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.04%)</title><rect x="92.4494%" y="277" width="0.0449%" height="15" fill="rgb(205,22,4)" fg:x="2057" fg:w="1"/><text x="92.6994%" y="287.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.04%)</title><rect x="92.4494%" y="261" width="0.0449%" height="15" fill="rgb(206,3,8)" fg:x="2057" fg:w="1"/><text x="92.6994%" y="271.50"></text></g><g><title>core::mem::replace (1 samples, 0.04%)</title><rect x="92.4494%" y="245" width="0.0449%" height="15" fill="rgb(251,23,15)" fg:x="2057" fg:w="1"/><text x="92.6994%" y="255.50"></text></g><g><title>core::ptr::read (1 samples, 0.04%)</title><rect x="92.4494%" y="229" width="0.0449%" height="15" fill="rgb(252,88,28)" fg:x="2057" fg:w="1"/><text x="92.6994%" y="239.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (1 samples, 0.04%)</title><rect x="92.4494%" y="213" width="0.0449%" height="15" fill="rgb(212,127,14)" fg:x="2057" fg:w="1"/><text x="92.6994%" y="223.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (1 samples, 0.04%)</title><rect x="92.4494%" y="197" width="0.0449%" height="15" fill="rgb(247,145,37)" fg:x="2057" fg:w="1"/><text x="92.6994%" y="207.50"></text></g><g><title>&lt;tftp::socket::EncryptionBoundSocket&lt;S&gt; as tftp::socket::Socket&gt;::recv_from (1,168 samples, 52.49%)</title><rect x="40.0899%" y="517" width="52.4944%" height="15" fill="rgb(209,117,53)" fg:x="892" fg:w="1168"/><text x="40.3399%" y="527.50">&lt;tftp::socket::EncryptionBoundSocket&lt;S&gt; as tftp::socket::Socket&gt;::recv_from</text></g><g><title>tftp::encryption::Encryptor::decrypt (1,168 samples, 52.49%)</title><rect x="40.0899%" y="501" width="52.4944%" height="15" fill="rgb(212,90,42)" fg:x="892" fg:w="1168"/><text x="40.3399%" y="511.50">tftp::encryption::Encryptor::decrypt</text></g><g><title>aead::AeadInPlace::decrypt_in_place (1,168 samples, 52.49%)</title><rect x="40.0899%" y="485" width="52.4944%" height="15" fill="rgb(218,164,37)" fg:x="892" fg:w="1168"/><text x="40.3399%" y="495.50">aead::AeadInPlace::decrypt_in_place</text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (1,168 samples, 52.49%)</title><rect x="40.0899%" y="469" width="52.4944%" height="15" fill="rgb(246,65,34)" fg:x="892" fg:w="1168"/><text x="40.3399%" y="479.50">&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached</text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (35 samples, 1.57%)</title><rect x="91.0112%" y="453" width="1.5730%" height="15" fill="rgb(231,100,33)" fg:x="2025" fg:w="35"/><text x="91.2612%" y="463.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (28 samples, 1.26%)</title><rect x="91.3258%" y="437" width="1.2584%" height="15" fill="rgb(228,126,14)" fg:x="2032" fg:w="28"/><text x="91.5758%" y="447.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (28 samples, 1.26%)</title><rect x="91.3258%" y="421" width="1.2584%" height="15" fill="rgb(215,173,21)" fg:x="2032" fg:w="28"/><text x="91.5758%" y="431.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (28 samples, 1.26%)</title><rect x="91.3258%" y="405" width="1.2584%" height="15" fill="rgb(210,6,40)" fg:x="2032" fg:w="28"/><text x="91.5758%" y="415.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::write_keystream_block (26 samples, 1.17%)</title><rect x="91.4157%" y="389" width="1.1685%" height="15" fill="rgb(212,48,18)" fg:x="2034" fg:w="26"/><text x="91.6657%" y="399.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (26 samples, 1.17%)</title><rect x="91.4157%" y="373" width="1.1685%" height="15" fill="rgb(230,214,11)" fg:x="2034" fg:w="26"/><text x="91.6657%" y="383.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (26 samples, 1.17%)</title><rect x="91.4157%" y="357" width="1.1685%" height="15" fill="rgb(254,105,39)" fg:x="2034" fg:w="26"/><text x="91.6657%" y="367.50"></text></g><g><title>chacha20::backends::sse2::inner (26 samples, 1.17%)</title><rect x="91.4157%" y="341" width="1.1685%" height="15" fill="rgb(245,158,5)" fg:x="2034" fg:w="26"/><text x="91.6657%" y="351.50"></text></g><g><title>&lt;cipher::stream_core::WriteBlockCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (23 samples, 1.03%)</title><rect x="91.5506%" y="325" width="1.0337%" height="15" fill="rgb(249,208,11)" fg:x="2037" fg:w="23"/><text x="91.8006%" y="335.50"></text></g><g><title>&lt;chacha20::backends::sse2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (23 samples, 1.03%)</title><rect x="91.5506%" y="309" width="1.0337%" height="15" fill="rgb(210,39,28)" fg:x="2037" fg:w="23"/><text x="91.8006%" y="319.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.09%)</title><rect x="92.4944%" y="293" width="0.0899%" height="15" fill="rgb(211,56,53)" fg:x="2058" fg:w="2"/><text x="92.7444%" y="303.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.09%)</title><rect x="92.4944%" y="277" width="0.0899%" height="15" fill="rgb(226,201,30)" fg:x="2058" fg:w="2"/><text x="92.7444%" y="287.50"></text></g><g><title>core::mem::replace (1 samples, 0.04%)</title><rect x="92.5393%" y="261" width="0.0449%" height="15" fill="rgb(239,101,34)" fg:x="2059" fg:w="1"/><text x="92.7893%" y="271.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::encrypt_in_place_detached (1 samples, 0.04%)</title><rect x="92.5843%" y="437" width="0.0449%" height="15" fill="rgb(226,209,5)" fg:x="2060" fg:w="1"/><text x="92.8343%" y="447.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (1 samples, 0.04%)</title><rect x="92.5843%" y="421" width="0.0449%" height="15" fill="rgb(250,105,47)" fg:x="2060" fg:w="1"/><text x="92.8343%" y="431.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (1 samples, 0.04%)</title><rect x="92.5843%" y="405" width="0.0449%" height="15" fill="rgb(230,72,3)" fg:x="2060" fg:w="1"/><text x="92.8343%" y="415.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (1 samples, 0.04%)</title><rect x="92.5843%" y="389" width="0.0449%" height="15" fill="rgb(232,218,39)" fg:x="2060" fg:w="1"/><text x="92.8343%" y="399.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::write_keystream_block (1 samples, 0.04%)</title><rect x="92.5843%" y="373" width="0.0449%" height="15" fill="rgb(248,166,6)" fg:x="2060" fg:w="1"/><text x="92.8343%" y="383.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (1 samples, 0.04%)</title><rect x="92.5843%" y="357" width="0.0449%" height="15" fill="rgb(247,89,20)" fg:x="2060" fg:w="1"/><text x="92.8343%" y="367.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (1 samples, 0.04%)</title><rect x="92.5843%" y="341" width="0.0449%" height="15" fill="rgb(248,130,54)" fg:x="2060" fg:w="1"/><text x="92.8343%" y="351.50"></text></g><g><title>chacha20::backends::sse2::inner (1 samples, 0.04%)</title><rect x="92.5843%" y="325" width="0.0449%" height="15" fill="rgb(234,196,4)" fg:x="2060" fg:w="1"/><text x="92.8343%" y="335.50"></text></g><g><title>&lt;cipher::stream_core::WriteBlockCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (1 samples, 0.04%)</title><rect x="92.5843%" y="309" width="0.0449%" height="15" fill="rgb(250,143,31)" fg:x="2060" fg:w="1"/><text x="92.8343%" y="319.50"></text></g><g><title>&lt;chacha20::backends::sse2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (1 samples, 0.04%)</title><rect x="92.5843%" y="293" width="0.0449%" height="15" fill="rgb(211,110,34)" fg:x="2060" fg:w="1"/><text x="92.8343%" y="303.50"></text></g><g><title>chacha20::backends::sse2::rounds (1 samples, 0.04%)</title><rect x="92.5843%" y="277" width="0.0449%" height="15" fill="rgb(215,124,48)" fg:x="2060" fg:w="1"/><text x="92.8343%" y="287.50"></text></g><g><title>chacha20::backends::sse2::double_quarter_round (1 samples, 0.04%)</title><rect x="92.5843%" y="261" width="0.0449%" height="15" fill="rgb(216,46,13)" fg:x="2060" fg:w="1"/><text x="92.8343%" y="271.50"></text></g><g><title>chacha20::backends::sse2::rows_to_cols (1 samples, 0.04%)</title><rect x="92.5843%" y="245" width="0.0449%" height="15" fill="rgb(205,184,25)" fg:x="2060" fg:w="1"/><text x="92.8343%" y="255.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_shuffle_epi32 (1 samples, 0.04%)</title><rect x="92.5843%" y="229" width="0.0449%" height="15" fill="rgb(228,1,10)" fg:x="2060" fg:w="1"/><text x="92.8343%" y="239.50"></text></g><g><title>[unknown] (2,055 samples, 92.36%)</title><rect x="0.3146%" y="565" width="92.3596%" height="15" fill="rgb(213,116,27)" fg:x="7" fg:w="2055"/><text x="0.5646%" y="575.50">[unknown]</text></g><g><title>tftp::start_receive (1,170 samples, 52.58%)</title><rect x="40.0899%" y="549" width="52.5843%" height="15" fill="rgb(241,95,50)" fg:x="892" fg:w="1170"/><text x="40.3399%" y="559.50">tftp::start_receive</text></g><g><title>tftp::client::client::receive_file (1,170 samples, 52.58%)</title><rect x="40.0899%" y="533" width="52.5843%" height="15" fill="rgb(238,48,32)" fg:x="892" fg:w="1170"/><text x="40.3399%" y="543.50">tftp::client::client::receive_file</text></g><g><title>tftp::client::client::write_block (2 samples, 0.09%)</title><rect x="92.5843%" y="517" width="0.0899%" height="15" fill="rgb(235,113,49)" fg:x="2060" fg:w="2"/><text x="92.8343%" y="527.50"></text></g><g><title>&lt;tftp::socket::EncryptionBoundSocket&lt;S&gt; as tftp::socket::Socket&gt;::send_to (2 samples, 0.09%)</title><rect x="92.5843%" y="501" width="0.0899%" height="15" fill="rgb(205,127,43)" fg:x="2060" fg:w="2"/><text x="92.8343%" y="511.50"></text></g><g><title>tftp::encryption::Encryptor::encrypt (2 samples, 0.09%)</title><rect x="92.5843%" y="485" width="0.0899%" height="15" fill="rgb(250,162,2)" fg:x="2060" fg:w="2"/><text x="92.8343%" y="495.50"></text></g><g><title>aead::AeadInPlace::encrypt_in_place (2 samples, 0.09%)</title><rect x="92.5843%" y="469" width="0.0899%" height="15" fill="rgb(220,13,41)" fg:x="2060" fg:w="2"/><text x="92.8343%" y="479.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::encrypt_in_place_detached (2 samples, 0.09%)</title><rect x="92.5843%" y="453" width="0.0899%" height="15" fill="rgb(249,221,25)" fg:x="2060" fg:w="2"/><text x="92.8343%" y="463.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (1 samples, 0.04%)</title><rect x="92.6292%" y="437" width="0.0449%" height="15" fill="rgb(215,208,19)" fg:x="2061" fg:w="1"/><text x="92.8792%" y="447.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (1 samples, 0.04%)</title><rect x="92.6292%" y="421" width="0.0449%" height="15" fill="rgb(236,175,2)" fg:x="2061" fg:w="1"/><text x="92.8792%" y="431.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (1 samples, 0.04%)</title><rect x="92.6292%" y="405" width="0.0449%" height="15" fill="rgb(241,52,2)" fg:x="2061" fg:w="1"/><text x="92.8792%" y="415.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (1 samples, 0.04%)</title><rect x="92.6292%" y="389" width="0.0449%" height="15" fill="rgb(248,140,14)" fg:x="2061" fg:w="1"/><text x="92.8792%" y="399.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::write_keystream_block (1 samples, 0.04%)</title><rect x="92.6292%" y="373" width="0.0449%" height="15" fill="rgb(253,22,42)" fg:x="2061" fg:w="1"/><text x="92.8792%" y="383.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (1 samples, 0.04%)</title><rect x="92.6292%" y="357" width="0.0449%" height="15" fill="rgb(234,61,47)" fg:x="2061" fg:w="1"/><text x="92.8792%" y="367.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (1 samples, 0.04%)</title><rect x="92.6292%" y="341" width="0.0449%" height="15" fill="rgb(208,226,15)" fg:x="2061" fg:w="1"/><text x="92.8792%" y="351.50"></text></g><g><title>chacha20::backends::sse2::inner (1 samples, 0.04%)</title><rect x="92.6292%" y="325" width="0.0449%" height="15" fill="rgb(217,221,4)" fg:x="2061" fg:w="1"/><text x="92.8792%" y="335.50"></text></g><g><title>&lt;cipher::stream_core::WriteBlockCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (1 samples, 0.04%)</title><rect x="92.6292%" y="309" width="0.0449%" height="15" fill="rgb(212,174,34)" fg:x="2061" fg:w="1"/><text x="92.8792%" y="319.50"></text></g><g><title>&lt;chacha20::backends::sse2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (1 samples, 0.04%)</title><rect x="92.6292%" y="293" width="0.0449%" height="15" fill="rgb(253,83,4)" fg:x="2061" fg:w="1"/><text x="92.8792%" y="303.50"></text></g><g><title>chacha20::backends::sse2::rounds (1 samples, 0.04%)</title><rect x="92.6292%" y="277" width="0.0449%" height="15" fill="rgb(250,195,49)" fg:x="2061" fg:w="1"/><text x="92.8792%" y="287.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.04%)</title><rect x="92.6292%" y="261" width="0.0449%" height="15" fill="rgb(241,192,25)" fg:x="2061" fg:w="1"/><text x="92.8792%" y="271.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.04%)</title><rect x="92.6292%" y="245" width="0.0449%" height="15" fill="rgb(208,124,10)" fg:x="2061" fg:w="1"/><text x="92.8792%" y="255.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.04%)</title><rect x="92.6292%" y="229" width="0.0449%" height="15" fill="rgb(222,33,0)" fg:x="2061" fg:w="1"/><text x="92.8792%" y="239.50"></text></g><g><title>env_logger::Builder::init (1 samples, 0.04%)</title><rect x="92.6742%" y="277" width="0.0449%" height="15" fill="rgb(234,209,28)" fg:x="2062" fg:w="1"/><text x="92.9242%" y="287.50"></text></g><g><title>env_logger::Builder::try_init (1 samples, 0.04%)</title><rect x="92.6742%" y="261" width="0.0449%" height="15" fill="rgb(224,11,23)" fg:x="2062" fg:w="1"/><text x="92.9242%" y="271.50"></text></g><g><title>env_logger::Builder::build (1 samples, 0.04%)</title><rect x="92.6742%" y="245" width="0.0449%" height="15" fill="rgb(232,99,1)" fg:x="2062" fg:w="1"/><text x="92.9242%" y="255.50"></text></g><g><title>env_logger::filter::Builder::build (1 samples, 0.04%)</title><rect x="92.6742%" y="229" width="0.0449%" height="15" fill="rgb(237,95,45)" fg:x="2062" fg:w="1"/><text x="92.9242%" y="239.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::is_empty (1 samples, 0.04%)</title><rect x="92.6742%" y="213" width="0.0449%" height="15" fill="rgb(208,109,11)" fg:x="2062" fg:w="1"/><text x="92.9242%" y="223.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::is_empty (1 samples, 0.04%)</title><rect x="92.6742%" y="197" width="0.0449%" height="15" fill="rgb(216,190,48)" fg:x="2062" fg:w="1"/><text x="92.9242%" y="207.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::len (1 samples, 0.04%)</title><rect x="92.6742%" y="181" width="0.0449%" height="15" fill="rgb(251,171,36)" fg:x="2062" fg:w="1"/><text x="92.9242%" y="191.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.04%)</title><rect x="92.8539%" y="245" width="0.0449%" height="15" fill="rgb(230,62,22)" fg:x="2066" fg:w="1"/><text x="93.1039%" y="255.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::convert::From&lt;T&gt;&gt;::from (1 samples, 0.04%)</title><rect x="92.8539%" y="229" width="0.0449%" height="15" fill="rgb(225,114,35)" fg:x="2066" fg:w="1"/><text x="93.1039%" y="239.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="92.8989%" y="245" width="0.0449%" height="15" fill="rgb(215,118,42)" fg:x="2067" fg:w="1"/><text x="93.1489%" y="255.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (1 samples, 0.04%)</title><rect x="92.9888%" y="213" width="0.0449%" height="15" fill="rgb(243,119,21)" fg:x="2069" fg:w="1"/><text x="93.2388%" y="223.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.04%)</title><rect x="93.0337%" y="213" width="0.0449%" height="15" fill="rgb(252,177,53)" fg:x="2070" fg:w="1"/><text x="93.2837%" y="223.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.04%)</title><rect x="93.0337%" y="197" width="0.0449%" height="15" fill="rgb(237,209,29)" fg:x="2070" fg:w="1"/><text x="93.2837%" y="207.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.04%)</title><rect x="93.0337%" y="181" width="0.0449%" height="15" fill="rgb(212,65,23)" fg:x="2070" fg:w="1"/><text x="93.2837%" y="191.50"></text></g><g><title>&lt;tftp::packet::DataPacket as tftp::packet::ByteConverter&gt;::from_bytes (4 samples, 0.18%)</title><rect x="92.9888%" y="229" width="0.1798%" height="15" fill="rgb(230,222,46)" fg:x="2069" fg:w="4"/><text x="93.2388%" y="239.50"></text></g><g><title>tftp::packet::try_from (2 samples, 0.09%)</title><rect x="93.0787%" y="213" width="0.0899%" height="15" fill="rgb(215,135,32)" fg:x="2071" fg:w="2"/><text x="93.3287%" y="223.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="93.1236%" y="197" width="0.0449%" height="15" fill="rgb(246,101,22)" fg:x="2072" fg:w="1"/><text x="93.3736%" y="207.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.04%)</title><rect x="93.1685%" y="229" width="0.0449%" height="15" fill="rgb(206,107,13)" fg:x="2073" fg:w="1"/><text x="93.4185%" y="239.50"></text></g><g><title>&lt;tftp::packet::Packet as tftp::packet::ByteConverter&gt;::from_bytes (7 samples, 0.31%)</title><rect x="92.9438%" y="245" width="0.3146%" height="15" fill="rgb(250,100,44)" fg:x="2068" fg:w="7"/><text x="93.1938%" y="255.50"></text></g><g><title>tftp::packet::PacketType::from_bytes (1 samples, 0.04%)</title><rect x="93.2135%" y="229" width="0.0449%" height="15" fill="rgb(231,147,38)" fg:x="2074" fg:w="1"/><text x="93.4635%" y="239.50"></text></g><g><title>tftp::packet::try_from (1 samples, 0.04%)</title><rect x="93.2135%" y="213" width="0.0449%" height="15" fill="rgb(229,8,40)" fg:x="2074" fg:w="1"/><text x="93.4635%" y="223.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="93.2135%" y="197" width="0.0449%" height="15" fill="rgb(221,135,30)" fg:x="2074" fg:w="1"/><text x="93.4635%" y="207.50"></text></g><g><title>[libc.so.6] (3 samples, 0.13%)</title><rect x="93.4382%" y="213" width="0.1348%" height="15" fill="rgb(249,193,18)" fg:x="2079" fg:w="3"/><text x="93.6882%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;polling::Event&gt;&gt; (1 samples, 0.04%)</title><rect x="93.5730%" y="213" width="0.0449%" height="15" fill="rgb(209,133,39)" fg:x="2082" fg:w="1"/><text x="93.8230%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;polling::Event&gt;&gt; (1 samples, 0.04%)</title><rect x="93.5730%" y="197" width="0.0449%" height="15" fill="rgb(232,100,14)" fg:x="2082" fg:w="1"/><text x="93.8230%" y="207.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="93.5730%" y="181" width="0.0449%" height="15" fill="rgb(224,185,1)" fg:x="2082" fg:w="1"/><text x="93.8230%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.04%)</title><rect x="93.5730%" y="165" width="0.0449%" height="15" fill="rgb(223,139,8)" fg:x="2082" fg:w="1"/><text x="93.8230%" y="175.50"></text></g><g><title>log::max_level (1 samples, 0.04%)</title><rect x="93.6180%" y="181" width="0.0449%" height="15" fill="rgb(232,213,38)" fg:x="2083" fg:w="1"/><text x="93.8680%" y="191.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.04%)</title><rect x="93.6180%" y="165" width="0.0449%" height="15" fill="rgb(207,94,22)" fg:x="2083" fg:w="1"/><text x="93.8680%" y="175.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.04%)</title><rect x="93.6180%" y="149" width="0.0449%" height="15" fill="rgb(219,183,54)" fg:x="2083" fg:w="1"/><text x="93.8680%" y="159.50"></text></g><g><title>polling::Poller::modify (3 samples, 0.13%)</title><rect x="93.6180%" y="213" width="0.1348%" height="15" fill="rgb(216,185,54)" fg:x="2083" fg:w="3"/><text x="93.8680%" y="223.50"></text></g><g><title>polling::epoll::Poller::modify (3 samples, 0.13%)</title><rect x="93.6180%" y="197" width="0.1348%" height="15" fill="rgb(254,217,39)" fg:x="2083" fg:w="3"/><text x="93.8680%" y="207.50"></text></g><g><title>polling::epoll::Poller::ctl (2 samples, 0.09%)</title><rect x="93.6629%" y="181" width="0.0899%" height="15" fill="rgb(240,178,23)" fg:x="2084" fg:w="2"/><text x="93.9129%" y="191.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.04%)</title><rect x="93.7079%" y="165" width="0.0449%" height="15" fill="rgb(218,11,47)" fg:x="2085" fg:w="1"/><text x="93.9579%" y="175.50"></text></g><g><title>polling::epoll::Poller::ctl::{{closure}} (1 samples, 0.04%)</title><rect x="93.7079%" y="149" width="0.0449%" height="15" fill="rgb(218,51,51)" fg:x="2085" fg:w="1"/><text x="93.9579%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.09%)</title><rect x="93.7528%" y="117" width="0.0899%" height="15" fill="rgb(238,126,27)" fg:x="2086" fg:w="2"/><text x="94.0028%" y="127.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.09%)</title><rect x="93.7528%" y="101" width="0.0899%" height="15" fill="rgb(249,202,22)" fg:x="2086" fg:w="2"/><text x="94.0028%" y="111.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.13%)</title><rect x="93.7528%" y="149" width="0.1348%" height="15" fill="rgb(254,195,49)" fg:x="2086" fg:w="3"/><text x="94.0028%" y="159.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (3 samples, 0.13%)</title><rect x="93.7528%" y="133" width="0.1348%" height="15" fill="rgb(208,123,14)" fg:x="2086" fg:w="3"/><text x="94.0028%" y="143.50"></text></g><g><title>core::ops::control_flow::ControlFlow&lt;B,C&gt;::break_value (1 samples, 0.04%)</title><rect x="93.8427%" y="117" width="0.0449%" height="15" fill="rgb(224,200,8)" fg:x="2088" fg:w="1"/><text x="94.0927%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (2 samples, 0.09%)</title><rect x="93.8876%" y="149" width="0.0899%" height="15" fill="rgb(217,61,36)" fg:x="2089" fg:w="2"/><text x="94.1376%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (2 samples, 0.09%)</title><rect x="93.8876%" y="133" width="0.0899%" height="15" fill="rgb(206,35,45)" fg:x="2089" fg:w="2"/><text x="94.1376%" y="143.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (2 samples, 0.09%)</title><rect x="93.8876%" y="117" width="0.0899%" height="15" fill="rgb(217,65,33)" fg:x="2089" fg:w="2"/><text x="94.1376%" y="127.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (1 samples, 0.04%)</title><rect x="93.9326%" y="101" width="0.0449%" height="15" fill="rgb(222,158,48)" fg:x="2090" fg:w="1"/><text x="94.1826%" y="111.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="94.0674%" y="69" width="0.0449%" height="15" fill="rgb(254,2,54)" fg:x="2093" fg:w="1"/><text x="94.3174%" y="79.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (9 samples, 0.40%)</title><rect x="93.7528%" y="197" width="0.4045%" height="15" fill="rgb(250,143,38)" fg:x="2086" fg:w="9"/><text x="94.0028%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (9 samples, 0.40%)</title><rect x="93.7528%" y="181" width="0.4045%" height="15" fill="rgb(248,25,0)" fg:x="2086" fg:w="9"/><text x="94.0028%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (9 samples, 0.40%)</title><rect x="93.7528%" y="165" width="0.4045%" height="15" fill="rgb(206,152,27)" fg:x="2086" fg:w="9"/><text x="94.0028%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 0.18%)</title><rect x="93.9775%" y="149" width="0.1798%" height="15" fill="rgb(240,77,30)" fg:x="2091" fg:w="4"/><text x="94.2275%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.18%)</title><rect x="93.9775%" y="133" width="0.1798%" height="15" fill="rgb(231,5,3)" fg:x="2091" fg:w="4"/><text x="94.2275%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.18%)</title><rect x="93.9775%" y="117" width="0.1798%" height="15" fill="rgb(207,226,32)" fg:x="2091" fg:w="4"/><text x="94.2275%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.13%)</title><rect x="94.0225%" y="101" width="0.1348%" height="15" fill="rgb(222,207,47)" fg:x="2092" fg:w="3"/><text x="94.2725%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.13%)</title><rect x="94.0225%" y="85" width="0.1348%" height="15" fill="rgb(229,115,45)" fg:x="2092" fg:w="3"/><text x="94.2725%" y="95.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.04%)</title><rect x="94.1124%" y="69" width="0.0449%" height="15" fill="rgb(224,191,6)" fg:x="2094" fg:w="1"/><text x="94.3624%" y="79.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.04%)</title><rect x="94.1573%" y="197" width="0.0449%" height="15" fill="rgb(230,227,24)" fg:x="2095" fg:w="1"/><text x="94.4073%" y="207.50"></text></g><g><title>polling::epoll::Events::iter (1 samples, 0.04%)</title><rect x="94.2022%" y="197" width="0.0449%" height="15" fill="rgb(228,80,19)" fg:x="2096" fg:w="1"/><text x="94.4522%" y="207.50"></text></g><g><title>core::array::&lt;impl core::ops::index::Index&lt;I&gt; for [T: N]&gt;::index (1 samples, 0.04%)</title><rect x="94.2022%" y="181" width="0.0449%" height="15" fill="rgb(247,229,0)" fg:x="2096" fg:w="1"/><text x="94.4522%" y="191.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.04%)</title><rect x="94.2022%" y="165" width="0.0449%" height="15" fill="rgb(237,194,15)" fg:x="2096" fg:w="1"/><text x="94.4522%" y="175.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.04%)</title><rect x="94.2022%" y="149" width="0.0449%" height="15" fill="rgb(219,203,20)" fg:x="2096" fg:w="1"/><text x="94.4522%" y="159.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.04%)</title><rect x="94.2022%" y="133" width="0.0449%" height="15" fill="rgb(234,128,8)" fg:x="2096" fg:w="1"/><text x="94.4522%" y="143.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="94.2022%" y="117" width="0.0449%" height="15" fill="rgb(248,202,8)" fg:x="2096" fg:w="1"/><text x="94.4522%" y="127.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.09%)</title><rect x="94.3820%" y="181" width="0.0899%" height="15" fill="rgb(206,104,37)" fg:x="2100" fg:w="2"/><text x="94.6320%" y="191.50"></text></g><g><title>&lt;log::Level as core::cmp::PartialOrd&lt;log::LevelFilter&gt;&gt;::le (1 samples, 0.04%)</title><rect x="94.4719%" y="181" width="0.0449%" height="15" fill="rgb(223,8,27)" fg:x="2102" fg:w="1"/><text x="94.7219%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;isize,std::io::error::Error&gt;&gt; (2 samples, 0.09%)</title><rect x="94.5169%" y="181" width="0.0899%" height="15" fill="rgb(216,217,28)" fg:x="2103" fg:w="2"/><text x="94.7669%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::error::Error&gt; (2 samples, 0.09%)</title><rect x="94.5169%" y="165" width="0.0899%" height="15" fill="rgb(249,199,1)" fg:x="2103" fg:w="2"/><text x="94.7669%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::error::repr_bitpacked::Repr&gt; (2 samples, 0.09%)</title><rect x="94.5169%" y="149" width="0.0899%" height="15" fill="rgb(240,85,17)" fg:x="2103" fg:w="2"/><text x="94.7669%" y="159.50"></text></g><g><title>core::time::Duration::from_secs (1 samples, 0.04%)</title><rect x="94.6067%" y="181" width="0.0449%" height="15" fill="rgb(206,108,45)" fg:x="2105" fg:w="1"/><text x="94.8567%" y="191.50"></text></g><g><title>core::time::Duration::new (1 samples, 0.04%)</title><rect x="94.6067%" y="165" width="0.0449%" height="15" fill="rgb(245,210,41)" fg:x="2105" fg:w="1"/><text x="94.8567%" y="175.50"></text></g><g><title>core::num::&lt;impl u64&gt;::checked_add (1 samples, 0.04%)</title><rect x="94.6067%" y="149" width="0.0449%" height="15" fill="rgb(206,13,37)" fg:x="2105" fg:w="1"/><text x="94.8567%" y="159.50"></text></g><g><title>epoll_wait (22 samples, 0.99%)</title><rect x="94.6517%" y="181" width="0.9888%" height="15" fill="rgb(250,61,18)" fg:x="2106" fg:w="22"/><text x="94.9017%" y="191.50"></text></g><g><title>log::max_level (1 samples, 0.04%)</title><rect x="95.6404%" y="181" width="0.0449%" height="15" fill="rgb(235,172,48)" fg:x="2128" fg:w="1"/><text x="95.8904%" y="191.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.04%)</title><rect x="95.6404%" y="165" width="0.0449%" height="15" fill="rgb(249,201,17)" fg:x="2128" fg:w="1"/><text x="95.8904%" y="175.50"></text></g><g><title>polling::epoll::Poller::wait (33 samples, 1.48%)</title><rect x="94.2472%" y="197" width="1.4831%" height="15" fill="rgb(219,208,6)" fg:x="2097" fg:w="33"/><text x="94.4972%" y="207.50"></text></g><g><title>read (1 samples, 0.04%)</title><rect x="95.6854%" y="181" width="0.0449%" height="15" fill="rgb(248,31,23)" fg:x="2129" fg:w="1"/><text x="95.9354%" y="191.50"></text></g><g><title>std::sync::poison::Flag::get (1 samples, 0.04%)</title><rect x="95.7753%" y="149" width="0.0449%" height="15" fill="rgb(245,15,42)" fg:x="2131" fg:w="1"/><text x="96.0253%" y="159.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (1 samples, 0.04%)</title><rect x="95.7753%" y="133" width="0.0449%" height="15" fill="rgb(222,217,39)" fg:x="2131" fg:w="1"/><text x="96.0253%" y="143.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.04%)</title><rect x="95.7753%" y="117" width="0.0449%" height="15" fill="rgb(210,219,27)" fg:x="2131" fg:w="1"/><text x="96.0253%" y="127.50"></text></g><g><title>std::sync::poison::Flag::guard (2 samples, 0.09%)</title><rect x="95.7753%" y="165" width="0.0899%" height="15" fill="rgb(252,166,36)" fg:x="2131" fg:w="2"/><text x="96.0253%" y="175.50"></text></g><g><title>std::thread::panicking (1 samples, 0.04%)</title><rect x="95.8202%" y="149" width="0.0449%" height="15" fill="rgb(245,132,34)" fg:x="2132" fg:w="1"/><text x="96.0702%" y="159.50"></text></g><g><title>std::panicking::panicking (1 samples, 0.04%)</title><rect x="95.8202%" y="133" width="0.0449%" height="15" fill="rgb(236,54,3)" fg:x="2132" fg:w="1"/><text x="96.0702%" y="143.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (1 samples, 0.04%)</title><rect x="95.8202%" y="117" width="0.0449%" height="15" fill="rgb(241,173,43)" fg:x="2132" fg:w="1"/><text x="96.0702%" y="127.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.04%)</title><rect x="95.8202%" y="101" width="0.0449%" height="15" fill="rgb(215,190,9)" fg:x="2132" fg:w="1"/><text x="96.0702%" y="111.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.04%)</title><rect x="95.8202%" y="85" width="0.0449%" height="15" fill="rgb(242,101,16)" fg:x="2132" fg:w="1"/><text x="96.0702%" y="95.50"></text></g><g><title>&lt;tftp::socket::StdSocket as tftp::socket::Socket&gt;::recv_from (56 samples, 2.52%)</title><rect x="93.3933%" y="229" width="2.5169%" height="15" fill="rgb(223,190,21)" fg:x="2078" fg:w="56"/><text x="93.6433%" y="239.50">&lt;t..</text></g><g><title>polling::Poller::wait (48 samples, 2.16%)</title><rect x="93.7528%" y="213" width="2.1573%" height="15" fill="rgb(215,228,25)" fg:x="2086" fg:w="48"/><text x="94.0028%" y="223.50">p..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (4 samples, 0.18%)</title><rect x="95.7303%" y="197" width="0.1798%" height="15" fill="rgb(225,36,22)" fg:x="2130" fg:w="4"/><text x="95.9803%" y="207.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (4 samples, 0.18%)</title><rect x="95.7303%" y="181" width="0.1798%" height="15" fill="rgb(251,106,46)" fg:x="2130" fg:w="4"/><text x="95.9803%" y="191.50"></text></g><g><title>std::sync::poison::map_result (1 samples, 0.04%)</title><rect x="95.8652%" y="165" width="0.0449%" height="15" fill="rgb(208,90,1)" fg:x="2133" fg:w="1"/><text x="96.1152%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::truncate (1 samples, 0.04%)</title><rect x="95.9101%" y="229" width="0.0449%" height="15" fill="rgb(243,10,4)" fg:x="2134" fg:w="1"/><text x="96.1601%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as aead::Buffer&gt;::truncate (1 samples, 0.04%)</title><rect x="96.0899%" y="197" width="0.0449%" height="15" fill="rgb(212,137,27)" fg:x="2138" fg:w="1"/><text x="96.3399%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::truncate (1 samples, 0.04%)</title><rect x="96.0899%" y="181" width="0.0449%" height="15" fill="rgb(231,220,49)" fg:x="2138" fg:w="1"/><text x="96.3399%" y="191.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.04%)</title><rect x="96.1348%" y="149" width="0.0449%" height="15" fill="rgb(237,96,20)" fg:x="2139" fg:w="1"/><text x="96.3848%" y="159.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (1 samples, 0.04%)</title><rect x="96.1348%" y="133" width="0.0449%" height="15" fill="rgb(239,229,30)" fg:x="2139" fg:w="1"/><text x="96.3848%" y="143.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 0.09%)</title><rect x="96.1798%" y="149" width="0.0899%" height="15" fill="rgb(219,65,33)" fg:x="2140" fg:w="2"/><text x="96.4298%" y="159.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.09%)</title><rect x="96.1798%" y="133" width="0.0899%" height="15" fill="rgb(243,134,7)" fg:x="2140" fg:w="2"/><text x="96.4298%" y="143.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.04%)</title><rect x="96.2697%" y="149" width="0.0449%" height="15" fill="rgb(216,177,54)" fg:x="2142" fg:w="1"/><text x="96.5197%" y="159.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.18%)</title><rect x="96.3146%" y="117" width="0.1798%" height="15" fill="rgb(211,160,20)" fg:x="2143" fg:w="4"/><text x="96.5646%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.18%)</title><rect x="96.3146%" y="101" width="0.1798%" height="15" fill="rgb(239,85,39)" fg:x="2143" fg:w="4"/><text x="96.5646%" y="111.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.18%)</title><rect x="96.3146%" y="85" width="0.1798%" height="15" fill="rgb(232,125,22)" fg:x="2143" fg:w="4"/><text x="96.5646%" y="95.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.09%)</title><rect x="96.4045%" y="69" width="0.0899%" height="15" fill="rgb(244,57,34)" fg:x="2145" fg:w="2"/><text x="96.6545%" y="79.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (1 samples, 0.04%)</title><rect x="96.4494%" y="53" width="0.0449%" height="15" fill="rgb(214,203,32)" fg:x="2146" fg:w="1"/><text x="96.6994%" y="63.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (9 samples, 0.40%)</title><rect x="96.1348%" y="165" width="0.4045%" height="15" fill="rgb(207,58,43)" fg:x="2139" fg:w="9"/><text x="96.3848%" y="175.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (5 samples, 0.22%)</title><rect x="96.3146%" y="149" width="0.2247%" height="15" fill="rgb(215,193,15)" fg:x="2143" fg:w="5"/><text x="96.5646%" y="159.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (5 samples, 0.22%)</title><rect x="96.3146%" y="133" width="0.2247%" height="15" fill="rgb(232,15,44)" fg:x="2143" fg:w="5"/><text x="96.5646%" y="143.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (1 samples, 0.04%)</title><rect x="96.4944%" y="117" width="0.0449%" height="15" fill="rgb(212,3,48)" fg:x="2147" fg:w="1"/><text x="96.7444%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (13 samples, 0.58%)</title><rect x="96.7640%" y="85" width="0.5843%" height="15" fill="rgb(218,128,7)" fg:x="2153" fg:w="13"/><text x="97.0140%" y="95.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (8 samples, 0.36%)</title><rect x="96.9888%" y="69" width="0.3596%" height="15" fill="rgb(226,216,39)" fg:x="2158" fg:w="8"/><text x="97.2388%" y="79.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (5 samples, 0.22%)</title><rect x="97.1236%" y="53" width="0.2247%" height="15" fill="rgb(243,47,51)" fg:x="2161" fg:w="5"/><text x="97.3736%" y="63.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (1 samples, 0.04%)</title><rect x="97.3034%" y="37" width="0.0449%" height="15" fill="rgb(241,183,40)" fg:x="2165" fg:w="1"/><text x="97.5534%" y="47.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (21 samples, 0.94%)</title><rect x="96.5393%" y="133" width="0.9438%" height="15" fill="rgb(231,217,32)" fg:x="2148" fg:w="21"/><text x="96.7893%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (20 samples, 0.90%)</title><rect x="96.5843%" y="117" width="0.8989%" height="15" fill="rgb(229,61,38)" fg:x="2149" fg:w="20"/><text x="96.8343%" y="127.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (20 samples, 0.90%)</title><rect x="96.5843%" y="101" width="0.8989%" height="15" fill="rgb(225,210,5)" fg:x="2149" fg:w="20"/><text x="96.8343%" y="111.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.13%)</title><rect x="97.3483%" y="85" width="0.1348%" height="15" fill="rgb(231,79,45)" fg:x="2166" fg:w="3"/><text x="97.5983%" y="95.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as crypto_common::KeyIvInit&gt;::new (31 samples, 1.39%)</title><rect x="96.1348%" y="181" width="1.3933%" height="15" fill="rgb(224,100,7)" fg:x="2139" fg:w="31"/><text x="96.3848%" y="191.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (22 samples, 0.99%)</title><rect x="96.5393%" y="165" width="0.9888%" height="15" fill="rgb(241,198,18)" fg:x="2148" fg:w="22"/><text x="96.7893%" y="175.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (22 samples, 0.99%)</title><rect x="96.5393%" y="149" width="0.9888%" height="15" fill="rgb(252,97,53)" fg:x="2148" fg:w="22"/><text x="96.7893%" y="159.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (1 samples, 0.04%)</title><rect x="97.4831%" y="133" width="0.0449%" height="15" fill="rgb(220,88,7)" fg:x="2169" fg:w="1"/><text x="97.7331%" y="143.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="97.5281%" y="149" width="0.0449%" height="15" fill="rgb(213,176,14)" fg:x="2170" fg:w="1"/><text x="97.7781%" y="159.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.04%)</title><rect x="97.5730%" y="149" width="0.0449%" height="15" fill="rgb(246,73,7)" fg:x="2171" fg:w="1"/><text x="97.8230%" y="159.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (1 samples, 0.04%)</title><rect x="97.5730%" y="133" width="0.0449%" height="15" fill="rgb(245,64,36)" fg:x="2171" fg:w="1"/><text x="97.8230%" y="143.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (1 samples, 0.04%)</title><rect x="97.5730%" y="117" width="0.0449%" height="15" fill="rgb(245,80,10)" fg:x="2171" fg:w="1"/><text x="97.8230%" y="127.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (1 samples, 0.04%)</title><rect x="97.5730%" y="101" width="0.0449%" height="15" fill="rgb(232,107,50)" fg:x="2171" fg:w="1"/><text x="97.8230%" y="111.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.04%)</title><rect x="97.6180%" y="149" width="0.0449%" height="15" fill="rgb(253,3,0)" fg:x="2172" fg:w="1"/><text x="97.8680%" y="159.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::authenticate_lengths (4 samples, 0.18%)</title><rect x="97.5281%" y="165" width="0.1798%" height="15" fill="rgb(212,99,53)" fg:x="2170" fg:w="4"/><text x="97.7781%" y="175.50"></text></g><g><title>universal_hash::UniversalHash::update (1 samples, 0.04%)</title><rect x="97.6629%" y="149" width="0.0449%" height="15" fill="rgb(249,111,54)" fg:x="2173" fg:w="1"/><text x="97.9129%" y="159.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (1 samples, 0.04%)</title><rect x="97.7079%" y="165" width="0.0449%" height="15" fill="rgb(249,55,30)" fg:x="2174" fg:w="1"/><text x="97.9579%" y="175.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.04%)</title><rect x="97.9326%" y="69" width="0.0449%" height="15" fill="rgb(237,47,42)" fg:x="2179" fg:w="1"/><text x="98.1826%" y="79.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.04%)</title><rect x="97.9775%" y="69" width="0.0449%" height="15" fill="rgb(211,20,18)" fg:x="2180" fg:w="1"/><text x="98.2275%" y="79.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.31%)</title><rect x="97.7528%" y="149" width="0.3146%" height="15" fill="rgb(231,203,46)" fg:x="2175" fg:w="7"/><text x="98.0028%" y="159.50"></text></g><g><title>&lt;[Z] as zeroize::Zeroize&gt;::zeroize (7 samples, 0.31%)</title><rect x="97.7528%" y="133" width="0.3146%" height="15" fill="rgb(237,142,3)" fg:x="2175" fg:w="7"/><text x="98.0028%" y="143.50"></text></g><g><title>zeroize::volatile_set (6 samples, 0.27%)</title><rect x="97.7978%" y="117" width="0.2697%" height="15" fill="rgb(241,107,1)" fg:x="2176" fg:w="6"/><text x="98.0478%" y="127.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4 samples, 0.18%)</title><rect x="97.8876%" y="101" width="0.1798%" height="15" fill="rgb(229,83,13)" fg:x="2178" fg:w="4"/><text x="98.1376%" y="111.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3 samples, 0.13%)</title><rect x="97.9326%" y="85" width="0.1348%" height="15" fill="rgb(241,91,40)" fg:x="2179" fg:w="3"/><text x="98.1826%" y="95.50"></text></g><g><title>core::mem::replace (1 samples, 0.04%)</title><rect x="98.0225%" y="69" width="0.0449%" height="15" fill="rgb(225,3,45)" fg:x="2181" fg:w="1"/><text x="98.2725%" y="79.50"></text></g><g><title>core::ptr::read (1 samples, 0.04%)</title><rect x="98.0225%" y="53" width="0.0449%" height="15" fill="rgb(244,223,14)" fg:x="2181" fg:w="1"/><text x="98.2725%" y="63.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.09%)</title><rect x="98.2022%" y="69" width="0.0899%" height="15" fill="rgb(224,124,37)" fg:x="2185" fg:w="2"/><text x="98.4522%" y="79.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.09%)</title><rect x="98.2022%" y="53" width="0.0899%" height="15" fill="rgb(251,171,30)" fg:x="2185" fg:w="2"/><text x="98.4522%" y="63.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (1 samples, 0.04%)</title><rect x="98.2472%" y="37" width="0.0449%" height="15" fill="rgb(236,46,54)" fg:x="2186" fg:w="1"/><text x="98.4972%" y="47.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.04%)</title><rect x="98.2921%" y="69" width="0.0449%" height="15" fill="rgb(245,213,5)" fg:x="2187" fg:w="1"/><text x="98.5421%" y="79.50"></text></g><g><title>core::ptr::drop_in_place&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;chacha20::xchacha::XChaChaCore&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm,typenum::bit::B1&gt;,typenum::bit::B0&gt;,typenum::bit::B1&gt;,typenum::bit::B0&gt;&gt;&gt;&gt; (14 samples, 0.63%)</title><rect x="97.7528%" y="165" width="0.6292%" height="15" fill="rgb(230,144,27)" fg:x="2175" fg:w="14"/><text x="98.0028%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;chacha20::xchacha::XChaChaCore&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm,typenum::bit::B1&gt;,typenum::bit::B0&gt;,typenum::bit::B1&gt;,typenum::bit::B0&gt;&gt;&gt; (7 samples, 0.31%)</title><rect x="98.0674%" y="149" width="0.3146%" height="15" fill="rgb(220,86,6)" fg:x="2182" fg:w="7"/><text x="98.3174%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;chacha20::ChaChaCore&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm,typenum::bit::B1&gt;,typenum::bit::B0&gt;,typenum::bit::B1&gt;,typenum::bit::B0&gt;&gt;&gt; (6 samples, 0.27%)</title><rect x="98.1124%" y="133" width="0.2697%" height="15" fill="rgb(240,20,13)" fg:x="2183" fg:w="6"/><text x="98.3624%" y="143.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.22%)</title><rect x="98.1573%" y="117" width="0.2247%" height="15" fill="rgb(217,89,34)" fg:x="2184" fg:w="5"/><text x="98.4073%" y="127.50"></text></g><g><title>&lt;[Z: N] as zeroize::Zeroize&gt;::zeroize (5 samples, 0.22%)</title><rect x="98.1573%" y="101" width="0.2247%" height="15" fill="rgb(229,13,5)" fg:x="2184" fg:w="5"/><text x="98.4073%" y="111.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;Z&gt; as zeroize::Zeroize&gt;::zeroize (5 samples, 0.22%)</title><rect x="98.1573%" y="85" width="0.2247%" height="15" fill="rgb(244,67,35)" fg:x="2184" fg:w="5"/><text x="98.4073%" y="95.50"></text></g><g><title>&lt;Z as zeroize::Zeroize&gt;::zeroize (1 samples, 0.04%)</title><rect x="98.3371%" y="69" width="0.0449%" height="15" fill="rgb(221,40,2)" fg:x="2188" fg:w="1"/><text x="98.5871%" y="79.50"></text></g><g><title>zeroize::atomic_fence (1 samples, 0.04%)</title><rect x="98.3371%" y="53" width="0.0449%" height="15" fill="rgb(237,157,21)" fg:x="2188" fg:w="1"/><text x="98.5871%" y="63.50"></text></g><g><title>core::sync::atomic::compiler_fence (1 samples, 0.04%)</title><rect x="98.3371%" y="37" width="0.0449%" height="15" fill="rgb(222,94,11)" fg:x="2188" fg:w="1"/><text x="98.5871%" y="47.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.04%)</title><rect x="98.3820%" y="149" width="0.0449%" height="15" fill="rgb(249,113,6)" fg:x="2189" fg:w="1"/><text x="98.6320%" y="159.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.04%)</title><rect x="98.3820%" y="133" width="0.0449%" height="15" fill="rgb(238,137,36)" fg:x="2189" fg:w="1"/><text x="98.6320%" y="143.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at (1 samples, 0.04%)</title><rect x="98.4270%" y="133" width="0.0449%" height="15" fill="rgb(210,102,26)" fg:x="2190" fg:w="1"/><text x="98.6770%" y="143.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (53 samples, 2.38%)</title><rect x="96.1348%" y="197" width="2.3820%" height="15" fill="rgb(218,30,30)" fg:x="2139" fg:w="53"/><text x="96.3848%" y="207.50">&lt;c..</text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::decrypt_in_place_detached (22 samples, 0.99%)</title><rect x="97.5281%" y="181" width="0.9888%" height="15" fill="rgb(214,67,26)" fg:x="2170" fg:w="22"/><text x="97.7781%" y="191.50"></text></g><g><title>universal_hash::UniversalHash::update_padded (3 samples, 0.13%)</title><rect x="98.3820%" y="165" width="0.1348%" height="15" fill="rgb(251,9,53)" fg:x="2189" fg:w="3"/><text x="98.6320%" y="175.50"></text></g><g><title>universal_hash::to_blocks (2 samples, 0.09%)</title><rect x="98.4270%" y="149" width="0.0899%" height="15" fill="rgb(228,204,25)" fg:x="2190" fg:w="2"/><text x="98.6770%" y="159.50"></text></g><g><title>core::slice::raw::from_raw_parts (1 samples, 0.04%)</title><rect x="98.4719%" y="133" width="0.0449%" height="15" fill="rgb(207,153,8)" fg:x="2191" fg:w="1"/><text x="98.7219%" y="143.50"></text></g><g><title>&lt;typenum::bit::B0 as typenum::marker_traits::Bit&gt;::to_u8 (2 samples, 0.09%)</title><rect x="98.5618%" y="181" width="0.0899%" height="15" fill="rgb(242,9,16)" fg:x="2193" fg:w="2"/><text x="98.8118%" y="191.50"></text></g><g><title>&lt;typenum::uint::UInt&lt;U,B&gt; as typenum::marker_traits::Unsigned&gt;::to_usize (5 samples, 0.22%)</title><rect x="98.5169%" y="197" width="0.2247%" height="15" fill="rgb(217,211,10)" fg:x="2192" fg:w="5"/><text x="98.7669%" y="207.50"></text></g><g><title>&lt;typenum::uint::UInt&lt;U,B&gt; as typenum::marker_traits::Unsigned&gt;::to_usize (2 samples, 0.09%)</title><rect x="98.6517%" y="181" width="0.0899%" height="15" fill="rgb(219,228,52)" fg:x="2195" fg:w="2"/><text x="98.9017%" y="191.50"></text></g><g><title>&lt;typenum::uint::UInt&lt;U,B&gt; as typenum::marker_traits::Unsigned&gt;::to_usize (2 samples, 0.09%)</title><rect x="98.6517%" y="165" width="0.0899%" height="15" fill="rgb(231,92,29)" fg:x="2195" fg:w="2"/><text x="98.9017%" y="175.50"></text></g><g><title>&lt;typenum::uint::UInt&lt;U,B&gt; as typenum::marker_traits::Unsigned&gt;::to_usize (1 samples, 0.04%)</title><rect x="98.6966%" y="149" width="0.0449%" height="15" fill="rgb(232,8,23)" fg:x="2196" fg:w="1"/><text x="98.9466%" y="159.50"></text></g><g><title>&lt;typenum::uint::UInt&lt;U,B&gt; as typenum::marker_traits::Unsigned&gt;::to_usize (1 samples, 0.04%)</title><rect x="98.6966%" y="133" width="0.0449%" height="15" fill="rgb(216,211,34)" fg:x="2196" fg:w="1"/><text x="98.9466%" y="143.50"></text></g><g><title>&lt;typenum::uint::UTerm as typenum::marker_traits::Unsigned&gt;::to_usize (1 samples, 0.04%)</title><rect x="98.6966%" y="117" width="0.0449%" height="15" fill="rgb(236,151,0)" fg:x="2196" fg:w="1"/><text x="98.9466%" y="127.50"></text></g><g><title>aead::Buffer::len (1 samples, 0.04%)</title><rect x="98.7416%" y="197" width="0.0449%" height="15" fill="rgb(209,168,3)" fg:x="2197" fg:w="1"/><text x="98.9916%" y="207.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut (1 samples, 0.04%)</title><rect x="98.7865%" y="197" width="0.0449%" height="15" fill="rgb(208,129,28)" fg:x="2198" fg:w="1"/><text x="99.0365%" y="207.50"></text></g><g><title>&lt;tftp::socket::EncryptionBoundSocket&lt;S&gt; as tftp::socket::Socket&gt;::recv_from (125 samples, 5.62%)</title><rect x="93.2584%" y="245" width="5.6180%" height="15" fill="rgb(229,78,22)" fg:x="2075" fg:w="125"/><text x="93.5084%" y="255.50">&lt;tftp::..</text></g><g><title>tftp::encryption::Encryptor::decrypt (65 samples, 2.92%)</title><rect x="95.9551%" y="229" width="2.9213%" height="15" fill="rgb(228,187,13)" fg:x="2135" fg:w="65"/><text x="96.2051%" y="239.50">tf..</text></g><g><title>aead::AeadInPlace::decrypt_in_place (64 samples, 2.88%)</title><rect x="96.0000%" y="213" width="2.8764%" height="15" fill="rgb(240,119,24)" fg:x="2136" fg:w="64"/><text x="96.2500%" y="223.50">ae..</text></g><g><title>generic_array::GenericArray&lt;T,N&gt;::from_slice (1 samples, 0.04%)</title><rect x="98.8315%" y="197" width="0.0449%" height="15" fill="rgb(209,194,42)" fg:x="2199" fg:w="1"/><text x="99.0815%" y="207.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.04%)</title><rect x="98.8315%" y="181" width="0.0449%" height="15" fill="rgb(247,200,46)" fg:x="2199" fg:w="1"/><text x="99.0815%" y="191.50"></text></g><g><title>&lt;alloc::vec::ExtendElement&lt;T&gt; as alloc::vec::ExtendWith&lt;T&gt;&gt;::next (1 samples, 0.04%)</title><rect x="98.8764%" y="213" width="0.0449%" height="15" fill="rgb(218,76,16)" fg:x="2200" fg:w="1"/><text x="99.1264%" y="223.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.04%)</title><rect x="98.9213%" y="181" width="0.0449%" height="15" fill="rgb(225,21,48)" fg:x="2201" fg:w="1"/><text x="99.1713%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (3 samples, 0.13%)</title><rect x="98.8764%" y="245" width="0.1348%" height="15" fill="rgb(239,223,50)" fg:x="2200" fg:w="3"/><text x="99.1264%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (3 samples, 0.13%)</title><rect x="98.8764%" y="229" width="0.1348%" height="15" fill="rgb(244,45,21)" fg:x="2200" fg:w="3"/><text x="99.1264%" y="239.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.09%)</title><rect x="98.9213%" y="213" width="0.0899%" height="15" fill="rgb(232,33,43)" fg:x="2201" fg:w="2"/><text x="99.1713%" y="223.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.09%)</title><rect x="98.9213%" y="197" width="0.0899%" height="15" fill="rgb(209,8,3)" fg:x="2201" fg:w="2"/><text x="99.1713%" y="207.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.04%)</title><rect x="98.9663%" y="181" width="0.0449%" height="15" fill="rgb(214,25,53)" fg:x="2202" fg:w="1"/><text x="99.2163%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::truncate (1 samples, 0.04%)</title><rect x="99.0112%" y="245" width="0.0449%" height="15" fill="rgb(254,186,54)" fg:x="2203" fg:w="1"/><text x="99.2612%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::error::Error&gt; (2 samples, 0.09%)</title><rect x="99.0562%" y="245" width="0.0899%" height="15" fill="rgb(208,174,49)" fg:x="2204" fg:w="2"/><text x="99.3062%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::error::repr_bitpacked::Repr&gt; (1 samples, 0.04%)</title><rect x="99.1011%" y="229" width="0.0449%" height="15" fill="rgb(233,191,51)" fg:x="2205" fg:w="1"/><text x="99.3511%" y="239.50"></text></g><g><title>&lt;std::io::error::repr_bitpacked::Repr as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="99.1011%" y="213" width="0.0449%" height="15" fill="rgb(222,134,10)" fg:x="2205" fg:w="1"/><text x="99.3511%" y="223.50"></text></g><g><title>std::io::error::repr_bitpacked::decode_repr (1 samples, 0.04%)</title><rect x="99.1011%" y="197" width="0.0449%" height="15" fill="rgb(230,226,20)" fg:x="2205" fg:w="1"/><text x="99.3511%" y="207.50"></text></g><g><title>&lt;tftp::packet::Packet as tftp::packet::ByteConverter&gt;::to_bytes (1 samples, 0.04%)</title><rect x="99.2360%" y="229" width="0.0449%" height="15" fill="rgb(251,111,25)" fg:x="2208" fg:w="1"/><text x="99.4860%" y="239.50"></text></g><g><title>&lt;tftp::packet::AckPacket as tftp::packet::ByteConverter&gt;::to_bytes (1 samples, 0.04%)</title><rect x="99.2360%" y="213" width="0.0449%" height="15" fill="rgb(224,40,46)" fg:x="2208" fg:w="1"/><text x="99.4860%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.04%)</title><rect x="99.2360%" y="197" width="0.0449%" height="15" fill="rgb(236,108,47)" fg:x="2208" fg:w="1"/><text x="99.4860%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="99.2360%" y="181" width="0.0449%" height="15" fill="rgb(234,93,0)" fg:x="2208" fg:w="1"/><text x="99.4860%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="99.2360%" y="165" width="0.0449%" height="15" fill="rgb(224,213,32)" fg:x="2208" fg:w="1"/><text x="99.4860%" y="175.50"></text></g><g><title>&lt;tftp::socket::StdSocket as tftp::socket::Socket&gt;::send_to (1 samples, 0.04%)</title><rect x="99.2809%" y="213" width="0.0449%" height="15" fill="rgb(251,11,48)" fg:x="2209" fg:w="1"/><text x="99.5309%" y="223.50"></text></g><g><title>std::net::udp::UdpSocket::send_to (1 samples, 0.04%)</title><rect x="99.2809%" y="197" width="0.0449%" height="15" fill="rgb(236,173,5)" fg:x="2209" fg:w="1"/><text x="99.5309%" y="207.50"></text></g><g><title>&lt;tftp::socket::EncryptionBoundSocket&lt;S&gt; as tftp::socket::Socket&gt;::send_to (2 samples, 0.09%)</title><rect x="99.2809%" y="229" width="0.0899%" height="15" fill="rgb(230,95,12)" fg:x="2209" fg:w="2"/><text x="99.5309%" y="239.50"></text></g><g><title>tftp::encryption::Encryptor::encrypt (1 samples, 0.04%)</title><rect x="99.3258%" y="213" width="0.0449%" height="15" fill="rgb(232,209,1)" fg:x="2210" fg:w="1"/><text x="99.5758%" y="223.50"></text></g><g><title>aead::AeadInPlace::encrypt_in_place (1 samples, 0.04%)</title><rect x="99.3258%" y="197" width="0.0449%" height="15" fill="rgb(232,6,1)" fg:x="2210" fg:w="1"/><text x="99.5758%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as aead::Buffer&gt;::extend_from_slice (1 samples, 0.04%)</title><rect x="99.3258%" y="181" width="0.0449%" height="15" fill="rgb(210,224,50)" fg:x="2210" fg:w="1"/><text x="99.5758%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.04%)</title><rect x="99.3258%" y="165" width="0.0449%" height="15" fill="rgb(228,127,35)" fg:x="2210" fg:w="1"/><text x="99.5758%" y="175.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.04%)</title><rect x="99.3258%" y="149" width="0.0449%" height="15" fill="rgb(245,102,45)" fg:x="2210" fg:w="1"/><text x="99.5758%" y="159.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="99.3258%" y="133" width="0.0449%" height="15" fill="rgb(214,1,49)" fg:x="2210" fg:w="1"/><text x="99.5758%" y="143.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (1 samples, 0.04%)</title><rect x="99.4607%" y="213" width="0.0449%" height="15" fill="rgb(226,163,40)" fg:x="2213" fg:w="1"/><text x="99.7107%" y="223.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="99.4607%" y="197" width="0.0449%" height="15" fill="rgb(239,212,28)" fg:x="2213" fg:w="1"/><text x="99.7107%" y="207.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove (1 samples, 0.04%)</title><rect x="99.5056%" y="213" width="0.0449%" height="15" fill="rgb(220,20,13)" fg:x="2214" fg:w="1"/><text x="99.7556%" y="223.50"></text></g><g><title>&lt;tftp::storage::FileWriter&lt;T&gt; as tftp::storage::BlockWriter&gt;::write_block (5 samples, 0.22%)</title><rect x="99.3708%" y="229" width="0.2247%" height="15" fill="rgb(210,164,35)" fg:x="2211" fg:w="5"/><text x="99.6208%" y="239.50"></text></g><g><title>tftp::storage::BlockMapper::index (1 samples, 0.04%)</title><rect x="99.5506%" y="213" width="0.0449%" height="15" fill="rgb(248,109,41)" fg:x="2215" fg:w="1"/><text x="99.8006%" y="223.50"></text></g><g><title>tftp::client::client::write_block (13 samples, 0.58%)</title><rect x="99.1461%" y="245" width="0.5843%" height="15" fill="rgb(238,23,50)" fg:x="2206" fg:w="13"/><text x="99.3961%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 0.13%)</title><rect x="99.5955%" y="229" width="0.1348%" height="15" fill="rgb(211,48,49)" fg:x="2216" fg:w="3"/><text x="99.8455%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3 samples, 0.13%)</title><rect x="99.5955%" y="213" width="0.1348%" height="15" fill="rgb(223,36,21)" fg:x="2216" fg:w="3"/><text x="99.8455%" y="223.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.13%)</title><rect x="99.5955%" y="197" width="0.1348%" height="15" fill="rgb(207,123,46)" fg:x="2216" fg:w="3"/><text x="99.8455%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.04%)</title><rect x="99.6854%" y="181" width="0.0449%" height="15" fill="rgb(240,218,32)" fg:x="2218" fg:w="1"/><text x="99.9354%" y="191.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.04%)</title><rect x="99.6854%" y="165" width="0.0449%" height="15" fill="rgb(252,5,43)" fg:x="2218" fg:w="1"/><text x="99.9354%" y="175.50"></text></g><g><title>cfree (1 samples, 0.04%)</title><rect x="99.6854%" y="149" width="0.0449%" height="15" fill="rgb(252,84,19)" fg:x="2218" fg:w="1"/><text x="99.9354%" y="159.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="99.6854%" y="133" width="0.0449%" height="15" fill="rgb(243,152,39)" fg:x="2218" fg:w="1"/><text x="99.9354%" y="143.50"></text></g><g><title>tftp::instant_callback (2 samples, 0.09%)</title><rect x="99.7303%" y="245" width="0.0899%" height="15" fill="rgb(234,160,15)" fg:x="2219" fg:w="2"/><text x="99.9803%" y="255.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (2 samples, 0.09%)</title><rect x="99.7303%" y="229" width="0.0899%" height="15" fill="rgb(237,34,20)" fg:x="2219" fg:w="2"/><text x="99.9803%" y="239.50"></text></g><g><title>clock_gettime (2 samples, 0.09%)</title><rect x="99.7303%" y="213" width="0.0899%" height="15" fill="rgb(229,97,13)" fg:x="2219" fg:w="2"/><text x="99.9803%" y="223.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (2 samples, 0.09%)</title><rect x="99.8652%" y="213" width="0.0899%" height="15" fill="rgb(234,71,50)" fg:x="2222" fg:w="2"/><text x="100.1152%" y="223.50"></text></g><g><title>all (2,225 samples, 100%)</title><rect x="0.0000%" y="597" width="100.0000%" height="15" fill="rgb(253,155,4)" fg:x="0" fg:w="2225"/><text x="0.2500%" y="607.50"></text></g><g><title>tftp (2,225 samples, 100.00%)</title><rect x="0.0000%" y="581" width="100.0000%" height="15" fill="rgb(222,185,37)" fg:x="0" fg:w="2225"/><text x="0.2500%" y="591.50">tftp</text></g><g><title>_start (163 samples, 7.33%)</title><rect x="92.6742%" y="565" width="7.3258%" height="15" fill="rgb(251,177,13)" fg:x="2062" fg:w="163"/><text x="92.9242%" y="575.50">_start</text></g><g><title>__libc_start_main (163 samples, 7.33%)</title><rect x="92.6742%" y="549" width="7.3258%" height="15" fill="rgb(250,179,40)" fg:x="2062" fg:w="163"/><text x="92.9242%" y="559.50">__libc_sta..</text></g><g><title>[libc.so.6] (163 samples, 7.33%)</title><rect x="92.6742%" y="533" width="7.3258%" height="15" fill="rgb(242,44,2)" fg:x="2062" fg:w="163"/><text x="92.9242%" y="543.50">[libc.so.6]</text></g><g><title>main (163 samples, 7.33%)</title><rect x="92.6742%" y="517" width="7.3258%" height="15" fill="rgb(216,177,13)" fg:x="2062" fg:w="163"/><text x="92.9242%" y="527.50">main</text></g><g><title>std::rt::lang_start (163 samples, 7.33%)</title><rect x="92.6742%" y="501" width="7.3258%" height="15" fill="rgb(216,106,43)" fg:x="2062" fg:w="163"/><text x="92.9242%" y="511.50">std::rt::l..</text></g><g><title>std::rt::lang_start_internal (163 samples, 7.33%)</title><rect x="92.6742%" y="485" width="7.3258%" height="15" fill="rgb(216,183,2)" fg:x="2062" fg:w="163"/><text x="92.9242%" y="495.50">std::rt::l..</text></g><g><title>std::panic::catch_unwind (163 samples, 7.33%)</title><rect x="92.6742%" y="469" width="7.3258%" height="15" fill="rgb(249,75,3)" fg:x="2062" fg:w="163"/><text x="92.9242%" y="479.50">std::panic..</text></g><g><title>std::panicking::try (163 samples, 7.33%)</title><rect x="92.6742%" y="453" width="7.3258%" height="15" fill="rgb(219,67,39)" fg:x="2062" fg:w="163"/><text x="92.9242%" y="463.50">std::panic..</text></g><g><title>std::panicking::try::do_call (163 samples, 7.33%)</title><rect x="92.6742%" y="437" width="7.3258%" height="15" fill="rgb(253,228,2)" fg:x="2062" fg:w="163"/><text x="92.9242%" y="447.50">std::panic..</text></g><g><title>std::rt::lang_start_internal::{{closure}} (163 samples, 7.33%)</title><rect x="92.6742%" y="421" width="7.3258%" height="15" fill="rgb(235,138,27)" fg:x="2062" fg:w="163"/><text x="92.9242%" y="431.50">std::rt::l..</text></g><g><title>std::panic::catch_unwind (163 samples, 7.33%)</title><rect x="92.6742%" y="405" width="7.3258%" height="15" fill="rgb(236,97,51)" fg:x="2062" fg:w="163"/><text x="92.9242%" y="415.50">std::panic..</text></g><g><title>std::panicking::try (163 samples, 7.33%)</title><rect x="92.6742%" y="389" width="7.3258%" height="15" fill="rgb(240,80,30)" fg:x="2062" fg:w="163"/><text x="92.9242%" y="399.50">std::panic..</text></g><g><title>std::panicking::try::do_call (163 samples, 7.33%)</title><rect x="92.6742%" y="373" width="7.3258%" height="15" fill="rgb(230,178,19)" fg:x="2062" fg:w="163"/><text x="92.9242%" y="383.50">std::panic..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (163 samples, 7.33%)</title><rect x="92.6742%" y="357" width="7.3258%" height="15" fill="rgb(210,190,27)" fg:x="2062" fg:w="163"/><text x="92.9242%" y="367.50">core::ops:..</text></g><g><title>std::rt::lang_start::{{closure}} (163 samples, 7.33%)</title><rect x="92.6742%" y="341" width="7.3258%" height="15" fill="rgb(222,107,31)" fg:x="2062" fg:w="163"/><text x="92.9242%" y="351.50">std::rt::l..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (163 samples, 7.33%)</title><rect x="92.6742%" y="325" width="7.3258%" height="15" fill="rgb(216,127,34)" fg:x="2062" fg:w="163"/><text x="92.9242%" y="335.50">std::sys_c..</text></g><g><title>core::ops::function::FnOnce::call_once (163 samples, 7.33%)</title><rect x="92.6742%" y="309" width="7.3258%" height="15" fill="rgb(234,116,52)" fg:x="2062" fg:w="163"/><text x="92.9242%" y="319.50">core::ops:..</text></g><g><title>tftp::main (163 samples, 7.33%)</title><rect x="92.6742%" y="293" width="7.3258%" height="15" fill="rgb(222,124,15)" fg:x="2062" fg:w="163"/><text x="92.9242%" y="303.50">tftp::main</text></g><g><title>tftp::start_receive (162 samples, 7.28%)</title><rect x="92.7191%" y="277" width="7.2809%" height="15" fill="rgb(231,179,28)" fg:x="2063" fg:w="162"/><text x="92.9691%" y="287.50">tftp::star..</text></g><g><title>tftp::client::client::receive_file (162 samples, 7.28%)</title><rect x="92.7191%" y="261" width="7.2809%" height="15" fill="rgb(226,93,45)" fg:x="2063" fg:w="162"/><text x="92.9691%" y="271.50">tftp::clie..</text></g><g><title>tftp::packet::PacketType::from_bytes (4 samples, 0.18%)</title><rect x="99.8202%" y="245" width="0.1798%" height="15" fill="rgb(215,8,51)" fg:x="2221" fg:w="4"/><text x="100.0702%" y="255.50"></text></g><g><title>tftp::packet::try_from (4 samples, 0.18%)</title><rect x="99.8202%" y="229" width="0.1798%" height="15" fill="rgb(223,106,5)" fg:x="2221" fg:w="4"/><text x="100.0702%" y="239.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.04%)</title><rect x="99.9551%" y="213" width="0.0449%" height="15" fill="rgb(250,191,5)" fg:x="2224" fg:w="1"/><text x="100.2051%" y="223.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.04%)</title><rect x="99.9551%" y="197" width="0.0449%" height="15" fill="rgb(242,132,44)" fg:x="2224" fg:w="1"/><text x="100.2051%" y="207.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.04%)</title><rect x="99.9551%" y="181" width="0.0449%" height="15" fill="rgb(251,152,29)" fg:x="2224" fg:w="1"/><text x="100.2051%" y="191.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="99.9551%" y="165" width="0.0449%" height="15" fill="rgb(218,179,5)" fg:x="2224" fg:w="1"/><text x="100.2051%" y="175.50"></text></g></svg></svg>