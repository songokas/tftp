<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="774" onload="init(evt)" viewBox="0 0 1200 774" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="774" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="757.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="757.00"> </text><svg id="frames" x="10" width="1180" total_samples="3254"><g><title>perf_event_comm (1 samples, 0.03%)</title><rect x="0.0000%" y="581" width="0.0307%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="591.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.03%)</title><rect x="0.0000%" y="565" width="0.0307%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="575.50"></text></g><g><title>preempt_count_add (1 samples, 0.03%)</title><rect x="0.0000%" y="549" width="0.0307%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="559.50"></text></g><g><title>ctx_resched (2 samples, 0.06%)</title><rect x="0.0307%" y="565" width="0.0615%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="2"/><text x="0.2807%" y="575.50"></text></g><g><title>perf_ctx_enable (2 samples, 0.06%)</title><rect x="0.0307%" y="549" width="0.0615%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="2"/><text x="0.2807%" y="559.50"></text></g><g><title>amd_pmu_enable_all (2 samples, 0.06%)</title><rect x="0.0307%" y="533" width="0.0615%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="2"/><text x="0.2807%" y="543.50"></text></g><g><title>x86_pmu_enable_event (1 samples, 0.03%)</title><rect x="0.0615%" y="517" width="0.0307%" height="15" fill="rgb(207,160,47)" fg:x="2" fg:w="1"/><text x="0.3115%" y="527.50"></text></g><g><title>perf-exec (4 samples, 0.12%)</title><rect x="0.0000%" y="709" width="0.1229%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="4"/><text x="0.2500%" y="719.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4 samples, 0.12%)</title><rect x="0.0000%" y="693" width="0.1229%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="4"/><text x="0.2500%" y="703.50"></text></g><g><title>do_syscall_64 (4 samples, 0.12%)</title><rect x="0.0000%" y="677" width="0.1229%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="4"/><text x="0.2500%" y="687.50"></text></g><g><title>__x64_sys_execve (4 samples, 0.12%)</title><rect x="0.0000%" y="661" width="0.1229%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="4"/><text x="0.2500%" y="671.50"></text></g><g><title>do_execveat_common.isra.0 (4 samples, 0.12%)</title><rect x="0.0000%" y="645" width="0.1229%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="4"/><text x="0.2500%" y="655.50"></text></g><g><title>bprm_execve (4 samples, 0.12%)</title><rect x="0.0000%" y="629" width="0.1229%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="4"/><text x="0.2500%" y="639.50"></text></g><g><title>load_elf_binary (4 samples, 0.12%)</title><rect x="0.0000%" y="613" width="0.1229%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="4"/><text x="0.2500%" y="623.50"></text></g><g><title>begin_new_exec (4 samples, 0.12%)</title><rect x="0.0000%" y="597" width="0.1229%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="4"/><text x="0.2500%" y="607.50"></text></g><g><title>perf_event_exec (3 samples, 0.09%)</title><rect x="0.0307%" y="581" width="0.0922%" height="15" fill="rgb(231,73,38)" fg:x="1" fg:w="3"/><text x="0.2807%" y="591.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.03%)</title><rect x="0.0922%" y="565" width="0.0307%" height="15" fill="rgb(225,20,46)" fg:x="3" fg:w="1"/><text x="0.3422%" y="575.50"></text></g><g><title>&lt;rustix::backend::event::epoll::Iter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="0.1229%" y="693" width="0.0307%" height="15" fill="rgb(210,31,41)" fg:x="4" fg:w="1"/><text x="0.3729%" y="703.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (1 samples, 0.03%)</title><rect x="0.1537%" y="677" width="0.0307%" height="15" fill="rgb(221,200,47)" fg:x="5" fg:w="1"/><text x="0.4037%" y="687.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="0.1844%" y="677" width="0.0307%" height="15" fill="rgb(226,26,5)" fg:x="6" fg:w="1"/><text x="0.4344%" y="687.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.03%)</title><rect x="0.2151%" y="677" width="0.0307%" height="15" fill="rgb(249,33,26)" fg:x="7" fg:w="1"/><text x="0.4651%" y="687.50"></text></g><g><title>core::slice::iter::ChunksExactMut&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="0.2459%" y="677" width="0.0307%" height="15" fill="rgb(235,183,28)" fg:x="8" fg:w="1"/><text x="0.4959%" y="687.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut_unchecked (1 samples, 0.03%)</title><rect x="0.2459%" y="661" width="0.0307%" height="15" fill="rgb(221,5,38)" fg:x="8" fg:w="1"/><text x="0.4959%" y="671.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.03%)</title><rect x="0.2459%" y="645" width="0.0307%" height="15" fill="rgb(247,18,42)" fg:x="8" fg:w="1"/><text x="0.4959%" y="655.50"></text></g><g><title>[[heap]] (5 samples, 0.15%)</title><rect x="0.1537%" y="693" width="0.1537%" height="15" fill="rgb(241,131,45)" fg:x="5" fg:w="5"/><text x="0.4037%" y="703.50"></text></g><g><title>rustix::time::timerfd::timerfd_settime (1 samples, 0.03%)</title><rect x="0.2766%" y="677" width="0.0307%" height="15" fill="rgb(249,31,29)" fg:x="9" fg:w="1"/><text x="0.5266%" y="687.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.03%)</title><rect x="0.3073%" y="677" width="0.0307%" height="15" fill="rgb(225,111,53)" fg:x="10" fg:w="1"/><text x="0.5573%" y="687.50"></text></g><g><title>&lt;[T] as subtle::ConstantTimeEq&gt;::ct_eq (1 samples, 0.03%)</title><rect x="0.3380%" y="677" width="0.0307%" height="15" fill="rgb(238,160,17)" fg:x="11" fg:w="1"/><text x="0.5880%" y="687.50"></text></g><g><title>&lt;alloc::vec::set_len_on_drop::SetLenOnDrop as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="0.3688%" y="677" width="0.0307%" height="15" fill="rgb(214,148,48)" fg:x="12" fg:w="1"/><text x="0.6188%" y="687.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (1 samples, 0.03%)</title><rect x="0.3995%" y="677" width="0.0307%" height="15" fill="rgb(232,36,49)" fg:x="13" fg:w="1"/><text x="0.6495%" y="687.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (14 samples, 0.43%)</title><rect x="0.4302%" y="677" width="0.4302%" height="15" fill="rgb(209,103,24)" fg:x="14" fg:w="14"/><text x="0.6802%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (22 samples, 0.68%)</title><rect x="0.8605%" y="677" width="0.6761%" height="15" fill="rgb(229,88,8)" fg:x="28" fg:w="22"/><text x="1.1105%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.03%)</title><rect x="1.5366%" y="677" width="0.0307%" height="15" fill="rgb(213,181,19)" fg:x="50" fg:w="1"/><text x="1.7866%" y="687.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (6 samples, 0.18%)</title><rect x="1.5673%" y="677" width="0.1844%" height="15" fill="rgb(254,191,54)" fg:x="51" fg:w="6"/><text x="1.8173%" y="687.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.03%)</title><rect x="1.7517%" y="677" width="0.0307%" height="15" fill="rgb(241,83,37)" fg:x="57" fg:w="1"/><text x="2.0017%" y="687.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.03%)</title><rect x="1.7824%" y="677" width="0.0307%" height="15" fill="rgb(233,36,39)" fg:x="58" fg:w="1"/><text x="2.0324%" y="687.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.03%)</title><rect x="1.8439%" y="661" width="0.0307%" height="15" fill="rgb(226,3,54)" fg:x="60" fg:w="1"/><text x="2.0939%" y="671.50"></text></g><g><title>&lt;core::slice::iter::ChunksExact&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (3 samples, 0.09%)</title><rect x="1.8132%" y="677" width="0.0922%" height="15" fill="rgb(245,192,40)" fg:x="59" fg:w="3"/><text x="2.0632%" y="687.50"></text></g><g><title>core::slice::raw::from_raw_parts (1 samples, 0.03%)</title><rect x="1.8746%" y="661" width="0.0307%" height="15" fill="rgb(238,167,29)" fg:x="61" fg:w="1"/><text x="2.1246%" y="671.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.03%)</title><rect x="1.8746%" y="645" width="0.0307%" height="15" fill="rgb(232,182,51)" fg:x="61" fg:w="1"/><text x="2.1246%" y="655.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::cast (1 samples, 0.03%)</title><rect x="1.8746%" y="629" width="0.0307%" height="15" fill="rgb(231,60,39)" fg:x="61" fg:w="1"/><text x="2.1246%" y="639.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.03%)</title><rect x="1.9053%" y="677" width="0.0307%" height="15" fill="rgb(208,69,12)" fg:x="62" fg:w="1"/><text x="2.1553%" y="687.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.03%)</title><rect x="2.6736%" y="661" width="0.0307%" height="15" fill="rgb(235,93,37)" fg:x="87" fg:w="1"/><text x="2.9236%" y="671.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (1 samples, 0.03%)</title><rect x="2.7044%" y="661" width="0.0307%" height="15" fill="rgb(213,116,39)" fg:x="88" fg:w="1"/><text x="2.9544%" y="671.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (5 samples, 0.15%)</title><rect x="2.7351%" y="661" width="0.1537%" height="15" fill="rgb(222,207,29)" fg:x="89" fg:w="5"/><text x="2.9851%" y="671.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (2 samples, 0.06%)</title><rect x="2.8273%" y="645" width="0.0615%" height="15" fill="rgb(206,96,30)" fg:x="92" fg:w="2"/><text x="3.0773%" y="655.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (33 samples, 1.01%)</title><rect x="1.9361%" y="677" width="1.0141%" height="15" fill="rgb(218,138,4)" fg:x="63" fg:w="33"/><text x="2.1861%" y="687.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (2 samples, 0.06%)</title><rect x="2.8888%" y="661" width="0.0615%" height="15" fill="rgb(250,191,14)" fg:x="94" fg:w="2"/><text x="3.1388%" y="671.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (60 samples, 1.84%)</title><rect x="5.1014%" y="661" width="1.8439%" height="15" fill="rgb(239,60,40)" fg:x="166" fg:w="60"/><text x="5.3514%" y="671.50">&lt;..</text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_mut (1 samples, 0.03%)</title><rect x="6.9453%" y="661" width="0.0307%" height="15" fill="rgb(206,27,48)" fg:x="226" fg:w="1"/><text x="7.1953%" y="671.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_sub (6 samples, 0.18%)</title><rect x="8.4511%" y="645" width="0.1844%" height="15" fill="rgb(225,35,8)" fg:x="275" fg:w="6"/><text x="8.7011%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::cast (6 samples, 0.18%)</title><rect x="8.6355%" y="645" width="0.1844%" height="15" fill="rgb(250,213,24)" fg:x="281" fg:w="6"/><text x="8.8855%" y="655.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (195 samples, 5.99%)</title><rect x="2.9502%" y="677" width="5.9926%" height="15" fill="rgb(247,123,22)" fg:x="96" fg:w="195"/><text x="3.2002%" y="687.50">&lt;core::s..</text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (64 samples, 1.97%)</title><rect x="6.9760%" y="661" width="1.9668%" height="15" fill="rgb(231,138,38)" fg:x="227" fg:w="64"/><text x="7.2260%" y="671.50">c..</text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (4 samples, 0.12%)</title><rect x="8.8199%" y="645" width="0.1229%" height="15" fill="rgb(231,145,46)" fg:x="287" fg:w="4"/><text x="9.0699%" y="655.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.03%)</title><rect x="8.9121%" y="629" width="0.0307%" height="15" fill="rgb(251,118,11)" fg:x="290" fg:w="1"/><text x="9.1621%" y="639.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (3 samples, 0.09%)</title><rect x="8.9428%" y="677" width="0.0922%" height="15" fill="rgb(217,147,25)" fg:x="291" fg:w="3"/><text x="9.1928%" y="687.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (33 samples, 1.01%)</title><rect x="9.0350%" y="677" width="1.0141%" height="15" fill="rgb(247,81,37)" fg:x="294" fg:w="33"/><text x="9.2850%" y="687.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.03%)</title><rect x="10.0492%" y="677" width="0.0307%" height="15" fill="rgb(209,12,38)" fg:x="327" fg:w="1"/><text x="10.2992%" y="687.50"></text></g><g><title>__memcpy_avx_unaligned (1 samples, 0.03%)</title><rect x="10.0799%" y="677" width="0.0307%" height="15" fill="rgb(227,1,9)" fg:x="328" fg:w="1"/><text x="10.3299%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (1 samples, 0.03%)</title><rect x="10.1106%" y="677" width="0.0307%" height="15" fill="rgb(248,47,43)" fg:x="329" fg:w="1"/><text x="10.3606%" y="687.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.03%)</title><rect x="10.1106%" y="661" width="0.0307%" height="15" fill="rgb(221,10,30)" fg:x="329" fg:w="1"/><text x="10.3606%" y="671.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.03%)</title><rect x="10.1106%" y="645" width="0.0307%" height="15" fill="rgb(210,229,1)" fg:x="329" fg:w="1"/><text x="10.3606%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.03%)</title><rect x="10.1414%" y="677" width="0.0307%" height="15" fill="rgb(222,148,37)" fg:x="330" fg:w="1"/><text x="10.3914%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (1 samples, 0.03%)</title><rect x="10.1414%" y="661" width="0.0307%" height="15" fill="rgb(234,67,33)" fg:x="330" fg:w="1"/><text x="10.3914%" y="671.50"></text></g><g><title>chacha20::avx2_cpuid::init_get (1 samples, 0.03%)</title><rect x="10.1721%" y="677" width="0.0307%" height="15" fill="rgb(247,98,35)" fg:x="331" fg:w="1"/><text x="10.4221%" y="687.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (2 samples, 0.06%)</title><rect x="10.2028%" y="677" width="0.0615%" height="15" fill="rgb(247,138,52)" fg:x="332" fg:w="2"/><text x="10.4528%" y="687.50"></text></g><g><title>chacha20::xchacha::quarter_round (2 samples, 0.06%)</title><rect x="10.2643%" y="677" width="0.0615%" height="15" fill="rgb(213,79,30)" fg:x="334" fg:w="2"/><text x="10.5143%" y="687.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.03%)</title><rect x="10.3258%" y="677" width="0.0307%" height="15" fill="rgb(246,177,23)" fg:x="336" fg:w="1"/><text x="10.5758%" y="687.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi64 (1 samples, 0.03%)</title><rect x="10.3565%" y="677" width="0.0307%" height="15" fill="rgb(230,62,27)" fg:x="337" fg:w="1"/><text x="10.6065%" y="687.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (3 samples, 0.09%)</title><rect x="10.3872%" y="677" width="0.0922%" height="15" fill="rgb(216,154,8)" fg:x="338" fg:w="3"/><text x="10.6372%" y="687.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="10.4794%" y="677" width="0.0307%" height="15" fill="rgb(244,35,45)" fg:x="341" fg:w="1"/><text x="10.7294%" y="687.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="10.5101%" y="677" width="0.0307%" height="15" fill="rgb(251,115,12)" fg:x="342" fg:w="1"/><text x="10.7601%" y="687.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.03%)</title><rect x="10.5409%" y="677" width="0.0307%" height="15" fill="rgb(240,54,50)" fg:x="343" fg:w="1"/><text x="10.7909%" y="687.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_storeu_si128 (2 samples, 0.06%)</title><rect x="10.5716%" y="677" width="0.0615%" height="15" fill="rgb(233,84,52)" fg:x="344" fg:w="2"/><text x="10.8216%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (17 samples, 0.52%)</title><rect x="10.6331%" y="677" width="0.5224%" height="15" fill="rgb(207,117,47)" fg:x="346" fg:w="17"/><text x="10.8831%" y="687.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_le_bytes (1 samples, 0.03%)</title><rect x="11.1555%" y="677" width="0.0307%" height="15" fill="rgb(249,43,39)" fg:x="363" fg:w="1"/><text x="11.4055%" y="687.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_ne_bytes (1 samples, 0.03%)</title><rect x="11.1555%" y="661" width="0.0307%" height="15" fill="rgb(209,38,44)" fg:x="363" fg:w="1"/><text x="11.4055%" y="671.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.03%)</title><rect x="11.1862%" y="677" width="0.0307%" height="15" fill="rgb(236,212,23)" fg:x="364" fg:w="1"/><text x="11.4362%" y="687.50"></text></g><g><title>chacha20::xchacha::quarter_round (1 samples, 0.03%)</title><rect x="11.1862%" y="661" width="0.0307%" height="15" fill="rgb(242,79,21)" fg:x="364" fg:w="1"/><text x="11.4362%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.03%)</title><rect x="11.2170%" y="677" width="0.0307%" height="15" fill="rgb(211,96,35)" fg:x="365" fg:w="1"/><text x="11.4670%" y="687.50"></text></g><g><title>core::ptr::read (1 samples, 0.03%)</title><rect x="11.2477%" y="677" width="0.0307%" height="15" fill="rgb(253,215,40)" fg:x="366" fg:w="1"/><text x="11.4977%" y="687.50"></text></g><g><title>core::ptr::write (3 samples, 0.09%)</title><rect x="11.2784%" y="677" width="0.0922%" height="15" fill="rgb(211,81,21)" fg:x="367" fg:w="3"/><text x="11.5284%" y="687.50"></text></g><g><title>core::slice::raw::from_raw_parts (4 samples, 0.12%)</title><rect x="11.3706%" y="677" width="0.1229%" height="15" fill="rgb(208,190,38)" fg:x="370" fg:w="4"/><text x="11.6206%" y="687.50"></text></g><g><title>core::ptr::slice_from_raw_parts (2 samples, 0.06%)</title><rect x="11.4321%" y="661" width="0.0615%" height="15" fill="rgb(235,213,38)" fg:x="372" fg:w="2"/><text x="11.6821%" y="671.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (2 samples, 0.06%)</title><rect x="11.4321%" y="645" width="0.0615%" height="15" fill="rgb(237,122,38)" fg:x="372" fg:w="2"/><text x="11.6821%" y="655.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (3 samples, 0.09%)</title><rect x="11.4935%" y="677" width="0.0922%" height="15" fill="rgb(244,218,35)" fg:x="374" fg:w="3"/><text x="11.7435%" y="687.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (2 samples, 0.06%)</title><rect x="11.5243%" y="661" width="0.0615%" height="15" fill="rgb(240,68,47)" fg:x="375" fg:w="2"/><text x="11.7743%" y="671.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (2 samples, 0.06%)</title><rect x="11.5243%" y="645" width="0.0615%" height="15" fill="rgb(210,16,53)" fg:x="375" fg:w="2"/><text x="11.7743%" y="655.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (1 samples, 0.03%)</title><rect x="11.5857%" y="677" width="0.0307%" height="15" fill="rgb(235,124,12)" fg:x="377" fg:w="1"/><text x="11.8357%" y="687.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::iter_position (2 samples, 0.06%)</title><rect x="11.6165%" y="677" width="0.0615%" height="15" fill="rgb(224,169,11)" fg:x="378" fg:w="2"/><text x="11.8665%" y="687.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (2 samples, 0.06%)</title><rect x="11.6165%" y="661" width="0.0615%" height="15" fill="rgb(250,166,2)" fg:x="378" fg:w="2"/><text x="11.8665%" y="671.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::new (1 samples, 0.03%)</title><rect x="11.6779%" y="677" width="0.0307%" height="15" fill="rgb(242,216,29)" fg:x="380" fg:w="1"/><text x="11.9279%" y="687.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (7 samples, 0.22%)</title><rect x="11.7087%" y="677" width="0.2151%" height="15" fill="rgb(230,116,27)" fg:x="381" fg:w="7"/><text x="11.9587%" y="687.50"></text></g><g><title>polling::epoll::Events::iter::{{closure}} (1 samples, 0.03%)</title><rect x="11.9238%" y="677" width="0.0307%" height="15" fill="rgb(228,99,48)" fg:x="388" fg:w="1"/><text x="12.1738%" y="687.50"></text></g><g><title>polling::epoll::Poller::modify (1 samples, 0.03%)</title><rect x="11.9545%" y="677" width="0.0307%" height="15" fill="rgb(253,11,6)" fg:x="389" fg:w="1"/><text x="12.2045%" y="687.50"></text></g><g><title>&lt;tracing_core::metadata::Level as core::cmp::PartialOrd&lt;tracing_core::metadata::LevelFilter&gt;&gt;::le (1 samples, 0.03%)</title><rect x="11.9545%" y="661" width="0.0307%" height="15" fill="rgb(247,143,39)" fg:x="389" fg:w="1"/><text x="12.2045%" y="671.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (1 samples, 0.03%)</title><rect x="11.9852%" y="677" width="0.0307%" height="15" fill="rgb(236,97,10)" fg:x="390" fg:w="1"/><text x="12.2352%" y="687.50"></text></g><g><title>subtle::&lt;impl core::convert::From&lt;subtle::Choice&gt; for bool&gt;::from (1 samples, 0.03%)</title><rect x="12.0160%" y="677" width="0.0307%" height="15" fill="rgb(233,208,19)" fg:x="391" fg:w="1"/><text x="12.2660%" y="687.50"></text></g><g><title>[[stack]] (383 samples, 11.77%)</title><rect x="0.3073%" y="693" width="11.7701%" height="15" fill="rgb(216,164,2)" fg:x="10" fg:w="383"/><text x="0.5573%" y="703.50">[[stack]]</text></g><g><title>universal_hash::UniversalHash::verify (1 samples, 0.03%)</title><rect x="12.0467%" y="677" width="0.0307%" height="15" fill="rgb(220,129,5)" fg:x="392" fg:w="1"/><text x="12.2967%" y="687.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="12.0467%" y="661" width="0.0307%" height="15" fill="rgb(242,17,10)" fg:x="392" fg:w="1"/><text x="12.2967%" y="671.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4 as &lt;&amp;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4&gt;&gt;::mul::__Impl_mul__&gt;::_impl_mul::m (1 samples, 0.03%)</title><rect x="12.0774%" y="661" width="0.0307%" height="15" fill="rgb(242,107,0)" fg:x="393" fg:w="1"/><text x="12.3274%" y="671.50"></text></g><g><title>curve25519_dalek::backend::vector::packed_simd::u32x8::mul32 (1 samples, 0.03%)</title><rect x="12.0774%" y="645" width="0.0307%" height="15" fill="rgb(251,28,31)" fg:x="393" fg:w="1"/><text x="12.3274%" y="655.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::packed_simd::u32x8 as curve25519_dalek::backend::vector::packed_simd::u32x8::mul32::__Impl_mul32__&gt;::_impl_mul32 (1 samples, 0.03%)</title><rect x="12.0774%" y="629" width="0.0307%" height="15" fill="rgb(233,223,10)" fg:x="393" fg:w="1"/><text x="12.3274%" y="639.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.03%)</title><rect x="12.0774%" y="613" width="0.0307%" height="15" fill="rgb(215,21,27)" fg:x="393" fg:w="1"/><text x="12.3274%" y="623.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4 as &lt;&amp;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4&gt;&gt;::mul::__Impl_mul__&gt;::_impl_mul (2 samples, 0.06%)</title><rect x="12.0774%" y="677" width="0.0615%" height="15" fill="rgb(232,23,21)" fg:x="393" fg:w="2"/><text x="12.3274%" y="687.50"></text></g><g><title>curve25519_dalek::backend::vector::avx2::field::unpack_pair (1 samples, 0.03%)</title><rect x="12.1082%" y="661" width="0.0307%" height="15" fill="rgb(244,5,23)" fg:x="394" fg:w="1"/><text x="12.3582%" y="671.50"></text></g><g><title>curve25519_dalek::backend::vector::avx2::field::unpack_pair::_impl_unpack_pair (1 samples, 0.03%)</title><rect x="12.1082%" y="645" width="0.0307%" height="15" fill="rgb(226,81,46)" fg:x="394" fg:w="1"/><text x="12.3582%" y="655.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.03%)</title><rect x="12.1082%" y="629" width="0.0307%" height="15" fill="rgb(247,70,30)" fg:x="394" fg:w="1"/><text x="12.3582%" y="639.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (4 samples, 0.12%)</title><rect x="12.1389%" y="677" width="0.1229%" height="15" fill="rgb(212,68,19)" fg:x="395" fg:w="4"/><text x="12.3889%" y="687.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (2 samples, 0.06%)</title><rect x="12.2618%" y="677" width="0.0615%" height="15" fill="rgb(240,187,13)" fg:x="399" fg:w="2"/><text x="12.5118%" y="687.50"></text></g><g><title>__entry_text_start (1 samples, 0.03%)</title><rect x="12.2926%" y="661" width="0.0307%" height="15" fill="rgb(223,113,26)" fg:x="400" fg:w="1"/><text x="12.5426%" y="671.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (1 samples, 0.03%)</title><rect x="12.3233%" y="677" width="0.0307%" height="15" fill="rgb(206,192,2)" fg:x="401" fg:w="1"/><text x="12.5733%" y="687.50"></text></g><g><title>&lt;[Z] as zeroize::Zeroize&gt;::zeroize (1 samples, 0.03%)</title><rect x="12.3540%" y="677" width="0.0307%" height="15" fill="rgb(241,108,4)" fg:x="402" fg:w="1"/><text x="12.6040%" y="687.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (4 samples, 0.12%)</title><rect x="12.7228%" y="453" width="0.1229%" height="15" fill="rgb(247,173,49)" fg:x="414" fg:w="4"/><text x="12.9728%" y="463.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.15%)</title><rect x="12.9072%" y="437" width="0.1537%" height="15" fill="rgb(224,114,35)" fg:x="420" fg:w="5"/><text x="13.1572%" y="447.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.25%)</title><rect x="12.8457%" y="453" width="0.2459%" height="15" fill="rgb(245,159,27)" fg:x="418" fg:w="8"/><text x="13.0957%" y="463.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (1 samples, 0.03%)</title><rect x="13.0608%" y="437" width="0.0307%" height="15" fill="rgb(245,172,44)" fg:x="425" fg:w="1"/><text x="13.3108%" y="447.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (35 samples, 1.08%)</title><rect x="13.0916%" y="453" width="1.0756%" height="15" fill="rgb(236,23,11)" fg:x="426" fg:w="35"/><text x="13.3416%" y="463.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (3 samples, 0.09%)</title><rect x="14.1672%" y="453" width="0.0922%" height="15" fill="rgb(205,117,38)" fg:x="461" fg:w="3"/><text x="14.4172%" y="463.50"></text></g><g><title>chacha20::backends::avx2::rounds (3 samples, 0.09%)</title><rect x="14.2594%" y="453" width="0.0922%" height="15" fill="rgb(237,72,25)" fg:x="464" fg:w="3"/><text x="14.5094%" y="463.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (4 samples, 0.12%)</title><rect x="14.3516%" y="453" width="0.1229%" height="15" fill="rgb(244,70,9)" fg:x="467" fg:w="4"/><text x="14.6016%" y="463.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (2 samples, 0.06%)</title><rect x="15.0277%" y="437" width="0.0615%" height="15" fill="rgb(217,125,39)" fg:x="489" fg:w="2"/><text x="15.2777%" y="447.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (1 samples, 0.03%)</title><rect x="15.0891%" y="437" width="0.0307%" height="15" fill="rgb(235,36,10)" fg:x="491" fg:w="1"/><text x="15.3391%" y="447.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (1 samples, 0.03%)</title><rect x="15.1199%" y="437" width="0.0307%" height="15" fill="rgb(251,123,47)" fg:x="492" fg:w="1"/><text x="15.3699%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (3 samples, 0.09%)</title><rect x="15.1506%" y="437" width="0.0922%" height="15" fill="rgb(221,13,13)" fg:x="493" fg:w="3"/><text x="15.4006%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.03%)</title><rect x="15.2428%" y="437" width="0.0307%" height="15" fill="rgb(238,131,9)" fg:x="496" fg:w="1"/><text x="15.4928%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (2 samples, 0.06%)</title><rect x="15.2735%" y="437" width="0.0615%" height="15" fill="rgb(211,50,8)" fg:x="497" fg:w="2"/><text x="15.5235%" y="447.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.03%)</title><rect x="15.3042%" y="421" width="0.0307%" height="15" fill="rgb(245,182,24)" fg:x="498" fg:w="1"/><text x="15.5542%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (3 samples, 0.09%)</title><rect x="15.3350%" y="437" width="0.0922%" height="15" fill="rgb(242,14,37)" fg:x="499" fg:w="3"/><text x="15.5850%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (7 samples, 0.22%)</title><rect x="15.4272%" y="437" width="0.2151%" height="15" fill="rgb(246,228,12)" fg:x="502" fg:w="7"/><text x="15.6772%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="15.6116%" y="421" width="0.0307%" height="15" fill="rgb(213,55,15)" fg:x="508" fg:w="1"/><text x="15.8616%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.06%)</title><rect x="15.6423%" y="437" width="0.0615%" height="15" fill="rgb(209,9,3)" fg:x="509" fg:w="2"/><text x="15.8923%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="15.7037%" y="437" width="0.0307%" height="15" fill="rgb(230,59,30)" fg:x="511" fg:w="1"/><text x="15.9537%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (45 samples, 1.38%)</title><rect x="14.4745%" y="453" width="1.3829%" height="15" fill="rgb(209,121,21)" fg:x="471" fg:w="45"/><text x="14.7245%" y="463.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (4 samples, 0.12%)</title><rect x="15.7345%" y="437" width="0.1229%" height="15" fill="rgb(220,109,13)" fg:x="512" fg:w="4"/><text x="15.9845%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (10 samples, 0.31%)</title><rect x="15.8574%" y="453" width="0.3073%" height="15" fill="rgb(232,18,1)" fg:x="516" fg:w="10"/><text x="16.1074%" y="463.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.03%)</title><rect x="16.4106%" y="437" width="0.0307%" height="15" fill="rgb(215,41,42)" fg:x="534" fg:w="1"/><text x="16.6606%" y="447.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (2 samples, 0.06%)</title><rect x="16.4413%" y="437" width="0.0615%" height="15" fill="rgb(224,123,36)" fg:x="535" fg:w="2"/><text x="16.6913%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="16.5028%" y="437" width="0.0307%" height="15" fill="rgb(240,125,3)" fg:x="537" fg:w="1"/><text x="16.7528%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.03%)</title><rect x="16.5335%" y="437" width="0.0307%" height="15" fill="rgb(205,98,50)" fg:x="538" fg:w="1"/><text x="16.7835%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.03%)</title><rect x="16.5642%" y="437" width="0.0307%" height="15" fill="rgb(205,185,37)" fg:x="539" fg:w="1"/><text x="16.8142%" y="447.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.03%)</title><rect x="16.5642%" y="421" width="0.0307%" height="15" fill="rgb(238,207,15)" fg:x="539" fg:w="1"/><text x="16.8142%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="16.5950%" y="437" width="0.0307%" height="15" fill="rgb(213,199,42)" fg:x="540" fg:w="1"/><text x="16.8450%" y="447.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.03%)</title><rect x="16.5950%" y="421" width="0.0307%" height="15" fill="rgb(235,201,11)" fg:x="540" fg:w="1"/><text x="16.8450%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (7 samples, 0.22%)</title><rect x="16.6257%" y="437" width="0.2151%" height="15" fill="rgb(207,46,11)" fg:x="541" fg:w="7"/><text x="16.8757%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (27 samples, 0.83%)</title><rect x="16.1647%" y="453" width="0.8297%" height="15" fill="rgb(241,35,35)" fg:x="526" fg:w="27"/><text x="16.4147%" y="463.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (5 samples, 0.15%)</title><rect x="16.8408%" y="437" width="0.1537%" height="15" fill="rgb(243,32,47)" fg:x="548" fg:w="5"/><text x="17.0908%" y="447.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (2 samples, 0.06%)</title><rect x="17.0867%" y="437" width="0.0615%" height="15" fill="rgb(247,202,23)" fg:x="556" fg:w="2"/><text x="17.3367%" y="447.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (2 samples, 0.06%)</title><rect x="17.1481%" y="437" width="0.0615%" height="15" fill="rgb(219,102,11)" fg:x="558" fg:w="2"/><text x="17.3981%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (2 samples, 0.06%)</title><rect x="17.2096%" y="437" width="0.0615%" height="15" fill="rgb(243,110,44)" fg:x="560" fg:w="2"/><text x="17.4596%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (2 samples, 0.06%)</title><rect x="17.2711%" y="437" width="0.0615%" height="15" fill="rgb(222,74,54)" fg:x="562" fg:w="2"/><text x="17.5211%" y="447.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.03%)</title><rect x="17.3325%" y="437" width="0.0307%" height="15" fill="rgb(216,99,12)" fg:x="564" fg:w="1"/><text x="17.5825%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.06%)</title><rect x="17.3632%" y="437" width="0.0615%" height="15" fill="rgb(226,22,26)" fg:x="565" fg:w="2"/><text x="17.6132%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (15 samples, 0.46%)</title><rect x="16.9945%" y="453" width="0.4610%" height="15" fill="rgb(217,163,10)" fg:x="553" fg:w="15"/><text x="17.2445%" y="463.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="17.4247%" y="437" width="0.0307%" height="15" fill="rgb(213,25,53)" fg:x="567" fg:w="1"/><text x="17.6747%" y="447.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.03%)</title><rect x="17.4247%" y="421" width="0.0307%" height="15" fill="rgb(252,105,26)" fg:x="567" fg:w="1"/><text x="17.6747%" y="431.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.03%)</title><rect x="17.8242%" y="437" width="0.0307%" height="15" fill="rgb(220,39,43)" fg:x="580" fg:w="1"/><text x="18.0742%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (16 samples, 0.49%)</title><rect x="17.4554%" y="453" width="0.4917%" height="15" fill="rgb(229,68,48)" fg:x="568" fg:w="16"/><text x="17.7054%" y="463.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (3 samples, 0.09%)</title><rect x="17.8549%" y="437" width="0.0922%" height="15" fill="rgb(252,8,32)" fg:x="581" fg:w="3"/><text x="18.1049%" y="447.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="19.6681%" y="437" width="0.0307%" height="15" fill="rgb(223,20,43)" fg:x="640" fg:w="1"/><text x="19.9181%" y="447.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (2 samples, 0.06%)</title><rect x="19.6988%" y="437" width="0.0615%" height="15" fill="rgb(229,81,49)" fg:x="641" fg:w="2"/><text x="19.9488%" y="447.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (2 samples, 0.06%)</title><rect x="19.7603%" y="437" width="0.0615%" height="15" fill="rgb(236,28,36)" fg:x="643" fg:w="2"/><text x="20.0103%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (6 samples, 0.18%)</title><rect x="19.8218%" y="437" width="0.1844%" height="15" fill="rgb(249,185,26)" fg:x="645" fg:w="6"/><text x="20.0718%" y="447.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.03%)</title><rect x="20.0061%" y="437" width="0.0307%" height="15" fill="rgb(249,174,33)" fg:x="651" fg:w="1"/><text x="20.2561%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="20.0369%" y="437" width="0.0307%" height="15" fill="rgb(233,201,37)" fg:x="652" fg:w="1"/><text x="20.2869%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="20.0676%" y="437" width="0.0307%" height="15" fill="rgb(221,78,26)" fg:x="653" fg:w="1"/><text x="20.3176%" y="447.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.03%)</title><rect x="20.0676%" y="421" width="0.0307%" height="15" fill="rgb(250,127,30)" fg:x="653" fg:w="1"/><text x="20.3176%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (72 samples, 2.21%)</title><rect x="17.9471%" y="453" width="2.2127%" height="15" fill="rgb(230,49,44)" fg:x="584" fg:w="72"/><text x="18.1971%" y="463.50">c..</text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (2 samples, 0.06%)</title><rect x="20.0983%" y="437" width="0.0615%" height="15" fill="rgb(229,67,23)" fg:x="654" fg:w="2"/><text x="20.3483%" y="447.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (6 samples, 0.18%)</title><rect x="20.1598%" y="453" width="0.1844%" height="15" fill="rgb(249,83,47)" fg:x="656" fg:w="6"/><text x="20.4098%" y="463.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi64x (4 samples, 0.12%)</title><rect x="20.2213%" y="437" width="0.1229%" height="15" fill="rgb(215,43,3)" fg:x="658" fg:w="4"/><text x="20.4713%" y="447.50"></text></g><g><title>core::core_arch::simd::i64x4::new (4 samples, 0.12%)</title><rect x="20.2213%" y="421" width="0.1229%" height="15" fill="rgb(238,154,13)" fg:x="658" fg:w="4"/><text x="20.4713%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (34 samples, 1.04%)</title><rect x="20.3442%" y="453" width="1.0449%" height="15" fill="rgb(219,56,2)" fg:x="662" fg:w="34"/><text x="20.5942%" y="463.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (27 samples, 0.83%)</title><rect x="21.3891%" y="453" width="0.8297%" height="15" fill="rgb(233,0,4)" fg:x="696" fg:w="27"/><text x="21.6391%" y="463.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (35 samples, 1.08%)</title><rect x="22.2188%" y="453" width="1.0756%" height="15" fill="rgb(235,30,7)" fg:x="723" fg:w="35"/><text x="22.4688%" y="463.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (391 samples, 12.02%)</title><rect x="12.3848%" y="469" width="12.0160%" height="15" fill="rgb(250,79,13)" fg:x="403" fg:w="391"/><text x="12.6348%" y="479.50">chacha20::backends..</text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (36 samples, 1.11%)</title><rect x="23.2944%" y="453" width="1.1063%" height="15" fill="rgb(211,146,34)" fg:x="758" fg:w="36"/><text x="23.5444%" y="463.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (1 samples, 0.03%)</title><rect x="24.4007%" y="469" width="0.0307%" height="15" fill="rgb(228,22,38)" fg:x="794" fg:w="1"/><text x="24.6507%" y="479.50"></text></g><g><title>chacha20::backends::avx2::rounds (1 samples, 0.03%)</title><rect x="24.4315%" y="469" width="0.0307%" height="15" fill="rgb(235,168,5)" fg:x="795" fg:w="1"/><text x="24.6815%" y="479.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (2 samples, 0.06%)</title><rect x="24.4622%" y="469" width="0.0615%" height="15" fill="rgb(221,155,16)" fg:x="796" fg:w="2"/><text x="24.7122%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (8 samples, 0.25%)</title><rect x="24.5237%" y="469" width="0.2459%" height="15" fill="rgb(215,215,53)" fg:x="798" fg:w="8"/><text x="24.7737%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (3 samples, 0.09%)</title><rect x="24.7695%" y="469" width="0.0922%" height="15" fill="rgb(223,4,10)" fg:x="806" fg:w="3"/><text x="25.0195%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (8 samples, 0.25%)</title><rect x="24.8617%" y="469" width="0.2459%" height="15" fill="rgb(234,103,6)" fg:x="809" fg:w="8"/><text x="25.1117%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.03%)</title><rect x="25.1076%" y="469" width="0.0307%" height="15" fill="rgb(227,97,0)" fg:x="817" fg:w="1"/><text x="25.3576%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (3 samples, 0.09%)</title><rect x="25.1383%" y="469" width="0.0922%" height="15" fill="rgb(234,150,53)" fg:x="818" fg:w="3"/><text x="25.3883%" y="479.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.03%)</title><rect x="25.1998%" y="453" width="0.0307%" height="15" fill="rgb(228,201,54)" fg:x="820" fg:w="1"/><text x="25.4498%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (15 samples, 0.46%)</title><rect x="25.2305%" y="469" width="0.4610%" height="15" fill="rgb(222,22,37)" fg:x="821" fg:w="15"/><text x="25.4805%" y="479.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="25.6915%" y="469" width="0.0307%" height="15" fill="rgb(237,53,32)" fg:x="836" fg:w="1"/><text x="25.9415%" y="479.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="25.6915%" y="453" width="0.0307%" height="15" fill="rgb(233,25,53)" fg:x="836" fg:w="1"/><text x="25.9415%" y="463.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="25.6915%" y="437" width="0.0307%" height="15" fill="rgb(210,40,34)" fg:x="836" fg:w="1"/><text x="25.9415%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (10 samples, 0.31%)</title><rect x="25.7222%" y="469" width="0.3073%" height="15" fill="rgb(241,220,44)" fg:x="837" fg:w="10"/><text x="25.9722%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (9 samples, 0.28%)</title><rect x="26.0295%" y="469" width="0.2766%" height="15" fill="rgb(235,28,35)" fg:x="847" fg:w="9"/><text x="26.2795%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (5 samples, 0.15%)</title><rect x="26.3061%" y="469" width="0.1537%" height="15" fill="rgb(210,56,17)" fg:x="856" fg:w="5"/><text x="26.5561%" y="479.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_par_ks_blocks (465 samples, 14.29%)</title><rect x="12.3848%" y="517" width="14.2901%" height="15" fill="rgb(224,130,29)" fg:x="403" fg:w="465"/><text x="12.6348%" y="527.50">&lt;chacha20::backends::a..</text></g><g><title>chacha20::backends::avx2::rounds (465 samples, 14.29%)</title><rect x="12.3848%" y="501" width="14.2901%" height="15" fill="rgb(235,212,8)" fg:x="403" fg:w="465"/><text x="12.6348%" y="511.50">chacha20::backends::av..</text></g><g><title>chacha20::backends::avx2::double_quarter_round (465 samples, 14.29%)</title><rect x="12.3848%" y="485" width="14.2901%" height="15" fill="rgb(223,33,50)" fg:x="403" fg:w="465"/><text x="12.6348%" y="495.50">chacha20::backends::av..</text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (7 samples, 0.22%)</title><rect x="26.4597%" y="469" width="0.2151%" height="15" fill="rgb(219,149,13)" fg:x="861" fg:w="7"/><text x="26.7097%" y="479.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="26.8285%" y="437" width="0.0307%" height="15" fill="rgb(250,156,29)" fg:x="873" fg:w="1"/><text x="27.0785%" y="447.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (1 samples, 0.03%)</title><rect x="26.8285%" y="421" width="0.0307%" height="15" fill="rgb(216,193,19)" fg:x="873" fg:w="1"/><text x="27.0785%" y="431.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (1 samples, 0.03%)</title><rect x="26.8285%" y="405" width="0.0307%" height="15" fill="rgb(216,135,14)" fg:x="873" fg:w="1"/><text x="27.0785%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.03%)</title><rect x="26.8285%" y="389" width="0.0307%" height="15" fill="rgb(241,47,5)" fg:x="873" fg:w="1"/><text x="27.0785%" y="399.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (8 samples, 0.25%)</title><rect x="26.8593%" y="437" width="0.2459%" height="15" fill="rgb(233,42,35)" fg:x="874" fg:w="8"/><text x="27.1093%" y="447.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="27.1358%" y="421" width="0.0307%" height="15" fill="rgb(231,13,6)" fg:x="883" fg:w="1"/><text x="27.3858%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.03%)</title><rect x="27.1666%" y="421" width="0.0307%" height="15" fill="rgb(207,181,40)" fg:x="884" fg:w="1"/><text x="27.4166%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="27.1973%" y="421" width="0.0307%" height="15" fill="rgb(254,173,49)" fg:x="885" fg:w="1"/><text x="27.4473%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (5 samples, 0.15%)</title><rect x="27.1051%" y="437" width="0.1537%" height="15" fill="rgb(221,1,38)" fg:x="882" fg:w="5"/><text x="27.3551%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="27.2280%" y="421" width="0.0307%" height="15" fill="rgb(206,124,46)" fg:x="886" fg:w="1"/><text x="27.4780%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (2 samples, 0.06%)</title><rect x="27.2588%" y="437" width="0.0615%" height="15" fill="rgb(249,21,11)" fg:x="887" fg:w="2"/><text x="27.5088%" y="447.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="27.4124%" y="421" width="0.0307%" height="15" fill="rgb(222,201,40)" fg:x="892" fg:w="1"/><text x="27.6624%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.03%)</title><rect x="27.4431%" y="421" width="0.0307%" height="15" fill="rgb(235,61,29)" fg:x="893" fg:w="1"/><text x="27.6931%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="27.4739%" y="421" width="0.0307%" height="15" fill="rgb(219,207,3)" fg:x="894" fg:w="1"/><text x="27.7239%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="27.5046%" y="421" width="0.0307%" height="15" fill="rgb(222,56,46)" fg:x="895" fg:w="1"/><text x="27.7546%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="27.5353%" y="421" width="0.0307%" height="15" fill="rgb(239,76,54)" fg:x="896" fg:w="1"/><text x="27.7853%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (9 samples, 0.28%)</title><rect x="27.3202%" y="437" width="0.2766%" height="15" fill="rgb(231,124,27)" fg:x="889" fg:w="9"/><text x="27.5702%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="27.5661%" y="421" width="0.0307%" height="15" fill="rgb(249,195,6)" fg:x="897" fg:w="1"/><text x="27.8161%" y="431.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (1 samples, 0.03%)</title><rect x="27.6583%" y="421" width="0.0307%" height="15" fill="rgb(237,174,47)" fg:x="900" fg:w="1"/><text x="27.9083%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (2 samples, 0.06%)</title><rect x="27.6890%" y="421" width="0.0615%" height="15" fill="rgb(206,201,31)" fg:x="901" fg:w="2"/><text x="27.9390%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (6 samples, 0.18%)</title><rect x="27.5968%" y="437" width="0.1844%" height="15" fill="rgb(231,57,52)" fg:x="898" fg:w="6"/><text x="27.8468%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="27.7505%" y="421" width="0.0307%" height="15" fill="rgb(248,177,22)" fg:x="903" fg:w="1"/><text x="28.0005%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (2 samples, 0.06%)</title><rect x="27.7812%" y="437" width="0.0615%" height="15" fill="rgb(215,211,37)" fg:x="904" fg:w="2"/><text x="28.0312%" y="447.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.03%)</title><rect x="27.8119%" y="421" width="0.0307%" height="15" fill="rgb(241,128,51)" fg:x="905" fg:w="1"/><text x="28.0619%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="28.2729%" y="421" width="0.0307%" height="15" fill="rgb(227,165,31)" fg:x="920" fg:w="1"/><text x="28.5229%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (17 samples, 0.52%)</title><rect x="27.8427%" y="437" width="0.5224%" height="15" fill="rgb(228,167,24)" fg:x="906" fg:w="17"/><text x="28.0927%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (2 samples, 0.06%)</title><rect x="28.3036%" y="421" width="0.0615%" height="15" fill="rgb(228,143,12)" fg:x="921" fg:w="2"/><text x="28.5536%" y="431.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (2 samples, 0.06%)</title><rect x="28.3651%" y="437" width="0.0615%" height="15" fill="rgb(249,149,8)" fg:x="923" fg:w="2"/><text x="28.6151%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (4 samples, 0.12%)</title><rect x="28.4266%" y="437" width="0.1229%" height="15" fill="rgb(243,35,44)" fg:x="925" fg:w="4"/><text x="28.6766%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (4 samples, 0.12%)</title><rect x="28.5495%" y="437" width="0.1229%" height="15" fill="rgb(246,89,9)" fg:x="929" fg:w="4"/><text x="28.7995%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (6 samples, 0.18%)</title><rect x="28.6724%" y="437" width="0.1844%" height="15" fill="rgb(233,213,13)" fg:x="933" fg:w="6"/><text x="28.9224%" y="447.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (78 samples, 2.40%)</title><rect x="26.6749%" y="453" width="2.3970%" height="15" fill="rgb(233,141,41)" fg:x="868" fg:w="78"/><text x="26.9249%" y="463.50">ch..</text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (7 samples, 0.22%)</title><rect x="28.8568%" y="437" width="0.2151%" height="15" fill="rgb(239,167,4)" fg:x="939" fg:w="7"/><text x="29.1068%" y="447.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (1 samples, 0.03%)</title><rect x="29.0719%" y="453" width="0.0307%" height="15" fill="rgb(209,217,16)" fg:x="946" fg:w="1"/><text x="29.3219%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (2 samples, 0.06%)</title><rect x="29.1026%" y="453" width="0.0615%" height="15" fill="rgb(219,88,35)" fg:x="947" fg:w="2"/><text x="29.3526%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (4 samples, 0.12%)</title><rect x="29.1641%" y="453" width="0.1229%" height="15" fill="rgb(220,193,23)" fg:x="949" fg:w="4"/><text x="29.4141%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.03%)</title><rect x="29.2870%" y="453" width="0.0307%" height="15" fill="rgb(230,90,52)" fg:x="953" fg:w="1"/><text x="29.5370%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (6 samples, 0.18%)</title><rect x="29.3178%" y="453" width="0.1844%" height="15" fill="rgb(252,106,19)" fg:x="954" fg:w="6"/><text x="29.5678%" y="463.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (3 samples, 0.09%)</title><rect x="29.5022%" y="453" width="0.0922%" height="15" fill="rgb(206,74,20)" fg:x="960" fg:w="3"/><text x="29.7522%" y="463.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="29.5943%" y="453" width="0.0307%" height="15" fill="rgb(230,138,44)" fg:x="963" fg:w="1"/><text x="29.8443%" y="463.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (562 samples, 17.27%)</title><rect x="12.3848%" y="677" width="17.2711%" height="15" fill="rgb(235,182,43)" fg:x="403" fg:w="562"/><text x="12.6348%" y="687.50">&lt;chacha20poly1305::ChaChaPo..</text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::decrypt_in_place_detached (562 samples, 17.27%)</title><rect x="12.3848%" y="661" width="17.2711%" height="15" fill="rgb(242,16,51)" fg:x="403" fg:w="562"/><text x="12.6348%" y="671.50">chacha20poly1305::cipher::C..</text></g><g><title>cipher::stream::StreamCipher::apply_keystream (562 samples, 17.27%)</title><rect x="12.3848%" y="645" width="17.2711%" height="15" fill="rgb(248,9,4)" fg:x="403" fg:w="562"/><text x="12.6348%" y="655.50">cipher::stream::StreamCiphe..</text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (562 samples, 17.27%)</title><rect x="12.3848%" y="629" width="17.2711%" height="15" fill="rgb(210,31,22)" fg:x="403" fg:w="562"/><text x="12.6348%" y="639.50">cipher::stream::StreamCiphe..</text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (562 samples, 17.27%)</title><rect x="12.3848%" y="613" width="17.2711%" height="15" fill="rgb(239,54,39)" fg:x="403" fg:w="562"/><text x="12.6348%" y="623.50">&lt;cipher::stream_wrapper::St..</text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (562 samples, 17.27%)</title><rect x="12.3848%" y="597" width="17.2711%" height="15" fill="rgb(230,99,41)" fg:x="403" fg:w="562"/><text x="12.6348%" y="607.50">cipher::stream_core::Stream..</text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (562 samples, 17.27%)</title><rect x="12.3848%" y="581" width="17.2711%" height="15" fill="rgb(253,106,12)" fg:x="403" fg:w="562"/><text x="12.6348%" y="591.50">&lt;chacha20::xchacha::XChaCha..</text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (562 samples, 17.27%)</title><rect x="12.3848%" y="565" width="17.2711%" height="15" fill="rgb(213,46,41)" fg:x="403" fg:w="562"/><text x="12.6348%" y="575.50">&lt;chacha20::ChaChaCore&lt;R&gt; as..</text></g><g><title>chacha20::backends::avx2::inner (562 samples, 17.27%)</title><rect x="12.3848%" y="549" width="17.2711%" height="15" fill="rgb(215,133,35)" fg:x="403" fg:w="562"/><text x="12.6348%" y="559.50">chacha20::backends::avx2::i..</text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (562 samples, 17.27%)</title><rect x="12.3848%" y="533" width="17.2711%" height="15" fill="rgb(213,28,5)" fg:x="403" fg:w="562"/><text x="12.6348%" y="543.50">&lt;cipher::stream_core::Apply..</text></g><g><title>cipher::stream_core::StreamBackend::gen_tail_blocks (97 samples, 2.98%)</title><rect x="26.6749%" y="517" width="2.9809%" height="15" fill="rgb(215,77,49)" fg:x="868" fg:w="97"/><text x="26.9249%" y="527.50">cip..</text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (97 samples, 2.98%)</title><rect x="26.6749%" y="501" width="2.9809%" height="15" fill="rgb(248,100,22)" fg:x="868" fg:w="97"/><text x="26.9249%" y="511.50">&lt;ch..</text></g><g><title>chacha20::backends::avx2::rounds (97 samples, 2.98%)</title><rect x="26.6749%" y="485" width="2.9809%" height="15" fill="rgb(208,67,9)" fg:x="868" fg:w="97"/><text x="26.9249%" y="495.50">cha..</text></g><g><title>chacha20::backends::avx2::double_quarter_round (97 samples, 2.98%)</title><rect x="26.6749%" y="469" width="2.9809%" height="15" fill="rgb(219,133,21)" fg:x="868" fg:w="97"/><text x="26.9249%" y="479.50">cha..</text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="29.6251%" y="453" width="0.0307%" height="15" fill="rgb(246,46,29)" fg:x="964" fg:w="1"/><text x="29.8751%" y="463.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (6 samples, 0.18%)</title><rect x="29.7480%" y="453" width="0.1844%" height="15" fill="rgb(246,185,52)" fg:x="968" fg:w="6"/><text x="29.9980%" y="463.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (1 samples, 0.03%)</title><rect x="29.9324%" y="453" width="0.0307%" height="15" fill="rgb(252,136,11)" fg:x="974" fg:w="1"/><text x="30.1824%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (3 samples, 0.09%)</title><rect x="29.9631%" y="453" width="0.0922%" height="15" fill="rgb(219,138,53)" fg:x="975" fg:w="3"/><text x="30.2131%" y="463.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="30.0246%" y="437" width="0.0307%" height="15" fill="rgb(211,51,23)" fg:x="977" fg:w="1"/><text x="30.2746%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.03%)</title><rect x="30.0553%" y="453" width="0.0307%" height="15" fill="rgb(247,221,28)" fg:x="978" fg:w="1"/><text x="30.3053%" y="463.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (1 samples, 0.03%)</title><rect x="30.0860%" y="437" width="0.0307%" height="15" fill="rgb(251,222,45)" fg:x="979" fg:w="1"/><text x="30.3360%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="30.1168%" y="437" width="0.0307%" height="15" fill="rgb(217,162,53)" fg:x="980" fg:w="1"/><text x="30.3668%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="30.1475%" y="437" width="0.0307%" height="15" fill="rgb(229,93,14)" fg:x="981" fg:w="1"/><text x="30.3975%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (4 samples, 0.12%)</title><rect x="30.0860%" y="453" width="0.1229%" height="15" fill="rgb(209,67,49)" fg:x="979" fg:w="4"/><text x="30.3360%" y="463.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="30.1782%" y="437" width="0.0307%" height="15" fill="rgb(213,87,29)" fg:x="982" fg:w="1"/><text x="30.4282%" y="447.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.03%)</title><rect x="30.2090%" y="437" width="0.0307%" height="15" fill="rgb(205,151,52)" fg:x="983" fg:w="1"/><text x="30.4590%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (2 samples, 0.06%)</title><rect x="30.2090%" y="453" width="0.0615%" height="15" fill="rgb(253,215,39)" fg:x="983" fg:w="2"/><text x="30.4590%" y="463.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="30.2397%" y="437" width="0.0307%" height="15" fill="rgb(221,220,41)" fg:x="984" fg:w="1"/><text x="30.4897%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="30.2704%" y="453" width="0.0307%" height="15" fill="rgb(218,133,21)" fg:x="985" fg:w="1"/><text x="30.5204%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (7 samples, 0.22%)</title><rect x="30.3012%" y="453" width="0.2151%" height="15" fill="rgb(221,193,43)" fg:x="986" fg:w="7"/><text x="30.5512%" y="463.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.06%)</title><rect x="30.5163%" y="453" width="0.0615%" height="15" fill="rgb(240,128,52)" fg:x="993" fg:w="2"/><text x="30.7663%" y="463.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.06%)</title><rect x="30.5778%" y="453" width="0.0615%" height="15" fill="rgb(253,114,12)" fg:x="995" fg:w="2"/><text x="30.8278%" y="463.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (5 samples, 0.15%)</title><rect x="30.6392%" y="453" width="0.1537%" height="15" fill="rgb(215,223,47)" fg:x="997" fg:w="5"/><text x="30.8892%" y="463.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (43 samples, 1.32%)</title><rect x="29.6558%" y="469" width="1.3215%" height="15" fill="rgb(248,225,23)" fg:x="965" fg:w="43"/><text x="29.9058%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (6 samples, 0.18%)</title><rect x="30.7929%" y="453" width="0.1844%" height="15" fill="rgb(250,108,0)" fg:x="1002" fg:w="6"/><text x="31.0429%" y="463.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (1 samples, 0.03%)</title><rect x="30.9773%" y="469" width="0.0307%" height="15" fill="rgb(228,208,7)" fg:x="1008" fg:w="1"/><text x="31.2273%" y="479.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (2 samples, 0.06%)</title><rect x="31.0080%" y="469" width="0.0615%" height="15" fill="rgb(244,45,10)" fg:x="1009" fg:w="2"/><text x="31.2580%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="31.0695%" y="469" width="0.0307%" height="15" fill="rgb(207,125,25)" fg:x="1011" fg:w="1"/><text x="31.3195%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.03%)</title><rect x="31.1002%" y="469" width="0.0307%" height="15" fill="rgb(210,195,18)" fg:x="1012" fg:w="1"/><text x="31.3502%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.03%)</title><rect x="31.1309%" y="469" width="0.0307%" height="15" fill="rgb(249,80,12)" fg:x="1013" fg:w="1"/><text x="31.3809%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="31.1616%" y="469" width="0.0307%" height="15" fill="rgb(221,65,9)" fg:x="1014" fg:w="1"/><text x="31.4116%" y="479.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_par_ks_blocks (51 samples, 1.57%)</title><rect x="29.6558%" y="517" width="1.5673%" height="15" fill="rgb(235,49,36)" fg:x="965" fg:w="51"/><text x="29.9058%" y="527.50"></text></g><g><title>chacha20::backends::avx2::rounds (51 samples, 1.57%)</title><rect x="29.6558%" y="501" width="1.5673%" height="15" fill="rgb(225,32,20)" fg:x="965" fg:w="51"/><text x="29.9058%" y="511.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (51 samples, 1.57%)</title><rect x="29.6558%" y="485" width="1.5673%" height="15" fill="rgb(215,141,46)" fg:x="965" fg:w="51"/><text x="29.9058%" y="495.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="31.1924%" y="469" width="0.0307%" height="15" fill="rgb(250,160,47)" fg:x="1015" fg:w="1"/><text x="31.4424%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="31.2231%" y="437" width="0.0307%" height="15" fill="rgb(216,222,40)" fg:x="1016" fg:w="1"/><text x="31.4731%" y="447.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="31.2231%" y="421" width="0.0307%" height="15" fill="rgb(234,217,39)" fg:x="1016" fg:w="1"/><text x="31.4731%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="31.2538%" y="437" width="0.0307%" height="15" fill="rgb(207,178,40)" fg:x="1017" fg:w="1"/><text x="31.5038%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="31.2846%" y="437" width="0.0307%" height="15" fill="rgb(221,136,13)" fg:x="1018" fg:w="1"/><text x="31.5346%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.06%)</title><rect x="31.3153%" y="437" width="0.0615%" height="15" fill="rgb(249,199,10)" fg:x="1019" fg:w="2"/><text x="31.5653%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="31.3768%" y="437" width="0.0307%" height="15" fill="rgb(249,222,13)" fg:x="1021" fg:w="1"/><text x="31.6268%" y="447.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::encrypt_in_place_detached (58 samples, 1.78%)</title><rect x="29.6558%" y="677" width="1.7824%" height="15" fill="rgb(244,185,38)" fg:x="965" fg:w="58"/><text x="29.9058%" y="687.50">&lt;..</text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::encrypt_in_place_detached (58 samples, 1.78%)</title><rect x="29.6558%" y="661" width="1.7824%" height="15" fill="rgb(236,202,9)" fg:x="965" fg:w="58"/><text x="29.9058%" y="671.50">c..</text></g><g><title>cipher::stream::StreamCipher::apply_keystream (58 samples, 1.78%)</title><rect x="29.6558%" y="645" width="1.7824%" height="15" fill="rgb(250,229,37)" fg:x="965" fg:w="58"/><text x="29.9058%" y="655.50">c..</text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (58 samples, 1.78%)</title><rect x="29.6558%" y="629" width="1.7824%" height="15" fill="rgb(206,174,23)" fg:x="965" fg:w="58"/><text x="29.9058%" y="639.50">c..</text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (58 samples, 1.78%)</title><rect x="29.6558%" y="613" width="1.7824%" height="15" fill="rgb(211,33,43)" fg:x="965" fg:w="58"/><text x="29.9058%" y="623.50">&lt;..</text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (58 samples, 1.78%)</title><rect x="29.6558%" y="597" width="1.7824%" height="15" fill="rgb(245,58,50)" fg:x="965" fg:w="58"/><text x="29.9058%" y="607.50">c..</text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (58 samples, 1.78%)</title><rect x="29.6558%" y="581" width="1.7824%" height="15" fill="rgb(244,68,36)" fg:x="965" fg:w="58"/><text x="29.9058%" y="591.50">&lt;..</text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (58 samples, 1.78%)</title><rect x="29.6558%" y="565" width="1.7824%" height="15" fill="rgb(232,229,15)" fg:x="965" fg:w="58"/><text x="29.9058%" y="575.50">&lt;..</text></g><g><title>chacha20::backends::avx2::inner (58 samples, 1.78%)</title><rect x="29.6558%" y="549" width="1.7824%" height="15" fill="rgb(254,30,23)" fg:x="965" fg:w="58"/><text x="29.9058%" y="559.50">c..</text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (58 samples, 1.78%)</title><rect x="29.6558%" y="533" width="1.7824%" height="15" fill="rgb(235,160,14)" fg:x="965" fg:w="58"/><text x="29.9058%" y="543.50">&lt;..</text></g><g><title>cipher::stream_core::StreamBackend::gen_tail_blocks (7 samples, 0.22%)</title><rect x="31.2231%" y="517" width="0.2151%" height="15" fill="rgb(212,155,44)" fg:x="1016" fg:w="7"/><text x="31.4731%" y="527.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (7 samples, 0.22%)</title><rect x="31.2231%" y="501" width="0.2151%" height="15" fill="rgb(226,2,50)" fg:x="1016" fg:w="7"/><text x="31.4731%" y="511.50"></text></g><g><title>chacha20::backends::avx2::rounds (7 samples, 0.22%)</title><rect x="31.2231%" y="485" width="0.2151%" height="15" fill="rgb(234,177,6)" fg:x="1016" fg:w="7"/><text x="31.4731%" y="495.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (7 samples, 0.22%)</title><rect x="31.2231%" y="469" width="0.2151%" height="15" fill="rgb(217,24,9)" fg:x="1016" fg:w="7"/><text x="31.4731%" y="479.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (7 samples, 0.22%)</title><rect x="31.2231%" y="453" width="0.2151%" height="15" fill="rgb(220,13,46)" fg:x="1016" fg:w="7"/><text x="31.4731%" y="463.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="31.4075%" y="437" width="0.0307%" height="15" fill="rgb(239,221,27)" fg:x="1022" fg:w="1"/><text x="31.6575%" y="447.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (3 samples, 0.09%)</title><rect x="31.4382%" y="677" width="0.0922%" height="15" fill="rgb(222,198,25)" fg:x="1023" fg:w="3"/><text x="31.6882%" y="687.50"></text></g><g><title>inout::inout_buf::InOutBuf&lt;u8&gt;::xor_in2out (3 samples, 0.09%)</title><rect x="31.4382%" y="661" width="0.0922%" height="15" fill="rgb(211,99,13)" fg:x="1023" fg:w="3"/><text x="31.6882%" y="671.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="31.5304%" y="677" width="0.0307%" height="15" fill="rgb(232,111,31)" fg:x="1026" fg:w="1"/><text x="31.7804%" y="687.50"></text></g><g><title>&lt;core::core_arch::x86::__m128i as core::core_arch::x86::m128iExt&gt;::as_m128i (1 samples, 0.03%)</title><rect x="31.5612%" y="677" width="0.0307%" height="15" fill="rgb(245,82,37)" fg:x="1027" fg:w="1"/><text x="31.8112%" y="687.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (175 samples, 5.38%)</title><rect x="31.5919%" y="677" width="5.3780%" height="15" fill="rgb(227,149,46)" fg:x="1028" fg:w="175"/><text x="31.8419%" y="687.50">&lt;core::..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="36.9699%" y="677" width="0.0307%" height="15" fill="rgb(218,36,50)" fg:x="1203" fg:w="1"/><text x="37.2199%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (27 samples, 0.83%)</title><rect x="37.0006%" y="677" width="0.8297%" height="15" fill="rgb(226,80,48)" fg:x="1204" fg:w="27"/><text x="37.2506%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (3 samples, 0.09%)</title><rect x="37.8304%" y="677" width="0.0922%" height="15" fill="rgb(238,224,15)" fg:x="1231" fg:w="3"/><text x="38.0804%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="37.9226%" y="677" width="0.0307%" height="15" fill="rgb(241,136,10)" fg:x="1234" fg:w="1"/><text x="38.1726%" y="687.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (29 samples, 0.89%)</title><rect x="37.9533%" y="677" width="0.8912%" height="15" fill="rgb(208,32,45)" fg:x="1235" fg:w="29"/><text x="38.2033%" y="687.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (4 samples, 0.12%)</title><rect x="38.7216%" y="661" width="0.1229%" height="15" fill="rgb(207,135,9)" fg:x="1260" fg:w="4"/><text x="38.9716%" y="671.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.03%)</title><rect x="38.8445%" y="677" width="0.0307%" height="15" fill="rgb(206,86,44)" fg:x="1264" fg:w="1"/><text x="39.0945%" y="687.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.03%)</title><rect x="38.8752%" y="677" width="0.0307%" height="15" fill="rgb(245,177,15)" fg:x="1265" fg:w="1"/><text x="39.1252%" y="687.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.03%)</title><rect x="38.9060%" y="677" width="0.0307%" height="15" fill="rgb(206,64,50)" fg:x="1266" fg:w="1"/><text x="39.1560%" y="687.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.03%)</title><rect x="39.0289%" y="661" width="0.0307%" height="15" fill="rgb(234,36,40)" fg:x="1270" fg:w="1"/><text x="39.2789%" y="671.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.03%)</title><rect x="39.0596%" y="661" width="0.0307%" height="15" fill="rgb(213,64,8)" fg:x="1271" fg:w="1"/><text x="39.3096%" y="671.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.03%)</title><rect x="39.0596%" y="645" width="0.0307%" height="15" fill="rgb(210,75,36)" fg:x="1271" fg:w="1"/><text x="39.3096%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::cast (1 samples, 0.03%)</title><rect x="39.1211%" y="645" width="0.0307%" height="15" fill="rgb(229,88,21)" fg:x="1273" fg:w="1"/><text x="39.3711%" y="655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.25%)</title><rect x="38.9367%" y="677" width="0.2459%" height="15" fill="rgb(252,204,47)" fg:x="1267" fg:w="8"/><text x="39.1867%" y="687.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (3 samples, 0.09%)</title><rect x="39.0904%" y="661" width="0.0922%" height="15" fill="rgb(208,77,27)" fg:x="1272" fg:w="3"/><text x="39.3404%" y="671.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (1 samples, 0.03%)</title><rect x="39.1518%" y="645" width="0.0307%" height="15" fill="rgb(221,76,26)" fg:x="1274" fg:w="1"/><text x="39.4018%" y="655.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (1 samples, 0.03%)</title><rect x="39.7357%" y="661" width="0.0307%" height="15" fill="rgb(225,139,18)" fg:x="1293" fg:w="1"/><text x="39.9857%" y="671.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.03%)</title><rect x="39.7357%" y="645" width="0.0307%" height="15" fill="rgb(230,137,11)" fg:x="1293" fg:w="1"/><text x="39.9857%" y="655.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (20 samples, 0.61%)</title><rect x="39.1825%" y="677" width="0.6146%" height="15" fill="rgb(212,28,1)" fg:x="1275" fg:w="20"/><text x="39.4325%" y="687.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::sub_ptr (1 samples, 0.03%)</title><rect x="39.7664%" y="661" width="0.0307%" height="15" fill="rgb(248,164,17)" fg:x="1294" fg:w="1"/><text x="40.0164%" y="671.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (45 samples, 1.38%)</title><rect x="40.9342%" y="661" width="1.3829%" height="15" fill="rgb(222,171,42)" fg:x="1332" fg:w="45"/><text x="41.1842%" y="671.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_mut (3 samples, 0.09%)</title><rect x="42.3171%" y="661" width="0.0922%" height="15" fill="rgb(243,84,45)" fg:x="1377" fg:w="3"/><text x="42.5671%" y="671.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_sub (4 samples, 0.12%)</title><rect x="42.7781%" y="645" width="0.1229%" height="15" fill="rgb(252,49,23)" fg:x="1392" fg:w="4"/><text x="43.0281%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::cast (2 samples, 0.06%)</title><rect x="42.9010%" y="645" width="0.0615%" height="15" fill="rgb(215,19,7)" fg:x="1396" fg:w="2"/><text x="43.1510%" y="655.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (110 samples, 3.38%)</title><rect x="39.7972%" y="677" width="3.3805%" height="15" fill="rgb(238,81,41)" fg:x="1295" fg:w="110"/><text x="40.0472%" y="687.50">&lt;co..</text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (25 samples, 0.77%)</title><rect x="42.4093%" y="661" width="0.7683%" height="15" fill="rgb(210,199,37)" fg:x="1380" fg:w="25"/><text x="42.6593%" y="671.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (7 samples, 0.22%)</title><rect x="42.9625%" y="645" width="0.2151%" height="15" fill="rgb(244,192,49)" fg:x="1398" fg:w="7"/><text x="43.2125%" y="655.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (6 samples, 0.18%)</title><rect x="42.9932%" y="629" width="0.1844%" height="15" fill="rgb(226,211,11)" fg:x="1399" fg:w="6"/><text x="43.2432%" y="639.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4 as curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4::square_and_negate_D::__Impl_square_and_negate_D__&gt;::_impl_square_and_negate_D (1 samples, 0.03%)</title><rect x="43.1776%" y="677" width="0.0307%" height="15" fill="rgb(236,162,54)" fg:x="1405" fg:w="1"/><text x="43.4276%" y="687.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4 as curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4::square_and_negate_D::__Impl_square_and_negate_D__&gt;::_impl_square_and_negate_D::m_lo (1 samples, 0.03%)</title><rect x="43.1776%" y="661" width="0.0307%" height="15" fill="rgb(220,229,9)" fg:x="1405" fg:w="1"/><text x="43.4276%" y="671.50"></text></g><g><title>curve25519_dalek::backend::vector::packed_simd::u32x8::mul32 (1 samples, 0.03%)</title><rect x="43.1776%" y="645" width="0.0307%" height="15" fill="rgb(250,87,22)" fg:x="1405" fg:w="1"/><text x="43.4276%" y="655.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::packed_simd::u32x8 as curve25519_dalek::backend::vector::packed_simd::u32x8::mul32::__Impl_mul32__&gt;::_impl_mul32 (1 samples, 0.03%)</title><rect x="43.1776%" y="629" width="0.0307%" height="15" fill="rgb(239,43,17)" fg:x="1405" fg:w="1"/><text x="43.4276%" y="639.50"></text></g><g><title>curve25519_dalek::backend::vector::avx2::field::unpack_pair::_impl_unpack_pair (1 samples, 0.03%)</title><rect x="43.1776%" y="613" width="0.0307%" height="15" fill="rgb(231,177,25)" fg:x="1405" fg:w="1"/><text x="43.4276%" y="623.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (2 samples, 0.06%)</title><rect x="43.2084%" y="677" width="0.0615%" height="15" fill="rgb(219,179,1)" fg:x="1406" fg:w="2"/><text x="43.4584%" y="687.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (64 samples, 1.97%)</title><rect x="43.2698%" y="677" width="1.9668%" height="15" fill="rgb(238,219,53)" fg:x="1408" fg:w="64"/><text x="43.5198%" y="687.50">&lt;..</text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (1 samples, 0.03%)</title><rect x="45.2366%" y="677" width="0.0307%" height="15" fill="rgb(232,167,36)" fg:x="1472" fg:w="1"/><text x="45.4866%" y="687.50"></text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (1 samples, 0.03%)</title><rect x="45.2366%" y="661" width="0.0307%" height="15" fill="rgb(244,19,51)" fg:x="1472" fg:w="1"/><text x="45.4866%" y="671.50"></text></g><g><title>&lt;std::os::fd::owned::BorrowedFd as std::os::fd::raw::AsRawFd&gt;::as_raw_fd (1 samples, 0.03%)</title><rect x="45.2674%" y="677" width="0.0307%" height="15" fill="rgb(224,6,22)" fg:x="1473" fg:w="1"/><text x="45.5174%" y="687.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (3 samples, 0.09%)</title><rect x="45.4210%" y="405" width="0.0922%" height="15" fill="rgb(224,145,5)" fg:x="1478" fg:w="3"/><text x="45.6710%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="45.5132%" y="405" width="0.0307%" height="15" fill="rgb(234,130,49)" fg:x="1481" fg:w="1"/><text x="45.7632%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (2 samples, 0.06%)</title><rect x="45.5439%" y="389" width="0.0615%" height="15" fill="rgb(254,6,2)" fg:x="1482" fg:w="2"/><text x="45.7939%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (2 samples, 0.06%)</title><rect x="45.6054%" y="389" width="0.0615%" height="15" fill="rgb(208,96,46)" fg:x="1484" fg:w="2"/><text x="45.8554%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.06%)</title><rect x="45.6669%" y="389" width="0.0615%" height="15" fill="rgb(239,3,39)" fg:x="1486" fg:w="2"/><text x="45.9169%" y="399.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.03%)</title><rect x="45.6976%" y="373" width="0.0307%" height="15" fill="rgb(233,210,1)" fg:x="1487" fg:w="1"/><text x="45.9476%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.06%)</title><rect x="45.7283%" y="389" width="0.0615%" height="15" fill="rgb(244,137,37)" fg:x="1488" fg:w="2"/><text x="45.9783%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (2 samples, 0.06%)</title><rect x="45.7898%" y="389" width="0.0615%" height="15" fill="rgb(240,136,2)" fg:x="1490" fg:w="2"/><text x="46.0398%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (11 samples, 0.34%)</title><rect x="45.5439%" y="405" width="0.3380%" height="15" fill="rgb(239,18,37)" fg:x="1482" fg:w="11"/><text x="45.7939%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="45.8513%" y="389" width="0.0307%" height="15" fill="rgb(218,185,22)" fg:x="1492" fg:w="1"/><text x="46.1013%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (2 samples, 0.06%)</title><rect x="45.8820%" y="405" width="0.0615%" height="15" fill="rgb(225,218,4)" fg:x="1493" fg:w="2"/><text x="46.1320%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="45.9435%" y="405" width="0.0307%" height="15" fill="rgb(230,182,32)" fg:x="1495" fg:w="1"/><text x="46.1935%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="45.9742%" y="405" width="0.0307%" height="15" fill="rgb(242,56,43)" fg:x="1496" fg:w="1"/><text x="46.2242%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (4 samples, 0.12%)</title><rect x="46.0049%" y="405" width="0.1229%" height="15" fill="rgb(233,99,24)" fg:x="1497" fg:w="4"/><text x="46.2549%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="46.1278%" y="405" width="0.0307%" height="15" fill="rgb(234,209,42)" fg:x="1501" fg:w="1"/><text x="46.3778%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (6 samples, 0.18%)</title><rect x="46.1586%" y="405" width="0.1844%" height="15" fill="rgb(227,7,12)" fg:x="1502" fg:w="6"/><text x="46.4086%" y="415.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (32 samples, 0.98%)</title><rect x="45.4210%" y="421" width="0.9834%" height="15" fill="rgb(245,203,43)" fg:x="1478" fg:w="32"/><text x="45.6710%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (2 samples, 0.06%)</title><rect x="46.3430%" y="405" width="0.0615%" height="15" fill="rgb(238,205,33)" fg:x="1508" fg:w="2"/><text x="46.5930%" y="415.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (4 samples, 0.12%)</title><rect x="46.4044%" y="405" width="0.1229%" height="15" fill="rgb(231,56,7)" fg:x="1510" fg:w="4"/><text x="46.6544%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="46.5274%" y="405" width="0.0307%" height="15" fill="rgb(244,186,29)" fg:x="1514" fg:w="1"/><text x="46.7774%" y="415.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.03%)</title><rect x="46.5581%" y="389" width="0.0307%" height="15" fill="rgb(234,111,31)" fg:x="1515" fg:w="1"/><text x="46.8081%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (3 samples, 0.09%)</title><rect x="46.5888%" y="389" width="0.0922%" height="15" fill="rgb(241,149,10)" fg:x="1516" fg:w="3"/><text x="46.8388%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="46.6810%" y="389" width="0.0307%" height="15" fill="rgb(249,206,44)" fg:x="1519" fg:w="1"/><text x="46.9310%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (7 samples, 0.22%)</title><rect x="46.5581%" y="405" width="0.2151%" height="15" fill="rgb(251,153,30)" fg:x="1515" fg:w="7"/><text x="46.8081%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (2 samples, 0.06%)</title><rect x="46.7117%" y="389" width="0.0615%" height="15" fill="rgb(239,152,38)" fg:x="1520" fg:w="2"/><text x="46.9617%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.03%)</title><rect x="46.7732%" y="405" width="0.0307%" height="15" fill="rgb(249,139,47)" fg:x="1522" fg:w="1"/><text x="47.0232%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.03%)</title><rect x="46.8039%" y="405" width="0.0307%" height="15" fill="rgb(244,64,35)" fg:x="1523" fg:w="1"/><text x="47.0539%" y="415.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.03%)</title><rect x="46.8039%" y="389" width="0.0307%" height="15" fill="rgb(216,46,15)" fg:x="1523" fg:w="1"/><text x="47.0539%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (2 samples, 0.06%)</title><rect x="46.8347%" y="405" width="0.0615%" height="15" fill="rgb(250,74,19)" fg:x="1524" fg:w="2"/><text x="47.0847%" y="415.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (2 samples, 0.06%)</title><rect x="46.8347%" y="389" width="0.0615%" height="15" fill="rgb(249,42,33)" fg:x="1524" fg:w="2"/><text x="47.0847%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (2 samples, 0.06%)</title><rect x="46.8961%" y="405" width="0.0615%" height="15" fill="rgb(242,149,17)" fg:x="1526" fg:w="2"/><text x="47.1461%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (3 samples, 0.09%)</title><rect x="46.9576%" y="405" width="0.0922%" height="15" fill="rgb(244,29,21)" fg:x="1528" fg:w="3"/><text x="47.2076%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (4 samples, 0.12%)</title><rect x="47.0498%" y="405" width="0.1229%" height="15" fill="rgb(220,130,37)" fg:x="1531" fg:w="4"/><text x="47.2998%" y="415.50"></text></g><g><title>chacha20::backends::avx2::rounds (58 samples, 1.78%)</title><rect x="45.4210%" y="453" width="1.7824%" height="15" fill="rgb(211,67,2)" fg:x="1478" fg:w="58"/><text x="45.6710%" y="463.50">c..</text></g><g><title>chacha20::backends::avx2::double_quarter_round (58 samples, 1.78%)</title><rect x="45.4210%" y="437" width="1.7824%" height="15" fill="rgb(235,68,52)" fg:x="1478" fg:w="58"/><text x="45.6710%" y="447.50">c..</text></g><g><title>chacha20::backends::avx2::rows_to_cols (26 samples, 0.80%)</title><rect x="46.4044%" y="421" width="0.7990%" height="15" fill="rgb(246,142,3)" fg:x="1510" fg:w="26"/><text x="46.6544%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="47.1727%" y="405" width="0.0307%" height="15" fill="rgb(241,25,7)" fg:x="1535" fg:w="1"/><text x="47.4227%" y="415.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_par_ks_blocks (61 samples, 1.87%)</title><rect x="45.3596%" y="469" width="1.8746%" height="15" fill="rgb(242,119,39)" fg:x="1476" fg:w="61"/><text x="45.6096%" y="479.50">&lt;..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.03%)</title><rect x="47.2034%" y="453" width="0.0307%" height="15" fill="rgb(241,98,45)" fg:x="1536" fg:w="1"/><text x="47.4534%" y="463.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="47.2342%" y="389" width="0.0307%" height="15" fill="rgb(254,28,30)" fg:x="1537" fg:w="1"/><text x="47.4842%" y="399.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="47.2649%" y="373" width="0.0307%" height="15" fill="rgb(241,142,54)" fg:x="1538" fg:w="1"/><text x="47.5149%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.03%)</title><rect x="47.2956%" y="373" width="0.0307%" height="15" fill="rgb(222,85,15)" fg:x="1539" fg:w="1"/><text x="47.5456%" y="383.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.03%)</title><rect x="47.2956%" y="357" width="0.0307%" height="15" fill="rgb(210,85,47)" fg:x="1539" fg:w="1"/><text x="47.5456%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="47.3264%" y="373" width="0.0307%" height="15" fill="rgb(224,206,25)" fg:x="1540" fg:w="1"/><text x="47.5764%" y="383.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.03%)</title><rect x="47.3264%" y="357" width="0.0307%" height="15" fill="rgb(243,201,19)" fg:x="1540" fg:w="1"/><text x="47.5764%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (4 samples, 0.12%)</title><rect x="47.2649%" y="389" width="0.1229%" height="15" fill="rgb(236,59,4)" fg:x="1538" fg:w="4"/><text x="47.5149%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="47.3571%" y="373" width="0.0307%" height="15" fill="rgb(254,179,45)" fg:x="1541" fg:w="1"/><text x="47.6071%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.03%)</title><rect x="47.3878%" y="389" width="0.0307%" height="15" fill="rgb(226,14,10)" fg:x="1542" fg:w="1"/><text x="47.6378%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (2 samples, 0.06%)</title><rect x="47.4186%" y="389" width="0.0615%" height="15" fill="rgb(244,27,41)" fg:x="1543" fg:w="2"/><text x="47.6686%" y="399.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.03%)</title><rect x="47.4493%" y="373" width="0.0307%" height="15" fill="rgb(235,35,32)" fg:x="1544" fg:w="1"/><text x="47.6993%" y="383.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (9 samples, 0.28%)</title><rect x="47.2342%" y="405" width="0.2766%" height="15" fill="rgb(218,68,31)" fg:x="1537" fg:w="9"/><text x="47.4842%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="47.4800%" y="389" width="0.0307%" height="15" fill="rgb(207,120,37)" fg:x="1545" fg:w="1"/><text x="47.7300%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.03%)</title><rect x="47.5108%" y="373" width="0.0307%" height="15" fill="rgb(227,98,0)" fg:x="1546" fg:w="1"/><text x="47.7608%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (2 samples, 0.06%)</title><rect x="47.5108%" y="389" width="0.0615%" height="15" fill="rgb(207,7,3)" fg:x="1546" fg:w="2"/><text x="47.7608%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="47.5415%" y="373" width="0.0307%" height="15" fill="rgb(206,98,19)" fg:x="1547" fg:w="1"/><text x="47.7915%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (3 samples, 0.09%)</title><rect x="47.5722%" y="389" width="0.0922%" height="15" fill="rgb(217,5,26)" fg:x="1548" fg:w="3"/><text x="47.8222%" y="399.50"></text></g><g><title>cipher::stream_core::StreamBackend::gen_tail_blocks (15 samples, 0.46%)</title><rect x="47.2342%" y="469" width="0.4610%" height="15" fill="rgb(235,190,38)" fg:x="1537" fg:w="15"/><text x="47.4842%" y="479.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (15 samples, 0.46%)</title><rect x="47.2342%" y="453" width="0.4610%" height="15" fill="rgb(247,86,24)" fg:x="1537" fg:w="15"/><text x="47.4842%" y="463.50"></text></g><g><title>chacha20::backends::avx2::rounds (15 samples, 0.46%)</title><rect x="47.2342%" y="437" width="0.4610%" height="15" fill="rgb(205,101,16)" fg:x="1537" fg:w="15"/><text x="47.4842%" y="447.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (15 samples, 0.46%)</title><rect x="47.2342%" y="421" width="0.4610%" height="15" fill="rgb(246,168,33)" fg:x="1537" fg:w="15"/><text x="47.4842%" y="431.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (6 samples, 0.18%)</title><rect x="47.5108%" y="405" width="0.1844%" height="15" fill="rgb(231,114,1)" fg:x="1546" fg:w="6"/><text x="47.7608%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="47.6644%" y="389" width="0.0307%" height="15" fill="rgb(207,184,53)" fg:x="1551" fg:w="1"/><text x="47.9144%" y="399.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3 samples, 0.09%)</title><rect x="47.9103%" y="213" width="0.0922%" height="15" fill="rgb(224,95,51)" fg:x="1559" fg:w="3"/><text x="48.1603%" y="223.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (1 samples, 0.03%)</title><rect x="48.3712%" y="197" width="0.0307%" height="15" fill="rgb(212,188,45)" fg:x="1574" fg:w="1"/><text x="48.6212%" y="207.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (14 samples, 0.43%)</title><rect x="48.0025%" y="213" width="0.4302%" height="15" fill="rgb(223,154,38)" fg:x="1562" fg:w="14"/><text x="48.2525%" y="223.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (1 samples, 0.03%)</title><rect x="48.4020%" y="197" width="0.0307%" height="15" fill="rgb(251,22,52)" fg:x="1575" fg:w="1"/><text x="48.6520%" y="207.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (26 samples, 0.80%)</title><rect x="47.6951%" y="469" width="0.7990%" height="15" fill="rgb(229,209,22)" fg:x="1552" fg:w="26"/><text x="47.9451%" y="479.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (26 samples, 0.80%)</title><rect x="47.6951%" y="453" width="0.7990%" height="15" fill="rgb(234,138,34)" fg:x="1552" fg:w="26"/><text x="47.9451%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (26 samples, 0.80%)</title><rect x="47.6951%" y="437" width="0.7990%" height="15" fill="rgb(212,95,11)" fg:x="1552" fg:w="26"/><text x="47.9451%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (26 samples, 0.80%)</title><rect x="47.6951%" y="421" width="0.7990%" height="15" fill="rgb(240,179,47)" fg:x="1552" fg:w="26"/><text x="47.9451%" y="431.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (26 samples, 0.80%)</title><rect x="47.6951%" y="405" width="0.7990%" height="15" fill="rgb(240,163,11)" fg:x="1552" fg:w="26"/><text x="47.9451%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (26 samples, 0.80%)</title><rect x="47.6951%" y="389" width="0.7990%" height="15" fill="rgb(236,37,12)" fg:x="1552" fg:w="26"/><text x="47.9451%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (26 samples, 0.80%)</title><rect x="47.6951%" y="373" width="0.7990%" height="15" fill="rgb(232,164,16)" fg:x="1552" fg:w="26"/><text x="47.9451%" y="383.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (26 samples, 0.80%)</title><rect x="47.6951%" y="357" width="0.7990%" height="15" fill="rgb(244,205,15)" fg:x="1552" fg:w="26"/><text x="47.9451%" y="367.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (26 samples, 0.80%)</title><rect x="47.6951%" y="341" width="0.7990%" height="15" fill="rgb(223,117,47)" fg:x="1552" fg:w="26"/><text x="47.9451%" y="351.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (26 samples, 0.80%)</title><rect x="47.6951%" y="325" width="0.7990%" height="15" fill="rgb(244,107,35)" fg:x="1552" fg:w="26"/><text x="47.9451%" y="335.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (26 samples, 0.80%)</title><rect x="47.6951%" y="309" width="0.7990%" height="15" fill="rgb(205,140,8)" fg:x="1552" fg:w="26"/><text x="47.9451%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (26 samples, 0.80%)</title><rect x="47.6951%" y="293" width="0.7990%" height="15" fill="rgb(228,84,46)" fg:x="1552" fg:w="26"/><text x="47.9451%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (26 samples, 0.80%)</title><rect x="47.6951%" y="277" width="0.7990%" height="15" fill="rgb(254,188,9)" fg:x="1552" fg:w="26"/><text x="47.9451%" y="287.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (26 samples, 0.80%)</title><rect x="47.6951%" y="261" width="0.7990%" height="15" fill="rgb(206,112,54)" fg:x="1552" fg:w="26"/><text x="47.9451%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (25 samples, 0.77%)</title><rect x="47.7259%" y="245" width="0.7683%" height="15" fill="rgb(216,84,49)" fg:x="1553" fg:w="25"/><text x="47.9759%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (19 samples, 0.58%)</title><rect x="47.9103%" y="229" width="0.5839%" height="15" fill="rgb(214,194,35)" fg:x="1559" fg:w="19"/><text x="48.1603%" y="239.50"></text></g><g><title>core::slice::raw::from_raw_parts (2 samples, 0.06%)</title><rect x="48.4327%" y="213" width="0.0615%" height="15" fill="rgb(249,28,3)" fg:x="1576" fg:w="2"/><text x="48.6827%" y="223.50"></text></g><g><title>core::ptr::slice_from_raw_parts (2 samples, 0.06%)</title><rect x="48.4327%" y="197" width="0.0615%" height="15" fill="rgb(222,56,52)" fg:x="1576" fg:w="2"/><text x="48.6827%" y="207.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (2 samples, 0.06%)</title><rect x="48.4327%" y="181" width="0.0615%" height="15" fill="rgb(245,217,50)" fg:x="1576" fg:w="2"/><text x="48.6827%" y="191.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::Deref&gt;::deref (6 samples, 0.18%)</title><rect x="48.9551%" y="453" width="0.1844%" height="15" fill="rgb(213,201,24)" fg:x="1593" fg:w="6"/><text x="49.2051%" y="463.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (3 samples, 0.09%)</title><rect x="49.1395%" y="453" width="0.0922%" height="15" fill="rgb(248,116,28)" fg:x="1599" fg:w="3"/><text x="49.3895%" y="463.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.03%)</title><rect x="49.6005%" y="197" width="0.0307%" height="15" fill="rgb(219,72,43)" fg:x="1614" fg:w="1"/><text x="49.8505%" y="207.50"></text></g><g><title>chacha20::backends::avx2::inner (152 samples, 4.67%)</title><rect x="45.2981%" y="501" width="4.6712%" height="15" fill="rgb(209,138,14)" fg:x="1474" fg:w="152"/><text x="45.5481%" y="511.50">chach..</text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (151 samples, 4.64%)</title><rect x="45.3288%" y="485" width="4.6404%" height="15" fill="rgb(222,18,33)" fg:x="1475" fg:w="151"/><text x="45.5788%" y="495.50">&lt;ciph..</text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;generic_array::GenericArray&lt;u8,N&gt;,M&gt;&gt;::xor_in2out (48 samples, 1.48%)</title><rect x="48.4942%" y="469" width="1.4751%" height="15" fill="rgb(213,199,7)" fg:x="1578" fg:w="48"/><text x="48.7442%" y="479.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (24 samples, 0.74%)</title><rect x="49.2317%" y="453" width="0.7376%" height="15" fill="rgb(250,110,10)" fg:x="1602" fg:w="24"/><text x="49.4817%" y="463.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (23 samples, 0.71%)</title><rect x="49.2624%" y="437" width="0.7068%" height="15" fill="rgb(248,123,6)" fg:x="1603" fg:w="23"/><text x="49.5124%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (23 samples, 0.71%)</title><rect x="49.2624%" y="421" width="0.7068%" height="15" fill="rgb(206,91,31)" fg:x="1603" fg:w="23"/><text x="49.5124%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (23 samples, 0.71%)</title><rect x="49.2624%" y="405" width="0.7068%" height="15" fill="rgb(211,154,13)" fg:x="1603" fg:w="23"/><text x="49.5124%" y="415.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (23 samples, 0.71%)</title><rect x="49.2624%" y="389" width="0.7068%" height="15" fill="rgb(225,148,7)" fg:x="1603" fg:w="23"/><text x="49.5124%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (23 samples, 0.71%)</title><rect x="49.2624%" y="373" width="0.7068%" height="15" fill="rgb(220,160,43)" fg:x="1603" fg:w="23"/><text x="49.5124%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (23 samples, 0.71%)</title><rect x="49.2624%" y="357" width="0.7068%" height="15" fill="rgb(213,52,39)" fg:x="1603" fg:w="23"/><text x="49.5124%" y="367.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (23 samples, 0.71%)</title><rect x="49.2624%" y="341" width="0.7068%" height="15" fill="rgb(243,137,7)" fg:x="1603" fg:w="23"/><text x="49.5124%" y="351.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (23 samples, 0.71%)</title><rect x="49.2624%" y="325" width="0.7068%" height="15" fill="rgb(230,79,13)" fg:x="1603" fg:w="23"/><text x="49.5124%" y="335.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (23 samples, 0.71%)</title><rect x="49.2624%" y="309" width="0.7068%" height="15" fill="rgb(247,105,23)" fg:x="1603" fg:w="23"/><text x="49.5124%" y="319.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (23 samples, 0.71%)</title><rect x="49.2624%" y="293" width="0.7068%" height="15" fill="rgb(223,179,41)" fg:x="1603" fg:w="23"/><text x="49.5124%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (23 samples, 0.71%)</title><rect x="49.2624%" y="277" width="0.7068%" height="15" fill="rgb(218,9,34)" fg:x="1603" fg:w="23"/><text x="49.5124%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (23 samples, 0.71%)</title><rect x="49.2624%" y="261" width="0.7068%" height="15" fill="rgb(222,106,8)" fg:x="1603" fg:w="23"/><text x="49.5124%" y="271.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (23 samples, 0.71%)</title><rect x="49.2624%" y="245" width="0.7068%" height="15" fill="rgb(211,220,0)" fg:x="1603" fg:w="23"/><text x="49.5124%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (20 samples, 0.61%)</title><rect x="49.3546%" y="229" width="0.6146%" height="15" fill="rgb(229,52,16)" fg:x="1606" fg:w="20"/><text x="49.6046%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (12 samples, 0.37%)</title><rect x="49.6005%" y="213" width="0.3688%" height="15" fill="rgb(212,155,18)" fg:x="1614" fg:w="12"/><text x="49.8505%" y="223.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (11 samples, 0.34%)</title><rect x="49.6312%" y="197" width="0.3380%" height="15" fill="rgb(242,21,14)" fg:x="1615" fg:w="11"/><text x="49.8812%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.03%)</title><rect x="49.9385%" y="181" width="0.0307%" height="15" fill="rgb(222,19,48)" fg:x="1625" fg:w="1"/><text x="50.1885%" y="191.50"></text></g><g><title>chacha20::backends::avx2::rounds (2 samples, 0.06%)</title><rect x="49.9693%" y="501" width="0.0615%" height="15" fill="rgb(232,45,27)" fg:x="1626" fg:w="2"/><text x="50.2193%" y="511.50"></text></g><g><title>core::array::iter::&lt;impl core::iter::traits::collect::IntoIterator for [T: N]&gt;::into_iter (1 samples, 0.03%)</title><rect x="50.0307%" y="501" width="0.0307%" height="15" fill="rgb(249,103,42)" fg:x="1628" fg:w="1"/><text x="50.2807%" y="511.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (6 samples, 0.18%)</title><rect x="50.0615%" y="501" width="0.1844%" height="15" fill="rgb(246,81,33)" fg:x="1629" fg:w="6"/><text x="50.3115%" y="511.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (1 samples, 0.03%)</title><rect x="50.2459%" y="501" width="0.0307%" height="15" fill="rgb(252,33,42)" fg:x="1635" fg:w="1"/><text x="50.4959%" y="511.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (6 samples, 0.18%)</title><rect x="50.2766%" y="501" width="0.1844%" height="15" fill="rgb(209,212,41)" fg:x="1636" fg:w="6"/><text x="50.5266%" y="511.50"></text></g><g><title>cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt;::check_remaining (1 samples, 0.03%)</title><rect x="50.4610%" y="485" width="0.0307%" height="15" fill="rgb(207,154,6)" fg:x="1642" fg:w="1"/><text x="50.7110%" y="495.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (170 samples, 5.22%)</title><rect x="45.2981%" y="597" width="5.2243%" height="15" fill="rgb(223,64,47)" fg:x="1474" fg:w="170"/><text x="45.5481%" y="607.50">cipher..</text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (170 samples, 5.22%)</title><rect x="45.2981%" y="581" width="5.2243%" height="15" fill="rgb(211,161,38)" fg:x="1474" fg:w="170"/><text x="45.5481%" y="591.50">cipher..</text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (170 samples, 5.22%)</title><rect x="45.2981%" y="565" width="5.2243%" height="15" fill="rgb(219,138,40)" fg:x="1474" fg:w="170"/><text x="45.5481%" y="575.50">&lt;ciphe..</text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (170 samples, 5.22%)</title><rect x="45.2981%" y="549" width="5.2243%" height="15" fill="rgb(241,228,46)" fg:x="1474" fg:w="170"/><text x="45.5481%" y="559.50">cipher..</text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (170 samples, 5.22%)</title><rect x="45.2981%" y="533" width="5.2243%" height="15" fill="rgb(223,209,38)" fg:x="1474" fg:w="170"/><text x="45.5481%" y="543.50">&lt;chach..</text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (170 samples, 5.22%)</title><rect x="45.2981%" y="517" width="5.2243%" height="15" fill="rgb(236,164,45)" fg:x="1474" fg:w="170"/><text x="45.5481%" y="527.50">&lt;chach..</text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.06%)</title><rect x="50.4610%" y="501" width="0.0615%" height="15" fill="rgb(231,15,5)" fg:x="1642" fg:w="2"/><text x="50.7110%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.03%)</title><rect x="50.4917%" y="485" width="0.0307%" height="15" fill="rgb(252,35,15)" fg:x="1643" fg:w="1"/><text x="50.7417%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (5 samples, 0.15%)</title><rect x="50.6454%" y="421" width="0.1537%" height="15" fill="rgb(248,181,18)" fg:x="1648" fg:w="5"/><text x="50.8954%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.03%)</title><rect x="50.7990%" y="421" width="0.0307%" height="15" fill="rgb(233,39,42)" fg:x="1653" fg:w="1"/><text x="51.0490%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (2 samples, 0.06%)</title><rect x="50.8297%" y="421" width="0.0615%" height="15" fill="rgb(238,110,33)" fg:x="1654" fg:w="2"/><text x="51.0797%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="50.8912%" y="421" width="0.0307%" height="15" fill="rgb(233,195,10)" fg:x="1656" fg:w="1"/><text x="51.1412%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="50.9219%" y="421" width="0.0307%" height="15" fill="rgb(254,105,3)" fg:x="1657" fg:w="1"/><text x="51.1719%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (15 samples, 0.46%)</title><rect x="50.5224%" y="437" width="0.4610%" height="15" fill="rgb(221,225,9)" fg:x="1644" fg:w="15"/><text x="50.7724%" y="447.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (1 samples, 0.03%)</title><rect x="50.9527%" y="421" width="0.0307%" height="15" fill="rgb(224,227,45)" fg:x="1658" fg:w="1"/><text x="51.2027%" y="431.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (1 samples, 0.03%)</title><rect x="50.9527%" y="405" width="0.0307%" height="15" fill="rgb(229,198,43)" fg:x="1658" fg:w="1"/><text x="51.2027%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.03%)</title><rect x="50.9834%" y="421" width="0.0307%" height="15" fill="rgb(206,209,35)" fg:x="1659" fg:w="1"/><text x="51.2334%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.03%)</title><rect x="51.0141%" y="421" width="0.0307%" height="15" fill="rgb(245,195,53)" fg:x="1660" fg:w="1"/><text x="51.2641%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (6 samples, 0.18%)</title><rect x="51.0449%" y="421" width="0.1844%" height="15" fill="rgb(240,92,26)" fg:x="1661" fg:w="6"/><text x="51.2949%" y="431.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (3 samples, 0.09%)</title><rect x="51.2293%" y="421" width="0.0922%" height="15" fill="rgb(207,40,23)" fg:x="1667" fg:w="3"/><text x="51.4793%" y="431.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (3 samples, 0.09%)</title><rect x="51.2293%" y="405" width="0.0922%" height="15" fill="rgb(223,111,35)" fg:x="1667" fg:w="3"/><text x="51.4793%" y="415.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (3 samples, 0.09%)</title><rect x="51.2293%" y="389" width="0.0922%" height="15" fill="rgb(229,147,28)" fg:x="1667" fg:w="3"/><text x="51.4793%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.06%)</title><rect x="51.3215%" y="421" width="0.0615%" height="15" fill="rgb(211,29,28)" fg:x="1670" fg:w="2"/><text x="51.5715%" y="431.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.03%)</title><rect x="51.3522%" y="405" width="0.0307%" height="15" fill="rgb(228,72,33)" fg:x="1671" fg:w="1"/><text x="51.6022%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (14 samples, 0.43%)</title><rect x="50.9834%" y="437" width="0.4302%" height="15" fill="rgb(205,214,31)" fg:x="1659" fg:w="14"/><text x="51.2334%" y="447.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (1 samples, 0.03%)</title><rect x="51.3829%" y="421" width="0.0307%" height="15" fill="rgb(224,111,15)" fg:x="1672" fg:w="1"/><text x="51.6329%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (4 samples, 0.12%)</title><rect x="51.4136%" y="437" width="0.1229%" height="15" fill="rgb(253,21,26)" fg:x="1673" fg:w="4"/><text x="51.6636%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (1 samples, 0.03%)</title><rect x="51.5366%" y="437" width="0.0307%" height="15" fill="rgb(245,139,43)" fg:x="1677" fg:w="1"/><text x="51.7866%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.03%)</title><rect x="51.5673%" y="421" width="0.0307%" height="15" fill="rgb(252,170,7)" fg:x="1678" fg:w="1"/><text x="51.8173%" y="431.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (3 samples, 0.09%)</title><rect x="51.5980%" y="421" width="0.0922%" height="15" fill="rgb(231,118,14)" fg:x="1679" fg:w="3"/><text x="51.8480%" y="431.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (3 samples, 0.09%)</title><rect x="51.5980%" y="405" width="0.0922%" height="15" fill="rgb(238,83,0)" fg:x="1679" fg:w="3"/><text x="51.8480%" y="415.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (3 samples, 0.09%)</title><rect x="51.5980%" y="389" width="0.0922%" height="15" fill="rgb(221,39,39)" fg:x="1679" fg:w="3"/><text x="51.8480%" y="399.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (2 samples, 0.06%)</title><rect x="51.7517%" y="405" width="0.0615%" height="15" fill="rgb(222,119,46)" fg:x="1684" fg:w="2"/><text x="52.0017%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (9 samples, 0.28%)</title><rect x="51.5673%" y="437" width="0.2766%" height="15" fill="rgb(222,165,49)" fg:x="1678" fg:w="9"/><text x="51.8173%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (5 samples, 0.15%)</title><rect x="51.6902%" y="421" width="0.1537%" height="15" fill="rgb(219,113,52)" fg:x="1682" fg:w="5"/><text x="51.9402%" y="431.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="51.8132%" y="405" width="0.0307%" height="15" fill="rgb(214,7,15)" fg:x="1686" fg:w="1"/><text x="52.0632%" y="415.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="51.8132%" y="389" width="0.0307%" height="15" fill="rgb(235,32,4)" fg:x="1686" fg:w="1"/><text x="52.0632%" y="399.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.03%)</title><rect x="51.8132%" y="373" width="0.0307%" height="15" fill="rgb(238,90,54)" fg:x="1686" fg:w="1"/><text x="52.0632%" y="383.50"></text></g><g><title>__do_softirq (1 samples, 0.03%)</title><rect x="51.8132%" y="357" width="0.0307%" height="15" fill="rgb(213,208,19)" fg:x="1686" fg:w="1"/><text x="52.0632%" y="367.50"></text></g><g><title>__this_cpu_preempt_check (1 samples, 0.03%)</title><rect x="51.8132%" y="341" width="0.0307%" height="15" fill="rgb(233,156,4)" fg:x="1686" fg:w="1"/><text x="52.0632%" y="351.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.06%)</title><rect x="51.8439%" y="437" width="0.0615%" height="15" fill="rgb(207,194,5)" fg:x="1687" fg:w="2"/><text x="52.0939%" y="447.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::decrypt_in_place_detached (216 samples, 6.64%)</title><rect x="45.2981%" y="613" width="6.6380%" height="15" fill="rgb(206,111,30)" fg:x="1474" fg:w="216"/><text x="45.5481%" y="623.50">chacha20p..</text></g><g><title>universal_hash::UniversalHash::update_padded (46 samples, 1.41%)</title><rect x="50.5224%" y="597" width="1.4136%" height="15" fill="rgb(243,70,54)" fg:x="1644" fg:w="46"/><text x="50.7724%" y="607.50"></text></g><g><title>universal_hash::UniversalHash::update (46 samples, 1.41%)</title><rect x="50.5224%" y="581" width="1.4136%" height="15" fill="rgb(242,28,8)" fg:x="1644" fg:w="46"/><text x="50.7724%" y="591.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (46 samples, 1.41%)</title><rect x="50.5224%" y="565" width="1.4136%" height="15" fill="rgb(219,106,18)" fg:x="1644" fg:w="46"/><text x="50.7724%" y="575.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (46 samples, 1.41%)</title><rect x="50.5224%" y="549" width="1.4136%" height="15" fill="rgb(244,222,10)" fg:x="1644" fg:w="46"/><text x="50.7724%" y="559.50"></text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (46 samples, 1.41%)</title><rect x="50.5224%" y="533" width="1.4136%" height="15" fill="rgb(236,179,52)" fg:x="1644" fg:w="46"/><text x="50.7724%" y="543.50"></text></g><g><title>&lt;poly1305::backend::avx2::State as universal_hash::UhfBackend&gt;::proc_par_blocks (46 samples, 1.41%)</title><rect x="50.5224%" y="517" width="1.4136%" height="15" fill="rgb(213,23,39)" fg:x="1644" fg:w="46"/><text x="50.7724%" y="527.50"></text></g><g><title>poly1305::backend::avx2::State::compute_par_blocks (46 samples, 1.41%)</title><rect x="50.5224%" y="501" width="1.4136%" height="15" fill="rgb(238,48,10)" fg:x="1644" fg:w="46"/><text x="50.7724%" y="511.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (46 samples, 1.41%)</title><rect x="50.5224%" y="485" width="1.4136%" height="15" fill="rgb(251,196,23)" fg:x="1644" fg:w="46"/><text x="50.7724%" y="495.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (46 samples, 1.41%)</title><rect x="50.5224%" y="469" width="1.4136%" height="15" fill="rgb(250,152,24)" fg:x="1644" fg:w="46"/><text x="50.7724%" y="479.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (46 samples, 1.41%)</title><rect x="50.5224%" y="453" width="1.4136%" height="15" fill="rgb(209,150,17)" fg:x="1644" fg:w="46"/><text x="50.7724%" y="463.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.03%)</title><rect x="51.9053%" y="437" width="0.0307%" height="15" fill="rgb(234,202,34)" fg:x="1689" fg:w="1"/><text x="52.1553%" y="447.50"></text></g><g><title>&lt;tftp::client::encryption_socket::EncryptionBoundSocket&lt;S,Rng&gt; as tftp::socket::Socket&gt;::recv_from (218 samples, 6.70%)</title><rect x="45.2981%" y="677" width="6.6994%" height="15" fill="rgb(253,148,53)" fg:x="1474" fg:w="218"/><text x="45.5481%" y="687.50">&lt;tftp::cl..</text></g><g><title>tftp::encrypted_packet::EncryptedPacket::decrypt (218 samples, 6.70%)</title><rect x="45.2981%" y="661" width="6.6994%" height="15" fill="rgb(218,129,16)" fg:x="1474" fg:w="218"/><text x="45.5481%" y="671.50">tftp::enc..</text></g><g><title>tftp::encryption::Encryptor&lt;R&gt;::decrypt (218 samples, 6.70%)</title><rect x="45.2981%" y="645" width="6.6994%" height="15" fill="rgb(216,85,19)" fg:x="1474" fg:w="218"/><text x="45.5481%" y="655.50">tftp::enc..</text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (218 samples, 6.70%)</title><rect x="45.2981%" y="629" width="6.6994%" height="15" fill="rgb(235,228,7)" fg:x="1474" fg:w="218"/><text x="45.5481%" y="639.50">&lt;chacha20..</text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (2 samples, 0.06%)</title><rect x="51.9361%" y="613" width="0.0615%" height="15" fill="rgb(245,175,0)" fg:x="1690" fg:w="2"/><text x="52.1861%" y="623.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (2 samples, 0.06%)</title><rect x="51.9361%" y="597" width="0.0615%" height="15" fill="rgb(208,168,36)" fg:x="1690" fg:w="2"/><text x="52.1861%" y="607.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (2 samples, 0.06%)</title><rect x="51.9361%" y="581" width="0.0615%" height="15" fill="rgb(246,171,24)" fg:x="1690" fg:w="2"/><text x="52.1861%" y="591.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (2 samples, 0.06%)</title><rect x="51.9361%" y="565" width="0.0615%" height="15" fill="rgb(215,142,24)" fg:x="1690" fg:w="2"/><text x="52.1861%" y="575.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (2 samples, 0.06%)</title><rect x="51.9361%" y="549" width="0.0615%" height="15" fill="rgb(250,187,7)" fg:x="1690" fg:w="2"/><text x="52.1861%" y="559.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (2 samples, 0.06%)</title><rect x="51.9361%" y="533" width="0.0615%" height="15" fill="rgb(228,66,33)" fg:x="1690" fg:w="2"/><text x="52.1861%" y="543.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (2 samples, 0.06%)</title><rect x="51.9361%" y="517" width="0.0615%" height="15" fill="rgb(234,215,21)" fg:x="1690" fg:w="2"/><text x="52.1861%" y="527.50"></text></g><g><title>chacha20::backends::avx2::inner (2 samples, 0.06%)</title><rect x="51.9361%" y="501" width="0.0615%" height="15" fill="rgb(222,191,20)" fg:x="1690" fg:w="2"/><text x="52.1861%" y="511.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (1 samples, 0.03%)</title><rect x="51.9668%" y="485" width="0.0307%" height="15" fill="rgb(245,79,54)" fg:x="1691" fg:w="1"/><text x="52.2168%" y="495.50"></text></g><g><title>inout::inout_buf::InOutBuf&lt;T&gt;::into_chunks (1 samples, 0.03%)</title><rect x="51.9668%" y="469" width="0.0307%" height="15" fill="rgb(240,10,37)" fg:x="1691" fg:w="1"/><text x="52.2168%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.03%)</title><rect x="51.9668%" y="453" width="0.0307%" height="15" fill="rgb(214,192,32)" fg:x="1691" fg:w="1"/><text x="52.2168%" y="463.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (2 samples, 0.06%)</title><rect x="51.9975%" y="421" width="0.0615%" height="15" fill="rgb(209,36,54)" fg:x="1692" fg:w="2"/><text x="52.2475%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (2 samples, 0.06%)</title><rect x="51.9975%" y="405" width="0.0615%" height="15" fill="rgb(220,10,11)" fg:x="1692" fg:w="2"/><text x="52.2475%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.06%)</title><rect x="51.9975%" y="389" width="0.0615%" height="15" fill="rgb(221,106,17)" fg:x="1692" fg:w="2"/><text x="52.2475%" y="399.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.03%)</title><rect x="52.0283%" y="373" width="0.0307%" height="15" fill="rgb(251,142,44)" fg:x="1693" fg:w="1"/><text x="52.2783%" y="383.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="52.0590%" y="389" width="0.0307%" height="15" fill="rgb(238,13,15)" fg:x="1694" fg:w="1"/><text x="52.3090%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="52.0897%" y="389" width="0.0307%" height="15" fill="rgb(208,107,27)" fg:x="1695" fg:w="1"/><text x="52.3397%" y="399.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_par_ks_blocks (6 samples, 0.18%)</title><rect x="51.9975%" y="469" width="0.1844%" height="15" fill="rgb(205,136,37)" fg:x="1692" fg:w="6"/><text x="52.2475%" y="479.50"></text></g><g><title>chacha20::backends::avx2::rounds (6 samples, 0.18%)</title><rect x="51.9975%" y="453" width="0.1844%" height="15" fill="rgb(250,205,27)" fg:x="1692" fg:w="6"/><text x="52.2475%" y="463.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (6 samples, 0.18%)</title><rect x="51.9975%" y="437" width="0.1844%" height="15" fill="rgb(210,80,43)" fg:x="1692" fg:w="6"/><text x="52.2475%" y="447.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (4 samples, 0.12%)</title><rect x="52.0590%" y="421" width="0.1229%" height="15" fill="rgb(247,160,36)" fg:x="1694" fg:w="4"/><text x="52.3090%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (4 samples, 0.12%)</title><rect x="52.0590%" y="405" width="0.1229%" height="15" fill="rgb(234,13,49)" fg:x="1694" fg:w="4"/><text x="52.3090%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (2 samples, 0.06%)</title><rect x="52.1205%" y="389" width="0.0615%" height="15" fill="rgb(234,122,0)" fg:x="1696" fg:w="2"/><text x="52.3705%" y="399.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.03%)</title><rect x="52.1512%" y="373" width="0.0307%" height="15" fill="rgb(207,146,38)" fg:x="1697" fg:w="1"/><text x="52.4012%" y="383.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (4 samples, 0.12%)</title><rect x="52.1819%" y="469" width="0.1229%" height="15" fill="rgb(207,177,25)" fg:x="1698" fg:w="4"/><text x="52.4319%" y="479.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (4 samples, 0.12%)</title><rect x="52.1819%" y="453" width="0.1229%" height="15" fill="rgb(211,178,42)" fg:x="1698" fg:w="4"/><text x="52.4319%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.12%)</title><rect x="52.1819%" y="437" width="0.1229%" height="15" fill="rgb(230,69,54)" fg:x="1698" fg:w="4"/><text x="52.4319%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.12%)</title><rect x="52.1819%" y="421" width="0.1229%" height="15" fill="rgb(214,135,41)" fg:x="1698" fg:w="4"/><text x="52.4319%" y="431.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.12%)</title><rect x="52.1819%" y="405" width="0.1229%" height="15" fill="rgb(237,67,25)" fg:x="1698" fg:w="4"/><text x="52.4319%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (4 samples, 0.12%)</title><rect x="52.1819%" y="389" width="0.1229%" height="15" fill="rgb(222,189,50)" fg:x="1698" fg:w="4"/><text x="52.4319%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (4 samples, 0.12%)</title><rect x="52.1819%" y="373" width="0.1229%" height="15" fill="rgb(245,148,34)" fg:x="1698" fg:w="4"/><text x="52.4319%" y="383.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (4 samples, 0.12%)</title><rect x="52.1819%" y="357" width="0.1229%" height="15" fill="rgb(222,29,6)" fg:x="1698" fg:w="4"/><text x="52.4319%" y="367.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (4 samples, 0.12%)</title><rect x="52.1819%" y="341" width="0.1229%" height="15" fill="rgb(221,189,43)" fg:x="1698" fg:w="4"/><text x="52.4319%" y="351.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (4 samples, 0.12%)</title><rect x="52.1819%" y="325" width="0.1229%" height="15" fill="rgb(207,36,27)" fg:x="1698" fg:w="4"/><text x="52.4319%" y="335.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (4 samples, 0.12%)</title><rect x="52.1819%" y="309" width="0.1229%" height="15" fill="rgb(217,90,24)" fg:x="1698" fg:w="4"/><text x="52.4319%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.12%)</title><rect x="52.1819%" y="293" width="0.1229%" height="15" fill="rgb(224,66,35)" fg:x="1698" fg:w="4"/><text x="52.4319%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.12%)</title><rect x="52.1819%" y="277" width="0.1229%" height="15" fill="rgb(221,13,50)" fg:x="1698" fg:w="4"/><text x="52.4319%" y="287.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.12%)</title><rect x="52.1819%" y="261" width="0.1229%" height="15" fill="rgb(236,68,49)" fg:x="1698" fg:w="4"/><text x="52.4319%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (4 samples, 0.12%)</title><rect x="52.1819%" y="245" width="0.1229%" height="15" fill="rgb(229,146,28)" fg:x="1698" fg:w="4"/><text x="52.4319%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (4 samples, 0.12%)</title><rect x="52.1819%" y="229" width="0.1229%" height="15" fill="rgb(225,31,38)" fg:x="1698" fg:w="4"/><text x="52.4319%" y="239.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (3 samples, 0.09%)</title><rect x="52.2127%" y="213" width="0.0922%" height="15" fill="rgb(250,208,3)" fg:x="1699" fg:w="3"/><text x="52.4627%" y="223.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.09%)</title><rect x="52.3356%" y="453" width="0.0922%" height="15" fill="rgb(246,54,23)" fg:x="1703" fg:w="3"/><text x="52.5856%" y="463.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.03%)</title><rect x="52.4278%" y="453" width="0.0307%" height="15" fill="rgb(243,76,11)" fg:x="1706" fg:w="1"/><text x="52.6778%" y="463.50"></text></g><g><title>chacha20::backends::avx2::inner (16 samples, 0.49%)</title><rect x="51.9975%" y="501" width="0.4917%" height="15" fill="rgb(245,21,50)" fg:x="1692" fg:w="16"/><text x="52.2475%" y="511.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (16 samples, 0.49%)</title><rect x="51.9975%" y="485" width="0.4917%" height="15" fill="rgb(228,9,43)" fg:x="1692" fg:w="16"/><text x="52.2475%" y="495.50"></text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;generic_array::GenericArray&lt;u8,N&gt;,M&gt;&gt;::xor_in2out (6 samples, 0.18%)</title><rect x="52.3049%" y="469" width="0.1844%" height="15" fill="rgb(208,100,47)" fg:x="1702" fg:w="6"/><text x="52.5549%" y="479.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.03%)</title><rect x="52.4585%" y="453" width="0.0307%" height="15" fill="rgb(232,26,8)" fg:x="1707" fg:w="1"/><text x="52.7085%" y="463.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.03%)</title><rect x="52.4585%" y="437" width="0.0307%" height="15" fill="rgb(216,166,38)" fg:x="1707" fg:w="1"/><text x="52.7085%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.03%)</title><rect x="52.4585%" y="421" width="0.0307%" height="15" fill="rgb(251,202,51)" fg:x="1707" fg:w="1"/><text x="52.7085%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="52.4585%" y="405" width="0.0307%" height="15" fill="rgb(254,216,34)" fg:x="1707" fg:w="1"/><text x="52.7085%" y="415.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="52.4585%" y="389" width="0.0307%" height="15" fill="rgb(251,32,27)" fg:x="1707" fg:w="1"/><text x="52.7085%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.03%)</title><rect x="52.4585%" y="373" width="0.0307%" height="15" fill="rgb(208,127,28)" fg:x="1707" fg:w="1"/><text x="52.7085%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.03%)</title><rect x="52.4585%" y="357" width="0.0307%" height="15" fill="rgb(224,137,22)" fg:x="1707" fg:w="1"/><text x="52.7085%" y="367.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (1 samples, 0.03%)</title><rect x="52.4585%" y="341" width="0.0307%" height="15" fill="rgb(254,70,32)" fg:x="1707" fg:w="1"/><text x="52.7085%" y="351.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (1 samples, 0.03%)</title><rect x="52.4585%" y="325" width="0.0307%" height="15" fill="rgb(229,75,37)" fg:x="1707" fg:w="1"/><text x="52.7085%" y="335.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.03%)</title><rect x="52.4585%" y="309" width="0.0307%" height="15" fill="rgb(252,64,23)" fg:x="1707" fg:w="1"/><text x="52.7085%" y="319.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.03%)</title><rect x="52.4585%" y="293" width="0.0307%" height="15" fill="rgb(232,162,48)" fg:x="1707" fg:w="1"/><text x="52.7085%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.03%)</title><rect x="52.4585%" y="277" width="0.0307%" height="15" fill="rgb(246,160,12)" fg:x="1707" fg:w="1"/><text x="52.7085%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="52.4585%" y="261" width="0.0307%" height="15" fill="rgb(247,166,0)" fg:x="1707" fg:w="1"/><text x="52.7085%" y="271.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="52.4585%" y="245" width="0.0307%" height="15" fill="rgb(249,219,21)" fg:x="1707" fg:w="1"/><text x="52.7085%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.03%)</title><rect x="52.4585%" y="229" width="0.0307%" height="15" fill="rgb(205,209,3)" fg:x="1707" fg:w="1"/><text x="52.7085%" y="239.50"></text></g><g><title>chacha20::backends::avx2::rounds (1 samples, 0.03%)</title><rect x="52.4892%" y="501" width="0.0307%" height="15" fill="rgb(243,44,1)" fg:x="1708" fg:w="1"/><text x="52.7392%" y="511.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::encrypt_in_place_detached (18 samples, 0.55%)</title><rect x="51.9975%" y="613" width="0.5532%" height="15" fill="rgb(206,159,16)" fg:x="1692" fg:w="18"/><text x="52.2475%" y="623.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (18 samples, 0.55%)</title><rect x="51.9975%" y="597" width="0.5532%" height="15" fill="rgb(244,77,30)" fg:x="1692" fg:w="18"/><text x="52.2475%" y="607.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (18 samples, 0.55%)</title><rect x="51.9975%" y="581" width="0.5532%" height="15" fill="rgb(218,69,12)" fg:x="1692" fg:w="18"/><text x="52.2475%" y="591.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (18 samples, 0.55%)</title><rect x="51.9975%" y="565" width="0.5532%" height="15" fill="rgb(212,87,7)" fg:x="1692" fg:w="18"/><text x="52.2475%" y="575.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (18 samples, 0.55%)</title><rect x="51.9975%" y="549" width="0.5532%" height="15" fill="rgb(245,114,25)" fg:x="1692" fg:w="18"/><text x="52.2475%" y="559.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (18 samples, 0.55%)</title><rect x="51.9975%" y="533" width="0.5532%" height="15" fill="rgb(210,61,42)" fg:x="1692" fg:w="18"/><text x="52.2475%" y="543.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (18 samples, 0.55%)</title><rect x="51.9975%" y="517" width="0.5532%" height="15" fill="rgb(211,52,33)" fg:x="1692" fg:w="18"/><text x="52.2475%" y="527.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="52.5200%" y="501" width="0.0307%" height="15" fill="rgb(234,58,33)" fg:x="1709" fg:w="1"/><text x="52.7700%" y="511.50"></text></g><g><title>&lt;tftp::client::encryption_socket::EncryptionBoundSocket&lt;S,Rng&gt; as tftp::socket::Socket&gt;::send_to (19 samples, 0.58%)</title><rect x="51.9975%" y="677" width="0.5839%" height="15" fill="rgb(220,115,36)" fg:x="1692" fg:w="19"/><text x="52.2475%" y="687.50"></text></g><g><title>tftp::encrypted_packet::EncryptedPacket::encrypt (19 samples, 0.58%)</title><rect x="51.9975%" y="661" width="0.5839%" height="15" fill="rgb(243,153,54)" fg:x="1692" fg:w="19"/><text x="52.2475%" y="671.50"></text></g><g><title>tftp::encryption::Encryptor&lt;R&gt;::encrypt (19 samples, 0.58%)</title><rect x="51.9975%" y="645" width="0.5839%" height="15" fill="rgb(251,47,18)" fg:x="1692" fg:w="19"/><text x="52.2475%" y="655.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::encrypt_in_place_detached (19 samples, 0.58%)</title><rect x="51.9975%" y="629" width="0.5839%" height="15" fill="rgb(242,102,42)" fg:x="1692" fg:w="19"/><text x="52.2475%" y="639.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (1 samples, 0.03%)</title><rect x="52.5507%" y="613" width="0.0307%" height="15" fill="rgb(234,31,38)" fg:x="1710" fg:w="1"/><text x="52.8007%" y="623.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (1 samples, 0.03%)</title><rect x="52.5507%" y="597" width="0.0307%" height="15" fill="rgb(221,117,51)" fg:x="1710" fg:w="1"/><text x="52.8007%" y="607.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (1 samples, 0.03%)</title><rect x="52.5507%" y="581" width="0.0307%" height="15" fill="rgb(212,20,18)" fg:x="1710" fg:w="1"/><text x="52.8007%" y="591.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (1 samples, 0.03%)</title><rect x="52.5507%" y="565" width="0.0307%" height="15" fill="rgb(245,133,36)" fg:x="1710" fg:w="1"/><text x="52.8007%" y="575.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (1 samples, 0.03%)</title><rect x="52.5507%" y="549" width="0.0307%" height="15" fill="rgb(212,6,19)" fg:x="1710" fg:w="1"/><text x="52.8007%" y="559.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (1 samples, 0.03%)</title><rect x="52.5507%" y="533" width="0.0307%" height="15" fill="rgb(218,1,36)" fg:x="1710" fg:w="1"/><text x="52.8007%" y="543.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (1 samples, 0.03%)</title><rect x="52.5507%" y="517" width="0.0307%" height="15" fill="rgb(246,84,54)" fg:x="1710" fg:w="1"/><text x="52.8007%" y="527.50"></text></g><g><title>chacha20::backends::avx2::inner (1 samples, 0.03%)</title><rect x="52.5507%" y="501" width="0.0307%" height="15" fill="rgb(242,110,6)" fg:x="1710" fg:w="1"/><text x="52.8007%" y="511.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (1 samples, 0.03%)</title><rect x="52.5507%" y="485" width="0.0307%" height="15" fill="rgb(214,47,5)" fg:x="1710" fg:w="1"/><text x="52.8007%" y="495.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.03%)</title><rect x="52.5507%" y="469" width="0.0307%" height="15" fill="rgb(218,159,25)" fg:x="1710" fg:w="1"/><text x="52.8007%" y="479.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.03%)</title><rect x="52.5507%" y="453" width="0.0307%" height="15" fill="rgb(215,211,28)" fg:x="1710" fg:w="1"/><text x="52.8007%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.03%)</title><rect x="52.5507%" y="437" width="0.0307%" height="15" fill="rgb(238,59,32)" fg:x="1710" fg:w="1"/><text x="52.8007%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="52.5507%" y="421" width="0.0307%" height="15" fill="rgb(226,82,3)" fg:x="1710" fg:w="1"/><text x="52.8007%" y="431.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="52.5507%" y="405" width="0.0307%" height="15" fill="rgb(240,164,32)" fg:x="1710" fg:w="1"/><text x="52.8007%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.03%)</title><rect x="52.5507%" y="389" width="0.0307%" height="15" fill="rgb(232,46,7)" fg:x="1710" fg:w="1"/><text x="52.8007%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.03%)</title><rect x="52.5507%" y="373" width="0.0307%" height="15" fill="rgb(229,129,53)" fg:x="1710" fg:w="1"/><text x="52.8007%" y="383.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (1 samples, 0.03%)</title><rect x="52.5507%" y="357" width="0.0307%" height="15" fill="rgb(234,188,29)" fg:x="1710" fg:w="1"/><text x="52.8007%" y="367.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (1 samples, 0.03%)</title><rect x="52.5507%" y="341" width="0.0307%" height="15" fill="rgb(246,141,4)" fg:x="1710" fg:w="1"/><text x="52.8007%" y="351.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.03%)</title><rect x="52.5507%" y="325" width="0.0307%" height="15" fill="rgb(229,23,39)" fg:x="1710" fg:w="1"/><text x="52.8007%" y="335.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.03%)</title><rect x="52.5507%" y="309" width="0.0307%" height="15" fill="rgb(206,12,3)" fg:x="1710" fg:w="1"/><text x="52.8007%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.03%)</title><rect x="52.5507%" y="293" width="0.0307%" height="15" fill="rgb(252,226,20)" fg:x="1710" fg:w="1"/><text x="52.8007%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="52.5507%" y="277" width="0.0307%" height="15" fill="rgb(216,123,35)" fg:x="1710" fg:w="1"/><text x="52.8007%" y="287.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="52.5507%" y="261" width="0.0307%" height="15" fill="rgb(212,68,40)" fg:x="1710" fg:w="1"/><text x="52.8007%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.03%)</title><rect x="52.5507%" y="245" width="0.0307%" height="15" fill="rgb(254,125,32)" fg:x="1710" fg:w="1"/><text x="52.8007%" y="255.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (2 samples, 0.06%)</title><rect x="52.5814%" y="677" width="0.0615%" height="15" fill="rgb(253,97,22)" fg:x="1711" fg:w="2"/><text x="52.8314%" y="687.50"></text></g><g><title>[tftp] (1 samples, 0.03%)</title><rect x="52.6429%" y="677" width="0.0307%" height="15" fill="rgb(241,101,14)" fg:x="1713" fg:w="1"/><text x="52.8929%" y="687.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.03%)</title><rect x="52.6429%" y="661" width="0.0307%" height="15" fill="rgb(238,103,29)" fg:x="1713" fg:w="1"/><text x="52.8929%" y="671.50"></text></g><g><title>__memcpy_avx_unaligned (7 samples, 0.22%)</title><rect x="52.6736%" y="677" width="0.2151%" height="15" fill="rgb(233,195,47)" fg:x="1714" fg:w="7"/><text x="52.9236%" y="687.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.06%)</title><rect x="52.8888%" y="677" width="0.0615%" height="15" fill="rgb(246,218,30)" fg:x="1721" fg:w="2"/><text x="53.1388%" y="687.50"></text></g><g><title>_init (1 samples, 0.03%)</title><rect x="52.9502%" y="677" width="0.0307%" height="15" fill="rgb(219,145,47)" fg:x="1723" fg:w="1"/><text x="53.2002%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (1 samples, 0.03%)</title><rect x="52.9809%" y="677" width="0.0307%" height="15" fill="rgb(243,12,26)" fg:x="1724" fg:w="1"/><text x="53.2309%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (1 samples, 0.03%)</title><rect x="53.0117%" y="661" width="0.0307%" height="15" fill="rgb(214,87,16)" fg:x="1725" fg:w="1"/><text x="53.2617%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.06%)</title><rect x="53.0117%" y="677" width="0.0615%" height="15" fill="rgb(208,99,42)" fg:x="1725" fg:w="2"/><text x="53.2617%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.03%)</title><rect x="53.0424%" y="661" width="0.0307%" height="15" fill="rgb(253,99,2)" fg:x="1726" fg:w="1"/><text x="53.2924%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.03%)</title><rect x="53.0424%" y="645" width="0.0307%" height="15" fill="rgb(220,168,23)" fg:x="1726" fg:w="1"/><text x="53.2924%" y="655.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (1 samples, 0.03%)</title><rect x="53.0424%" y="629" width="0.0307%" height="15" fill="rgb(242,38,24)" fg:x="1726" fg:w="1"/><text x="53.2924%" y="639.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.03%)</title><rect x="53.0424%" y="613" width="0.0307%" height="15" fill="rgb(225,182,9)" fg:x="1726" fg:w="1"/><text x="53.2924%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::truncate (1 samples, 0.03%)</title><rect x="53.0731%" y="677" width="0.0307%" height="15" fill="rgb(243,178,37)" fg:x="1727" fg:w="1"/><text x="53.3231%" y="687.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (1 samples, 0.03%)</title><rect x="53.1039%" y="677" width="0.0307%" height="15" fill="rgb(232,139,19)" fg:x="1728" fg:w="1"/><text x="53.3539%" y="687.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (2 samples, 0.06%)</title><rect x="53.1346%" y="677" width="0.0615%" height="15" fill="rgb(225,201,24)" fg:x="1729" fg:w="2"/><text x="53.3846%" y="687.50"></text></g><g><title>chacha20::xchacha::hchacha (4 samples, 0.12%)</title><rect x="53.1961%" y="677" width="0.1229%" height="15" fill="rgb(221,47,46)" fg:x="1731" fg:w="4"/><text x="53.4461%" y="687.50"></text></g><g><title>chacha20::xchacha::quarter_round (4 samples, 0.12%)</title><rect x="53.3190%" y="677" width="0.1229%" height="15" fill="rgb(249,23,13)" fg:x="1735" fg:w="4"/><text x="53.5690%" y="687.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (1 samples, 0.03%)</title><rect x="53.4112%" y="661" width="0.0307%" height="15" fill="rgb(219,9,5)" fg:x="1738" fg:w="1"/><text x="53.6612%" y="671.50"></text></g><g><title>core::array::&lt;impl core::iter::traits::collect::IntoIterator for &amp;mut [T: N]&gt;::into_iter (2 samples, 0.06%)</title><rect x="53.4419%" y="677" width="0.0615%" height="15" fill="rgb(254,171,16)" fg:x="1739" fg:w="2"/><text x="53.6919%" y="687.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (1 samples, 0.03%)</title><rect x="53.4726%" y="661" width="0.0307%" height="15" fill="rgb(230,171,20)" fg:x="1740" fg:w="1"/><text x="53.7226%" y="671.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="53.4726%" y="645" width="0.0307%" height="15" fill="rgb(210,71,41)" fg:x="1740" fg:w="1"/><text x="53.7226%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::as_mut_ptr (1 samples, 0.03%)</title><rect x="53.4726%" y="629" width="0.0307%" height="15" fill="rgb(206,173,20)" fg:x="1740" fg:w="1"/><text x="53.7226%" y="639.50"></text></g><g><title>core::array::iter::IntoIter&lt;T,_&gt;::as_mut_slice (1 samples, 0.03%)</title><rect x="53.5034%" y="677" width="0.0307%" height="15" fill="rgb(233,88,34)" fg:x="1741" fg:w="1"/><text x="53.7534%" y="687.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (1 samples, 0.03%)</title><rect x="53.5034%" y="661" width="0.0307%" height="15" fill="rgb(223,209,46)" fg:x="1741" fg:w="1"/><text x="53.7534%" y="671.50"></text></g><g><title>&lt;core::ops::index_range::IndexRange as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.03%)</title><rect x="53.5034%" y="645" width="0.0307%" height="15" fill="rgb(250,43,18)" fg:x="1741" fg:w="1"/><text x="53.7534%" y="655.50"></text></g><g><title>core::ops::index_range::IndexRange::end (1 samples, 0.03%)</title><rect x="53.5034%" y="629" width="0.0307%" height="15" fill="rgb(208,13,10)" fg:x="1741" fg:w="1"/><text x="53.7534%" y="639.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.03%)</title><rect x="53.5341%" y="677" width="0.0307%" height="15" fill="rgb(212,200,36)" fg:x="1742" fg:w="1"/><text x="53.7841%" y="687.50"></text></g><g><title>core::convert::num::ptr_try_from_impls::&lt;impl core::convert::TryFrom&lt;usize&gt; for u64&gt;::try_from (1 samples, 0.03%)</title><rect x="53.5648%" y="677" width="0.0307%" height="15" fill="rgb(225,90,30)" fg:x="1743" fg:w="1"/><text x="53.8148%" y="687.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (9 samples, 0.28%)</title><rect x="53.5956%" y="677" width="0.2766%" height="15" fill="rgb(236,182,39)" fg:x="1744" fg:w="9"/><text x="53.8456%" y="687.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (11 samples, 0.34%)</title><rect x="53.8722%" y="677" width="0.3380%" height="15" fill="rgb(212,144,35)" fg:x="1753" fg:w="11"/><text x="54.1222%" y="687.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.03%)</title><rect x="54.2102%" y="677" width="0.0307%" height="15" fill="rgb(228,63,44)" fg:x="1764" fg:w="1"/><text x="54.4602%" y="687.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_blend_epi32 (1 samples, 0.03%)</title><rect x="54.2409%" y="677" width="0.0307%" height="15" fill="rgb(228,109,6)" fg:x="1765" fg:w="1"/><text x="54.4909%" y="687.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (3 samples, 0.09%)</title><rect x="54.2717%" y="677" width="0.0922%" height="15" fill="rgb(238,117,24)" fg:x="1766" fg:w="3"/><text x="54.5217%" y="687.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (2 samples, 0.06%)</title><rect x="54.3639%" y="677" width="0.0615%" height="15" fill="rgb(242,26,26)" fg:x="1769" fg:w="2"/><text x="54.6139%" y="687.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (2 samples, 0.06%)</title><rect x="54.4253%" y="677" width="0.0615%" height="15" fill="rgb(221,92,48)" fg:x="1771" fg:w="2"/><text x="54.6753%" y="687.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.03%)</title><rect x="54.4868%" y="677" width="0.0307%" height="15" fill="rgb(209,209,32)" fg:x="1773" fg:w="1"/><text x="54.7368%" y="687.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi64 (3 samples, 0.09%)</title><rect x="54.5175%" y="677" width="0.0922%" height="15" fill="rgb(221,70,22)" fg:x="1774" fg:w="3"/><text x="54.7675%" y="687.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (11 samples, 0.34%)</title><rect x="54.6097%" y="677" width="0.3380%" height="15" fill="rgb(248,145,5)" fg:x="1777" fg:w="11"/><text x="54.8597%" y="687.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srlv_epi64 (1 samples, 0.03%)</title><rect x="54.9478%" y="677" width="0.0307%" height="15" fill="rgb(226,116,26)" fg:x="1788" fg:w="1"/><text x="55.1978%" y="687.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (11 samples, 0.34%)</title><rect x="54.9785%" y="677" width="0.3380%" height="15" fill="rgb(244,5,17)" fg:x="1789" fg:w="11"/><text x="55.2285%" y="687.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (1 samples, 0.03%)</title><rect x="55.3165%" y="677" width="0.0307%" height="15" fill="rgb(252,159,33)" fg:x="1800" fg:w="1"/><text x="55.5665%" y="687.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.03%)</title><rect x="55.3473%" y="677" width="0.0307%" height="15" fill="rgb(206,71,0)" fg:x="1801" fg:w="1"/><text x="55.5973%" y="687.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (10 samples, 0.31%)</title><rect x="55.3780%" y="677" width="0.3073%" height="15" fill="rgb(233,118,54)" fg:x="1802" fg:w="10"/><text x="55.6280%" y="687.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (17 samples, 0.52%)</title><rect x="55.6853%" y="677" width="0.5224%" height="15" fill="rgb(234,83,48)" fg:x="1812" fg:w="17"/><text x="55.9353%" y="687.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (5 samples, 0.15%)</title><rect x="56.2077%" y="677" width="0.1537%" height="15" fill="rgb(228,3,54)" fg:x="1829" fg:w="5"/><text x="56.4577%" y="687.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.03%)</title><rect x="56.3614%" y="677" width="0.0307%" height="15" fill="rgb(226,155,13)" fg:x="1834" fg:w="1"/><text x="56.6114%" y="687.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="56.3921%" y="677" width="0.0307%" height="15" fill="rgb(241,28,37)" fg:x="1835" fg:w="1"/><text x="56.6421%" y="687.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (1 samples, 0.03%)</title><rect x="56.4229%" y="677" width="0.0307%" height="15" fill="rgb(233,93,10)" fg:x="1836" fg:w="1"/><text x="56.6729%" y="687.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_setzero_si128 (2 samples, 0.06%)</title><rect x="56.4536%" y="677" width="0.0615%" height="15" fill="rgb(225,113,19)" fg:x="1837" fg:w="2"/><text x="56.7036%" y="687.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi64x (2 samples, 0.06%)</title><rect x="56.4536%" y="661" width="0.0615%" height="15" fill="rgb(241,2,18)" fg:x="1837" fg:w="2"/><text x="56.7036%" y="671.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi64x (1 samples, 0.03%)</title><rect x="56.4843%" y="645" width="0.0307%" height="15" fill="rgb(228,207,21)" fg:x="1838" fg:w="1"/><text x="56.7343%" y="655.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_storeu_si128 (1 samples, 0.03%)</title><rect x="56.5151%" y="677" width="0.0307%" height="15" fill="rgb(213,211,35)" fg:x="1839" fg:w="1"/><text x="56.7651%" y="687.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_unaligned (1 samples, 0.03%)</title><rect x="56.5151%" y="661" width="0.0307%" height="15" fill="rgb(209,83,10)" fg:x="1839" fg:w="1"/><text x="56.7651%" y="671.50"></text></g><g><title>core::ptr::write_unaligned (1 samples, 0.03%)</title><rect x="56.5151%" y="645" width="0.0307%" height="15" fill="rgb(209,164,1)" fg:x="1839" fg:w="1"/><text x="56.7651%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="56.5151%" y="629" width="0.0307%" height="15" fill="rgb(213,184,43)" fg:x="1839" fg:w="1"/><text x="56.7651%" y="639.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4 samples, 0.12%)</title><rect x="56.5458%" y="677" width="0.1229%" height="15" fill="rgb(231,61,34)" fg:x="1840" fg:w="4"/><text x="56.7958%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::enumerate (1 samples, 0.03%)</title><rect x="56.6687%" y="677" width="0.0307%" height="15" fill="rgb(235,75,3)" fg:x="1844" fg:w="1"/><text x="56.9187%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.06%)</title><rect x="56.6994%" y="677" width="0.0615%" height="15" fill="rgb(220,106,47)" fg:x="1845" fg:w="2"/><text x="56.9494%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (35 samples, 1.08%)</title><rect x="56.7609%" y="677" width="1.0756%" height="15" fill="rgb(210,196,33)" fg:x="1847" fg:w="35"/><text x="57.0109%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (1 samples, 0.03%)</title><rect x="57.8365%" y="677" width="0.0307%" height="15" fill="rgb(229,154,42)" fg:x="1882" fg:w="1"/><text x="58.0865%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (1 samples, 0.03%)</title><rect x="57.8672%" y="677" width="0.0307%" height="15" fill="rgb(228,114,26)" fg:x="1883" fg:w="1"/><text x="58.1172%" y="687.50"></text></g><g><title>chacha20::xchacha::hchacha (1 samples, 0.03%)</title><rect x="57.8672%" y="661" width="0.0307%" height="15" fill="rgb(208,144,1)" fg:x="1883" fg:w="1"/><text x="58.1172%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;chacha20::xchacha::XChaChaCore&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm,typenum::bit::B1&gt;,typenum::bit::B0&gt;,typenum::bit::B1&gt;,typenum::bit::B0&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="57.8980%" y="677" width="0.0307%" height="15" fill="rgb(239,112,37)" fg:x="1884" fg:w="1"/><text x="58.1480%" y="687.50"></text></g><g><title>core::ptr::write (2 samples, 0.06%)</title><rect x="57.9287%" y="677" width="0.0615%" height="15" fill="rgb(210,96,50)" fg:x="1885" fg:w="2"/><text x="58.1787%" y="687.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.03%)</title><rect x="57.9902%" y="677" width="0.0307%" height="15" fill="rgb(222,178,2)" fg:x="1887" fg:w="1"/><text x="58.2402%" y="687.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.03%)</title><rect x="58.3897%" y="645" width="0.0307%" height="15" fill="rgb(226,74,18)" fg:x="1900" fg:w="1"/><text x="58.6397%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (15 samples, 0.46%)</title><rect x="58.0209%" y="677" width="0.4610%" height="15" fill="rgb(225,67,54)" fg:x="1888" fg:w="15"/><text x="58.2709%" y="687.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (9 samples, 0.28%)</title><rect x="58.2053%" y="661" width="0.2766%" height="15" fill="rgb(251,92,32)" fg:x="1894" fg:w="9"/><text x="58.4553%" y="671.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (2 samples, 0.06%)</title><rect x="58.4204%" y="645" width="0.0615%" height="15" fill="rgb(228,149,22)" fg:x="1901" fg:w="2"/><text x="58.6704%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at (1 samples, 0.03%)</title><rect x="58.4819%" y="677" width="0.0307%" height="15" fill="rgb(243,54,13)" fg:x="1903" fg:w="1"/><text x="58.7319%" y="687.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.03%)</title><rect x="58.5126%" y="677" width="0.0307%" height="15" fill="rgb(243,180,28)" fg:x="1904" fg:w="1"/><text x="58.7626%" y="687.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::cast (3 samples, 0.09%)</title><rect x="58.8814%" y="645" width="0.0922%" height="15" fill="rgb(208,167,24)" fg:x="1916" fg:w="3"/><text x="59.1314%" y="655.50"></text></g><g><title>core::slice::raw::from_raw_parts (41 samples, 1.26%)</title><rect x="58.5433%" y="677" width="1.2600%" height="15" fill="rgb(245,73,45)" fg:x="1905" fg:w="41"/><text x="58.7933%" y="687.50"></text></g><g><title>core::ptr::slice_from_raw_parts (30 samples, 0.92%)</title><rect x="58.8814%" y="661" width="0.9219%" height="15" fill="rgb(237,203,48)" fg:x="1916" fg:w="30"/><text x="59.1314%" y="671.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (27 samples, 0.83%)</title><rect x="58.9736%" y="645" width="0.8297%" height="15" fill="rgb(211,197,16)" fg:x="1919" fg:w="27"/><text x="59.2236%" y="655.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (14 samples, 0.43%)</title><rect x="59.8648%" y="645" width="0.4302%" height="15" fill="rgb(243,99,51)" fg:x="1948" fg:w="14"/><text x="60.1148%" y="655.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (17 samples, 0.52%)</title><rect x="59.8033%" y="677" width="0.5224%" height="15" fill="rgb(215,123,29)" fg:x="1946" fg:w="17"/><text x="60.0533%" y="687.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (15 samples, 0.46%)</title><rect x="59.8648%" y="661" width="0.4610%" height="15" fill="rgb(239,186,37)" fg:x="1948" fg:w="15"/><text x="60.1148%" y="671.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::cast (1 samples, 0.03%)</title><rect x="60.2950%" y="645" width="0.0307%" height="15" fill="rgb(252,136,39)" fg:x="1962" fg:w="1"/><text x="60.5450%" y="655.50"></text></g><g><title>core::sync::atomic::compiler_fence (1 samples, 0.03%)</title><rect x="60.3258%" y="677" width="0.0307%" height="15" fill="rgb(223,213,32)" fg:x="1963" fg:w="1"/><text x="60.5758%" y="687.50"></text></g><g><title>curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (1 samples, 0.03%)</title><rect x="60.3565%" y="677" width="0.0307%" height="15" fill="rgb(233,115,5)" fg:x="1964" fg:w="1"/><text x="60.6065%" y="687.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (1 samples, 0.03%)</title><rect x="60.3872%" y="677" width="0.0307%" height="15" fill="rgb(207,226,44)" fg:x="1965" fg:w="1"/><text x="60.6372%" y="687.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::iter_position (3 samples, 0.09%)</title><rect x="60.4179%" y="677" width="0.0922%" height="15" fill="rgb(208,126,0)" fg:x="1966" fg:w="3"/><text x="60.6679%" y="687.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.03%)</title><rect x="60.4794%" y="661" width="0.0307%" height="15" fill="rgb(244,66,21)" fg:x="1968" fg:w="1"/><text x="60.7294%" y="671.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (1 samples, 0.03%)</title><rect x="60.5101%" y="677" width="0.0307%" height="15" fill="rgb(222,97,12)" fg:x="1969" fg:w="1"/><text x="60.7601%" y="687.50"></text></g><g><title>polling::epoll::Poller::wait (1 samples, 0.03%)</title><rect x="60.5409%" y="677" width="0.0307%" height="15" fill="rgb(219,213,19)" fg:x="1970" fg:w="1"/><text x="60.7909%" y="687.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::AdditionKey as core::ops::arith::Add&lt;poly1305::backend::avx2::helpers::Aligned130&gt;&gt;::add::propagate_carry (1 samples, 0.03%)</title><rect x="60.5716%" y="629" width="0.0307%" height="15" fill="rgb(252,169,30)" fg:x="1971" fg:w="1"/><text x="60.8216%" y="639.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="60.6023%" y="629" width="0.0307%" height="15" fill="rgb(206,32,51)" fg:x="1972" fg:w="1"/><text x="60.8523%" y="639.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::AdditionKey as core::ops::arith::Add&lt;poly1305::backend::avx2::helpers::Aligned130&gt;&gt;::add::propagate_carry (1 samples, 0.03%)</title><rect x="60.6023%" y="613" width="0.0307%" height="15" fill="rgb(250,172,42)" fg:x="1972" fg:w="1"/><text x="60.8523%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.03%)</title><rect x="60.6331%" y="629" width="0.0307%" height="15" fill="rgb(209,34,43)" fg:x="1973" fg:w="1"/><text x="60.8831%" y="639.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::AdditionKey as core::ops::arith::Add&lt;poly1305::backend::avx2::helpers::Aligned130&gt;&gt;::add::propagate_carry (1 samples, 0.03%)</title><rect x="60.6945%" y="613" width="0.0307%" height="15" fill="rgb(223,11,35)" fg:x="1975" fg:w="1"/><text x="60.9445%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (3 samples, 0.09%)</title><rect x="60.6638%" y="629" width="0.0922%" height="15" fill="rgb(251,219,26)" fg:x="1974" fg:w="3"/><text x="60.9138%" y="639.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.03%)</title><rect x="60.7253%" y="613" width="0.0307%" height="15" fill="rgb(231,119,3)" fg:x="1976" fg:w="1"/><text x="60.9753%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.03%)</title><rect x="60.7560%" y="629" width="0.0307%" height="15" fill="rgb(216,97,11)" fg:x="1977" fg:w="1"/><text x="61.0060%" y="639.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.03%)</title><rect x="60.7867%" y="613" width="0.0307%" height="15" fill="rgb(223,59,9)" fg:x="1978" fg:w="1"/><text x="61.0367%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (2 samples, 0.06%)</title><rect x="60.7867%" y="629" width="0.0615%" height="15" fill="rgb(233,93,31)" fg:x="1978" fg:w="2"/><text x="61.0367%" y="639.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="60.8175%" y="613" width="0.0307%" height="15" fill="rgb(239,81,33)" fg:x="1979" fg:w="1"/><text x="61.0675%" y="623.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.03%)</title><rect x="60.8175%" y="597" width="0.0307%" height="15" fill="rgb(213,120,34)" fg:x="1979" fg:w="1"/><text x="61.0675%" y="607.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (1 samples, 0.03%)</title><rect x="60.8482%" y="629" width="0.0307%" height="15" fill="rgb(243,49,53)" fg:x="1980" fg:w="1"/><text x="61.0982%" y="639.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="60.8789%" y="629" width="0.0307%" height="15" fill="rgb(247,216,33)" fg:x="1981" fg:w="1"/><text x="61.1289%" y="639.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::AdditionKey as core::ops::arith::Add&lt;poly1305::backend::avx2::helpers::Aligned130&gt;&gt;::add::propagate_carry (13 samples, 0.40%)</title><rect x="60.5716%" y="645" width="0.3995%" height="15" fill="rgb(226,26,14)" fg:x="1971" fg:w="13"/><text x="60.8216%" y="655.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (2 samples, 0.06%)</title><rect x="60.9096%" y="629" width="0.0615%" height="15" fill="rgb(215,49,53)" fg:x="1982" fg:w="2"/><text x="61.1596%" y="639.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.03%)</title><rect x="60.9711%" y="629" width="0.0307%" height="15" fill="rgb(245,162,40)" fg:x="1984" fg:w="1"/><text x="61.2211%" y="639.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (1 samples, 0.03%)</title><rect x="60.9711%" y="613" width="0.0307%" height="15" fill="rgb(229,68,17)" fg:x="1984" fg:w="1"/><text x="61.2211%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.03%)</title><rect x="61.0018%" y="629" width="0.0307%" height="15" fill="rgb(213,182,10)" fg:x="1985" fg:w="1"/><text x="61.2518%" y="639.50"></text></g><g><title>poly1305::backend::avx2::State::finalize (1 samples, 0.03%)</title><rect x="61.0018%" y="613" width="0.0307%" height="15" fill="rgb(245,125,30)" fg:x="1985" fg:w="1"/><text x="61.2518%" y="623.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::AdditionKey as core::ops::arith::Add&lt;poly1305::backend::avx2::helpers::Aligned130&gt;&gt;::add (1 samples, 0.03%)</title><rect x="61.0018%" y="597" width="0.0307%" height="15" fill="rgb(232,202,2)" fg:x="1985" fg:w="1"/><text x="61.2518%" y="607.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_sllv_epi32 (1 samples, 0.03%)</title><rect x="61.0326%" y="613" width="0.0307%" height="15" fill="rgb(237,140,51)" fg:x="1986" fg:w="1"/><text x="61.2826%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (2 samples, 0.06%)</title><rect x="61.0326%" y="629" width="0.0615%" height="15" fill="rgb(236,157,25)" fg:x="1986" fg:w="2"/><text x="61.2826%" y="639.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (1 samples, 0.03%)</title><rect x="61.0633%" y="613" width="0.0307%" height="15" fill="rgb(219,209,0)" fg:x="1987" fg:w="1"/><text x="61.3133%" y="623.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi32 (1 samples, 0.03%)</title><rect x="61.0633%" y="597" width="0.0307%" height="15" fill="rgb(240,116,54)" fg:x="1987" fg:w="1"/><text x="61.3133%" y="607.50"></text></g><g><title>core::core_arch::simd::i32x8::new (1 samples, 0.03%)</title><rect x="61.0633%" y="581" width="0.0307%" height="15" fill="rgb(216,10,36)" fg:x="1987" fg:w="1"/><text x="61.3133%" y="591.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srlv_epi32 (1 samples, 0.03%)</title><rect x="61.0940%" y="629" width="0.0307%" height="15" fill="rgb(222,72,44)" fg:x="1988" fg:w="1"/><text x="61.3440%" y="639.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (2 samples, 0.06%)</title><rect x="61.1248%" y="629" width="0.0615%" height="15" fill="rgb(232,159,9)" fg:x="1989" fg:w="2"/><text x="61.3748%" y="639.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::AdditionKey as core::ops::arith::Add&lt;poly1305::backend::avx2::helpers::Aligned130&gt;&gt;::add::propagate_carry_32 (8 samples, 0.25%)</title><rect x="60.9711%" y="645" width="0.2459%" height="15" fill="rgb(210,39,32)" fg:x="1984" fg:w="8"/><text x="61.2211%" y="655.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="61.1862%" y="629" width="0.0307%" height="15" fill="rgb(216,194,45)" fg:x="1991" fg:w="1"/><text x="61.4362%" y="639.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (1 samples, 0.03%)</title><rect x="61.2170%" y="645" width="0.0307%" height="15" fill="rgb(218,18,35)" fg:x="1992" fg:w="1"/><text x="61.4670%" y="655.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="61.2477%" y="645" width="0.0307%" height="15" fill="rgb(207,83,51)" fg:x="1993" fg:w="1"/><text x="61.4977%" y="655.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="61.2784%" y="645" width="0.0307%" height="15" fill="rgb(225,63,43)" fg:x="1994" fg:w="1"/><text x="61.5284%" y="655.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (1 samples, 0.03%)</title><rect x="61.2784%" y="629" width="0.0307%" height="15" fill="rgb(207,57,36)" fg:x="1994" fg:w="1"/><text x="61.5284%" y="639.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::AdditionKey as core::ops::arith::Add&lt;poly1305::backend::avx2::helpers::Aligned130&gt;&gt;::add (25 samples, 0.77%)</title><rect x="60.5716%" y="661" width="0.7683%" height="15" fill="rgb(216,99,33)" fg:x="1971" fg:w="25"/><text x="60.8216%" y="671.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (1 samples, 0.03%)</title><rect x="61.3092%" y="645" width="0.0307%" height="15" fill="rgb(225,42,16)" fg:x="1995" fg:w="1"/><text x="61.5592%" y="655.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.03%)</title><rect x="61.3399%" y="645" width="0.0307%" height="15" fill="rgb(220,201,45)" fg:x="1996" fg:w="1"/><text x="61.5899%" y="655.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (4 samples, 0.12%)</title><rect x="61.3706%" y="613" width="0.1229%" height="15" fill="rgb(225,33,4)" fg:x="1997" fg:w="4"/><text x="61.6206%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.03%)</title><rect x="61.4935%" y="613" width="0.0307%" height="15" fill="rgb(224,33,50)" fg:x="2001" fg:w="1"/><text x="61.7435%" y="623.50"></text></g><g><title>core::core_arch::simd::u64x4::splat (1 samples, 0.03%)</title><rect x="61.4935%" y="597" width="0.0307%" height="15" fill="rgb(246,198,51)" fg:x="2001" fg:w="1"/><text x="61.7435%" y="607.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (1 samples, 0.03%)</title><rect x="61.5243%" y="613" width="0.0307%" height="15" fill="rgb(205,22,4)" fg:x="2002" fg:w="1"/><text x="61.7743%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.03%)</title><rect x="61.5243%" y="597" width="0.0307%" height="15" fill="rgb(206,3,8)" fg:x="2002" fg:w="1"/><text x="61.7743%" y="607.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_unpackhi_epi32 (1 samples, 0.03%)</title><rect x="61.5550%" y="613" width="0.0307%" height="15" fill="rgb(251,23,15)" fg:x="2003" fg:w="1"/><text x="61.8050%" y="623.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (1 samples, 0.03%)</title><rect x="61.5550%" y="597" width="0.0307%" height="15" fill="rgb(252,88,28)" fg:x="2003" fg:w="1"/><text x="61.8050%" y="607.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (2 samples, 0.06%)</title><rect x="61.5857%" y="613" width="0.0615%" height="15" fill="rgb(212,127,14)" fg:x="2004" fg:w="2"/><text x="61.8357%" y="623.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::SpacedMultiplier4x130&gt;&gt;::mul (11 samples, 0.34%)</title><rect x="61.3706%" y="629" width="0.3380%" height="15" fill="rgb(247,145,37)" fg:x="1997" fg:w="11"/><text x="61.6206%" y="639.50"></text></g><g><title>poly1305::backend::avx2::State::finalize::{{closure}} (2 samples, 0.06%)</title><rect x="61.6472%" y="613" width="0.0615%" height="15" fill="rgb(209,117,53)" fg:x="2006" fg:w="2"/><text x="61.8972%" y="623.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::SpacedMultiplier4x130&gt;&gt;::mul (2 samples, 0.06%)</title><rect x="61.6472%" y="597" width="0.0615%" height="15" fill="rgb(212,90,42)" fg:x="2006" fg:w="2"/><text x="61.8972%" y="607.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.03%)</title><rect x="61.7087%" y="597" width="0.0307%" height="15" fill="rgb(218,164,37)" fg:x="2008" fg:w="1"/><text x="61.9587%" y="607.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.03%)</title><rect x="61.7394%" y="581" width="0.0307%" height="15" fill="rgb(246,65,34)" fg:x="2009" fg:w="1"/><text x="61.9894%" y="591.50"></text></g><g><title>core::core_arch::simd::u64x4::splat (1 samples, 0.03%)</title><rect x="61.7394%" y="565" width="0.0307%" height="15" fill="rgb(231,100,33)" fg:x="2009" fg:w="1"/><text x="61.9894%" y="575.50"></text></g><g><title>poly1305::backend::avx2::helpers::adc (3 samples, 0.09%)</title><rect x="61.7087%" y="613" width="0.0922%" height="15" fill="rgb(228,126,14)" fg:x="2008" fg:w="3"/><text x="61.9587%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (2 samples, 0.06%)</title><rect x="61.7394%" y="597" width="0.0615%" height="15" fill="rgb(215,173,21)" fg:x="2009" fg:w="2"/><text x="61.9894%" y="607.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="61.7701%" y="581" width="0.0307%" height="15" fill="rgb(210,6,40)" fg:x="2010" fg:w="1"/><text x="62.0201%" y="591.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="61.7701%" y="565" width="0.0307%" height="15" fill="rgb(212,48,18)" fg:x="2010" fg:w="1"/><text x="62.0201%" y="575.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="61.7701%" y="549" width="0.0307%" height="15" fill="rgb(230,214,11)" fg:x="2010" fg:w="1"/><text x="62.0201%" y="559.50"></text></g><g><title>core::core_arch::simd::i8x32::new (1 samples, 0.03%)</title><rect x="61.7701%" y="533" width="0.0307%" height="15" fill="rgb(254,105,39)" fg:x="2010" fg:w="1"/><text x="62.0201%" y="543.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced130::reduce (4 samples, 0.12%)</title><rect x="61.7087%" y="629" width="0.1229%" height="15" fill="rgb(245,158,5)" fg:x="2008" fg:w="4"/><text x="61.9587%" y="639.50"></text></g><g><title>poly1305::backend::avx2::helpers::red (1 samples, 0.03%)</title><rect x="61.8009%" y="613" width="0.0307%" height="15" fill="rgb(249,208,11)" fg:x="2011" fg:w="1"/><text x="62.0509%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi64 (1 samples, 0.03%)</title><rect x="61.8009%" y="597" width="0.0307%" height="15" fill="rgb(210,39,28)" fg:x="2011" fg:w="1"/><text x="62.0509%" y="607.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="61.8009%" y="581" width="0.0307%" height="15" fill="rgb(211,56,53)" fg:x="2011" fg:w="1"/><text x="62.0509%" y="591.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.03%)</title><rect x="61.8316%" y="597" width="0.0307%" height="15" fill="rgb(226,201,30)" fg:x="2012" fg:w="1"/><text x="62.0816%" y="607.50"></text></g><g><title>core::core_arch::simd::u64x4::splat (1 samples, 0.03%)</title><rect x="61.8316%" y="581" width="0.0307%" height="15" fill="rgb(239,101,34)" fg:x="2012" fg:w="1"/><text x="62.0816%" y="591.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (2 samples, 0.06%)</title><rect x="61.8316%" y="613" width="0.0615%" height="15" fill="rgb(226,209,5)" fg:x="2012" fg:w="2"/><text x="62.0816%" y="623.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.03%)</title><rect x="61.8623%" y="597" width="0.0307%" height="15" fill="rgb(250,105,47)" fg:x="2013" fg:w="1"/><text x="62.1123%" y="607.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.03%)</title><rect x="61.8931%" y="613" width="0.0307%" height="15" fill="rgb(230,72,3)" fg:x="2014" fg:w="1"/><text x="62.1431%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (1 samples, 0.03%)</title><rect x="61.9238%" y="613" width="0.0307%" height="15" fill="rgb(232,218,39)" fg:x="2015" fg:w="1"/><text x="62.1738%" y="623.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.03%)</title><rect x="61.9238%" y="597" width="0.0307%" height="15" fill="rgb(248,166,6)" fg:x="2015" fg:w="1"/><text x="62.1738%" y="607.50"></text></g><g><title>poly1305::backend::avx2::State::finalize (46 samples, 1.41%)</title><rect x="60.5716%" y="677" width="1.4136%" height="15" fill="rgb(247,89,20)" fg:x="1971" fg:w="46"/><text x="60.8216%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (21 samples, 0.65%)</title><rect x="61.3399%" y="661" width="0.6454%" height="15" fill="rgb(248,130,54)" fg:x="1996" fg:w="21"/><text x="61.5899%" y="671.50"></text></g><g><title>poly1305::backend::avx2::State::finalize::{{closure}} (20 samples, 0.61%)</title><rect x="61.3706%" y="645" width="0.6146%" height="15" fill="rgb(234,196,4)" fg:x="1997" fg:w="20"/><text x="61.6206%" y="655.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::sum (5 samples, 0.15%)</title><rect x="61.8316%" y="629" width="0.1537%" height="15" fill="rgb(250,143,31)" fg:x="2012" fg:w="5"/><text x="62.0816%" y="639.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (1 samples, 0.03%)</title><rect x="61.9545%" y="613" width="0.0307%" height="15" fill="rgb(211,110,34)" fg:x="2016" fg:w="1"/><text x="62.2045%" y="623.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.03%)</title><rect x="61.9852%" y="661" width="0.0307%" height="15" fill="rgb(215,124,48)" fg:x="2017" fg:w="1"/><text x="62.2352%" y="671.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="62.0160%" y="661" width="0.0307%" height="15" fill="rgb(216,46,13)" fg:x="2018" fg:w="1"/><text x="62.2660%" y="671.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="62.0160%" y="645" width="0.0307%" height="15" fill="rgb(205,184,25)" fg:x="2018" fg:w="1"/><text x="62.2660%" y="655.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="62.0160%" y="629" width="0.0307%" height="15" fill="rgb(228,1,10)" fg:x="2018" fg:w="1"/><text x="62.2660%" y="639.50"></text></g><g><title>core::core_arch::simd::i8x32::new (1 samples, 0.03%)</title><rect x="62.0160%" y="613" width="0.0307%" height="15" fill="rgb(213,116,27)" fg:x="2018" fg:w="1"/><text x="62.2660%" y="623.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.03%)</title><rect x="62.0467%" y="645" width="0.0307%" height="15" fill="rgb(241,95,50)" fg:x="2019" fg:w="1"/><text x="62.2967%" y="655.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier as core::convert::From&lt;poly1305::backend::avx2::helpers::Aligned130&gt;&gt;::from (1 samples, 0.03%)</title><rect x="62.0467%" y="629" width="0.0307%" height="15" fill="rgb(238,48,32)" fg:x="2019" fg:w="1"/><text x="62.2967%" y="639.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.03%)</title><rect x="62.0467%" y="613" width="0.0307%" height="15" fill="rgb(235,113,49)" fg:x="2019" fg:w="1"/><text x="62.2967%" y="623.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="62.0467%" y="597" width="0.0307%" height="15" fill="rgb(205,127,43)" fg:x="2019" fg:w="1"/><text x="62.2967%" y="607.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.03%)</title><rect x="62.0467%" y="581" width="0.0307%" height="15" fill="rgb(250,162,2)" fg:x="2019" fg:w="1"/><text x="62.2967%" y="591.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier as core::ops::arith::Mul&gt;::mul (1 samples, 0.03%)</title><rect x="62.0774%" y="613" width="0.0307%" height="15" fill="rgb(220,13,41)" fg:x="2020" fg:w="1"/><text x="62.3274%" y="623.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (1 samples, 0.03%)</title><rect x="62.0774%" y="597" width="0.0307%" height="15" fill="rgb(249,221,25)" fg:x="2020" fg:w="1"/><text x="62.3274%" y="607.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (2 samples, 0.06%)</title><rect x="62.1082%" y="613" width="0.0615%" height="15" fill="rgb(215,208,19)" fg:x="2021" fg:w="2"/><text x="62.3582%" y="623.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="62.1389%" y="597" width="0.0307%" height="15" fill="rgb(236,175,2)" fg:x="2022" fg:w="1"/><text x="62.3889%" y="607.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="62.1389%" y="581" width="0.0307%" height="15" fill="rgb(241,52,2)" fg:x="2022" fg:w="1"/><text x="62.3889%" y="591.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="62.1389%" y="565" width="0.0307%" height="15" fill="rgb(248,140,14)" fg:x="2022" fg:w="1"/><text x="62.3889%" y="575.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.03%)</title><rect x="62.1696%" y="613" width="0.0307%" height="15" fill="rgb(253,22,42)" fg:x="2023" fg:w="1"/><text x="62.4196%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_blend_epi32 (1 samples, 0.03%)</title><rect x="62.2004%" y="613" width="0.0307%" height="15" fill="rgb(234,61,47)" fg:x="2024" fg:w="1"/><text x="62.4504%" y="623.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.03%)</title><rect x="62.2004%" y="597" width="0.0307%" height="15" fill="rgb(208,226,15)" fg:x="2024" fg:w="1"/><text x="62.4504%" y="607.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (2 samples, 0.06%)</title><rect x="62.2311%" y="613" width="0.0615%" height="15" fill="rgb(217,221,4)" fg:x="2025" fg:w="2"/><text x="62.4811%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (1 samples, 0.03%)</title><rect x="62.3233%" y="597" width="0.0307%" height="15" fill="rgb(212,174,34)" fg:x="2028" fg:w="1"/><text x="62.5733%" y="607.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.03%)</title><rect x="62.3540%" y="597" width="0.0307%" height="15" fill="rgb(253,83,4)" fg:x="2029" fg:w="1"/><text x="62.6040%" y="607.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="62.3848%" y="597" width="0.0307%" height="15" fill="rgb(250,195,49)" fg:x="2030" fg:w="1"/><text x="62.6348%" y="607.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="62.3848%" y="581" width="0.0307%" height="15" fill="rgb(241,192,25)" fg:x="2030" fg:w="1"/><text x="62.6348%" y="591.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="62.3848%" y="565" width="0.0307%" height="15" fill="rgb(208,124,10)" fg:x="2030" fg:w="1"/><text x="62.6348%" y="575.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (5 samples, 0.15%)</title><rect x="62.2926%" y="613" width="0.1537%" height="15" fill="rgb(222,33,0)" fg:x="2027" fg:w="5"/><text x="62.5426%" y="623.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.03%)</title><rect x="62.4155%" y="597" width="0.0307%" height="15" fill="rgb(234,209,28)" fg:x="2031" fg:w="1"/><text x="62.6655%" y="607.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (3 samples, 0.09%)</title><rect x="62.4462%" y="613" width="0.0922%" height="15" fill="rgb(224,11,23)" fg:x="2032" fg:w="3"/><text x="62.6962%" y="623.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (3 samples, 0.09%)</title><rect x="62.4462%" y="597" width="0.0922%" height="15" fill="rgb(232,99,1)" fg:x="2032" fg:w="3"/><text x="62.6962%" y="607.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.03%)</title><rect x="62.5384%" y="613" width="0.0307%" height="15" fill="rgb(237,95,45)" fg:x="2035" fg:w="1"/><text x="62.7884%" y="623.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi64x (1 samples, 0.03%)</title><rect x="62.5384%" y="597" width="0.0307%" height="15" fill="rgb(208,109,11)" fg:x="2035" fg:w="1"/><text x="62.7884%" y="607.50"></text></g><g><title>core::core_arch::simd::i64x4::new (1 samples, 0.03%)</title><rect x="62.5384%" y="581" width="0.0307%" height="15" fill="rgb(216,190,48)" fg:x="2035" fg:w="1"/><text x="62.7884%" y="591.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="62.5691%" y="613" width="0.0307%" height="15" fill="rgb(251,171,36)" fg:x="2036" fg:w="1"/><text x="62.8191%" y="623.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="62.5691%" y="597" width="0.0307%" height="15" fill="rgb(230,62,22)" fg:x="2036" fg:w="1"/><text x="62.8191%" y="607.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="62.5691%" y="581" width="0.0307%" height="15" fill="rgb(225,114,35)" fg:x="2036" fg:w="1"/><text x="62.8191%" y="591.50"></text></g><g><title>core::core_arch::simd::i8x32::new (1 samples, 0.03%)</title><rect x="62.5691%" y="565" width="0.0307%" height="15" fill="rgb(215,118,42)" fg:x="2036" fg:w="1"/><text x="62.8191%" y="575.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier as core::ops::arith::Mul&gt;::mul (19 samples, 0.58%)</title><rect x="62.0774%" y="645" width="0.5839%" height="15" fill="rgb(243,119,21)" fg:x="2020" fg:w="19"/><text x="62.3274%" y="655.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (19 samples, 0.58%)</title><rect x="62.0774%" y="629" width="0.5839%" height="15" fill="rgb(252,177,53)" fg:x="2020" fg:w="19"/><text x="62.3274%" y="639.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (2 samples, 0.06%)</title><rect x="62.5999%" y="613" width="0.0615%" height="15" fill="rgb(237,209,29)" fg:x="2037" fg:w="2"/><text x="62.8499%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srlv_epi64 (1 samples, 0.03%)</title><rect x="62.6613%" y="629" width="0.0307%" height="15" fill="rgb(212,65,23)" fg:x="2039" fg:w="1"/><text x="62.9113%" y="639.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (2 samples, 0.06%)</title><rect x="62.6921%" y="613" width="0.0615%" height="15" fill="rgb(230,222,46)" fg:x="2040" fg:w="2"/><text x="62.9421%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (2 samples, 0.06%)</title><rect x="62.6921%" y="597" width="0.0615%" height="15" fill="rgb(215,135,32)" fg:x="2040" fg:w="2"/><text x="62.9421%" y="607.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (1 samples, 0.03%)</title><rect x="62.7535%" y="613" width="0.0307%" height="15" fill="rgb(246,101,22)" fg:x="2042" fg:w="1"/><text x="63.0035%" y="623.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="62.7843%" y="613" width="0.0307%" height="15" fill="rgb(206,107,13)" fg:x="2043" fg:w="1"/><text x="63.0343%" y="623.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="62.7843%" y="597" width="0.0307%" height="15" fill="rgb(250,100,44)" fg:x="2043" fg:w="1"/><text x="63.0343%" y="607.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="62.7843%" y="581" width="0.0307%" height="15" fill="rgb(231,147,38)" fg:x="2043" fg:w="1"/><text x="63.0343%" y="591.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="62.8150%" y="613" width="0.0307%" height="15" fill="rgb(229,8,40)" fg:x="2044" fg:w="1"/><text x="63.0650%" y="623.50"></text></g><g><title>poly1305::backend::avx2::helpers::adc (6 samples, 0.18%)</title><rect x="62.6921%" y="629" width="0.1844%" height="15" fill="rgb(221,135,30)" fg:x="2040" fg:w="6"/><text x="62.9421%" y="639.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.03%)</title><rect x="62.8457%" y="613" width="0.0307%" height="15" fill="rgb(249,193,18)" fg:x="2045" fg:w="1"/><text x="63.0957%" y="623.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (30 samples, 0.92%)</title><rect x="61.9852%" y="677" width="0.9219%" height="15" fill="rgb(209,133,39)" fg:x="2017" fg:w="30"/><text x="62.2352%" y="687.50"></text></g><g><title>poly1305::backend::avx2::helpers::SpacedMultiplier4x130::new (28 samples, 0.86%)</title><rect x="62.0467%" y="661" width="0.8605%" height="15" fill="rgb(232,100,14)" fg:x="2019" fg:w="28"/><text x="62.2967%" y="671.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced130::reduce (8 samples, 0.25%)</title><rect x="62.6613%" y="645" width="0.2459%" height="15" fill="rgb(224,185,1)" fg:x="2039" fg:w="8"/><text x="62.9113%" y="655.50"></text></g><g><title>poly1305::backend::avx2::helpers::red (1 samples, 0.03%)</title><rect x="62.8765%" y="629" width="0.0307%" height="15" fill="rgb(223,139,8)" fg:x="2046" fg:w="1"/><text x="63.1265%" y="639.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi64 (1 samples, 0.03%)</title><rect x="62.8765%" y="613" width="0.0307%" height="15" fill="rgb(232,213,38)" fg:x="2046" fg:w="1"/><text x="63.1265%" y="623.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="62.8765%" y="597" width="0.0307%" height="15" fill="rgb(207,94,22)" fg:x="2046" fg:w="1"/><text x="63.1265%" y="607.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="62.8765%" y="581" width="0.0307%" height="15" fill="rgb(219,183,54)" fg:x="2046" fg:w="1"/><text x="63.1265%" y="591.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="62.8765%" y="565" width="0.0307%" height="15" fill="rgb(216,185,54)" fg:x="2046" fg:w="1"/><text x="63.1265%" y="575.50"></text></g><g><title>rustix::backend::event::epoll::modify (1 samples, 0.03%)</title><rect x="62.9072%" y="677" width="0.0307%" height="15" fill="rgb(254,217,39)" fg:x="2047" fg:w="1"/><text x="63.1572%" y="687.50"></text></g><g><title>std::rt::lang_start::{{closure}} (2 samples, 0.06%)</title><rect x="62.9379%" y="677" width="0.0615%" height="15" fill="rgb(240,178,23)" fg:x="2048" fg:w="2"/><text x="63.1879%" y="687.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2 samples, 0.06%)</title><rect x="62.9379%" y="661" width="0.0615%" height="15" fill="rgb(218,11,47)" fg:x="2048" fg:w="2"/><text x="63.1879%" y="671.50"></text></g><g><title>core::ops::function::FnOnce::call_once (2 samples, 0.06%)</title><rect x="62.9379%" y="645" width="0.0615%" height="15" fill="rgb(218,51,51)" fg:x="2048" fg:w="2"/><text x="63.1879%" y="655.50"></text></g><g><title>tftp::main (2 samples, 0.06%)</title><rect x="62.9379%" y="629" width="0.0615%" height="15" fill="rgb(238,126,27)" fg:x="2048" fg:w="2"/><text x="63.1879%" y="639.50"></text></g><g><title>tftp::receiver::start_receive (2 samples, 0.06%)</title><rect x="62.9379%" y="613" width="0.0615%" height="15" fill="rgb(249,202,22)" fg:x="2048" fg:w="2"/><text x="63.1879%" y="623.50"></text></g><g><title>tftp::client::receiver::receive_file (2 samples, 0.06%)</title><rect x="62.9379%" y="597" width="0.0615%" height="15" fill="rgb(254,195,49)" fg:x="2048" fg:w="2"/><text x="63.1879%" y="607.50"></text></g><g><title>&lt;tftp::client::encryption_socket::EncryptionBoundSocket&lt;S,Rng&gt; as tftp::socket::Socket&gt;::recv_from (2 samples, 0.06%)</title><rect x="62.9379%" y="581" width="0.0615%" height="15" fill="rgb(208,123,14)" fg:x="2048" fg:w="2"/><text x="63.1879%" y="591.50"></text></g><g><title>tftp::encrypted_packet::EncryptedPacket::decrypt (2 samples, 0.06%)</title><rect x="62.9379%" y="565" width="0.0615%" height="15" fill="rgb(224,200,8)" fg:x="2048" fg:w="2"/><text x="63.1879%" y="575.50"></text></g><g><title>tftp::encryption::Encryptor&lt;R&gt;::decrypt (2 samples, 0.06%)</title><rect x="62.9379%" y="549" width="0.0615%" height="15" fill="rgb(217,61,36)" fg:x="2048" fg:w="2"/><text x="63.1879%" y="559.50"></text></g><g><title>&lt;[u8] as tftp::buffer::SliceExt&gt;::rslice_to_array (2 samples, 0.06%)</title><rect x="62.9379%" y="533" width="0.0615%" height="15" fill="rgb(206,35,45)" fg:x="2048" fg:w="2"/><text x="63.1879%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (2 samples, 0.06%)</title><rect x="62.9379%" y="517" width="0.0615%" height="15" fill="rgb(217,65,33)" fg:x="2048" fg:w="2"/><text x="63.1879%" y="527.50"></text></g><g><title>&lt;[u8] as tftp::buffer::SliceExt&gt;::rslice_to_array (3 samples, 0.09%)</title><rect x="63.0301%" y="389" width="0.0922%" height="15" fill="rgb(222,158,48)" fg:x="2051" fg:w="3"/><text x="63.2801%" y="399.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.06%)</title><rect x="63.0608%" y="373" width="0.0615%" height="15" fill="rgb(254,2,54)" fg:x="2052" fg:w="2"/><text x="63.3108%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (1 samples, 0.03%)</title><rect x="63.1223%" y="389" width="0.0307%" height="15" fill="rgb(250,143,38)" fg:x="2054" fg:w="1"/><text x="63.3723%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (1 samples, 0.03%)</title><rect x="63.1530%" y="389" width="0.0307%" height="15" fill="rgb(248,25,0)" fg:x="2055" fg:w="1"/><text x="63.4030%" y="399.50"></text></g><g><title>&lt;tftp::client::encryption_socket::EncryptionBoundSocket&lt;S,Rng&gt; as tftp::socket::Socket&gt;::recv_from (7 samples, 0.22%)</title><rect x="62.9994%" y="437" width="0.2151%" height="15" fill="rgb(206,152,27)" fg:x="2050" fg:w="7"/><text x="63.2494%" y="447.50"></text></g><g><title>tftp::encrypted_packet::EncryptedPacket::decrypt (7 samples, 0.22%)</title><rect x="62.9994%" y="421" width="0.2151%" height="15" fill="rgb(240,77,30)" fg:x="2050" fg:w="7"/><text x="63.2494%" y="431.50"></text></g><g><title>tftp::encryption::Encryptor&lt;R&gt;::decrypt (7 samples, 0.22%)</title><rect x="62.9994%" y="405" width="0.2151%" height="15" fill="rgb(231,5,3)" fg:x="2050" fg:w="7"/><text x="63.2494%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (1 samples, 0.03%)</title><rect x="63.1838%" y="389" width="0.0307%" height="15" fill="rgb(207,226,32)" fg:x="2056" fg:w="1"/><text x="63.4338%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.06%)</title><rect x="63.2145%" y="389" width="0.0615%" height="15" fill="rgb(222,207,47)" fg:x="2057" fg:w="2"/><text x="63.4645%" y="399.50"></text></g><g><title>&lt;tftp::client::encryption_socket::EncryptionBoundSocket&lt;S,Rng&gt; as tftp::socket::Socket&gt;::send_to (4 samples, 0.12%)</title><rect x="63.2145%" y="437" width="0.1229%" height="15" fill="rgb(229,115,45)" fg:x="2057" fg:w="4"/><text x="63.4645%" y="447.50"></text></g><g><title>tftp::encrypted_packet::EncryptedPacket::encrypt (4 samples, 0.12%)</title><rect x="63.2145%" y="421" width="0.1229%" height="15" fill="rgb(224,191,6)" fg:x="2057" fg:w="4"/><text x="63.4645%" y="431.50"></text></g><g><title>tftp::encryption::apply_bit_padding (4 samples, 0.12%)</title><rect x="63.2145%" y="405" width="0.1229%" height="15" fill="rgb(230,227,24)" fg:x="2057" fg:w="4"/><text x="63.4645%" y="415.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.06%)</title><rect x="63.2760%" y="389" width="0.0615%" height="15" fill="rgb(228,80,19)" fg:x="2059" fg:w="2"/><text x="63.5260%" y="399.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.06%)</title><rect x="63.2760%" y="373" width="0.0615%" height="15" fill="rgb(247,229,0)" fg:x="2059" fg:w="2"/><text x="63.5260%" y="383.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.03%)</title><rect x="63.3682%" y="405" width="0.0307%" height="15" fill="rgb(237,194,15)" fg:x="2062" fg:w="1"/><text x="63.6182%" y="415.50"></text></g><g><title>__srcu_read_lock (1 samples, 0.03%)</title><rect x="63.5218%" y="229" width="0.0307%" height="15" fill="rgb(219,203,20)" fg:x="2067" fg:w="1"/><text x="63.7718%" y="239.50"></text></g><g><title>__fsnotify_parent (6 samples, 0.18%)</title><rect x="63.3989%" y="261" width="0.1844%" height="15" fill="rgb(234,128,8)" fg:x="2063" fg:w="6"/><text x="63.6489%" y="271.50"></text></g><g><title>fsnotify (4 samples, 0.12%)</title><rect x="63.4604%" y="245" width="0.1229%" height="15" fill="rgb(248,202,8)" fg:x="2065" fg:w="4"/><text x="63.7104%" y="255.50"></text></g><g><title>inotify_handle_inode_event (1 samples, 0.03%)</title><rect x="63.5526%" y="229" width="0.0307%" height="15" fill="rgb(206,104,37)" fg:x="2068" fg:w="1"/><text x="63.8026%" y="239.50"></text></g><g><title>fsnotify_insert_event (1 samples, 0.03%)</title><rect x="63.5526%" y="213" width="0.0307%" height="15" fill="rgb(223,8,27)" fg:x="2068" fg:w="1"/><text x="63.8026%" y="223.50"></text></g><g><title>__wake_up_common_lock (1 samples, 0.03%)</title><rect x="63.5526%" y="197" width="0.0307%" height="15" fill="rgb(216,217,28)" fg:x="2068" fg:w="1"/><text x="63.8026%" y="207.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="63.5526%" y="181" width="0.0307%" height="15" fill="rgb(249,199,1)" fg:x="2068" fg:w="1"/><text x="63.8026%" y="191.50"></text></g><g><title>preempt_count_add (1 samples, 0.03%)</title><rect x="63.5526%" y="165" width="0.0307%" height="15" fill="rgb(240,85,17)" fg:x="2068" fg:w="1"/><text x="63.8026%" y="175.50"></text></g><g><title>file_modified_flags (1 samples, 0.03%)</title><rect x="63.5833%" y="245" width="0.0307%" height="15" fill="rgb(206,108,45)" fg:x="2069" fg:w="1"/><text x="63.8333%" y="255.50"></text></g><g><title>generic_update_time (1 samples, 0.03%)</title><rect x="63.5833%" y="229" width="0.0307%" height="15" fill="rgb(245,210,41)" fg:x="2069" fg:w="1"/><text x="63.8333%" y="239.50"></text></g><g><title>__mark_inode_dirty (1 samples, 0.03%)</title><rect x="63.5833%" y="213" width="0.0307%" height="15" fill="rgb(206,13,37)" fg:x="2069" fg:w="1"/><text x="63.8333%" y="223.50"></text></g><g><title>ext4_dirty_inode (1 samples, 0.03%)</title><rect x="63.5833%" y="197" width="0.0307%" height="15" fill="rgb(250,61,18)" fg:x="2069" fg:w="1"/><text x="63.8333%" y="207.50"></text></g><g><title>__ext4_mark_inode_dirty (1 samples, 0.03%)</title><rect x="63.5833%" y="181" width="0.0307%" height="15" fill="rgb(235,172,48)" fg:x="2069" fg:w="1"/><text x="63.8333%" y="191.50"></text></g><g><title>ext4_mark_iloc_dirty (1 samples, 0.03%)</title><rect x="63.5833%" y="165" width="0.0307%" height="15" fill="rgb(249,201,17)" fg:x="2069" fg:w="1"/><text x="63.8333%" y="175.50"></text></g><g><title>balance_dirty_pages_ratelimited_flags (2 samples, 0.06%)</title><rect x="63.6140%" y="229" width="0.0615%" height="15" fill="rgb(219,208,6)" fg:x="2070" fg:w="2"/><text x="63.8640%" y="239.50"></text></g><g><title>balance_dirty_pages (2 samples, 0.06%)</title><rect x="63.6140%" y="213" width="0.0615%" height="15" fill="rgb(248,31,23)" fg:x="2070" fg:w="2"/><text x="63.8640%" y="223.50"></text></g><g><title>mem_cgroup_wb_stats (2 samples, 0.06%)</title><rect x="63.6140%" y="197" width="0.0615%" height="15" fill="rgb(245,15,42)" fg:x="2070" fg:w="2"/><text x="63.8640%" y="207.50"></text></g><g><title>__mem_cgroup_flush_stats (1 samples, 0.03%)</title><rect x="63.6447%" y="181" width="0.0307%" height="15" fill="rgb(222,217,39)" fg:x="2071" fg:w="1"/><text x="63.8947%" y="191.50"></text></g><g><title>cgroup_rstat_flush_irqsafe (1 samples, 0.03%)</title><rect x="63.6447%" y="165" width="0.0307%" height="15" fill="rgb(210,219,27)" fg:x="2071" fg:w="1"/><text x="63.8947%" y="175.50"></text></g><g><title>cgroup_rstat_flush_locked (1 samples, 0.03%)</title><rect x="63.6447%" y="149" width="0.0307%" height="15" fill="rgb(252,166,36)" fg:x="2071" fg:w="1"/><text x="63.8947%" y="159.50"></text></g><g><title>mem_cgroup_css_rstat_flush (1 samples, 0.03%)</title><rect x="63.6447%" y="133" width="0.0307%" height="15" fill="rgb(245,132,34)" fg:x="2071" fg:w="1"/><text x="63.8947%" y="143.50"></text></g><g><title>copy_page_from_iter_atomic (1 samples, 0.03%)</title><rect x="63.6755%" y="229" width="0.0307%" height="15" fill="rgb(236,54,3)" fg:x="2072" fg:w="1"/><text x="63.9255%" y="239.50"></text></g><g><title>create_empty_buffers (1 samples, 0.03%)</title><rect x="63.7062%" y="197" width="0.0307%" height="15" fill="rgb(241,173,43)" fg:x="2073" fg:w="1"/><text x="63.9562%" y="207.50"></text></g><g><title>alloc_page_buffers (1 samples, 0.03%)</title><rect x="63.7062%" y="181" width="0.0307%" height="15" fill="rgb(215,190,9)" fg:x="2073" fg:w="1"/><text x="63.9562%" y="191.50"></text></g><g><title>alloc_buffer_head (1 samples, 0.03%)</title><rect x="63.7062%" y="165" width="0.0307%" height="15" fill="rgb(242,101,16)" fg:x="2073" fg:w="1"/><text x="63.9562%" y="175.50"></text></g><g><title>kmem_cache_alloc (1 samples, 0.03%)</title><rect x="63.7062%" y="149" width="0.0307%" height="15" fill="rgb(223,190,21)" fg:x="2073" fg:w="1"/><text x="63.9562%" y="159.50"></text></g><g><title>ext4_block_write_begin (2 samples, 0.06%)</title><rect x="63.7062%" y="213" width="0.0615%" height="15" fill="rgb(215,228,25)" fg:x="2073" fg:w="2"/><text x="63.9562%" y="223.50"></text></g><g><title>ext4_da_get_block_prep (1 samples, 0.03%)</title><rect x="63.7369%" y="197" width="0.0307%" height="15" fill="rgb(225,36,22)" fg:x="2074" fg:w="1"/><text x="63.9869%" y="207.50"></text></g><g><title>ext4_da_reserve_space (1 samples, 0.03%)</title><rect x="63.7369%" y="181" width="0.0307%" height="15" fill="rgb(251,106,46)" fg:x="2074" fg:w="1"/><text x="63.9869%" y="191.50"></text></g><g><title>__dquot_alloc_space (1 samples, 0.03%)</title><rect x="63.7369%" y="165" width="0.0307%" height="15" fill="rgb(208,90,1)" fg:x="2074" fg:w="1"/><text x="63.9869%" y="175.50"></text></g><g><title>__mem_cgroup_charge (2 samples, 0.06%)</title><rect x="63.7677%" y="149" width="0.0615%" height="15" fill="rgb(243,10,4)" fg:x="2075" fg:w="2"/><text x="64.0177%" y="159.50"></text></g><g><title>charge_memcg (2 samples, 0.06%)</title><rect x="63.7677%" y="133" width="0.0615%" height="15" fill="rgb(212,137,27)" fg:x="2075" fg:w="2"/><text x="64.0177%" y="143.50"></text></g><g><title>mem_cgroup_charge_statistics (2 samples, 0.06%)</title><rect x="63.7677%" y="117" width="0.0615%" height="15" fill="rgb(231,220,49)" fg:x="2075" fg:w="2"/><text x="64.0177%" y="127.50"></text></g><g><title>__count_memcg_events (2 samples, 0.06%)</title><rect x="63.7677%" y="101" width="0.0615%" height="15" fill="rgb(237,96,20)" fg:x="2075" fg:w="2"/><text x="64.0177%" y="111.50"></text></g><g><title>__filemap_add_folio (3 samples, 0.09%)</title><rect x="63.7677%" y="165" width="0.0922%" height="15" fill="rgb(239,229,30)" fg:x="2075" fg:w="3"/><text x="64.0177%" y="175.50"></text></g><g><title>__mod_lruvec_page_state (1 samples, 0.03%)</title><rect x="63.8291%" y="149" width="0.0307%" height="15" fill="rgb(219,65,33)" fg:x="2077" fg:w="1"/><text x="64.0791%" y="159.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.03%)</title><rect x="63.8291%" y="133" width="0.0307%" height="15" fill="rgb(243,134,7)" fg:x="2077" fg:w="1"/><text x="64.0791%" y="143.50"></text></g><g><title>filemap_add_folio (4 samples, 0.12%)</title><rect x="63.7677%" y="181" width="0.1229%" height="15" fill="rgb(216,177,54)" fg:x="2075" fg:w="4"/><text x="64.0177%" y="191.50"></text></g><g><title>folio_add_lru (1 samples, 0.03%)</title><rect x="63.8599%" y="165" width="0.0307%" height="15" fill="rgb(211,160,20)" fg:x="2078" fg:w="1"/><text x="64.1099%" y="175.50"></text></g><g><title>folio_batch_move_lru (1 samples, 0.03%)</title><rect x="63.8599%" y="149" width="0.0307%" height="15" fill="rgb(239,85,39)" fg:x="2078" fg:w="1"/><text x="64.1099%" y="159.50"></text></g><g><title>release_pages (1 samples, 0.03%)</title><rect x="63.8599%" y="133" width="0.0307%" height="15" fill="rgb(232,125,22)" fg:x="2078" fg:w="1"/><text x="64.1099%" y="143.50"></text></g><g><title>ext4_da_write_begin (7 samples, 0.22%)</title><rect x="63.7062%" y="229" width="0.2151%" height="15" fill="rgb(244,57,34)" fg:x="2073" fg:w="7"/><text x="63.9562%" y="239.50"></text></g><g><title>pagecache_get_page (5 samples, 0.15%)</title><rect x="63.7677%" y="213" width="0.1537%" height="15" fill="rgb(214,203,32)" fg:x="2075" fg:w="5"/><text x="64.0177%" y="223.50"></text></g><g><title>__filemap_get_folio (5 samples, 0.15%)</title><rect x="63.7677%" y="197" width="0.1537%" height="15" fill="rgb(207,58,43)" fg:x="2075" fg:w="5"/><text x="64.0177%" y="207.50"></text></g><g><title>folio_alloc (1 samples, 0.03%)</title><rect x="63.8906%" y="181" width="0.0307%" height="15" fill="rgb(215,193,15)" fg:x="2079" fg:w="1"/><text x="64.1406%" y="191.50"></text></g><g><title>__alloc_pages (1 samples, 0.03%)</title><rect x="63.8906%" y="165" width="0.0307%" height="15" fill="rgb(232,15,44)" fg:x="2079" fg:w="1"/><text x="64.1406%" y="175.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.03%)</title><rect x="63.8906%" y="149" width="0.0307%" height="15" fill="rgb(212,3,48)" fg:x="2079" fg:w="1"/><text x="64.1406%" y="159.50"></text></g><g><title>clear_page_rep (1 samples, 0.03%)</title><rect x="63.8906%" y="133" width="0.0307%" height="15" fill="rgb(218,128,7)" fg:x="2079" fg:w="1"/><text x="64.1406%" y="143.50"></text></g><g><title>__block_commit_write.constprop.0.isra.0 (1 samples, 0.03%)</title><rect x="63.9521%" y="213" width="0.0307%" height="15" fill="rgb(226,216,39)" fg:x="2081" fg:w="1"/><text x="64.2021%" y="223.50"></text></g><g><title>mark_buffer_dirty (1 samples, 0.03%)</title><rect x="63.9521%" y="197" width="0.0307%" height="15" fill="rgb(243,47,51)" fg:x="2081" fg:w="1"/><text x="64.2021%" y="207.50"></text></g><g><title>__folio_mark_dirty (1 samples, 0.03%)</title><rect x="63.9521%" y="181" width="0.0307%" height="15" fill="rgb(241,183,40)" fg:x="2081" fg:w="1"/><text x="64.2021%" y="191.50"></text></g><g><title>percpu_counter_add_batch (1 samples, 0.03%)</title><rect x="63.9521%" y="165" width="0.0307%" height="15" fill="rgb(231,217,32)" fg:x="2081" fg:w="1"/><text x="64.2021%" y="175.50"></text></g><g><title>kmem_cache_free (1 samples, 0.03%)</title><rect x="63.9828%" y="165" width="0.0307%" height="15" fill="rgb(229,61,38)" fg:x="2082" fg:w="1"/><text x="64.2328%" y="175.50"></text></g><g><title>cache_from_obj (1 samples, 0.03%)</title><rect x="63.9828%" y="149" width="0.0307%" height="15" fill="rgb(225,210,5)" fg:x="2082" fg:w="1"/><text x="64.2328%" y="159.50"></text></g><g><title>__ext4_journal_stop (3 samples, 0.09%)</title><rect x="63.9828%" y="197" width="0.0922%" height="15" fill="rgb(231,79,45)" fg:x="2082" fg:w="3"/><text x="64.2328%" y="207.50"></text></g><g><title>jbd2_journal_stop (3 samples, 0.09%)</title><rect x="63.9828%" y="181" width="0.0922%" height="15" fill="rgb(224,100,7)" fg:x="2082" fg:w="3"/><text x="64.2328%" y="191.50"></text></g><g><title>stop_this_handle (2 samples, 0.06%)</title><rect x="64.0135%" y="165" width="0.0615%" height="15" fill="rgb(241,198,18)" fg:x="2083" fg:w="2"/><text x="64.2635%" y="175.50"></text></g><g><title>__wake_up_common_lock (2 samples, 0.06%)</title><rect x="64.0135%" y="149" width="0.0615%" height="15" fill="rgb(252,97,53)" fg:x="2083" fg:w="2"/><text x="64.2635%" y="159.50"></text></g><g><title>_raw_spin_lock_irqsave (2 samples, 0.06%)</title><rect x="64.0135%" y="133" width="0.0615%" height="15" fill="rgb(220,88,7)" fg:x="2083" fg:w="2"/><text x="64.2635%" y="143.50"></text></g><g><title>__brelse (1 samples, 0.03%)</title><rect x="64.0750%" y="149" width="0.0307%" height="15" fill="rgb(213,176,14)" fg:x="2085" fg:w="1"/><text x="64.3250%" y="159.50"></text></g><g><title>ext4_mark_iloc_dirty (2 samples, 0.06%)</title><rect x="64.0750%" y="165" width="0.0615%" height="15" fill="rgb(246,73,7)" fg:x="2085" fg:w="2"/><text x="64.3250%" y="175.50"></text></g><g><title>__ext4_handle_dirty_metadata (1 samples, 0.03%)</title><rect x="64.1057%" y="149" width="0.0307%" height="15" fill="rgb(245,64,36)" fg:x="2086" fg:w="1"/><text x="64.3557%" y="159.50"></text></g><g><title>jbd2_journal_dirty_metadata (1 samples, 0.03%)</title><rect x="64.1057%" y="133" width="0.0307%" height="15" fill="rgb(245,80,10)" fg:x="2086" fg:w="1"/><text x="64.3557%" y="143.50"></text></g><g><title>std::rt::lang_start_internal (40 samples, 1.23%)</title><rect x="62.9994%" y="677" width="1.2293%" height="15" fill="rgb(232,107,50)" fg:x="2050" fg:w="40"/><text x="63.2494%" y="687.50"></text></g><g><title>std::panic::catch_unwind (40 samples, 1.23%)</title><rect x="62.9994%" y="661" width="1.2293%" height="15" fill="rgb(253,3,0)" fg:x="2050" fg:w="40"/><text x="63.2494%" y="671.50"></text></g><g><title>std::panicking::try (40 samples, 1.23%)</title><rect x="62.9994%" y="645" width="1.2293%" height="15" fill="rgb(212,99,53)" fg:x="2050" fg:w="40"/><text x="63.2494%" y="655.50"></text></g><g><title>std::panicking::try::do_call (40 samples, 1.23%)</title><rect x="62.9994%" y="629" width="1.2293%" height="15" fill="rgb(249,111,54)" fg:x="2050" fg:w="40"/><text x="63.2494%" y="639.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (40 samples, 1.23%)</title><rect x="62.9994%" y="613" width="1.2293%" height="15" fill="rgb(249,55,30)" fg:x="2050" fg:w="40"/><text x="63.2494%" y="623.50"></text></g><g><title>std::panic::catch_unwind (40 samples, 1.23%)</title><rect x="62.9994%" y="597" width="1.2293%" height="15" fill="rgb(237,47,42)" fg:x="2050" fg:w="40"/><text x="63.2494%" y="607.50"></text></g><g><title>std::panicking::try (40 samples, 1.23%)</title><rect x="62.9994%" y="581" width="1.2293%" height="15" fill="rgb(211,20,18)" fg:x="2050" fg:w="40"/><text x="63.2494%" y="591.50"></text></g><g><title>std::panicking::try::do_call (40 samples, 1.23%)</title><rect x="62.9994%" y="565" width="1.2293%" height="15" fill="rgb(231,203,46)" fg:x="2050" fg:w="40"/><text x="63.2494%" y="575.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (40 samples, 1.23%)</title><rect x="62.9994%" y="549" width="1.2293%" height="15" fill="rgb(237,142,3)" fg:x="2050" fg:w="40"/><text x="63.2494%" y="559.50"></text></g><g><title>std::rt::lang_start::{{closure}} (40 samples, 1.23%)</title><rect x="62.9994%" y="533" width="1.2293%" height="15" fill="rgb(241,107,1)" fg:x="2050" fg:w="40"/><text x="63.2494%" y="543.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (40 samples, 1.23%)</title><rect x="62.9994%" y="517" width="1.2293%" height="15" fill="rgb(229,83,13)" fg:x="2050" fg:w="40"/><text x="63.2494%" y="527.50"></text></g><g><title>core::ops::function::FnOnce::call_once (40 samples, 1.23%)</title><rect x="62.9994%" y="501" width="1.2293%" height="15" fill="rgb(241,91,40)" fg:x="2050" fg:w="40"/><text x="63.2494%" y="511.50"></text></g><g><title>tftp::main (40 samples, 1.23%)</title><rect x="62.9994%" y="485" width="1.2293%" height="15" fill="rgb(225,3,45)" fg:x="2050" fg:w="40"/><text x="63.2494%" y="495.50"></text></g><g><title>tftp::receiver::start_receive (40 samples, 1.23%)</title><rect x="62.9994%" y="469" width="1.2293%" height="15" fill="rgb(244,223,14)" fg:x="2050" fg:w="40"/><text x="63.2494%" y="479.50"></text></g><g><title>tftp::client::receiver::receive_file (40 samples, 1.23%)</title><rect x="62.9994%" y="453" width="1.2293%" height="15" fill="rgb(224,124,37)" fg:x="2050" fg:w="40"/><text x="63.2494%" y="463.50"></text></g><g><title>tftp::client::receiver::write_block (29 samples, 0.89%)</title><rect x="63.3374%" y="437" width="0.8912%" height="15" fill="rgb(251,171,30)" fg:x="2061" fg:w="29"/><text x="63.5874%" y="447.50"></text></g><g><title>&lt;tftp::writers::single_block_writer::SingleBlockWriter&lt;W&gt; as tftp::writers::block_writer::BlockWriter&gt;::write_block (29 samples, 0.89%)</title><rect x="63.3374%" y="421" width="0.8912%" height="15" fill="rgb(236,46,54)" fg:x="2061" fg:w="29"/><text x="63.5874%" y="431.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (27 samples, 0.83%)</title><rect x="63.3989%" y="405" width="0.8297%" height="15" fill="rgb(245,213,5)" fg:x="2063" fg:w="27"/><text x="63.6489%" y="415.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (27 samples, 0.83%)</title><rect x="63.3989%" y="389" width="0.8297%" height="15" fill="rgb(230,144,27)" fg:x="2063" fg:w="27"/><text x="63.6489%" y="399.50"></text></g><g><title>std::sys::unix::fs::File::write (27 samples, 0.83%)</title><rect x="63.3989%" y="373" width="0.8297%" height="15" fill="rgb(220,86,6)" fg:x="2063" fg:w="27"/><text x="63.6489%" y="383.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (27 samples, 0.83%)</title><rect x="63.3989%" y="357" width="0.8297%" height="15" fill="rgb(240,20,13)" fg:x="2063" fg:w="27"/><text x="63.6489%" y="367.50"></text></g><g><title>__GI___libc_write (27 samples, 0.83%)</title><rect x="63.3989%" y="341" width="0.8297%" height="15" fill="rgb(217,89,34)" fg:x="2063" fg:w="27"/><text x="63.6489%" y="351.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (27 samples, 0.83%)</title><rect x="63.3989%" y="325" width="0.8297%" height="15" fill="rgb(229,13,5)" fg:x="2063" fg:w="27"/><text x="63.6489%" y="335.50"></text></g><g><title>do_syscall_64 (27 samples, 0.83%)</title><rect x="63.3989%" y="309" width="0.8297%" height="15" fill="rgb(244,67,35)" fg:x="2063" fg:w="27"/><text x="63.6489%" y="319.50"></text></g><g><title>ksys_write (27 samples, 0.83%)</title><rect x="63.3989%" y="293" width="0.8297%" height="15" fill="rgb(221,40,2)" fg:x="2063" fg:w="27"/><text x="63.6489%" y="303.50"></text></g><g><title>vfs_write (27 samples, 0.83%)</title><rect x="63.3989%" y="277" width="0.8297%" height="15" fill="rgb(237,157,21)" fg:x="2063" fg:w="27"/><text x="63.6489%" y="287.50"></text></g><g><title>ext4_buffered_write_iter (21 samples, 0.65%)</title><rect x="63.5833%" y="261" width="0.6454%" height="15" fill="rgb(222,94,11)" fg:x="2069" fg:w="21"/><text x="63.8333%" y="271.50"></text></g><g><title>generic_perform_write (20 samples, 0.61%)</title><rect x="63.6140%" y="245" width="0.6146%" height="15" fill="rgb(249,113,6)" fg:x="2070" fg:w="20"/><text x="63.8640%" y="255.50"></text></g><g><title>generic_write_end (10 samples, 0.31%)</title><rect x="63.9213%" y="229" width="0.3073%" height="15" fill="rgb(238,137,36)" fg:x="2080" fg:w="10"/><text x="64.1713%" y="239.50"></text></g><g><title>__mark_inode_dirty (8 samples, 0.25%)</title><rect x="63.9828%" y="213" width="0.2459%" height="15" fill="rgb(210,102,26)" fg:x="2082" fg:w="8"/><text x="64.2328%" y="223.50"></text></g><g><title>ext4_dirty_inode (5 samples, 0.15%)</title><rect x="64.0750%" y="197" width="0.1537%" height="15" fill="rgb(218,30,30)" fg:x="2085" fg:w="5"/><text x="64.3250%" y="207.50"></text></g><g><title>__ext4_mark_inode_dirty (5 samples, 0.15%)</title><rect x="64.0750%" y="181" width="0.1537%" height="15" fill="rgb(214,67,26)" fg:x="2085" fg:w="5"/><text x="64.3250%" y="191.50"></text></g><g><title>ext4_reserve_inode_write (3 samples, 0.09%)</title><rect x="64.1364%" y="165" width="0.0922%" height="15" fill="rgb(251,9,53)" fg:x="2087" fg:w="3"/><text x="64.3864%" y="175.50"></text></g><g><title>ext4_get_inode_loc (1 samples, 0.03%)</title><rect x="64.1979%" y="149" width="0.0307%" height="15" fill="rgb(228,204,25)" fg:x="2089" fg:w="1"/><text x="64.4479%" y="159.50"></text></g><g><title>__ext4_get_inode_loc (1 samples, 0.03%)</title><rect x="64.1979%" y="133" width="0.0307%" height="15" fill="rgb(207,153,8)" fg:x="2089" fg:w="1"/><text x="64.4479%" y="143.50"></text></g><g><title>__getblk_gfp (1 samples, 0.03%)</title><rect x="64.1979%" y="117" width="0.0307%" height="15" fill="rgb(242,9,16)" fg:x="2089" fg:w="1"/><text x="64.4479%" y="127.50"></text></g><g><title>__find_get_block (1 samples, 0.03%)</title><rect x="64.1979%" y="101" width="0.0307%" height="15" fill="rgb(217,211,10)" fg:x="2089" fg:w="1"/><text x="64.4479%" y="111.50"></text></g><g><title>folio_mark_accessed (1 samples, 0.03%)</title><rect x="64.1979%" y="85" width="0.0307%" height="15" fill="rgb(219,228,52)" fg:x="2089" fg:w="1"/><text x="64.4479%" y="95.50"></text></g><g><title>&lt;tftp::socket::UdpUnboundSocket as tftp::socket::Socket&gt;::recv_from (1 samples, 0.03%)</title><rect x="64.2286%" y="645" width="0.0307%" height="15" fill="rgb(231,92,29)" fg:x="2090" fg:w="1"/><text x="64.4786%" y="655.50"></text></g><g><title>polling::Poller::wait (1 samples, 0.03%)</title><rect x="64.2286%" y="629" width="0.0307%" height="15" fill="rgb(232,8,23)" fg:x="2090" fg:w="1"/><text x="64.4786%" y="639.50"></text></g><g><title>polling::epoll::Poller::wait (1 samples, 0.03%)</title><rect x="64.2286%" y="613" width="0.0307%" height="15" fill="rgb(216,211,34)" fg:x="2090" fg:w="1"/><text x="64.4786%" y="623.50"></text></g><g><title>polling::epoll::Poller::modify (1 samples, 0.03%)</title><rect x="64.2286%" y="597" width="0.0307%" height="15" fill="rgb(236,151,0)" fg:x="2090" fg:w="1"/><text x="64.4786%" y="607.50"></text></g><g><title>rustix::backend::event::epoll::modify (1 samples, 0.03%)</title><rect x="64.2286%" y="581" width="0.0307%" height="15" fill="rgb(209,168,3)" fg:x="2090" fg:w="1"/><text x="64.4786%" y="591.50"></text></g><g><title>rustix::backend::event::syscalls::epoll_mod (1 samples, 0.03%)</title><rect x="64.2286%" y="565" width="0.0307%" height="15" fill="rgb(208,129,28)" fg:x="2090" fg:w="1"/><text x="64.4786%" y="575.50"></text></g><g><title>rustix::backend::conv::ret (1 samples, 0.03%)</title><rect x="64.2286%" y="549" width="0.0307%" height="15" fill="rgb(229,78,22)" fg:x="2090" fg:w="1"/><text x="64.4786%" y="559.50"></text></g><g><title>rustix::backend::io::errno::try_decode_void (1 samples, 0.03%)</title><rect x="64.2286%" y="533" width="0.0307%" height="15" fill="rgb(228,187,13)" fg:x="2090" fg:w="1"/><text x="64.4786%" y="543.50"></text></g><g><title>rustix::backend::reg::RetReg&lt;Num&gt;::is_nonzero (1 samples, 0.03%)</title><rect x="64.2286%" y="517" width="0.0307%" height="15" fill="rgb(240,119,24)" fg:x="2090" fg:w="1"/><text x="64.4786%" y="527.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (2 samples, 0.06%)</title><rect x="64.2594%" y="469" width="0.0615%" height="15" fill="rgb(209,194,42)" fg:x="2091" fg:w="2"/><text x="64.5094%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (2 samples, 0.06%)</title><rect x="64.3208%" y="437" width="0.0615%" height="15" fill="rgb(247,200,46)" fg:x="2093" fg:w="2"/><text x="64.5708%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_blend_epi32 (1 samples, 0.03%)</title><rect x="64.3823%" y="437" width="0.0307%" height="15" fill="rgb(218,76,16)" fg:x="2095" fg:w="1"/><text x="64.6323%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.03%)</title><rect x="64.4130%" y="437" width="0.0307%" height="15" fill="rgb(225,21,48)" fg:x="2096" fg:w="1"/><text x="64.6630%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.03%)</title><rect x="64.4130%" y="421" width="0.0307%" height="15" fill="rgb(239,223,50)" fg:x="2096" fg:w="1"/><text x="64.6630%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (1 samples, 0.03%)</title><rect x="64.4438%" y="437" width="0.0307%" height="15" fill="rgb(244,45,21)" fg:x="2097" fg:w="1"/><text x="64.6938%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.03%)</title><rect x="64.4438%" y="421" width="0.0307%" height="15" fill="rgb(232,33,43)" fg:x="2097" fg:w="1"/><text x="64.6938%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (3 samples, 0.09%)</title><rect x="64.4745%" y="437" width="0.0922%" height="15" fill="rgb(209,8,3)" fg:x="2098" fg:w="3"/><text x="64.7245%" y="447.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (9 samples, 0.28%)</title><rect x="64.3208%" y="453" width="0.2766%" height="15" fill="rgb(214,25,53)" fg:x="2093" fg:w="9"/><text x="64.5708%" y="463.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (1 samples, 0.03%)</title><rect x="64.5667%" y="437" width="0.0307%" height="15" fill="rgb(254,186,54)" fg:x="2101" fg:w="1"/><text x="64.8167%" y="447.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi32 (1 samples, 0.03%)</title><rect x="64.5667%" y="421" width="0.0307%" height="15" fill="rgb(208,174,49)" fg:x="2101" fg:w="1"/><text x="64.8167%" y="431.50"></text></g><g><title>core::core_arch::simd::i32x8::new (1 samples, 0.03%)</title><rect x="64.5667%" y="405" width="0.0307%" height="15" fill="rgb(233,191,51)" fg:x="2101" fg:w="1"/><text x="64.8167%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.03%)</title><rect x="64.5974%" y="421" width="0.0307%" height="15" fill="rgb(222,134,10)" fg:x="2102" fg:w="1"/><text x="64.8474%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.03%)</title><rect x="64.6281%" y="421" width="0.0307%" height="15" fill="rgb(230,226,20)" fg:x="2103" fg:w="1"/><text x="64.8781%" y="431.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::authenticate_lengths (14 samples, 0.43%)</title><rect x="64.2594%" y="581" width="0.4302%" height="15" fill="rgb(251,111,25)" fg:x="2091" fg:w="14"/><text x="64.5094%" y="591.50"></text></g><g><title>universal_hash::UniversalHash::update (14 samples, 0.43%)</title><rect x="64.2594%" y="565" width="0.4302%" height="15" fill="rgb(224,40,46)" fg:x="2091" fg:w="14"/><text x="64.5094%" y="575.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (14 samples, 0.43%)</title><rect x="64.2594%" y="549" width="0.4302%" height="15" fill="rgb(236,108,47)" fg:x="2091" fg:w="14"/><text x="64.5094%" y="559.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (14 samples, 0.43%)</title><rect x="64.2594%" y="533" width="0.4302%" height="15" fill="rgb(234,93,0)" fg:x="2091" fg:w="14"/><text x="64.5094%" y="543.50"></text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (14 samples, 0.43%)</title><rect x="64.2594%" y="517" width="0.4302%" height="15" fill="rgb(224,213,32)" fg:x="2091" fg:w="14"/><text x="64.5094%" y="527.50"></text></g><g><title>&lt;poly1305::backend::avx2::State as universal_hash::UhfBackend&gt;::proc_block (14 samples, 0.43%)</title><rect x="64.2594%" y="501" width="0.4302%" height="15" fill="rgb(251,11,48)" fg:x="2091" fg:w="14"/><text x="64.5094%" y="511.50"></text></g><g><title>poly1305::backend::avx2::State::compute_block (14 samples, 0.43%)</title><rect x="64.2594%" y="485" width="0.4302%" height="15" fill="rgb(236,173,5)" fg:x="2091" fg:w="14"/><text x="64.5094%" y="495.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (12 samples, 0.37%)</title><rect x="64.3208%" y="469" width="0.3688%" height="15" fill="rgb(230,95,12)" fg:x="2093" fg:w="12"/><text x="64.5708%" y="479.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (3 samples, 0.09%)</title><rect x="64.5974%" y="453" width="0.0922%" height="15" fill="rgb(232,209,1)" fg:x="2102" fg:w="3"/><text x="64.8474%" y="463.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (3 samples, 0.09%)</title><rect x="64.5974%" y="437" width="0.0922%" height="15" fill="rgb(232,6,1)" fg:x="2102" fg:w="3"/><text x="64.8474%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="64.6589%" y="421" width="0.0307%" height="15" fill="rgb(210,224,50)" fg:x="2104" fg:w="1"/><text x="64.9089%" y="431.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.03%)</title><rect x="64.7511%" y="437" width="0.0307%" height="15" fill="rgb(228,127,35)" fg:x="2107" fg:w="1"/><text x="65.0011%" y="447.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="64.7818%" y="437" width="0.0307%" height="15" fill="rgb(245,102,45)" fg:x="2108" fg:w="1"/><text x="65.0318%" y="447.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="64.8125%" y="421" width="0.0307%" height="15" fill="rgb(214,1,49)" fg:x="2109" fg:w="1"/><text x="65.0625%" y="431.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="64.8433%" y="405" width="0.0307%" height="15" fill="rgb(226,163,40)" fg:x="2110" fg:w="1"/><text x="65.0933%" y="415.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (1 samples, 0.03%)</title><rect x="64.8740%" y="405" width="0.0307%" height="15" fill="rgb(239,212,28)" fg:x="2111" fg:w="1"/><text x="65.1240%" y="415.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="64.8740%" y="389" width="0.0307%" height="15" fill="rgb(220,20,13)" fg:x="2111" fg:w="1"/><text x="65.1240%" y="399.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.03%)</title><rect x="64.8740%" y="373" width="0.0307%" height="15" fill="rgb(210,164,35)" fg:x="2111" fg:w="1"/><text x="65.1240%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="64.9047%" y="405" width="0.0307%" height="15" fill="rgb(248,109,41)" fg:x="2112" fg:w="1"/><text x="65.1547%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.03%)</title><rect x="64.9355%" y="405" width="0.0307%" height="15" fill="rgb(238,23,50)" fg:x="2113" fg:w="1"/><text x="65.1855%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (2 samples, 0.06%)</title><rect x="64.9662%" y="405" width="0.0615%" height="15" fill="rgb(211,48,49)" fg:x="2114" fg:w="2"/><text x="65.2162%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (2 samples, 0.06%)</title><rect x="65.0277%" y="405" width="0.0615%" height="15" fill="rgb(223,36,21)" fg:x="2116" fg:w="2"/><text x="65.2777%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="65.0891%" y="405" width="0.0307%" height="15" fill="rgb(207,123,46)" fg:x="2118" fg:w="1"/><text x="65.3391%" y="415.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (11 samples, 0.34%)</title><rect x="64.8433%" y="421" width="0.3380%" height="15" fill="rgb(240,218,32)" fg:x="2110" fg:w="11"/><text x="65.0933%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (2 samples, 0.06%)</title><rect x="65.1199%" y="405" width="0.0615%" height="15" fill="rgb(252,5,43)" fg:x="2119" fg:w="2"/><text x="65.3699%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="65.1813%" y="421" width="0.0307%" height="15" fill="rgb(252,84,19)" fg:x="2121" fg:w="1"/><text x="65.4313%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (2 samples, 0.06%)</title><rect x="65.2120%" y="421" width="0.0615%" height="15" fill="rgb(243,152,39)" fg:x="2122" fg:w="2"/><text x="65.4620%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="65.2735%" y="421" width="0.0307%" height="15" fill="rgb(234,160,15)" fg:x="2124" fg:w="1"/><text x="65.5235%" y="431.50"></text></g><g><title>chacha20::backends::avx2::rounds (17 samples, 0.52%)</title><rect x="64.8125%" y="437" width="0.5224%" height="15" fill="rgb(237,34,20)" fg:x="2109" fg:w="17"/><text x="65.0625%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="65.3042%" y="421" width="0.0307%" height="15" fill="rgb(229,97,13)" fg:x="2125" fg:w="1"/><text x="65.5542%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="65.3350%" y="437" width="0.0307%" height="15" fill="rgb(234,71,50)" fg:x="2126" fg:w="1"/><text x="65.5850%" y="447.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.03%)</title><rect x="65.3350%" y="421" width="0.0307%" height="15" fill="rgb(253,155,4)" fg:x="2126" fg:w="1"/><text x="65.5850%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (2 samples, 0.06%)</title><rect x="65.3657%" y="437" width="0.0615%" height="15" fill="rgb(222,185,37)" fg:x="2127" fg:w="2"/><text x="65.6157%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="65.4272%" y="437" width="0.0307%" height="15" fill="rgb(251,177,13)" fg:x="2129" fg:w="1"/><text x="65.6772%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (2 samples, 0.06%)</title><rect x="65.4579%" y="437" width="0.0615%" height="15" fill="rgb(250,179,40)" fg:x="2130" fg:w="2"/><text x="65.7079%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="65.5194%" y="437" width="0.0307%" height="15" fill="rgb(242,44,2)" fg:x="2132" fg:w="1"/><text x="65.7694%" y="447.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_par_ks_blocks (27 samples, 0.83%)</title><rect x="64.7511%" y="453" width="0.8297%" height="15" fill="rgb(216,177,13)" fg:x="2107" fg:w="27"/><text x="65.0011%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::array::iter::IntoIter&lt;[core::core_arch::x86::__m256i: 4],2_usize&gt;&gt; (1 samples, 0.03%)</title><rect x="65.5501%" y="437" width="0.0307%" height="15" fill="rgb(216,106,43)" fg:x="2133" fg:w="1"/><text x="65.8001%" y="447.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="65.5501%" y="421" width="0.0307%" height="15" fill="rgb(216,183,2)" fg:x="2133" fg:w="1"/><text x="65.8001%" y="431.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.03%)</title><rect x="65.5501%" y="405" width="0.0307%" height="15" fill="rgb(249,75,3)" fg:x="2133" fg:w="1"/><text x="65.8001%" y="415.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (2 samples, 0.06%)</title><rect x="65.5808%" y="405" width="0.0615%" height="15" fill="rgb(219,67,39)" fg:x="2134" fg:w="2"/><text x="65.8308%" y="415.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (1 samples, 0.03%)</title><rect x="65.6423%" y="389" width="0.0307%" height="15" fill="rgb(253,228,2)" fg:x="2136" fg:w="1"/><text x="65.8923%" y="399.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="65.6423%" y="373" width="0.0307%" height="15" fill="rgb(235,138,27)" fg:x="2136" fg:w="1"/><text x="65.8923%" y="383.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.03%)</title><rect x="65.6423%" y="357" width="0.0307%" height="15" fill="rgb(236,97,51)" fg:x="2136" fg:w="1"/><text x="65.8923%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="65.6730%" y="389" width="0.0307%" height="15" fill="rgb(240,80,30)" fg:x="2137" fg:w="1"/><text x="65.9230%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.03%)</title><rect x="65.7037%" y="389" width="0.0307%" height="15" fill="rgb(230,178,19)" fg:x="2138" fg:w="1"/><text x="65.9537%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (2 samples, 0.06%)</title><rect x="65.7345%" y="389" width="0.0615%" height="15" fill="rgb(210,190,27)" fg:x="2139" fg:w="2"/><text x="65.9845%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="65.7959%" y="389" width="0.0307%" height="15" fill="rgb(222,107,31)" fg:x="2141" fg:w="1"/><text x="66.0459%" y="399.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (7 samples, 0.22%)</title><rect x="65.6423%" y="405" width="0.2151%" height="15" fill="rgb(216,127,34)" fg:x="2136" fg:w="7"/><text x="65.8923%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="65.8267%" y="389" width="0.0307%" height="15" fill="rgb(234,116,52)" fg:x="2142" fg:w="1"/><text x="66.0767%" y="399.50"></text></g><g><title>chacha20::backends::avx2::rounds (10 samples, 0.31%)</title><rect x="65.5808%" y="421" width="0.3073%" height="15" fill="rgb(222,124,15)" fg:x="2134" fg:w="10"/><text x="65.8308%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="65.8574%" y="405" width="0.0307%" height="15" fill="rgb(231,179,28)" fg:x="2143" fg:w="1"/><text x="66.1074%" y="415.50"></text></g><g><title>cipher::stream_core::StreamBackend::gen_tail_blocks (11 samples, 0.34%)</title><rect x="65.5808%" y="453" width="0.3380%" height="15" fill="rgb(226,93,45)" fg:x="2134" fg:w="11"/><text x="65.8308%" y="463.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (11 samples, 0.34%)</title><rect x="65.5808%" y="437" width="0.3380%" height="15" fill="rgb(215,8,51)" fg:x="2134" fg:w="11"/><text x="65.8308%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="65.8881%" y="421" width="0.0307%" height="15" fill="rgb(223,106,5)" fg:x="2144" fg:w="1"/><text x="66.1381%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="65.8881%" y="405" width="0.0307%" height="15" fill="rgb(250,191,5)" fg:x="2144" fg:w="1"/><text x="66.1381%" y="415.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="65.8881%" y="389" width="0.0307%" height="15" fill="rgb(242,132,44)" fg:x="2144" fg:w="1"/><text x="66.1381%" y="399.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::iter_position (1 samples, 0.03%)</title><rect x="65.9189%" y="325" width="0.0307%" height="15" fill="rgb(251,152,29)" fg:x="2145" fg:w="1"/><text x="66.1689%" y="335.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (1 samples, 0.03%)</title><rect x="65.9496%" y="261" width="0.0307%" height="15" fill="rgb(218,179,5)" fg:x="2146" fg:w="1"/><text x="66.1996%" y="271.50"></text></g><g><title>__memcpy_avx_unaligned (1 samples, 0.03%)</title><rect x="65.9496%" y="245" width="0.0307%" height="15" fill="rgb(227,67,19)" fg:x="2146" fg:w="1"/><text x="66.1996%" y="255.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (2 samples, 0.06%)</title><rect x="65.9496%" y="277" width="0.0615%" height="15" fill="rgb(233,119,31)" fg:x="2146" fg:w="2"/><text x="66.1996%" y="287.50"></text></g><g><title>core::ptr::read (1 samples, 0.03%)</title><rect x="65.9803%" y="261" width="0.0307%" height="15" fill="rgb(241,120,22)" fg:x="2147" fg:w="1"/><text x="66.2303%" y="271.50"></text></g><g><title>__memcpy_avx_unaligned (1 samples, 0.03%)</title><rect x="65.9803%" y="245" width="0.0307%" height="15" fill="rgb(224,102,30)" fg:x="2147" fg:w="1"/><text x="66.2303%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.12%)</title><rect x="65.9189%" y="421" width="0.1229%" height="15" fill="rgb(210,164,37)" fg:x="2145" fg:w="4"/><text x="66.1689%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.12%)</title><rect x="65.9189%" y="405" width="0.1229%" height="15" fill="rgb(226,191,16)" fg:x="2145" fg:w="4"/><text x="66.1689%" y="415.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.12%)</title><rect x="65.9189%" y="389" width="0.1229%" height="15" fill="rgb(214,40,45)" fg:x="2145" fg:w="4"/><text x="66.1689%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (4 samples, 0.12%)</title><rect x="65.9189%" y="373" width="0.1229%" height="15" fill="rgb(244,29,26)" fg:x="2145" fg:w="4"/><text x="66.1689%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (4 samples, 0.12%)</title><rect x="65.9189%" y="357" width="0.1229%" height="15" fill="rgb(216,16,5)" fg:x="2145" fg:w="4"/><text x="66.1689%" y="367.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (4 samples, 0.12%)</title><rect x="65.9189%" y="341" width="0.1229%" height="15" fill="rgb(249,76,35)" fg:x="2145" fg:w="4"/><text x="66.1689%" y="351.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (3 samples, 0.09%)</title><rect x="65.9496%" y="325" width="0.0922%" height="15" fill="rgb(207,11,44)" fg:x="2146" fg:w="3"/><text x="66.1996%" y="335.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (3 samples, 0.09%)</title><rect x="65.9496%" y="309" width="0.0922%" height="15" fill="rgb(228,190,49)" fg:x="2146" fg:w="3"/><text x="66.1996%" y="319.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (3 samples, 0.09%)</title><rect x="65.9496%" y="293" width="0.0922%" height="15" fill="rgb(214,173,12)" fg:x="2146" fg:w="3"/><text x="66.1996%" y="303.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::iter_position (1 samples, 0.03%)</title><rect x="66.0111%" y="277" width="0.0307%" height="15" fill="rgb(218,26,35)" fg:x="2148" fg:w="1"/><text x="66.2611%" y="287.50"></text></g><g><title>core::slice::raw::from_raw_parts (1 samples, 0.03%)</title><rect x="66.0111%" y="261" width="0.0307%" height="15" fill="rgb(220,200,19)" fg:x="2148" fg:w="1"/><text x="66.2611%" y="271.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.03%)</title><rect x="66.0111%" y="245" width="0.0307%" height="15" fill="rgb(239,95,49)" fg:x="2148" fg:w="1"/><text x="66.2611%" y="255.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::cast (1 samples, 0.03%)</title><rect x="66.0111%" y="229" width="0.0307%" height="15" fill="rgb(235,85,53)" fg:x="2148" fg:w="1"/><text x="66.2611%" y="239.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (5 samples, 0.15%)</title><rect x="65.9189%" y="453" width="0.1537%" height="15" fill="rgb(233,133,31)" fg:x="2145" fg:w="5"/><text x="66.1689%" y="463.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (5 samples, 0.15%)</title><rect x="65.9189%" y="437" width="0.1537%" height="15" fill="rgb(218,25,20)" fg:x="2145" fg:w="5"/><text x="66.1689%" y="447.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::iter_position (1 samples, 0.03%)</title><rect x="66.0418%" y="421" width="0.0307%" height="15" fill="rgb(252,210,38)" fg:x="2149" fg:w="1"/><text x="66.2918%" y="431.50"></text></g><g><title>core::slice::raw::from_raw_parts (1 samples, 0.03%)</title><rect x="66.0418%" y="405" width="0.0307%" height="15" fill="rgb(242,134,21)" fg:x="2149" fg:w="1"/><text x="66.2918%" y="415.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.03%)</title><rect x="66.0418%" y="389" width="0.0307%" height="15" fill="rgb(213,28,48)" fg:x="2149" fg:w="1"/><text x="66.2918%" y="399.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (1 samples, 0.03%)</title><rect x="66.0418%" y="373" width="0.0307%" height="15" fill="rgb(250,196,2)" fg:x="2149" fg:w="1"/><text x="66.2918%" y="383.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.03%)</title><rect x="69.3608%" y="421" width="0.0307%" height="15" fill="rgb(227,5,17)" fg:x="2257" fg:w="1"/><text x="69.6108%" y="431.50"></text></g><g><title>core::slice::raw::from_raw_parts (5 samples, 0.15%)</title><rect x="69.3915%" y="421" width="0.1537%" height="15" fill="rgb(221,226,24)" fg:x="2258" fg:w="5"/><text x="69.6415%" y="431.50"></text></g><g><title>core::ptr::slice_from_raw_parts (3 samples, 0.09%)</title><rect x="69.4530%" y="405" width="0.0922%" height="15" fill="rgb(211,5,48)" fg:x="2260" fg:w="3"/><text x="69.7030%" y="415.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (3 samples, 0.09%)</title><rect x="69.4530%" y="389" width="0.0922%" height="15" fill="rgb(219,150,6)" fg:x="2260" fg:w="3"/><text x="69.7030%" y="399.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::Deref&gt;::deref (50 samples, 1.54%)</title><rect x="68.1008%" y="437" width="1.5366%" height="15" fill="rgb(251,46,16)" fg:x="2216" fg:w="50"/><text x="68.3508%" y="447.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (3 samples, 0.09%)</title><rect x="69.5452%" y="421" width="0.0922%" height="15" fill="rgb(220,204,40)" fg:x="2263" fg:w="3"/><text x="69.7952%" y="431.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (3 samples, 0.09%)</title><rect x="69.5452%" y="405" width="0.0922%" height="15" fill="rgb(211,85,2)" fg:x="2263" fg:w="3"/><text x="69.7952%" y="415.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (3 samples, 0.09%)</title><rect x="69.5452%" y="389" width="0.0922%" height="15" fill="rgb(229,17,7)" fg:x="2263" fg:w="3"/><text x="69.7952%" y="399.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.03%)</title><rect x="70.0676%" y="421" width="0.0307%" height="15" fill="rgb(239,72,28)" fg:x="2280" fg:w="1"/><text x="70.3176%" y="431.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.03%)</title><rect x="70.0983%" y="421" width="0.0307%" height="15" fill="rgb(230,47,54)" fg:x="2281" fg:w="1"/><text x="70.3483%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::cast (1 samples, 0.03%)</title><rect x="70.1905%" y="389" width="0.0307%" height="15" fill="rgb(214,50,8)" fg:x="2284" fg:w="1"/><text x="70.4405%" y="399.50"></text></g><g><title>core::slice::raw::from_raw_parts (7 samples, 0.22%)</title><rect x="70.1291%" y="421" width="0.2151%" height="15" fill="rgb(216,198,43)" fg:x="2282" fg:w="7"/><text x="70.3791%" y="431.50"></text></g><g><title>core::ptr::slice_from_raw_parts (5 samples, 0.15%)</title><rect x="70.1905%" y="405" width="0.1537%" height="15" fill="rgb(234,20,35)" fg:x="2284" fg:w="5"/><text x="70.4405%" y="415.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (4 samples, 0.12%)</title><rect x="70.2213%" y="389" width="0.1229%" height="15" fill="rgb(254,45,19)" fg:x="2285" fg:w="4"/><text x="70.4713%" y="399.50"></text></g><g><title>__rseq_handle_notify_resume (1 samples, 0.03%)</title><rect x="70.5286%" y="325" width="0.0307%" height="15" fill="rgb(219,14,44)" fg:x="2295" fg:w="1"/><text x="70.7786%" y="335.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (31 samples, 0.95%)</title><rect x="69.6374%" y="437" width="0.9527%" height="15" fill="rgb(217,220,26)" fg:x="2266" fg:w="31"/><text x="69.8874%" y="447.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (8 samples, 0.25%)</title><rect x="70.3442%" y="421" width="0.2459%" height="15" fill="rgb(213,158,28)" fg:x="2289" fg:w="8"/><text x="70.5942%" y="431.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (6 samples, 0.18%)</title><rect x="70.4057%" y="405" width="0.1844%" height="15" fill="rgb(252,51,52)" fg:x="2291" fg:w="6"/><text x="70.6557%" y="415.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (6 samples, 0.18%)</title><rect x="70.4057%" y="389" width="0.1844%" height="15" fill="rgb(246,89,16)" fg:x="2291" fg:w="6"/><text x="70.6557%" y="399.50"></text></g><g><title>asm_sysvec_call_function_single (2 samples, 0.06%)</title><rect x="70.5286%" y="373" width="0.0615%" height="15" fill="rgb(216,158,49)" fg:x="2295" fg:w="2"/><text x="70.7786%" y="383.50"></text></g><g><title>irqentry_exit_to_user_mode (2 samples, 0.06%)</title><rect x="70.5286%" y="357" width="0.0615%" height="15" fill="rgb(236,107,19)" fg:x="2295" fg:w="2"/><text x="70.7786%" y="367.50"></text></g><g><title>exit_to_user_mode_prepare (2 samples, 0.06%)</title><rect x="70.5286%" y="341" width="0.0615%" height="15" fill="rgb(228,185,30)" fg:x="2295" fg:w="2"/><text x="70.7786%" y="351.50"></text></g><g><title>schedule (1 samples, 0.03%)</title><rect x="70.5593%" y="325" width="0.0307%" height="15" fill="rgb(246,134,8)" fg:x="2296" fg:w="1"/><text x="70.8093%" y="335.50"></text></g><g><title>__schedule (1 samples, 0.03%)</title><rect x="70.5593%" y="309" width="0.0307%" height="15" fill="rgb(214,143,50)" fg:x="2296" fg:w="1"/><text x="70.8093%" y="319.50"></text></g><g><title>finish_task_switch.isra.0 (1 samples, 0.03%)</title><rect x="70.5593%" y="293" width="0.0307%" height="15" fill="rgb(228,75,8)" fg:x="2296" fg:w="1"/><text x="70.8093%" y="303.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (5 samples, 0.15%)</title><rect x="70.5900%" y="421" width="0.1537%" height="15" fill="rgb(207,175,4)" fg:x="2297" fg:w="5"/><text x="70.8400%" y="431.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (7 samples, 0.22%)</title><rect x="70.5900%" y="437" width="0.2151%" height="15" fill="rgb(205,108,24)" fg:x="2297" fg:w="7"/><text x="70.8400%" y="447.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (2 samples, 0.06%)</title><rect x="70.7437%" y="421" width="0.0615%" height="15" fill="rgb(244,120,49)" fg:x="2302" fg:w="2"/><text x="70.9937%" y="431.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.03%)</title><rect x="70.8052%" y="421" width="0.0307%" height="15" fill="rgb(223,47,38)" fg:x="2304" fg:w="1"/><text x="71.0552%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.03%)</title><rect x="70.8359%" y="261" width="0.0307%" height="15" fill="rgb(229,179,11)" fg:x="2305" fg:w="1"/><text x="71.0859%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call (1 samples, 0.03%)</title><rect x="70.8359%" y="245" width="0.0307%" height="15" fill="rgb(231,122,1)" fg:x="2305" fg:w="1"/><text x="71.0859%" y="255.50"></text></g><g><title>__memcpy_avx_unaligned (1 samples, 0.03%)</title><rect x="70.8666%" y="229" width="0.0307%" height="15" fill="rgb(245,119,9)" fg:x="2306" fg:w="1"/><text x="71.1166%" y="239.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (1 samples, 0.03%)</title><rect x="70.8974%" y="229" width="0.0307%" height="15" fill="rgb(241,163,25)" fg:x="2307" fg:w="1"/><text x="71.1474%" y="239.50"></text></g><g><title>core::ptr::read (1 samples, 0.03%)</title><rect x="70.8974%" y="213" width="0.0307%" height="15" fill="rgb(217,214,3)" fg:x="2307" fg:w="1"/><text x="71.1474%" y="223.50"></text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;generic_array::GenericArray&lt;u8,N&gt;,M&gt;&gt;::xor_in2out (159 samples, 4.89%)</title><rect x="66.0725%" y="453" width="4.8863%" height="15" fill="rgb(240,86,28)" fg:x="2150" fg:w="159"/><text x="66.3225%" y="463.50">inout:..</text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (5 samples, 0.15%)</title><rect x="70.8052%" y="437" width="0.1537%" height="15" fill="rgb(215,47,9)" fg:x="2304" fg:w="5"/><text x="71.0552%" y="447.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (4 samples, 0.12%)</title><rect x="70.8359%" y="421" width="0.1229%" height="15" fill="rgb(252,25,45)" fg:x="2305" fg:w="4"/><text x="71.0859%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.12%)</title><rect x="70.8359%" y="405" width="0.1229%" height="15" fill="rgb(251,164,9)" fg:x="2305" fg:w="4"/><text x="71.0859%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.12%)</title><rect x="70.8359%" y="389" width="0.1229%" height="15" fill="rgb(233,194,0)" fg:x="2305" fg:w="4"/><text x="71.0859%" y="399.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.12%)</title><rect x="70.8359%" y="373" width="0.1229%" height="15" fill="rgb(249,111,24)" fg:x="2305" fg:w="4"/><text x="71.0859%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (4 samples, 0.12%)</title><rect x="70.8359%" y="357" width="0.1229%" height="15" fill="rgb(250,223,3)" fg:x="2305" fg:w="4"/><text x="71.0859%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (4 samples, 0.12%)</title><rect x="70.8359%" y="341" width="0.1229%" height="15" fill="rgb(236,178,37)" fg:x="2305" fg:w="4"/><text x="71.0859%" y="351.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (4 samples, 0.12%)</title><rect x="70.8359%" y="325" width="0.1229%" height="15" fill="rgb(241,158,50)" fg:x="2305" fg:w="4"/><text x="71.0859%" y="335.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (4 samples, 0.12%)</title><rect x="70.8359%" y="309" width="0.1229%" height="15" fill="rgb(213,121,41)" fg:x="2305" fg:w="4"/><text x="71.0859%" y="319.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (4 samples, 0.12%)</title><rect x="70.8359%" y="293" width="0.1229%" height="15" fill="rgb(240,92,3)" fg:x="2305" fg:w="4"/><text x="71.0859%" y="303.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (4 samples, 0.12%)</title><rect x="70.8359%" y="277" width="0.1229%" height="15" fill="rgb(205,123,3)" fg:x="2305" fg:w="4"/><text x="71.0859%" y="287.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (3 samples, 0.09%)</title><rect x="70.8666%" y="261" width="0.0922%" height="15" fill="rgb(205,97,47)" fg:x="2306" fg:w="3"/><text x="71.1166%" y="271.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (3 samples, 0.09%)</title><rect x="70.8666%" y="245" width="0.0922%" height="15" fill="rgb(247,152,14)" fg:x="2306" fg:w="3"/><text x="71.1166%" y="255.50"></text></g><g><title>core::ptr::write (1 samples, 0.03%)</title><rect x="70.9281%" y="229" width="0.0307%" height="15" fill="rgb(248,195,53)" fg:x="2308" fg:w="1"/><text x="71.1781%" y="239.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (206 samples, 6.33%)</title><rect x="64.6896%" y="469" width="6.3307%" height="15" fill="rgb(226,201,16)" fg:x="2105" fg:w="206"/><text x="64.9396%" y="479.50">&lt;cipher:..</text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;u8,N&gt;&gt;::xor_in2out (2 samples, 0.06%)</title><rect x="70.9588%" y="453" width="0.0615%" height="15" fill="rgb(205,98,0)" fg:x="2309" fg:w="2"/><text x="71.2088%" y="463.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.03%)</title><rect x="70.9896%" y="437" width="0.0307%" height="15" fill="rgb(214,191,48)" fg:x="2310" fg:w="1"/><text x="71.2396%" y="447.50"></text></g><g><title>chacha20::backends::avx2::inner (207 samples, 6.36%)</title><rect x="64.6896%" y="485" width="6.3614%" height="15" fill="rgb(237,112,39)" fg:x="2105" fg:w="207"/><text x="64.9396%" y="495.50">chacha20..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (1 samples, 0.03%)</title><rect x="71.0203%" y="469" width="0.0307%" height="15" fill="rgb(247,203,27)" fg:x="2311" fg:w="1"/><text x="71.2703%" y="479.50"></text></g><g><title>chacha20::backends::avx2::rounds (1 samples, 0.03%)</title><rect x="71.0510%" y="485" width="0.0307%" height="15" fill="rgb(235,124,28)" fg:x="2312" fg:w="1"/><text x="71.3010%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (2 samples, 0.06%)</title><rect x="71.0817%" y="485" width="0.0615%" height="15" fill="rgb(208,207,46)" fg:x="2313" fg:w="2"/><text x="71.3317%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="71.1432%" y="485" width="0.0307%" height="15" fill="rgb(234,176,4)" fg:x="2315" fg:w="1"/><text x="71.3932%" y="495.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.03%)</title><rect x="71.1432%" y="469" width="0.0307%" height="15" fill="rgb(230,133,28)" fg:x="2315" fg:w="1"/><text x="71.3932%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (2 samples, 0.06%)</title><rect x="71.1739%" y="485" width="0.0615%" height="15" fill="rgb(211,137,40)" fg:x="2316" fg:w="2"/><text x="71.4239%" y="495.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.06%)</title><rect x="71.2354%" y="485" width="0.0615%" height="15" fill="rgb(254,35,13)" fg:x="2318" fg:w="2"/><text x="71.4854%" y="495.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.06%)</title><rect x="71.2969%" y="485" width="0.0615%" height="15" fill="rgb(225,49,51)" fg:x="2320" fg:w="2"/><text x="71.5469%" y="495.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (222 samples, 6.82%)</title><rect x="64.6896%" y="533" width="6.8224%" height="15" fill="rgb(251,10,15)" fg:x="2105" fg:w="222"/><text x="64.9396%" y="543.50">cipher::s..</text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (222 samples, 6.82%)</title><rect x="64.6896%" y="517" width="6.8224%" height="15" fill="rgb(228,207,15)" fg:x="2105" fg:w="222"/><text x="64.9396%" y="527.50">&lt;chacha20..</text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (222 samples, 6.82%)</title><rect x="64.6896%" y="501" width="6.8224%" height="15" fill="rgb(241,99,19)" fg:x="2105" fg:w="222"/><text x="64.9396%" y="511.50">&lt;chacha20..</text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (5 samples, 0.15%)</title><rect x="71.3583%" y="485" width="0.1537%" height="15" fill="rgb(207,104,49)" fg:x="2322" fg:w="5"/><text x="71.6083%" y="495.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (1 samples, 0.03%)</title><rect x="71.5120%" y="469" width="0.0307%" height="15" fill="rgb(234,99,18)" fg:x="2327" fg:w="1"/><text x="71.7620%" y="479.50"></text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;u8,N&gt;&gt;::xor_in2out (1 samples, 0.03%)</title><rect x="71.5120%" y="453" width="0.0307%" height="15" fill="rgb(213,191,49)" fg:x="2327" fg:w="1"/><text x="71.7620%" y="463.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="71.5120%" y="437" width="0.0307%" height="15" fill="rgb(210,226,19)" fg:x="2327" fg:w="1"/><text x="71.7620%" y="447.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="71.5427%" y="437" width="0.0307%" height="15" fill="rgb(229,97,18)" fg:x="2328" fg:w="1"/><text x="71.7927%" y="447.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (10 samples, 0.31%)</title><rect x="71.6349%" y="389" width="0.3073%" height="15" fill="rgb(211,167,15)" fg:x="2331" fg:w="10"/><text x="71.8849%" y="399.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (1 samples, 0.03%)</title><rect x="71.9422%" y="389" width="0.0307%" height="15" fill="rgb(210,169,34)" fg:x="2341" fg:w="1"/><text x="72.1922%" y="399.50"></text></g><g><title>chacha20::backends::avx2::inner (2 samples, 0.06%)</title><rect x="71.9730%" y="389" width="0.0615%" height="15" fill="rgb(241,121,31)" fg:x="2342" fg:w="2"/><text x="72.2230%" y="399.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (1 samples, 0.03%)</title><rect x="72.0037%" y="373" width="0.0307%" height="15" fill="rgb(232,40,11)" fg:x="2343" fg:w="1"/><text x="72.2537%" y="383.50"></text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;u8,N&gt;&gt;::xor_in2out (1 samples, 0.03%)</title><rect x="72.0037%" y="357" width="0.0307%" height="15" fill="rgb(205,86,26)" fg:x="2343" fg:w="1"/><text x="72.2537%" y="367.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (1 samples, 0.03%)</title><rect x="72.0344%" y="389" width="0.0307%" height="15" fill="rgb(231,126,28)" fg:x="2344" fg:w="1"/><text x="72.2844%" y="399.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.03%)</title><rect x="72.0959%" y="373" width="0.0307%" height="15" fill="rgb(219,221,18)" fg:x="2346" fg:w="1"/><text x="72.3459%" y="383.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (2 samples, 0.06%)</title><rect x="72.1266%" y="373" width="0.0615%" height="15" fill="rgb(211,40,0)" fg:x="2347" fg:w="2"/><text x="72.3766%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="72.1881%" y="373" width="0.0307%" height="15" fill="rgb(239,85,43)" fg:x="2349" fg:w="1"/><text x="72.4381%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.03%)</title><rect x="72.2188%" y="373" width="0.0307%" height="15" fill="rgb(231,55,21)" fg:x="2350" fg:w="1"/><text x="72.4688%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (3 samples, 0.09%)</title><rect x="72.2495%" y="373" width="0.0922%" height="15" fill="rgb(225,184,43)" fg:x="2351" fg:w="3"/><text x="72.4995%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="72.3417%" y="373" width="0.0307%" height="15" fill="rgb(251,158,41)" fg:x="2354" fg:w="1"/><text x="72.5917%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (12 samples, 0.37%)</title><rect x="72.0652%" y="389" width="0.3688%" height="15" fill="rgb(234,159,37)" fg:x="2345" fg:w="12"/><text x="72.3152%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.06%)</title><rect x="72.3725%" y="373" width="0.0615%" height="15" fill="rgb(216,204,22)" fg:x="2355" fg:w="2"/><text x="72.6225%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (2 samples, 0.06%)</title><rect x="72.4339%" y="389" width="0.0615%" height="15" fill="rgb(214,17,3)" fg:x="2357" fg:w="2"/><text x="72.6839%" y="399.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (1 samples, 0.03%)</title><rect x="72.5569%" y="373" width="0.0307%" height="15" fill="rgb(212,111,17)" fg:x="2361" fg:w="1"/><text x="72.8069%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (5 samples, 0.15%)</title><rect x="72.4954%" y="389" width="0.1537%" height="15" fill="rgb(221,157,24)" fg:x="2359" fg:w="5"/><text x="72.7454%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.06%)</title><rect x="72.5876%" y="373" width="0.0615%" height="15" fill="rgb(252,16,13)" fg:x="2362" fg:w="2"/><text x="72.8376%" y="383.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.03%)</title><rect x="72.6490%" y="373" width="0.0307%" height="15" fill="rgb(221,62,2)" fg:x="2364" fg:w="1"/><text x="72.8990%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (2 samples, 0.06%)</title><rect x="72.6490%" y="389" width="0.0615%" height="15" fill="rgb(247,87,22)" fg:x="2364" fg:w="2"/><text x="72.8990%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="72.6798%" y="373" width="0.0307%" height="15" fill="rgb(215,73,9)" fg:x="2365" fg:w="1"/><text x="72.9298%" y="383.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (2 samples, 0.06%)</title><rect x="72.7720%" y="373" width="0.0615%" height="15" fill="rgb(207,175,33)" fg:x="2368" fg:w="2"/><text x="73.0220%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (5 samples, 0.15%)</title><rect x="72.7105%" y="389" width="0.1537%" height="15" fill="rgb(243,129,54)" fg:x="2366" fg:w="5"/><text x="72.9605%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="72.8334%" y="373" width="0.0307%" height="15" fill="rgb(227,119,45)" fg:x="2370" fg:w="1"/><text x="73.0834%" y="383.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="73.1100%" y="373" width="0.0307%" height="15" fill="rgb(205,109,36)" fg:x="2379" fg:w="1"/><text x="73.3600%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (10 samples, 0.31%)</title><rect x="72.8642%" y="389" width="0.3073%" height="15" fill="rgb(205,6,39)" fg:x="2371" fg:w="10"/><text x="73.1142%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.03%)</title><rect x="73.1407%" y="373" width="0.0307%" height="15" fill="rgb(221,32,16)" fg:x="2380" fg:w="1"/><text x="73.3907%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (1 samples, 0.03%)</title><rect x="73.1715%" y="389" width="0.0307%" height="15" fill="rgb(228,144,50)" fg:x="2381" fg:w="1"/><text x="73.4215%" y="399.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi32 (1 samples, 0.03%)</title><rect x="73.1715%" y="373" width="0.0307%" height="15" fill="rgb(229,201,53)" fg:x="2381" fg:w="1"/><text x="73.4215%" y="383.50"></text></g><g><title>core::core_arch::simd::i32x8::new (1 samples, 0.03%)</title><rect x="73.1715%" y="357" width="0.0307%" height="15" fill="rgb(249,153,27)" fg:x="2381" fg:w="1"/><text x="73.4215%" y="367.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.03%)</title><rect x="73.2022%" y="389" width="0.0307%" height="15" fill="rgb(227,106,25)" fg:x="2382" fg:w="1"/><text x="73.4522%" y="399.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi64x (1 samples, 0.03%)</title><rect x="73.2022%" y="373" width="0.0307%" height="15" fill="rgb(230,65,29)" fg:x="2382" fg:w="1"/><text x="73.4522%" y="383.50"></text></g><g><title>core::core_arch::simd::i64x4::new (1 samples, 0.03%)</title><rect x="73.2022%" y="357" width="0.0307%" height="15" fill="rgb(221,57,46)" fg:x="2382" fg:w="1"/><text x="73.4522%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (11 samples, 0.34%)</title><rect x="73.2329%" y="389" width="0.3380%" height="15" fill="rgb(229,161,17)" fg:x="2383" fg:w="11"/><text x="73.4829%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (6 samples, 0.18%)</title><rect x="73.5710%" y="389" width="0.1844%" height="15" fill="rgb(222,213,11)" fg:x="2394" fg:w="6"/><text x="73.8210%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (4 samples, 0.12%)</title><rect x="73.7554%" y="389" width="0.1229%" height="15" fill="rgb(235,35,13)" fg:x="2400" fg:w="4"/><text x="74.0054%" y="399.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (77 samples, 2.37%)</title><rect x="71.5734%" y="405" width="2.3663%" height="15" fill="rgb(233,158,34)" fg:x="2329" fg:w="77"/><text x="71.8234%" y="415.50">ch..</text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (2 samples, 0.06%)</title><rect x="73.8783%" y="389" width="0.0615%" height="15" fill="rgb(215,151,48)" fg:x="2404" fg:w="2"/><text x="74.1283%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.03%)</title><rect x="73.9398%" y="389" width="0.0307%" height="15" fill="rgb(229,84,14)" fg:x="2406" fg:w="1"/><text x="74.1898%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="73.9398%" y="373" width="0.0307%" height="15" fill="rgb(229,68,14)" fg:x="2406" fg:w="1"/><text x="74.1898%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.03%)</title><rect x="73.9705%" y="389" width="0.0307%" height="15" fill="rgb(243,106,26)" fg:x="2407" fg:w="1"/><text x="74.2205%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="74.0012%" y="389" width="0.0307%" height="15" fill="rgb(206,45,38)" fg:x="2408" fg:w="1"/><text x="74.2512%" y="399.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (4 samples, 0.12%)</title><rect x="73.9398%" y="405" width="0.1229%" height="15" fill="rgb(226,6,15)" fg:x="2406" fg:w="4"/><text x="74.1898%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="74.0320%" y="389" width="0.0307%" height="15" fill="rgb(232,22,54)" fg:x="2409" fg:w="1"/><text x="74.2820%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="74.0627%" y="373" width="0.0307%" height="15" fill="rgb(229,222,32)" fg:x="2410" fg:w="1"/><text x="74.3127%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (2 samples, 0.06%)</title><rect x="74.0627%" y="389" width="0.0615%" height="15" fill="rgb(228,62,29)" fg:x="2410" fg:w="2"/><text x="74.3127%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="74.0934%" y="373" width="0.0307%" height="15" fill="rgb(251,103,34)" fg:x="2411" fg:w="1"/><text x="74.3434%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.06%)</title><rect x="74.1242%" y="389" width="0.0615%" height="15" fill="rgb(233,12,30)" fg:x="2412" fg:w="2"/><text x="74.3742%" y="399.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (5 samples, 0.15%)</title><rect x="74.0627%" y="405" width="0.1537%" height="15" fill="rgb(238,52,0)" fg:x="2410" fg:w="5"/><text x="74.3127%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="74.1856%" y="389" width="0.0307%" height="15" fill="rgb(223,98,5)" fg:x="2414" fg:w="1"/><text x="74.4356%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="74.2163%" y="405" width="0.0307%" height="15" fill="rgb(228,75,37)" fg:x="2415" fg:w="1"/><text x="74.4663%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.03%)</title><rect x="74.2471%" y="405" width="0.0307%" height="15" fill="rgb(205,115,49)" fg:x="2416" fg:w="1"/><text x="74.4971%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.03%)</title><rect x="74.2778%" y="405" width="0.0307%" height="15" fill="rgb(250,154,43)" fg:x="2417" fg:w="1"/><text x="74.5278%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="74.3085%" y="405" width="0.0307%" height="15" fill="rgb(226,43,29)" fg:x="2418" fg:w="1"/><text x="74.5585%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (3 samples, 0.09%)</title><rect x="74.3393%" y="405" width="0.0922%" height="15" fill="rgb(249,228,39)" fg:x="2419" fg:w="3"/><text x="74.5893%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (3 samples, 0.09%)</title><rect x="74.4315%" y="405" width="0.0922%" height="15" fill="rgb(216,79,43)" fg:x="2422" fg:w="3"/><text x="74.6815%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.06%)</title><rect x="74.5237%" y="405" width="0.0615%" height="15" fill="rgb(228,95,12)" fg:x="2425" fg:w="2"/><text x="74.7737%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (3 samples, 0.09%)</title><rect x="74.5851%" y="405" width="0.0922%" height="15" fill="rgb(249,221,15)" fg:x="2427" fg:w="3"/><text x="74.8351%" y="415.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (107 samples, 3.29%)</title><rect x="71.5734%" y="421" width="3.2883%" height="15" fill="rgb(233,34,13)" fg:x="2329" fg:w="107"/><text x="71.8234%" y="431.50">cha..</text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (6 samples, 0.18%)</title><rect x="74.6773%" y="405" width="0.1844%" height="15" fill="rgb(214,103,39)" fg:x="2430" fg:w="6"/><text x="74.9273%" y="415.50"></text></g><g><title>chacha20::backends::avx2::rounds (108 samples, 3.32%)</title><rect x="71.5734%" y="437" width="3.3190%" height="15" fill="rgb(251,126,39)" fg:x="2329" fg:w="108"/><text x="71.8234%" y="447.50">cha..</text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="74.8617%" y="421" width="0.0307%" height="15" fill="rgb(214,216,36)" fg:x="2436" fg:w="1"/><text x="75.1117%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="74.8924%" y="437" width="0.0307%" height="15" fill="rgb(220,221,8)" fg:x="2437" fg:w="1"/><text x="75.1424%" y="447.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (334 samples, 10.26%)</title><rect x="64.6896%" y="581" width="10.2643%" height="15" fill="rgb(240,216,3)" fg:x="2105" fg:w="334"/><text x="64.9396%" y="591.50">cipher::stream:..</text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (334 samples, 10.26%)</title><rect x="64.6896%" y="565" width="10.2643%" height="15" fill="rgb(232,218,17)" fg:x="2105" fg:w="334"/><text x="64.9396%" y="575.50">cipher::stream:..</text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (334 samples, 10.26%)</title><rect x="64.6896%" y="549" width="10.2643%" height="15" fill="rgb(229,163,45)" fg:x="2105" fg:w="334"/><text x="64.9396%" y="559.50">&lt;cipher::stream..</text></g><g><title>cipher::stream_core::StreamCipherCore::write_keystream_block (112 samples, 3.44%)</title><rect x="71.5120%" y="533" width="3.4419%" height="15" fill="rgb(231,110,42)" fg:x="2327" fg:w="112"/><text x="71.7620%" y="543.50">cip..</text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (112 samples, 3.44%)</title><rect x="71.5120%" y="517" width="3.4419%" height="15" fill="rgb(208,170,48)" fg:x="2327" fg:w="112"/><text x="71.7620%" y="527.50">&lt;ch..</text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (112 samples, 3.44%)</title><rect x="71.5120%" y="501" width="3.4419%" height="15" fill="rgb(239,116,25)" fg:x="2327" fg:w="112"/><text x="71.7620%" y="511.50">&lt;ch..</text></g><g><title>chacha20::backends::avx2::inner (112 samples, 3.44%)</title><rect x="71.5120%" y="485" width="3.4419%" height="15" fill="rgb(219,200,50)" fg:x="2327" fg:w="112"/><text x="71.7620%" y="495.50">cha..</text></g><g><title>&lt;cipher::stream_core::WriteBlockCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (111 samples, 3.41%)</title><rect x="71.5427%" y="469" width="3.4112%" height="15" fill="rgb(245,200,0)" fg:x="2328" fg:w="111"/><text x="71.7927%" y="479.50">&lt;ci..</text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (111 samples, 3.41%)</title><rect x="71.5427%" y="453" width="3.4112%" height="15" fill="rgb(245,119,33)" fg:x="2328" fg:w="111"/><text x="71.7927%" y="463.50">&lt;ch..</text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="74.9232%" y="437" width="0.0307%" height="15" fill="rgb(231,125,12)" fg:x="2438" fg:w="1"/><text x="75.1732%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (3 samples, 0.09%)</title><rect x="74.9539%" y="469" width="0.0922%" height="15" fill="rgb(216,96,41)" fg:x="2439" fg:w="3"/><text x="75.2039%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (2 samples, 0.06%)</title><rect x="75.0461%" y="469" width="0.0615%" height="15" fill="rgb(248,43,45)" fg:x="2442" fg:w="2"/><text x="75.2961%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (1 samples, 0.03%)</title><rect x="75.1076%" y="469" width="0.0307%" height="15" fill="rgb(217,222,7)" fg:x="2444" fg:w="1"/><text x="75.3576%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (4 samples, 0.12%)</title><rect x="75.1383%" y="469" width="0.1229%" height="15" fill="rgb(233,28,6)" fg:x="2445" fg:w="4"/><text x="75.3883%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi64 (1 samples, 0.03%)</title><rect x="75.2612%" y="469" width="0.0307%" height="15" fill="rgb(231,218,15)" fg:x="2449" fg:w="1"/><text x="75.5112%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (2 samples, 0.06%)</title><rect x="75.2919%" y="469" width="0.0615%" height="15" fill="rgb(226,171,48)" fg:x="2450" fg:w="2"/><text x="75.5419%" y="479.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (5 samples, 0.15%)</title><rect x="75.3534%" y="469" width="0.1537%" height="15" fill="rgb(235,201,9)" fg:x="2452" fg:w="5"/><text x="75.6034%" y="479.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (5 samples, 0.15%)</title><rect x="75.3534%" y="453" width="0.1537%" height="15" fill="rgb(217,80,15)" fg:x="2452" fg:w="5"/><text x="75.6034%" y="463.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (5 samples, 0.15%)</title><rect x="75.3534%" y="437" width="0.1537%" height="15" fill="rgb(219,152,8)" fg:x="2452" fg:w="5"/><text x="75.6034%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="75.5071%" y="469" width="0.0307%" height="15" fill="rgb(243,107,38)" fg:x="2457" fg:w="1"/><text x="75.7571%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (4 samples, 0.12%)</title><rect x="75.5378%" y="469" width="0.1229%" height="15" fill="rgb(231,17,5)" fg:x="2458" fg:w="4"/><text x="75.7878%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="75.6607%" y="469" width="0.0307%" height="15" fill="rgb(209,25,54)" fg:x="2462" fg:w="1"/><text x="75.9107%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (3 samples, 0.09%)</title><rect x="75.6915%" y="469" width="0.0922%" height="15" fill="rgb(219,0,2)" fg:x="2463" fg:w="3"/><text x="75.9415%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="75.8144%" y="437" width="0.0307%" height="15" fill="rgb(246,9,5)" fg:x="2467" fg:w="1"/><text x="76.0644%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (2 samples, 0.06%)</title><rect x="76.2754%" y="421" width="0.0615%" height="15" fill="rgb(226,159,4)" fg:x="2482" fg:w="2"/><text x="76.5254%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (1 samples, 0.03%)</title><rect x="76.3368%" y="421" width="0.0307%" height="15" fill="rgb(219,175,34)" fg:x="2484" fg:w="1"/><text x="76.5868%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (1 samples, 0.03%)</title><rect x="76.3675%" y="421" width="0.0307%" height="15" fill="rgb(236,10,46)" fg:x="2485" fg:w="1"/><text x="76.6175%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (19 samples, 0.58%)</title><rect x="75.8451%" y="437" width="0.5839%" height="15" fill="rgb(240,211,16)" fg:x="2468" fg:w="19"/><text x="76.0951%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="76.3983%" y="421" width="0.0307%" height="15" fill="rgb(205,3,43)" fg:x="2486" fg:w="1"/><text x="76.6483%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (3 samples, 0.09%)</title><rect x="76.4290%" y="437" width="0.0922%" height="15" fill="rgb(245,7,22)" fg:x="2487" fg:w="3"/><text x="76.6790%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_blend_epi32 (3 samples, 0.09%)</title><rect x="76.5212%" y="437" width="0.0922%" height="15" fill="rgb(239,132,32)" fg:x="2490" fg:w="3"/><text x="76.7712%" y="447.50"></text></g><g><title>core::core_arch::simd::u64x4::splat (1 samples, 0.03%)</title><rect x="77.9656%" y="421" width="0.0307%" height="15" fill="rgb(228,202,34)" fg:x="2537" fg:w="1"/><text x="78.2156%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.03%)</title><rect x="77.9963%" y="421" width="0.0307%" height="15" fill="rgb(254,200,22)" fg:x="2538" fg:w="1"/><text x="78.2463%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (2 samples, 0.06%)</title><rect x="78.0270%" y="421" width="0.0615%" height="15" fill="rgb(219,10,39)" fg:x="2539" fg:w="2"/><text x="78.2770%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (1 samples, 0.03%)</title><rect x="78.0885%" y="421" width="0.0307%" height="15" fill="rgb(226,210,39)" fg:x="2541" fg:w="1"/><text x="78.3385%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (1 samples, 0.03%)</title><rect x="78.1192%" y="421" width="0.0307%" height="15" fill="rgb(208,219,16)" fg:x="2542" fg:w="1"/><text x="78.3692%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (1 samples, 0.03%)</title><rect x="78.1500%" y="421" width="0.0307%" height="15" fill="rgb(216,158,51)" fg:x="2543" fg:w="1"/><text x="78.4000%" y="431.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi32 (1 samples, 0.03%)</title><rect x="78.1807%" y="421" width="0.0307%" height="15" fill="rgb(233,14,44)" fg:x="2544" fg:w="1"/><text x="78.4307%" y="431.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (5 samples, 0.15%)</title><rect x="78.2114%" y="421" width="0.1537%" height="15" fill="rgb(237,97,39)" fg:x="2545" fg:w="5"/><text x="78.4614%" y="431.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (5 samples, 0.15%)</title><rect x="78.2114%" y="405" width="0.1537%" height="15" fill="rgb(218,198,43)" fg:x="2545" fg:w="5"/><text x="78.4614%" y="415.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (5 samples, 0.15%)</title><rect x="78.2114%" y="389" width="0.1537%" height="15" fill="rgb(231,104,20)" fg:x="2545" fg:w="5"/><text x="78.4614%" y="399.50"></text></g><g><title>core::core_arch::simd::i8x32::new (2 samples, 0.06%)</title><rect x="78.3036%" y="373" width="0.0615%" height="15" fill="rgb(254,36,13)" fg:x="2548" fg:w="2"/><text x="78.5536%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="78.3651%" y="421" width="0.0307%" height="15" fill="rgb(248,14,50)" fg:x="2550" fg:w="1"/><text x="78.6151%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="78.3958%" y="421" width="0.0307%" height="15" fill="rgb(217,107,29)" fg:x="2551" fg:w="1"/><text x="78.6458%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (2 samples, 0.06%)</title><rect x="78.4266%" y="421" width="0.0615%" height="15" fill="rgb(251,169,33)" fg:x="2552" fg:w="2"/><text x="78.6766%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (63 samples, 1.94%)</title><rect x="76.6134%" y="437" width="1.9361%" height="15" fill="rgb(217,108,32)" fg:x="2493" fg:w="63"/><text x="76.8634%" y="447.50">c..</text></g><g><title>poly1305::backend::avx2::State::process_blocks (2 samples, 0.06%)</title><rect x="78.4880%" y="421" width="0.0615%" height="15" fill="rgb(219,66,42)" fg:x="2554" fg:w="2"/><text x="78.7380%" y="431.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (2 samples, 0.06%)</title><rect x="78.4880%" y="405" width="0.0615%" height="15" fill="rgb(206,180,7)" fg:x="2554" fg:w="2"/><text x="78.7380%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (1 samples, 0.03%)</title><rect x="78.5495%" y="437" width="0.0307%" height="15" fill="rgb(208,226,31)" fg:x="2556" fg:w="1"/><text x="78.7995%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (3 samples, 0.09%)</title><rect x="78.7031%" y="421" width="0.0922%" height="15" fill="rgb(218,26,49)" fg:x="2561" fg:w="3"/><text x="78.9531%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_blend_epi32 (3 samples, 0.09%)</title><rect x="78.7953%" y="421" width="0.0922%" height="15" fill="rgb(233,197,48)" fg:x="2564" fg:w="3"/><text x="79.0453%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (2 samples, 0.06%)</title><rect x="78.8875%" y="421" width="0.0615%" height="15" fill="rgb(252,181,51)" fg:x="2567" fg:w="2"/><text x="79.1375%" y="431.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (7 samples, 0.22%)</title><rect x="78.9490%" y="421" width="0.2151%" height="15" fill="rgb(253,90,19)" fg:x="2569" fg:w="7"/><text x="79.1990%" y="431.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (7 samples, 0.22%)</title><rect x="78.9490%" y="405" width="0.2151%" height="15" fill="rgb(215,171,30)" fg:x="2569" fg:w="7"/><text x="79.1990%" y="415.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (7 samples, 0.22%)</title><rect x="78.9490%" y="389" width="0.2151%" height="15" fill="rgb(214,222,9)" fg:x="2569" fg:w="7"/><text x="79.1990%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="79.1641%" y="421" width="0.0307%" height="15" fill="rgb(223,3,22)" fg:x="2576" fg:w="1"/><text x="79.4141%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.03%)</title><rect x="79.1948%" y="421" width="0.0307%" height="15" fill="rgb(225,196,46)" fg:x="2577" fg:w="1"/><text x="79.4448%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (23 samples, 0.71%)</title><rect x="78.5802%" y="437" width="0.7068%" height="15" fill="rgb(209,110,37)" fg:x="2557" fg:w="23"/><text x="78.8302%" y="447.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (2 samples, 0.06%)</title><rect x="79.2256%" y="421" width="0.0615%" height="15" fill="rgb(249,89,12)" fg:x="2578" fg:w="2"/><text x="79.4756%" y="431.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (2 samples, 0.06%)</title><rect x="79.2256%" y="405" width="0.0615%" height="15" fill="rgb(226,27,33)" fg:x="2578" fg:w="2"/><text x="79.4756%" y="415.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="79.6865%" y="421" width="0.0307%" height="15" fill="rgb(213,82,22)" fg:x="2593" fg:w="1"/><text x="79.9365%" y="431.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="79.6865%" y="405" width="0.0307%" height="15" fill="rgb(248,140,0)" fg:x="2593" fg:w="1"/><text x="79.9365%" y="415.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="79.6865%" y="389" width="0.0307%" height="15" fill="rgb(228,106,3)" fg:x="2593" fg:w="1"/><text x="79.9365%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (15 samples, 0.46%)</title><rect x="79.2870%" y="437" width="0.4610%" height="15" fill="rgb(209,23,37)" fg:x="2580" fg:w="15"/><text x="79.5370%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="79.7173%" y="421" width="0.0307%" height="15" fill="rgb(241,93,50)" fg:x="2594" fg:w="1"/><text x="79.9673%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi64 (3 samples, 0.09%)</title><rect x="79.7480%" y="437" width="0.0922%" height="15" fill="rgb(253,46,43)" fg:x="2595" fg:w="3"/><text x="79.9980%" y="447.50"></text></g><g><title>core::core_arch::simd::u64x4::splat (2 samples, 0.06%)</title><rect x="79.7787%" y="421" width="0.0615%" height="15" fill="rgb(226,206,43)" fg:x="2596" fg:w="2"/><text x="80.0287%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (5 samples, 0.15%)</title><rect x="79.8402%" y="437" width="0.1537%" height="15" fill="rgb(217,54,7)" fg:x="2598" fg:w="5"/><text x="80.0902%" y="447.50"></text></g><g><title>core::core_arch::simd::u64x4::splat (1 samples, 0.03%)</title><rect x="79.9631%" y="421" width="0.0307%" height="15" fill="rgb(223,5,52)" fg:x="2602" fg:w="1"/><text x="80.2131%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_unpackhi_epi64 (1 samples, 0.03%)</title><rect x="79.9939%" y="437" width="0.0307%" height="15" fill="rgb(206,52,46)" fg:x="2603" fg:w="1"/><text x="80.2439%" y="447.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_loadu_si256 (1 samples, 0.03%)</title><rect x="80.0246%" y="437" width="0.0307%" height="15" fill="rgb(253,136,11)" fg:x="2604" fg:w="1"/><text x="80.2746%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="80.0246%" y="421" width="0.0307%" height="15" fill="rgb(208,106,33)" fg:x="2604" fg:w="1"/><text x="80.2746%" y="431.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (4 samples, 0.12%)</title><rect x="80.0553%" y="437" width="0.1229%" height="15" fill="rgb(206,54,4)" fg:x="2605" fg:w="4"/><text x="80.3053%" y="447.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi32 (2 samples, 0.06%)</title><rect x="80.1168%" y="421" width="0.0615%" height="15" fill="rgb(213,3,15)" fg:x="2607" fg:w="2"/><text x="80.3668%" y="431.50"></text></g><g><title>core::core_arch::simd::i32x8::new (2 samples, 0.06%)</title><rect x="80.1168%" y="405" width="0.0615%" height="15" fill="rgb(252,211,39)" fg:x="2607" fg:w="2"/><text x="80.3668%" y="415.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (21 samples, 0.65%)</title><rect x="80.1782%" y="437" width="0.6454%" height="15" fill="rgb(223,6,36)" fg:x="2609" fg:w="21"/><text x="80.4282%" y="447.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (21 samples, 0.65%)</title><rect x="80.1782%" y="421" width="0.6454%" height="15" fill="rgb(252,169,45)" fg:x="2609" fg:w="21"/><text x="80.4282%" y="431.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (21 samples, 0.65%)</title><rect x="80.1782%" y="405" width="0.6454%" height="15" fill="rgb(212,48,26)" fg:x="2609" fg:w="21"/><text x="80.4282%" y="415.50"></text></g><g><title>core::core_arch::simd::i8x32::new (6 samples, 0.18%)</title><rect x="80.6392%" y="389" width="0.1844%" height="15" fill="rgb(251,102,48)" fg:x="2624" fg:w="6"/><text x="80.8892%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (6 samples, 0.18%)</title><rect x="80.8236%" y="437" width="0.1844%" height="15" fill="rgb(243,208,16)" fg:x="2630" fg:w="6"/><text x="81.0736%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (11 samples, 0.34%)</title><rect x="81.0080%" y="437" width="0.3380%" height="15" fill="rgb(219,96,24)" fg:x="2636" fg:w="11"/><text x="81.2580%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (6 samples, 0.18%)</title><rect x="81.3460%" y="437" width="0.1844%" height="15" fill="rgb(219,33,29)" fg:x="2647" fg:w="6"/><text x="81.5960%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (23 samples, 0.71%)</title><rect x="81.5304%" y="437" width="0.7068%" height="15" fill="rgb(223,176,5)" fg:x="2653" fg:w="23"/><text x="81.7804%" y="447.50"></text></g><g><title>poly1305::backend::avx2::State::compute_par_blocks (3 samples, 0.09%)</title><rect x="82.2372%" y="437" width="0.0922%" height="15" fill="rgb(228,140,14)" fg:x="2676" fg:w="3"/><text x="82.4872%" y="447.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (8 samples, 0.25%)</title><rect x="82.3294%" y="437" width="0.2459%" height="15" fill="rgb(217,179,31)" fg:x="2679" fg:w="8"/><text x="82.5794%" y="447.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (8 samples, 0.25%)</title><rect x="82.3294%" y="421" width="0.2459%" height="15" fill="rgb(230,9,30)" fg:x="2679" fg:w="8"/><text x="82.5794%" y="431.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (225 samples, 6.91%)</title><rect x="75.7837%" y="453" width="6.9146%" height="15" fill="rgb(230,136,20)" fg:x="2466" fg:w="225"/><text x="76.0337%" y="463.50">&lt;&amp;poly130..</text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_loaded_blocks (4 samples, 0.12%)</title><rect x="82.5753%" y="437" width="0.1229%" height="15" fill="rgb(215,210,22)" fg:x="2687" fg:w="4"/><text x="82.8253%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (1 samples, 0.03%)</title><rect x="82.6982%" y="421" width="0.0307%" height="15" fill="rgb(218,43,5)" fg:x="2691" fg:w="1"/><text x="82.9482%" y="431.50"></text></g><g><title>core::core_arch::simd::u64x4::splat (1 samples, 0.03%)</title><rect x="82.6982%" y="405" width="0.0307%" height="15" fill="rgb(216,11,5)" fg:x="2691" fg:w="1"/><text x="82.9482%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (2 samples, 0.06%)</title><rect x="82.6982%" y="437" width="0.0615%" height="15" fill="rgb(209,82,29)" fg:x="2691" fg:w="2"/><text x="82.9482%" y="447.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (1 samples, 0.03%)</title><rect x="82.7289%" y="421" width="0.0307%" height="15" fill="rgb(244,115,12)" fg:x="2692" fg:w="1"/><text x="82.9789%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.03%)</title><rect x="82.7597%" y="437" width="0.0307%" height="15" fill="rgb(222,82,18)" fg:x="2693" fg:w="1"/><text x="83.0097%" y="447.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Add&gt;::add (4 samples, 0.12%)</title><rect x="82.6982%" y="453" width="0.1229%" height="15" fill="rgb(249,227,8)" fg:x="2691" fg:w="4"/><text x="82.9482%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (1 samples, 0.03%)</title><rect x="82.7904%" y="437" width="0.0307%" height="15" fill="rgb(253,141,45)" fg:x="2694" fg:w="1"/><text x="83.0404%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.03%)</title><rect x="82.8211%" y="437" width="0.0307%" height="15" fill="rgb(234,184,4)" fg:x="2695" fg:w="1"/><text x="83.0711%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (2 samples, 0.06%)</title><rect x="82.8519%" y="437" width="0.0615%" height="15" fill="rgb(218,194,23)" fg:x="2696" fg:w="2"/><text x="83.1019%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.06%)</title><rect x="82.9133%" y="421" width="0.0615%" height="15" fill="rgb(235,66,41)" fg:x="2698" fg:w="2"/><text x="83.1633%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_blend_epi32 (3 samples, 0.09%)</title><rect x="82.9133%" y="437" width="0.0922%" height="15" fill="rgb(245,217,1)" fg:x="2698" fg:w="3"/><text x="83.1633%" y="447.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (1 samples, 0.03%)</title><rect x="82.9748%" y="421" width="0.0307%" height="15" fill="rgb(229,91,1)" fg:x="2700" fg:w="1"/><text x="83.2248%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (4 samples, 0.12%)</title><rect x="83.0055%" y="437" width="0.1229%" height="15" fill="rgb(207,101,30)" fg:x="2701" fg:w="4"/><text x="83.2555%" y="447.50"></text></g><g><title>core::core_arch::simd::u64x4::splat (1 samples, 0.03%)</title><rect x="83.0977%" y="421" width="0.0307%" height="15" fill="rgb(223,82,49)" fg:x="2704" fg:w="1"/><text x="83.3477%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi64 (1 samples, 0.03%)</title><rect x="83.1285%" y="437" width="0.0307%" height="15" fill="rgb(218,167,17)" fg:x="2705" fg:w="1"/><text x="83.3785%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="83.1285%" y="421" width="0.0307%" height="15" fill="rgb(208,103,14)" fg:x="2705" fg:w="1"/><text x="83.3785%" y="431.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi64x (2 samples, 0.06%)</title><rect x="83.1592%" y="437" width="0.0615%" height="15" fill="rgb(238,20,8)" fg:x="2706" fg:w="2"/><text x="83.4092%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (4 samples, 0.12%)</title><rect x="83.2207%" y="437" width="0.1229%" height="15" fill="rgb(218,80,54)" fg:x="2708" fg:w="4"/><text x="83.4707%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.03%)</title><rect x="83.3436%" y="437" width="0.0307%" height="15" fill="rgb(240,144,17)" fg:x="2712" fg:w="1"/><text x="83.5936%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (10 samples, 0.31%)</title><rect x="83.4050%" y="421" width="0.3073%" height="15" fill="rgb(245,27,50)" fg:x="2714" fg:w="10"/><text x="83.6550%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (13 samples, 0.40%)</title><rect x="83.7124%" y="421" width="0.3995%" height="15" fill="rgb(251,51,7)" fg:x="2724" fg:w="13"/><text x="83.9624%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (2 samples, 0.06%)</title><rect x="84.1119%" y="421" width="0.0615%" height="15" fill="rgb(245,217,29)" fg:x="2737" fg:w="2"/><text x="84.3619%" y="431.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi64x (4 samples, 0.12%)</title><rect x="84.1733%" y="421" width="0.1229%" height="15" fill="rgb(221,176,29)" fg:x="2739" fg:w="4"/><text x="84.4233%" y="431.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi64x (1 samples, 0.03%)</title><rect x="84.2655%" y="405" width="0.0307%" height="15" fill="rgb(212,180,24)" fg:x="2742" fg:w="1"/><text x="84.5155%" y="415.50"></text></g><g><title>core::core_arch::simd::i64x4::new (1 samples, 0.03%)</title><rect x="84.2655%" y="389" width="0.0307%" height="15" fill="rgb(254,24,2)" fg:x="2742" fg:w="1"/><text x="84.5155%" y="399.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (6 samples, 0.18%)</title><rect x="84.2963%" y="421" width="0.1844%" height="15" fill="rgb(230,100,2)" fg:x="2743" fg:w="6"/><text x="84.5463%" y="431.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (6 samples, 0.18%)</title><rect x="84.2963%" y="405" width="0.1844%" height="15" fill="rgb(219,142,25)" fg:x="2743" fg:w="6"/><text x="84.5463%" y="415.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (5 samples, 0.15%)</title><rect x="84.3270%" y="389" width="0.1537%" height="15" fill="rgb(240,73,43)" fg:x="2744" fg:w="5"/><text x="84.5770%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (7 samples, 0.22%)</title><rect x="84.4806%" y="421" width="0.2151%" height="15" fill="rgb(214,114,15)" fg:x="2749" fg:w="7"/><text x="84.7306%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (2 samples, 0.06%)</title><rect x="84.6958%" y="421" width="0.0615%" height="15" fill="rgb(207,130,4)" fg:x="2756" fg:w="2"/><text x="84.9458%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (6 samples, 0.18%)</title><rect x="84.7572%" y="421" width="0.1844%" height="15" fill="rgb(221,25,40)" fg:x="2758" fg:w="6"/><text x="85.0072%" y="431.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (1 samples, 0.03%)</title><rect x="84.9416%" y="421" width="0.0307%" height="15" fill="rgb(241,184,7)" fg:x="2764" fg:w="1"/><text x="85.1916%" y="431.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (1 samples, 0.03%)</title><rect x="84.9416%" y="405" width="0.0307%" height="15" fill="rgb(235,159,4)" fg:x="2764" fg:w="1"/><text x="85.1916%" y="415.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (302 samples, 9.28%)</title><rect x="75.7837%" y="469" width="9.2809%" height="15" fill="rgb(214,87,48)" fg:x="2466" fg:w="302"/><text x="76.0337%" y="479.50">poly1305::bac..</text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (73 samples, 2.24%)</title><rect x="82.8211%" y="453" width="2.2434%" height="15" fill="rgb(246,198,24)" fg:x="2695" fg:w="73"/><text x="83.0711%" y="463.50">p..</text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (55 samples, 1.69%)</title><rect x="83.3743%" y="437" width="1.6902%" height="15" fill="rgb(209,66,40)" fg:x="2713" fg:w="55"/><text x="83.6243%" y="447.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (3 samples, 0.09%)</title><rect x="84.9723%" y="421" width="0.0922%" height="15" fill="rgb(233,147,39)" fg:x="2765" fg:w="3"/><text x="85.2223%" y="431.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::decrypt_in_place_detached (678 samples, 20.84%)</title><rect x="64.2594%" y="597" width="20.8359%" height="15" fill="rgb(231,145,52)" fg:x="2091" fg:w="678"/><text x="64.5094%" y="607.50">chacha20poly1305::cipher::Cipher&lt;..</text></g><g><title>universal_hash::UniversalHash::update_padded (330 samples, 10.14%)</title><rect x="74.9539%" y="581" width="10.1414%" height="15" fill="rgb(206,20,26)" fg:x="2439" fg:w="330"/><text x="75.2039%" y="591.50">universal_hash:..</text></g><g><title>universal_hash::UniversalHash::update (330 samples, 10.14%)</title><rect x="74.9539%" y="565" width="10.1414%" height="15" fill="rgb(238,220,4)" fg:x="2439" fg:w="330"/><text x="75.2039%" y="575.50">universal_hash:..</text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (330 samples, 10.14%)</title><rect x="74.9539%" y="549" width="10.1414%" height="15" fill="rgb(252,195,42)" fg:x="2439" fg:w="330"/><text x="75.2039%" y="559.50">&lt;poly1305::Poly..</text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (330 samples, 10.14%)</title><rect x="74.9539%" y="533" width="10.1414%" height="15" fill="rgb(209,10,6)" fg:x="2439" fg:w="330"/><text x="75.2039%" y="543.50">&lt;poly1305::back..</text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (330 samples, 10.14%)</title><rect x="74.9539%" y="517" width="10.1414%" height="15" fill="rgb(229,3,52)" fg:x="2439" fg:w="330"/><text x="75.2039%" y="527.50">&lt;universal_hash..</text></g><g><title>&lt;poly1305::backend::avx2::State as universal_hash::UhfBackend&gt;::proc_par_blocks (330 samples, 10.14%)</title><rect x="74.9539%" y="501" width="10.1414%" height="15" fill="rgb(253,49,37)" fg:x="2439" fg:w="330"/><text x="75.2039%" y="511.50">&lt;poly1305::back..</text></g><g><title>poly1305::backend::avx2::State::compute_par_blocks (330 samples, 10.14%)</title><rect x="74.9539%" y="485" width="10.1414%" height="15" fill="rgb(240,103,49)" fg:x="2439" fg:w="330"/><text x="75.2039%" y="495.50">poly1305::backe..</text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (1 samples, 0.03%)</title><rect x="85.0645%" y="469" width="0.0307%" height="15" fill="rgb(250,182,30)" fg:x="2768" fg:w="1"/><text x="85.3145%" y="479.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.03%)</title><rect x="85.0953%" y="549" width="0.0307%" height="15" fill="rgb(248,8,30)" fg:x="2769" fg:w="1"/><text x="85.3453%" y="559.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (3 samples, 0.09%)</title><rect x="85.1260%" y="549" width="0.0922%" height="15" fill="rgb(237,120,30)" fg:x="2770" fg:w="3"/><text x="85.3760%" y="559.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (3 samples, 0.09%)</title><rect x="85.1260%" y="533" width="0.0922%" height="15" fill="rgb(221,146,34)" fg:x="2770" fg:w="3"/><text x="85.3760%" y="543.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (3 samples, 0.09%)</title><rect x="85.1260%" y="517" width="0.0922%" height="15" fill="rgb(242,55,13)" fg:x="2770" fg:w="3"/><text x="85.3760%" y="527.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.06%)</title><rect x="85.2182%" y="549" width="0.0615%" height="15" fill="rgb(242,112,31)" fg:x="2773" fg:w="2"/><text x="85.4682%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="85.2797%" y="501" width="0.0307%" height="15" fill="rgb(249,192,27)" fg:x="2775" fg:w="1"/><text x="85.5297%" y="511.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.03%)</title><rect x="85.2797%" y="485" width="0.0307%" height="15" fill="rgb(208,204,44)" fg:x="2775" fg:w="1"/><text x="85.5297%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (1 samples, 0.03%)</title><rect x="85.3104%" y="501" width="0.0307%" height="15" fill="rgb(208,93,54)" fg:x="2776" fg:w="1"/><text x="85.5604%" y="511.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi64 (1 samples, 0.03%)</title><rect x="85.3104%" y="485" width="0.0307%" height="15" fill="rgb(242,1,31)" fg:x="2776" fg:w="1"/><text x="85.5604%" y="495.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3 samples, 0.09%)</title><rect x="85.2797%" y="533" width="0.0922%" height="15" fill="rgb(241,83,25)" fg:x="2775" fg:w="3"/><text x="85.5297%" y="543.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier as core::convert::From&lt;poly1305::backend::avx2::helpers::Aligned130&gt;&gt;::from (3 samples, 0.09%)</title><rect x="85.2797%" y="517" width="0.0922%" height="15" fill="rgb(205,169,50)" fg:x="2775" fg:w="3"/><text x="85.5297%" y="527.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="85.3411%" y="501" width="0.0307%" height="15" fill="rgb(239,186,37)" fg:x="2777" fg:w="1"/><text x="85.5911%" y="511.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier as core::ops::arith::Mul&gt;::mul (2 samples, 0.06%)</title><rect x="85.3719%" y="501" width="0.0615%" height="15" fill="rgb(205,221,10)" fg:x="2778" fg:w="2"/><text x="85.6219%" y="511.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (1 samples, 0.03%)</title><rect x="85.4026%" y="485" width="0.0307%" height="15" fill="rgb(218,196,15)" fg:x="2779" fg:w="1"/><text x="85.6526%" y="495.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier as core::ops::arith::Mul&gt;::mul (3 samples, 0.09%)</title><rect x="85.3719%" y="533" width="0.0922%" height="15" fill="rgb(218,196,35)" fg:x="2778" fg:w="3"/><text x="85.6219%" y="543.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (3 samples, 0.09%)</title><rect x="85.3719%" y="517" width="0.0922%" height="15" fill="rgb(233,63,24)" fg:x="2778" fg:w="3"/><text x="85.6219%" y="527.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (1 samples, 0.03%)</title><rect x="85.4333%" y="501" width="0.0307%" height="15" fill="rgb(225,8,4)" fg:x="2780" fg:w="1"/><text x="85.6833%" y="511.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier as core::ops::arith::Mul&gt;::mul (1 samples, 0.03%)</title><rect x="85.4333%" y="485" width="0.0307%" height="15" fill="rgb(234,105,35)" fg:x="2780" fg:w="1"/><text x="85.6833%" y="495.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (1 samples, 0.03%)</title><rect x="85.4333%" y="469" width="0.0307%" height="15" fill="rgb(236,21,32)" fg:x="2780" fg:w="1"/><text x="85.6833%" y="479.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="85.4640%" y="517" width="0.0307%" height="15" fill="rgb(228,109,6)" fg:x="2781" fg:w="1"/><text x="85.7140%" y="527.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="85.4640%" y="501" width="0.0307%" height="15" fill="rgb(229,215,31)" fg:x="2781" fg:w="1"/><text x="85.7140%" y="511.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="85.4640%" y="485" width="0.0307%" height="15" fill="rgb(221,52,54)" fg:x="2781" fg:w="1"/><text x="85.7140%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (1 samples, 0.03%)</title><rect x="85.4948%" y="501" width="0.0307%" height="15" fill="rgb(252,129,43)" fg:x="2782" fg:w="1"/><text x="85.7448%" y="511.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="85.4948%" y="485" width="0.0307%" height="15" fill="rgb(248,183,27)" fg:x="2782" fg:w="1"/><text x="85.7448%" y="495.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.03%)</title><rect x="85.5255%" y="501" width="0.0307%" height="15" fill="rgb(250,0,22)" fg:x="2783" fg:w="1"/><text x="85.7755%" y="511.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="85.5562%" y="501" width="0.0307%" height="15" fill="rgb(213,166,10)" fg:x="2784" fg:w="1"/><text x="85.8062%" y="511.50"></text></g><g><title>poly1305::backend::avx2::helpers::adc (4 samples, 0.12%)</title><rect x="85.4948%" y="517" width="0.1229%" height="15" fill="rgb(207,163,36)" fg:x="2782" fg:w="4"/><text x="85.7448%" y="527.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="85.5870%" y="501" width="0.0307%" height="15" fill="rgb(208,122,22)" fg:x="2785" fg:w="1"/><text x="85.8370%" y="511.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.03%)</title><rect x="85.6177%" y="501" width="0.0307%" height="15" fill="rgb(207,104,49)" fg:x="2786" fg:w="1"/><text x="85.8677%" y="511.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced130::reduce (7 samples, 0.22%)</title><rect x="85.4640%" y="533" width="0.2151%" height="15" fill="rgb(248,211,50)" fg:x="2781" fg:w="7"/><text x="85.7140%" y="543.50"></text></g><g><title>poly1305::backend::avx2::helpers::red (2 samples, 0.06%)</title><rect x="85.6177%" y="517" width="0.0615%" height="15" fill="rgb(217,13,45)" fg:x="2786" fg:w="2"/><text x="85.8677%" y="527.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="85.6484%" y="501" width="0.0307%" height="15" fill="rgb(211,216,49)" fg:x="2787" fg:w="1"/><text x="85.8984%" y="511.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="85.6484%" y="485" width="0.0307%" height="15" fill="rgb(221,58,53)" fg:x="2787" fg:w="1"/><text x="85.8984%" y="495.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="85.6484%" y="469" width="0.0307%" height="15" fill="rgb(220,112,41)" fg:x="2787" fg:w="1"/><text x="85.8984%" y="479.50"></text></g><g><title>chacha20::backends::avx2::rounds (1 samples, 0.03%)</title><rect x="85.6792%" y="517" width="0.0307%" height="15" fill="rgb(236,38,28)" fg:x="2788" fg:w="1"/><text x="85.9292%" y="527.50"></text></g><g><title>&lt;poly1305::Poly1305 as crypto_common::KeyInit&gt;::new (21 samples, 0.65%)</title><rect x="85.0953%" y="581" width="0.6454%" height="15" fill="rgb(227,195,22)" fg:x="2769" fg:w="21"/><text x="85.3453%" y="591.50"></text></g><g><title>poly1305::backend::autodetect::State::new (21 samples, 0.65%)</title><rect x="85.0953%" y="565" width="0.6454%" height="15" fill="rgb(214,55,33)" fg:x="2769" fg:w="21"/><text x="85.3453%" y="575.50"></text></g><g><title>poly1305::backend::avx2::State::new (15 samples, 0.46%)</title><rect x="85.2797%" y="549" width="0.4610%" height="15" fill="rgb(248,80,13)" fg:x="2775" fg:w="15"/><text x="85.5297%" y="559.50"></text></g><g><title>poly1305::backend::avx2::helpers::prepare_keys (2 samples, 0.06%)</title><rect x="85.6792%" y="533" width="0.0615%" height="15" fill="rgb(238,52,6)" fg:x="2788" fg:w="2"/><text x="85.9292%" y="543.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (1 samples, 0.03%)</title><rect x="85.7099%" y="517" width="0.0307%" height="15" fill="rgb(224,198,47)" fg:x="2789" fg:w="1"/><text x="85.9599%" y="527.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi32 (1 samples, 0.03%)</title><rect x="85.7099%" y="501" width="0.0307%" height="15" fill="rgb(233,171,20)" fg:x="2789" fg:w="1"/><text x="85.9599%" y="511.50"></text></g><g><title>core::core_arch::simd::i32x8::new (1 samples, 0.03%)</title><rect x="85.7099%" y="485" width="0.0307%" height="15" fill="rgb(241,30,25)" fg:x="2789" fg:w="1"/><text x="85.9599%" y="495.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (1 samples, 0.03%)</title><rect x="85.7406%" y="533" width="0.0307%" height="15" fill="rgb(207,171,38)" fg:x="2790" fg:w="1"/><text x="85.9906%" y="543.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (1 samples, 0.03%)</title><rect x="85.7406%" y="517" width="0.0307%" height="15" fill="rgb(234,70,1)" fg:x="2790" fg:w="1"/><text x="85.9906%" y="527.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (1 samples, 0.03%)</title><rect x="85.7406%" y="501" width="0.0307%" height="15" fill="rgb(232,178,18)" fg:x="2790" fg:w="1"/><text x="85.9906%" y="511.50"></text></g><g><title>chacha20::backends::avx2::inner (1 samples, 0.03%)</title><rect x="85.7406%" y="485" width="0.0307%" height="15" fill="rgb(241,78,40)" fg:x="2790" fg:w="1"/><text x="85.9906%" y="495.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (1 samples, 0.03%)</title><rect x="85.7406%" y="469" width="0.0307%" height="15" fill="rgb(222,35,25)" fg:x="2790" fg:w="1"/><text x="85.9906%" y="479.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.03%)</title><rect x="85.7406%" y="453" width="0.0307%" height="15" fill="rgb(207,92,16)" fg:x="2790" fg:w="1"/><text x="85.9906%" y="463.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.03%)</title><rect x="85.7406%" y="437" width="0.0307%" height="15" fill="rgb(216,59,51)" fg:x="2790" fg:w="1"/><text x="85.9906%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.03%)</title><rect x="85.7406%" y="421" width="0.0307%" height="15" fill="rgb(213,80,28)" fg:x="2790" fg:w="1"/><text x="85.9906%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="85.7406%" y="405" width="0.0307%" height="15" fill="rgb(220,93,7)" fg:x="2790" fg:w="1"/><text x="85.9906%" y="415.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="85.7406%" y="389" width="0.0307%" height="15" fill="rgb(225,24,44)" fg:x="2790" fg:w="1"/><text x="85.9906%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.03%)</title><rect x="85.7406%" y="373" width="0.0307%" height="15" fill="rgb(243,74,40)" fg:x="2790" fg:w="1"/><text x="85.9906%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.03%)</title><rect x="85.7406%" y="357" width="0.0307%" height="15" fill="rgb(228,39,7)" fg:x="2790" fg:w="1"/><text x="85.9906%" y="367.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (1 samples, 0.03%)</title><rect x="85.7406%" y="341" width="0.0307%" height="15" fill="rgb(227,79,8)" fg:x="2790" fg:w="1"/><text x="85.9906%" y="351.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (1 samples, 0.03%)</title><rect x="85.7406%" y="325" width="0.0307%" height="15" fill="rgb(236,58,11)" fg:x="2790" fg:w="1"/><text x="85.9906%" y="335.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.03%)</title><rect x="85.7406%" y="309" width="0.0307%" height="15" fill="rgb(249,63,35)" fg:x="2790" fg:w="1"/><text x="85.9906%" y="319.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.03%)</title><rect x="85.7406%" y="293" width="0.0307%" height="15" fill="rgb(252,114,16)" fg:x="2790" fg:w="1"/><text x="85.9906%" y="303.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::iter_position (1 samples, 0.03%)</title><rect x="85.7406%" y="277" width="0.0307%" height="15" fill="rgb(254,151,24)" fg:x="2790" fg:w="1"/><text x="85.9906%" y="287.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.03%)</title><rect x="85.7406%" y="261" width="0.0307%" height="15" fill="rgb(253,54,39)" fg:x="2790" fg:w="1"/><text x="85.9906%" y="271.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="85.7714%" y="437" width="0.0307%" height="15" fill="rgb(243,25,45)" fg:x="2791" fg:w="1"/><text x="86.0214%" y="447.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="85.8021%" y="437" width="0.0307%" height="15" fill="rgb(234,134,9)" fg:x="2792" fg:w="1"/><text x="86.0521%" y="447.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="85.8636%" y="389" width="0.0307%" height="15" fill="rgb(227,166,31)" fg:x="2794" fg:w="1"/><text x="86.1136%" y="399.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.03%)</title><rect x="85.8636%" y="373" width="0.0307%" height="15" fill="rgb(245,143,41)" fg:x="2794" fg:w="1"/><text x="86.1136%" y="383.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (14 samples, 0.43%)</title><rect x="85.8943%" y="389" width="0.4302%" height="15" fill="rgb(238,181,32)" fg:x="2795" fg:w="14"/><text x="86.1443%" y="399.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (3 samples, 0.09%)</title><rect x="86.3245%" y="389" width="0.0922%" height="15" fill="rgb(224,113,18)" fg:x="2809" fg:w="3"/><text x="86.5745%" y="399.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (2 samples, 0.06%)</title><rect x="86.4167%" y="389" width="0.0615%" height="15" fill="rgb(240,229,28)" fg:x="2812" fg:w="2"/><text x="86.6667%" y="399.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (2 samples, 0.06%)</title><rect x="86.5704%" y="373" width="0.0615%" height="15" fill="rgb(250,185,3)" fg:x="2817" fg:w="2"/><text x="86.8204%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.03%)</title><rect x="86.6318%" y="373" width="0.0307%" height="15" fill="rgb(212,59,25)" fg:x="2819" fg:w="1"/><text x="86.8818%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="86.6626%" y="373" width="0.0307%" height="15" fill="rgb(221,87,20)" fg:x="2820" fg:w="1"/><text x="86.9126%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.06%)</title><rect x="86.6933%" y="373" width="0.0615%" height="15" fill="rgb(213,74,28)" fg:x="2821" fg:w="2"/><text x="86.9433%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (10 samples, 0.31%)</title><rect x="86.4782%" y="389" width="0.3073%" height="15" fill="rgb(224,132,34)" fg:x="2814" fg:w="10"/><text x="86.7282%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="86.7548%" y="373" width="0.0307%" height="15" fill="rgb(222,101,24)" fg:x="2823" fg:w="1"/><text x="87.0048%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (4 samples, 0.12%)</title><rect x="86.7855%" y="389" width="0.1229%" height="15" fill="rgb(254,142,4)" fg:x="2824" fg:w="4"/><text x="87.0355%" y="399.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.03%)</title><rect x="87.0313%" y="373" width="0.0307%" height="15" fill="rgb(230,229,49)" fg:x="2832" fg:w="1"/><text x="87.2813%" y="383.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (1 samples, 0.03%)</title><rect x="87.0621%" y="373" width="0.0307%" height="15" fill="rgb(238,70,47)" fg:x="2833" fg:w="1"/><text x="87.3121%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="87.0928%" y="373" width="0.0307%" height="15" fill="rgb(231,160,17)" fg:x="2834" fg:w="1"/><text x="87.3428%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (8 samples, 0.25%)</title><rect x="86.9084%" y="389" width="0.2459%" height="15" fill="rgb(218,68,53)" fg:x="2828" fg:w="8"/><text x="87.1584%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="87.1235%" y="373" width="0.0307%" height="15" fill="rgb(236,111,10)" fg:x="2835" fg:w="1"/><text x="87.3735%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.03%)</title><rect x="87.1850%" y="373" width="0.0307%" height="15" fill="rgb(224,34,41)" fg:x="2837" fg:w="1"/><text x="87.4350%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="87.2157%" y="373" width="0.0307%" height="15" fill="rgb(241,118,19)" fg:x="2838" fg:w="1"/><text x="87.4657%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.06%)</title><rect x="87.2465%" y="373" width="0.0615%" height="15" fill="rgb(238,129,25)" fg:x="2839" fg:w="2"/><text x="87.4965%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (6 samples, 0.18%)</title><rect x="87.1543%" y="389" width="0.1844%" height="15" fill="rgb(238,22,31)" fg:x="2836" fg:w="6"/><text x="87.4043%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="87.3079%" y="373" width="0.0307%" height="15" fill="rgb(222,174,48)" fg:x="2841" fg:w="1"/><text x="87.5579%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (1 samples, 0.03%)</title><rect x="87.7689%" y="373" width="0.0307%" height="15" fill="rgb(206,152,40)" fg:x="2856" fg:w="1"/><text x="88.0189%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (17 samples, 0.52%)</title><rect x="87.3387%" y="389" width="0.5224%" height="15" fill="rgb(218,99,54)" fg:x="2842" fg:w="17"/><text x="87.5887%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.06%)</title><rect x="87.7996%" y="373" width="0.0615%" height="15" fill="rgb(220,174,26)" fg:x="2857" fg:w="2"/><text x="88.0496%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (3 samples, 0.09%)</title><rect x="87.8611%" y="389" width="0.0922%" height="15" fill="rgb(245,116,9)" fg:x="2859" fg:w="3"/><text x="88.1111%" y="399.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi64x (2 samples, 0.06%)</title><rect x="87.8918%" y="373" width="0.0615%" height="15" fill="rgb(209,72,35)" fg:x="2860" fg:w="2"/><text x="88.1418%" y="383.50"></text></g><g><title>core::core_arch::simd::i64x4::new (2 samples, 0.06%)</title><rect x="87.8918%" y="357" width="0.0615%" height="15" fill="rgb(226,126,21)" fg:x="2860" fg:w="2"/><text x="88.1418%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (4 samples, 0.12%)</title><rect x="87.9533%" y="389" width="0.1229%" height="15" fill="rgb(227,192,1)" fg:x="2862" fg:w="4"/><text x="88.2033%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (6 samples, 0.18%)</title><rect x="88.0762%" y="389" width="0.1844%" height="15" fill="rgb(237,180,29)" fg:x="2866" fg:w="6"/><text x="88.3262%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (10 samples, 0.31%)</title><rect x="88.2606%" y="389" width="0.3073%" height="15" fill="rgb(230,197,35)" fg:x="2872" fg:w="10"/><text x="88.5106%" y="399.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (92 samples, 2.83%)</title><rect x="85.8328%" y="405" width="2.8273%" height="15" fill="rgb(246,193,31)" fg:x="2793" fg:w="92"/><text x="86.0828%" y="415.50">ch..</text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (3 samples, 0.09%)</title><rect x="88.5679%" y="389" width="0.0922%" height="15" fill="rgb(241,36,4)" fg:x="2882" fg:w="3"/><text x="88.8179%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.03%)</title><rect x="88.6601%" y="389" width="0.0307%" height="15" fill="rgb(241,130,17)" fg:x="2885" fg:w="1"/><text x="88.9101%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.03%)</title><rect x="88.6601%" y="373" width="0.0307%" height="15" fill="rgb(206,137,32)" fg:x="2885" fg:w="1"/><text x="88.9101%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.03%)</title><rect x="88.6908%" y="389" width="0.0307%" height="15" fill="rgb(237,228,51)" fg:x="2886" fg:w="1"/><text x="88.9408%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.03%)</title><rect x="88.7216%" y="389" width="0.0307%" height="15" fill="rgb(243,6,42)" fg:x="2887" fg:w="1"/><text x="88.9716%" y="399.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.03%)</title><rect x="88.7216%" y="373" width="0.0307%" height="15" fill="rgb(251,74,28)" fg:x="2887" fg:w="1"/><text x="88.9716%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (2 samples, 0.06%)</title><rect x="88.7523%" y="389" width="0.0615%" height="15" fill="rgb(218,20,49)" fg:x="2888" fg:w="2"/><text x="89.0023%" y="399.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.03%)</title><rect x="88.7830%" y="373" width="0.0307%" height="15" fill="rgb(238,28,14)" fg:x="2889" fg:w="1"/><text x="89.0330%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="88.8138%" y="389" width="0.0307%" height="15" fill="rgb(229,40,46)" fg:x="2890" fg:w="1"/><text x="89.0638%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="88.8445%" y="389" width="0.0307%" height="15" fill="rgb(244,195,20)" fg:x="2891" fg:w="1"/><text x="89.0945%" y="399.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (8 samples, 0.25%)</title><rect x="88.6601%" y="405" width="0.2459%" height="15" fill="rgb(253,56,35)" fg:x="2885" fg:w="8"/><text x="88.9101%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="88.8752%" y="389" width="0.0307%" height="15" fill="rgb(210,149,44)" fg:x="2892" fg:w="1"/><text x="89.1252%" y="399.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (2 samples, 0.06%)</title><rect x="88.9367%" y="389" width="0.0615%" height="15" fill="rgb(240,135,12)" fg:x="2894" fg:w="2"/><text x="89.1867%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="88.9982%" y="373" width="0.0307%" height="15" fill="rgb(251,24,50)" fg:x="2896" fg:w="1"/><text x="89.2482%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="89.0289%" y="373" width="0.0307%" height="15" fill="rgb(243,200,47)" fg:x="2897" fg:w="1"/><text x="89.2789%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (3 samples, 0.09%)</title><rect x="88.9982%" y="389" width="0.0922%" height="15" fill="rgb(224,166,26)" fg:x="2896" fg:w="3"/><text x="89.2482%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="89.0596%" y="373" width="0.0307%" height="15" fill="rgb(233,0,47)" fg:x="2898" fg:w="1"/><text x="89.3096%" y="383.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (7 samples, 0.22%)</title><rect x="88.9060%" y="405" width="0.2151%" height="15" fill="rgb(253,80,5)" fg:x="2893" fg:w="7"/><text x="89.1560%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="89.0904%" y="389" width="0.0307%" height="15" fill="rgb(214,133,25)" fg:x="2899" fg:w="1"/><text x="89.3404%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (2 samples, 0.06%)</title><rect x="89.1211%" y="405" width="0.0615%" height="15" fill="rgb(209,27,14)" fg:x="2900" fg:w="2"/><text x="89.3711%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.03%)</title><rect x="89.1825%" y="405" width="0.0307%" height="15" fill="rgb(219,102,51)" fg:x="2902" fg:w="1"/><text x="89.4325%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="89.2133%" y="405" width="0.0307%" height="15" fill="rgb(237,18,16)" fg:x="2903" fg:w="1"/><text x="89.4633%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (2 samples, 0.06%)</title><rect x="89.2440%" y="405" width="0.0615%" height="15" fill="rgb(241,85,17)" fg:x="2904" fg:w="2"/><text x="89.4940%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="89.3055%" y="405" width="0.0307%" height="15" fill="rgb(236,90,42)" fg:x="2906" fg:w="1"/><text x="89.5555%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (2 samples, 0.06%)</title><rect x="89.3362%" y="405" width="0.0615%" height="15" fill="rgb(249,57,21)" fg:x="2907" fg:w="2"/><text x="89.5862%" y="415.50"></text></g><g><title>chacha20::backends::avx2::rounds (118 samples, 3.63%)</title><rect x="85.8328%" y="437" width="3.6263%" height="15" fill="rgb(243,12,36)" fg:x="2793" fg:w="118"/><text x="86.0828%" y="447.50">chac..</text></g><g><title>chacha20::backends::avx2::double_quarter_round (118 samples, 3.63%)</title><rect x="85.8328%" y="421" width="3.6263%" height="15" fill="rgb(253,128,47)" fg:x="2793" fg:w="118"/><text x="86.0828%" y="431.50">chac..</text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (2 samples, 0.06%)</title><rect x="89.3977%" y="405" width="0.0615%" height="15" fill="rgb(207,33,20)" fg:x="2909" fg:w="2"/><text x="89.6477%" y="415.50"></text></g><g><title>&lt;cipher::stream_core::WriteBlockCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (121 samples, 3.72%)</title><rect x="85.7714%" y="469" width="3.7185%" height="15" fill="rgb(233,215,35)" fg:x="2791" fg:w="121"/><text x="86.0214%" y="479.50">&lt;cip..</text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (121 samples, 3.72%)</title><rect x="85.7714%" y="453" width="3.7185%" height="15" fill="rgb(249,188,52)" fg:x="2791" fg:w="121"/><text x="86.0214%" y="463.50">&lt;cha..</text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="89.4591%" y="437" width="0.0307%" height="15" fill="rgb(225,12,32)" fg:x="2911" fg:w="1"/><text x="89.7091%" y="447.50"></text></g><g><title>chacha20::backends::avx2::inner (122 samples, 3.75%)</title><rect x="85.7714%" y="485" width="3.7492%" height="15" fill="rgb(247,98,14)" fg:x="2791" fg:w="122"/><text x="86.0214%" y="495.50">chac..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.03%)</title><rect x="89.4899%" y="469" width="0.0307%" height="15" fill="rgb(247,219,48)" fg:x="2912" fg:w="1"/><text x="89.7399%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.03%)</title><rect x="89.4899%" y="453" width="0.0307%" height="15" fill="rgb(253,60,48)" fg:x="2912" fg:w="1"/><text x="89.7399%" y="463.50"></text></g><g><title>&lt;tftp::client::encryption_socket::EncryptionBoundSocket&lt;S,Rng&gt; as tftp::socket::Socket&gt;::recv_from (824 samples, 25.32%)</title><rect x="64.2286%" y="661" width="25.3227%" height="15" fill="rgb(245,15,52)" fg:x="2090" fg:w="824"/><text x="64.4786%" y="671.50">&lt;tftp::client::encryption_socket::Encryp..</text></g><g><title>tftp::encrypted_packet::EncryptedPacket::decrypt (823 samples, 25.29%)</title><rect x="64.2594%" y="645" width="25.2919%" height="15" fill="rgb(220,133,28)" fg:x="2091" fg:w="823"/><text x="64.5094%" y="655.50">tftp::encrypted_packet::EncryptedPacket:..</text></g><g><title>tftp::encryption::Encryptor&lt;R&gt;::decrypt (823 samples, 25.29%)</title><rect x="64.2594%" y="629" width="25.2919%" height="15" fill="rgb(217,180,4)" fg:x="2091" fg:w="823"/><text x="64.5094%" y="639.50">tftp::encryption::Encryptor&lt;R&gt;::decrypt</text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (823 samples, 25.29%)</title><rect x="64.2594%" y="613" width="25.2919%" height="15" fill="rgb(251,24,1)" fg:x="2091" fg:w="823"/><text x="64.5094%" y="623.50">&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; a..</text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (145 samples, 4.46%)</title><rect x="85.0953%" y="597" width="4.4561%" height="15" fill="rgb(212,185,49)" fg:x="2769" fg:w="145"/><text x="85.3453%" y="607.50">chach..</text></g><g><title>cipher::stream::StreamCipher::apply_keystream (124 samples, 3.81%)</title><rect x="85.7406%" y="581" width="3.8107%" height="15" fill="rgb(215,175,22)" fg:x="2790" fg:w="124"/><text x="85.9906%" y="591.50">ciph..</text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (124 samples, 3.81%)</title><rect x="85.7406%" y="565" width="3.8107%" height="15" fill="rgb(250,205,14)" fg:x="2790" fg:w="124"/><text x="85.9906%" y="575.50">ciph..</text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (124 samples, 3.81%)</title><rect x="85.7406%" y="549" width="3.8107%" height="15" fill="rgb(225,211,22)" fg:x="2790" fg:w="124"/><text x="85.9906%" y="559.50">&lt;cip..</text></g><g><title>cipher::stream_core::StreamCipherCore::write_keystream_block (123 samples, 3.78%)</title><rect x="85.7714%" y="533" width="3.7800%" height="15" fill="rgb(251,179,42)" fg:x="2791" fg:w="123"/><text x="86.0214%" y="543.50">ciph..</text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (123 samples, 3.78%)</title><rect x="85.7714%" y="517" width="3.7800%" height="15" fill="rgb(208,216,51)" fg:x="2791" fg:w="123"/><text x="86.0214%" y="527.50">&lt;cha..</text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (123 samples, 3.78%)</title><rect x="85.7714%" y="501" width="3.7800%" height="15" fill="rgb(235,36,11)" fg:x="2791" fg:w="123"/><text x="86.0214%" y="511.50">&lt;cha..</text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="89.5206%" y="485" width="0.0307%" height="15" fill="rgb(213,189,28)" fg:x="2913" fg:w="1"/><text x="89.7706%" y="495.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::authenticate_lengths (1 samples, 0.03%)</title><rect x="89.5513%" y="581" width="0.0307%" height="15" fill="rgb(227,203,42)" fg:x="2914" fg:w="1"/><text x="89.8013%" y="591.50"></text></g><g><title>universal_hash::UniversalHash::update (1 samples, 0.03%)</title><rect x="89.5513%" y="565" width="0.0307%" height="15" fill="rgb(244,72,36)" fg:x="2914" fg:w="1"/><text x="89.8013%" y="575.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (1 samples, 0.03%)</title><rect x="89.5513%" y="549" width="0.0307%" height="15" fill="rgb(213,53,17)" fg:x="2914" fg:w="1"/><text x="89.8013%" y="559.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (1 samples, 0.03%)</title><rect x="89.5513%" y="533" width="0.0307%" height="15" fill="rgb(207,167,3)" fg:x="2914" fg:w="1"/><text x="89.8013%" y="543.50"></text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (1 samples, 0.03%)</title><rect x="89.5513%" y="517" width="0.0307%" height="15" fill="rgb(216,98,30)" fg:x="2914" fg:w="1"/><text x="89.8013%" y="527.50"></text></g><g><title>&lt;poly1305::backend::avx2::State as universal_hash::UhfBackend&gt;::proc_block (1 samples, 0.03%)</title><rect x="89.5513%" y="501" width="0.0307%" height="15" fill="rgb(236,123,15)" fg:x="2914" fg:w="1"/><text x="89.8013%" y="511.50"></text></g><g><title>poly1305::backend::avx2::State::compute_block (1 samples, 0.03%)</title><rect x="89.5513%" y="485" width="0.0307%" height="15" fill="rgb(248,81,50)" fg:x="2914" fg:w="1"/><text x="89.8013%" y="495.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.03%)</title><rect x="89.5513%" y="469" width="0.0307%" height="15" fill="rgb(214,120,4)" fg:x="2914" fg:w="1"/><text x="89.8013%" y="479.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.03%)</title><rect x="89.5821%" y="437" width="0.0307%" height="15" fill="rgb(208,179,34)" fg:x="2915" fg:w="1"/><text x="89.8321%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.03%)</title><rect x="89.6128%" y="389" width="0.0307%" height="15" fill="rgb(227,140,7)" fg:x="2916" fg:w="1"/><text x="89.8628%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="89.6435%" y="389" width="0.0307%" height="15" fill="rgb(214,22,6)" fg:x="2917" fg:w="1"/><text x="89.8935%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="89.6742%" y="389" width="0.0307%" height="15" fill="rgb(207,137,27)" fg:x="2918" fg:w="1"/><text x="89.9242%" y="399.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (4 samples, 0.12%)</title><rect x="89.6128%" y="405" width="0.1229%" height="15" fill="rgb(210,8,46)" fg:x="2916" fg:w="4"/><text x="89.8628%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="89.7050%" y="389" width="0.0307%" height="15" fill="rgb(240,16,54)" fg:x="2919" fg:w="1"/><text x="89.9550%" y="399.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="89.7357%" y="389" width="0.0307%" height="15" fill="rgb(211,209,29)" fg:x="2920" fg:w="1"/><text x="89.9857%" y="399.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (2 samples, 0.06%)</title><rect x="89.7357%" y="405" width="0.0615%" height="15" fill="rgb(226,228,24)" fg:x="2920" fg:w="2"/><text x="89.9857%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="89.7664%" y="389" width="0.0307%" height="15" fill="rgb(222,84,9)" fg:x="2921" fg:w="1"/><text x="90.0164%" y="399.50"></text></g><g><title>chacha20::backends::avx2::rounds (7 samples, 0.22%)</title><rect x="89.6128%" y="437" width="0.2151%" height="15" fill="rgb(234,203,30)" fg:x="2916" fg:w="7"/><text x="89.8628%" y="447.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (7 samples, 0.22%)</title><rect x="89.6128%" y="421" width="0.2151%" height="15" fill="rgb(238,109,14)" fg:x="2916" fg:w="7"/><text x="89.8628%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="89.7972%" y="405" width="0.0307%" height="15" fill="rgb(233,206,34)" fg:x="2922" fg:w="1"/><text x="90.0472%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="89.8279%" y="437" width="0.0307%" height="15" fill="rgb(220,167,47)" fg:x="2923" fg:w="1"/><text x="90.0779%" y="447.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_par_ks_blocks (10 samples, 0.31%)</title><rect x="89.5821%" y="453" width="0.3073%" height="15" fill="rgb(238,105,10)" fg:x="2915" fg:w="10"/><text x="89.8321%" y="463.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="89.8586%" y="437" width="0.0307%" height="15" fill="rgb(213,227,17)" fg:x="2924" fg:w="1"/><text x="90.1086%" y="447.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (1 samples, 0.03%)</title><rect x="89.8894%" y="389" width="0.0307%" height="15" fill="rgb(217,132,38)" fg:x="2925" fg:w="1"/><text x="90.1394%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="89.8894%" y="373" width="0.0307%" height="15" fill="rgb(242,146,4)" fg:x="2925" fg:w="1"/><text x="90.1394%" y="383.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (2 samples, 0.06%)</title><rect x="89.8894%" y="405" width="0.0615%" height="15" fill="rgb(212,61,9)" fg:x="2925" fg:w="2"/><text x="90.1394%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="89.9201%" y="389" width="0.0307%" height="15" fill="rgb(247,126,22)" fg:x="2926" fg:w="1"/><text x="90.1701%" y="399.50"></text></g><g><title>cipher::stream_core::StreamBackend::gen_tail_blocks (3 samples, 0.09%)</title><rect x="89.8894%" y="453" width="0.0922%" height="15" fill="rgb(220,196,2)" fg:x="2925" fg:w="3"/><text x="90.1394%" y="463.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (3 samples, 0.09%)</title><rect x="89.8894%" y="437" width="0.0922%" height="15" fill="rgb(208,46,4)" fg:x="2925" fg:w="3"/><text x="90.1394%" y="447.50"></text></g><g><title>chacha20::backends::avx2::rounds (3 samples, 0.09%)</title><rect x="89.8894%" y="421" width="0.0922%" height="15" fill="rgb(252,104,46)" fg:x="2925" fg:w="3"/><text x="90.1394%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="89.9508%" y="405" width="0.0307%" height="15" fill="rgb(237,152,48)" fg:x="2927" fg:w="1"/><text x="90.2008%" y="415.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.03%)</title><rect x="90.5347%" y="421" width="0.0307%" height="15" fill="rgb(221,59,37)" fg:x="2946" fg:w="1"/><text x="90.7847%" y="431.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (1 samples, 0.03%)</title><rect x="90.5347%" y="405" width="0.0307%" height="15" fill="rgb(209,202,51)" fg:x="2946" fg:w="1"/><text x="90.7847%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::cast (1 samples, 0.03%)</title><rect x="90.5655%" y="389" width="0.0307%" height="15" fill="rgb(228,81,30)" fg:x="2947" fg:w="1"/><text x="90.8155%" y="399.50"></text></g><g><title>core::slice::raw::from_raw_parts (4 samples, 0.12%)</title><rect x="90.5655%" y="421" width="0.1229%" height="15" fill="rgb(227,42,39)" fg:x="2947" fg:w="4"/><text x="90.8155%" y="431.50"></text></g><g><title>core::ptr::slice_from_raw_parts (4 samples, 0.12%)</title><rect x="90.5655%" y="405" width="0.1229%" height="15" fill="rgb(221,26,2)" fg:x="2947" fg:w="4"/><text x="90.8155%" y="415.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (3 samples, 0.09%)</title><rect x="90.5962%" y="389" width="0.0922%" height="15" fill="rgb(254,61,31)" fg:x="2948" fg:w="3"/><text x="90.8462%" y="399.50"></text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;generic_array::GenericArray&lt;u8,N&gt;,M&gt;&gt;::xor_in2out (25 samples, 0.77%)</title><rect x="89.9816%" y="453" width="0.7683%" height="15" fill="rgb(222,173,38)" fg:x="2928" fg:w="25"/><text x="90.2316%" y="463.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::Deref&gt;::deref (13 samples, 0.40%)</title><rect x="90.3503%" y="437" width="0.3995%" height="15" fill="rgb(218,50,12)" fg:x="2940" fg:w="13"/><text x="90.6003%" y="447.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (2 samples, 0.06%)</title><rect x="90.6884%" y="421" width="0.0615%" height="15" fill="rgb(223,88,40)" fg:x="2951" fg:w="2"/><text x="90.9384%" y="431.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (2 samples, 0.06%)</title><rect x="90.6884%" y="405" width="0.0615%" height="15" fill="rgb(237,54,19)" fg:x="2951" fg:w="2"/><text x="90.9384%" y="415.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (2 samples, 0.06%)</title><rect x="90.6884%" y="389" width="0.0615%" height="15" fill="rgb(251,129,25)" fg:x="2951" fg:w="2"/><text x="90.9384%" y="399.50"></text></g><g><title>chacha20::backends::avx2::inner (39 samples, 1.20%)</title><rect x="89.5821%" y="485" width="1.1985%" height="15" fill="rgb(238,97,19)" fg:x="2915" fg:w="39"/><text x="89.8321%" y="495.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (39 samples, 1.20%)</title><rect x="89.5821%" y="469" width="1.1985%" height="15" fill="rgb(240,169,18)" fg:x="2915" fg:w="39"/><text x="89.8321%" y="479.50"></text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;u8,N&gt;&gt;::xor_in2out (1 samples, 0.03%)</title><rect x="90.7498%" y="453" width="0.0307%" height="15" fill="rgb(230,187,49)" fg:x="2953" fg:w="1"/><text x="90.9998%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="90.7806%" y="485" width="0.0307%" height="15" fill="rgb(209,44,26)" fg:x="2954" fg:w="1"/><text x="91.0306%" y="495.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.06%)</title><rect x="90.8113%" y="485" width="0.0615%" height="15" fill="rgb(244,0,6)" fg:x="2955" fg:w="2"/><text x="91.0613%" y="495.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (43 samples, 1.32%)</title><rect x="89.5821%" y="533" width="1.3215%" height="15" fill="rgb(248,18,21)" fg:x="2915" fg:w="43"/><text x="89.8321%" y="543.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (43 samples, 1.32%)</title><rect x="89.5821%" y="517" width="1.3215%" height="15" fill="rgb(245,180,19)" fg:x="2915" fg:w="43"/><text x="89.8321%" y="527.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (43 samples, 1.32%)</title><rect x="89.5821%" y="501" width="1.3215%" height="15" fill="rgb(252,118,36)" fg:x="2915" fg:w="43"/><text x="89.8321%" y="511.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="90.8728%" y="485" width="0.0307%" height="15" fill="rgb(210,224,19)" fg:x="2957" fg:w="1"/><text x="91.1228%" y="495.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="90.9342%" y="389" width="0.0307%" height="15" fill="rgb(218,30,24)" fg:x="2959" fg:w="1"/><text x="91.1842%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="90.9650%" y="389" width="0.0307%" height="15" fill="rgb(219,75,50)" fg:x="2960" fg:w="1"/><text x="91.2150%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="90.9650%" y="373" width="0.0307%" height="15" fill="rgb(234,72,50)" fg:x="2960" fg:w="1"/><text x="91.2150%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.03%)</title><rect x="90.9957%" y="389" width="0.0307%" height="15" fill="rgb(219,100,48)" fg:x="2961" fg:w="1"/><text x="91.2457%" y="399.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (1 samples, 0.03%)</title><rect x="90.9957%" y="373" width="0.0307%" height="15" fill="rgb(253,5,41)" fg:x="2961" fg:w="1"/><text x="91.2457%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.03%)</title><rect x="91.0264%" y="389" width="0.0307%" height="15" fill="rgb(247,181,11)" fg:x="2962" fg:w="1"/><text x="91.2764%" y="399.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.03%)</title><rect x="91.0264%" y="373" width="0.0307%" height="15" fill="rgb(222,223,25)" fg:x="2962" fg:w="1"/><text x="91.2764%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (4 samples, 0.12%)</title><rect x="91.0572%" y="389" width="0.1229%" height="15" fill="rgb(214,198,28)" fg:x="2963" fg:w="4"/><text x="91.3072%" y="399.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (2 samples, 0.06%)</title><rect x="91.1186%" y="373" width="0.0615%" height="15" fill="rgb(230,46,43)" fg:x="2965" fg:w="2"/><text x="91.3686%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="91.1801%" y="389" width="0.0307%" height="15" fill="rgb(233,65,53)" fg:x="2967" fg:w="1"/><text x="91.4301%" y="399.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (11 samples, 0.34%)</title><rect x="90.9035%" y="405" width="0.3380%" height="15" fill="rgb(221,121,27)" fg:x="2958" fg:w="11"/><text x="91.1535%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="91.2108%" y="389" width="0.0307%" height="15" fill="rgb(247,70,47)" fg:x="2968" fg:w="1"/><text x="91.4608%" y="399.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (1 samples, 0.03%)</title><rect x="91.2415%" y="405" width="0.0307%" height="15" fill="rgb(228,85,35)" fg:x="2969" fg:w="1"/><text x="91.4915%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.03%)</title><rect x="91.2415%" y="389" width="0.0307%" height="15" fill="rgb(209,50,18)" fg:x="2969" fg:w="1"/><text x="91.4915%" y="399.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (1 samples, 0.03%)</title><rect x="91.2723%" y="405" width="0.0307%" height="15" fill="rgb(250,19,35)" fg:x="2970" fg:w="1"/><text x="91.5223%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="91.2723%" y="389" width="0.0307%" height="15" fill="rgb(253,107,29)" fg:x="2970" fg:w="1"/><text x="91.5223%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="91.3030%" y="405" width="0.0307%" height="15" fill="rgb(252,179,29)" fg:x="2971" fg:w="1"/><text x="91.5530%" y="415.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (15 samples, 0.46%)</title><rect x="90.9035%" y="421" width="0.4610%" height="15" fill="rgb(238,194,6)" fg:x="2958" fg:w="15"/><text x="91.1535%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="91.3337%" y="405" width="0.0307%" height="15" fill="rgb(238,164,29)" fg:x="2972" fg:w="1"/><text x="91.5837%" y="415.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (59 samples, 1.81%)</title><rect x="89.5821%" y="581" width="1.8132%" height="15" fill="rgb(224,25,9)" fg:x="2915" fg:w="59"/><text x="89.8321%" y="591.50">c..</text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (59 samples, 1.81%)</title><rect x="89.5821%" y="565" width="1.8132%" height="15" fill="rgb(244,153,23)" fg:x="2915" fg:w="59"/><text x="89.8321%" y="575.50">c..</text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (59 samples, 1.81%)</title><rect x="89.5821%" y="549" width="1.8132%" height="15" fill="rgb(212,203,14)" fg:x="2915" fg:w="59"/><text x="89.8321%" y="559.50">&lt;..</text></g><g><title>cipher::stream_core::StreamCipherCore::write_keystream_block (16 samples, 0.49%)</title><rect x="90.9035%" y="533" width="0.4917%" height="15" fill="rgb(220,164,20)" fg:x="2958" fg:w="16"/><text x="91.1535%" y="543.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (16 samples, 0.49%)</title><rect x="90.9035%" y="517" width="0.4917%" height="15" fill="rgb(222,203,48)" fg:x="2958" fg:w="16"/><text x="91.1535%" y="527.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (16 samples, 0.49%)</title><rect x="90.9035%" y="501" width="0.4917%" height="15" fill="rgb(215,159,22)" fg:x="2958" fg:w="16"/><text x="91.1535%" y="511.50"></text></g><g><title>chacha20::backends::avx2::inner (16 samples, 0.49%)</title><rect x="90.9035%" y="485" width="0.4917%" height="15" fill="rgb(216,183,47)" fg:x="2958" fg:w="16"/><text x="91.1535%" y="495.50"></text></g><g><title>&lt;cipher::stream_core::WriteBlockCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (16 samples, 0.49%)</title><rect x="90.9035%" y="469" width="0.4917%" height="15" fill="rgb(229,195,25)" fg:x="2958" fg:w="16"/><text x="91.1535%" y="479.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (16 samples, 0.49%)</title><rect x="90.9035%" y="453" width="0.4917%" height="15" fill="rgb(224,132,51)" fg:x="2958" fg:w="16"/><text x="91.1535%" y="463.50"></text></g><g><title>chacha20::backends::avx2::rounds (16 samples, 0.49%)</title><rect x="90.9035%" y="437" width="0.4917%" height="15" fill="rgb(240,63,7)" fg:x="2958" fg:w="16"/><text x="91.1535%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="91.3645%" y="421" width="0.0307%" height="15" fill="rgb(249,182,41)" fg:x="2973" fg:w="1"/><text x="91.6145%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.03%)</title><rect x="91.3952%" y="469" width="0.0307%" height="15" fill="rgb(243,47,26)" fg:x="2974" fg:w="1"/><text x="91.6452%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (2 samples, 0.06%)</title><rect x="91.4259%" y="469" width="0.0615%" height="15" fill="rgb(233,48,2)" fg:x="2975" fg:w="2"/><text x="91.6759%" y="479.50"></text></g><g><title>core::core_arch::simd::u64x4::splat (1 samples, 0.03%)</title><rect x="91.4567%" y="453" width="0.0307%" height="15" fill="rgb(244,165,34)" fg:x="2976" fg:w="1"/><text x="91.7067%" y="463.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi32 (1 samples, 0.03%)</title><rect x="91.4874%" y="469" width="0.0307%" height="15" fill="rgb(207,89,7)" fg:x="2977" fg:w="1"/><text x="91.7374%" y="479.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi32 (1 samples, 0.03%)</title><rect x="91.4874%" y="453" width="0.0307%" height="15" fill="rgb(244,117,36)" fg:x="2977" fg:w="1"/><text x="91.7374%" y="463.50"></text></g><g><title>core::core_arch::simd::i32x8::new (1 samples, 0.03%)</title><rect x="91.4874%" y="437" width="0.0307%" height="15" fill="rgb(226,144,34)" fg:x="2977" fg:w="1"/><text x="91.7374%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="91.5181%" y="469" width="0.0307%" height="15" fill="rgb(213,23,19)" fg:x="2978" fg:w="1"/><text x="91.7681%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (5 samples, 0.15%)</title><rect x="91.5489%" y="437" width="0.1537%" height="15" fill="rgb(217,75,12)" fg:x="2979" fg:w="5"/><text x="91.7989%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (2 samples, 0.06%)</title><rect x="91.7025%" y="437" width="0.0615%" height="15" fill="rgb(224,159,17)" fg:x="2984" fg:w="2"/><text x="91.9525%" y="447.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (1 samples, 0.03%)</title><rect x="91.7333%" y="421" width="0.0307%" height="15" fill="rgb(217,118,1)" fg:x="2985" fg:w="1"/><text x="91.9833%" y="431.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (1 samples, 0.03%)</title><rect x="91.7333%" y="405" width="0.0307%" height="15" fill="rgb(232,180,48)" fg:x="2985" fg:w="1"/><text x="91.9833%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.03%)</title><rect x="91.7640%" y="421" width="0.0307%" height="15" fill="rgb(230,27,33)" fg:x="2986" fg:w="1"/><text x="92.0140%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.06%)</title><rect x="91.7947%" y="421" width="0.0615%" height="15" fill="rgb(205,31,21)" fg:x="2987" fg:w="2"/><text x="92.0447%" y="431.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Add&gt;::add (1 samples, 0.03%)</title><rect x="91.8562%" y="405" width="0.0307%" height="15" fill="rgb(253,59,4)" fg:x="2989" fg:w="1"/><text x="92.1062%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (5 samples, 0.15%)</title><rect x="91.7640%" y="437" width="0.1537%" height="15" fill="rgb(224,201,9)" fg:x="2986" fg:w="5"/><text x="92.0140%" y="447.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (2 samples, 0.06%)</title><rect x="91.8562%" y="421" width="0.0615%" height="15" fill="rgb(229,206,30)" fg:x="2989" fg:w="2"/><text x="92.1062%" y="431.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (1 samples, 0.03%)</title><rect x="91.8869%" y="405" width="0.0307%" height="15" fill="rgb(212,67,47)" fg:x="2990" fg:w="1"/><text x="92.1369%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (3 samples, 0.09%)</title><rect x="91.9176%" y="437" width="0.0922%" height="15" fill="rgb(211,96,50)" fg:x="2991" fg:w="3"/><text x="92.1676%" y="447.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="91.9791%" y="421" width="0.0307%" height="15" fill="rgb(252,114,18)" fg:x="2993" fg:w="1"/><text x="92.2291%" y="431.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="91.9791%" y="405" width="0.0307%" height="15" fill="rgb(223,58,37)" fg:x="2993" fg:w="1"/><text x="92.2291%" y="415.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="91.9791%" y="389" width="0.0307%" height="15" fill="rgb(237,70,4)" fg:x="2993" fg:w="1"/><text x="92.2291%" y="399.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (1 samples, 0.03%)</title><rect x="92.0098%" y="437" width="0.0307%" height="15" fill="rgb(244,85,46)" fg:x="2994" fg:w="1"/><text x="92.2598%" y="447.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi32 (1 samples, 0.03%)</title><rect x="92.0098%" y="421" width="0.0307%" height="15" fill="rgb(223,39,52)" fg:x="2994" fg:w="1"/><text x="92.2598%" y="431.50"></text></g><g><title>core::core_arch::simd::i32x8::new (1 samples, 0.03%)</title><rect x="92.0098%" y="405" width="0.0307%" height="15" fill="rgb(218,200,14)" fg:x="2994" fg:w="1"/><text x="92.2598%" y="415.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (4 samples, 0.12%)</title><rect x="92.0406%" y="437" width="0.1229%" height="15" fill="rgb(208,171,16)" fg:x="2995" fg:w="4"/><text x="92.2906%" y="447.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (4 samples, 0.12%)</title><rect x="92.0406%" y="421" width="0.1229%" height="15" fill="rgb(234,200,18)" fg:x="2995" fg:w="4"/><text x="92.2906%" y="431.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (4 samples, 0.12%)</title><rect x="92.0406%" y="405" width="0.1229%" height="15" fill="rgb(228,45,11)" fg:x="2995" fg:w="4"/><text x="92.2906%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="92.1635%" y="437" width="0.0307%" height="15" fill="rgb(237,182,11)" fg:x="2999" fg:w="1"/><text x="92.4135%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (2 samples, 0.06%)</title><rect x="92.1942%" y="437" width="0.0615%" height="15" fill="rgb(241,175,49)" fg:x="3000" fg:w="2"/><text x="92.4442%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (2 samples, 0.06%)</title><rect x="92.2557%" y="437" width="0.0615%" height="15" fill="rgb(247,38,35)" fg:x="3002" fg:w="2"/><text x="92.5057%" y="447.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (26 samples, 0.80%)</title><rect x="91.5489%" y="453" width="0.7990%" height="15" fill="rgb(228,39,49)" fg:x="2979" fg:w="26"/><text x="91.7989%" y="463.50"></text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_loaded_blocks (1 samples, 0.03%)</title><rect x="92.3171%" y="437" width="0.0307%" height="15" fill="rgb(226,101,26)" fg:x="3004" fg:w="1"/><text x="92.5671%" y="447.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Add&gt;::add (1 samples, 0.03%)</title><rect x="92.3479%" y="453" width="0.0307%" height="15" fill="rgb(206,141,19)" fg:x="3005" fg:w="1"/><text x="92.5979%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="92.3479%" y="437" width="0.0307%" height="15" fill="rgb(211,200,13)" fg:x="3005" fg:w="1"/><text x="92.5979%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="92.3479%" y="421" width="0.0307%" height="15" fill="rgb(241,121,6)" fg:x="3005" fg:w="1"/><text x="92.5979%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_blend_epi32 (1 samples, 0.03%)</title><rect x="92.3786%" y="437" width="0.0307%" height="15" fill="rgb(234,221,29)" fg:x="3006" fg:w="1"/><text x="92.6286%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="92.3786%" y="421" width="0.0307%" height="15" fill="rgb(229,136,5)" fg:x="3006" fg:w="1"/><text x="92.6286%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (2 samples, 0.06%)</title><rect x="92.5015%" y="405" width="0.0615%" height="15" fill="rgb(238,36,11)" fg:x="3010" fg:w="2"/><text x="92.7515%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (6 samples, 0.18%)</title><rect x="92.4093%" y="421" width="0.1844%" height="15" fill="rgb(251,55,41)" fg:x="3007" fg:w="6"/><text x="92.6593%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.03%)</title><rect x="92.5630%" y="405" width="0.0307%" height="15" fill="rgb(242,34,40)" fg:x="3012" fg:w="1"/><text x="92.8130%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.03%)</title><rect x="92.5937%" y="421" width="0.0307%" height="15" fill="rgb(215,42,17)" fg:x="3013" fg:w="1"/><text x="92.8437%" y="431.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi64x (1 samples, 0.03%)</title><rect x="92.6245%" y="421" width="0.0307%" height="15" fill="rgb(207,44,46)" fg:x="3014" fg:w="1"/><text x="92.8745%" y="431.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="92.6552%" y="421" width="0.0307%" height="15" fill="rgb(211,206,28)" fg:x="3015" fg:w="1"/><text x="92.9052%" y="431.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="92.6552%" y="405" width="0.0307%" height="15" fill="rgb(237,167,16)" fg:x="3015" fg:w="1"/><text x="92.9052%" y="415.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="92.6552%" y="389" width="0.0307%" height="15" fill="rgb(233,66,6)" fg:x="3015" fg:w="1"/><text x="92.9052%" y="399.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::encrypt_in_place_detached (103 samples, 3.17%)</title><rect x="89.5513%" y="597" width="3.1653%" height="15" fill="rgb(246,123,29)" fg:x="2914" fg:w="103"/><text x="89.8013%" y="607.50">cha..</text></g><g><title>universal_hash::UniversalHash::update_padded (43 samples, 1.32%)</title><rect x="91.3952%" y="581" width="1.3215%" height="15" fill="rgb(209,62,40)" fg:x="2974" fg:w="43"/><text x="91.6452%" y="591.50"></text></g><g><title>universal_hash::UniversalHash::update (43 samples, 1.32%)</title><rect x="91.3952%" y="565" width="1.3215%" height="15" fill="rgb(218,4,25)" fg:x="2974" fg:w="43"/><text x="91.6452%" y="575.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (43 samples, 1.32%)</title><rect x="91.3952%" y="549" width="1.3215%" height="15" fill="rgb(253,91,49)" fg:x="2974" fg:w="43"/><text x="91.6452%" y="559.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (43 samples, 1.32%)</title><rect x="91.3952%" y="533" width="1.3215%" height="15" fill="rgb(228,155,29)" fg:x="2974" fg:w="43"/><text x="91.6452%" y="543.50"></text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (43 samples, 1.32%)</title><rect x="91.3952%" y="517" width="1.3215%" height="15" fill="rgb(243,57,37)" fg:x="2974" fg:w="43"/><text x="91.6452%" y="527.50"></text></g><g><title>&lt;poly1305::backend::avx2::State as universal_hash::UhfBackend&gt;::proc_par_blocks (43 samples, 1.32%)</title><rect x="91.3952%" y="501" width="1.3215%" height="15" fill="rgb(244,167,17)" fg:x="2974" fg:w="43"/><text x="91.6452%" y="511.50"></text></g><g><title>poly1305::backend::avx2::State::compute_par_blocks (43 samples, 1.32%)</title><rect x="91.3952%" y="485" width="1.3215%" height="15" fill="rgb(207,181,38)" fg:x="2974" fg:w="43"/><text x="91.6452%" y="495.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (38 samples, 1.17%)</title><rect x="91.5489%" y="469" width="1.1678%" height="15" fill="rgb(211,8,23)" fg:x="2979" fg:w="38"/><text x="91.7989%" y="479.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (11 samples, 0.34%)</title><rect x="92.3786%" y="453" width="0.3380%" height="15" fill="rgb(235,11,44)" fg:x="3006" fg:w="11"/><text x="92.6286%" y="463.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (10 samples, 0.31%)</title><rect x="92.4093%" y="437" width="0.3073%" height="15" fill="rgb(248,18,52)" fg:x="3007" fg:w="10"/><text x="92.6593%" y="447.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (1 samples, 0.03%)</title><rect x="92.6859%" y="421" width="0.0307%" height="15" fill="rgb(208,4,7)" fg:x="3016" fg:w="1"/><text x="92.9359%" y="431.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (1 samples, 0.03%)</title><rect x="92.6859%" y="405" width="0.0307%" height="15" fill="rgb(240,17,39)" fg:x="3016" fg:w="1"/><text x="92.9359%" y="415.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced130::reduce (1 samples, 0.03%)</title><rect x="92.7167%" y="533" width="0.0307%" height="15" fill="rgb(207,170,3)" fg:x="3017" fg:w="1"/><text x="92.9667%" y="543.50"></text></g><g><title>poly1305::backend::avx2::helpers::adc (1 samples, 0.03%)</title><rect x="92.7167%" y="517" width="0.0307%" height="15" fill="rgb(236,100,52)" fg:x="3017" fg:w="1"/><text x="92.9667%" y="527.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (1 samples, 0.03%)</title><rect x="92.7167%" y="501" width="0.0307%" height="15" fill="rgb(246,78,51)" fg:x="3017" fg:w="1"/><text x="92.9667%" y="511.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.03%)</title><rect x="92.7167%" y="485" width="0.0307%" height="15" fill="rgb(211,17,15)" fg:x="3017" fg:w="1"/><text x="92.9667%" y="495.50"></text></g><g><title>&lt;poly1305::Poly1305 as crypto_common::KeyInit&gt;::new (2 samples, 0.06%)</title><rect x="92.7167%" y="581" width="0.0615%" height="15" fill="rgb(209,59,46)" fg:x="3017" fg:w="2"/><text x="92.9667%" y="591.50"></text></g><g><title>poly1305::backend::autodetect::State::new (2 samples, 0.06%)</title><rect x="92.7167%" y="565" width="0.0615%" height="15" fill="rgb(210,92,25)" fg:x="3017" fg:w="2"/><text x="92.9667%" y="575.50"></text></g><g><title>poly1305::backend::avx2::State::new (2 samples, 0.06%)</title><rect x="92.7167%" y="549" width="0.0615%" height="15" fill="rgb(238,174,52)" fg:x="3017" fg:w="2"/><text x="92.9667%" y="559.50"></text></g><g><title>poly1305::backend::avx2::helpers::prepare_keys (1 samples, 0.03%)</title><rect x="92.7474%" y="533" width="0.0307%" height="15" fill="rgb(230,73,7)" fg:x="3018" fg:w="1"/><text x="92.9974%" y="543.50"></text></g><g><title>poly1305::backend::avx2::helpers::Aligned130::new (1 samples, 0.03%)</title><rect x="92.7474%" y="517" width="0.0307%" height="15" fill="rgb(243,124,40)" fg:x="3018" fg:w="1"/><text x="92.9974%" y="527.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="92.7474%" y="501" width="0.0307%" height="15" fill="rgb(244,170,11)" fg:x="3018" fg:w="1"/><text x="92.9974%" y="511.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="92.8089%" y="389" width="0.0307%" height="15" fill="rgb(207,114,54)" fg:x="3020" fg:w="1"/><text x="93.0589%" y="399.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (1 samples, 0.03%)</title><rect x="92.8089%" y="373" width="0.0307%" height="15" fill="rgb(205,42,20)" fg:x="3020" fg:w="1"/><text x="93.0589%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::cast (1 samples, 0.03%)</title><rect x="92.8089%" y="357" width="0.0307%" height="15" fill="rgb(230,30,28)" fg:x="3020" fg:w="1"/><text x="93.0589%" y="367.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (1 samples, 0.03%)</title><rect x="92.8396%" y="389" width="0.0307%" height="15" fill="rgb(205,73,54)" fg:x="3021" fg:w="1"/><text x="93.0896%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (3 samples, 0.09%)</title><rect x="92.8703%" y="389" width="0.0922%" height="15" fill="rgb(254,227,23)" fg:x="3022" fg:w="3"/><text x="93.1203%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.06%)</title><rect x="92.9010%" y="373" width="0.0615%" height="15" fill="rgb(228,202,34)" fg:x="3023" fg:w="2"/><text x="93.1510%" y="383.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.03%)</title><rect x="92.9318%" y="357" width="0.0307%" height="15" fill="rgb(222,225,37)" fg:x="3024" fg:w="1"/><text x="93.1818%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.03%)</title><rect x="92.9625%" y="389" width="0.0307%" height="15" fill="rgb(221,14,54)" fg:x="3025" fg:w="1"/><text x="93.2125%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="93.0240%" y="373" width="0.0307%" height="15" fill="rgb(254,102,2)" fg:x="3027" fg:w="1"/><text x="93.2740%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="93.0547%" y="373" width="0.0307%" height="15" fill="rgb(232,104,17)" fg:x="3028" fg:w="1"/><text x="93.3047%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (4 samples, 0.12%)</title><rect x="92.9932%" y="389" width="0.1229%" height="15" fill="rgb(250,220,14)" fg:x="3026" fg:w="4"/><text x="93.2432%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="93.0854%" y="373" width="0.0307%" height="15" fill="rgb(241,158,9)" fg:x="3029" fg:w="1"/><text x="93.3354%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (2 samples, 0.06%)</title><rect x="93.1162%" y="389" width="0.0615%" height="15" fill="rgb(246,9,43)" fg:x="3030" fg:w="2"/><text x="93.3662%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.06%)</title><rect x="93.1776%" y="389" width="0.0615%" height="15" fill="rgb(206,73,33)" fg:x="3032" fg:w="2"/><text x="93.4276%" y="399.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (17 samples, 0.52%)</title><rect x="92.7781%" y="405" width="0.5224%" height="15" fill="rgb(222,79,8)" fg:x="3019" fg:w="17"/><text x="93.0281%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (2 samples, 0.06%)</title><rect x="93.2391%" y="389" width="0.0615%" height="15" fill="rgb(234,8,54)" fg:x="3034" fg:w="2"/><text x="93.4891%" y="399.50"></text></g><g><title>tftp::client::receiver::receive_file (947 samples, 29.10%)</title><rect x="64.2286%" y="677" width="29.1026%" height="15" fill="rgb(209,134,38)" fg:x="2090" fg:w="947"/><text x="64.4786%" y="687.50">tftp::client::receiver::receive_file</text></g><g><title>&lt;tftp::client::encryption_socket::EncryptionBoundSocket&lt;S,Rng&gt; as tftp::socket::Socket&gt;::send_to (123 samples, 3.78%)</title><rect x="89.5513%" y="661" width="3.7800%" height="15" fill="rgb(230,127,29)" fg:x="2914" fg:w="123"/><text x="89.8013%" y="671.50">&lt;tft..</text></g><g><title>tftp::encrypted_packet::EncryptedPacket::encrypt (123 samples, 3.78%)</title><rect x="89.5513%" y="645" width="3.7800%" height="15" fill="rgb(242,44,41)" fg:x="2914" fg:w="123"/><text x="89.8013%" y="655.50">tftp..</text></g><g><title>tftp::encryption::Encryptor&lt;R&gt;::encrypt (123 samples, 3.78%)</title><rect x="89.5513%" y="629" width="3.7800%" height="15" fill="rgb(222,56,43)" fg:x="2914" fg:w="123"/><text x="89.8013%" y="639.50">tftp..</text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::encrypt_in_place_detached (123 samples, 3.78%)</title><rect x="89.5513%" y="613" width="3.7800%" height="15" fill="rgb(238,39,47)" fg:x="2914" fg:w="123"/><text x="89.8013%" y="623.50">&lt;cha..</text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (20 samples, 0.61%)</title><rect x="92.7167%" y="597" width="0.6146%" height="15" fill="rgb(226,79,43)" fg:x="3017" fg:w="20"/><text x="92.9667%" y="607.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (18 samples, 0.55%)</title><rect x="92.7781%" y="581" width="0.5532%" height="15" fill="rgb(242,105,53)" fg:x="3019" fg:w="18"/><text x="93.0281%" y="591.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (18 samples, 0.55%)</title><rect x="92.7781%" y="565" width="0.5532%" height="15" fill="rgb(251,132,46)" fg:x="3019" fg:w="18"/><text x="93.0281%" y="575.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (18 samples, 0.55%)</title><rect x="92.7781%" y="549" width="0.5532%" height="15" fill="rgb(231,77,14)" fg:x="3019" fg:w="18"/><text x="93.0281%" y="559.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::write_keystream_block (18 samples, 0.55%)</title><rect x="92.7781%" y="533" width="0.5532%" height="15" fill="rgb(240,135,9)" fg:x="3019" fg:w="18"/><text x="93.0281%" y="543.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (18 samples, 0.55%)</title><rect x="92.7781%" y="517" width="0.5532%" height="15" fill="rgb(248,109,14)" fg:x="3019" fg:w="18"/><text x="93.0281%" y="527.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (18 samples, 0.55%)</title><rect x="92.7781%" y="501" width="0.5532%" height="15" fill="rgb(227,146,52)" fg:x="3019" fg:w="18"/><text x="93.0281%" y="511.50"></text></g><g><title>chacha20::backends::avx2::inner (18 samples, 0.55%)</title><rect x="92.7781%" y="485" width="0.5532%" height="15" fill="rgb(232,54,3)" fg:x="3019" fg:w="18"/><text x="93.0281%" y="495.50"></text></g><g><title>&lt;cipher::stream_core::WriteBlockCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (18 samples, 0.55%)</title><rect x="92.7781%" y="469" width="0.5532%" height="15" fill="rgb(229,201,43)" fg:x="3019" fg:w="18"/><text x="93.0281%" y="479.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (18 samples, 0.55%)</title><rect x="92.7781%" y="453" width="0.5532%" height="15" fill="rgb(252,161,33)" fg:x="3019" fg:w="18"/><text x="93.0281%" y="463.50"></text></g><g><title>chacha20::backends::avx2::rounds (18 samples, 0.55%)</title><rect x="92.7781%" y="437" width="0.5532%" height="15" fill="rgb(226,146,40)" fg:x="3019" fg:w="18"/><text x="93.0281%" y="447.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (18 samples, 0.55%)</title><rect x="92.7781%" y="421" width="0.5532%" height="15" fill="rgb(219,47,25)" fg:x="3019" fg:w="18"/><text x="93.0281%" y="431.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (1 samples, 0.03%)</title><rect x="93.3006%" y="405" width="0.0307%" height="15" fill="rgb(250,135,13)" fg:x="3036" fg:w="1"/><text x="93.5506%" y="415.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="93.3006%" y="389" width="0.0307%" height="15" fill="rgb(219,229,18)" fg:x="3036" fg:w="1"/><text x="93.5506%" y="399.50"></text></g><g><title>tftp::encrypted_packet::EncryptedPacket::decrypt (1 samples, 0.03%)</title><rect x="93.3313%" y="677" width="0.0307%" height="15" fill="rgb(217,152,27)" fg:x="3037" fg:w="1"/><text x="93.5813%" y="687.50"></text></g><g><title>tftp::encryption::Encryptor&lt;R&gt;::decrypt (1 samples, 0.03%)</title><rect x="93.3313%" y="661" width="0.0307%" height="15" fill="rgb(225,71,47)" fg:x="3037" fg:w="1"/><text x="93.5813%" y="671.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (1 samples, 0.03%)</title><rect x="93.3313%" y="645" width="0.0307%" height="15" fill="rgb(220,139,14)" fg:x="3037" fg:w="1"/><text x="93.5813%" y="655.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::decrypt_in_place_detached (1 samples, 0.03%)</title><rect x="93.3313%" y="629" width="0.0307%" height="15" fill="rgb(247,54,32)" fg:x="3037" fg:w="1"/><text x="93.5813%" y="639.50"></text></g><g><title>universal_hash::UniversalHash::update_padded (1 samples, 0.03%)</title><rect x="93.3313%" y="613" width="0.0307%" height="15" fill="rgb(252,131,39)" fg:x="3037" fg:w="1"/><text x="93.5813%" y="623.50"></text></g><g><title>universal_hash::UniversalHash::update (1 samples, 0.03%)</title><rect x="93.3313%" y="597" width="0.0307%" height="15" fill="rgb(210,108,39)" fg:x="3037" fg:w="1"/><text x="93.5813%" y="607.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (1 samples, 0.03%)</title><rect x="93.3313%" y="581" width="0.0307%" height="15" fill="rgb(205,23,29)" fg:x="3037" fg:w="1"/><text x="93.5813%" y="591.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (1 samples, 0.03%)</title><rect x="93.3313%" y="565" width="0.0307%" height="15" fill="rgb(246,139,46)" fg:x="3037" fg:w="1"/><text x="93.5813%" y="575.50"></text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (1 samples, 0.03%)</title><rect x="93.3313%" y="549" width="0.0307%" height="15" fill="rgb(250,81,26)" fg:x="3037" fg:w="1"/><text x="93.5813%" y="559.50"></text></g><g><title>&lt;poly1305::backend::avx2::State as universal_hash::UhfBackend&gt;::proc_par_blocks (1 samples, 0.03%)</title><rect x="93.3313%" y="533" width="0.0307%" height="15" fill="rgb(214,104,7)" fg:x="3037" fg:w="1"/><text x="93.5813%" y="543.50"></text></g><g><title>poly1305::backend::avx2::State::compute_par_blocks (1 samples, 0.03%)</title><rect x="93.3313%" y="517" width="0.0307%" height="15" fill="rgb(233,189,8)" fg:x="3037" fg:w="1"/><text x="93.5813%" y="527.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (1 samples, 0.03%)</title><rect x="93.3313%" y="501" width="0.0307%" height="15" fill="rgb(228,141,17)" fg:x="3037" fg:w="1"/><text x="93.5813%" y="511.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (1 samples, 0.03%)</title><rect x="93.3313%" y="485" width="0.0307%" height="15" fill="rgb(247,157,1)" fg:x="3037" fg:w="1"/><text x="93.5813%" y="495.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (1 samples, 0.03%)</title><rect x="93.3313%" y="469" width="0.0307%" height="15" fill="rgb(249,225,5)" fg:x="3037" fg:w="1"/><text x="93.5813%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.03%)</title><rect x="93.3313%" y="453" width="0.0307%" height="15" fill="rgb(242,55,13)" fg:x="3037" fg:w="1"/><text x="93.5813%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.03%)</title><rect x="93.3313%" y="437" width="0.0307%" height="15" fill="rgb(230,49,50)" fg:x="3037" fg:w="1"/><text x="93.5813%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.03%)</title><rect x="93.5771%" y="229" width="0.0307%" height="15" fill="rgb(241,111,38)" fg:x="3045" fg:w="1"/><text x="93.8271%" y="239.50"></text></g><g><title>tftp::encryption::Encryptor&lt;R&gt;::decrypt (9 samples, 0.28%)</title><rect x="93.3620%" y="677" width="0.2766%" height="15" fill="rgb(252,155,4)" fg:x="3038" fg:w="9"/><text x="93.6120%" y="687.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (8 samples, 0.25%)</title><rect x="93.3927%" y="661" width="0.2459%" height="15" fill="rgb(212,69,32)" fg:x="3039" fg:w="8"/><text x="93.6427%" y="671.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (8 samples, 0.25%)</title><rect x="93.3927%" y="645" width="0.2459%" height="15" fill="rgb(243,107,47)" fg:x="3039" fg:w="8"/><text x="93.6427%" y="655.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (8 samples, 0.25%)</title><rect x="93.3927%" y="629" width="0.2459%" height="15" fill="rgb(247,130,12)" fg:x="3039" fg:w="8"/><text x="93.6427%" y="639.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (8 samples, 0.25%)</title><rect x="93.3927%" y="613" width="0.2459%" height="15" fill="rgb(233,74,16)" fg:x="3039" fg:w="8"/><text x="93.6427%" y="623.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (8 samples, 0.25%)</title><rect x="93.3927%" y="597" width="0.2459%" height="15" fill="rgb(208,58,18)" fg:x="3039" fg:w="8"/><text x="93.6427%" y="607.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (8 samples, 0.25%)</title><rect x="93.3927%" y="581" width="0.2459%" height="15" fill="rgb(242,225,1)" fg:x="3039" fg:w="8"/><text x="93.6427%" y="591.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (8 samples, 0.25%)</title><rect x="93.3927%" y="565" width="0.2459%" height="15" fill="rgb(249,39,40)" fg:x="3039" fg:w="8"/><text x="93.6427%" y="575.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (8 samples, 0.25%)</title><rect x="93.3927%" y="549" width="0.2459%" height="15" fill="rgb(207,72,44)" fg:x="3039" fg:w="8"/><text x="93.6427%" y="559.50"></text></g><g><title>chacha20::backends::avx2::inner (8 samples, 0.25%)</title><rect x="93.3927%" y="533" width="0.2459%" height="15" fill="rgb(215,193,12)" fg:x="3039" fg:w="8"/><text x="93.6427%" y="543.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (8 samples, 0.25%)</title><rect x="93.3927%" y="517" width="0.2459%" height="15" fill="rgb(248,41,39)" fg:x="3039" fg:w="8"/><text x="93.6427%" y="527.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (8 samples, 0.25%)</title><rect x="93.3927%" y="501" width="0.2459%" height="15" fill="rgb(253,85,4)" fg:x="3039" fg:w="8"/><text x="93.6427%" y="511.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (8 samples, 0.25%)</title><rect x="93.3927%" y="485" width="0.2459%" height="15" fill="rgb(243,70,31)" fg:x="3039" fg:w="8"/><text x="93.6427%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (8 samples, 0.25%)</title><rect x="93.3927%" y="469" width="0.2459%" height="15" fill="rgb(253,195,26)" fg:x="3039" fg:w="8"/><text x="93.6427%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.25%)</title><rect x="93.3927%" y="453" width="0.2459%" height="15" fill="rgb(243,42,11)" fg:x="3039" fg:w="8"/><text x="93.6427%" y="463.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.25%)</title><rect x="93.3927%" y="437" width="0.2459%" height="15" fill="rgb(239,66,17)" fg:x="3039" fg:w="8"/><text x="93.6427%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (8 samples, 0.25%)</title><rect x="93.3927%" y="421" width="0.2459%" height="15" fill="rgb(217,132,21)" fg:x="3039" fg:w="8"/><text x="93.6427%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (8 samples, 0.25%)</title><rect x="93.3927%" y="405" width="0.2459%" height="15" fill="rgb(252,202,21)" fg:x="3039" fg:w="8"/><text x="93.6427%" y="415.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (8 samples, 0.25%)</title><rect x="93.3927%" y="389" width="0.2459%" height="15" fill="rgb(233,98,36)" fg:x="3039" fg:w="8"/><text x="93.6427%" y="399.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (8 samples, 0.25%)</title><rect x="93.3927%" y="373" width="0.2459%" height="15" fill="rgb(216,153,54)" fg:x="3039" fg:w="8"/><text x="93.6427%" y="383.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (8 samples, 0.25%)</title><rect x="93.3927%" y="357" width="0.2459%" height="15" fill="rgb(250,99,7)" fg:x="3039" fg:w="8"/><text x="93.6427%" y="367.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (8 samples, 0.25%)</title><rect x="93.3927%" y="341" width="0.2459%" height="15" fill="rgb(207,56,50)" fg:x="3039" fg:w="8"/><text x="93.6427%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (8 samples, 0.25%)</title><rect x="93.3927%" y="325" width="0.2459%" height="15" fill="rgb(244,61,34)" fg:x="3039" fg:w="8"/><text x="93.6427%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.25%)</title><rect x="93.3927%" y="309" width="0.2459%" height="15" fill="rgb(241,50,38)" fg:x="3039" fg:w="8"/><text x="93.6427%" y="319.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.25%)</title><rect x="93.3927%" y="293" width="0.2459%" height="15" fill="rgb(212,166,30)" fg:x="3039" fg:w="8"/><text x="93.6427%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (8 samples, 0.25%)</title><rect x="93.3927%" y="277" width="0.2459%" height="15" fill="rgb(249,127,32)" fg:x="3039" fg:w="8"/><text x="93.6427%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (8 samples, 0.25%)</title><rect x="93.3927%" y="261" width="0.2459%" height="15" fill="rgb(209,103,0)" fg:x="3039" fg:w="8"/><text x="93.6427%" y="271.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (8 samples, 0.25%)</title><rect x="93.3927%" y="245" width="0.2459%" height="15" fill="rgb(238,209,51)" fg:x="3039" fg:w="8"/><text x="93.6427%" y="255.50"></text></g><g><title>cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt;::get_pos (1 samples, 0.03%)</title><rect x="93.6079%" y="229" width="0.0307%" height="15" fill="rgb(237,56,23)" fg:x="3046" fg:w="1"/><text x="93.8579%" y="239.50"></text></g><g><title>tftp::encryption::apply_bit_padding (2 samples, 0.06%)</title><rect x="93.6386%" y="677" width="0.0615%" height="15" fill="rgb(215,153,46)" fg:x="3047" fg:w="2"/><text x="93.8886%" y="687.50"></text></g><g><title>tftp::key_management::create_initial_keys (1 samples, 0.03%)</title><rect x="93.7001%" y="677" width="0.0307%" height="15" fill="rgb(224,49,31)" fg:x="3049" fg:w="1"/><text x="93.9501%" y="687.50"></text></g><g><title>&lt;x25519_dalek::x25519::PublicKey as core::convert::From&lt;&amp;x25519_dalek::x25519::EphemeralSecret&gt;&gt;::from (1 samples, 0.03%)</title><rect x="93.7001%" y="661" width="0.0307%" height="15" fill="rgb(250,18,42)" fg:x="3049" fg:w="1"/><text x="93.9501%" y="671.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::mul_base_clamped (1 samples, 0.03%)</title><rect x="93.7001%" y="645" width="0.0307%" height="15" fill="rgb(215,176,39)" fg:x="3049" fg:w="1"/><text x="93.9501%" y="655.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::mul_base (1 samples, 0.03%)</title><rect x="93.7001%" y="629" width="0.0307%" height="15" fill="rgb(223,77,29)" fg:x="3049" fg:w="1"/><text x="93.9501%" y="639.50"></text></g><g><title>curve25519_dalek::edwards::&lt;impl core::ops::arith::Mul&lt;curve25519_dalek::edwards::EdwardsPoint&gt; for &amp;curve25519_dalek::scalar::Scalar&gt;::mul (1 samples, 0.03%)</title><rect x="93.7001%" y="613" width="0.0307%" height="15" fill="rgb(234,94,52)" fg:x="3049" fg:w="1"/><text x="93.9501%" y="623.50"></text></g><g><title>curve25519_dalek::edwards::&lt;impl core::ops::arith::Mul&lt;&amp;curve25519_dalek::edwards::EdwardsPoint&gt; for &amp;curve25519_dalek::scalar::Scalar&gt;::mul (1 samples, 0.03%)</title><rect x="93.7001%" y="597" width="0.0307%" height="15" fill="rgb(220,154,50)" fg:x="3049" fg:w="1"/><text x="93.9501%" y="607.50"></text></g><g><title>&lt;&amp;curve25519_dalek::edwards::EdwardsPoint as core::ops::arith::Mul&lt;&amp;curve25519_dalek::scalar::Scalar&gt;&gt;::mul (1 samples, 0.03%)</title><rect x="93.7001%" y="581" width="0.0307%" height="15" fill="rgb(212,11,10)" fg:x="3049" fg:w="1"/><text x="93.9501%" y="591.50"></text></g><g><title>curve25519_dalek::backend::variable_base_mul (1 samples, 0.03%)</title><rect x="93.7001%" y="565" width="0.0307%" height="15" fill="rgb(205,166,19)" fg:x="3049" fg:w="1"/><text x="93.9501%" y="575.50"></text></g><g><title>curve25519_dalek::backend::vector::scalar_mul::variable_base::spec_avx2::mul (1 samples, 0.03%)</title><rect x="93.7001%" y="549" width="0.0307%" height="15" fill="rgb(244,198,16)" fg:x="3049" fg:w="1"/><text x="93.9501%" y="559.50"></text></g><g><title>curve25519_dalek::backend::vector::scalar_mul::variable_base::spec_avx2::mul::_impl_mul (1 samples, 0.03%)</title><rect x="93.7001%" y="533" width="0.0307%" height="15" fill="rgb(219,69,12)" fg:x="3049" fg:w="1"/><text x="93.9501%" y="543.50"></text></g><g><title>curve25519_dalek::backend::vector::avx2::edwards::ExtendedPoint::mul_by_pow_2 (1 samples, 0.03%)</title><rect x="93.7001%" y="517" width="0.0307%" height="15" fill="rgb(245,30,7)" fg:x="3049" fg:w="1"/><text x="93.9501%" y="527.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::avx2::edwards::ExtendedPoint as curve25519_dalek::backend::vector::avx2::edwards::ExtendedPoint::mul_by_pow_2::__Impl_mul_by_pow_2__&gt;::_impl_mul_by_pow_2 (1 samples, 0.03%)</title><rect x="93.7001%" y="501" width="0.0307%" height="15" fill="rgb(218,221,48)" fg:x="3049" fg:w="1"/><text x="93.9501%" y="511.50"></text></g><g><title>curve25519_dalek::backend::vector::avx2::edwards::ExtendedPoint::double (1 samples, 0.03%)</title><rect x="93.7001%" y="485" width="0.0307%" height="15" fill="rgb(216,66,15)" fg:x="3049" fg:w="1"/><text x="93.9501%" y="495.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::avx2::edwards::ExtendedPoint as curve25519_dalek::backend::vector::avx2::edwards::ExtendedPoint::double::__Impl_double__&gt;::_impl_double (1 samples, 0.03%)</title><rect x="93.7001%" y="469" width="0.0307%" height="15" fill="rgb(226,122,50)" fg:x="3049" fg:w="1"/><text x="93.9501%" y="479.50"></text></g><g><title>curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4::shuffle (1 samples, 0.03%)</title><rect x="93.7001%" y="453" width="0.0307%" height="15" fill="rgb(239,156,16)" fg:x="3049" fg:w="1"/><text x="93.9501%" y="463.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4 as curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4::shuffle::__Impl_shuffle__&gt;::_impl_shuffle (1 samples, 0.03%)</title><rect x="93.7001%" y="437" width="0.0307%" height="15" fill="rgb(224,27,38)" fg:x="3049" fg:w="1"/><text x="93.9501%" y="447.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4 as curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4::shuffle::__Impl_shuffle__&gt;::_impl_shuffle::shuffle_lanes (1 samples, 0.03%)</title><rect x="93.7001%" y="421" width="0.0307%" height="15" fill="rgb(224,39,27)" fg:x="3049" fg:w="1"/><text x="93.9501%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="93.7001%" y="405" width="0.0307%" height="15" fill="rgb(215,92,29)" fg:x="3049" fg:w="1"/><text x="93.9501%" y="415.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (1 samples, 0.03%)</title><rect x="93.7615%" y="437" width="0.0307%" height="15" fill="rgb(207,159,16)" fg:x="3051" fg:w="1"/><text x="94.0115%" y="447.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.03%)</title><rect x="93.7615%" y="421" width="0.0307%" height="15" fill="rgb(238,163,47)" fg:x="3051" fg:w="1"/><text x="94.0115%" y="431.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.03%)</title><rect x="93.7615%" y="405" width="0.0307%" height="15" fill="rgb(219,91,49)" fg:x="3051" fg:w="1"/><text x="94.0115%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.09%)</title><rect x="93.7308%" y="485" width="0.0922%" height="15" fill="rgb(227,167,31)" fg:x="3050" fg:w="3"/><text x="93.9808%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.09%)</title><rect x="93.7308%" y="469" width="0.0922%" height="15" fill="rgb(234,80,54)" fg:x="3050" fg:w="3"/><text x="93.9808%" y="479.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.06%)</title><rect x="93.7615%" y="453" width="0.0615%" height="15" fill="rgb(212,114,2)" fg:x="3051" fg:w="2"/><text x="94.0115%" y="463.50"></text></g><g><title>polling::epoll::Events::iter::{{closure}} (1 samples, 0.03%)</title><rect x="93.7923%" y="437" width="0.0307%" height="15" fill="rgb(234,50,24)" fg:x="3052" fg:w="1"/><text x="94.0423%" y="447.50"></text></g><g><title>polling::epoll::write_flags (1 samples, 0.03%)</title><rect x="93.7923%" y="421" width="0.0307%" height="15" fill="rgb(221,68,8)" fg:x="3052" fg:w="1"/><text x="94.0423%" y="431.50"></text></g><g><title>rustix::backend::event::epoll::_::&lt;impl core::ops::bit::BitOr for rustix::backend::event::epoll::EventFlags&gt;::bitor (1 samples, 0.03%)</title><rect x="93.7923%" y="405" width="0.0307%" height="15" fill="rgb(254,180,31)" fg:x="3052" fg:w="1"/><text x="94.0423%" y="415.50"></text></g><g><title>rustix::backend::event::epoll::_::&lt;impl rustix::backend::event::epoll::EventFlags&gt;::union (1 samples, 0.03%)</title><rect x="93.7923%" y="389" width="0.0307%" height="15" fill="rgb(247,130,50)" fg:x="3052" fg:w="1"/><text x="94.0423%" y="399.50"></text></g><g><title>rustix::backend::event::epoll::_::InternalBitFlags::union (1 samples, 0.03%)</title><rect x="93.7923%" y="373" width="0.0307%" height="15" fill="rgb(211,109,4)" fg:x="3052" fg:w="1"/><text x="94.0423%" y="383.50"></text></g><g><title>rustix::backend::event::epoll::_::InternalBitFlags::bits (1 samples, 0.03%)</title><rect x="93.7923%" y="357" width="0.0307%" height="15" fill="rgb(238,50,21)" fg:x="3052" fg:w="1"/><text x="94.0423%" y="367.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (4 samples, 0.12%)</title><rect x="93.7308%" y="565" width="0.1229%" height="15" fill="rgb(225,57,45)" fg:x="3050" fg:w="4"/><text x="93.9808%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.12%)</title><rect x="93.7308%" y="549" width="0.1229%" height="15" fill="rgb(209,196,50)" fg:x="3050" fg:w="4"/><text x="93.9808%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.12%)</title><rect x="93.7308%" y="533" width="0.1229%" height="15" fill="rgb(242,140,13)" fg:x="3050" fg:w="4"/><text x="93.9808%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.12%)</title><rect x="93.7308%" y="517" width="0.1229%" height="15" fill="rgb(217,111,7)" fg:x="3050" fg:w="4"/><text x="93.9808%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.12%)</title><rect x="93.7308%" y="501" width="0.1229%" height="15" fill="rgb(253,193,51)" fg:x="3050" fg:w="4"/><text x="93.9808%" y="511.50"></text></g><g><title>core::ops::range::RangeBounds::contains (1 samples, 0.03%)</title><rect x="93.8230%" y="485" width="0.0307%" height="15" fill="rgb(252,70,29)" fg:x="3053" fg:w="1"/><text x="94.0730%" y="495.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (5 samples, 0.15%)</title><rect x="93.7308%" y="597" width="0.1537%" height="15" fill="rgb(232,127,12)" fg:x="3050" fg:w="5"/><text x="93.9808%" y="607.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (5 samples, 0.15%)</title><rect x="93.7308%" y="581" width="0.1537%" height="15" fill="rgb(211,180,21)" fg:x="3050" fg:w="5"/><text x="93.9808%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::map (1 samples, 0.03%)</title><rect x="93.8537%" y="565" width="0.0307%" height="15" fill="rgb(229,72,13)" fg:x="3054" fg:w="1"/><text x="94.1037%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;()&gt;&gt; (1 samples, 0.03%)</title><rect x="93.8844%" y="581" width="0.0307%" height="15" fill="rgb(240,211,49)" fg:x="3055" fg:w="1"/><text x="94.1344%" y="591.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="93.8844%" y="565" width="0.0307%" height="15" fill="rgb(219,149,40)" fg:x="3055" fg:w="1"/><text x="94.1344%" y="575.50"></text></g><g><title>polling::Events::len (1 samples, 0.03%)</title><rect x="93.9152%" y="581" width="0.0307%" height="15" fill="rgb(210,127,46)" fg:x="3056" fg:w="1"/><text x="94.1652%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (1 samples, 0.03%)</title><rect x="93.9152%" y="565" width="0.0307%" height="15" fill="rgb(220,106,7)" fg:x="3056" fg:w="1"/><text x="94.1652%" y="575.50"></text></g><g><title>polling::Poller::wait (3 samples, 0.09%)</title><rect x="93.8844%" y="597" width="0.0922%" height="15" fill="rgb(249,31,22)" fg:x="3055" fg:w="3"/><text x="94.1344%" y="607.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (1 samples, 0.03%)</title><rect x="93.9459%" y="581" width="0.0307%" height="15" fill="rgb(253,1,49)" fg:x="3057" fg:w="1"/><text x="94.1959%" y="591.50"></text></g><g><title>&lt;tftp::socket::UdpUnboundSocket as tftp::socket::Socket&gt;::recv_from (9 samples, 0.28%)</title><rect x="93.7308%" y="613" width="0.2766%" height="15" fill="rgb(227,144,33)" fg:x="3050" fg:w="9"/><text x="93.9808%" y="623.50"></text></g><g><title>std::net::udp::UdpSocket::recv_from (1 samples, 0.03%)</title><rect x="93.9766%" y="597" width="0.0307%" height="15" fill="rgb(249,163,44)" fg:x="3058" fg:w="1"/><text x="94.2266%" y="607.50"></text></g><g><title>std::sys_common::net::UdpSocket::recv_from (1 samples, 0.03%)</title><rect x="93.9766%" y="581" width="0.0307%" height="15" fill="rgb(234,15,39)" fg:x="3058" fg:w="1"/><text x="94.2266%" y="591.50"></text></g><g><title>std::sys::unix::net::Socket::recv_from (1 samples, 0.03%)</title><rect x="93.9766%" y="565" width="0.0307%" height="15" fill="rgb(207,66,16)" fg:x="3058" fg:w="1"/><text x="94.2266%" y="575.50"></text></g><g><title>std::sys::unix::net::Socket::recv_from_with_flags (1 samples, 0.03%)</title><rect x="93.9766%" y="549" width="0.0307%" height="15" fill="rgb(233,112,24)" fg:x="3058" fg:w="1"/><text x="94.2266%" y="559.50"></text></g><g><title>__libc_recvfrom (1 samples, 0.03%)</title><rect x="93.9766%" y="533" width="0.0307%" height="15" fill="rgb(230,90,22)" fg:x="3058" fg:w="1"/><text x="94.2266%" y="543.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="93.9766%" y="517" width="0.0307%" height="15" fill="rgb(229,61,13)" fg:x="3058" fg:w="1"/><text x="94.2266%" y="527.50"></text></g><g><title>do_syscall_64 (1 samples, 0.03%)</title><rect x="93.9766%" y="501" width="0.0307%" height="15" fill="rgb(225,57,24)" fg:x="3058" fg:w="1"/><text x="94.2266%" y="511.50"></text></g><g><title>__x64_sys_recvfrom (1 samples, 0.03%)</title><rect x="93.9766%" y="485" width="0.0307%" height="15" fill="rgb(208,169,48)" fg:x="3058" fg:w="1"/><text x="94.2266%" y="495.50"></text></g><g><title>__sys_recvfrom (1 samples, 0.03%)</title><rect x="93.9766%" y="469" width="0.0307%" height="15" fill="rgb(244,218,51)" fg:x="3058" fg:w="1"/><text x="94.2266%" y="479.50"></text></g><g><title>sock_recvmsg (1 samples, 0.03%)</title><rect x="93.9766%" y="453" width="0.0307%" height="15" fill="rgb(214,148,10)" fg:x="3058" fg:w="1"/><text x="94.2266%" y="463.50"></text></g><g><title>inet_recvmsg (1 samples, 0.03%)</title><rect x="93.9766%" y="437" width="0.0307%" height="15" fill="rgb(225,174,27)" fg:x="3058" fg:w="1"/><text x="94.2266%" y="447.50"></text></g><g><title>udp_recvmsg (1 samples, 0.03%)</title><rect x="93.9766%" y="421" width="0.0307%" height="15" fill="rgb(230,96,26)" fg:x="3058" fg:w="1"/><text x="94.2266%" y="431.50"></text></g><g><title>__consume_stateless_skb (1 samples, 0.03%)</title><rect x="93.9766%" y="405" width="0.0307%" height="15" fill="rgb(232,10,30)" fg:x="3058" fg:w="1"/><text x="94.2266%" y="415.50"></text></g><g><title>skb_release_data (1 samples, 0.03%)</title><rect x="93.9766%" y="389" width="0.0307%" height="15" fill="rgb(222,8,50)" fg:x="3058" fg:w="1"/><text x="94.2266%" y="399.50"></text></g><g><title>__slab_free (1 samples, 0.03%)</title><rect x="93.9766%" y="373" width="0.0307%" height="15" fill="rgb(213,81,27)" fg:x="3058" fg:w="1"/><text x="94.2266%" y="383.50"></text></g><g><title>cmpxchg_double_slab.constprop.0.isra.0 (1 samples, 0.03%)</title><rect x="93.9766%" y="357" width="0.0307%" height="15" fill="rgb(245,50,10)" fg:x="3058" fg:w="1"/><text x="94.2266%" y="367.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.03%)</title><rect x="94.0074%" y="533" width="0.0307%" height="15" fill="rgb(216,100,18)" fg:x="3059" fg:w="1"/><text x="94.2574%" y="543.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (1 samples, 0.03%)</title><rect x="94.0381%" y="517" width="0.0307%" height="15" fill="rgb(236,147,54)" fg:x="3060" fg:w="1"/><text x="94.2881%" y="527.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (1 samples, 0.03%)</title><rect x="94.0381%" y="501" width="0.0307%" height="15" fill="rgb(205,143,26)" fg:x="3060" fg:w="1"/><text x="94.2881%" y="511.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::iter_position (1 samples, 0.03%)</title><rect x="94.0381%" y="485" width="0.0307%" height="15" fill="rgb(236,26,9)" fg:x="3060" fg:w="1"/><text x="94.2881%" y="495.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (2 samples, 0.06%)</title><rect x="94.0381%" y="533" width="0.0615%" height="15" fill="rgb(221,165,53)" fg:x="3060" fg:w="2"/><text x="94.2881%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="94.0688%" y="517" width="0.0307%" height="15" fill="rgb(214,110,17)" fg:x="3061" fg:w="1"/><text x="94.3188%" y="527.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (1 samples, 0.03%)</title><rect x="94.0688%" y="501" width="0.0307%" height="15" fill="rgb(237,197,12)" fg:x="3061" fg:w="1"/><text x="94.3188%" y="511.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (4 samples, 0.12%)</title><rect x="94.0074%" y="549" width="0.1229%" height="15" fill="rgb(205,84,17)" fg:x="3059" fg:w="4"/><text x="94.2574%" y="559.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.03%)</title><rect x="94.0996%" y="533" width="0.0307%" height="15" fill="rgb(237,18,45)" fg:x="3062" fg:w="1"/><text x="94.3496%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.03%)</title><rect x="94.1303%" y="453" width="0.0307%" height="15" fill="rgb(221,87,14)" fg:x="3063" fg:w="1"/><text x="94.3803%" y="463.50"></text></g><g><title>chacha20::avx2_cpuid::init_get (1 samples, 0.03%)</title><rect x="94.1303%" y="437" width="0.0307%" height="15" fill="rgb(238,186,15)" fg:x="3063" fg:w="1"/><text x="94.3803%" y="447.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as crypto_common::KeyIvInit&gt;::new (6 samples, 0.18%)</title><rect x="94.0074%" y="565" width="0.1844%" height="15" fill="rgb(208,115,11)" fg:x="3059" fg:w="6"/><text x="94.2574%" y="575.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (2 samples, 0.06%)</title><rect x="94.1303%" y="549" width="0.0615%" height="15" fill="rgb(254,175,0)" fg:x="3063" fg:w="2"/><text x="94.3803%" y="559.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (2 samples, 0.06%)</title><rect x="94.1303%" y="533" width="0.0615%" height="15" fill="rgb(227,24,42)" fg:x="3063" fg:w="2"/><text x="94.3803%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.06%)</title><rect x="94.1303%" y="517" width="0.0615%" height="15" fill="rgb(223,211,37)" fg:x="3063" fg:w="2"/><text x="94.3803%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.06%)</title><rect x="94.1303%" y="501" width="0.0615%" height="15" fill="rgb(235,49,27)" fg:x="3063" fg:w="2"/><text x="94.3803%" y="511.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.06%)</title><rect x="94.1303%" y="485" width="0.0615%" height="15" fill="rgb(254,97,51)" fg:x="3063" fg:w="2"/><text x="94.3803%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (2 samples, 0.06%)</title><rect x="94.1303%" y="469" width="0.0615%" height="15" fill="rgb(249,51,40)" fg:x="3063" fg:w="2"/><text x="94.3803%" y="479.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.03%)</title><rect x="94.1610%" y="453" width="0.0307%" height="15" fill="rgb(210,128,45)" fg:x="3064" fg:w="1"/><text x="94.4110%" y="463.50"></text></g><g><title>chacha20::backends::avx2::rounds (1 samples, 0.03%)</title><rect x="94.1918%" y="565" width="0.0307%" height="15" fill="rgb(224,137,50)" fg:x="3065" fg:w="1"/><text x="94.4418%" y="575.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::decrypt_in_place_detached (1 samples, 0.03%)</title><rect x="94.2225%" y="565" width="0.0307%" height="15" fill="rgb(242,15,9)" fg:x="3066" fg:w="1"/><text x="94.4725%" y="575.50"></text></g><g><title>universal_hash::UniversalHash::verify (1 samples, 0.03%)</title><rect x="94.2225%" y="549" width="0.0307%" height="15" fill="rgb(233,187,41)" fg:x="3066" fg:w="1"/><text x="94.4725%" y="559.50"></text></g><g><title>&lt;[T] as subtle::ConstantTimeEq&gt;::ct_eq (1 samples, 0.03%)</title><rect x="94.2225%" y="533" width="0.0307%" height="15" fill="rgb(227,2,29)" fg:x="3066" fg:w="1"/><text x="94.4725%" y="543.50"></text></g><g><title>&lt;u8 as subtle::ConstantTimeEq&gt;::ct_eq (1 samples, 0.03%)</title><rect x="94.2225%" y="517" width="0.0307%" height="15" fill="rgb(222,70,3)" fg:x="3066" fg:w="1"/><text x="94.4725%" y="527.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.03%)</title><rect x="94.2225%" y="501" width="0.0307%" height="15" fill="rgb(213,11,42)" fg:x="3066" fg:w="1"/><text x="94.4725%" y="511.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_storeu_si128 (1 samples, 0.03%)</title><rect x="94.2225%" y="485" width="0.0307%" height="15" fill="rgb(225,150,9)" fg:x="3066" fg:w="1"/><text x="94.4725%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_unaligned (1 samples, 0.03%)</title><rect x="94.2225%" y="469" width="0.0307%" height="15" fill="rgb(230,162,45)" fg:x="3066" fg:w="1"/><text x="94.4725%" y="479.50"></text></g><g><title>core::ptr::write_unaligned (1 samples, 0.03%)</title><rect x="94.2225%" y="453" width="0.0307%" height="15" fill="rgb(222,14,52)" fg:x="3066" fg:w="1"/><text x="94.4725%" y="463.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (1 samples, 0.03%)</title><rect x="94.2532%" y="565" width="0.0307%" height="15" fill="rgb(254,198,14)" fg:x="3067" fg:w="1"/><text x="94.5032%" y="575.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.03%)</title><rect x="94.2532%" y="549" width="0.0307%" height="15" fill="rgb(220,217,30)" fg:x="3067" fg:w="1"/><text x="94.5032%" y="559.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.03%)</title><rect x="94.2532%" y="533" width="0.0307%" height="15" fill="rgb(215,146,41)" fg:x="3067" fg:w="1"/><text x="94.5032%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.03%)</title><rect x="94.2532%" y="517" width="0.0307%" height="15" fill="rgb(217,27,36)" fg:x="3067" fg:w="1"/><text x="94.5032%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="94.2532%" y="501" width="0.0307%" height="15" fill="rgb(219,218,39)" fg:x="3067" fg:w="1"/><text x="94.5032%" y="511.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="94.2532%" y="485" width="0.0307%" height="15" fill="rgb(219,4,42)" fg:x="3067" fg:w="1"/><text x="94.5032%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.03%)</title><rect x="94.2532%" y="469" width="0.0307%" height="15" fill="rgb(249,119,36)" fg:x="3067" fg:w="1"/><text x="94.5032%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (4 samples, 0.12%)</title><rect x="94.2840%" y="565" width="0.1229%" height="15" fill="rgb(209,23,33)" fg:x="3068" fg:w="4"/><text x="94.5340%" y="575.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (1 samples, 0.03%)</title><rect x="94.4069%" y="565" width="0.0307%" height="15" fill="rgb(211,10,0)" fg:x="3072" fg:w="1"/><text x="94.6569%" y="575.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (1 samples, 0.03%)</title><rect x="94.4376%" y="565" width="0.0307%" height="15" fill="rgb(208,99,37)" fg:x="3073" fg:w="1"/><text x="94.6876%" y="575.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi32 (1 samples, 0.03%)</title><rect x="94.4376%" y="549" width="0.0307%" height="15" fill="rgb(213,132,31)" fg:x="3073" fg:w="1"/><text x="94.6876%" y="559.50"></text></g><g><title>core::core_arch::simd::i32x8::new (1 samples, 0.03%)</title><rect x="94.4376%" y="533" width="0.0307%" height="15" fill="rgb(243,129,40)" fg:x="3073" fg:w="1"/><text x="94.6876%" y="543.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.03%)</title><rect x="94.4683%" y="565" width="0.0307%" height="15" fill="rgb(210,66,33)" fg:x="3074" fg:w="1"/><text x="94.7183%" y="575.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi64x (1 samples, 0.03%)</title><rect x="94.4683%" y="549" width="0.0307%" height="15" fill="rgb(209,189,4)" fg:x="3074" fg:w="1"/><text x="94.7183%" y="559.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (2 samples, 0.06%)</title><rect x="94.4991%" y="565" width="0.0615%" height="15" fill="rgb(214,107,37)" fg:x="3075" fg:w="2"/><text x="94.7491%" y="575.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (2 samples, 0.06%)</title><rect x="94.4991%" y="549" width="0.0615%" height="15" fill="rgb(245,88,54)" fg:x="3075" fg:w="2"/><text x="94.7491%" y="559.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (2 samples, 0.06%)</title><rect x="94.4991%" y="533" width="0.0615%" height="15" fill="rgb(205,146,20)" fg:x="3075" fg:w="2"/><text x="94.7491%" y="543.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="94.5605%" y="565" width="0.0307%" height="15" fill="rgb(220,161,25)" fg:x="3077" fg:w="1"/><text x="94.8105%" y="575.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="94.5913%" y="565" width="0.0307%" height="15" fill="rgb(215,152,15)" fg:x="3078" fg:w="1"/><text x="94.8413%" y="575.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="94.6220%" y="565" width="0.0307%" height="15" fill="rgb(233,192,44)" fg:x="3079" fg:w="1"/><text x="94.8720%" y="575.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (1 samples, 0.03%)</title><rect x="94.6527%" y="565" width="0.0307%" height="15" fill="rgb(240,170,46)" fg:x="3080" fg:w="1"/><text x="94.9027%" y="575.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (1 samples, 0.03%)</title><rect x="94.6527%" y="549" width="0.0307%" height="15" fill="rgb(207,104,33)" fg:x="3080" fg:w="1"/><text x="94.9027%" y="559.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (2 samples, 0.06%)</title><rect x="94.6835%" y="565" width="0.0615%" height="15" fill="rgb(219,21,39)" fg:x="3081" fg:w="2"/><text x="94.9335%" y="575.50"></text></g><g><title>&lt;tftp::client::encryption_socket::EncryptionBoundSocket&lt;S,Rng&gt; as tftp::socket::Socket&gt;::recv_from (34 samples, 1.04%)</title><rect x="93.7308%" y="629" width="1.0449%" height="15" fill="rgb(214,133,29)" fg:x="3050" fg:w="34"/><text x="93.9808%" y="639.50"></text></g><g><title>tftp::encrypted_packet::EncryptedPacket::decrypt (25 samples, 0.77%)</title><rect x="94.0074%" y="613" width="0.7683%" height="15" fill="rgb(226,93,6)" fg:x="3059" fg:w="25"/><text x="94.2574%" y="623.50"></text></g><g><title>tftp::encryption::Encryptor&lt;R&gt;::decrypt (25 samples, 0.77%)</title><rect x="94.0074%" y="597" width="0.7683%" height="15" fill="rgb(252,222,34)" fg:x="3059" fg:w="25"/><text x="94.2574%" y="607.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (25 samples, 0.77%)</title><rect x="94.0074%" y="581" width="0.7683%" height="15" fill="rgb(252,92,48)" fg:x="3059" fg:w="25"/><text x="94.2574%" y="591.50"></text></g><g><title>str.0 (1 samples, 0.03%)</title><rect x="94.7449%" y="565" width="0.0307%" height="15" fill="rgb(245,223,24)" fg:x="3083" fg:w="1"/><text x="94.9949%" y="575.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.03%)</title><rect x="94.7449%" y="549" width="0.0307%" height="15" fill="rgb(205,176,3)" fg:x="3083" fg:w="1"/><text x="94.9949%" y="559.50"></text></g><g><title>ip_make_skb (1 samples, 0.03%)</title><rect x="94.8064%" y="453" width="0.0307%" height="15" fill="rgb(235,151,15)" fg:x="3085" fg:w="1"/><text x="95.0564%" y="463.50"></text></g><g><title>__ip_make_skb (1 samples, 0.03%)</title><rect x="94.8064%" y="437" width="0.0307%" height="15" fill="rgb(237,209,11)" fg:x="3085" fg:w="1"/><text x="95.0564%" y="447.50"></text></g><g><title>__ip_select_ident (1 samples, 0.03%)</title><rect x="94.8064%" y="421" width="0.0307%" height="15" fill="rgb(243,227,24)" fg:x="3085" fg:w="1"/><text x="95.0564%" y="431.50"></text></g><g><title>__get_random_u32_below (1 samples, 0.03%)</title><rect x="94.8064%" y="405" width="0.0307%" height="15" fill="rgb(239,193,16)" fg:x="3085" fg:w="1"/><text x="95.0564%" y="415.50"></text></g><g><title>get_random_u32 (1 samples, 0.03%)</title><rect x="94.8064%" y="389" width="0.0307%" height="15" fill="rgb(231,27,9)" fg:x="3085" fg:w="1"/><text x="95.0564%" y="399.50"></text></g><g><title>__ip_finish_output (1 samples, 0.03%)</title><rect x="94.8371%" y="421" width="0.0307%" height="15" fill="rgb(219,169,10)" fg:x="3086" fg:w="1"/><text x="95.0871%" y="431.50"></text></g><g><title>&lt;tftp::socket::UdpUnboundSocket as tftp::socket::Socket&gt;::send_to (4 samples, 0.12%)</title><rect x="94.7757%" y="613" width="0.1229%" height="15" fill="rgb(244,229,43)" fg:x="3084" fg:w="4"/><text x="95.0257%" y="623.50"></text></g><g><title>std::net::udp::UdpSocket::send_to (4 samples, 0.12%)</title><rect x="94.7757%" y="597" width="0.1229%" height="15" fill="rgb(254,38,20)" fg:x="3084" fg:w="4"/><text x="95.0257%" y="607.50"></text></g><g><title>std::sys_common::net::UdpSocket::send_to (4 samples, 0.12%)</title><rect x="94.7757%" y="581" width="0.1229%" height="15" fill="rgb(250,47,30)" fg:x="3084" fg:w="4"/><text x="95.0257%" y="591.50"></text></g><g><title>__libc_sendto (4 samples, 0.12%)</title><rect x="94.7757%" y="565" width="0.1229%" height="15" fill="rgb(224,124,36)" fg:x="3084" fg:w="4"/><text x="95.0257%" y="575.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4 samples, 0.12%)</title><rect x="94.7757%" y="549" width="0.1229%" height="15" fill="rgb(246,68,51)" fg:x="3084" fg:w="4"/><text x="95.0257%" y="559.50"></text></g><g><title>do_syscall_64 (3 samples, 0.09%)</title><rect x="94.8064%" y="533" width="0.0922%" height="15" fill="rgb(253,43,49)" fg:x="3085" fg:w="3"/><text x="95.0564%" y="543.50"></text></g><g><title>__x64_sys_sendto (3 samples, 0.09%)</title><rect x="94.8064%" y="517" width="0.0922%" height="15" fill="rgb(219,54,36)" fg:x="3085" fg:w="3"/><text x="95.0564%" y="527.50"></text></g><g><title>__sys_sendto (3 samples, 0.09%)</title><rect x="94.8064%" y="501" width="0.0922%" height="15" fill="rgb(227,133,34)" fg:x="3085" fg:w="3"/><text x="95.0564%" y="511.50"></text></g><g><title>sock_sendmsg (3 samples, 0.09%)</title><rect x="94.8064%" y="485" width="0.0922%" height="15" fill="rgb(247,227,15)" fg:x="3085" fg:w="3"/><text x="95.0564%" y="495.50"></text></g><g><title>udp_sendmsg (3 samples, 0.09%)</title><rect x="94.8064%" y="469" width="0.0922%" height="15" fill="rgb(229,96,14)" fg:x="3085" fg:w="3"/><text x="95.0564%" y="479.50"></text></g><g><title>udp_send_skb (2 samples, 0.06%)</title><rect x="94.8371%" y="453" width="0.0615%" height="15" fill="rgb(220,79,17)" fg:x="3086" fg:w="2"/><text x="95.0871%" y="463.50"></text></g><g><title>ip_send_skb (2 samples, 0.06%)</title><rect x="94.8371%" y="437" width="0.0615%" height="15" fill="rgb(205,131,53)" fg:x="3086" fg:w="2"/><text x="95.0871%" y="447.50"></text></g><g><title>ip_finish_output2 (1 samples, 0.03%)</title><rect x="94.8679%" y="421" width="0.0307%" height="15" fill="rgb(209,50,29)" fg:x="3087" fg:w="1"/><text x="95.1179%" y="431.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="94.8679%" y="405" width="0.0307%" height="15" fill="rgb(245,86,46)" fg:x="3087" fg:w="1"/><text x="95.1179%" y="415.50"></text></g><g><title>do_softirq.part.0 (1 samples, 0.03%)</title><rect x="94.8679%" y="389" width="0.0307%" height="15" fill="rgb(235,66,46)" fg:x="3087" fg:w="1"/><text x="95.1179%" y="399.50"></text></g><g><title>__do_softirq (1 samples, 0.03%)</title><rect x="94.8679%" y="373" width="0.0307%" height="15" fill="rgb(232,148,31)" fg:x="3087" fg:w="1"/><text x="95.1179%" y="383.50"></text></g><g><title>net_rx_action (1 samples, 0.03%)</title><rect x="94.8679%" y="357" width="0.0307%" height="15" fill="rgb(217,149,8)" fg:x="3087" fg:w="1"/><text x="95.1179%" y="367.50"></text></g><g><title>__napi_poll (1 samples, 0.03%)</title><rect x="94.8679%" y="341" width="0.0307%" height="15" fill="rgb(209,183,11)" fg:x="3087" fg:w="1"/><text x="95.1179%" y="351.50"></text></g><g><title>process_backlog (1 samples, 0.03%)</title><rect x="94.8679%" y="325" width="0.0307%" height="15" fill="rgb(208,55,20)" fg:x="3087" fg:w="1"/><text x="95.1179%" y="335.50"></text></g><g><title>__netif_receive_skb_one_core (1 samples, 0.03%)</title><rect x="94.8679%" y="309" width="0.0307%" height="15" fill="rgb(218,39,14)" fg:x="3087" fg:w="1"/><text x="95.1179%" y="319.50"></text></g><g><title>ip_local_deliver_finish (1 samples, 0.03%)</title><rect x="94.8679%" y="293" width="0.0307%" height="15" fill="rgb(216,169,33)" fg:x="3087" fg:w="1"/><text x="95.1179%" y="303.50"></text></g><g><title>ip_protocol_deliver_rcu (1 samples, 0.03%)</title><rect x="94.8679%" y="277" width="0.0307%" height="15" fill="rgb(233,80,24)" fg:x="3087" fg:w="1"/><text x="95.1179%" y="287.50"></text></g><g><title>__udp4_lib_rcv (1 samples, 0.03%)</title><rect x="94.8679%" y="261" width="0.0307%" height="15" fill="rgb(213,179,31)" fg:x="3087" fg:w="1"/><text x="95.1179%" y="271.50"></text></g><g><title>udp_unicast_rcv_skb (1 samples, 0.03%)</title><rect x="94.8679%" y="245" width="0.0307%" height="15" fill="rgb(209,19,5)" fg:x="3087" fg:w="1"/><text x="95.1179%" y="255.50"></text></g><g><title>udp_queue_rcv_one_skb (1 samples, 0.03%)</title><rect x="94.8679%" y="229" width="0.0307%" height="15" fill="rgb(219,18,35)" fg:x="3087" fg:w="1"/><text x="95.1179%" y="239.50"></text></g><g><title>__udp_enqueue_schedule_skb (1 samples, 0.03%)</title><rect x="94.8679%" y="213" width="0.0307%" height="15" fill="rgb(209,169,16)" fg:x="3087" fg:w="1"/><text x="95.1179%" y="223.50"></text></g><g><title>sock_def_readable (1 samples, 0.03%)</title><rect x="94.8679%" y="197" width="0.0307%" height="15" fill="rgb(245,90,51)" fg:x="3087" fg:w="1"/><text x="95.1179%" y="207.50"></text></g><g><title>__wake_up_common_lock (1 samples, 0.03%)</title><rect x="94.8679%" y="181" width="0.0307%" height="15" fill="rgb(220,99,45)" fg:x="3087" fg:w="1"/><text x="95.1179%" y="191.50"></text></g><g><title>__wake_up_common (1 samples, 0.03%)</title><rect x="94.8679%" y="165" width="0.0307%" height="15" fill="rgb(249,89,25)" fg:x="3087" fg:w="1"/><text x="95.1179%" y="175.50"></text></g><g><title>ep_poll_callback (1 samples, 0.03%)</title><rect x="94.8679%" y="149" width="0.0307%" height="15" fill="rgb(239,193,0)" fg:x="3087" fg:w="1"/><text x="95.1179%" y="159.50"></text></g><g><title>__wake_up_common_lock (1 samples, 0.03%)</title><rect x="94.8679%" y="133" width="0.0307%" height="15" fill="rgb(231,126,1)" fg:x="3087" fg:w="1"/><text x="95.1179%" y="143.50"></text></g><g><title>__wake_up_common (1 samples, 0.03%)</title><rect x="94.8679%" y="117" width="0.0307%" height="15" fill="rgb(243,166,3)" fg:x="3087" fg:w="1"/><text x="95.1179%" y="127.50"></text></g><g><title>ep_autoremove_wake_function (1 samples, 0.03%)</title><rect x="94.8679%" y="101" width="0.0307%" height="15" fill="rgb(223,22,34)" fg:x="3087" fg:w="1"/><text x="95.1179%" y="111.50"></text></g><g><title>try_to_wake_up (1 samples, 0.03%)</title><rect x="94.8679%" y="85" width="0.0307%" height="15" fill="rgb(251,52,51)" fg:x="3087" fg:w="1"/><text x="95.1179%" y="95.50"></text></g><g><title>ttwu_queue_wakelist (1 samples, 0.03%)</title><rect x="94.8679%" y="69" width="0.0307%" height="15" fill="rgb(221,165,28)" fg:x="3087" fg:w="1"/><text x="95.1179%" y="79.50"></text></g><g><title>default_send_IPI_single_phys (1 samples, 0.03%)</title><rect x="94.8679%" y="53" width="0.0307%" height="15" fill="rgb(218,121,47)" fg:x="3087" fg:w="1"/><text x="95.1179%" y="63.50"></text></g><g><title>__default_send_IPI_dest_field (1 samples, 0.03%)</title><rect x="94.8679%" y="37" width="0.0307%" height="15" fill="rgb(209,120,9)" fg:x="3087" fg:w="1"/><text x="95.1179%" y="47.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="94.8986%" y="565" width="0.0307%" height="15" fill="rgb(236,68,12)" fg:x="3088" fg:w="1"/><text x="95.1486%" y="575.50"></text></g><g><title>tftp::main (40 samples, 1.23%)</title><rect x="93.7308%" y="677" width="1.2293%" height="15" fill="rgb(225,194,26)" fg:x="3050" fg:w="40"/><text x="93.9808%" y="687.50"></text></g><g><title>tftp::receiver::start_receive (40 samples, 1.23%)</title><rect x="93.7308%" y="661" width="1.2293%" height="15" fill="rgb(231,84,39)" fg:x="3050" fg:w="40"/><text x="93.9808%" y="671.50"></text></g><g><title>tftp::client::receiver::receive_file (40 samples, 1.23%)</title><rect x="93.7308%" y="645" width="1.2293%" height="15" fill="rgb(210,11,45)" fg:x="3050" fg:w="40"/><text x="93.9808%" y="655.50"></text></g><g><title>&lt;tftp::client::encryption_socket::EncryptionBoundSocket&lt;S,Rng&gt; as tftp::socket::Socket&gt;::send_to (6 samples, 0.18%)</title><rect x="94.7757%" y="629" width="0.1844%" height="15" fill="rgb(224,54,52)" fg:x="3084" fg:w="6"/><text x="95.0257%" y="639.50"></text></g><g><title>tftp::encrypted_packet::EncryptedPacket::encrypt (2 samples, 0.06%)</title><rect x="94.8986%" y="613" width="0.0615%" height="15" fill="rgb(238,102,14)" fg:x="3088" fg:w="2"/><text x="95.1486%" y="623.50"></text></g><g><title>tftp::encryption::Encryptor&lt;R&gt;::encrypt (2 samples, 0.06%)</title><rect x="94.8986%" y="597" width="0.0615%" height="15" fill="rgb(243,160,52)" fg:x="3088" fg:w="2"/><text x="95.1486%" y="607.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::encrypt_in_place_detached (2 samples, 0.06%)</title><rect x="94.8986%" y="581" width="0.0615%" height="15" fill="rgb(216,114,19)" fg:x="3088" fg:w="2"/><text x="95.1486%" y="591.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (1 samples, 0.03%)</title><rect x="94.9293%" y="565" width="0.0307%" height="15" fill="rgb(244,166,37)" fg:x="3089" fg:w="1"/><text x="95.1793%" y="575.50"></text></g><g><title>__memcpy_avx_unaligned (1 samples, 0.03%)</title><rect x="94.9600%" y="581" width="0.0307%" height="15" fill="rgb(246,29,44)" fg:x="3090" fg:w="1"/><text x="95.2100%" y="591.50"></text></g><g><title>polling::epoll::read_flags (1 samples, 0.03%)</title><rect x="94.9908%" y="549" width="0.0307%" height="15" fill="rgb(215,56,53)" fg:x="3091" fg:w="1"/><text x="95.2408%" y="559.50"></text></g><g><title>rustix::backend::event::epoll::_::&lt;impl core::ops::bit::BitOr for rustix::backend::event::epoll::EventFlags&gt;::bitor (1 samples, 0.03%)</title><rect x="94.9908%" y="533" width="0.0307%" height="15" fill="rgb(217,60,2)" fg:x="3091" fg:w="1"/><text x="95.2408%" y="543.50"></text></g><g><title>rustix::backend::event::epoll::_::&lt;impl rustix::backend::event::epoll::EventFlags&gt;::union (1 samples, 0.03%)</title><rect x="94.9908%" y="517" width="0.0307%" height="15" fill="rgb(207,26,24)" fg:x="3091" fg:w="1"/><text x="95.2408%" y="527.50"></text></g><g><title>rustix::backend::event::epoll::_::InternalBitFlags::union (1 samples, 0.03%)</title><rect x="94.9908%" y="501" width="0.0307%" height="15" fill="rgb(252,210,15)" fg:x="3091" fg:w="1"/><text x="95.2408%" y="511.50"></text></g><g><title>polling::epoll::Poller::modify (2 samples, 0.06%)</title><rect x="94.9908%" y="581" width="0.0615%" height="15" fill="rgb(253,209,26)" fg:x="3091" fg:w="2"/><text x="95.2408%" y="591.50"></text></g><g><title>polling::epoll::epoll_flags (2 samples, 0.06%)</title><rect x="94.9908%" y="565" width="0.0615%" height="15" fill="rgb(238,170,14)" fg:x="3091" fg:w="2"/><text x="95.2408%" y="575.50"></text></g><g><title>rustix::backend::event::epoll::_::&lt;impl core::ops::bit::BitOrAssign for rustix::backend::event::epoll::EventFlags&gt;::bitor_assign (1 samples, 0.03%)</title><rect x="95.0215%" y="549" width="0.0307%" height="15" fill="rgb(216,178,15)" fg:x="3092" fg:w="1"/><text x="95.2715%" y="559.50"></text></g><g><title>rustix::backend::event::epoll::_::&lt;impl rustix::backend::event::epoll::EventFlags&gt;::insert (1 samples, 0.03%)</title><rect x="95.0215%" y="533" width="0.0307%" height="15" fill="rgb(250,197,2)" fg:x="3092" fg:w="1"/><text x="95.2715%" y="543.50"></text></g><g><title>dequeue_task_fair (1 samples, 0.03%)</title><rect x="95.0522%" y="421" width="0.0307%" height="15" fill="rgb(212,70,42)" fg:x="3093" fg:w="1"/><text x="95.3022%" y="431.50"></text></g><g><title>dequeue_entity (1 samples, 0.03%)</title><rect x="95.0522%" y="405" width="0.0307%" height="15" fill="rgb(227,213,9)" fg:x="3093" fg:w="1"/><text x="95.3022%" y="415.50"></text></g><g><title>update_load_avg (1 samples, 0.03%)</title><rect x="95.0522%" y="389" width="0.0307%" height="15" fill="rgb(245,99,25)" fg:x="3093" fg:w="1"/><text x="95.3022%" y="399.50"></text></g><g><title>__update_load_avg_se (1 samples, 0.03%)</title><rect x="95.0522%" y="373" width="0.0307%" height="15" fill="rgb(250,82,29)" fg:x="3093" fg:w="1"/><text x="95.3022%" y="383.50"></text></g><g><title>__x64_sys_epoll_wait (2 samples, 0.06%)</title><rect x="95.0522%" y="501" width="0.0615%" height="15" fill="rgb(241,226,54)" fg:x="3093" fg:w="2"/><text x="95.3022%" y="511.50"></text></g><g><title>do_epoll_wait (2 samples, 0.06%)</title><rect x="95.0522%" y="485" width="0.0615%" height="15" fill="rgb(221,99,41)" fg:x="3093" fg:w="2"/><text x="95.3022%" y="495.50"></text></g><g><title>schedule_hrtimeout_range_clock (2 samples, 0.06%)</title><rect x="95.0522%" y="469" width="0.0615%" height="15" fill="rgb(213,90,21)" fg:x="3093" fg:w="2"/><text x="95.3022%" y="479.50"></text></g><g><title>schedule (2 samples, 0.06%)</title><rect x="95.0522%" y="453" width="0.0615%" height="15" fill="rgb(205,208,24)" fg:x="3093" fg:w="2"/><text x="95.3022%" y="463.50"></text></g><g><title>__schedule (2 samples, 0.06%)</title><rect x="95.0522%" y="437" width="0.0615%" height="15" fill="rgb(246,31,12)" fg:x="3093" fg:w="2"/><text x="95.3022%" y="447.50"></text></g><g><title>psi_task_switch (1 samples, 0.03%)</title><rect x="95.0830%" y="421" width="0.0307%" height="15" fill="rgb(213,154,6)" fg:x="3094" fg:w="1"/><text x="95.3330%" y="431.50"></text></g><g><title>psi_group_change (1 samples, 0.03%)</title><rect x="95.0830%" y="405" width="0.0307%" height="15" fill="rgb(222,163,29)" fg:x="3094" fg:w="1"/><text x="95.3330%" y="415.50"></text></g><g><title>rustix::backend::arch::asm::syscall4 (3 samples, 0.09%)</title><rect x="95.0522%" y="549" width="0.0922%" height="15" fill="rgb(227,201,8)" fg:x="3093" fg:w="3"/><text x="95.3022%" y="559.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (3 samples, 0.09%)</title><rect x="95.0522%" y="533" width="0.0922%" height="15" fill="rgb(233,9,32)" fg:x="3093" fg:w="3"/><text x="95.3022%" y="543.50"></text></g><g><title>do_syscall_64 (3 samples, 0.09%)</title><rect x="95.0522%" y="517" width="0.0922%" height="15" fill="rgb(217,54,24)" fg:x="3093" fg:w="3"/><text x="95.3022%" y="527.50"></text></g><g><title>syscall_exit_to_user_mode (1 samples, 0.03%)</title><rect x="95.1137%" y="501" width="0.0307%" height="15" fill="rgb(235,192,0)" fg:x="3095" fg:w="1"/><text x="95.3637%" y="511.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.03%)</title><rect x="95.1137%" y="485" width="0.0307%" height="15" fill="rgb(235,45,9)" fg:x="3095" fg:w="1"/><text x="95.3637%" y="495.50"></text></g><g><title>fpregs_restore_userregs (1 samples, 0.03%)</title><rect x="95.1137%" y="469" width="0.0307%" height="15" fill="rgb(246,42,40)" fg:x="3095" fg:w="1"/><text x="95.3637%" y="479.50"></text></g><g><title>rustix::backend::event::epoll::wait (4 samples, 0.12%)</title><rect x="95.0522%" y="581" width="0.1229%" height="15" fill="rgb(248,111,24)" fg:x="3093" fg:w="4"/><text x="95.3022%" y="591.50"></text></g><g><title>rustix::backend::event::syscalls::epoll_wait (4 samples, 0.12%)</title><rect x="95.0522%" y="565" width="0.1229%" height="15" fill="rgb(249,65,22)" fg:x="3093" fg:w="4"/><text x="95.3022%" y="575.50"></text></g><g><title>rustix::backend::conv::ret_usize (1 samples, 0.03%)</title><rect x="95.1444%" y="549" width="0.0307%" height="15" fill="rgb(238,111,51)" fg:x="3096" fg:w="1"/><text x="95.3944%" y="559.50"></text></g><g><title>rustix::backend::io::errno::try_decode_usize (1 samples, 0.03%)</title><rect x="95.1444%" y="533" width="0.0307%" height="15" fill="rgb(250,118,22)" fg:x="3096" fg:w="1"/><text x="95.3944%" y="543.50"></text></g><g><title>rustix::backend::reg::RetReg&lt;Num&gt;::decode_usize (1 samples, 0.03%)</title><rect x="95.1444%" y="517" width="0.0307%" height="15" fill="rgb(234,84,26)" fg:x="3096" fg:w="1"/><text x="95.3944%" y="527.50"></text></g><g><title>core::ops::range::Range&lt;Idx&gt;::contains (1 samples, 0.03%)</title><rect x="95.1444%" y="501" width="0.0307%" height="15" fill="rgb(243,172,12)" fg:x="3096" fg:w="1"/><text x="95.3944%" y="511.50"></text></g><g><title>core::ops::range::RangeBounds::contains (1 samples, 0.03%)</title><rect x="95.1444%" y="485" width="0.0307%" height="15" fill="rgb(236,150,49)" fg:x="3096" fg:w="1"/><text x="95.3944%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (1 samples, 0.03%)</title><rect x="95.1444%" y="469" width="0.0307%" height="15" fill="rgb(225,197,26)" fg:x="3096" fg:w="1"/><text x="95.3944%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for isize&gt;::le (1 samples, 0.03%)</title><rect x="95.1444%" y="453" width="0.0307%" height="15" fill="rgb(214,17,42)" fg:x="3096" fg:w="1"/><text x="95.3944%" y="463.50"></text></g><g><title>rustix::backend::time::types::_::&lt;impl rustix::backend::time::types::TimerfdTimerFlags&gt;::empty (1 samples, 0.03%)</title><rect x="95.1752%" y="581" width="0.0307%" height="15" fill="rgb(224,165,40)" fg:x="3097" fg:w="1"/><text x="95.4252%" y="591.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.03%)</title><rect x="95.2059%" y="549" width="0.0307%" height="15" fill="rgb(246,100,4)" fg:x="3098" fg:w="1"/><text x="95.4559%" y="559.50"></text></g><g><title>rustix::backend::conv::&lt;impl core::convert::From&lt;std::os::fd::owned::BorrowedFd&gt; for rustix::backend::reg::ArgReg&lt;Num&gt;&gt;::from (1 samples, 0.03%)</title><rect x="95.2059%" y="533" width="0.0307%" height="15" fill="rgb(222,103,0)" fg:x="3098" fg:w="1"/><text x="95.4559%" y="543.50"></text></g><g><title>rustix::backend::conv::raw_fd (1 samples, 0.03%)</title><rect x="95.2059%" y="517" width="0.0307%" height="15" fill="rgb(227,189,26)" fg:x="3098" fg:w="1"/><text x="95.4559%" y="527.50"></text></g><g><title>rustix::backend::conv::pass_usize (1 samples, 0.03%)</title><rect x="95.2059%" y="501" width="0.0307%" height="15" fill="rgb(214,202,17)" fg:x="3098" fg:w="1"/><text x="95.4559%" y="511.50"></text></g><g><title>rustix::backend::reg::raw_arg (1 samples, 0.03%)</title><rect x="95.2059%" y="485" width="0.0307%" height="15" fill="rgb(229,111,3)" fg:x="3098" fg:w="1"/><text x="95.4559%" y="495.50"></text></g><g><title>&lt;tftp::socket::UdpUnboundSocket as tftp::socket::Socket&gt;::recv_from (10 samples, 0.31%)</title><rect x="94.9600%" y="629" width="0.3073%" height="15" fill="rgb(229,172,15)" fg:x="3090" fg:w="10"/><text x="95.2100%" y="639.50"></text></g><g><title>polling::Poller::wait (10 samples, 0.31%)</title><rect x="94.9600%" y="613" width="0.3073%" height="15" fill="rgb(230,224,35)" fg:x="3090" fg:w="10"/><text x="95.2100%" y="623.50"></text></g><g><title>polling::epoll::Poller::wait (10 samples, 0.31%)</title><rect x="94.9600%" y="597" width="0.3073%" height="15" fill="rgb(251,141,6)" fg:x="3090" fg:w="10"/><text x="95.2100%" y="607.50"></text></g><g><title>rustix::time::timerfd::timerfd_settime (2 samples, 0.06%)</title><rect x="95.2059%" y="581" width="0.0615%" height="15" fill="rgb(225,208,6)" fg:x="3098" fg:w="2"/><text x="95.4559%" y="591.50"></text></g><g><title>rustix::backend::time::syscalls::timerfd_settime (2 samples, 0.06%)</title><rect x="95.2059%" y="565" width="0.0615%" height="15" fill="rgb(246,181,16)" fg:x="3098" fg:w="2"/><text x="95.4559%" y="575.50"></text></g><g><title>rustix::backend::arch::asm::syscall4 (1 samples, 0.03%)</title><rect x="95.2366%" y="549" width="0.0307%" height="15" fill="rgb(227,129,36)" fg:x="3099" fg:w="1"/><text x="95.4866%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (1 samples, 0.03%)</title><rect x="95.2674%" y="533" width="0.0307%" height="15" fill="rgb(248,117,24)" fg:x="3100" fg:w="1"/><text x="95.5174%" y="543.50"></text></g><g><title>&lt;core::slice::iter::ChunksExact&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (1 samples, 0.03%)</title><rect x="95.2981%" y="533" width="0.0307%" height="15" fill="rgb(214,185,35)" fg:x="3101" fg:w="1"/><text x="95.5481%" y="543.50"></text></g><g><title>core::slice::raw::from_raw_parts (1 samples, 0.03%)</title><rect x="95.2981%" y="517" width="0.0307%" height="15" fill="rgb(236,150,34)" fg:x="3101" fg:w="1"/><text x="95.5481%" y="527.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.03%)</title><rect x="95.2981%" y="501" width="0.0307%" height="15" fill="rgb(243,228,27)" fg:x="3101" fg:w="1"/><text x="95.5481%" y="511.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (1 samples, 0.03%)</title><rect x="95.2981%" y="485" width="0.0307%" height="15" fill="rgb(245,77,44)" fg:x="3101" fg:w="1"/><text x="95.5481%" y="495.50"></text></g><g><title>chacha20::xchacha::quarter_round (12 samples, 0.37%)</title><rect x="95.3288%" y="533" width="0.3688%" height="15" fill="rgb(235,214,42)" fg:x="3102" fg:w="12"/><text x="95.5788%" y="543.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.03%)</title><rect x="95.6669%" y="517" width="0.0307%" height="15" fill="rgb(221,74,3)" fg:x="3113" fg:w="1"/><text x="95.9169%" y="527.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as crypto_common::KeyIvInit&gt;::new (15 samples, 0.46%)</title><rect x="95.2674%" y="581" width="0.4610%" height="15" fill="rgb(206,121,29)" fg:x="3100" fg:w="15"/><text x="95.5174%" y="591.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (15 samples, 0.46%)</title><rect x="95.2674%" y="565" width="0.4610%" height="15" fill="rgb(249,131,53)" fg:x="3100" fg:w="15"/><text x="95.5174%" y="575.50"></text></g><g><title>chacha20::xchacha::hchacha (15 samples, 0.46%)</title><rect x="95.2674%" y="549" width="0.4610%" height="15" fill="rgb(236,170,29)" fg:x="3100" fg:w="15"/><text x="95.5174%" y="559.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.03%)</title><rect x="95.6976%" y="533" width="0.0307%" height="15" fill="rgb(247,96,15)" fg:x="3114" fg:w="1"/><text x="95.9476%" y="543.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.03%)</title><rect x="95.6976%" y="517" width="0.0307%" height="15" fill="rgb(211,210,7)" fg:x="3114" fg:w="1"/><text x="95.9476%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.03%)</title><rect x="95.6976%" y="501" width="0.0307%" height="15" fill="rgb(240,88,50)" fg:x="3114" fg:w="1"/><text x="95.9476%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="95.6976%" y="485" width="0.0307%" height="15" fill="rgb(209,229,26)" fg:x="3114" fg:w="1"/><text x="95.9476%" y="495.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="95.6976%" y="469" width="0.0307%" height="15" fill="rgb(210,68,23)" fg:x="3114" fg:w="1"/><text x="95.9476%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.03%)</title><rect x="95.6976%" y="453" width="0.0307%" height="15" fill="rgb(229,180,13)" fg:x="3114" fg:w="1"/><text x="95.9476%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.03%)</title><rect x="95.6976%" y="437" width="0.0307%" height="15" fill="rgb(236,53,44)" fg:x="3114" fg:w="1"/><text x="95.9476%" y="447.50"></text></g><g><title>chacha20::xchacha::quarter_round (1 samples, 0.03%)</title><rect x="95.6976%" y="421" width="0.0307%" height="15" fill="rgb(244,214,29)" fg:x="3114" fg:w="1"/><text x="95.9476%" y="431.50"></text></g><g><title>[tftp] (1 samples, 0.03%)</title><rect x="95.7283%" y="581" width="0.0307%" height="15" fill="rgb(220,75,29)" fg:x="3115" fg:w="1"/><text x="95.9783%" y="591.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="95.7283%" y="565" width="0.0307%" height="15" fill="rgb(214,183,37)" fg:x="3115" fg:w="1"/><text x="95.9783%" y="575.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="95.7591%" y="581" width="0.0307%" height="15" fill="rgb(239,117,29)" fg:x="3116" fg:w="1"/><text x="96.0091%" y="591.50"></text></g><g><title>&lt;poly1305::backend::avx2::State as universal_hash::UhfBackend&gt;::proc_block (1 samples, 0.03%)</title><rect x="95.7898%" y="485" width="0.0307%" height="15" fill="rgb(237,171,35)" fg:x="3117" fg:w="1"/><text x="96.0398%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.03%)</title><rect x="95.7898%" y="469" width="0.0307%" height="15" fill="rgb(229,178,53)" fg:x="3117" fg:w="1"/><text x="96.0398%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.03%)</title><rect x="95.8205%" y="453" width="0.0307%" height="15" fill="rgb(210,102,19)" fg:x="3118" fg:w="1"/><text x="96.0705%" y="463.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="95.8513%" y="453" width="0.0307%" height="15" fill="rgb(235,127,22)" fg:x="3119" fg:w="1"/><text x="96.1013%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.03%)</title><rect x="95.8820%" y="437" width="0.0307%" height="15" fill="rgb(244,31,31)" fg:x="3120" fg:w="1"/><text x="96.1320%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.03%)</title><rect x="95.9127%" y="437" width="0.0307%" height="15" fill="rgb(231,43,21)" fg:x="3121" fg:w="1"/><text x="96.1627%" y="447.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="95.9435%" y="437" width="0.0307%" height="15" fill="rgb(217,131,35)" fg:x="3122" fg:w="1"/><text x="96.1935%" y="447.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="95.9435%" y="421" width="0.0307%" height="15" fill="rgb(221,149,4)" fg:x="3122" fg:w="1"/><text x="96.1935%" y="431.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="95.9435%" y="405" width="0.0307%" height="15" fill="rgb(232,170,28)" fg:x="3122" fg:w="1"/><text x="96.1935%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (5 samples, 0.15%)</title><rect x="95.9742%" y="437" width="0.1537%" height="15" fill="rgb(238,56,10)" fg:x="3123" fg:w="5"/><text x="96.2242%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.03%)</title><rect x="96.1278%" y="437" width="0.0307%" height="15" fill="rgb(235,196,14)" fg:x="3128" fg:w="1"/><text x="96.3778%" y="447.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::decrypt_in_place_detached (1 samples, 0.03%)</title><rect x="96.1586%" y="421" width="0.0307%" height="15" fill="rgb(216,45,48)" fg:x="3129" fg:w="1"/><text x="96.4086%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (2 samples, 0.06%)</title><rect x="96.1893%" y="421" width="0.0615%" height="15" fill="rgb(238,213,17)" fg:x="3130" fg:w="2"/><text x="96.4393%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.03%)</title><rect x="96.4352%" y="405" width="0.0307%" height="15" fill="rgb(212,13,2)" fg:x="3138" fg:w="1"/><text x="96.6852%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (8 samples, 0.25%)</title><rect x="96.2508%" y="421" width="0.2459%" height="15" fill="rgb(240,114,20)" fg:x="3132" fg:w="8"/><text x="96.5008%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_blend_epi32 (1 samples, 0.03%)</title><rect x="96.4659%" y="405" width="0.0307%" height="15" fill="rgb(228,41,40)" fg:x="3139" fg:w="1"/><text x="96.7159%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_blend_epi32 (1 samples, 0.03%)</title><rect x="96.4966%" y="421" width="0.0307%" height="15" fill="rgb(244,132,35)" fg:x="3140" fg:w="1"/><text x="96.7466%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (3 samples, 0.09%)</title><rect x="96.5274%" y="421" width="0.0922%" height="15" fill="rgb(253,189,4)" fg:x="3141" fg:w="3"/><text x="96.7774%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (2 samples, 0.06%)</title><rect x="96.6195%" y="405" width="0.0615%" height="15" fill="rgb(224,37,19)" fg:x="3144" fg:w="2"/><text x="96.8695%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (1 samples, 0.03%)</title><rect x="96.6810%" y="405" width="0.0307%" height="15" fill="rgb(235,223,18)" fg:x="3146" fg:w="1"/><text x="96.9310%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.06%)</title><rect x="96.7117%" y="405" width="0.0615%" height="15" fill="rgb(235,163,25)" fg:x="3147" fg:w="2"/><text x="96.9617%" y="415.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (1 samples, 0.03%)</title><rect x="96.7732%" y="405" width="0.0307%" height="15" fill="rgb(217,145,28)" fg:x="3149" fg:w="1"/><text x="97.0232%" y="415.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (1 samples, 0.03%)</title><rect x="96.7732%" y="389" width="0.0307%" height="15" fill="rgb(223,223,32)" fg:x="3149" fg:w="1"/><text x="97.0232%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (10 samples, 0.31%)</title><rect x="96.6195%" y="421" width="0.3073%" height="15" fill="rgb(227,189,39)" fg:x="3144" fg:w="10"/><text x="96.8695%" y="431.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (4 samples, 0.12%)</title><rect x="96.8039%" y="405" width="0.1229%" height="15" fill="rgb(248,10,22)" fg:x="3150" fg:w="4"/><text x="97.0539%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi64 (1 samples, 0.03%)</title><rect x="96.9269%" y="421" width="0.0307%" height="15" fill="rgb(248,46,39)" fg:x="3154" fg:w="1"/><text x="97.1769%" y="431.50"></text></g><g><title>core::core_arch::simd::u64x4::splat (1 samples, 0.03%)</title><rect x="96.9269%" y="405" width="0.0307%" height="15" fill="rgb(248,113,48)" fg:x="3154" fg:w="1"/><text x="97.1769%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (7 samples, 0.22%)</title><rect x="96.9576%" y="421" width="0.2151%" height="15" fill="rgb(245,16,25)" fg:x="3155" fg:w="7"/><text x="97.2076%" y="431.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (1 samples, 0.03%)</title><rect x="97.1420%" y="405" width="0.0307%" height="15" fill="rgb(249,152,16)" fg:x="3161" fg:w="1"/><text x="97.3920%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.03%)</title><rect x="97.1727%" y="405" width="0.0307%" height="15" fill="rgb(250,16,1)" fg:x="3162" fg:w="1"/><text x="97.4227%" y="415.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi64x (1 samples, 0.03%)</title><rect x="97.2034%" y="405" width="0.0307%" height="15" fill="rgb(249,138,3)" fg:x="3163" fg:w="1"/><text x="97.4534%" y="415.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi64x (1 samples, 0.03%)</title><rect x="97.2034%" y="389" width="0.0307%" height="15" fill="rgb(227,71,41)" fg:x="3163" fg:w="1"/><text x="97.4534%" y="399.50"></text></g><g><title>core::core_arch::simd::i64x4::new (1 samples, 0.03%)</title><rect x="97.2034%" y="373" width="0.0307%" height="15" fill="rgb(209,184,23)" fg:x="3163" fg:w="1"/><text x="97.4534%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_unpackhi_epi64 (3 samples, 0.09%)</title><rect x="97.1727%" y="421" width="0.0922%" height="15" fill="rgb(223,215,31)" fg:x="3162" fg:w="3"/><text x="97.4227%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="97.2342%" y="405" width="0.0307%" height="15" fill="rgb(210,146,28)" fg:x="3164" fg:w="1"/><text x="97.4842%" y="415.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.03%)</title><rect x="97.2342%" y="389" width="0.0307%" height="15" fill="rgb(209,183,41)" fg:x="3164" fg:w="1"/><text x="97.4842%" y="399.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (1 samples, 0.03%)</title><rect x="97.2649%" y="405" width="0.0307%" height="15" fill="rgb(209,224,45)" fg:x="3165" fg:w="1"/><text x="97.5149%" y="415.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (1 samples, 0.03%)</title><rect x="97.2649%" y="389" width="0.0307%" height="15" fill="rgb(224,209,51)" fg:x="3165" fg:w="1"/><text x="97.5149%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_unpacklo_epi64 (2 samples, 0.06%)</title><rect x="97.2649%" y="421" width="0.0615%" height="15" fill="rgb(223,17,39)" fg:x="3165" fg:w="2"/><text x="97.5149%" y="431.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (1 samples, 0.03%)</title><rect x="97.2956%" y="405" width="0.0307%" height="15" fill="rgb(234,204,37)" fg:x="3166" fg:w="1"/><text x="97.5456%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.06%)</title><rect x="97.3264%" y="421" width="0.0615%" height="15" fill="rgb(236,120,5)" fg:x="3167" fg:w="2"/><text x="97.5764%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (7 samples, 0.22%)</title><rect x="97.3878%" y="421" width="0.2151%" height="15" fill="rgb(248,97,27)" fg:x="3169" fg:w="7"/><text x="97.6378%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (2 samples, 0.06%)</title><rect x="97.6030%" y="421" width="0.0615%" height="15" fill="rgb(240,66,17)" fg:x="3176" fg:w="2"/><text x="97.8530%" y="431.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (4 samples, 0.12%)</title><rect x="97.6644%" y="421" width="0.1229%" height="15" fill="rgb(210,79,3)" fg:x="3178" fg:w="4"/><text x="97.9144%" y="431.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (4 samples, 0.12%)</title><rect x="97.6644%" y="405" width="0.1229%" height="15" fill="rgb(214,176,27)" fg:x="3178" fg:w="4"/><text x="97.9144%" y="415.50"></text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_loaded_blocks (59 samples, 1.81%)</title><rect x="96.1586%" y="437" width="1.8132%" height="15" fill="rgb(235,185,3)" fg:x="3129" fg:w="59"/><text x="96.4086%" y="447.50">p..</text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (6 samples, 0.18%)</title><rect x="97.7873%" y="421" width="0.1844%" height="15" fill="rgb(227,24,12)" fg:x="3182" fg:w="6"/><text x="98.0373%" y="431.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::decrypt_in_place_detached (74 samples, 2.27%)</title><rect x="95.7898%" y="581" width="2.2741%" height="15" fill="rgb(252,169,48)" fg:x="3117" fg:w="74"/><text x="96.0398%" y="591.50">c..</text></g><g><title>universal_hash::UniversalHash::update_padded (74 samples, 2.27%)</title><rect x="95.7898%" y="565" width="2.2741%" height="15" fill="rgb(212,65,1)" fg:x="3117" fg:w="74"/><text x="96.0398%" y="575.50">u..</text></g><g><title>universal_hash::UniversalHash::update (74 samples, 2.27%)</title><rect x="95.7898%" y="549" width="2.2741%" height="15" fill="rgb(242,39,24)" fg:x="3117" fg:w="74"/><text x="96.0398%" y="559.50">u..</text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (74 samples, 2.27%)</title><rect x="95.7898%" y="533" width="2.2741%" height="15" fill="rgb(249,32,23)" fg:x="3117" fg:w="74"/><text x="96.0398%" y="543.50">&lt;..</text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (74 samples, 2.27%)</title><rect x="95.7898%" y="517" width="2.2741%" height="15" fill="rgb(251,195,23)" fg:x="3117" fg:w="74"/><text x="96.0398%" y="527.50">&lt;..</text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (74 samples, 2.27%)</title><rect x="95.7898%" y="501" width="2.2741%" height="15" fill="rgb(236,174,8)" fg:x="3117" fg:w="74"/><text x="96.0398%" y="511.50">&lt;..</text></g><g><title>&lt;poly1305::backend::avx2::State as universal_hash::UhfBackend&gt;::proc_par_blocks (73 samples, 2.24%)</title><rect x="95.8205%" y="485" width="2.2434%" height="15" fill="rgb(220,197,8)" fg:x="3118" fg:w="73"/><text x="96.0705%" y="495.50">&lt;..</text></g><g><title>poly1305::backend::avx2::State::compute_par_blocks (73 samples, 2.24%)</title><rect x="95.8205%" y="469" width="2.2434%" height="15" fill="rgb(240,108,37)" fg:x="3118" fg:w="73"/><text x="96.0705%" y="479.50">p..</text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_par_blocks (71 samples, 2.18%)</title><rect x="95.8820%" y="453" width="2.1819%" height="15" fill="rgb(232,176,24)" fg:x="3120" fg:w="71"/><text x="96.1320%" y="463.50">p..</text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (3 samples, 0.09%)</title><rect x="97.9717%" y="437" width="0.0922%" height="15" fill="rgb(243,35,29)" fg:x="3188" fg:w="3"/><text x="98.2217%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="98.0639%" y="581" width="0.0307%" height="15" fill="rgb(210,37,18)" fg:x="3191" fg:w="1"/><text x="98.3139%" y="591.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.03%)</title><rect x="98.0947%" y="581" width="0.0307%" height="15" fill="rgb(224,184,40)" fg:x="3192" fg:w="1"/><text x="98.3447%" y="591.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_castsi256_si128 (1 samples, 0.03%)</title><rect x="98.1254%" y="581" width="0.0307%" height="15" fill="rgb(236,39,29)" fg:x="3193" fg:w="1"/><text x="98.3754%" y="591.50"></text></g><g><title>&lt;tftp::client::encryption_socket::EncryptionBoundSocket&lt;S,Rng&gt; as tftp::socket::Socket&gt;::recv_from (105 samples, 3.23%)</title><rect x="94.9600%" y="645" width="3.2268%" height="15" fill="rgb(232,48,39)" fg:x="3090" fg:w="105"/><text x="95.2100%" y="655.50">&lt;tf..</text></g><g><title>tftp::encrypted_packet::EncryptedPacket::decrypt (95 samples, 2.92%)</title><rect x="95.2674%" y="629" width="2.9195%" height="15" fill="rgb(236,34,42)" fg:x="3100" fg:w="95"/><text x="95.5174%" y="639.50">tf..</text></g><g><title>tftp::encryption::Encryptor&lt;R&gt;::decrypt (95 samples, 2.92%)</title><rect x="95.2674%" y="613" width="2.9195%" height="15" fill="rgb(243,106,37)" fg:x="3100" fg:w="95"/><text x="95.5174%" y="623.50">tf..</text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (95 samples, 2.92%)</title><rect x="95.2674%" y="597" width="2.9195%" height="15" fill="rgb(218,96,6)" fg:x="3100" fg:w="95"/><text x="95.5174%" y="607.50">&lt;c..</text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="98.1561%" y="581" width="0.0307%" height="15" fill="rgb(235,130,12)" fg:x="3194" fg:w="1"/><text x="98.4061%" y="591.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as crypto_common::KeyIvInit&gt;::new (1 samples, 0.03%)</title><rect x="98.1868%" y="581" width="0.0307%" height="15" fill="rgb(231,95,0)" fg:x="3195" fg:w="1"/><text x="98.4368%" y="591.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (1 samples, 0.03%)</title><rect x="98.1868%" y="565" width="0.0307%" height="15" fill="rgb(228,12,23)" fg:x="3195" fg:w="1"/><text x="98.4368%" y="575.50"></text></g><g><title>chacha20::xchacha::hchacha (1 samples, 0.03%)</title><rect x="98.1868%" y="549" width="0.0307%" height="15" fill="rgb(216,12,1)" fg:x="3195" fg:w="1"/><text x="98.4368%" y="559.50"></text></g><g><title>chacha20::xchacha::quarter_round (1 samples, 0.03%)</title><rect x="98.1868%" y="533" width="0.0307%" height="15" fill="rgb(219,59,3)" fg:x="3195" fg:w="1"/><text x="98.4368%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.03%)</title><rect x="98.2176%" y="437" width="0.0307%" height="15" fill="rgb(215,208,46)" fg:x="3196" fg:w="1"/><text x="98.4676%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.03%)</title><rect x="98.2483%" y="421" width="0.0307%" height="15" fill="rgb(254,224,29)" fg:x="3197" fg:w="1"/><text x="98.4983%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (2 samples, 0.06%)</title><rect x="98.2790%" y="421" width="0.0615%" height="15" fill="rgb(232,14,29)" fg:x="3198" fg:w="2"/><text x="98.5290%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (1 samples, 0.03%)</title><rect x="98.3405%" y="421" width="0.0307%" height="15" fill="rgb(208,45,52)" fg:x="3200" fg:w="1"/><text x="98.5905%" y="431.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (1 samples, 0.03%)</title><rect x="98.3405%" y="405" width="0.0307%" height="15" fill="rgb(234,191,28)" fg:x="3200" fg:w="1"/><text x="98.5905%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (1 samples, 0.03%)</title><rect x="98.3712%" y="421" width="0.0307%" height="15" fill="rgb(244,67,43)" fg:x="3201" fg:w="1"/><text x="98.6212%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="98.4020%" y="421" width="0.0307%" height="15" fill="rgb(236,189,24)" fg:x="3202" fg:w="1"/><text x="98.6520%" y="431.50"></text></g><g><title>[unknown] (2,811 samples, 86.39%)</title><rect x="12.0774%" y="693" width="86.3860%" height="15" fill="rgb(239,214,33)" fg:x="393" fg:w="2811"/><text x="12.3274%" y="703.50">[unknown]</text></g><g><title>tftp::receiver::start_receive (114 samples, 3.50%)</title><rect x="94.9600%" y="677" width="3.5034%" height="15" fill="rgb(226,176,41)" fg:x="3090" fg:w="114"/><text x="95.2100%" y="687.50">tft..</text></g><g><title>tftp::client::receiver::receive_file (114 samples, 3.50%)</title><rect x="94.9600%" y="661" width="3.5034%" height="15" fill="rgb(248,47,8)" fg:x="3090" fg:w="114"/><text x="95.2100%" y="671.50">tft..</text></g><g><title>&lt;tftp::client::encryption_socket::EncryptionBoundSocket&lt;S,Rng&gt; as tftp::socket::Socket&gt;::send_to (9 samples, 0.28%)</title><rect x="98.1868%" y="645" width="0.2766%" height="15" fill="rgb(218,81,44)" fg:x="3195" fg:w="9"/><text x="98.4368%" y="655.50"></text></g><g><title>tftp::encrypted_packet::EncryptedPacket::encrypt (9 samples, 0.28%)</title><rect x="98.1868%" y="629" width="0.2766%" height="15" fill="rgb(213,98,6)" fg:x="3195" fg:w="9"/><text x="98.4368%" y="639.50"></text></g><g><title>tftp::encryption::Encryptor&lt;R&gt;::encrypt (9 samples, 0.28%)</title><rect x="98.1868%" y="613" width="0.2766%" height="15" fill="rgb(222,85,22)" fg:x="3195" fg:w="9"/><text x="98.4368%" y="623.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::encrypt_in_place_detached (9 samples, 0.28%)</title><rect x="98.1868%" y="597" width="0.2766%" height="15" fill="rgb(239,46,39)" fg:x="3195" fg:w="9"/><text x="98.4368%" y="607.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::encrypt_in_place_detached (8 samples, 0.25%)</title><rect x="98.2176%" y="581" width="0.2459%" height="15" fill="rgb(237,12,29)" fg:x="3196" fg:w="8"/><text x="98.4676%" y="591.50"></text></g><g><title>universal_hash::UniversalHash::update_padded (8 samples, 0.25%)</title><rect x="98.2176%" y="565" width="0.2459%" height="15" fill="rgb(214,77,8)" fg:x="3196" fg:w="8"/><text x="98.4676%" y="575.50"></text></g><g><title>universal_hash::UniversalHash::update (8 samples, 0.25%)</title><rect x="98.2176%" y="549" width="0.2459%" height="15" fill="rgb(217,168,37)" fg:x="3196" fg:w="8"/><text x="98.4676%" y="559.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (8 samples, 0.25%)</title><rect x="98.2176%" y="533" width="0.2459%" height="15" fill="rgb(221,217,23)" fg:x="3196" fg:w="8"/><text x="98.4676%" y="543.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (8 samples, 0.25%)</title><rect x="98.2176%" y="517" width="0.2459%" height="15" fill="rgb(243,229,36)" fg:x="3196" fg:w="8"/><text x="98.4676%" y="527.50"></text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (8 samples, 0.25%)</title><rect x="98.2176%" y="501" width="0.2459%" height="15" fill="rgb(251,163,40)" fg:x="3196" fg:w="8"/><text x="98.4676%" y="511.50"></text></g><g><title>&lt;poly1305::backend::avx2::State as universal_hash::UhfBackend&gt;::proc_par_blocks (8 samples, 0.25%)</title><rect x="98.2176%" y="485" width="0.2459%" height="15" fill="rgb(237,222,12)" fg:x="3196" fg:w="8"/><text x="98.4676%" y="495.50"></text></g><g><title>poly1305::backend::avx2::State::compute_par_blocks (8 samples, 0.25%)</title><rect x="98.2176%" y="469" width="0.2459%" height="15" fill="rgb(248,132,6)" fg:x="3196" fg:w="8"/><text x="98.4676%" y="479.50"></text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_par_blocks (8 samples, 0.25%)</title><rect x="98.2176%" y="453" width="0.2459%" height="15" fill="rgb(227,167,50)" fg:x="3196" fg:w="8"/><text x="98.4676%" y="463.50"></text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_loaded_blocks (7 samples, 0.22%)</title><rect x="98.2483%" y="437" width="0.2151%" height="15" fill="rgb(242,84,37)" fg:x="3197" fg:w="7"/><text x="98.4983%" y="447.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (1 samples, 0.03%)</title><rect x="98.4327%" y="421" width="0.0307%" height="15" fill="rgb(212,4,50)" fg:x="3203" fg:w="1"/><text x="98.6827%" y="431.50"></text></g><g><title>&lt;tftp::client::encryption_socket::EncryptionBoundSocket&lt;S,Rng&gt; as tftp::socket::Socket&gt;::recv_from (2 samples, 0.06%)</title><rect x="98.4942%" y="373" width="0.0615%" height="15" fill="rgb(230,228,32)" fg:x="3205" fg:w="2"/><text x="98.7442%" y="383.50"></text></g><g><title>tftp::encrypted_packet::EncryptedPacket::decrypt (2 samples, 0.06%)</title><rect x="98.4942%" y="357" width="0.0615%" height="15" fill="rgb(248,217,23)" fg:x="3205" fg:w="2"/><text x="98.7442%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;tftp::writers::single_block_writer::SingleBlockWriter&lt;std::fs::File&gt;&gt; (1 samples, 0.03%)</title><rect x="98.5556%" y="373" width="0.0307%" height="15" fill="rgb(238,197,32)" fg:x="3207" fg:w="1"/><text x="98.8056%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::fs::File&gt; (1 samples, 0.03%)</title><rect x="98.5556%" y="357" width="0.0307%" height="15" fill="rgb(236,106,1)" fg:x="3207" fg:w="1"/><text x="98.8056%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fs::File&gt; (1 samples, 0.03%)</title><rect x="98.5556%" y="341" width="0.0307%" height="15" fill="rgb(219,228,13)" fg:x="3207" fg:w="1"/><text x="98.8056%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fd::FileDesc&gt; (1 samples, 0.03%)</title><rect x="98.5556%" y="325" width="0.0307%" height="15" fill="rgb(238,30,35)" fg:x="3207" fg:w="1"/><text x="98.8056%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::os::fd::owned::OwnedFd&gt; (1 samples, 0.03%)</title><rect x="98.5556%" y="309" width="0.0307%" height="15" fill="rgb(236,70,23)" fg:x="3207" fg:w="1"/><text x="98.8056%" y="319.50"></text></g><g><title>&lt;std::os::fd::owned::OwnedFd as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="98.5556%" y="293" width="0.0307%" height="15" fill="rgb(249,104,48)" fg:x="3207" fg:w="1"/><text x="98.8056%" y="303.50"></text></g><g><title>__GI___close (1 samples, 0.03%)</title><rect x="98.5556%" y="277" width="0.0307%" height="15" fill="rgb(254,117,50)" fg:x="3207" fg:w="1"/><text x="98.8056%" y="287.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="98.5556%" y="261" width="0.0307%" height="15" fill="rgb(223,152,4)" fg:x="3207" fg:w="1"/><text x="98.8056%" y="271.50"></text></g><g><title>do_syscall_64 (1 samples, 0.03%)</title><rect x="98.5556%" y="245" width="0.0307%" height="15" fill="rgb(245,6,2)" fg:x="3207" fg:w="1"/><text x="98.8056%" y="255.50"></text></g><g><title>syscall_exit_to_user_mode (1 samples, 0.03%)</title><rect x="98.5556%" y="229" width="0.0307%" height="15" fill="rgb(249,150,24)" fg:x="3207" fg:w="1"/><text x="98.8056%" y="239.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.03%)</title><rect x="98.5556%" y="213" width="0.0307%" height="15" fill="rgb(228,185,42)" fg:x="3207" fg:w="1"/><text x="98.8056%" y="223.50"></text></g><g><title>task_work_run (1 samples, 0.03%)</title><rect x="98.5556%" y="197" width="0.0307%" height="15" fill="rgb(226,39,33)" fg:x="3207" fg:w="1"/><text x="98.8056%" y="207.50"></text></g><g><title>__fput (1 samples, 0.03%)</title><rect x="98.5556%" y="181" width="0.0307%" height="15" fill="rgb(221,166,19)" fg:x="3207" fg:w="1"/><text x="98.8056%" y="191.50"></text></g><g><title>ext4_release_file (1 samples, 0.03%)</title><rect x="98.5556%" y="165" width="0.0307%" height="15" fill="rgb(209,109,2)" fg:x="3207" fg:w="1"/><text x="98.8056%" y="175.50"></text></g><g><title>__filemap_fdatawrite_range (1 samples, 0.03%)</title><rect x="98.5556%" y="149" width="0.0307%" height="15" fill="rgb(252,216,26)" fg:x="3207" fg:w="1"/><text x="98.8056%" y="159.50"></text></g><g><title>filemap_fdatawrite_wbc (1 samples, 0.03%)</title><rect x="98.5556%" y="133" width="0.0307%" height="15" fill="rgb(227,173,36)" fg:x="3207" fg:w="1"/><text x="98.8056%" y="143.50"></text></g><g><title>do_writepages (1 samples, 0.03%)</title><rect x="98.5556%" y="117" width="0.0307%" height="15" fill="rgb(209,90,7)" fg:x="3207" fg:w="1"/><text x="98.8056%" y="127.50"></text></g><g><title>ext4_writepages (1 samples, 0.03%)</title><rect x="98.5556%" y="101" width="0.0307%" height="15" fill="rgb(250,194,11)" fg:x="3207" fg:w="1"/><text x="98.8056%" y="111.50"></text></g><g><title>ext4_do_writepages (1 samples, 0.03%)</title><rect x="98.5556%" y="85" width="0.0307%" height="15" fill="rgb(220,72,50)" fg:x="3207" fg:w="1"/><text x="98.8056%" y="95.50"></text></g><g><title>mpage_prepare_extent_to_map (1 samples, 0.03%)</title><rect x="98.5556%" y="69" width="0.0307%" height="15" fill="rgb(222,106,48)" fg:x="3207" fg:w="1"/><text x="98.8056%" y="79.50"></text></g><g><title>filemap_get_folios_tag (1 samples, 0.03%)</title><rect x="98.5556%" y="53" width="0.0307%" height="15" fill="rgb(216,220,45)" fg:x="3207" fg:w="1"/><text x="98.8056%" y="63.50"></text></g><g><title>tftp::buffer::resize_buffer (2 samples, 0.06%)</title><rect x="98.5864%" y="373" width="0.0615%" height="15" fill="rgb(234,112,18)" fg:x="3208" fg:w="2"/><text x="98.8364%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (2 samples, 0.06%)</title><rect x="98.5864%" y="357" width="0.0615%" height="15" fill="rgb(206,179,9)" fg:x="3208" fg:w="2"/><text x="98.8364%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (2 samples, 0.06%)</title><rect x="98.5864%" y="341" width="0.0615%" height="15" fill="rgb(215,115,40)" fg:x="3208" fg:w="2"/><text x="98.8364%" y="351.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.03%)</title><rect x="98.6171%" y="325" width="0.0307%" height="15" fill="rgb(222,69,34)" fg:x="3209" fg:w="1"/><text x="98.8671%" y="335.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.03%)</title><rect x="98.6171%" y="309" width="0.0307%" height="15" fill="rgb(209,161,10)" fg:x="3209" fg:w="1"/><text x="98.8671%" y="319.50"></text></g><g><title>tftp::config::ConnectionOptions::block_size_with_encryption (2 samples, 0.06%)</title><rect x="98.6478%" y="373" width="0.0615%" height="15" fill="rgb(217,6,38)" fg:x="3210" fg:w="2"/><text x="98.8978%" y="383.50"></text></g><g><title>tftp::config::ConnectionOptions::is_encrypting (1 samples, 0.03%)</title><rect x="98.6785%" y="357" width="0.0307%" height="15" fill="rgb(229,229,48)" fg:x="3211" fg:w="1"/><text x="98.9285%" y="367.50"></text></g><g><title>__libc_start_main_impl (9 samples, 0.28%)</title><rect x="98.4634%" y="677" width="0.2766%" height="15" fill="rgb(225,21,28)" fg:x="3204" fg:w="9"/><text x="98.7134%" y="687.50"></text></g><g><title>__libc_start_call_main (9 samples, 0.28%)</title><rect x="98.4634%" y="661" width="0.2766%" height="15" fill="rgb(206,33,13)" fg:x="3204" fg:w="9"/><text x="98.7134%" y="671.50"></text></g><g><title>main (9 samples, 0.28%)</title><rect x="98.4634%" y="645" width="0.2766%" height="15" fill="rgb(242,178,17)" fg:x="3204" fg:w="9"/><text x="98.7134%" y="655.50"></text></g><g><title>std::rt::lang_start (9 samples, 0.28%)</title><rect x="98.4634%" y="629" width="0.2766%" height="15" fill="rgb(220,162,5)" fg:x="3204" fg:w="9"/><text x="98.7134%" y="639.50"></text></g><g><title>std::rt::lang_start_internal (9 samples, 0.28%)</title><rect x="98.4634%" y="613" width="0.2766%" height="15" fill="rgb(210,33,43)" fg:x="3204" fg:w="9"/><text x="98.7134%" y="623.50"></text></g><g><title>std::panic::catch_unwind (9 samples, 0.28%)</title><rect x="98.4634%" y="597" width="0.2766%" height="15" fill="rgb(216,116,54)" fg:x="3204" fg:w="9"/><text x="98.7134%" y="607.50"></text></g><g><title>std::panicking::try (9 samples, 0.28%)</title><rect x="98.4634%" y="581" width="0.2766%" height="15" fill="rgb(249,92,24)" fg:x="3204" fg:w="9"/><text x="98.7134%" y="591.50"></text></g><g><title>std::panicking::try::do_call (9 samples, 0.28%)</title><rect x="98.4634%" y="565" width="0.2766%" height="15" fill="rgb(231,189,14)" fg:x="3204" fg:w="9"/><text x="98.7134%" y="575.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (9 samples, 0.28%)</title><rect x="98.4634%" y="549" width="0.2766%" height="15" fill="rgb(230,8,41)" fg:x="3204" fg:w="9"/><text x="98.7134%" y="559.50"></text></g><g><title>std::panic::catch_unwind (9 samples, 0.28%)</title><rect x="98.4634%" y="533" width="0.2766%" height="15" fill="rgb(249,7,27)" fg:x="3204" fg:w="9"/><text x="98.7134%" y="543.50"></text></g><g><title>std::panicking::try (9 samples, 0.28%)</title><rect x="98.4634%" y="517" width="0.2766%" height="15" fill="rgb(232,86,5)" fg:x="3204" fg:w="9"/><text x="98.7134%" y="527.50"></text></g><g><title>std::panicking::try::do_call (9 samples, 0.28%)</title><rect x="98.4634%" y="501" width="0.2766%" height="15" fill="rgb(224,175,18)" fg:x="3204" fg:w="9"/><text x="98.7134%" y="511.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (9 samples, 0.28%)</title><rect x="98.4634%" y="485" width="0.2766%" height="15" fill="rgb(220,129,12)" fg:x="3204" fg:w="9"/><text x="98.7134%" y="495.50"></text></g><g><title>std::rt::lang_start::{{closure}} (9 samples, 0.28%)</title><rect x="98.4634%" y="469" width="0.2766%" height="15" fill="rgb(210,19,36)" fg:x="3204" fg:w="9"/><text x="98.7134%" y="479.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (9 samples, 0.28%)</title><rect x="98.4634%" y="453" width="0.2766%" height="15" fill="rgb(219,96,14)" fg:x="3204" fg:w="9"/><text x="98.7134%" y="463.50"></text></g><g><title>core::ops::function::FnOnce::call_once (9 samples, 0.28%)</title><rect x="98.4634%" y="437" width="0.2766%" height="15" fill="rgb(249,106,1)" fg:x="3204" fg:w="9"/><text x="98.7134%" y="447.50"></text></g><g><title>tftp::main (9 samples, 0.28%)</title><rect x="98.4634%" y="421" width="0.2766%" height="15" fill="rgb(249,155,20)" fg:x="3204" fg:w="9"/><text x="98.7134%" y="431.50"></text></g><g><title>tftp::receiver::start_receive (9 samples, 0.28%)</title><rect x="98.4634%" y="405" width="0.2766%" height="15" fill="rgb(244,168,9)" fg:x="3204" fg:w="9"/><text x="98.7134%" y="415.50"></text></g><g><title>tftp::client::receiver::receive_file (9 samples, 0.28%)</title><rect x="98.4634%" y="389" width="0.2766%" height="15" fill="rgb(216,23,50)" fg:x="3204" fg:w="9"/><text x="98.7134%" y="399.50"></text></g><g><title>tftp::io::instant_callback (1 samples, 0.03%)</title><rect x="98.7093%" y="373" width="0.0307%" height="15" fill="rgb(224,219,20)" fg:x="3212" fg:w="1"/><text x="98.9593%" y="383.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.03%)</title><rect x="98.7093%" y="357" width="0.0307%" height="15" fill="rgb(222,156,15)" fg:x="3212" fg:w="1"/><text x="98.9593%" y="367.50"></text></g><g><title>std::sys::unix::time::Instant::now (1 samples, 0.03%)</title><rect x="98.7093%" y="341" width="0.0307%" height="15" fill="rgb(231,97,17)" fg:x="3212" fg:w="1"/><text x="98.9593%" y="351.50"></text></g><g><title>_start (10 samples, 0.31%)</title><rect x="98.4634%" y="693" width="0.3073%" height="15" fill="rgb(218,70,48)" fg:x="3204" fg:w="10"/><text x="98.7134%" y="703.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="98.7400%" y="677" width="0.0307%" height="15" fill="rgb(212,196,52)" fg:x="3213" fg:w="1"/><text x="98.9900%" y="687.50"></text></g><g><title>do_syscall_64 (1 samples, 0.03%)</title><rect x="98.7400%" y="661" width="0.0307%" height="15" fill="rgb(243,203,18)" fg:x="3213" fg:w="1"/><text x="98.9900%" y="671.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.03%)</title><rect x="98.7400%" y="645" width="0.0307%" height="15" fill="rgb(252,125,41)" fg:x="3213" fg:w="1"/><text x="98.9900%" y="655.50"></text></g><g><title>do_execveat_common.isra.0 (1 samples, 0.03%)</title><rect x="98.7400%" y="629" width="0.0307%" height="15" fill="rgb(223,180,33)" fg:x="3213" fg:w="1"/><text x="98.9900%" y="639.50"></text></g><g><title>bprm_execve (1 samples, 0.03%)</title><rect x="98.7400%" y="613" width="0.0307%" height="15" fill="rgb(254,159,46)" fg:x="3213" fg:w="1"/><text x="98.9900%" y="623.50"></text></g><g><title>task_numa_free (1 samples, 0.03%)</title><rect x="98.7400%" y="597" width="0.0307%" height="15" fill="rgb(254,38,10)" fg:x="3213" fg:w="1"/><text x="98.9900%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (1 samples, 0.03%)</title><rect x="98.7707%" y="693" width="0.0307%" height="15" fill="rgb(208,217,32)" fg:x="3214" fg:w="1"/><text x="99.0207%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (1 samples, 0.03%)</title><rect x="98.7707%" y="677" width="0.0307%" height="15" fill="rgb(221,120,13)" fg:x="3214" fg:w="1"/><text x="99.0207%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::set_len_on_drop::SetLenOnDrop&gt; (1 samples, 0.03%)</title><rect x="98.7707%" y="661" width="0.0307%" height="15" fill="rgb(246,54,52)" fg:x="3214" fg:w="1"/><text x="99.0207%" y="671.50"></text></g><g><title>&lt;tftp::socket::UdpUnboundSocket as tftp::socket::Socket&gt;::send_to (1 samples, 0.03%)</title><rect x="98.7707%" y="645" width="0.0307%" height="15" fill="rgb(242,34,25)" fg:x="3214" fg:w="1"/><text x="99.0207%" y="655.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.03%)</title><rect x="98.7707%" y="629" width="0.0307%" height="15" fill="rgb(247,209,9)" fg:x="3214" fg:w="1"/><text x="99.0207%" y="639.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.03%)</title><rect x="98.7707%" y="613" width="0.0307%" height="15" fill="rgb(228,71,26)" fg:x="3214" fg:w="1"/><text x="99.0207%" y="623.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.03%)</title><rect x="98.7707%" y="597" width="0.0307%" height="15" fill="rgb(222,145,49)" fg:x="3214" fg:w="1"/><text x="99.0207%" y="607.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.03%)</title><rect x="98.7707%" y="581" width="0.0307%" height="15" fill="rgb(218,121,17)" fg:x="3214" fg:w="1"/><text x="99.0207%" y="591.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.03%)</title><rect x="98.8015%" y="693" width="0.0307%" height="15" fill="rgb(244,50,7)" fg:x="3215" fg:w="1"/><text x="99.0515%" y="703.50"></text></g><g><title>exc_page_fault (1 samples, 0.03%)</title><rect x="98.8015%" y="677" width="0.0307%" height="15" fill="rgb(246,229,37)" fg:x="3215" fg:w="1"/><text x="99.0515%" y="687.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.03%)</title><rect x="98.8015%" y="661" width="0.0307%" height="15" fill="rgb(225,18,5)" fg:x="3215" fg:w="1"/><text x="99.0515%" y="671.50"></text></g><g><title>handle_mm_fault (1 samples, 0.03%)</title><rect x="98.8015%" y="645" width="0.0307%" height="15" fill="rgb(213,204,8)" fg:x="3215" fg:w="1"/><text x="99.0515%" y="655.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.03%)</title><rect x="98.8015%" y="629" width="0.0307%" height="15" fill="rgb(238,103,6)" fg:x="3215" fg:w="1"/><text x="99.0515%" y="639.50"></text></g><g><title>do_fault (1 samples, 0.03%)</title><rect x="98.8015%" y="613" width="0.0307%" height="15" fill="rgb(222,25,35)" fg:x="3215" fg:w="1"/><text x="99.0515%" y="623.50"></text></g><g><title>filemap_map_pages (1 samples, 0.03%)</title><rect x="98.8015%" y="597" width="0.0307%" height="15" fill="rgb(213,203,35)" fg:x="3215" fg:w="1"/><text x="99.0515%" y="607.50"></text></g><g><title>next_uptodate_page (1 samples, 0.03%)</title><rect x="98.8015%" y="581" width="0.0307%" height="15" fill="rgb(221,79,53)" fg:x="3215" fg:w="1"/><text x="99.0515%" y="591.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="98.8322%" y="693" width="0.0307%" height="15" fill="rgb(243,200,35)" fg:x="3216" fg:w="1"/><text x="99.0822%" y="703.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.03%)</title><rect x="98.8322%" y="677" width="0.0307%" height="15" fill="rgb(248,60,25)" fg:x="3216" fg:w="1"/><text x="99.0822%" y="687.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (1 samples, 0.03%)</title><rect x="98.8629%" y="693" width="0.0307%" height="15" fill="rgb(227,53,46)" fg:x="3217" fg:w="1"/><text x="99.1129%" y="703.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="98.8629%" y="677" width="0.0307%" height="15" fill="rgb(216,120,32)" fg:x="3217" fg:w="1"/><text x="99.1129%" y="687.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (1 samples, 0.03%)</title><rect x="98.8937%" y="677" width="0.0307%" height="15" fill="rgb(220,134,1)" fg:x="3218" fg:w="1"/><text x="99.1437%" y="687.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (2 samples, 0.06%)</title><rect x="98.8937%" y="693" width="0.0615%" height="15" fill="rgb(237,168,5)" fg:x="3218" fg:w="2"/><text x="99.1437%" y="703.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="98.9244%" y="677" width="0.0307%" height="15" fill="rgb(231,100,33)" fg:x="3219" fg:w="1"/><text x="99.1744%" y="687.50"></text></g><g><title>_copy_from_user (3 samples, 0.09%)</title><rect x="98.9551%" y="645" width="0.0922%" height="15" fill="rgb(236,177,47)" fg:x="3220" fg:w="3"/><text x="99.2051%" y="655.50"></text></g><g><title>copy_user_generic_string (2 samples, 0.06%)</title><rect x="98.9859%" y="629" width="0.0615%" height="15" fill="rgb(235,7,49)" fg:x="3221" fg:w="2"/><text x="99.2359%" y="639.50"></text></g><g><title>__fget_light (1 samples, 0.03%)</title><rect x="99.2010%" y="629" width="0.0307%" height="15" fill="rgb(232,119,22)" fg:x="3228" fg:w="1"/><text x="99.4510%" y="639.50"></text></g><g><title>_raw_write_lock_irq (1 samples, 0.03%)</title><rect x="99.2317%" y="629" width="0.0307%" height="15" fill="rgb(254,73,53)" fg:x="3229" fg:w="1"/><text x="99.4817%" y="639.50"></text></g><g><title>preempt_count_add (1 samples, 0.03%)</title><rect x="99.2317%" y="613" width="0.0307%" height="15" fill="rgb(251,35,20)" fg:x="3229" fg:w="1"/><text x="99.4817%" y="623.50"></text></g><g><title>in_lock_functions (1 samples, 0.03%)</title><rect x="99.2317%" y="597" width="0.0307%" height="15" fill="rgb(241,119,20)" fg:x="3229" fg:w="1"/><text x="99.4817%" y="607.50"></text></g><g><title>__x64_sys_epoll_ctl (13 samples, 0.40%)</title><rect x="98.9551%" y="661" width="0.3995%" height="15" fill="rgb(207,102,14)" fg:x="3220" fg:w="13"/><text x="99.2051%" y="671.50"></text></g><g><title>do_epoll_ctl (10 samples, 0.31%)</title><rect x="99.0473%" y="645" width="0.3073%" height="15" fill="rgb(248,201,50)" fg:x="3223" fg:w="10"/><text x="99.2973%" y="655.50"></text></g><g><title>ep_item_poll.isra.0 (3 samples, 0.09%)</title><rect x="99.2624%" y="629" width="0.0922%" height="15" fill="rgb(222,185,44)" fg:x="3230" fg:w="3"/><text x="99.5124%" y="639.50"></text></g><g><title>sock_poll (2 samples, 0.06%)</title><rect x="99.2932%" y="613" width="0.0615%" height="15" fill="rgb(218,107,18)" fg:x="3231" fg:w="2"/><text x="99.5432%" y="623.50"></text></g><g><title>udp_poll (1 samples, 0.03%)</title><rect x="99.3239%" y="597" width="0.0307%" height="15" fill="rgb(237,177,39)" fg:x="3232" fg:w="1"/><text x="99.5739%" y="607.50"></text></g><g><title>__x64_sys_epoll_wait (1 samples, 0.03%)</title><rect x="99.3546%" y="661" width="0.0307%" height="15" fill="rgb(246,69,6)" fg:x="3233" fg:w="1"/><text x="99.6046%" y="671.50"></text></g><g><title>do_epoll_wait (1 samples, 0.03%)</title><rect x="99.3546%" y="645" width="0.0307%" height="15" fill="rgb(234,208,37)" fg:x="3233" fg:w="1"/><text x="99.6046%" y="655.50"></text></g><g><title>__put_user_nocheck_8 (1 samples, 0.03%)</title><rect x="99.3546%" y="629" width="0.0307%" height="15" fill="rgb(225,4,6)" fg:x="3233" fg:w="1"/><text x="99.6046%" y="639.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.03%)</title><rect x="99.3854%" y="661" width="0.0307%" height="15" fill="rgb(233,45,0)" fg:x="3234" fg:w="1"/><text x="99.6354%" y="671.50"></text></g><g><title>do_execveat_common.isra.0 (1 samples, 0.03%)</title><rect x="99.3854%" y="645" width="0.0307%" height="15" fill="rgb(226,136,5)" fg:x="3234" fg:w="1"/><text x="99.6354%" y="655.50"></text></g><g><title>bprm_execve (1 samples, 0.03%)</title><rect x="99.3854%" y="629" width="0.0307%" height="15" fill="rgb(211,91,47)" fg:x="3234" fg:w="1"/><text x="99.6354%" y="639.50"></text></g><g><title>load_elf_binary (1 samples, 0.03%)</title><rect x="99.3854%" y="613" width="0.0307%" height="15" fill="rgb(242,88,51)" fg:x="3234" fg:w="1"/><text x="99.6354%" y="623.50"></text></g><g><title>setup_new_exec (1 samples, 0.03%)</title><rect x="99.3854%" y="597" width="0.0307%" height="15" fill="rgb(230,91,28)" fg:x="3234" fg:w="1"/><text x="99.6354%" y="607.50"></text></g><g><title>arch_pick_mmap_layout (1 samples, 0.03%)</title><rect x="99.3854%" y="581" width="0.0307%" height="15" fill="rgb(254,186,29)" fg:x="3234" fg:w="1"/><text x="99.6354%" y="591.50"></text></g><g><title>get_random_u64 (1 samples, 0.03%)</title><rect x="99.3854%" y="565" width="0.0307%" height="15" fill="rgb(238,6,4)" fg:x="3234" fg:w="1"/><text x="99.6354%" y="575.50"></text></g><g><title>_get_random_bytes (1 samples, 0.03%)</title><rect x="99.3854%" y="549" width="0.0307%" height="15" fill="rgb(221,151,16)" fg:x="3234" fg:w="1"/><text x="99.6354%" y="559.50"></text></g><g><title>crng_make_state (1 samples, 0.03%)</title><rect x="99.3854%" y="533" width="0.0307%" height="15" fill="rgb(251,143,52)" fg:x="3234" fg:w="1"/><text x="99.6354%" y="543.50"></text></g><g><title>crng_fast_key_erasure (1 samples, 0.03%)</title><rect x="99.3854%" y="517" width="0.0307%" height="15" fill="rgb(206,90,15)" fg:x="3234" fg:w="1"/><text x="99.6354%" y="527.50"></text></g><g><title>chacha_block_generic (1 samples, 0.03%)</title><rect x="99.3854%" y="501" width="0.0307%" height="15" fill="rgb(218,35,8)" fg:x="3234" fg:w="1"/><text x="99.6354%" y="511.50"></text></g><g><title>chacha_permute (1 samples, 0.03%)</title><rect x="99.3854%" y="485" width="0.0307%" height="15" fill="rgb(239,215,6)" fg:x="3234" fg:w="1"/><text x="99.6354%" y="495.50"></text></g><g><title>__x64_sys_getrandom (2 samples, 0.06%)</title><rect x="99.4161%" y="661" width="0.0615%" height="15" fill="rgb(245,116,39)" fg:x="3235" fg:w="2"/><text x="99.6661%" y="671.50"></text></g><g><title>get_random_bytes_user (2 samples, 0.06%)</title><rect x="99.4161%" y="645" width="0.0615%" height="15" fill="rgb(242,65,28)" fg:x="3235" fg:w="2"/><text x="99.6661%" y="655.50"></text></g><g><title>crng_make_state (2 samples, 0.06%)</title><rect x="99.4161%" y="629" width="0.0615%" height="15" fill="rgb(252,132,53)" fg:x="3235" fg:w="2"/><text x="99.6661%" y="639.50"></text></g><g><title>crng_fast_key_erasure (2 samples, 0.06%)</title><rect x="99.4161%" y="613" width="0.0615%" height="15" fill="rgb(224,159,50)" fg:x="3235" fg:w="2"/><text x="99.6661%" y="623.50"></text></g><g><title>chacha_block_generic (2 samples, 0.06%)</title><rect x="99.4161%" y="597" width="0.0615%" height="15" fill="rgb(224,93,4)" fg:x="3235" fg:w="2"/><text x="99.6661%" y="607.50"></text></g><g><title>__check_object_size (2 samples, 0.06%)</title><rect x="99.4776%" y="581" width="0.0615%" height="15" fill="rgb(208,81,34)" fg:x="3237" fg:w="2"/><text x="99.7276%" y="591.50"></text></g><g><title>__check_heap_object (1 samples, 0.03%)</title><rect x="99.5083%" y="565" width="0.0307%" height="15" fill="rgb(233,92,54)" fg:x="3238" fg:w="1"/><text x="99.7583%" y="575.50"></text></g><g><title>__skb_try_recv_from_queue (1 samples, 0.03%)</title><rect x="99.5698%" y="565" width="0.0307%" height="15" fill="rgb(237,21,14)" fg:x="3240" fg:w="1"/><text x="99.8198%" y="575.50"></text></g><g><title>__x64_sys_recvfrom (5 samples, 0.15%)</title><rect x="99.4776%" y="661" width="0.1537%" height="15" fill="rgb(249,128,51)" fg:x="3237" fg:w="5"/><text x="99.7276%" y="671.50"></text></g><g><title>__sys_recvfrom (5 samples, 0.15%)</title><rect x="99.4776%" y="645" width="0.1537%" height="15" fill="rgb(223,129,24)" fg:x="3237" fg:w="5"/><text x="99.7276%" y="655.50"></text></g><g><title>sock_recvmsg (5 samples, 0.15%)</title><rect x="99.4776%" y="629" width="0.1537%" height="15" fill="rgb(231,168,25)" fg:x="3237" fg:w="5"/><text x="99.7276%" y="639.50"></text></g><g><title>inet_recvmsg (5 samples, 0.15%)</title><rect x="99.4776%" y="613" width="0.1537%" height="15" fill="rgb(224,39,20)" fg:x="3237" fg:w="5"/><text x="99.7276%" y="623.50"></text></g><g><title>udp_recvmsg (5 samples, 0.15%)</title><rect x="99.4776%" y="597" width="0.1537%" height="15" fill="rgb(225,152,53)" fg:x="3237" fg:w="5"/><text x="99.7276%" y="607.50"></text></g><g><title>__skb_recv_udp (3 samples, 0.09%)</title><rect x="99.5390%" y="581" width="0.0922%" height="15" fill="rgb(252,17,24)" fg:x="3239" fg:w="3"/><text x="99.7890%" y="591.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="99.6005%" y="565" width="0.0307%" height="15" fill="rgb(250,114,30)" fg:x="3241" fg:w="1"/><text x="99.8505%" y="575.50"></text></g><g><title>hrtimer_start_range_ns (2 samples, 0.06%)</title><rect x="99.6620%" y="629" width="0.0615%" height="15" fill="rgb(229,5,4)" fg:x="3243" fg:w="2"/><text x="99.9120%" y="639.50"></text></g><g><title>enqueue_hrtimer (2 samples, 0.06%)</title><rect x="99.6620%" y="613" width="0.0615%" height="15" fill="rgb(225,176,49)" fg:x="3243" fg:w="2"/><text x="99.9120%" y="623.50"></text></g><g><title>timerqueue_add (1 samples, 0.03%)</title><rect x="99.6927%" y="597" width="0.0307%" height="15" fill="rgb(224,221,49)" fg:x="3244" fg:w="1"/><text x="99.9427%" y="607.50"></text></g><g><title>rb_insert_color (1 samples, 0.03%)</title><rect x="99.6927%" y="581" width="0.0307%" height="15" fill="rgb(253,169,27)" fg:x="3244" fg:w="1"/><text x="99.9427%" y="591.50"></text></g><g><title>__remove_hrtimer (1 samples, 0.03%)</title><rect x="99.7234%" y="613" width="0.0307%" height="15" fill="rgb(211,206,16)" fg:x="3245" fg:w="1"/><text x="99.9734%" y="623.50"></text></g><g><title>timerqueue_del (1 samples, 0.03%)</title><rect x="99.7234%" y="597" width="0.0307%" height="15" fill="rgb(244,87,35)" fg:x="3245" fg:w="1"/><text x="99.9734%" y="607.50"></text></g><g><title>rb_erase (1 samples, 0.03%)</title><rect x="99.7234%" y="581" width="0.0307%" height="15" fill="rgb(246,28,10)" fg:x="3245" fg:w="1"/><text x="99.9734%" y="591.50"></text></g><g><title>__x64_sys_timerfd_settime (5 samples, 0.15%)</title><rect x="99.6312%" y="661" width="0.1537%" height="15" fill="rgb(229,12,44)" fg:x="3242" fg:w="5"/><text x="99.8812%" y="671.50"></text></g><g><title>do_timerfd_settime (5 samples, 0.15%)</title><rect x="99.6312%" y="645" width="0.1537%" height="15" fill="rgb(210,145,37)" fg:x="3242" fg:w="5"/><text x="99.8812%" y="655.50"></text></g><g><title>hrtimer_try_to_cancel (2 samples, 0.06%)</title><rect x="99.7234%" y="629" width="0.0615%" height="15" fill="rgb(227,112,52)" fg:x="3245" fg:w="2"/><text x="99.9734%" y="639.50"></text></g><g><title>hrtimer_active (1 samples, 0.03%)</title><rect x="99.7541%" y="613" width="0.0307%" height="15" fill="rgb(238,155,34)" fg:x="3246" fg:w="1"/><text x="100.0041%" y="623.50"></text></g><g><title>ksys_read (1 samples, 0.03%)</title><rect x="99.7849%" y="661" width="0.0307%" height="15" fill="rgb(239,226,36)" fg:x="3247" fg:w="1"/><text x="100.0349%" y="671.50"></text></g><g><title>vfs_read (1 samples, 0.03%)</title><rect x="99.7849%" y="645" width="0.0307%" height="15" fill="rgb(230,16,23)" fg:x="3247" fg:w="1"/><text x="100.0349%" y="655.50"></text></g><g><title>file_modified_flags (1 samples, 0.03%)</title><rect x="99.8463%" y="613" width="0.0307%" height="15" fill="rgb(236,171,36)" fg:x="3249" fg:w="1"/><text x="100.0963%" y="623.50"></text></g><g><title>folio_wait_stable (1 samples, 0.03%)</title><rect x="99.8771%" y="581" width="0.0307%" height="15" fill="rgb(221,22,14)" fg:x="3250" fg:w="1"/><text x="100.1271%" y="591.50"></text></g><g><title>ext4_buffered_write_iter (3 samples, 0.09%)</title><rect x="99.8463%" y="629" width="0.0922%" height="15" fill="rgb(242,43,11)" fg:x="3249" fg:w="3"/><text x="100.0963%" y="639.50"></text></g><g><title>generic_perform_write (2 samples, 0.06%)</title><rect x="99.8771%" y="613" width="0.0615%" height="15" fill="rgb(232,69,23)" fg:x="3250" fg:w="2"/><text x="100.1271%" y="623.50"></text></g><g><title>ext4_da_write_begin (2 samples, 0.06%)</title><rect x="99.8771%" y="597" width="0.0615%" height="15" fill="rgb(216,180,54)" fg:x="3250" fg:w="2"/><text x="100.1271%" y="607.50"></text></g><g><title>pagecache_get_page (1 samples, 0.03%)</title><rect x="99.9078%" y="581" width="0.0307%" height="15" fill="rgb(216,5,24)" fg:x="3251" fg:w="1"/><text x="100.1578%" y="591.50"></text></g><g><title>__filemap_get_folio (1 samples, 0.03%)</title><rect x="99.9078%" y="565" width="0.0307%" height="15" fill="rgb(225,89,9)" fg:x="3251" fg:w="1"/><text x="100.1578%" y="575.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (33 samples, 1.01%)</title><rect x="98.9551%" y="693" width="1.0141%" height="15" fill="rgb(243,75,33)" fg:x="3220" fg:w="33"/><text x="99.2051%" y="703.50"></text></g><g><title>do_syscall_64 (33 samples, 1.01%)</title><rect x="98.9551%" y="677" width="1.0141%" height="15" fill="rgb(247,141,45)" fg:x="3220" fg:w="33"/><text x="99.2051%" y="687.50"></text></g><g><title>ksys_write (5 samples, 0.15%)</title><rect x="99.8156%" y="661" width="0.1537%" height="15" fill="rgb(232,177,36)" fg:x="3248" fg:w="5"/><text x="100.0656%" y="671.50"></text></g><g><title>vfs_write (4 samples, 0.12%)</title><rect x="99.8463%" y="645" width="0.1229%" height="15" fill="rgb(219,125,36)" fg:x="3249" fg:w="4"/><text x="100.0963%" y="655.50"></text></g><g><title>security_file_permission (1 samples, 0.03%)</title><rect x="99.9385%" y="629" width="0.0307%" height="15" fill="rgb(227,94,9)" fg:x="3252" fg:w="1"/><text x="100.1885%" y="639.50"></text></g><g><title>apparmor_file_permission (1 samples, 0.03%)</title><rect x="99.9385%" y="613" width="0.0307%" height="15" fill="rgb(240,34,52)" fg:x="3252" fg:w="1"/><text x="100.1885%" y="623.50"></text></g><g><title>all (3,254 samples, 100%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(216,45,12)" fg:x="0" fg:w="3254"/><text x="0.2500%" y="735.50"></text></g><g><title>tftp (3,250 samples, 99.88%)</title><rect x="0.1229%" y="709" width="99.8771%" height="15" fill="rgb(246,21,19)" fg:x="4" fg:w="3250"/><text x="0.3729%" y="719.50">tftp</text></g><g><title>syscall_return_via_sysret (1 samples, 0.03%)</title><rect x="99.9693%" y="693" width="0.0307%" height="15" fill="rgb(213,98,42)" fg:x="3253" fg:w="1"/><text x="100.2193%" y="703.50"></text></g></svg></svg>