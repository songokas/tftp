<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="518" onload="init(evt)" viewBox="0 0 1200 518" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="518" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="501.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="501.00"> </text><svg id="frames" x="10" width="1180" total_samples="3514"><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.03%)</title><rect x="0.1138%" y="421" width="0.0285%" height="15" fill="rgb(227,0,7)" fg:x="4" fg:w="1"/><text x="0.3638%" y="431.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.03%)</title><rect x="0.1138%" y="405" width="0.0285%" height="15" fill="rgb(217,0,24)" fg:x="4" fg:w="1"/><text x="0.3638%" y="415.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.03%)</title><rect x="0.1138%" y="389" width="0.0285%" height="15" fill="rgb(221,193,54)" fg:x="4" fg:w="1"/><text x="0.3638%" y="399.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.03%)</title><rect x="0.1138%" y="373" width="0.0285%" height="15" fill="rgb(248,212,6)" fg:x="4" fg:w="1"/><text x="0.3638%" y="383.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.03%)</title><rect x="0.1138%" y="357" width="0.0285%" height="15" fill="rgb(208,68,35)" fg:x="4" fg:w="1"/><text x="0.3638%" y="367.50"></text></g><g><title>[ld-linux-x86-64.so.2] (6 samples, 0.17%)</title><rect x="0.0000%" y="437" width="0.1707%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="6"/><text x="0.2500%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="0.1423%" y="421" width="0.0285%" height="15" fill="rgb(207,160,47)" fg:x="5" fg:w="1"/><text x="0.3923%" y="431.50"></text></g><g><title>&lt;heapless::vec::Vec&lt;T,_&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.03%)</title><rect x="0.1707%" y="405" width="0.0285%" height="15" fill="rgb(228,23,34)" fg:x="6" fg:w="1"/><text x="0.4207%" y="415.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (5 samples, 0.14%)</title><rect x="3.7849%" y="325" width="0.1423%" height="15" fill="rgb(218,30,26)" fg:x="133" fg:w="5"/><text x="4.0349%" y="335.50"></text></g><g><title>core::ops::function::FnOnce::call_once (2 samples, 0.06%)</title><rect x="3.9271%" y="325" width="0.0569%" height="15" fill="rgb(220,122,19)" fg:x="138" fg:w="2"/><text x="4.1771%" y="335.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.06%)</title><rect x="3.9271%" y="309" width="0.0569%" height="15" fill="rgb(250,228,42)" fg:x="138" fg:w="2"/><text x="4.1771%" y="319.50"></text></g><g><title>&lt;core::ops::index_range::IndexRange as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="3.9556%" y="293" width="0.0285%" height="15" fill="rgb(240,193,28)" fg:x="139" fg:w="1"/><text x="4.2056%" y="303.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (1 samples, 0.03%)</title><rect x="3.9556%" y="277" width="0.0285%" height="15" fill="rgb(216,20,37)" fg:x="139" fg:w="1"/><text x="4.2056%" y="287.50"></text></g><g><title>&lt;core::ops::index_range::IndexRange as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (1 samples, 0.03%)</title><rect x="3.9556%" y="261" width="0.0285%" height="15" fill="rgb(206,188,39)" fg:x="139" fg:w="1"/><text x="4.2056%" y="271.50"></text></g><g><title>core::ops::index_range::IndexRange::len (1 samples, 0.03%)</title><rect x="3.9556%" y="245" width="0.0285%" height="15" fill="rgb(217,207,13)" fg:x="139" fg:w="1"/><text x="4.2056%" y="255.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (22 samples, 0.63%)</title><rect x="3.4718%" y="341" width="0.6261%" height="15" fill="rgb(231,73,38)" fg:x="122" fg:w="22"/><text x="3.7218%" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (4 samples, 0.11%)</title><rect x="3.9841%" y="325" width="0.1138%" height="15" fill="rgb(225,20,46)" fg:x="140" fg:w="4"/><text x="4.2341%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (18 samples, 0.51%)</title><rect x="6.7445%" y="277" width="0.5122%" height="15" fill="rgb(210,31,41)" fg:x="237" fg:w="18"/><text x="6.9945%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null::runtime_impl (6 samples, 0.17%)</title><rect x="7.0859%" y="261" width="0.1707%" height="15" fill="rgb(221,200,47)" fg:x="249" fg:w="6"/><text x="7.3359%" y="271.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::addr (3 samples, 0.09%)</title><rect x="7.1713%" y="245" width="0.0854%" height="15" fill="rgb(226,26,5)" fg:x="252" fg:w="3"/><text x="7.4213%" y="255.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (18 samples, 0.51%)</title><rect x="7.2567%" y="277" width="0.5122%" height="15" fill="rgb(249,33,26)" fg:x="255" fg:w="18"/><text x="7.5067%" y="287.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null::runtime_impl (7 samples, 0.20%)</title><rect x="7.5697%" y="261" width="0.1992%" height="15" fill="rgb(235,183,28)" fg:x="266" fg:w="7"/><text x="7.8197%" y="271.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::addr (5 samples, 0.14%)</title><rect x="7.6266%" y="245" width="0.1423%" height="15" fill="rgb(221,5,38)" fg:x="268" fg:w="5"/><text x="7.8766%" y="255.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (2 samples, 0.06%)</title><rect x="7.7689%" y="277" width="0.0569%" height="15" fill="rgb(247,18,42)" fg:x="273" fg:w="2"/><text x="8.0189%" y="287.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (13 samples, 0.37%)</title><rect x="8.5657%" y="261" width="0.3699%" height="15" fill="rgb(241,131,45)" fg:x="301" fg:w="13"/><text x="8.8157%" y="271.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (13 samples, 0.37%)</title><rect x="8.5657%" y="245" width="0.3699%" height="15" fill="rgb(249,31,29)" fg:x="301" fg:w="13"/><text x="8.8157%" y="255.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (102 samples, 2.90%)</title><rect x="6.1468%" y="293" width="2.9027%" height="15" fill="rgb(225,111,53)" fg:x="216" fg:w="102"/><text x="6.3968%" y="303.50">&lt;c..</text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (43 samples, 1.22%)</title><rect x="7.8258%" y="277" width="1.2237%" height="15" fill="rgb(238,160,17)" fg:x="275" fg:w="43"/><text x="8.0758%" y="287.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (4 samples, 0.11%)</title><rect x="8.9357%" y="261" width="0.1138%" height="15" fill="rgb(214,148,48)" fg:x="314" fg:w="4"/><text x="9.1857%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (156 samples, 4.44%)</title><rect x="5.8907%" y="309" width="4.4394%" height="15" fill="rgb(232,36,49)" fg:x="207" fg:w="156"/><text x="6.1407%" y="319.50">&lt;core..</text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (45 samples, 1.28%)</title><rect x="9.0495%" y="293" width="1.2806%" height="15" fill="rgb(209,103,24)" fg:x="318" fg:w="45"/><text x="9.2995%" y="303.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (13 samples, 0.37%)</title><rect x="10.3301%" y="309" width="0.3699%" height="15" fill="rgb(229,88,8)" fg:x="363" fg:w="13"/><text x="10.5801%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (292 samples, 8.31%)</title><rect x="2.5896%" y="357" width="8.3096%" height="15" fill="rgb(213,181,19)" fg:x="91" fg:w="292"/><text x="2.8396%" y="367.50">&lt;core::iter:..</text></g><g><title>core::option::Option&lt;T&gt;::or_else (239 samples, 6.80%)</title><rect x="4.0979%" y="341" width="6.8014%" height="15" fill="rgb(254,191,54)" fg:x="144" fg:w="239"/><text x="4.3479%" y="351.50">core::opt..</text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (217 samples, 6.18%)</title><rect x="4.7240%" y="325" width="6.1753%" height="15" fill="rgb(241,83,37)" fg:x="166" fg:w="217"/><text x="4.9740%" y="335.50">&lt;core::i..</text></g><g><title>core::option::Option&lt;T&gt;::as_mut (7 samples, 0.20%)</title><rect x="10.7001%" y="309" width="0.1992%" height="15" fill="rgb(233,36,39)" fg:x="376" fg:w="7"/><text x="10.9501%" y="319.50"></text></g><g><title>core::option::Option&lt;T&gt;::expect (22 samples, 0.63%)</title><rect x="10.8993%" y="357" width="0.6261%" height="15" fill="rgb(226,3,54)" fg:x="383" fg:w="22"/><text x="11.1493%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::chain::Chain&lt;core::array::iter::IntoIter&lt;u8,2_usize&gt;,core::iter::adapters::copied::Copied&lt;core::slice::iter::Iter&lt;u8&gt;&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="11.5253%" y="357" width="0.0285%" height="15" fill="rgb(245,192,40)" fg:x="405" fg:w="1"/><text x="11.7753%" y="367.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::ok (32 samples, 0.91%)</title><rect x="11.5538%" y="357" width="0.9106%" height="15" fill="rgb(238,167,29)" fg:x="406" fg:w="32"/><text x="11.8038%" y="367.50"></text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::new (2 samples, 0.06%)</title><rect x="12.4644%" y="357" width="0.0569%" height="15" fill="rgb(232,182,51)" fg:x="438" fg:w="2"/><text x="12.7144%" y="367.50"></text></g><g><title>[libc.so.6] (2 samples, 0.06%)</title><rect x="12.4644%" y="341" width="0.0569%" height="15" fill="rgb(231,60,39)" fg:x="438" fg:w="2"/><text x="12.7144%" y="351.50"></text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::capacity (12 samples, 0.34%)</title><rect x="13.1190%" y="341" width="0.3415%" height="15" fill="rgb(208,69,12)" fg:x="461" fg:w="12"/><text x="13.3690%" y="351.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::new (39 samples, 1.11%)</title><rect x="15.2248%" y="325" width="1.1098%" height="15" fill="rgb(235,93,37)" fg:x="535" fg:w="39"/><text x="15.4748%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (7 samples, 0.20%)</title><rect x="17.1315%" y="293" width="0.1992%" height="15" fill="rgb(213,116,39)" fg:x="602" fg:w="7"/><text x="17.3815%" y="303.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (5 samples, 0.14%)</title><rect x="17.1884%" y="277" width="0.1423%" height="15" fill="rgb(222,207,29)" fg:x="604" fg:w="5"/><text x="17.4384%" y="287.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (37 samples, 1.05%)</title><rect x="16.3347%" y="325" width="1.0529%" height="15" fill="rgb(206,96,30)" fg:x="574" fg:w="37"/><text x="16.5847%" y="335.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (21 samples, 0.60%)</title><rect x="16.7900%" y="309" width="0.5976%" height="15" fill="rgb(218,138,4)" fg:x="590" fg:w="21"/><text x="17.0400%" y="319.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut [T]&gt;::as_mut_ptr (2 samples, 0.06%)</title><rect x="17.3307%" y="293" width="0.0569%" height="15" fill="rgb(250,191,14)" fg:x="609" fg:w="2"/><text x="17.5807%" y="303.50"></text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::push (194 samples, 5.52%)</title><rect x="12.5213%" y="357" width="5.5208%" height="15" fill="rgb(239,60,40)" fg:x="440" fg:w="194"/><text x="12.7713%" y="367.50">heaples..</text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::push_unchecked (161 samples, 4.58%)</title><rect x="13.4604%" y="341" width="4.5817%" height="15" fill="rgb(206,27,48)" fg:x="473" fg:w="161"/><text x="13.7104%" y="351.50">heapl..</text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::is_full (23 samples, 0.65%)</title><rect x="17.3876%" y="325" width="0.6545%" height="15" fill="rgb(225,35,8)" fg:x="611" fg:w="23"/><text x="17.6376%" y="335.50"></text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::capacity (10 samples, 0.28%)</title><rect x="17.7575%" y="309" width="0.2846%" height="15" fill="rgb(250,213,24)" fg:x="624" fg:w="10"/><text x="18.0075%" y="319.50"></text></g><g><title>&lt;tftp::packet::DataPacket as tftp::packet::ByteConverter&gt;::to_bytes (628 samples, 17.87%)</title><rect x="0.1992%" y="405" width="17.8714%" height="15" fill="rgb(247,123,22)" fg:x="7" fg:w="628"/><text x="0.4492%" y="415.50">&lt;tftp::packet::DataPacket as..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (628 samples, 17.87%)</title><rect x="0.1992%" y="389" width="17.8714%" height="15" fill="rgb(231,138,38)" fg:x="7" fg:w="628"/><text x="0.4492%" y="399.50">core::iter::traits::iterator..</text></g><g><title>&lt;heapless::vec::Vec&lt;T,_&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (628 samples, 17.87%)</title><rect x="0.1992%" y="373" width="17.8714%" height="15" fill="rgb(231,145,46)" fg:x="7" fg:w="628"/><text x="0.4492%" y="383.50">&lt;heapless::vec::Vec&lt;T,_&gt; as ..</text></g><g><title>memcpy (1 samples, 0.03%)</title><rect x="18.0421%" y="357" width="0.0285%" height="15" fill="rgb(251,118,11)" fg:x="634" fg:w="1"/><text x="18.2921%" y="367.50"></text></g><g><title>core::array::iter::&lt;impl core::iter::traits::collect::IntoIterator for [T: N]&gt;::into_iter (1 samples, 0.03%)</title><rect x="18.0706%" y="405" width="0.0285%" height="15" fill="rgb(217,147,25)" fg:x="635" fg:w="1"/><text x="18.3206%" y="415.50"></text></g><g><title>core::mem::transmute_copy (1 samples, 0.03%)</title><rect x="18.0706%" y="389" width="0.0285%" height="15" fill="rgb(247,81,37)" fg:x="635" fg:w="1"/><text x="18.3206%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::chain (2 samples, 0.06%)</title><rect x="18.0990%" y="405" width="0.0569%" height="15" fill="rgb(209,12,38)" fg:x="636" fg:w="2"/><text x="18.3490%" y="415.50"></text></g><g><title>[libc.so.6] (2 samples, 0.06%)</title><rect x="18.0990%" y="389" width="0.0569%" height="15" fill="rgb(227,1,9)" fg:x="636" fg:w="2"/><text x="18.3490%" y="399.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.03%)</title><rect x="20.5748%" y="373" width="0.0285%" height="15" fill="rgb(248,47,43)" fg:x="723" fg:w="1"/><text x="20.8248%" y="383.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (5 samples, 0.14%)</title><rect x="21.5424%" y="341" width="0.1423%" height="15" fill="rgb(221,10,30)" fg:x="757" fg:w="5"/><text x="21.7924%" y="351.50"></text></g><g><title>core::iter::adapters::chain::and_then_or_clear (24 samples, 0.68%)</title><rect x="21.0586%" y="357" width="0.6830%" height="15" fill="rgb(210,229,1)" fg:x="740" fg:w="24"/><text x="21.3086%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (2 samples, 0.06%)</title><rect x="21.6847%" y="341" width="0.0569%" height="15" fill="rgb(222,148,37)" fg:x="762" fg:w="2"/><text x="21.9347%" y="351.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (19 samples, 0.54%)</title><rect x="23.7621%" y="325" width="0.5407%" height="15" fill="rgb(234,67,33)" fg:x="835" fg:w="19"/><text x="24.0121%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::cast (2 samples, 0.06%)</title><rect x="26.6648%" y="245" width="0.0569%" height="15" fill="rgb(247,98,35)" fg:x="937" fg:w="2"/><text x="26.9148%" y="255.50"></text></g><g><title>&lt;heapless::vec::Vec&lt;T,_&gt; as core::ops::deref::Deref&gt;::deref (62 samples, 1.76%)</title><rect x="25.9818%" y="309" width="1.7644%" height="15" fill="rgb(247,138,52)" fg:x="913" fg:w="62"/><text x="26.2318%" y="319.50"></text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::as_slice (57 samples, 1.62%)</title><rect x="26.1241%" y="293" width="1.6221%" height="15" fill="rgb(213,79,30)" fg:x="918" fg:w="57"/><text x="26.3741%" y="303.50"></text></g><g><title>core::slice::raw::from_raw_parts (52 samples, 1.48%)</title><rect x="26.2664%" y="277" width="1.4798%" height="15" fill="rgb(246,177,23)" fg:x="923" fg:w="52"/><text x="26.5164%" y="287.50"></text></g><g><title>core::ptr::slice_from_raw_parts (39 samples, 1.11%)</title><rect x="26.6363%" y="261" width="1.1098%" height="15" fill="rgb(230,62,27)" fg:x="936" fg:w="39"/><text x="26.8863%" y="271.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (36 samples, 1.02%)</title><rect x="26.7217%" y="245" width="1.0245%" height="15" fill="rgb(216,154,8)" fg:x="939" fg:w="36"/><text x="26.9717%" y="255.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::read (39 samples, 1.11%)</title><rect x="27.7462%" y="309" width="1.1098%" height="15" fill="rgb(244,35,45)" fg:x="975" fg:w="39"/><text x="27.9962%" y="319.50"></text></g><g><title>core::ptr::read (36 samples, 1.02%)</title><rect x="27.8315%" y="293" width="1.0245%" height="15" fill="rgb(251,115,12)" fg:x="978" fg:w="36"/><text x="28.0815%" y="303.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (2 samples, 0.06%)</title><rect x="28.7991%" y="277" width="0.0569%" height="15" fill="rgb(240,54,50)" fg:x="1012" fg:w="2"/><text x="29.0491%" y="287.50"></text></g><g><title>&lt;heapless::vec::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (186 samples, 5.29%)</title><rect x="24.3028%" y="325" width="5.2931%" height="15" fill="rgb(233,84,52)" fg:x="854" fg:w="186"/><text x="24.5528%" y="335.50">&lt;heapl..</text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (26 samples, 0.74%)</title><rect x="28.8560%" y="309" width="0.7399%" height="15" fill="rgb(207,117,47)" fg:x="1014" fg:w="26"/><text x="29.1060%" y="319.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (17 samples, 0.48%)</title><rect x="29.1121%" y="293" width="0.4838%" height="15" fill="rgb(249,43,39)" fg:x="1023" fg:w="17"/><text x="29.3621%" y="303.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (3 samples, 0.09%)</title><rect x="29.5105%" y="277" width="0.0854%" height="15" fill="rgb(209,38,44)" fg:x="1037" fg:w="3"/><text x="29.7605%" y="287.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.03%)</title><rect x="29.5674%" y="261" width="0.0285%" height="15" fill="rgb(236,212,23)" fg:x="1039" fg:w="1"/><text x="29.8174%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (324 samples, 9.22%)</title><rect x="20.6033%" y="373" width="9.2203%" height="15" fill="rgb(242,79,21)" fg:x="724" fg:w="324"/><text x="20.8533%" y="383.50">&lt;core::iter::..</text></g><g><title>core::option::Option&lt;T&gt;::or_else (284 samples, 8.08%)</title><rect x="21.7416%" y="357" width="8.0820%" height="15" fill="rgb(211,96,35)" fg:x="764" fg:w="284"/><text x="21.9916%" y="367.50">core::optio..</text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (254 samples, 7.23%)</title><rect x="22.5953%" y="341" width="7.2282%" height="15" fill="rgb(253,215,40)" fg:x="794" fg:w="254"/><text x="22.8453%" y="351.50">&lt;core::ite..</text></g><g><title>core::option::Option&lt;T&gt;::as_mut (8 samples, 0.23%)</title><rect x="29.5959%" y="325" width="0.2277%" height="15" fill="rgb(211,81,21)" fg:x="1040" fg:w="8"/><text x="29.8459%" y="335.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="29.8236%" y="373" width="0.0285%" height="15" fill="rgb(208,190,38)" fg:x="1048" fg:w="1"/><text x="30.0736%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::expect (18 samples, 0.51%)</title><rect x="29.8520%" y="373" width="0.5122%" height="15" fill="rgb(235,213,38)" fg:x="1049" fg:w="18"/><text x="30.1020%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::chain::Chain&lt;core::array::iter::IntoIter&lt;u8,2_usize&gt;,heapless::vec::IntoIter&lt;u8,1420_usize&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="30.3643%" y="373" width="0.0285%" height="15" fill="rgb(237,122,38)" fg:x="1067" fg:w="1"/><text x="30.6143%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;heapless::vec::IntoIter&lt;u8,1420_usize&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="30.3643%" y="357" width="0.0285%" height="15" fill="rgb(244,218,35)" fg:x="1067" fg:w="1"/><text x="30.6143%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;heapless::vec::IntoIter&lt;u8,1420_usize&gt;&gt; (1 samples, 0.03%)</title><rect x="30.3643%" y="341" width="0.0285%" height="15" fill="rgb(240,68,47)" fg:x="1067" fg:w="1"/><text x="30.6143%" y="351.50"></text></g><g><title>&lt;heapless::vec::IntoIter&lt;T,_&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="30.3643%" y="325" width="0.0285%" height="15" fill="rgb(210,16,53)" fg:x="1067" fg:w="1"/><text x="30.6143%" y="335.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::ok (28 samples, 0.80%)</title><rect x="30.3927%" y="373" width="0.7968%" height="15" fill="rgb(235,124,12)" fg:x="1068" fg:w="28"/><text x="30.6427%" y="383.50"></text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::new (1 samples, 0.03%)</title><rect x="31.1895%" y="373" width="0.0285%" height="15" fill="rgb(224,169,11)" fg:x="1096" fg:w="1"/><text x="31.4395%" y="383.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="31.1895%" y="357" width="0.0285%" height="15" fill="rgb(250,166,2)" fg:x="1096" fg:w="1"/><text x="31.4395%" y="367.50"></text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::capacity (7 samples, 0.20%)</title><rect x="32.0433%" y="357" width="0.1992%" height="15" fill="rgb(242,216,29)" fg:x="1126" fg:w="7"/><text x="32.2933%" y="367.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::new (38 samples, 1.08%)</title><rect x="34.0637%" y="341" width="1.0814%" height="15" fill="rgb(230,116,27)" fg:x="1197" fg:w="38"/><text x="34.3137%" y="351.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="35.1167%" y="325" width="0.0285%" height="15" fill="rgb(228,99,48)" fg:x="1234" fg:w="1"/><text x="35.3667%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (6 samples, 0.17%)</title><rect x="35.7712%" y="309" width="0.1707%" height="15" fill="rgb(253,11,6)" fg:x="1257" fg:w="6"/><text x="36.0212%" y="319.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (6 samples, 0.17%)</title><rect x="35.7712%" y="293" width="0.1707%" height="15" fill="rgb(247,143,39)" fg:x="1257" fg:w="6"/><text x="36.0212%" y="303.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (29 samples, 0.83%)</title><rect x="35.1451%" y="341" width="0.8253%" height="15" fill="rgb(236,97,10)" fg:x="1235" fg:w="29"/><text x="35.3951%" y="351.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (20 samples, 0.57%)</title><rect x="35.4013%" y="325" width="0.5692%" height="15" fill="rgb(233,208,19)" fg:x="1244" fg:w="20"/><text x="35.6513%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut [T]&gt;::as_mut_ptr (1 samples, 0.03%)</title><rect x="35.9419%" y="309" width="0.0285%" height="15" fill="rgb(216,164,2)" fg:x="1263" fg:w="1"/><text x="36.1919%" y="319.50"></text></g><g><title>&lt;tftp::packet::Packet as tftp::packet::ByteConverter&gt;::to_bytes (1,278 samples, 36.37%)</title><rect x="0.1707%" y="421" width="36.3688%" height="15" fill="rgb(220,129,5)" fg:x="6" fg:w="1278"/><text x="0.4207%" y="431.50">&lt;tftp::packet::Packet as tftp::packet::ByteConverter&gt;::to_b..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (646 samples, 18.38%)</title><rect x="18.1559%" y="405" width="18.3836%" height="15" fill="rgb(242,17,10)" fg:x="638" fg:w="646"/><text x="18.4059%" y="415.50">core::iter::traits::iterator:..</text></g><g><title>&lt;heapless::vec::Vec&lt;T,_&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (646 samples, 18.38%)</title><rect x="18.1559%" y="389" width="18.3836%" height="15" fill="rgb(242,107,0)" fg:x="638" fg:w="646"/><text x="18.4059%" y="399.50">&lt;heapless::vec::Vec&lt;T,_&gt; as c..</text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::push (187 samples, 5.32%)</title><rect x="31.2180%" y="373" width="5.3216%" height="15" fill="rgb(251,28,31)" fg:x="1097" fg:w="187"/><text x="31.4680%" y="383.50">heaples..</text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::push_unchecked (151 samples, 4.30%)</title><rect x="32.2425%" y="357" width="4.2971%" height="15" fill="rgb(233,223,10)" fg:x="1133" fg:w="151"/><text x="32.4925%" y="367.50">heapl..</text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::is_full (20 samples, 0.57%)</title><rect x="35.9704%" y="341" width="0.5692%" height="15" fill="rgb(215,21,27)" fg:x="1264" fg:w="20"/><text x="36.2204%" y="351.50"></text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::capacity (8 samples, 0.23%)</title><rect x="36.3119%" y="325" width="0.2277%" height="15" fill="rgb(232,23,21)" fg:x="1276" fg:w="8"/><text x="36.5619%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (12 samples, 0.34%)</title><rect x="38.7592%" y="357" width="0.3415%" height="15" fill="rgb(244,5,23)" fg:x="1362" fg:w="12"/><text x="39.0092%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null::runtime_impl (6 samples, 0.17%)</title><rect x="38.9300%" y="341" width="0.1707%" height="15" fill="rgb(226,81,46)" fg:x="1368" fg:w="6"/><text x="39.1800%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::addr (6 samples, 0.17%)</title><rect x="38.9300%" y="325" width="0.1707%" height="15" fill="rgb(247,70,30)" fg:x="1368" fg:w="6"/><text x="39.1800%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (6 samples, 0.17%)</title><rect x="39.1007%" y="357" width="0.1707%" height="15" fill="rgb(212,68,19)" fg:x="1374" fg:w="6"/><text x="39.3507%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null::runtime_impl (4 samples, 0.11%)</title><rect x="39.1577%" y="341" width="0.1138%" height="15" fill="rgb(240,187,13)" fg:x="1376" fg:w="4"/><text x="39.4077%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::addr (3 samples, 0.09%)</title><rect x="39.1861%" y="325" width="0.0854%" height="15" fill="rgb(223,113,26)" fg:x="1377" fg:w="3"/><text x="39.4361%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (19 samples, 0.54%)</title><rect x="39.8406%" y="341" width="0.5407%" height="15" fill="rgb(206,192,2)" fg:x="1400" fg:w="19"/><text x="40.0906%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (19 samples, 0.54%)</title><rect x="39.8406%" y="325" width="0.5407%" height="15" fill="rgb(241,108,4)" fg:x="1400" fg:w="19"/><text x="40.0906%" y="335.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (77 samples, 2.19%)</title><rect x="38.3324%" y="373" width="2.1912%" height="15" fill="rgb(247,173,49)" fg:x="1347" fg:w="77"/><text x="38.5824%" y="383.50">&lt;..</text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (44 samples, 1.25%)</title><rect x="39.2715%" y="357" width="1.2521%" height="15" fill="rgb(224,114,35)" fg:x="1380" fg:w="44"/><text x="39.5215%" y="367.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (5 samples, 0.14%)</title><rect x="40.3813%" y="341" width="0.1423%" height="15" fill="rgb(245,159,27)" fg:x="1419" fg:w="5"/><text x="40.6313%" y="351.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for u8&gt;::clone (5 samples, 0.14%)</title><rect x="40.5236%" y="373" width="0.1423%" height="15" fill="rgb(245,172,44)" fg:x="1424" fg:w="5"/><text x="40.7736%" y="383.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::new (36 samples, 1.02%)</title><rect x="42.2026%" y="357" width="1.0245%" height="15" fill="rgb(236,23,11)" fg:x="1483" fg:w="36"/><text x="42.4526%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (2 samples, 0.06%)</title><rect x="43.6824%" y="325" width="0.0569%" height="15" fill="rgb(205,117,38)" fg:x="1535" fg:w="2"/><text x="43.9324%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.06%)</title><rect x="43.6824%" y="309" width="0.0569%" height="15" fill="rgb(237,72,25)" fg:x="1535" fg:w="2"/><text x="43.9324%" y="319.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (20 samples, 0.57%)</title><rect x="43.2271%" y="357" width="0.5692%" height="15" fill="rgb(244,70,9)" fg:x="1519" fg:w="20"/><text x="43.4771%" y="367.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (13 samples, 0.37%)</title><rect x="43.4263%" y="341" width="0.3699%" height="15" fill="rgb(217,125,39)" fg:x="1526" fg:w="13"/><text x="43.6763%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut [T]&gt;::as_mut_ptr (2 samples, 0.06%)</title><rect x="43.7393%" y="325" width="0.0569%" height="15" fill="rgb(235,36,10)" fg:x="1537" fg:w="2"/><text x="43.9893%" y="335.50"></text></g><g><title>&lt;heapless::vec::Vec&lt;T,_&gt; as core::clone::Clone&gt;::clone (270 samples, 7.68%)</title><rect x="36.5680%" y="405" width="7.6836%" height="15" fill="rgb(251,123,47)" fg:x="1285" fg:w="270"/><text x="36.8180%" y="415.50">&lt;heapless::..</text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::clone (270 samples, 7.68%)</title><rect x="36.5680%" y="389" width="7.6836%" height="15" fill="rgb(221,13,13)" fg:x="1285" fg:w="270"/><text x="36.8180%" y="399.50">heapless::v..</text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::push_unchecked (126 samples, 3.59%)</title><rect x="40.6659%" y="373" width="3.5857%" height="15" fill="rgb(238,131,9)" fg:x="1429" fg:w="126"/><text x="40.9159%" y="383.50">heap..</text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::is_full (16 samples, 0.46%)</title><rect x="43.7962%" y="357" width="0.4553%" height="15" fill="rgb(211,50,8)" fg:x="1539" fg:w="16"/><text x="44.0462%" y="367.50"></text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::capacity (4 samples, 0.11%)</title><rect x="44.1377%" y="341" width="0.1138%" height="15" fill="rgb(245,182,24)" fg:x="1551" fg:w="4"/><text x="44.3877%" y="351.50"></text></g><g><title>&lt;heapless::vec::Vec&lt;T,_&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="44.2516%" y="405" width="0.0285%" height="15" fill="rgb(242,14,37)" fg:x="1555" fg:w="1"/><text x="44.5016%" y="415.50"></text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::as_slice (1 samples, 0.03%)</title><rect x="44.2516%" y="389" width="0.0285%" height="15" fill="rgb(246,228,12)" fg:x="1555" fg:w="1"/><text x="44.5016%" y="399.50"></text></g><g><title>core::slice::raw::from_raw_parts (1 samples, 0.03%)</title><rect x="44.2516%" y="373" width="0.0285%" height="15" fill="rgb(213,55,15)" fg:x="1555" fg:w="1"/><text x="44.5016%" y="383.50"></text></g><g><title>&lt;tftp::storage::FileReader&lt;T&gt; as tftp::storage::BlockReader&gt;::is_finished (1 samples, 0.03%)</title><rect x="44.2800%" y="405" width="0.0285%" height="15" fill="rgb(209,9,3)" fg:x="1556" fg:w="1"/><text x="44.5300%" y="415.50"></text></g><g><title>tftp::map::Map&lt;K,V,_&gt;::is_empty (1 samples, 0.03%)</title><rect x="44.2800%" y="389" width="0.0285%" height="15" fill="rgb(230,59,30)" fg:x="1556" fg:w="1"/><text x="44.5300%" y="399.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::is_empty (1 samples, 0.03%)</title><rect x="44.2800%" y="373" width="0.0285%" height="15" fill="rgb(209,121,21)" fg:x="1556" fg:w="1"/><text x="44.5300%" y="383.50"></text></g><g><title>[libc.so.6] (2 samples, 0.06%)</title><rect x="44.3085%" y="405" width="0.0569%" height="15" fill="rgb(220,109,13)" fg:x="1557" fg:w="2"/><text x="44.5585%" y="415.50"></text></g><g><title>&lt;tftp::storage::FileReader&lt;T&gt; as tftp::storage::BlockReader&gt;::next::{{closure}}::{{closure}} (2 samples, 0.06%)</title><rect x="44.3654%" y="357" width="0.0569%" height="15" fill="rgb(232,18,1)" fg:x="1559" fg:w="2"/><text x="44.6154%" y="367.50"></text></g><g><title>[libc.so.6] (2 samples, 0.06%)</title><rect x="44.3654%" y="341" width="0.0569%" height="15" fill="rgb(215,41,42)" fg:x="1559" fg:w="2"/><text x="44.6154%" y="351.50"></text></g><g><title>&lt;tftp::storage::FileReader&lt;T&gt; as tftp::storage::BlockReader&gt;::next::{{closure}} (5 samples, 0.14%)</title><rect x="44.3654%" y="389" width="0.1423%" height="15" fill="rgb(224,123,36)" fg:x="1559" fg:w="5"/><text x="44.6154%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5 samples, 0.14%)</title><rect x="44.3654%" y="373" width="0.1423%" height="15" fill="rgb(240,125,3)" fg:x="1559" fg:w="5"/><text x="44.6154%" y="383.50"></text></g><g><title>[libc.so.6] (3 samples, 0.09%)</title><rect x="44.4223%" y="357" width="0.0854%" height="15" fill="rgb(205,98,50)" fg:x="1561" fg:w="3"/><text x="44.6723%" y="367.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (7 samples, 0.20%)</title><rect x="44.3654%" y="405" width="0.1992%" height="15" fill="rgb(205,185,37)" fg:x="1559" fg:w="7"/><text x="44.6154%" y="415.50"></text></g><g><title>[libc.so.6] (2 samples, 0.06%)</title><rect x="44.5077%" y="389" width="0.0569%" height="15" fill="rgb(238,207,15)" fg:x="1564" fg:w="2"/><text x="44.7577%" y="399.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::len (1 samples, 0.03%)</title><rect x="44.5646%" y="405" width="0.0285%" height="15" fill="rgb(213,199,42)" fg:x="1566" fg:w="1"/><text x="44.8146%" y="415.50"></text></g><g><title>memcpy (1 samples, 0.03%)</title><rect x="44.5931%" y="405" width="0.0285%" height="15" fill="rgb(235,201,11)" fg:x="1567" fg:w="1"/><text x="44.8431%" y="415.50"></text></g><g><title>tftp::instant_callback (1 samples, 0.03%)</title><rect x="44.6215%" y="405" width="0.0285%" height="15" fill="rgb(207,46,11)" fg:x="1568" fg:w="1"/><text x="44.8715%" y="415.50"></text></g><g><title>tftp::std_compat::time::Instant::from_time (1 samples, 0.03%)</title><rect x="44.6215%" y="389" width="0.0285%" height="15" fill="rgb(241,35,35)" fg:x="1568" fg:w="1"/><text x="44.8715%" y="399.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.03%)</title><rect x="44.6215%" y="373" width="0.0285%" height="15" fill="rgb(243,32,47)" fg:x="1568" fg:w="1"/><text x="44.8715%" y="383.50"></text></g><g><title>tftp::instant_callback::{{closure}} (1 samples, 0.03%)</title><rect x="44.6215%" y="357" width="0.0285%" height="15" fill="rgb(247,202,23)" fg:x="1568" fg:w="1"/><text x="44.8715%" y="367.50"></text></g><g><title>core::time::Duration::as_micros (1 samples, 0.03%)</title><rect x="44.6215%" y="341" width="0.0285%" height="15" fill="rgb(219,102,11)" fg:x="1568" fg:w="1"/><text x="44.8715%" y="351.50"></text></g><g><title>tftp::map::Map&lt;K,V,_&gt;::get_mut (1 samples, 0.03%)</title><rect x="44.6500%" y="405" width="0.0285%" height="15" fill="rgb(243,110,44)" fg:x="1569" fg:w="1"/><text x="44.9000%" y="415.50"></text></g><g><title>&lt;arrayvec::arrayvec::ArrayVec&lt;T,_&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.03%)</title><rect x="44.6500%" y="389" width="0.0285%" height="15" fill="rgb(222,74,54)" fg:x="1569" fg:w="1"/><text x="44.9000%" y="399.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::as_mut_slice (1 samples, 0.03%)</title><rect x="44.6500%" y="373" width="0.0285%" height="15" fill="rgb(216,99,12)" fg:x="1569" fg:w="1"/><text x="44.9000%" y="383.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::as_mut_slice (1 samples, 0.03%)</title><rect x="44.6500%" y="357" width="0.0285%" height="15" fill="rgb(226,22,26)" fg:x="1569" fg:w="1"/><text x="44.9000%" y="367.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="44.6784%" y="389" width="0.0285%" height="15" fill="rgb(217,163,10)" fg:x="1570" fg:w="1"/><text x="44.9284%" y="399.50"></text></g><g><title>__rust_probestack (1 samples, 0.03%)</title><rect x="44.7069%" y="389" width="0.0285%" height="15" fill="rgb(213,25,53)" fg:x="1571" fg:w="1"/><text x="44.9569%" y="399.50"></text></g><g><title>[libc.so.6] (2 samples, 0.06%)</title><rect x="44.7353%" y="373" width="0.0569%" height="15" fill="rgb(252,105,26)" fg:x="1572" fg:w="2"/><text x="44.9853%" y="383.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::try_push (3 samples, 0.09%)</title><rect x="44.7353%" y="389" width="0.0854%" height="15" fill="rgb(220,39,43)" fg:x="1572" fg:w="3"/><text x="44.9853%" y="399.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::try_push (1 samples, 0.03%)</title><rect x="44.7923%" y="373" width="0.0285%" height="15" fill="rgb(229,68,48)" fg:x="1574" fg:w="1"/><text x="45.0423%" y="383.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::push_unchecked (1 samples, 0.03%)</title><rect x="44.7923%" y="357" width="0.0285%" height="15" fill="rgb(252,8,32)" fg:x="1574" fg:w="1"/><text x="45.0423%" y="367.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="44.7923%" y="341" width="0.0285%" height="15" fill="rgb(223,20,43)" fg:x="1574" fg:w="1"/><text x="45.0423%" y="351.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (1 samples, 0.03%)</title><rect x="44.8207%" y="373" width="0.0285%" height="15" fill="rgb(229,81,49)" fg:x="1575" fg:w="1"/><text x="45.0707%" y="383.50"></text></g><g><title>tftp::map::Map&lt;K,V,_&gt;::insert (8 samples, 0.23%)</title><rect x="44.6784%" y="405" width="0.2277%" height="15" fill="rgb(236,28,36)" fg:x="1570" fg:w="8"/><text x="44.9284%" y="415.50"></text></g><g><title>tftp::map::Map&lt;K,V,_&gt;::remove (3 samples, 0.09%)</title><rect x="44.8207%" y="389" width="0.0854%" height="15" fill="rgb(249,185,26)" fg:x="1575" fg:w="3"/><text x="45.0707%" y="399.50"></text></g><g><title>tftp::map::Map&lt;K,V,_&gt;::iter (2 samples, 0.06%)</title><rect x="44.8492%" y="373" width="0.0569%" height="15" fill="rgb(249,174,33)" fg:x="1576" fg:w="2"/><text x="45.0992%" y="383.50"></text></g><g><title>&lt;&amp;tftp::map::Map&lt;K,V,_&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (2 samples, 0.06%)</title><rect x="44.8492%" y="357" width="0.0569%" height="15" fill="rgb(233,201,37)" fg:x="1576" fg:w="2"/><text x="45.0992%" y="367.50"></text></g><g><title>&lt;arrayvec::arrayvec::ArrayVec&lt;T,_&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.06%)</title><rect x="44.8492%" y="341" width="0.0569%" height="15" fill="rgb(221,78,26)" fg:x="1576" fg:w="2"/><text x="45.0992%" y="351.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::as_slice (2 samples, 0.06%)</title><rect x="44.8492%" y="325" width="0.0569%" height="15" fill="rgb(250,127,30)" fg:x="1576" fg:w="2"/><text x="45.0992%" y="335.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::as_slice (2 samples, 0.06%)</title><rect x="44.8492%" y="309" width="0.0569%" height="15" fill="rgb(230,49,44)" fg:x="1576" fg:w="2"/><text x="45.0992%" y="319.50"></text></g><g><title>core::ops::function::FnOnce::call_once (2 samples, 0.06%)</title><rect x="44.9061%" y="389" width="0.0569%" height="15" fill="rgb(229,67,23)" fg:x="1578" fg:w="2"/><text x="45.1561%" y="399.50"></text></g><g><title>tftp::instant_callback::{{closure}} (2 samples, 0.06%)</title><rect x="44.9061%" y="373" width="0.0569%" height="15" fill="rgb(249,83,47)" fg:x="1578" fg:w="2"/><text x="45.1561%" y="383.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (2 samples, 0.06%)</title><rect x="44.9061%" y="357" width="0.0569%" height="15" fill="rgb(215,43,3)" fg:x="1578" fg:w="2"/><text x="45.1561%" y="367.50"></text></g><g><title>clock_gettime (2 samples, 0.06%)</title><rect x="44.9061%" y="341" width="0.0569%" height="15" fill="rgb(238,154,13)" fg:x="1578" fg:w="2"/><text x="45.1561%" y="351.50"></text></g><g><title>__vdso_clock_gettime (2 samples, 0.06%)</title><rect x="44.9061%" y="325" width="0.0569%" height="15" fill="rgb(219,56,2)" fg:x="1578" fg:w="2"/><text x="45.1561%" y="335.50"></text></g><g><title>tftp::std_compat::time::Instant::elapsed (3 samples, 0.09%)</title><rect x="44.9061%" y="405" width="0.0854%" height="15" fill="rgb(233,0,4)" fg:x="1578" fg:w="3"/><text x="45.1561%" y="415.50"></text></g><g><title>core::time::Duration::from_micros (1 samples, 0.03%)</title><rect x="44.9630%" y="389" width="0.0285%" height="15" fill="rgb(235,30,7)" fg:x="1580" fg:w="1"/><text x="45.2130%" y="399.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.03%)</title><rect x="44.9915%" y="389" width="0.0285%" height="15" fill="rgb(250,79,13)" fg:x="1581" fg:w="1"/><text x="45.2415%" y="399.50"></text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::new (1 samples, 0.03%)</title><rect x="45.0199%" y="389" width="0.0285%" height="15" fill="rgb(211,146,34)" fg:x="1582" fg:w="1"/><text x="45.2699%" y="399.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="45.0199%" y="373" width="0.0285%" height="15" fill="rgb(228,22,38)" fg:x="1582" fg:w="1"/><text x="45.2699%" y="383.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::ok (27 samples, 0.77%)</title><rect x="45.6175%" y="373" width="0.7684%" height="15" fill="rgb(235,168,5)" fg:x="1603" fg:w="27"/><text x="45.8675%" y="383.50"></text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::capacity (4 samples, 0.11%)</title><rect x="47.0689%" y="357" width="0.1138%" height="15" fill="rgb(221,155,16)" fg:x="1654" fg:w="4"/><text x="47.3189%" y="367.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::new (30 samples, 0.85%)</title><rect x="49.1178%" y="341" width="0.8537%" height="15" fill="rgb(215,215,53)" fg:x="1726" fg:w="30"/><text x="49.3678%" y="351.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (5 samples, 0.14%)</title><rect x="49.8293%" y="325" width="0.1423%" height="15" fill="rgb(223,4,10)" fg:x="1751" fg:w="5"/><text x="50.0793%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (3 samples, 0.09%)</title><rect x="50.3415%" y="309" width="0.0854%" height="15" fill="rgb(234,103,6)" fg:x="1769" fg:w="3"/><text x="50.5915%" y="319.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.03%)</title><rect x="50.3984%" y="293" width="0.0285%" height="15" fill="rgb(227,97,0)" fg:x="1771" fg:w="1"/><text x="50.6484%" y="303.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (19 samples, 0.54%)</title><rect x="49.9715%" y="341" width="0.5407%" height="15" fill="rgb(234,150,53)" fg:x="1756" fg:w="19"/><text x="50.2215%" y="351.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (11 samples, 0.31%)</title><rect x="50.1992%" y="325" width="0.3130%" height="15" fill="rgb(228,201,54)" fg:x="1764" fg:w="11"/><text x="50.4492%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut [T]&gt;::as_mut_ptr (3 samples, 0.09%)</title><rect x="50.4269%" y="309" width="0.0854%" height="15" fill="rgb(222,22,37)" fg:x="1772" fg:w="3"/><text x="50.6769%" y="319.50"></text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::resize (219 samples, 6.23%)</title><rect x="45.0484%" y="389" width="6.2322%" height="15" fill="rgb(237,53,32)" fg:x="1583" fg:w="219"/><text x="45.2984%" y="399.50">heapless..</text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::push (172 samples, 4.89%)</title><rect x="46.3859%" y="373" width="4.8947%" height="15" fill="rgb(233,25,53)" fg:x="1630" fg:w="172"/><text x="46.6359%" y="383.50">heaple..</text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::push_unchecked (144 samples, 4.10%)</title><rect x="47.1827%" y="357" width="4.0979%" height="15" fill="rgb(210,40,34)" fg:x="1658" fg:w="144"/><text x="47.4327%" y="367.50">heap..</text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::is_full (27 samples, 0.77%)</title><rect x="50.5122%" y="341" width="0.7684%" height="15" fill="rgb(241,220,44)" fg:x="1775" fg:w="27"/><text x="50.7622%" y="351.50"></text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::capacity (14 samples, 0.40%)</title><rect x="50.8822%" y="325" width="0.3984%" height="15" fill="rgb(235,28,35)" fg:x="1788" fg:w="14"/><text x="51.1322%" y="335.50"></text></g><g><title>&lt;tftp::storage::FileReader&lt;T&gt; as tftp::storage::BlockReader&gt;::next (519 samples, 14.77%)</title><rect x="36.5396%" y="421" width="14.7695%" height="15" fill="rgb(210,56,17)" fg:x="1284" fg:w="519"/><text x="36.7896%" y="431.50">&lt;tftp::storage::FileRea..</text></g><g><title>tftp::storage::FileReader&lt;T&gt;::read_block (222 samples, 6.32%)</title><rect x="44.9915%" y="405" width="6.3176%" height="15" fill="rgb(224,130,29)" fg:x="1581" fg:w="222"/><text x="45.2415%" y="415.50">tftp::st..</text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::truncate (1 samples, 0.03%)</title><rect x="51.2806%" y="389" width="0.0285%" height="15" fill="rgb(235,212,8)" fg:x="1802" fg:w="1"/><text x="51.5306%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.03%)</title><rect x="51.2806%" y="373" width="0.0285%" height="15" fill="rgb(223,33,50)" fg:x="1802" fg:w="1"/><text x="51.5306%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.03%)</title><rect x="51.2806%" y="357" width="0.0285%" height="15" fill="rgb(219,149,13)" fg:x="1802" fg:w="1"/><text x="51.5306%" y="367.50"></text></g><g><title>clap::derive::Parser::parse (1 samples, 0.03%)</title><rect x="51.3090%" y="421" width="0.0285%" height="15" fill="rgb(250,156,29)" fg:x="1803" fg:w="1"/><text x="51.5590%" y="431.50"></text></g><g><title>clap::builder::command::Command::get_matches (1 samples, 0.03%)</title><rect x="51.3090%" y="405" width="0.0285%" height="15" fill="rgb(216,193,19)" fg:x="1803" fg:w="1"/><text x="51.5590%" y="415.50"></text></g><g><title>clap::builder::command::Command::get_matches_from (1 samples, 0.03%)</title><rect x="51.3090%" y="389" width="0.0285%" height="15" fill="rgb(216,135,14)" fg:x="1803" fg:w="1"/><text x="51.5590%" y="399.50"></text></g><g><title>clap::builder::command::Command::try_get_matches_from_mut (1 samples, 0.03%)</title><rect x="51.3090%" y="373" width="0.0285%" height="15" fill="rgb(241,47,5)" fg:x="1803" fg:w="1"/><text x="51.5590%" y="383.50"></text></g><g><title>clap::builder::command::Command::_do_parse (1 samples, 0.03%)</title><rect x="51.3090%" y="357" width="0.0285%" height="15" fill="rgb(233,42,35)" fg:x="1803" fg:w="1"/><text x="51.5590%" y="367.50"></text></g><g><title>clap::parser::parser::Parser::get_matches_with (1 samples, 0.03%)</title><rect x="51.3090%" y="341" width="0.0285%" height="15" fill="rgb(231,13,6)" fg:x="1803" fg:w="1"/><text x="51.5590%" y="351.50"></text></g><g><title>clap::parser::parser::Parser::parse_subcommand (1 samples, 0.03%)</title><rect x="51.3090%" y="325" width="0.0285%" height="15" fill="rgb(207,181,40)" fg:x="1803" fg:w="1"/><text x="51.5590%" y="335.50"></text></g><g><title>clap::builder::command::Command::_build_subcommand (1 samples, 0.03%)</title><rect x="51.3090%" y="309" width="0.0285%" height="15" fill="rgb(254,173,49)" fg:x="1803" fg:w="1"/><text x="51.5590%" y="319.50"></text></g><g><title>clap::builder::command::Command::_build_self (1 samples, 0.03%)</title><rect x="51.3090%" y="293" width="0.0285%" height="15" fill="rgb(221,1,38)" fg:x="1803" fg:w="1"/><text x="51.5590%" y="303.50"></text></g><g><title>clap::builder::arg::Arg::_build (1 samples, 0.03%)</title><rect x="51.3090%" y="277" width="0.0285%" height="15" fill="rgb(206,124,46)" fg:x="1803" fg:w="1"/><text x="51.5590%" y="287.50"></text></g><g><title>read (1 samples, 0.03%)</title><rect x="51.3375%" y="421" width="0.0285%" height="15" fill="rgb(249,21,11)" fg:x="1804" fg:w="1"/><text x="51.5875%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.03%)</title><rect x="51.3375%" y="405" width="0.0285%" height="15" fill="rgb(222,201,40)" fg:x="1804" fg:w="1"/><text x="51.5875%" y="415.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.06%)</title><rect x="51.3944%" y="405" width="0.0569%" height="15" fill="rgb(235,61,29)" fg:x="1806" fg:w="2"/><text x="51.6444%" y="415.50"></text></g><g><title>[libc.so.6] (2 samples, 0.06%)</title><rect x="51.3944%" y="389" width="0.0569%" height="15" fill="rgb(219,207,3)" fg:x="1806" fg:w="2"/><text x="51.6444%" y="399.50"></text></g><g><title>&lt;tftp::packet::Packet as tftp::packet::ByteConverter&gt;::to_bytes (1 samples, 0.03%)</title><rect x="51.4513%" y="405" width="0.0285%" height="15" fill="rgb(222,56,46)" fg:x="1808" fg:w="1"/><text x="51.7013%" y="415.50"></text></g><g><title>&lt;log::Level as core::cmp::PartialOrd&lt;log::LevelFilter&gt;&gt;::le (1 samples, 0.03%)</title><rect x="51.4798%" y="389" width="0.0285%" height="15" fill="rgb(239,76,54)" fg:x="1809" fg:w="1"/><text x="51.7298%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;polling::Event&gt;&gt; (1 samples, 0.03%)</title><rect x="51.5083%" y="373" width="0.0285%" height="15" fill="rgb(231,124,27)" fg:x="1810" fg:w="1"/><text x="51.7583%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;polling::Event&gt;&gt; (1 samples, 0.03%)</title><rect x="51.5083%" y="357" width="0.0285%" height="15" fill="rgb(249,195,6)" fg:x="1810" fg:w="1"/><text x="51.7583%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="51.5083%" y="341" width="0.0285%" height="15" fill="rgb(237,174,47)" fg:x="1810" fg:w="1"/><text x="51.7583%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.03%)</title><rect x="51.5083%" y="325" width="0.0285%" height="15" fill="rgb(206,201,31)" fg:x="1810" fg:w="1"/><text x="51.7583%" y="335.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.03%)</title><rect x="51.5083%" y="309" width="0.0285%" height="15" fill="rgb(231,57,52)" fg:x="1810" fg:w="1"/><text x="51.7583%" y="319.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.03%)</title><rect x="51.5083%" y="293" width="0.0285%" height="15" fill="rgb(248,177,22)" fg:x="1810" fg:w="1"/><text x="51.7583%" y="303.50"></text></g><g><title>core::ptr::alignment::Alignment::as_usize (1 samples, 0.03%)</title><rect x="51.5083%" y="277" width="0.0285%" height="15" fill="rgb(215,211,37)" fg:x="1810" fg:w="1"/><text x="51.7583%" y="287.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.03%)</title><rect x="51.5367%" y="373" width="0.0285%" height="15" fill="rgb(241,128,51)" fg:x="1811" fg:w="1"/><text x="51.7867%" y="383.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.03%)</title><rect x="51.5652%" y="373" width="0.0285%" height="15" fill="rgb(227,165,31)" fg:x="1812" fg:w="1"/><text x="51.8152%" y="383.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.03%)</title><rect x="51.5652%" y="357" width="0.0285%" height="15" fill="rgb(228,167,24)" fg:x="1812" fg:w="1"/><text x="51.8152%" y="367.50"></text></g><g><title>tftp::io::from_io_err (1 samples, 0.03%)</title><rect x="51.5652%" y="341" width="0.0285%" height="15" fill="rgb(228,143,12)" fg:x="1812" fg:w="1"/><text x="51.8152%" y="351.50"></text></g><g><title>std::io::error::Error::kind (1 samples, 0.03%)</title><rect x="51.5652%" y="325" width="0.0285%" height="15" fill="rgb(249,149,8)" fg:x="1812" fg:w="1"/><text x="51.8152%" y="335.50"></text></g><g><title>std::sys::unix::decode_error_kind (1 samples, 0.03%)</title><rect x="51.5652%" y="309" width="0.0285%" height="15" fill="rgb(243,35,44)" fg:x="1812" fg:w="1"/><text x="51.8152%" y="319.50"></text></g><g><title>polling::Poller::modify (1 samples, 0.03%)</title><rect x="51.5936%" y="373" width="0.0285%" height="15" fill="rgb(246,89,9)" fg:x="1813" fg:w="1"/><text x="51.8436%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.03%)</title><rect x="51.6221%" y="357" width="0.0285%" height="15" fill="rgb(233,213,13)" fg:x="1814" fg:w="1"/><text x="51.8721%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.03%)</title><rect x="51.6221%" y="341" width="0.0285%" height="15" fill="rgb(233,141,41)" fg:x="1814" fg:w="1"/><text x="51.8721%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.03%)</title><rect x="51.6221%" y="325" width="0.0285%" height="15" fill="rgb(239,167,4)" fg:x="1814" fg:w="1"/><text x="51.8721%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="51.6221%" y="309" width="0.0285%" height="15" fill="rgb(209,217,16)" fg:x="1814" fg:w="1"/><text x="51.8721%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.03%)</title><rect x="51.6221%" y="293" width="0.0285%" height="15" fill="rgb(219,88,35)" fg:x="1814" fg:w="1"/><text x="51.8721%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.03%)</title><rect x="51.6221%" y="277" width="0.0285%" height="15" fill="rgb(220,193,23)" fg:x="1814" fg:w="1"/><text x="51.8721%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.03%)</title><rect x="51.6221%" y="261" width="0.0285%" height="15" fill="rgb(230,90,52)" fg:x="1814" fg:w="1"/><text x="51.8721%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.03%)</title><rect x="51.6221%" y="245" width="0.0285%" height="15" fill="rgb(252,106,19)" fg:x="1814" fg:w="1"/><text x="51.8721%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.03%)</title><rect x="51.6221%" y="229" width="0.0285%" height="15" fill="rgb(206,74,20)" fg:x="1814" fg:w="1"/><text x="51.8721%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.03%)</title><rect x="51.6221%" y="213" width="0.0285%" height="15" fill="rgb(230,138,44)" fg:x="1814" fg:w="1"/><text x="51.8721%" y="223.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (1 samples, 0.03%)</title><rect x="51.6221%" y="197" width="0.0285%" height="15" fill="rgb(235,182,43)" fg:x="1814" fg:w="1"/><text x="51.8721%" y="207.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (1 samples, 0.03%)</title><rect x="51.6221%" y="181" width="0.0285%" height="15" fill="rgb(242,16,51)" fg:x="1814" fg:w="1"/><text x="51.8721%" y="191.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (1 samples, 0.03%)</title><rect x="51.6505%" y="357" width="0.0285%" height="15" fill="rgb(248,9,4)" fg:x="1815" fg:w="1"/><text x="51.9005%" y="367.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.03%)</title><rect x="51.6790%" y="341" width="0.0285%" height="15" fill="rgb(210,31,22)" fg:x="1816" fg:w="1"/><text x="51.9290%" y="351.50"></text></g><g><title>epoll_wait (9 samples, 0.26%)</title><rect x="51.7075%" y="341" width="0.2561%" height="15" fill="rgb(239,54,39)" fg:x="1817" fg:w="9"/><text x="51.9575%" y="351.50"></text></g><g><title>polling::Poller::wait (13 samples, 0.37%)</title><rect x="51.6221%" y="373" width="0.3699%" height="15" fill="rgb(230,99,41)" fg:x="1814" fg:w="13"/><text x="51.8721%" y="383.50"></text></g><g><title>polling::epoll::Poller::wait (11 samples, 0.31%)</title><rect x="51.6790%" y="357" width="0.3130%" height="15" fill="rgb(253,106,12)" fg:x="1816" fg:w="11"/><text x="51.9290%" y="367.50"></text></g><g><title>std::io::error::Error::last_os_error (1 samples, 0.03%)</title><rect x="51.9636%" y="341" width="0.0285%" height="15" fill="rgb(213,46,41)" fg:x="1826" fg:w="1"/><text x="52.2136%" y="351.50"></text></g><g><title>std::sys::unix::os::errno (1 samples, 0.03%)</title><rect x="51.9636%" y="325" width="0.0285%" height="15" fill="rgb(215,133,35)" fg:x="1826" fg:w="1"/><text x="52.2136%" y="335.50"></text></g><g><title>__errno_location (1 samples, 0.03%)</title><rect x="51.9636%" y="309" width="0.0285%" height="15" fill="rgb(213,28,5)" fg:x="1826" fg:w="1"/><text x="52.2136%" y="319.50"></text></g><g><title>recvfrom (1 samples, 0.03%)</title><rect x="51.9920%" y="309" width="0.0285%" height="15" fill="rgb(215,77,49)" fg:x="1827" fg:w="1"/><text x="52.2420%" y="319.50"></text></g><g><title>&lt;tftp::socket::StdSocket as tftp::socket::Socket&gt;::recv_from (20 samples, 0.57%)</title><rect x="51.5083%" y="389" width="0.5692%" height="15" fill="rgb(248,100,22)" fg:x="1810" fg:w="20"/><text x="51.7583%" y="399.50"></text></g><g><title>std::net::udp::UdpSocket::recv_from (3 samples, 0.09%)</title><rect x="51.9920%" y="373" width="0.0854%" height="15" fill="rgb(208,67,9)" fg:x="1827" fg:w="3"/><text x="52.2420%" y="383.50"></text></g><g><title>std::sys_common::net::UdpSocket::recv_from (3 samples, 0.09%)</title><rect x="51.9920%" y="357" width="0.0854%" height="15" fill="rgb(219,133,21)" fg:x="1827" fg:w="3"/><text x="52.2420%" y="367.50"></text></g><g><title>std::sys::unix::net::Socket::recv_from (3 samples, 0.09%)</title><rect x="51.9920%" y="341" width="0.0854%" height="15" fill="rgb(246,46,29)" fg:x="1827" fg:w="3"/><text x="52.2420%" y="351.50"></text></g><g><title>std::sys::unix::net::Socket::recv_from_with_flags (3 samples, 0.09%)</title><rect x="51.9920%" y="325" width="0.0854%" height="15" fill="rgb(246,185,52)" fg:x="1827" fg:w="3"/><text x="52.2420%" y="335.50"></text></g><g><title>std::sys::unix::cvt (2 samples, 0.06%)</title><rect x="52.0205%" y="309" width="0.0569%" height="15" fill="rgb(252,136,11)" fg:x="1828" fg:w="2"/><text x="52.2705%" y="319.50"></text></g><g><title>std::io::error::Error::last_os_error (2 samples, 0.06%)</title><rect x="52.0205%" y="293" width="0.0569%" height="15" fill="rgb(219,138,53)" fg:x="1828" fg:w="2"/><text x="52.2705%" y="303.50"></text></g><g><title>std::sys::unix::os::errno (2 samples, 0.06%)</title><rect x="52.0205%" y="277" width="0.0569%" height="15" fill="rgb(211,51,23)" fg:x="1828" fg:w="2"/><text x="52.2705%" y="287.50"></text></g><g><title>__errno_location (2 samples, 0.06%)</title><rect x="52.0205%" y="261" width="0.0569%" height="15" fill="rgb(247,221,28)" fg:x="1828" fg:w="2"/><text x="52.2705%" y="271.50"></text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::truncate (1 samples, 0.03%)</title><rect x="52.0774%" y="389" width="0.0285%" height="15" fill="rgb(251,222,45)" fg:x="1830" fg:w="1"/><text x="52.3274%" y="399.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (2 samples, 0.06%)</title><rect x="52.1059%" y="309" width="0.0569%" height="15" fill="rgb(217,162,53)" fg:x="1831" fg:w="2"/><text x="52.3559%" y="319.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.03%)</title><rect x="52.1343%" y="293" width="0.0285%" height="15" fill="rgb(229,93,14)" fg:x="1832" fg:w="1"/><text x="52.3843%" y="303.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (1 samples, 0.03%)</title><rect x="52.1628%" y="293" width="0.0285%" height="15" fill="rgb(209,67,49)" fg:x="1833" fg:w="1"/><text x="52.4128%" y="303.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (1 samples, 0.03%)</title><rect x="52.1628%" y="277" width="0.0285%" height="15" fill="rgb(213,87,29)" fg:x="1833" fg:w="1"/><text x="52.4128%" y="287.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.03%)</title><rect x="52.1628%" y="261" width="0.0285%" height="15" fill="rgb(205,151,52)" fg:x="1833" fg:w="1"/><text x="52.4128%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.06%)</title><rect x="52.1912%" y="293" width="0.0569%" height="15" fill="rgb(253,215,39)" fg:x="1834" fg:w="2"/><text x="52.4412%" y="303.50"></text></g><g><title>chacha20::xchacha::quarter_round (2 samples, 0.06%)</title><rect x="52.2482%" y="293" width="0.0569%" height="15" fill="rgb(221,220,41)" fg:x="1836" fg:w="2"/><text x="52.4982%" y="303.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (1 samples, 0.03%)</title><rect x="52.2766%" y="277" width="0.0285%" height="15" fill="rgb(218,133,21)" fg:x="1837" fg:w="1"/><text x="52.5266%" y="287.50"></text></g><g><title>core::array::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T: N]&gt;::index_mut (1 samples, 0.03%)</title><rect x="52.3051%" y="293" width="0.0285%" height="15" fill="rgb(221,193,43)" fg:x="1838" fg:w="1"/><text x="52.5551%" y="303.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.03%)</title><rect x="52.3051%" y="277" width="0.0285%" height="15" fill="rgb(240,128,52)" fg:x="1838" fg:w="1"/><text x="52.5551%" y="287.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.03%)</title><rect x="52.3051%" y="261" width="0.0285%" height="15" fill="rgb(253,114,12)" fg:x="1838" fg:w="1"/><text x="52.5551%" y="271.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.03%)</title><rect x="52.3051%" y="245" width="0.0285%" height="15" fill="rgb(215,223,47)" fg:x="1838" fg:w="1"/><text x="52.5551%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (1 samples, 0.03%)</title><rect x="52.3335%" y="293" width="0.0285%" height="15" fill="rgb(248,225,23)" fg:x="1839" fg:w="1"/><text x="52.5835%" y="303.50"></text></g><g><title>core::iter::adapters::zip::Zip&lt;A,B&gt;::new (1 samples, 0.03%)</title><rect x="52.3335%" y="277" width="0.0285%" height="15" fill="rgb(250,108,0)" fg:x="1839" fg:w="1"/><text x="52.5835%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (1 samples, 0.03%)</title><rect x="52.3335%" y="261" width="0.0285%" height="15" fill="rgb(228,208,7)" fg:x="1839" fg:w="1"/><text x="52.5835%" y="271.50"></text></g><g><title>core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size (1 samples, 0.03%)</title><rect x="52.3335%" y="245" width="0.0285%" height="15" fill="rgb(244,45,10)" fg:x="1839" fg:w="1"/><text x="52.5835%" y="255.50"></text></g><g><title>&lt;core::slice::iter::ChunksExactMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.03%)</title><rect x="52.3335%" y="229" width="0.0285%" height="15" fill="rgb(207,125,25)" fg:x="1839" fg:w="1"/><text x="52.5835%" y="239.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.03%)</title><rect x="52.3620%" y="293" width="0.0285%" height="15" fill="rgb(210,195,18)" fg:x="1840" fg:w="1"/><text x="52.6120%" y="303.50"></text></g><g><title>chacha20::xchacha::hchacha (9 samples, 0.26%)</title><rect x="52.1628%" y="309" width="0.2561%" height="15" fill="rgb(249,80,12)" fg:x="1833" fg:w="9"/><text x="52.4128%" y="319.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.03%)</title><rect x="52.3904%" y="293" width="0.0285%" height="15" fill="rgb(221,65,9)" fg:x="1841" fg:w="1"/><text x="52.6404%" y="303.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.03%)</title><rect x="52.3904%" y="277" width="0.0285%" height="15" fill="rgb(235,49,36)" fg:x="1841" fg:w="1"/><text x="52.6404%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.03%)</title><rect x="52.3904%" y="261" width="0.0285%" height="15" fill="rgb(225,32,20)" fg:x="1841" fg:w="1"/><text x="52.6404%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="52.3904%" y="245" width="0.0285%" height="15" fill="rgb(215,141,46)" fg:x="1841" fg:w="1"/><text x="52.6404%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.03%)</title><rect x="52.3904%" y="229" width="0.0285%" height="15" fill="rgb(250,160,47)" fg:x="1841" fg:w="1"/><text x="52.6404%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.03%)</title><rect x="52.3904%" y="213" width="0.0285%" height="15" fill="rgb(216,222,40)" fg:x="1841" fg:w="1"/><text x="52.6404%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.03%)</title><rect x="52.3904%" y="197" width="0.0285%" height="15" fill="rgb(234,217,39)" fg:x="1841" fg:w="1"/><text x="52.6404%" y="207.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (1 samples, 0.03%)</title><rect x="52.3904%" y="181" width="0.0285%" height="15" fill="rgb(207,178,40)" fg:x="1841" fg:w="1"/><text x="52.6404%" y="191.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (12 samples, 0.34%)</title><rect x="52.1059%" y="325" width="0.3415%" height="15" fill="rgb(221,136,13)" fg:x="1831" fg:w="12"/><text x="52.3559%" y="335.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.03%)</title><rect x="52.4189%" y="309" width="0.0285%" height="15" fill="rgb(249,199,10)" fg:x="1842" fg:w="1"/><text x="52.6689%" y="319.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.03%)</title><rect x="52.4189%" y="293" width="0.0285%" height="15" fill="rgb(249,222,13)" fg:x="1842" fg:w="1"/><text x="52.6689%" y="303.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::new (1 samples, 0.03%)</title><rect x="52.4189%" y="277" width="0.0285%" height="15" fill="rgb(244,185,38)" fg:x="1842" fg:w="1"/><text x="52.6689%" y="287.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as crypto_common::KeyIvInit&gt;::new (14 samples, 0.40%)</title><rect x="52.1059%" y="341" width="0.3984%" height="15" fill="rgb(236,202,9)" fg:x="1831" fg:w="14"/><text x="52.3559%" y="351.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (2 samples, 0.06%)</title><rect x="52.4474%" y="325" width="0.0569%" height="15" fill="rgb(250,229,37)" fg:x="1843" fg:w="2"/><text x="52.6974%" y="335.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (2 samples, 0.06%)</title><rect x="52.4474%" y="309" width="0.0569%" height="15" fill="rgb(206,174,23)" fg:x="1843" fg:w="2"/><text x="52.6974%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.06%)</title><rect x="52.4474%" y="293" width="0.0569%" height="15" fill="rgb(211,33,43)" fg:x="1843" fg:w="2"/><text x="52.6974%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.06%)</title><rect x="52.4474%" y="277" width="0.0569%" height="15" fill="rgb(245,58,50)" fg:x="1843" fg:w="2"/><text x="52.6974%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.06%)</title><rect x="52.4474%" y="261" width="0.0569%" height="15" fill="rgb(244,68,36)" fg:x="1843" fg:w="2"/><text x="52.6974%" y="271.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.03%)</title><rect x="52.5327%" y="309" width="0.0285%" height="15" fill="rgb(232,229,15)" fg:x="1846" fg:w="1"/><text x="52.7827%" y="319.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.03%)</title><rect x="52.5327%" y="293" width="0.0285%" height="15" fill="rgb(254,30,23)" fg:x="1846" fg:w="1"/><text x="52.7827%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.03%)</title><rect x="52.5327%" y="277" width="0.0285%" height="15" fill="rgb(235,160,14)" fg:x="1846" fg:w="1"/><text x="52.7827%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="52.5327%" y="261" width="0.0285%" height="15" fill="rgb(212,155,44)" fg:x="1846" fg:w="1"/><text x="52.7827%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.03%)</title><rect x="52.5327%" y="245" width="0.0285%" height="15" fill="rgb(226,2,50)" fg:x="1846" fg:w="1"/><text x="52.7827%" y="255.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="52.5327%" y="229" width="0.0285%" height="15" fill="rgb(234,177,6)" fg:x="1846" fg:w="1"/><text x="52.7827%" y="239.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::authenticate_lengths (2 samples, 0.06%)</title><rect x="52.5327%" y="325" width="0.0569%" height="15" fill="rgb(217,24,9)" fg:x="1846" fg:w="2"/><text x="52.7827%" y="335.50"></text></g><g><title>universal_hash::UniversalHash::update (1 samples, 0.03%)</title><rect x="52.5612%" y="309" width="0.0285%" height="15" fill="rgb(220,13,46)" fg:x="1847" fg:w="1"/><text x="52.8112%" y="319.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (1 samples, 0.03%)</title><rect x="52.5612%" y="293" width="0.0285%" height="15" fill="rgb(239,221,27)" fg:x="1847" fg:w="1"/><text x="52.8112%" y="303.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (1 samples, 0.03%)</title><rect x="52.5612%" y="277" width="0.0285%" height="15" fill="rgb(222,198,25)" fg:x="1847" fg:w="1"/><text x="52.8112%" y="287.50"></text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (1 samples, 0.03%)</title><rect x="52.5612%" y="261" width="0.0285%" height="15" fill="rgb(211,99,13)" fg:x="1847" fg:w="1"/><text x="52.8112%" y="271.50"></text></g><g><title>&lt;poly1305::backend::soft::State as universal_hash::UhfBackend&gt;::proc_block (1 samples, 0.03%)</title><rect x="52.5612%" y="245" width="0.0285%" height="15" fill="rgb(232,111,31)" fg:x="1847" fg:w="1"/><text x="52.8112%" y="255.50"></text></g><g><title>poly1305::backend::soft::State::compute_block (1 samples, 0.03%)</title><rect x="52.5612%" y="229" width="0.0285%" height="15" fill="rgb(245,82,37)" fg:x="1847" fg:w="1"/><text x="52.8112%" y="239.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.03%)</title><rect x="52.5612%" y="213" width="0.0285%" height="15" fill="rgb(227,149,46)" fg:x="1847" fg:w="1"/><text x="52.8112%" y="223.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.03%)</title><rect x="52.5612%" y="197" width="0.0285%" height="15" fill="rgb(218,36,50)" fg:x="1847" fg:w="1"/><text x="52.8112%" y="207.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.03%)</title><rect x="52.5612%" y="181" width="0.0285%" height="15" fill="rgb(226,80,48)" fg:x="1847" fg:w="1"/><text x="52.8112%" y="191.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_slli_epi32 (1 samples, 0.03%)</title><rect x="52.6181%" y="133" width="0.0285%" height="15" fill="rgb(238,224,15)" fg:x="1849" fg:w="1"/><text x="52.8681%" y="143.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_srli_epi32 (1 samples, 0.03%)</title><rect x="52.6466%" y="133" width="0.0285%" height="15" fill="rgb(241,136,10)" fg:x="1850" fg:w="1"/><text x="52.8966%" y="143.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i32x4 (1 samples, 0.03%)</title><rect x="52.6466%" y="117" width="0.0285%" height="15" fill="rgb(208,32,45)" fg:x="1850" fg:w="1"/><text x="52.8966%" y="127.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (5 samples, 0.14%)</title><rect x="52.5896%" y="325" width="0.1423%" height="15" fill="rgb(207,135,9)" fg:x="1848" fg:w="5"/><text x="52.8396%" y="335.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (5 samples, 0.14%)</title><rect x="52.5896%" y="309" width="0.1423%" height="15" fill="rgb(206,86,44)" fg:x="1848" fg:w="5"/><text x="52.8396%" y="319.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (5 samples, 0.14%)</title><rect x="52.5896%" y="293" width="0.1423%" height="15" fill="rgb(245,177,15)" fg:x="1848" fg:w="5"/><text x="52.8396%" y="303.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::write_keystream_block (5 samples, 0.14%)</title><rect x="52.5896%" y="277" width="0.1423%" height="15" fill="rgb(206,64,50)" fg:x="1848" fg:w="5"/><text x="52.8396%" y="287.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (5 samples, 0.14%)</title><rect x="52.5896%" y="261" width="0.1423%" height="15" fill="rgb(234,36,40)" fg:x="1848" fg:w="5"/><text x="52.8396%" y="271.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (5 samples, 0.14%)</title><rect x="52.5896%" y="245" width="0.1423%" height="15" fill="rgb(213,64,8)" fg:x="1848" fg:w="5"/><text x="52.8396%" y="255.50"></text></g><g><title>chacha20::backends::sse2::inner (5 samples, 0.14%)</title><rect x="52.5896%" y="229" width="0.1423%" height="15" fill="rgb(210,75,36)" fg:x="1848" fg:w="5"/><text x="52.8396%" y="239.50"></text></g><g><title>&lt;cipher::stream_core::WriteBlockCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (5 samples, 0.14%)</title><rect x="52.5896%" y="213" width="0.1423%" height="15" fill="rgb(229,88,21)" fg:x="1848" fg:w="5"/><text x="52.8396%" y="223.50"></text></g><g><title>&lt;chacha20::backends::sse2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (5 samples, 0.14%)</title><rect x="52.5896%" y="197" width="0.1423%" height="15" fill="rgb(252,204,47)" fg:x="1848" fg:w="5"/><text x="52.8396%" y="207.50"></text></g><g><title>chacha20::backends::sse2::rounds (5 samples, 0.14%)</title><rect x="52.5896%" y="181" width="0.1423%" height="15" fill="rgb(208,77,27)" fg:x="1848" fg:w="5"/><text x="52.8396%" y="191.50"></text></g><g><title>chacha20::backends::sse2::double_quarter_round (5 samples, 0.14%)</title><rect x="52.5896%" y="165" width="0.1423%" height="15" fill="rgb(221,76,26)" fg:x="1848" fg:w="5"/><text x="52.8396%" y="175.50"></text></g><g><title>chacha20::backends::sse2::add_xor_rot (5 samples, 0.14%)</title><rect x="52.5896%" y="149" width="0.1423%" height="15" fill="rgb(225,139,18)" fg:x="1848" fg:w="5"/><text x="52.8396%" y="159.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_xor_si128 (2 samples, 0.06%)</title><rect x="52.6750%" y="133" width="0.0569%" height="15" fill="rgb(230,137,11)" fg:x="1851" fg:w="2"/><text x="52.9250%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;chacha20::xchacha::XChaChaCore&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm,typenum::bit::B1&gt;,typenum::bit::B0&gt;,typenum::bit::B1&gt;,typenum::bit::B0&gt;&gt;&gt;&gt; (2 samples, 0.06%)</title><rect x="52.7319%" y="325" width="0.0569%" height="15" fill="rgb(212,28,1)" fg:x="1853" fg:w="2"/><text x="52.9819%" y="335.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.06%)</title><rect x="52.7319%" y="309" width="0.0569%" height="15" fill="rgb(248,164,17)" fg:x="1853" fg:w="2"/><text x="52.9819%" y="319.50"></text></g><g><title>&lt;[Z] as zeroize::Zeroize&gt;::zeroize (2 samples, 0.06%)</title><rect x="52.7319%" y="293" width="0.0569%" height="15" fill="rgb(222,171,42)" fg:x="1853" fg:w="2"/><text x="52.9819%" y="303.50"></text></g><g><title>zeroize::volatile_set (2 samples, 0.06%)</title><rect x="52.7319%" y="277" width="0.0569%" height="15" fill="rgb(243,84,45)" fg:x="1853" fg:w="2"/><text x="52.9819%" y="287.50"></text></g><g><title>core::ptr::write_volatile (1 samples, 0.03%)</title><rect x="52.7604%" y="261" width="0.0285%" height="15" fill="rgb(252,49,23)" fg:x="1854" fg:w="1"/><text x="53.0104%" y="271.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.03%)</title><rect x="52.7888%" y="309" width="0.0285%" height="15" fill="rgb(215,19,7)" fg:x="1855" fg:w="1"/><text x="53.0388%" y="319.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.03%)</title><rect x="52.7888%" y="293" width="0.0285%" height="15" fill="rgb(238,81,41)" fg:x="1855" fg:w="1"/><text x="53.0388%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.03%)</title><rect x="52.7888%" y="277" width="0.0285%" height="15" fill="rgb(210,199,37)" fg:x="1855" fg:w="1"/><text x="53.0388%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="52.7888%" y="261" width="0.0285%" height="15" fill="rgb(244,192,49)" fg:x="1855" fg:w="1"/><text x="53.0388%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.03%)</title><rect x="52.7888%" y="245" width="0.0285%" height="15" fill="rgb(226,211,11)" fg:x="1855" fg:w="1"/><text x="53.0388%" y="255.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::decrypt_in_place_detached (12 samples, 0.34%)</title><rect x="52.5043%" y="341" width="0.3415%" height="15" fill="rgb(236,162,54)" fg:x="1845" fg:w="12"/><text x="52.7543%" y="351.50"></text></g><g><title>universal_hash::UniversalHash::update_padded (2 samples, 0.06%)</title><rect x="52.7888%" y="325" width="0.0569%" height="15" fill="rgb(220,229,9)" fg:x="1855" fg:w="2"/><text x="53.0388%" y="335.50"></text></g><g><title>universal_hash::UniversalHash::update (1 samples, 0.03%)</title><rect x="52.8173%" y="309" width="0.0285%" height="15" fill="rgb(250,87,22)" fg:x="1856" fg:w="1"/><text x="53.0673%" y="319.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (1 samples, 0.03%)</title><rect x="52.8173%" y="293" width="0.0285%" height="15" fill="rgb(239,43,17)" fg:x="1856" fg:w="1"/><text x="53.0673%" y="303.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (1 samples, 0.03%)</title><rect x="52.8173%" y="277" width="0.0285%" height="15" fill="rgb(231,177,25)" fg:x="1856" fg:w="1"/><text x="53.0673%" y="287.50"></text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (1 samples, 0.03%)</title><rect x="52.8173%" y="261" width="0.0285%" height="15" fill="rgb(219,179,1)" fg:x="1856" fg:w="1"/><text x="53.0673%" y="271.50"></text></g><g><title>&lt;poly1305::backend::soft::State as universal_hash::UhfBackend&gt;::proc_block (1 samples, 0.03%)</title><rect x="52.8173%" y="245" width="0.0285%" height="15" fill="rgb(238,219,53)" fg:x="1856" fg:w="1"/><text x="53.0673%" y="255.50"></text></g><g><title>poly1305::backend::soft::State::compute_block (1 samples, 0.03%)</title><rect x="52.8173%" y="229" width="0.0285%" height="15" fill="rgb(232,167,36)" fg:x="1856" fg:w="1"/><text x="53.0673%" y="239.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (1 samples, 0.03%)</title><rect x="52.8173%" y="213" width="0.0285%" height="15" fill="rgb(244,19,51)" fg:x="1856" fg:w="1"/><text x="53.0673%" y="223.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (1 samples, 0.03%)</title><rect x="52.8173%" y="197" width="0.0285%" height="15" fill="rgb(224,6,22)" fg:x="1856" fg:w="1"/><text x="53.0673%" y="207.50"></text></g><g><title>chacha20::backends::sse2::double_quarter_round (1 samples, 0.03%)</title><rect x="52.8458%" y="165" width="0.0285%" height="15" fill="rgb(224,145,5)" fg:x="1857" fg:w="1"/><text x="53.0958%" y="175.50"></text></g><g><title>chacha20::backends::sse2::add_xor_rot (1 samples, 0.03%)</title><rect x="52.8458%" y="149" width="0.0285%" height="15" fill="rgb(234,130,49)" fg:x="1857" fg:w="1"/><text x="53.0958%" y="159.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_add_epi32 (1 samples, 0.03%)</title><rect x="52.8458%" y="133" width="0.0285%" height="15" fill="rgb(254,6,2)" fg:x="1857" fg:w="1"/><text x="53.0958%" y="143.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::write_keystream_block (2 samples, 0.06%)</title><rect x="52.8458%" y="277" width="0.0569%" height="15" fill="rgb(208,96,46)" fg:x="1857" fg:w="2"/><text x="53.0958%" y="287.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (2 samples, 0.06%)</title><rect x="52.8458%" y="261" width="0.0569%" height="15" fill="rgb(239,3,39)" fg:x="1857" fg:w="2"/><text x="53.0958%" y="271.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (2 samples, 0.06%)</title><rect x="52.8458%" y="245" width="0.0569%" height="15" fill="rgb(233,210,1)" fg:x="1857" fg:w="2"/><text x="53.0958%" y="255.50"></text></g><g><title>chacha20::backends::sse2::inner (2 samples, 0.06%)</title><rect x="52.8458%" y="229" width="0.0569%" height="15" fill="rgb(244,137,37)" fg:x="1857" fg:w="2"/><text x="53.0958%" y="239.50"></text></g><g><title>&lt;cipher::stream_core::WriteBlockCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (2 samples, 0.06%)</title><rect x="52.8458%" y="213" width="0.0569%" height="15" fill="rgb(240,136,2)" fg:x="1857" fg:w="2"/><text x="53.0958%" y="223.50"></text></g><g><title>&lt;chacha20::backends::sse2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (2 samples, 0.06%)</title><rect x="52.8458%" y="197" width="0.0569%" height="15" fill="rgb(239,18,37)" fg:x="1857" fg:w="2"/><text x="53.0958%" y="207.50"></text></g><g><title>chacha20::backends::sse2::rounds (2 samples, 0.06%)</title><rect x="52.8458%" y="181" width="0.0569%" height="15" fill="rgb(218,185,22)" fg:x="1857" fg:w="2"/><text x="53.0958%" y="191.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.03%)</title><rect x="52.8742%" y="165" width="0.0285%" height="15" fill="rgb(225,218,4)" fg:x="1858" fg:w="1"/><text x="53.1242%" y="175.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.03%)</title><rect x="52.8742%" y="149" width="0.0285%" height="15" fill="rgb(230,182,32)" fg:x="1858" fg:w="1"/><text x="53.1242%" y="159.50"></text></g><g><title>core::mem::replace (1 samples, 0.03%)</title><rect x="52.8742%" y="133" width="0.0285%" height="15" fill="rgb(242,56,43)" fg:x="1858" fg:w="1"/><text x="53.1242%" y="143.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (3 samples, 0.09%)</title><rect x="52.8458%" y="325" width="0.0854%" height="15" fill="rgb(233,99,24)" fg:x="1857" fg:w="3"/><text x="53.0958%" y="335.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (3 samples, 0.09%)</title><rect x="52.8458%" y="309" width="0.0854%" height="15" fill="rgb(234,209,42)" fg:x="1857" fg:w="3"/><text x="53.0958%" y="319.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (3 samples, 0.09%)</title><rect x="52.8458%" y="293" width="0.0854%" height="15" fill="rgb(227,7,12)" fg:x="1857" fg:w="3"/><text x="53.0958%" y="303.50"></text></g><g><title>cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt;::check_remaining (1 samples, 0.03%)</title><rect x="52.9027%" y="277" width="0.0285%" height="15" fill="rgb(245,203,43)" fg:x="1859" fg:w="1"/><text x="53.1527%" y="287.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::remaining_blocks (1 samples, 0.03%)</title><rect x="52.9027%" y="261" width="0.0285%" height="15" fill="rgb(238,205,33)" fg:x="1859" fg:w="1"/><text x="53.1527%" y="271.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::remaining_blocks (1 samples, 0.03%)</title><rect x="52.9027%" y="245" width="0.0285%" height="15" fill="rgb(231,56,7)" fg:x="1859" fg:w="1"/><text x="53.1527%" y="255.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (1 samples, 0.03%)</title><rect x="52.9027%" y="229" width="0.0285%" height="15" fill="rgb(244,186,29)" fg:x="1859" fg:w="1"/><text x="53.1527%" y="239.50"></text></g><g><title>core::convert::num::ptr_try_from_impls::&lt;impl core::convert::TryFrom&lt;u32&gt; for usize&gt;::try_from (1 samples, 0.03%)</title><rect x="52.9027%" y="213" width="0.0285%" height="15" fill="rgb(234,111,31)" fg:x="1859" fg:w="1"/><text x="53.1527%" y="223.50"></text></g><g><title>cipher::stream::StreamCipherSeek::seek (1 samples, 0.03%)</title><rect x="52.9311%" y="325" width="0.0285%" height="15" fill="rgb(241,149,10)" fg:x="1860" fg:w="1"/><text x="53.1811%" y="335.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipherSeek&gt;::try_seek (1 samples, 0.03%)</title><rect x="52.9311%" y="309" width="0.0285%" height="15" fill="rgb(249,206,44)" fg:x="1860" fg:w="1"/><text x="53.1811%" y="319.50"></text></g><g><title>&lt;u64 as cipher::stream::SeekNum&gt;::into_block_byte (1 samples, 0.03%)</title><rect x="52.9311%" y="293" width="0.0285%" height="15" fill="rgb(251,153,30)" fg:x="1860" fg:w="1"/><text x="53.1811%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::enumerate (1 samples, 0.03%)</title><rect x="52.9596%" y="293" width="0.0285%" height="15" fill="rgb(239,152,38)" fg:x="1861" fg:w="1"/><text x="53.2096%" y="303.50"></text></g><g><title>core::iter::adapters::enumerate::Enumerate&lt;I&gt;::new (1 samples, 0.03%)</title><rect x="52.9596%" y="277" width="0.0285%" height="15" fill="rgb(249,139,47)" fg:x="1861" fg:w="1"/><text x="53.2096%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.09%)</title><rect x="52.9880%" y="293" width="0.0854%" height="15" fill="rgb(244,64,35)" fg:x="1862" fg:w="3"/><text x="53.2380%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.09%)</title><rect x="52.9880%" y="277" width="0.0854%" height="15" fill="rgb(216,46,15)" fg:x="1862" fg:w="3"/><text x="53.2380%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.09%)</title><rect x="52.9880%" y="261" width="0.0854%" height="15" fill="rgb(250,74,19)" fg:x="1862" fg:w="3"/><text x="53.2380%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (2 samples, 0.06%)</title><rect x="53.0165%" y="245" width="0.0569%" height="15" fill="rgb(249,42,33)" fg:x="1863" fg:w="2"/><text x="53.2665%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.03%)</title><rect x="53.0450%" y="229" width="0.0285%" height="15" fill="rgb(242,149,17)" fg:x="1864" fg:w="1"/><text x="53.2950%" y="239.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (1 samples, 0.03%)</title><rect x="53.0450%" y="213" width="0.0285%" height="15" fill="rgb(244,29,21)" fg:x="1864" fg:w="1"/><text x="53.2950%" y="223.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (35 samples, 1.00%)</title><rect x="52.1059%" y="357" width="0.9960%" height="15" fill="rgb(220,130,37)" fg:x="1831" fg:w="35"/><text x="52.3559%" y="367.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (9 samples, 0.26%)</title><rect x="52.8458%" y="341" width="0.2561%" height="15" fill="rgb(211,67,2)" fg:x="1857" fg:w="9"/><text x="53.0958%" y="351.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (5 samples, 0.14%)</title><rect x="52.9596%" y="325" width="0.1423%" height="15" fill="rgb(235,68,52)" fg:x="1861" fg:w="5"/><text x="53.2096%" y="335.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (5 samples, 0.14%)</title><rect x="52.9596%" y="309" width="0.1423%" height="15" fill="rgb(246,142,3)" fg:x="1861" fg:w="5"/><text x="53.2096%" y="319.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (1 samples, 0.03%)</title><rect x="53.0734%" y="293" width="0.0285%" height="15" fill="rgb(241,25,7)" fg:x="1865" fg:w="1"/><text x="53.3234%" y="303.50"></text></g><g><title>core::mem::forget (1 samples, 0.03%)</title><rect x="53.0734%" y="277" width="0.0285%" height="15" fill="rgb(242,119,39)" fg:x="1865" fg:w="1"/><text x="53.3234%" y="287.50"></text></g><g><title>&lt;tftp::socket::EncryptionBoundSocket&lt;S&gt; as tftp::socket::Socket&gt;::recv_from (58 samples, 1.65%)</title><rect x="51.4798%" y="405" width="1.6505%" height="15" fill="rgb(241,98,45)" fg:x="1809" fg:w="58"/><text x="51.7298%" y="415.50"></text></g><g><title>tftp::encryption::Encryptor::decrypt (36 samples, 1.02%)</title><rect x="52.1059%" y="389" width="1.0245%" height="15" fill="rgb(254,28,30)" fg:x="1831" fg:w="36"/><text x="52.3559%" y="399.50"></text></g><g><title>aead::AeadInPlace::decrypt_in_place (36 samples, 1.02%)</title><rect x="52.1059%" y="373" width="1.0245%" height="15" fill="rgb(241,142,54)" fg:x="1831" fg:w="36"/><text x="52.3559%" y="383.50"></text></g><g><title>generic_array::GenericArray&lt;T,N&gt;::from_slice (1 samples, 0.03%)</title><rect x="53.1019%" y="357" width="0.0285%" height="15" fill="rgb(222,85,15)" fg:x="1866" fg:w="1"/><text x="53.3519%" y="367.50"></text></g><g><title>&lt;tftp::socket::StdSocket as tftp::socket::Socket&gt;::send_to (2 samples, 0.06%)</title><rect x="53.1303%" y="389" width="0.0569%" height="15" fill="rgb(210,85,47)" fg:x="1867" fg:w="2"/><text x="53.3803%" y="399.50"></text></g><g><title>std::net::udp::UdpSocket::send_to (1 samples, 0.03%)</title><rect x="53.1588%" y="373" width="0.0285%" height="15" fill="rgb(224,206,25)" fg:x="1868" fg:w="1"/><text x="53.4088%" y="383.50"></text></g><g><title>std::sys_common::net::UdpSocket::send_to (1 samples, 0.03%)</title><rect x="53.1588%" y="357" width="0.0285%" height="15" fill="rgb(243,201,19)" fg:x="1868" fg:w="1"/><text x="53.4088%" y="367.50"></text></g><g><title>std::sys_common::net::&lt;impl std::sys_common::IntoInner&lt;(std::sys_common::net::SocketAddrCRepr,u32)&gt; for &amp;std::net::socket_addr::SocketAddr&gt;::into_inner (1 samples, 0.03%)</title><rect x="53.1588%" y="341" width="0.0285%" height="15" fill="rgb(236,59,4)" fg:x="1868" fg:w="1"/><text x="53.4088%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;tftp::packet::PacketType,tftp::error::PacketError&gt;&gt; (2 samples, 0.06%)</title><rect x="53.1873%" y="389" width="0.0569%" height="15" fill="rgb(254,179,45)" fg:x="1869" fg:w="2"/><text x="53.4373%" y="399.50"></text></g><g><title>log::max_level (1 samples, 0.03%)</title><rect x="53.2442%" y="389" width="0.0285%" height="15" fill="rgb(226,14,10)" fg:x="1871" fg:w="1"/><text x="53.4942%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.03%)</title><rect x="53.2442%" y="373" width="0.0285%" height="15" fill="rgb(244,27,41)" fg:x="1871" fg:w="1"/><text x="53.4942%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="53.3295%" y="293" width="0.0285%" height="15" fill="rgb(235,35,32)" fg:x="1874" fg:w="1"/><text x="53.5795%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.03%)</title><rect x="53.3295%" y="277" width="0.0285%" height="15" fill="rgb(218,68,31)" fg:x="1874" fg:w="1"/><text x="53.5795%" y="287.50"></text></g><g><title>&lt;core::slice::iter::ChunksExact&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (1 samples, 0.03%)</title><rect x="53.3295%" y="261" width="0.0285%" height="15" fill="rgb(207,120,37)" fg:x="1874" fg:w="1"/><text x="53.5795%" y="271.50"></text></g><g><title>core::slice::raw::from_raw_parts (1 samples, 0.03%)</title><rect x="53.3295%" y="245" width="0.0285%" height="15" fill="rgb(227,98,0)" fg:x="1874" fg:w="1"/><text x="53.5795%" y="255.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.03%)</title><rect x="53.3295%" y="229" width="0.0285%" height="15" fill="rgb(207,7,3)" fg:x="1874" fg:w="1"/><text x="53.5795%" y="239.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (1 samples, 0.03%)</title><rect x="53.3295%" y="213" width="0.0285%" height="15" fill="rgb(206,98,19)" fg:x="1874" fg:w="1"/><text x="53.5795%" y="223.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="53.3580%" y="293" width="0.0285%" height="15" fill="rgb(217,5,26)" fg:x="1875" fg:w="1"/><text x="53.6080%" y="303.50"></text></g><g><title>core::slice::raw::from_raw_parts (1 samples, 0.03%)</title><rect x="53.3580%" y="277" width="0.0285%" height="15" fill="rgb(235,190,38)" fg:x="1875" fg:w="1"/><text x="53.6080%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (1 samples, 0.03%)</title><rect x="53.3865%" y="293" width="0.0285%" height="15" fill="rgb(247,86,24)" fg:x="1876" fg:w="1"/><text x="53.6365%" y="303.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.03%)</title><rect x="53.3865%" y="277" width="0.0285%" height="15" fill="rgb(205,101,16)" fg:x="1876" fg:w="1"/><text x="53.6365%" y="287.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="53.3865%" y="261" width="0.0285%" height="15" fill="rgb(246,168,33)" fg:x="1876" fg:w="1"/><text x="53.6365%" y="271.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_le_bytes (1 samples, 0.03%)</title><rect x="53.4149%" y="293" width="0.0285%" height="15" fill="rgb(231,114,1)" fg:x="1877" fg:w="1"/><text x="53.6649%" y="303.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (1 samples, 0.03%)</title><rect x="53.4434%" y="293" width="0.0285%" height="15" fill="rgb(207,184,53)" fg:x="1878" fg:w="1"/><text x="53.6934%" y="303.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (6 samples, 0.17%)</title><rect x="53.3295%" y="309" width="0.1707%" height="15" fill="rgb(224,95,51)" fg:x="1874" fg:w="6"/><text x="53.5795%" y="319.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (1 samples, 0.03%)</title><rect x="53.4718%" y="293" width="0.0285%" height="15" fill="rgb(212,188,45)" fg:x="1879" fg:w="1"/><text x="53.7218%" y="303.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="53.4718%" y="277" width="0.0285%" height="15" fill="rgb(223,154,38)" fg:x="1879" fg:w="1"/><text x="53.7218%" y="287.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.03%)</title><rect x="53.4718%" y="261" width="0.0285%" height="15" fill="rgb(251,22,52)" fg:x="1879" fg:w="1"/><text x="53.7218%" y="271.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (3 samples, 0.09%)</title><rect x="53.6710%" y="293" width="0.0854%" height="15" fill="rgb(229,209,22)" fg:x="1886" fg:w="3"/><text x="53.9210%" y="303.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (2 samples, 0.06%)</title><rect x="53.6995%" y="277" width="0.0569%" height="15" fill="rgb(234,138,34)" fg:x="1887" fg:w="2"/><text x="53.9495%" y="287.50"></text></g><g><title>&lt;core::slice::iter::ChunksExact&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (2 samples, 0.06%)</title><rect x="53.9271%" y="261" width="0.0569%" height="15" fill="rgb(212,95,11)" fg:x="1895" fg:w="2"/><text x="54.1771%" y="271.50"></text></g><g><title>core::slice::raw::from_raw_parts (2 samples, 0.06%)</title><rect x="53.9271%" y="245" width="0.0569%" height="15" fill="rgb(240,179,47)" fg:x="1895" fg:w="2"/><text x="54.1771%" y="255.50"></text></g><g><title>core::ptr::slice_from_raw_parts (2 samples, 0.06%)</title><rect x="53.9271%" y="229" width="0.0569%" height="15" fill="rgb(240,163,11)" fg:x="1895" fg:w="2"/><text x="54.1771%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.26%)</title><rect x="53.7564%" y="293" width="0.2561%" height="15" fill="rgb(236,37,12)" fg:x="1889" fg:w="9"/><text x="54.0064%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (7 samples, 0.20%)</title><rect x="53.8133%" y="277" width="0.1992%" height="15" fill="rgb(232,164,16)" fg:x="1891" fg:w="7"/><text x="54.0633%" y="287.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (1 samples, 0.03%)</title><rect x="53.9841%" y="261" width="0.0285%" height="15" fill="rgb(244,205,15)" fg:x="1897" fg:w="1"/><text x="54.2341%" y="271.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (3 samples, 0.09%)</title><rect x="54.6670%" y="277" width="0.0854%" height="15" fill="rgb(223,117,47)" fg:x="1921" fg:w="3"/><text x="54.9170%" y="287.50"></text></g><g><title>chacha20::xchacha::quarter_round (27 samples, 0.77%)</title><rect x="54.0125%" y="293" width="0.7684%" height="15" fill="rgb(244,107,35)" fg:x="1898" fg:w="27"/><text x="54.2625%" y="303.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.03%)</title><rect x="54.7524%" y="277" width="0.0285%" height="15" fill="rgb(205,140,8)" fg:x="1924" fg:w="1"/><text x="55.0024%" y="287.50"></text></g><g><title>core::array::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T: N]&gt;::index_mut (1 samples, 0.03%)</title><rect x="54.7809%" y="293" width="0.0285%" height="15" fill="rgb(228,84,46)" fg:x="1925" fg:w="1"/><text x="55.0309%" y="303.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.03%)</title><rect x="54.7809%" y="277" width="0.0285%" height="15" fill="rgb(254,188,9)" fg:x="1925" fg:w="1"/><text x="55.0309%" y="287.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.03%)</title><rect x="54.7809%" y="261" width="0.0285%" height="15" fill="rgb(206,112,54)" fg:x="1925" fg:w="1"/><text x="55.0309%" y="271.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.03%)</title><rect x="54.7809%" y="245" width="0.0285%" height="15" fill="rgb(216,84,49)" fg:x="1925" fg:w="1"/><text x="55.0309%" y="255.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.06%)</title><rect x="54.8093%" y="293" width="0.0569%" height="15" fill="rgb(214,194,35)" fg:x="1926" fg:w="2"/><text x="55.0593%" y="303.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.06%)</title><rect x="54.8093%" y="277" width="0.0569%" height="15" fill="rgb(249,28,3)" fg:x="1926" fg:w="2"/><text x="55.0593%" y="287.50"></text></g><g><title>core::mem::replace (2 samples, 0.06%)</title><rect x="54.8093%" y="261" width="0.0569%" height="15" fill="rgb(222,56,52)" fg:x="1926" fg:w="2"/><text x="55.0593%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (3 samples, 0.09%)</title><rect x="54.8662%" y="293" width="0.0854%" height="15" fill="rgb(245,217,50)" fg:x="1928" fg:w="3"/><text x="55.1162%" y="303.50"></text></g><g><title>core::slice::iter::&lt;impl core::iter::traits::collect::IntoIterator for &amp;[T]&gt;::into_iter (1 samples, 0.03%)</title><rect x="54.9232%" y="277" width="0.0285%" height="15" fill="rgb(213,201,24)" fg:x="1930" fg:w="1"/><text x="55.1732%" y="287.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (2 samples, 0.06%)</title><rect x="54.9516%" y="293" width="0.0569%" height="15" fill="rgb(248,116,28)" fg:x="1931" fg:w="2"/><text x="55.2016%" y="303.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::chunks_exact (2 samples, 0.06%)</title><rect x="55.0085%" y="293" width="0.0569%" height="15" fill="rgb(219,72,43)" fg:x="1933" fg:w="2"/><text x="55.2585%" y="303.50"></text></g><g><title>core::slice::iter::ChunksExact&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="55.0370%" y="277" width="0.0285%" height="15" fill="rgb(209,138,14)" fg:x="1934" fg:w="1"/><text x="55.2870%" y="287.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (1 samples, 0.03%)</title><rect x="55.0370%" y="261" width="0.0285%" height="15" fill="rgb(222,18,33)" fg:x="1934" fg:w="1"/><text x="55.2870%" y="271.50"></text></g><g><title>core::slice::raw::from_raw_parts (1 samples, 0.03%)</title><rect x="55.0370%" y="245" width="0.0285%" height="15" fill="rgb(213,199,7)" fg:x="1934" fg:w="1"/><text x="55.2870%" y="255.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.03%)</title><rect x="55.0370%" y="229" width="0.0285%" height="15" fill="rgb(250,110,10)" fg:x="1934" fg:w="1"/><text x="55.2870%" y="239.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (1 samples, 0.03%)</title><rect x="55.0370%" y="213" width="0.0285%" height="15" fill="rgb(248,123,6)" fg:x="1934" fg:w="1"/><text x="55.2870%" y="223.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (2 samples, 0.06%)</title><rect x="55.0655%" y="293" width="0.0569%" height="15" fill="rgb(206,91,31)" fg:x="1935" fg:w="2"/><text x="55.3155%" y="303.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.03%)</title><rect x="55.1224%" y="293" width="0.0285%" height="15" fill="rgb(211,154,13)" fg:x="1937" fg:w="1"/><text x="55.3724%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (4 samples, 0.11%)</title><rect x="55.2362%" y="213" width="0.1138%" height="15" fill="rgb(225,148,7)" fg:x="1941" fg:w="4"/><text x="55.4862%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (4 samples, 0.11%)</title><rect x="55.2362%" y="197" width="0.1138%" height="15" fill="rgb(220,160,43)" fg:x="1941" fg:w="4"/><text x="55.4862%" y="207.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (1 samples, 0.03%)</title><rect x="55.3216%" y="181" width="0.0285%" height="15" fill="rgb(213,52,39)" fg:x="1944" fg:w="1"/><text x="55.5716%" y="191.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (1 samples, 0.03%)</title><rect x="55.3216%" y="165" width="0.0285%" height="15" fill="rgb(243,137,7)" fg:x="1944" fg:w="1"/><text x="55.5716%" y="175.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (8 samples, 0.23%)</title><rect x="55.1508%" y="261" width="0.2277%" height="15" fill="rgb(230,79,13)" fg:x="1938" fg:w="8"/><text x="55.4008%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.20%)</title><rect x="55.1793%" y="245" width="0.1992%" height="15" fill="rgb(247,105,23)" fg:x="1939" fg:w="7"/><text x="55.4293%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (7 samples, 0.20%)</title><rect x="55.1793%" y="229" width="0.1992%" height="15" fill="rgb(223,179,41)" fg:x="1939" fg:w="7"/><text x="55.4293%" y="239.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="55.3500%" y="213" width="0.0285%" height="15" fill="rgb(218,9,34)" fg:x="1945" fg:w="1"/><text x="55.6000%" y="223.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (2 samples, 0.06%)</title><rect x="55.3785%" y="261" width="0.0569%" height="15" fill="rgb(222,106,8)" fg:x="1946" fg:w="2"/><text x="55.6285%" y="271.50"></text></g><g><title>core::ptr::read (1 samples, 0.03%)</title><rect x="55.4069%" y="245" width="0.0285%" height="15" fill="rgb(211,220,0)" fg:x="1947" fg:w="1"/><text x="55.6569%" y="255.50"></text></g><g><title>chacha20::xchacha::hchacha (69 samples, 1.96%)</title><rect x="53.5003%" y="309" width="1.9636%" height="15" fill="rgb(229,52,16)" fg:x="1880" fg:w="69"/><text x="53.7503%" y="319.50">c..</text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (11 samples, 0.31%)</title><rect x="55.1508%" y="293" width="0.3130%" height="15" fill="rgb(212,155,18)" fg:x="1938" fg:w="11"/><text x="55.4008%" y="303.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (11 samples, 0.31%)</title><rect x="55.1508%" y="277" width="0.3130%" height="15" fill="rgb(242,21,14)" fg:x="1938" fg:w="11"/><text x="55.4008%" y="287.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::iter_position (1 samples, 0.03%)</title><rect x="55.4354%" y="261" width="0.0285%" height="15" fill="rgb(222,19,48)" fg:x="1948" fg:w="1"/><text x="55.6854%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (2 samples, 0.06%)</title><rect x="55.4639%" y="229" width="0.0569%" height="15" fill="rgb(232,45,27)" fg:x="1949" fg:w="2"/><text x="55.7139%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.03%)</title><rect x="55.4923%" y="213" width="0.0285%" height="15" fill="rgb(249,103,42)" fg:x="1950" fg:w="1"/><text x="55.7423%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.09%)</title><rect x="55.4639%" y="277" width="0.0854%" height="15" fill="rgb(246,81,33)" fg:x="1949" fg:w="3"/><text x="55.7139%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.09%)</title><rect x="55.4639%" y="261" width="0.0854%" height="15" fill="rgb(252,33,42)" fg:x="1949" fg:w="3"/><text x="55.7139%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.09%)</title><rect x="55.4639%" y="245" width="0.0854%" height="15" fill="rgb(209,212,41)" fg:x="1949" fg:w="3"/><text x="55.7139%" y="255.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="55.5208%" y="229" width="0.0285%" height="15" fill="rgb(207,154,6)" fg:x="1951" fg:w="1"/><text x="55.7708%" y="239.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.03%)</title><rect x="55.5208%" y="213" width="0.0285%" height="15" fill="rgb(223,64,47)" fg:x="1951" fg:w="1"/><text x="55.7708%" y="223.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::iter_position (2 samples, 0.06%)</title><rect x="55.5492%" y="277" width="0.0569%" height="15" fill="rgb(211,161,38)" fg:x="1952" fg:w="2"/><text x="55.7992%" y="287.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (1 samples, 0.03%)</title><rect x="55.5777%" y="261" width="0.0285%" height="15" fill="rgb(219,138,40)" fg:x="1953" fg:w="1"/><text x="55.8277%" y="271.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="55.5777%" y="245" width="0.0285%" height="15" fill="rgb(241,228,46)" fg:x="1953" fg:w="1"/><text x="55.8277%" y="255.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.03%)</title><rect x="55.5777%" y="229" width="0.0285%" height="15" fill="rgb(223,209,38)" fg:x="1953" fg:w="1"/><text x="55.8277%" y="239.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.03%)</title><rect x="55.5777%" y="213" width="0.0285%" height="15" fill="rgb(236,164,45)" fg:x="1953" fg:w="1"/><text x="55.8277%" y="223.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (82 samples, 2.33%)</title><rect x="53.3011%" y="325" width="2.3335%" height="15" fill="rgb(231,15,5)" fg:x="1873" fg:w="82"/><text x="53.5511%" y="335.50">&lt;..</text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (6 samples, 0.17%)</title><rect x="55.4639%" y="309" width="0.1707%" height="15" fill="rgb(252,35,15)" fg:x="1949" fg:w="6"/><text x="55.7139%" y="319.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (6 samples, 0.17%)</title><rect x="55.4639%" y="293" width="0.1707%" height="15" fill="rgb(248,181,18)" fg:x="1949" fg:w="6"/><text x="55.7139%" y="303.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::new (1 samples, 0.03%)</title><rect x="55.6061%" y="277" width="0.0285%" height="15" fill="rgb(233,39,42)" fg:x="1954" fg:w="1"/><text x="55.8561%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (6 samples, 0.17%)</title><rect x="55.6915%" y="245" width="0.1707%" height="15" fill="rgb(238,110,33)" fg:x="1957" fg:w="6"/><text x="55.9415%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (5 samples, 0.14%)</title><rect x="55.7200%" y="229" width="0.1423%" height="15" fill="rgb(233,195,10)" fg:x="1958" fg:w="5"/><text x="55.9700%" y="239.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (4 samples, 0.11%)</title><rect x="55.7484%" y="213" width="0.1138%" height="15" fill="rgb(254,105,3)" fg:x="1959" fg:w="4"/><text x="55.9984%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (10 samples, 0.28%)</title><rect x="55.6346%" y="293" width="0.2846%" height="15" fill="rgb(221,225,9)" fg:x="1955" fg:w="10"/><text x="55.8846%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10 samples, 0.28%)</title><rect x="55.6346%" y="277" width="0.2846%" height="15" fill="rgb(224,227,45)" fg:x="1955" fg:w="10"/><text x="55.8846%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (10 samples, 0.28%)</title><rect x="55.6346%" y="261" width="0.2846%" height="15" fill="rgb(229,198,43)" fg:x="1955" fg:w="10"/><text x="55.8846%" y="271.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.06%)</title><rect x="55.8623%" y="245" width="0.0569%" height="15" fill="rgb(206,209,35)" fg:x="1963" fg:w="2"/><text x="56.1123%" y="255.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.03%)</title><rect x="55.8907%" y="229" width="0.0285%" height="15" fill="rgb(245,195,53)" fg:x="1964" fg:w="1"/><text x="56.1407%" y="239.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null::runtime_impl (1 samples, 0.03%)</title><rect x="55.8907%" y="213" width="0.0285%" height="15" fill="rgb(240,92,26)" fg:x="1964" fg:w="1"/><text x="56.1407%" y="223.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::addr (1 samples, 0.03%)</title><rect x="55.8907%" y="197" width="0.0285%" height="15" fill="rgb(207,40,23)" fg:x="1964" fg:w="1"/><text x="56.1407%" y="207.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as crypto_common::KeyIvInit&gt;::new (94 samples, 2.68%)</title><rect x="53.2726%" y="341" width="2.6750%" height="15" fill="rgb(223,111,35)" fg:x="1872" fg:w="94"/><text x="53.5226%" y="351.50">&lt;c..</text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (11 samples, 0.31%)</title><rect x="55.6346%" y="325" width="0.3130%" height="15" fill="rgb(229,147,28)" fg:x="1955" fg:w="11"/><text x="55.8846%" y="335.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (11 samples, 0.31%)</title><rect x="55.6346%" y="309" width="0.3130%" height="15" fill="rgb(211,29,28)" fg:x="1955" fg:w="11"/><text x="55.8846%" y="319.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (1 samples, 0.03%)</title><rect x="55.9192%" y="293" width="0.0285%" height="15" fill="rgb(228,72,33)" fg:x="1965" fg:w="1"/><text x="56.1692%" y="303.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (1 samples, 0.03%)</title><rect x="55.9192%" y="277" width="0.0285%" height="15" fill="rgb(205,214,31)" fg:x="1965" fg:w="1"/><text x="56.1692%" y="287.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (1 samples, 0.03%)</title><rect x="55.9192%" y="261" width="0.0285%" height="15" fill="rgb(224,111,15)" fg:x="1965" fg:w="1"/><text x="56.1692%" y="271.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="55.9192%" y="245" width="0.0285%" height="15" fill="rgb(253,21,26)" fg:x="1965" fg:w="1"/><text x="56.1692%" y="255.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.03%)</title><rect x="56.0330%" y="277" width="0.0285%" height="15" fill="rgb(245,139,43)" fg:x="1969" fg:w="1"/><text x="56.2830%" y="287.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.03%)</title><rect x="56.0615%" y="277" width="0.0285%" height="15" fill="rgb(252,170,7)" fg:x="1970" fg:w="1"/><text x="56.3115%" y="287.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.03%)</title><rect x="56.0615%" y="261" width="0.0285%" height="15" fill="rgb(231,118,14)" fg:x="1970" fg:w="1"/><text x="56.3115%" y="271.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.03%)</title><rect x="56.0615%" y="245" width="0.0285%" height="15" fill="rgb(238,83,0)" fg:x="1970" fg:w="1"/><text x="56.3115%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.09%)</title><rect x="56.0899%" y="245" width="0.0854%" height="15" fill="rgb(221,39,39)" fg:x="1971" fg:w="3"/><text x="56.3399%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.09%)</title><rect x="56.0899%" y="229" width="0.0854%" height="15" fill="rgb(222,119,46)" fg:x="1971" fg:w="3"/><text x="56.3399%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.09%)</title><rect x="56.0899%" y="213" width="0.0854%" height="15" fill="rgb(222,165,49)" fg:x="1971" fg:w="3"/><text x="56.3399%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (2 samples, 0.06%)</title><rect x="56.1184%" y="197" width="0.0569%" height="15" fill="rgb(219,113,52)" fg:x="1972" fg:w="2"/><text x="56.3684%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.06%)</title><rect x="56.1184%" y="181" width="0.0569%" height="15" fill="rgb(214,7,15)" fg:x="1972" fg:w="2"/><text x="56.3684%" y="191.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (1 samples, 0.03%)</title><rect x="56.1468%" y="165" width="0.0285%" height="15" fill="rgb(235,32,4)" fg:x="1973" fg:w="1"/><text x="56.3968%" y="175.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::finalize (8 samples, 0.23%)</title><rect x="55.9761%" y="325" width="0.2277%" height="15" fill="rgb(238,90,54)" fg:x="1967" fg:w="8"/><text x="56.2261%" y="335.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::finalize (8 samples, 0.23%)</title><rect x="55.9761%" y="309" width="0.2277%" height="15" fill="rgb(213,208,19)" fg:x="1967" fg:w="8"/><text x="56.2261%" y="319.50"></text></g><g><title>poly1305::backend::soft::State::finalize_mut (8 samples, 0.23%)</title><rect x="55.9761%" y="293" width="0.2277%" height="15" fill="rgb(233,156,4)" fg:x="1967" fg:w="8"/><text x="56.2261%" y="303.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (4 samples, 0.11%)</title><rect x="56.0899%" y="277" width="0.1138%" height="15" fill="rgb(207,194,5)" fg:x="1971" fg:w="4"/><text x="56.3399%" y="287.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (4 samples, 0.11%)</title><rect x="56.0899%" y="261" width="0.1138%" height="15" fill="rgb(206,111,30)" fg:x="1971" fg:w="4"/><text x="56.3399%" y="271.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (1 samples, 0.03%)</title><rect x="56.1753%" y="245" width="0.0285%" height="15" fill="rgb(243,70,54)" fg:x="1974" fg:w="1"/><text x="56.4253%" y="255.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="56.2038%" y="325" width="0.0285%" height="15" fill="rgb(242,28,8)" fg:x="1975" fg:w="1"/><text x="56.4538%" y="335.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.03%)</title><rect x="56.2322%" y="309" width="0.0285%" height="15" fill="rgb(219,106,18)" fg:x="1976" fg:w="1"/><text x="56.4822%" y="319.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (3 samples, 0.09%)</title><rect x="56.2607%" y="309" width="0.0854%" height="15" fill="rgb(244,222,10)" fg:x="1977" fg:w="3"/><text x="56.5107%" y="319.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (3 samples, 0.09%)</title><rect x="56.2607%" y="293" width="0.0854%" height="15" fill="rgb(236,179,52)" fg:x="1977" fg:w="3"/><text x="56.5107%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.09%)</title><rect x="56.2607%" y="277" width="0.0854%" height="15" fill="rgb(213,23,39)" fg:x="1977" fg:w="3"/><text x="56.5107%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.09%)</title><rect x="56.2607%" y="261" width="0.0854%" height="15" fill="rgb(238,48,10)" fg:x="1977" fg:w="3"/><text x="56.5107%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.09%)</title><rect x="56.2607%" y="245" width="0.0854%" height="15" fill="rgb(251,196,23)" fg:x="1977" fg:w="3"/><text x="56.5107%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.03%)</title><rect x="56.3176%" y="229" width="0.0285%" height="15" fill="rgb(250,152,24)" fg:x="1979" fg:w="1"/><text x="56.5676%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.03%)</title><rect x="56.3176%" y="213" width="0.0285%" height="15" fill="rgb(209,150,17)" fg:x="1979" fg:w="1"/><text x="56.5676%" y="223.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (1 samples, 0.03%)</title><rect x="56.3176%" y="197" width="0.0285%" height="15" fill="rgb(234,202,34)" fg:x="1979" fg:w="1"/><text x="56.5676%" y="207.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="56.3460%" y="245" width="0.0285%" height="15" fill="rgb(253,148,53)" fg:x="1980" fg:w="1"/><text x="56.5960%" y="255.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.03%)</title><rect x="56.3460%" y="229" width="0.0285%" height="15" fill="rgb(218,129,16)" fg:x="1980" fg:w="1"/><text x="56.5960%" y="239.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null::runtime_impl (1 samples, 0.03%)</title><rect x="56.3460%" y="213" width="0.0285%" height="15" fill="rgb(216,85,19)" fg:x="1980" fg:w="1"/><text x="56.5960%" y="223.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::addr (1 samples, 0.03%)</title><rect x="56.3460%" y="197" width="0.0285%" height="15" fill="rgb(235,228,7)" fg:x="1980" fg:w="1"/><text x="56.5960%" y="207.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::authenticate_lengths (6 samples, 0.17%)</title><rect x="56.2322%" y="325" width="0.1707%" height="15" fill="rgb(245,175,0)" fg:x="1976" fg:w="6"/><text x="56.4822%" y="335.50"></text></g><g><title>universal_hash::UniversalHash::update (2 samples, 0.06%)</title><rect x="56.3460%" y="309" width="0.0569%" height="15" fill="rgb(208,168,36)" fg:x="1980" fg:w="2"/><text x="56.5960%" y="319.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (2 samples, 0.06%)</title><rect x="56.3460%" y="293" width="0.0569%" height="15" fill="rgb(246,171,24)" fg:x="1980" fg:w="2"/><text x="56.5960%" y="303.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (2 samples, 0.06%)</title><rect x="56.3460%" y="277" width="0.0569%" height="15" fill="rgb(215,142,24)" fg:x="1980" fg:w="2"/><text x="56.5960%" y="287.50"></text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (2 samples, 0.06%)</title><rect x="56.3460%" y="261" width="0.0569%" height="15" fill="rgb(250,187,7)" fg:x="1980" fg:w="2"/><text x="56.5960%" y="271.50"></text></g><g><title>&lt;poly1305::backend::soft::State as universal_hash::UhfBackend&gt;::proc_block (1 samples, 0.03%)</title><rect x="56.3745%" y="245" width="0.0285%" height="15" fill="rgb(228,66,33)" fg:x="1981" fg:w="1"/><text x="56.6245%" y="255.50"></text></g><g><title>poly1305::backend::soft::State::compute_block (1 samples, 0.03%)</title><rect x="56.3745%" y="229" width="0.0285%" height="15" fill="rgb(234,215,21)" fg:x="1981" fg:w="1"/><text x="56.6245%" y="239.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="56.3745%" y="213" width="0.0285%" height="15" fill="rgb(222,191,20)" fg:x="1981" fg:w="1"/><text x="56.6245%" y="223.50"></text></g><g><title>core::slice::raw::from_raw_parts (1 samples, 0.03%)</title><rect x="56.3745%" y="197" width="0.0285%" height="15" fill="rgb(245,79,54)" fg:x="1981" fg:w="1"/><text x="56.6245%" y="207.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_add_epi32 (63 samples, 1.79%)</title><rect x="60.5578%" y="133" width="1.7928%" height="15" fill="rgb(240,10,37)" fg:x="2128" fg:w="63"/><text x="60.8078%" y="143.50">c..</text></g><g><title>core::core_arch::x86::m128iExt::as_i32x4 (12 samples, 0.34%)</title><rect x="62.0091%" y="117" width="0.3415%" height="15" fill="rgb(214,192,32)" fg:x="2179" fg:w="12"/><text x="62.2591%" y="127.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_slli_epi32 (38 samples, 1.08%)</title><rect x="62.3506%" y="133" width="1.0814%" height="15" fill="rgb(209,36,54)" fg:x="2191" fg:w="38"/><text x="62.6006%" y="143.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i32x4 (7 samples, 0.20%)</title><rect x="63.2328%" y="117" width="0.1992%" height="15" fill="rgb(220,10,11)" fg:x="2222" fg:w="7"/><text x="63.4828%" y="127.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_srli_epi32 (8 samples, 0.23%)</title><rect x="63.4320%" y="133" width="0.2277%" height="15" fill="rgb(221,106,17)" fg:x="2229" fg:w="8"/><text x="63.6820%" y="143.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i32x4 (2 samples, 0.06%)</title><rect x="63.6027%" y="117" width="0.0569%" height="15" fill="rgb(251,142,44)" fg:x="2235" fg:w="2"/><text x="63.8527%" y="127.50"></text></g><g><title>chacha20::backends::sse2::add_xor_rot (266 samples, 7.57%)</title><rect x="56.9721%" y="149" width="7.5697%" height="15" fill="rgb(238,13,15)" fg:x="2002" fg:w="266"/><text x="57.2221%" y="159.50">chacha20::..</text></g><g><title>core::core_arch::x86::sse2::_mm_xor_si128 (31 samples, 0.88%)</title><rect x="63.6596%" y="133" width="0.8822%" height="15" fill="rgb(208,107,27)" fg:x="2237" fg:w="31"/><text x="63.9096%" y="143.50"></text></g><g><title>chacha20::backends::sse2::cols_to_rows (15 samples, 0.43%)</title><rect x="64.5418%" y="149" width="0.4269%" height="15" fill="rgb(205,136,37)" fg:x="2268" fg:w="15"/><text x="64.7918%" y="159.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_shuffle_epi32 (11 samples, 0.31%)</title><rect x="64.6557%" y="133" width="0.3130%" height="15" fill="rgb(250,205,27)" fg:x="2272" fg:w="11"/><text x="64.9057%" y="143.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i32x4 (3 samples, 0.09%)</title><rect x="64.8833%" y="117" width="0.0854%" height="15" fill="rgb(210,80,43)" fg:x="2280" fg:w="3"/><text x="65.1333%" y="127.50"></text></g><g><title>chacha20::backends::sse2::double_quarter_round (301 samples, 8.57%)</title><rect x="56.8298%" y="165" width="8.5657%" height="15" fill="rgb(247,160,36)" fg:x="1997" fg:w="301"/><text x="57.0798%" y="175.50">chacha20::ba..</text></g><g><title>chacha20::backends::sse2::rows_to_cols (15 samples, 0.43%)</title><rect x="64.9687%" y="149" width="0.4269%" height="15" fill="rgb(234,13,49)" fg:x="2283" fg:w="15"/><text x="65.2187%" y="159.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_shuffle_epi32 (12 samples, 0.34%)</title><rect x="65.0541%" y="133" width="0.3415%" height="15" fill="rgb(234,122,0)" fg:x="2286" fg:w="12"/><text x="65.3041%" y="143.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i32x4 (5 samples, 0.14%)</title><rect x="65.2533%" y="117" width="0.1423%" height="15" fill="rgb(207,146,38)" fg:x="2293" fg:w="5"/><text x="65.5033%" y="127.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_add_epi32 (4 samples, 0.11%)</title><rect x="65.3956%" y="165" width="0.1138%" height="15" fill="rgb(207,177,25)" fg:x="2298" fg:w="4"/><text x="65.6456%" y="175.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (4 samples, 0.11%)</title><rect x="65.8224%" y="133" width="0.1138%" height="15" fill="rgb(211,178,42)" fg:x="2313" fg:w="4"/><text x="66.0724%" y="143.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (2 samples, 0.06%)</title><rect x="65.9363%" y="133" width="0.0569%" height="15" fill="rgb(230,69,54)" fg:x="2317" fg:w="2"/><text x="66.1863%" y="143.50"></text></g><g><title>core::ptr::read (6 samples, 0.17%)</title><rect x="66.0785%" y="117" width="0.1707%" height="15" fill="rgb(214,135,41)" fg:x="2322" fg:w="6"/><text x="66.3285%" y="127.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (1 samples, 0.03%)</title><rect x="66.2208%" y="101" width="0.0285%" height="15" fill="rgb(237,67,25)" fg:x="2327" fg:w="1"/><text x="66.4708%" y="111.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (1 samples, 0.03%)</title><rect x="66.2208%" y="85" width="0.0285%" height="15" fill="rgb(222,189,50)" fg:x="2327" fg:w="1"/><text x="66.4708%" y="95.50"></text></g><g><title>chacha20::backends::sse2::rounds (337 samples, 9.59%)</title><rect x="56.6875%" y="181" width="9.5902%" height="15" fill="rgb(245,148,34)" fg:x="1992" fg:w="337"/><text x="56.9375%" y="191.50">chacha20::back..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (27 samples, 0.77%)</title><rect x="65.5094%" y="165" width="0.7684%" height="15" fill="rgb(222,29,6)" fg:x="2302" fg:w="27"/><text x="65.7594%" y="175.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (26 samples, 0.74%)</title><rect x="65.5378%" y="149" width="0.7399%" height="15" fill="rgb(221,189,43)" fg:x="2303" fg:w="26"/><text x="65.7878%" y="159.50"></text></g><g><title>core::mem::replace (10 samples, 0.28%)</title><rect x="65.9932%" y="133" width="0.2846%" height="15" fill="rgb(207,36,27)" fg:x="2319" fg:w="10"/><text x="66.2432%" y="143.50"></text></g><g><title>core::ptr::write (1 samples, 0.03%)</title><rect x="66.2493%" y="117" width="0.0285%" height="15" fill="rgb(217,90,24)" fg:x="2328" fg:w="1"/><text x="66.4993%" y="127.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_storeu_si128 (1 samples, 0.03%)</title><rect x="66.2777%" y="181" width="0.0285%" height="15" fill="rgb(224,66,35)" fg:x="2329" fg:w="1"/><text x="66.5277%" y="191.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.03%)</title><rect x="66.3062%" y="149" width="0.0285%" height="15" fill="rgb(221,13,50)" fg:x="2330" fg:w="1"/><text x="66.5562%" y="159.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (2 samples, 0.06%)</title><rect x="66.3347%" y="149" width="0.0569%" height="15" fill="rgb(236,68,49)" fg:x="2331" fg:w="2"/><text x="66.5847%" y="159.50"></text></g><g><title>&lt;chacha20::backends::sse2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (351 samples, 9.99%)</title><rect x="56.5168%" y="197" width="9.9886%" height="15" fill="rgb(229,146,28)" fg:x="1986" fg:w="351"/><text x="56.7668%" y="207.50">&lt;chacha20::bac..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (7 samples, 0.20%)</title><rect x="66.3062%" y="181" width="0.1992%" height="15" fill="rgb(225,31,38)" fg:x="2330" fg:w="7"/><text x="66.5562%" y="191.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (7 samples, 0.20%)</title><rect x="66.3062%" y="165" width="0.1992%" height="15" fill="rgb(250,208,3)" fg:x="2330" fg:w="7"/><text x="66.5562%" y="175.50"></text></g><g><title>core::mem::replace (4 samples, 0.11%)</title><rect x="66.3916%" y="149" width="0.1138%" height="15" fill="rgb(246,54,23)" fg:x="2333" fg:w="4"/><text x="66.6416%" y="159.50"></text></g><g><title>core::ptr::read (1 samples, 0.03%)</title><rect x="66.4769%" y="133" width="0.0285%" height="15" fill="rgb(243,76,11)" fg:x="2336" fg:w="1"/><text x="66.7269%" y="143.50"></text></g><g><title>&lt;inout::inout_buf::InOutBufIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="66.5054%" y="197" width="0.0285%" height="15" fill="rgb(245,21,50)" fg:x="2337" fg:w="1"/><text x="66.7554%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::enumerate (1 samples, 0.03%)</title><rect x="66.6192%" y="165" width="0.0285%" height="15" fill="rgb(228,9,43)" fg:x="2341" fg:w="1"/><text x="66.8692%" y="175.50"></text></g><g><title>core::ptr::write (13 samples, 0.37%)</title><rect x="70.8025%" y="69" width="0.3699%" height="15" fill="rgb(208,100,47)" fg:x="2488" fg:w="13"/><text x="71.0525%" y="79.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (118 samples, 3.36%)</title><rect x="67.9852%" y="117" width="3.3580%" height="15" fill="rgb(232,26,8)" fg:x="2389" fg:w="118"/><text x="68.2352%" y="127.50">&lt;co..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (72 samples, 2.05%)</title><rect x="69.2943%" y="101" width="2.0489%" height="15" fill="rgb(216,166,38)" fg:x="2435" fg:w="72"/><text x="69.5443%" y="111.50">c..</text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (48 samples, 1.37%)</title><rect x="69.9772%" y="85" width="1.3660%" height="15" fill="rgb(251,202,51)" fg:x="2459" fg:w="48"/><text x="70.2272%" y="95.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (6 samples, 0.17%)</title><rect x="71.1725%" y="69" width="0.1707%" height="15" fill="rgb(254,216,34)" fg:x="2501" fg:w="6"/><text x="71.4225%" y="79.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (19 samples, 0.54%)</title><rect x="71.8270%" y="101" width="0.5407%" height="15" fill="rgb(251,32,27)" fg:x="2524" fg:w="19"/><text x="72.0770%" y="111.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null::runtime_impl (7 samples, 0.20%)</title><rect x="72.1685%" y="85" width="0.1992%" height="15" fill="rgb(208,127,28)" fg:x="2536" fg:w="7"/><text x="72.4185%" y="95.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::addr (4 samples, 0.11%)</title><rect x="72.2538%" y="69" width="0.1138%" height="15" fill="rgb(224,137,22)" fg:x="2539" fg:w="4"/><text x="72.5038%" y="79.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (12 samples, 0.34%)</title><rect x="73.1076%" y="85" width="0.3415%" height="15" fill="rgb(254,70,32)" fg:x="2569" fg:w="12"/><text x="73.3576%" y="95.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (12 samples, 0.34%)</title><rect x="73.1076%" y="69" width="0.3415%" height="15" fill="rgb(229,75,37)" fg:x="2569" fg:w="12"/><text x="73.3576%" y="79.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (2 samples, 0.06%)</title><rect x="73.4491%" y="85" width="0.0569%" height="15" fill="rgb(252,64,23)" fg:x="2581" fg:w="2"/><text x="73.6991%" y="95.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (244 samples, 6.94%)</title><rect x="66.6477%" y="165" width="6.9437%" height="15" fill="rgb(232,162,48)" fg:x="2342" fg:w="244"/><text x="66.8977%" y="175.50">core::ite..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (243 samples, 6.92%)</title><rect x="66.6762%" y="149" width="6.9152%" height="15" fill="rgb(246,160,12)" fg:x="2343" fg:w="243"/><text x="66.9262%" y="159.50">&lt;core::it..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (242 samples, 6.89%)</title><rect x="66.7046%" y="133" width="6.8867%" height="15" fill="rgb(247,166,0)" fg:x="2344" fg:w="242"/><text x="66.9546%" y="143.50">core::ite..</text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (79 samples, 2.25%)</title><rect x="71.3432%" y="117" width="2.2482%" height="15" fill="rgb(249,219,21)" fg:x="2507" fg:w="79"/><text x="71.5932%" y="127.50">&lt;..</text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (43 samples, 1.22%)</title><rect x="72.3677%" y="101" width="1.2237%" height="15" fill="rgb(205,209,3)" fg:x="2543" fg:w="43"/><text x="72.6177%" y="111.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (3 samples, 0.09%)</title><rect x="73.5060%" y="85" width="0.0854%" height="15" fill="rgb(243,44,1)" fg:x="2583" fg:w="3"/><text x="73.7560%" y="95.50"></text></g><g><title>[libc.so.6] (2 samples, 0.06%)</title><rect x="73.5913%" y="117" width="0.0569%" height="15" fill="rgb(206,159,16)" fg:x="2586" fg:w="2"/><text x="73.8413%" y="127.50"></text></g><g><title>core::ptr::read (3 samples, 0.09%)</title><rect x="73.5913%" y="149" width="0.0854%" height="15" fill="rgb(244,77,30)" fg:x="2586" fg:w="3"/><text x="73.8413%" y="159.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (3 samples, 0.09%)</title><rect x="73.5913%" y="133" width="0.0854%" height="15" fill="rgb(218,69,12)" fg:x="2586" fg:w="3"/><text x="73.8413%" y="143.50"></text></g><g><title>memcpy (1 samples, 0.03%)</title><rect x="73.6483%" y="117" width="0.0285%" height="15" fill="rgb(212,87,7)" fg:x="2588" fg:w="1"/><text x="73.8983%" y="127.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (4 samples, 0.11%)</title><rect x="73.5913%" y="165" width="0.1138%" height="15" fill="rgb(245,114,25)" fg:x="2586" fg:w="4"/><text x="73.8413%" y="175.50"></text></g><g><title>memcpy (1 samples, 0.03%)</title><rect x="73.6767%" y="149" width="0.0285%" height="15" fill="rgb(210,61,42)" fg:x="2589" fg:w="1"/><text x="73.9267%" y="159.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (256 samples, 7.29%)</title><rect x="66.5339%" y="197" width="7.2851%" height="15" fill="rgb(211,52,33)" fg:x="2338" fg:w="256"/><text x="66.7839%" y="207.50">generic_ar..</text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (256 samples, 7.29%)</title><rect x="66.5339%" y="181" width="7.2851%" height="15" fill="rgb(234,58,33)" fg:x="2338" fg:w="256"/><text x="66.7839%" y="191.50">&lt;generic_a..</text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::iter_position (4 samples, 0.11%)</title><rect x="73.7052%" y="165" width="0.1138%" height="15" fill="rgb(220,115,36)" fg:x="2590" fg:w="4"/><text x="73.9552%" y="175.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (2 samples, 0.06%)</title><rect x="73.7621%" y="149" width="0.0569%" height="15" fill="rgb(243,153,54)" fg:x="2592" fg:w="2"/><text x="74.0121%" y="159.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (2 samples, 0.06%)</title><rect x="73.7621%" y="133" width="0.0569%" height="15" fill="rgb(251,47,18)" fg:x="2592" fg:w="2"/><text x="74.0121%" y="143.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.03%)</title><rect x="77.2055%" y="181" width="0.0285%" height="15" fill="rgb(242,102,42)" fg:x="2713" fg:w="1"/><text x="77.4555%" y="191.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::Deref&gt;::deref (47 samples, 1.34%)</title><rect x="77.2339%" y="181" width="1.3375%" height="15" fill="rgb(234,31,38)" fg:x="2714" fg:w="47"/><text x="77.4839%" y="191.50"></text></g><g><title>core::slice::raw::from_raw_parts (34 samples, 0.97%)</title><rect x="77.6039%" y="165" width="0.9676%" height="15" fill="rgb(221,117,51)" fg:x="2727" fg:w="34"/><text x="77.8539%" y="175.50"></text></g><g><title>core::ptr::slice_from_raw_parts (26 samples, 0.74%)</title><rect x="77.8315%" y="149" width="0.7399%" height="15" fill="rgb(212,20,18)" fg:x="2735" fg:w="26"/><text x="78.0815%" y="159.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (22 samples, 0.63%)</title><rect x="77.9454%" y="133" width="0.6261%" height="15" fill="rgb(245,133,36)" fg:x="2739" fg:w="22"/><text x="78.1954%" y="143.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (19 samples, 0.54%)</title><rect x="78.5714%" y="181" width="0.5407%" height="15" fill="rgb(212,6,19)" fg:x="2761" fg:w="19"/><text x="78.8214%" y="191.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (15 samples, 0.43%)</title><rect x="78.6853%" y="165" width="0.4269%" height="15" fill="rgb(218,1,36)" fg:x="2765" fg:w="15"/><text x="78.9353%" y="175.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (13 samples, 0.37%)</title><rect x="78.7422%" y="149" width="0.3699%" height="15" fill="rgb(246,84,54)" fg:x="2767" fg:w="13"/><text x="78.9922%" y="159.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (9 samples, 0.26%)</title><rect x="78.8560%" y="133" width="0.2561%" height="15" fill="rgb(242,110,6)" fg:x="2771" fg:w="9"/><text x="79.1060%" y="143.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (17 samples, 0.48%)</title><rect x="80.0228%" y="149" width="0.4838%" height="15" fill="rgb(214,47,5)" fg:x="2812" fg:w="17"/><text x="80.2728%" y="159.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (9 samples, 0.26%)</title><rect x="80.5065%" y="149" width="0.2561%" height="15" fill="rgb(218,159,25)" fg:x="2829" fg:w="9"/><text x="80.7565%" y="159.50"></text></g><g><title>core::ptr::read (24 samples, 0.68%)</title><rect x="80.9050%" y="133" width="0.6830%" height="15" fill="rgb(215,211,28)" fg:x="2843" fg:w="24"/><text x="81.1550%" y="143.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (4 samples, 0.11%)</title><rect x="81.4741%" y="117" width="0.1138%" height="15" fill="rgb(238,59,32)" fg:x="2863" fg:w="4"/><text x="81.7241%" y="127.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (4 samples, 0.11%)</title><rect x="81.4741%" y="101" width="0.1138%" height="15" fill="rgb(226,82,3)" fg:x="2863" fg:w="4"/><text x="81.7241%" y="111.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (90 samples, 2.56%)</title><rect x="79.1121%" y="181" width="2.5612%" height="15" fill="rgb(240,164,32)" fg:x="2780" fg:w="90"/><text x="79.3621%" y="191.50">co..</text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (86 samples, 2.45%)</title><rect x="79.2260%" y="165" width="2.4474%" height="15" fill="rgb(232,46,7)" fg:x="2784" fg:w="86"/><text x="79.4760%" y="175.50">&lt;c..</text></g><g><title>core::mem::replace (32 samples, 0.91%)</title><rect x="80.7627%" y="149" width="0.9106%" height="15" fill="rgb(229,129,53)" fg:x="2838" fg:w="32"/><text x="81.0127%" y="159.50"></text></g><g><title>core::ptr::write (3 samples, 0.09%)</title><rect x="81.5879%" y="133" width="0.0854%" height="15" fill="rgb(234,188,29)" fg:x="2867" fg:w="3"/><text x="81.8379%" y="143.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="81.7302%" y="149" width="0.0285%" height="15" fill="rgb(246,141,4)" fg:x="2872" fg:w="1"/><text x="81.9802%" y="159.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (2 samples, 0.06%)</title><rect x="81.7587%" y="149" width="0.0569%" height="15" fill="rgb(229,23,39)" fg:x="2873" fg:w="2"/><text x="82.0087%" y="159.50"></text></g><g><title>memcpy (2 samples, 0.06%)</title><rect x="81.7587%" y="133" width="0.0569%" height="15" fill="rgb(206,12,3)" fg:x="2873" fg:w="2"/><text x="82.0087%" y="143.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (5 samples, 0.14%)</title><rect x="81.7018%" y="165" width="0.1423%" height="15" fill="rgb(252,226,20)" fg:x="2871" fg:w="5"/><text x="81.9518%" y="175.50"></text></g><g><title>memcpy (1 samples, 0.03%)</title><rect x="81.8156%" y="149" width="0.0285%" height="15" fill="rgb(216,123,35)" fg:x="2875" fg:w="1"/><text x="82.0656%" y="159.50"></text></g><g><title>core::ptr::read (7 samples, 0.20%)</title><rect x="81.6733%" y="181" width="0.1992%" height="15" fill="rgb(212,68,40)" fg:x="2870" fg:w="7"/><text x="81.9233%" y="191.50"></text></g><g><title>memcpy (1 samples, 0.03%)</title><rect x="81.8441%" y="165" width="0.0285%" height="15" fill="rgb(254,125,32)" fg:x="2876" fg:w="1"/><text x="82.0941%" y="175.50"></text></g><g><title>core::ptr::write (13 samples, 0.37%)</title><rect x="85.6005%" y="53" width="0.3699%" height="15" fill="rgb(253,97,22)" fg:x="3008" fg:w="13"/><text x="85.8505%" y="63.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (86 samples, 2.45%)</title><rect x="83.7223%" y="101" width="2.4474%" height="15" fill="rgb(241,101,14)" fg:x="2942" fg:w="86"/><text x="83.9723%" y="111.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (58 samples, 1.65%)</title><rect x="84.5191%" y="85" width="1.6505%" height="15" fill="rgb(238,103,29)" fg:x="2970" fg:w="58"/><text x="84.7691%" y="95.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (39 samples, 1.11%)</title><rect x="85.0598%" y="69" width="1.1098%" height="15" fill="rgb(233,195,47)" fg:x="2989" fg:w="39"/><text x="85.3098%" y="79.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (7 samples, 0.20%)</title><rect x="85.9704%" y="53" width="0.1992%" height="15" fill="rgb(246,218,30)" fg:x="3021" fg:w="7"/><text x="86.2204%" y="63.50"></text></g><g><title>&lt;u8 as core::default::Default&gt;::default (1 samples, 0.03%)</title><rect x="86.1411%" y="37" width="0.0285%" height="15" fill="rgb(219,145,47)" fg:x="3027" fg:w="1"/><text x="86.3911%" y="47.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (16 samples, 0.46%)</title><rect x="86.6534%" y="85" width="0.4553%" height="15" fill="rgb(243,12,26)" fg:x="3045" fg:w="16"/><text x="86.9034%" y="95.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null::runtime_impl (5 samples, 0.14%)</title><rect x="86.9664%" y="69" width="0.1423%" height="15" fill="rgb(214,87,16)" fg:x="3056" fg:w="5"/><text x="87.2164%" y="79.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::addr (4 samples, 0.11%)</title><rect x="86.9949%" y="53" width="0.1138%" height="15" fill="rgb(208,99,42)" fg:x="3057" fg:w="4"/><text x="87.2449%" y="63.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (9 samples, 0.26%)</title><rect x="87.7348%" y="69" width="0.2561%" height="15" fill="rgb(253,99,2)" fg:x="3083" fg:w="9"/><text x="87.9848%" y="79.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (7 samples, 0.20%)</title><rect x="87.7917%" y="53" width="0.1992%" height="15" fill="rgb(220,168,23)" fg:x="3085" fg:w="7"/><text x="88.0417%" y="63.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (2 samples, 0.06%)</title><rect x="87.9909%" y="69" width="0.0569%" height="15" fill="rgb(242,38,24)" fg:x="3092" fg:w="2"/><text x="88.2409%" y="79.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (220 samples, 6.26%)</title><rect x="81.9294%" y="149" width="6.2607%" height="15" fill="rgb(225,182,9)" fg:x="2879" fg:w="220"/><text x="82.1794%" y="159.50">core::it..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (219 samples, 6.23%)</title><rect x="81.9579%" y="133" width="6.2322%" height="15" fill="rgb(243,178,37)" fg:x="2880" fg:w="219"/><text x="82.2079%" y="143.50">&lt;core::i..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (219 samples, 6.23%)</title><rect x="81.9579%" y="117" width="6.2322%" height="15" fill="rgb(232,139,19)" fg:x="2880" fg:w="219"/><text x="82.2079%" y="127.50">core::it..</text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (71 samples, 2.02%)</title><rect x="86.1696%" y="101" width="2.0205%" height="15" fill="rgb(225,201,24)" fg:x="3028" fg:w="71"/><text x="86.4196%" y="111.50">&lt;..</text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (38 samples, 1.08%)</title><rect x="87.1087%" y="85" width="1.0814%" height="15" fill="rgb(221,47,46)" fg:x="3061" fg:w="38"/><text x="87.3587%" y="95.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (5 samples, 0.14%)</title><rect x="88.0478%" y="69" width="0.1423%" height="15" fill="rgb(249,23,13)" fg:x="3094" fg:w="5"/><text x="88.2978%" y="79.50"></text></g><g><title>core::mem::forget (1 samples, 0.03%)</title><rect x="88.1901%" y="133" width="0.0285%" height="15" fill="rgb(219,9,5)" fg:x="3099" fg:w="1"/><text x="88.4401%" y="143.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (1 samples, 0.03%)</title><rect x="88.2186%" y="117" width="0.0285%" height="15" fill="rgb(254,171,16)" fg:x="3100" fg:w="1"/><text x="88.4686%" y="127.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (1 samples, 0.03%)</title><rect x="88.2186%" y="101" width="0.0285%" height="15" fill="rgb(230,171,20)" fg:x="3100" fg:w="1"/><text x="88.4686%" y="111.50"></text></g><g><title>memcpy (1 samples, 0.03%)</title><rect x="88.2186%" y="85" width="0.0285%" height="15" fill="rgb(210,71,41)" fg:x="3100" fg:w="1"/><text x="88.4686%" y="95.50"></text></g><g><title>core::ptr::read (2 samples, 0.06%)</title><rect x="88.2186%" y="133" width="0.0569%" height="15" fill="rgb(206,173,20)" fg:x="3100" fg:w="2"/><text x="88.4686%" y="143.50"></text></g><g><title>memcpy (1 samples, 0.03%)</title><rect x="88.2470%" y="117" width="0.0285%" height="15" fill="rgb(233,88,34)" fg:x="3101" fg:w="1"/><text x="88.4970%" y="127.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (4 samples, 0.11%)</title><rect x="88.1901%" y="149" width="0.1138%" height="15" fill="rgb(223,209,46)" fg:x="3099" fg:w="4"/><text x="88.4401%" y="159.50"></text></g><g><title>memcpy (1 samples, 0.03%)</title><rect x="88.2755%" y="133" width="0.0285%" height="15" fill="rgb(250,43,18)" fg:x="3102" fg:w="1"/><text x="88.5255%" y="143.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::iter_position (2 samples, 0.06%)</title><rect x="88.3039%" y="149" width="0.0569%" height="15" fill="rgb(208,13,10)" fg:x="3103" fg:w="2"/><text x="88.5539%" y="159.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (1 samples, 0.03%)</title><rect x="88.3324%" y="133" width="0.0285%" height="15" fill="rgb(212,200,36)" fg:x="3104" fg:w="1"/><text x="88.5824%" y="143.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="88.3324%" y="117" width="0.0285%" height="15" fill="rgb(225,90,30)" fg:x="3104" fg:w="1"/><text x="88.5824%" y="127.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (1,125 samples, 32.01%)</title><rect x="56.4030%" y="277" width="32.0148%" height="15" fill="rgb(236,182,39)" fg:x="1982" fg:w="1125"/><text x="56.6530%" y="287.50">cipher::stream_core::StreamCipherCore::apply_keystre..</text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (1,125 samples, 32.01%)</title><rect x="56.4030%" y="261" width="32.0148%" height="15" fill="rgb(212,144,35)" fg:x="1982" fg:w="1125"/><text x="56.6530%" y="271.50">&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream..</text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (1,125 samples, 32.01%)</title><rect x="56.4030%" y="245" width="32.0148%" height="15" fill="rgb(228,63,44)" fg:x="1982" fg:w="1125"/><text x="56.6530%" y="255.50">&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::Str..</text></g><g><title>chacha20::backends::sse2::inner (1,125 samples, 32.01%)</title><rect x="56.4030%" y="229" width="32.0148%" height="15" fill="rgb(228,109,6)" fg:x="1982" fg:w="1125"/><text x="56.6530%" y="239.50">chacha20::backends::sse2::inner</text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (1,124 samples, 31.99%)</title><rect x="56.4314%" y="213" width="31.9863%" height="15" fill="rgb(238,117,24)" fg:x="1983" fg:w="1124"/><text x="56.6814%" y="223.50">&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::..</text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;u8,N&gt;&gt;::xor_in2out (513 samples, 14.60%)</title><rect x="73.8190%" y="197" width="14.5987%" height="15" fill="rgb(242,26,26)" fg:x="2594" fg:w="513"/><text x="74.0690%" y="207.50">inout::inout::InOut&lt;ge..</text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (230 samples, 6.55%)</title><rect x="81.8725%" y="181" width="6.5452%" height="15" fill="rgb(221,92,48)" fg:x="2877" fg:w="230"/><text x="82.1225%" y="191.50">generic_a..</text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (230 samples, 6.55%)</title><rect x="81.8725%" y="165" width="6.5452%" height="15" fill="rgb(209,209,32)" fg:x="2877" fg:w="230"/><text x="82.1225%" y="175.50">&lt;generic_..</text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::new (2 samples, 0.06%)</title><rect x="88.3608%" y="149" width="0.0569%" height="15" fill="rgb(221,70,22)" fg:x="3105" fg:w="2"/><text x="88.6108%" y="159.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_add_epi32 (4 samples, 0.11%)</title><rect x="88.7592%" y="133" width="0.1138%" height="15" fill="rgb(248,145,5)" fg:x="3119" fg:w="4"/><text x="89.0092%" y="143.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i32x4 (2 samples, 0.06%)</title><rect x="88.8162%" y="117" width="0.0569%" height="15" fill="rgb(226,116,26)" fg:x="3121" fg:w="2"/><text x="89.0662%" y="127.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_slli_epi32 (3 samples, 0.09%)</title><rect x="88.8731%" y="133" width="0.0854%" height="15" fill="rgb(244,5,17)" fg:x="3123" fg:w="3"/><text x="89.1231%" y="143.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i32x4 (1 samples, 0.03%)</title><rect x="88.9300%" y="117" width="0.0285%" height="15" fill="rgb(252,159,33)" fg:x="3125" fg:w="1"/><text x="89.1800%" y="127.50"></text></g><g><title>chacha20::backends::sse2::add_xor_rot (18 samples, 0.51%)</title><rect x="88.5031%" y="149" width="0.5122%" height="15" fill="rgb(206,71,0)" fg:x="3110" fg:w="18"/><text x="88.7531%" y="159.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_xor_si128 (2 samples, 0.06%)</title><rect x="88.9585%" y="133" width="0.0569%" height="15" fill="rgb(233,118,54)" fg:x="3126" fg:w="2"/><text x="89.2085%" y="143.50"></text></g><g><title>chacha20::backends::sse2::double_quarter_round (20 samples, 0.57%)</title><rect x="88.4747%" y="165" width="0.5692%" height="15" fill="rgb(234,83,48)" fg:x="3109" fg:w="20"/><text x="88.7247%" y="175.50"></text></g><g><title>chacha20::backends::sse2::rows_to_cols (1 samples, 0.03%)</title><rect x="89.0154%" y="149" width="0.0285%" height="15" fill="rgb(228,3,54)" fg:x="3128" fg:w="1"/><text x="89.2654%" y="159.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::write_keystream_block (23 samples, 0.65%)</title><rect x="88.4178%" y="277" width="0.6545%" height="15" fill="rgb(226,155,13)" fg:x="3107" fg:w="23"/><text x="88.6678%" y="287.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (23 samples, 0.65%)</title><rect x="88.4178%" y="261" width="0.6545%" height="15" fill="rgb(241,28,37)" fg:x="3107" fg:w="23"/><text x="88.6678%" y="271.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (23 samples, 0.65%)</title><rect x="88.4178%" y="245" width="0.6545%" height="15" fill="rgb(233,93,10)" fg:x="3107" fg:w="23"/><text x="88.6678%" y="255.50"></text></g><g><title>chacha20::backends::sse2::inner (23 samples, 0.65%)</title><rect x="88.4178%" y="229" width="0.6545%" height="15" fill="rgb(225,113,19)" fg:x="3107" fg:w="23"/><text x="88.6678%" y="239.50"></text></g><g><title>&lt;cipher::stream_core::WriteBlockCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (22 samples, 0.63%)</title><rect x="88.4462%" y="213" width="0.6261%" height="15" fill="rgb(241,2,18)" fg:x="3108" fg:w="22"/><text x="88.6962%" y="223.50"></text></g><g><title>&lt;chacha20::backends::sse2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (22 samples, 0.63%)</title><rect x="88.4462%" y="197" width="0.6261%" height="15" fill="rgb(228,207,21)" fg:x="3108" fg:w="22"/><text x="88.6962%" y="207.50"></text></g><g><title>chacha20::backends::sse2::rounds (21 samples, 0.60%)</title><rect x="88.4747%" y="181" width="0.5976%" height="15" fill="rgb(213,211,35)" fg:x="3109" fg:w="21"/><text x="88.7247%" y="191.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.03%)</title><rect x="89.0438%" y="165" width="0.0285%" height="15" fill="rgb(209,83,10)" fg:x="3129" fg:w="1"/><text x="89.2938%" y="175.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.03%)</title><rect x="89.0438%" y="149" width="0.0285%" height="15" fill="rgb(209,164,1)" fg:x="3129" fg:w="1"/><text x="89.2938%" y="159.50"></text></g><g><title>cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt;::check_remaining (1 samples, 0.03%)</title><rect x="89.0723%" y="277" width="0.0285%" height="15" fill="rgb(213,184,43)" fg:x="3130" fg:w="1"/><text x="89.3223%" y="287.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (1,157 samples, 32.93%)</title><rect x="56.4030%" y="325" width="32.9254%" height="15" fill="rgb(231,61,34)" fg:x="1982" fg:w="1157"/><text x="56.6530%" y="335.50">cipher::stream::StreamCipher::apply_keystream</text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (1,157 samples, 32.93%)</title><rect x="56.4030%" y="309" width="32.9254%" height="15" fill="rgb(235,75,3)" fg:x="1982" fg:w="1157"/><text x="56.6530%" y="319.50">cipher::stream::StreamCipher::try_apply_keystream</text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (1,157 samples, 32.93%)</title><rect x="56.4030%" y="293" width="32.9254%" height="15" fill="rgb(220,106,47)" fg:x="1982" fg:w="1157"/><text x="56.6530%" y="303.50">&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; a..</text></g><g><title>inout::inout_buf::InOutBuf&lt;u8&gt;::xor_in2out (8 samples, 0.23%)</title><rect x="89.1007%" y="277" width="0.2277%" height="15" fill="rgb(210,196,33)" fg:x="3131" fg:w="8"/><text x="89.3507%" y="287.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4 samples, 0.11%)</title><rect x="89.2146%" y="261" width="0.1138%" height="15" fill="rgb(229,154,42)" fg:x="3135" fg:w="4"/><text x="89.4646%" y="271.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4 samples, 0.11%)</title><rect x="89.2146%" y="245" width="0.1138%" height="15" fill="rgb(228,114,26)" fg:x="3135" fg:w="4"/><text x="89.4646%" y="255.50"></text></g><g><title>core::mem::replace (2 samples, 0.06%)</title><rect x="89.2715%" y="229" width="0.0569%" height="15" fill="rgb(208,144,1)" fg:x="3137" fg:w="2"/><text x="89.5215%" y="239.50"></text></g><g><title>core::ptr::read (1 samples, 0.03%)</title><rect x="89.2999%" y="213" width="0.0285%" height="15" fill="rgb(239,112,37)" fg:x="3138" fg:w="1"/><text x="89.5499%" y="223.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (1 samples, 0.03%)</title><rect x="89.2999%" y="197" width="0.0285%" height="15" fill="rgb(210,96,50)" fg:x="3138" fg:w="1"/><text x="89.5499%" y="207.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (1 samples, 0.03%)</title><rect x="89.2999%" y="181" width="0.0285%" height="15" fill="rgb(222,178,2)" fg:x="3138" fg:w="1"/><text x="89.5499%" y="191.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4 samples, 0.11%)</title><rect x="89.4707%" y="261" width="0.1138%" height="15" fill="rgb(226,74,18)" fg:x="3144" fg:w="4"/><text x="89.7207%" y="271.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4 samples, 0.11%)</title><rect x="89.4707%" y="245" width="0.1138%" height="15" fill="rgb(225,67,54)" fg:x="3144" fg:w="4"/><text x="89.7207%" y="255.50"></text></g><g><title>core::mem::replace (1 samples, 0.03%)</title><rect x="89.5561%" y="229" width="0.0285%" height="15" fill="rgb(251,92,32)" fg:x="3147" fg:w="1"/><text x="89.8061%" y="239.50"></text></g><g><title>core::ptr::read (1 samples, 0.03%)</title><rect x="89.5561%" y="213" width="0.0285%" height="15" fill="rgb(228,149,22)" fg:x="3147" fg:w="1"/><text x="89.8061%" y="223.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.31%)</title><rect x="89.3284%" y="309" width="0.3130%" height="15" fill="rgb(243,54,13)" fg:x="3139" fg:w="11"/><text x="89.5784%" y="319.50"></text></g><g><title>&lt;[Z] as zeroize::Zeroize&gt;::zeroize (10 samples, 0.28%)</title><rect x="89.3569%" y="293" width="0.2846%" height="15" fill="rgb(243,180,28)" fg:x="3140" fg:w="10"/><text x="89.6069%" y="303.50"></text></g><g><title>zeroize::volatile_set (8 samples, 0.23%)</title><rect x="89.4138%" y="277" width="0.2277%" height="15" fill="rgb(208,167,24)" fg:x="3142" fg:w="8"/><text x="89.6638%" y="287.50"></text></g><g><title>core::ptr::write_volatile (2 samples, 0.06%)</title><rect x="89.5845%" y="261" width="0.0569%" height="15" fill="rgb(245,73,45)" fg:x="3148" fg:w="2"/><text x="89.8345%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;chacha20::xchacha::XChaChaCore&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm,typenum::bit::B1&gt;,typenum::bit::B0&gt;,typenum::bit::B1&gt;,typenum::bit::B0&gt;&gt;&gt;&gt; (15 samples, 0.43%)</title><rect x="89.3284%" y="325" width="0.4269%" height="15" fill="rgb(237,203,48)" fg:x="3139" fg:w="15"/><text x="89.5784%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;chacha20::xchacha::XChaChaCore&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm,typenum::bit::B1&gt;,typenum::bit::B0&gt;,typenum::bit::B1&gt;,typenum::bit::B0&gt;&gt;&gt; (4 samples, 0.11%)</title><rect x="89.6414%" y="309" width="0.1138%" height="15" fill="rgb(211,197,16)" fg:x="3150" fg:w="4"/><text x="89.8914%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;chacha20::ChaChaCore&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm,typenum::bit::B1&gt;,typenum::bit::B0&gt;,typenum::bit::B1&gt;,typenum::bit::B0&gt;&gt;&gt; (4 samples, 0.11%)</title><rect x="89.6414%" y="293" width="0.1138%" height="15" fill="rgb(243,99,51)" fg:x="3150" fg:w="4"/><text x="89.8914%" y="303.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.09%)</title><rect x="89.6699%" y="277" width="0.0854%" height="15" fill="rgb(215,123,29)" fg:x="3151" fg:w="3"/><text x="89.9199%" y="287.50"></text></g><g><title>&lt;[Z: N] as zeroize::Zeroize&gt;::zeroize (3 samples, 0.09%)</title><rect x="89.6699%" y="261" width="0.0854%" height="15" fill="rgb(239,186,37)" fg:x="3151" fg:w="3"/><text x="89.9199%" y="271.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;Z&gt; as zeroize::Zeroize&gt;::zeroize (3 samples, 0.09%)</title><rect x="89.6699%" y="245" width="0.0854%" height="15" fill="rgb(252,136,39)" fg:x="3151" fg:w="3"/><text x="89.9199%" y="255.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.06%)</title><rect x="89.6983%" y="229" width="0.0569%" height="15" fill="rgb(223,213,32)" fg:x="3152" fg:w="2"/><text x="89.9483%" y="239.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.06%)</title><rect x="89.6983%" y="213" width="0.0569%" height="15" fill="rgb(233,115,5)" fg:x="3152" fg:w="2"/><text x="89.9483%" y="223.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (1 samples, 0.03%)</title><rect x="89.7268%" y="197" width="0.0285%" height="15" fill="rgb(207,226,44)" fg:x="3153" fg:w="1"/><text x="89.9768%" y="207.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::len (1 samples, 0.03%)</title><rect x="89.7553%" y="309" width="0.0285%" height="15" fill="rgb(208,126,0)" fg:x="3154" fg:w="1"/><text x="90.0053%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (5 samples, 0.14%)</title><rect x="89.8406%" y="229" width="0.1423%" height="15" fill="rgb(244,66,21)" fg:x="3157" fg:w="5"/><text x="90.0906%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (3 samples, 0.09%)</title><rect x="89.8976%" y="213" width="0.0854%" height="15" fill="rgb(222,97,12)" fg:x="3159" fg:w="3"/><text x="90.1476%" y="223.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (3 samples, 0.09%)</title><rect x="89.8976%" y="197" width="0.0854%" height="15" fill="rgb(219,213,19)" fg:x="3159" fg:w="3"/><text x="90.1476%" y="207.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.03%)</title><rect x="89.9829%" y="213" width="0.0285%" height="15" fill="rgb(252,169,30)" fg:x="3162" fg:w="1"/><text x="90.2329%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (9 samples, 0.26%)</title><rect x="89.7837%" y="277" width="0.2561%" height="15" fill="rgb(206,32,51)" fg:x="3155" fg:w="9"/><text x="90.0337%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.23%)</title><rect x="89.8122%" y="261" width="0.2277%" height="15" fill="rgb(250,172,42)" fg:x="3156" fg:w="8"/><text x="90.0622%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (8 samples, 0.23%)</title><rect x="89.8122%" y="245" width="0.2277%" height="15" fill="rgb(209,34,43)" fg:x="3156" fg:w="8"/><text x="90.0622%" y="255.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.06%)</title><rect x="89.9829%" y="229" width="0.0569%" height="15" fill="rgb(223,11,35)" fg:x="3162" fg:w="2"/><text x="90.2329%" y="239.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (1 samples, 0.03%)</title><rect x="90.0114%" y="213" width="0.0285%" height="15" fill="rgb(251,219,26)" fg:x="3163" fg:w="1"/><text x="90.2614%" y="223.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.03%)</title><rect x="90.0114%" y="197" width="0.0285%" height="15" fill="rgb(231,119,3)" fg:x="3163" fg:w="1"/><text x="90.2614%" y="207.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.03%)</title><rect x="90.0114%" y="181" width="0.0285%" height="15" fill="rgb(216,97,11)" fg:x="3163" fg:w="1"/><text x="90.2614%" y="191.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (10 samples, 0.28%)</title><rect x="89.7837%" y="309" width="0.2846%" height="15" fill="rgb(223,59,9)" fg:x="3155" fg:w="10"/><text x="90.0337%" y="319.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (10 samples, 0.28%)</title><rect x="89.7837%" y="293" width="0.2846%" height="15" fill="rgb(233,93,31)" fg:x="3155" fg:w="10"/><text x="90.0337%" y="303.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (1 samples, 0.03%)</title><rect x="90.0398%" y="277" width="0.0285%" height="15" fill="rgb(239,81,33)" fg:x="3164" fg:w="1"/><text x="90.2898%" y="287.50"></text></g><g><title>core::ptr::read (1 samples, 0.03%)</title><rect x="90.0398%" y="261" width="0.0285%" height="15" fill="rgb(213,120,34)" fg:x="3164" fg:w="1"/><text x="90.2898%" y="271.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="90.2675%" y="245" width="0.0285%" height="15" fill="rgb(243,49,53)" fg:x="3172" fg:w="1"/><text x="90.5175%" y="255.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for &amp;[T: N]&gt;::try_from (15 samples, 0.43%)</title><rect x="93.1133%" y="181" width="0.4269%" height="15" fill="rgb(247,216,33)" fg:x="3272" fg:w="15"/><text x="93.3633%" y="191.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (73 samples, 2.08%)</title><rect x="92.4872%" y="213" width="2.0774%" height="15" fill="rgb(226,26,14)" fg:x="3250" fg:w="73"/><text x="92.7372%" y="223.50">&lt;..</text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (65 samples, 1.85%)</title><rect x="92.7149%" y="197" width="1.8497%" height="15" fill="rgb(215,49,53)" fg:x="3258" fg:w="65"/><text x="92.9649%" y="207.50">c..</text></g><g><title>core::result::Result&lt;T,E&gt;::map (36 samples, 1.02%)</title><rect x="93.5401%" y="181" width="1.0245%" height="15" fill="rgb(245,162,40)" fg:x="3287" fg:w="36"/><text x="93.7901%" y="191.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from::{{closure}} (7 samples, 0.20%)</title><rect x="94.3654%" y="165" width="0.1992%" height="15" fill="rgb(229,68,17)" fg:x="3316" fg:w="7"/><text x="94.6154%" y="175.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::cast (1 samples, 0.03%)</title><rect x="94.7353%" y="165" width="0.0285%" height="15" fill="rgb(213,182,10)" fg:x="3329" fg:w="1"/><text x="94.9853%" y="175.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::Deref&gt;::deref (8 samples, 0.23%)</title><rect x="94.5646%" y="213" width="0.2277%" height="15" fill="rgb(245,125,30)" fg:x="3323" fg:w="8"/><text x="94.8146%" y="223.50"></text></g><g><title>core::slice::raw::from_raw_parts (7 samples, 0.20%)</title><rect x="94.5931%" y="197" width="0.1992%" height="15" fill="rgb(232,202,2)" fg:x="3324" fg:w="7"/><text x="94.8431%" y="207.50"></text></g><g><title>core::ptr::slice_from_raw_parts (2 samples, 0.06%)</title><rect x="94.7353%" y="181" width="0.0569%" height="15" fill="rgb(237,140,51)" fg:x="3329" fg:w="2"/><text x="94.9853%" y="191.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (1 samples, 0.03%)</title><rect x="94.7638%" y="165" width="0.0285%" height="15" fill="rgb(236,157,25)" fg:x="3330" fg:w="1"/><text x="95.0138%" y="175.50"></text></g><g><title>core::convert::num::&lt;impl core::convert::From&lt;u32&gt; for u64&gt;::from (7 samples, 0.20%)</title><rect x="94.7923%" y="213" width="0.1992%" height="15" fill="rgb(219,209,0)" fg:x="3331" fg:w="7"/><text x="95.0423%" y="223.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_le_bytes (23 samples, 0.65%)</title><rect x="94.9915%" y="213" width="0.6545%" height="15" fill="rgb(240,116,54)" fg:x="3338" fg:w="23"/><text x="95.2415%" y="223.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_ne_bytes (11 samples, 0.31%)</title><rect x="95.3330%" y="197" width="0.3130%" height="15" fill="rgb(216,10,36)" fg:x="3350" fg:w="11"/><text x="95.5830%" y="207.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (32 samples, 0.91%)</title><rect x="95.6460%" y="213" width="0.9106%" height="15" fill="rgb(222,72,44)" fg:x="3361" fg:w="32"/><text x="95.8960%" y="223.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (5 samples, 0.14%)</title><rect x="97.3250%" y="165" width="0.1423%" height="15" fill="rgb(232,159,9)" fg:x="3420" fg:w="5"/><text x="97.5750%" y="175.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (3 samples, 0.09%)</title><rect x="97.3819%" y="149" width="0.0854%" height="15" fill="rgb(210,39,32)" fg:x="3422" fg:w="3"/><text x="97.6319%" y="159.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::encrypt_in_place_detached (1,466 samples, 41.72%)</title><rect x="55.9476%" y="341" width="41.7188%" height="15" fill="rgb(216,194,45)" fg:x="1966" fg:w="1466"/><text x="56.1976%" y="351.50">chacha20poly1305::cipher::Cipher&lt;C&gt;::encrypt_in_place_detached</text></g><g><title>universal_hash::UniversalHash::update_padded (278 samples, 7.91%)</title><rect x="89.7553%" y="325" width="7.9112%" height="15" fill="rgb(218,18,35)" fg:x="3154" fg:w="278"/><text x="90.0053%" y="335.50">universal_h..</text></g><g><title>universal_hash::UniversalHash::update (267 samples, 7.60%)</title><rect x="90.0683%" y="309" width="7.5982%" height="15" fill="rgb(207,83,51)" fg:x="3165" fg:w="267"/><text x="90.3183%" y="319.50">universal_..</text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (267 samples, 7.60%)</title><rect x="90.0683%" y="293" width="7.5982%" height="15" fill="rgb(225,63,43)" fg:x="3165" fg:w="267"/><text x="90.3183%" y="303.50">&lt;poly1305:..</text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (267 samples, 7.60%)</title><rect x="90.0683%" y="277" width="7.5982%" height="15" fill="rgb(207,57,36)" fg:x="3165" fg:w="267"/><text x="90.3183%" y="287.50">&lt;poly1305:..</text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (266 samples, 7.57%)</title><rect x="90.0968%" y="261" width="7.5697%" height="15" fill="rgb(216,99,33)" fg:x="3166" fg:w="266"/><text x="90.3468%" y="271.50">&lt;universal..</text></g><g><title>&lt;poly1305::backend::soft::State as universal_hash::UhfBackend&gt;::proc_block (259 samples, 7.37%)</title><rect x="90.2960%" y="245" width="7.3705%" height="15" fill="rgb(225,42,16)" fg:x="3173" fg:w="259"/><text x="90.5460%" y="255.50">&lt;poly1305:..</text></g><g><title>poly1305::backend::soft::State::compute_block (259 samples, 7.37%)</title><rect x="90.2960%" y="229" width="7.3705%" height="15" fill="rgb(220,201,45)" fg:x="3173" fg:w="259"/><text x="90.5460%" y="239.50">poly1305::..</text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (39 samples, 1.11%)</title><rect x="96.5566%" y="213" width="1.1098%" height="15" fill="rgb(225,33,4)" fg:x="3393" fg:w="39"/><text x="96.8066%" y="223.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (36 samples, 1.02%)</title><rect x="96.6420%" y="197" width="1.0245%" height="15" fill="rgb(224,33,50)" fg:x="3396" fg:w="36"/><text x="96.8920%" y="207.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (31 samples, 0.88%)</title><rect x="96.7843%" y="181" width="0.8822%" height="15" fill="rgb(246,198,51)" fg:x="3401" fg:w="31"/><text x="97.0343%" y="191.50"></text></g><g><title>core::ptr::slice_from_raw_parts (7 samples, 0.20%)</title><rect x="97.4673%" y="165" width="0.1992%" height="15" fill="rgb(205,22,4)" fg:x="3425" fg:w="7"/><text x="97.7173%" y="175.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (5 samples, 0.14%)</title><rect x="97.5242%" y="149" width="0.1423%" height="15" fill="rgb(206,3,8)" fg:x="3427" fg:w="5"/><text x="97.7742%" y="159.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.03%)</title><rect x="97.6665%" y="293" width="0.0285%" height="15" fill="rgb(251,23,15)" fg:x="3432" fg:w="1"/><text x="97.9165%" y="303.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.03%)</title><rect x="97.6665%" y="277" width="0.0285%" height="15" fill="rgb(252,88,28)" fg:x="3432" fg:w="1"/><text x="97.9165%" y="287.50"></text></g><g><title>&lt;[Z] as zeroize::Zeroize&gt;::zeroize (3 samples, 0.09%)</title><rect x="97.6665%" y="325" width="0.0854%" height="15" fill="rgb(212,127,14)" fg:x="3432" fg:w="3"/><text x="97.9165%" y="335.50"></text></g><g><title>zeroize::volatile_set (3 samples, 0.09%)</title><rect x="97.6665%" y="309" width="0.0854%" height="15" fill="rgb(247,145,37)" fg:x="3432" fg:w="3"/><text x="97.9165%" y="319.50"></text></g><g><title>core::ptr::write_volatile (2 samples, 0.06%)</title><rect x="97.6949%" y="293" width="0.0569%" height="15" fill="rgb(209,117,53)" fg:x="3433" fg:w="2"/><text x="97.9449%" y="303.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="97.7518%" y="309" width="0.0285%" height="15" fill="rgb(212,90,42)" fg:x="3435" fg:w="1"/><text x="98.0018%" y="319.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="97.7803%" y="293" width="0.0285%" height="15" fill="rgb(218,164,37)" fg:x="3436" fg:w="1"/><text x="98.0303%" y="303.50"></text></g><g><title>poly1305::backend::autodetect::avx2_cpuid::init_get (1 samples, 0.03%)</title><rect x="97.8088%" y="293" width="0.0285%" height="15" fill="rgb(246,65,34)" fg:x="3437" fg:w="1"/><text x="98.0588%" y="303.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (1 samples, 0.03%)</title><rect x="97.8372%" y="277" width="0.0285%" height="15" fill="rgb(231,100,33)" fg:x="3438" fg:w="1"/><text x="98.0872%" y="287.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (1 samples, 0.03%)</title><rect x="97.8372%" y="261" width="0.0285%" height="15" fill="rgb(228,126,14)" fg:x="3438" fg:w="1"/><text x="98.0872%" y="271.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.03%)</title><rect x="97.8372%" y="245" width="0.0285%" height="15" fill="rgb(215,173,21)" fg:x="3438" fg:w="1"/><text x="98.0872%" y="255.50"></text></g><g><title>&lt;poly1305::backend::soft::State as core::default::Default&gt;::default (3 samples, 0.09%)</title><rect x="97.8657%" y="277" width="0.0854%" height="15" fill="rgb(210,6,40)" fg:x="3439" fg:w="3"/><text x="98.1157%" y="287.50"></text></g><g><title>core::array::&lt;impl core::default::Default for [T: _]&gt;::default (3 samples, 0.09%)</title><rect x="97.8657%" y="261" width="0.0854%" height="15" fill="rgb(212,48,18)" fg:x="3439" fg:w="3"/><text x="98.1157%" y="271.50"></text></g><g><title>&lt;u32 as core::default::Default&gt;::default (1 samples, 0.03%)</title><rect x="97.9226%" y="245" width="0.0285%" height="15" fill="rgb(230,214,11)" fg:x="3441" fg:w="1"/><text x="98.1726%" y="255.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_le_bytes (1 samples, 0.03%)</title><rect x="97.9511%" y="277" width="0.0285%" height="15" fill="rgb(254,105,39)" fg:x="3442" fg:w="1"/><text x="98.2011%" y="287.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_ne_bytes (1 samples, 0.03%)</title><rect x="97.9511%" y="261" width="0.0285%" height="15" fill="rgb(245,158,5)" fg:x="3442" fg:w="1"/><text x="98.2011%" y="271.50"></text></g><g><title>&lt;poly1305::Poly1305 as crypto_common::KeyInit&gt;::new (9 samples, 0.26%)</title><rect x="97.7518%" y="325" width="0.2561%" height="15" fill="rgb(249,208,11)" fg:x="3435" fg:w="9"/><text x="98.0018%" y="335.50"></text></g><g><title>poly1305::backend::autodetect::State::new (8 samples, 0.23%)</title><rect x="97.7803%" y="309" width="0.2277%" height="15" fill="rgb(210,39,28)" fg:x="3436" fg:w="8"/><text x="98.0303%" y="319.50"></text></g><g><title>poly1305::backend::soft::State::new (6 samples, 0.17%)</title><rect x="97.8372%" y="293" width="0.1707%" height="15" fill="rgb(211,56,53)" fg:x="3438" fg:w="6"/><text x="98.0872%" y="303.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.03%)</title><rect x="97.9795%" y="277" width="0.0285%" height="15" fill="rgb(226,201,30)" fg:x="3443" fg:w="1"/><text x="98.2295%" y="287.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (2 samples, 0.06%)</title><rect x="98.0364%" y="277" width="0.0569%" height="15" fill="rgb(239,101,34)" fg:x="3445" fg:w="2"/><text x="98.2864%" y="287.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (2 samples, 0.06%)</title><rect x="98.0364%" y="261" width="0.0569%" height="15" fill="rgb(226,209,5)" fg:x="3445" fg:w="2"/><text x="98.2864%" y="271.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (2 samples, 0.06%)</title><rect x="98.0364%" y="245" width="0.0569%" height="15" fill="rgb(250,105,47)" fg:x="3445" fg:w="2"/><text x="98.2864%" y="255.50"></text></g><g><title>chacha20::backends::sse2::inner (2 samples, 0.06%)</title><rect x="98.0364%" y="229" width="0.0569%" height="15" fill="rgb(230,72,3)" fg:x="3445" fg:w="2"/><text x="98.2864%" y="239.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_add_epi32 (2 samples, 0.06%)</title><rect x="98.2925%" y="133" width="0.0569%" height="15" fill="rgb(232,218,39)" fg:x="3454" fg:w="2"/><text x="98.5425%" y="143.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i32x4 (1 samples, 0.03%)</title><rect x="98.3210%" y="117" width="0.0285%" height="15" fill="rgb(248,166,6)" fg:x="3455" fg:w="1"/><text x="98.5710%" y="127.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_slli_epi32 (1 samples, 0.03%)</title><rect x="98.3495%" y="133" width="0.0285%" height="15" fill="rgb(247,89,20)" fg:x="3456" fg:w="1"/><text x="98.5995%" y="143.50"></text></g><g><title>chacha20::backends::sse2::add_xor_rot (14 samples, 0.40%)</title><rect x="98.0933%" y="149" width="0.3984%" height="15" fill="rgb(248,130,54)" fg:x="3447" fg:w="14"/><text x="98.3433%" y="159.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_xor_si128 (4 samples, 0.11%)</title><rect x="98.3779%" y="133" width="0.1138%" height="15" fill="rgb(234,196,4)" fg:x="3457" fg:w="4"/><text x="98.6279%" y="143.50"></text></g><g><title>chacha20::backends::sse2::double_quarter_round (16 samples, 0.46%)</title><rect x="98.0933%" y="165" width="0.4553%" height="15" fill="rgb(250,143,31)" fg:x="3447" fg:w="16"/><text x="98.3433%" y="175.50"></text></g><g><title>chacha20::backends::sse2::cols_to_rows (2 samples, 0.06%)</title><rect x="98.4917%" y="149" width="0.0569%" height="15" fill="rgb(211,110,34)" fg:x="3461" fg:w="2"/><text x="98.7417%" y="159.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_shuffle_epi32 (2 samples, 0.06%)</title><rect x="98.4917%" y="133" width="0.0569%" height="15" fill="rgb(215,124,48)" fg:x="3461" fg:w="2"/><text x="98.7417%" y="143.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (2 samples, 0.06%)</title><rect x="98.5771%" y="133" width="0.0569%" height="15" fill="rgb(216,46,13)" fg:x="3464" fg:w="2"/><text x="98.8271%" y="143.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.03%)</title><rect x="98.6340%" y="133" width="0.0285%" height="15" fill="rgb(205,184,25)" fg:x="3466" fg:w="1"/><text x="98.8840%" y="143.50"></text></g><g><title>chacha20::backends::sse2::rounds (21 samples, 0.60%)</title><rect x="98.0933%" y="181" width="0.5976%" height="15" fill="rgb(228,1,10)" fg:x="3447" fg:w="21"/><text x="98.3433%" y="191.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (5 samples, 0.14%)</title><rect x="98.5487%" y="165" width="0.1423%" height="15" fill="rgb(213,116,27)" fg:x="3463" fg:w="5"/><text x="98.7987%" y="175.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4 samples, 0.11%)</title><rect x="98.5771%" y="149" width="0.1138%" height="15" fill="rgb(241,95,50)" fg:x="3464" fg:w="4"/><text x="98.8271%" y="159.50"></text></g><g><title>core::mem::replace (1 samples, 0.03%)</title><rect x="98.6625%" y="133" width="0.0285%" height="15" fill="rgb(238,48,32)" fg:x="3467" fg:w="1"/><text x="98.9125%" y="143.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::write_keystream_block (23 samples, 0.65%)</title><rect x="98.0933%" y="277" width="0.6545%" height="15" fill="rgb(235,113,49)" fg:x="3447" fg:w="23"/><text x="98.3433%" y="287.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (23 samples, 0.65%)</title><rect x="98.0933%" y="261" width="0.6545%" height="15" fill="rgb(205,127,43)" fg:x="3447" fg:w="23"/><text x="98.3433%" y="271.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (23 samples, 0.65%)</title><rect x="98.0933%" y="245" width="0.6545%" height="15" fill="rgb(250,162,2)" fg:x="3447" fg:w="23"/><text x="98.3433%" y="255.50"></text></g><g><title>chacha20::backends::sse2::inner (23 samples, 0.65%)</title><rect x="98.0933%" y="229" width="0.6545%" height="15" fill="rgb(220,13,41)" fg:x="3447" fg:w="23"/><text x="98.3433%" y="239.50"></text></g><g><title>&lt;cipher::stream_core::WriteBlockCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (23 samples, 0.65%)</title><rect x="98.0933%" y="213" width="0.6545%" height="15" fill="rgb(249,221,25)" fg:x="3447" fg:w="23"/><text x="98.3433%" y="223.50"></text></g><g><title>&lt;chacha20::backends::sse2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (23 samples, 0.65%)</title><rect x="98.0933%" y="197" width="0.6545%" height="15" fill="rgb(215,208,19)" fg:x="3447" fg:w="23"/><text x="98.3433%" y="207.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.06%)</title><rect x="98.6910%" y="181" width="0.0569%" height="15" fill="rgb(236,175,2)" fg:x="3468" fg:w="2"/><text x="98.9410%" y="191.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.06%)</title><rect x="98.6910%" y="165" width="0.0569%" height="15" fill="rgb(241,52,2)" fg:x="3468" fg:w="2"/><text x="98.9410%" y="175.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3 samples, 0.09%)</title><rect x="98.8902%" y="261" width="0.0854%" height="15" fill="rgb(248,140,14)" fg:x="3475" fg:w="3"/><text x="99.1402%" y="271.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.06%)</title><rect x="98.9186%" y="245" width="0.0569%" height="15" fill="rgb(253,22,42)" fg:x="3476" fg:w="2"/><text x="99.1686%" y="255.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.03%)</title><rect x="98.9471%" y="229" width="0.0285%" height="15" fill="rgb(234,61,47)" fg:x="3477" fg:w="1"/><text x="99.1971%" y="239.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (35 samples, 1.00%)</title><rect x="98.0080%" y="325" width="0.9960%" height="15" fill="rgb(208,226,15)" fg:x="3444" fg:w="35"/><text x="98.2580%" y="335.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (35 samples, 1.00%)</title><rect x="98.0080%" y="309" width="0.9960%" height="15" fill="rgb(217,221,4)" fg:x="3444" fg:w="35"/><text x="98.2580%" y="319.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (34 samples, 0.97%)</title><rect x="98.0364%" y="293" width="0.9676%" height="15" fill="rgb(212,174,34)" fg:x="3445" fg:w="34"/><text x="98.2864%" y="303.50"></text></g><g><title>inout::inout_buf::InOutBuf&lt;u8&gt;::xor_in2out (9 samples, 0.26%)</title><rect x="98.7479%" y="277" width="0.2561%" height="15" fill="rgb(253,83,4)" fg:x="3470" fg:w="9"/><text x="98.9979%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.03%)</title><rect x="98.9755%" y="261" width="0.0285%" height="15" fill="rgb(250,195,49)" fg:x="3478" fg:w="1"/><text x="99.2255%" y="271.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.03%)</title><rect x="98.9755%" y="245" width="0.0285%" height="15" fill="rgb(241,192,25)" fg:x="3478" fg:w="1"/><text x="99.2255%" y="255.50"></text></g><g><title>cipher::stream::StreamCipherSeek::seek (1 samples, 0.03%)</title><rect x="99.0040%" y="325" width="0.0285%" height="15" fill="rgb(208,124,10)" fg:x="3479" fg:w="1"/><text x="99.2540%" y="335.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipherSeek&gt;::try_seek (1 samples, 0.03%)</title><rect x="99.0040%" y="309" width="0.0285%" height="15" fill="rgb(222,33,0)" fg:x="3479" fg:w="1"/><text x="99.2540%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (4 samples, 0.11%)</title><rect x="99.0894%" y="245" width="0.1138%" height="15" fill="rgb(234,209,28)" fg:x="3482" fg:w="4"/><text x="99.3394%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.06%)</title><rect x="99.1463%" y="229" width="0.0569%" height="15" fill="rgb(224,11,23)" fg:x="3484" fg:w="2"/><text x="99.3963%" y="239.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (1 samples, 0.03%)</title><rect x="99.1747%" y="213" width="0.0285%" height="15" fill="rgb(232,99,1)" fg:x="3485" fg:w="1"/><text x="99.4247%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (8 samples, 0.23%)</title><rect x="99.0324%" y="293" width="0.2277%" height="15" fill="rgb(237,95,45)" fg:x="3480" fg:w="8"/><text x="99.2824%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.23%)</title><rect x="99.0324%" y="277" width="0.2277%" height="15" fill="rgb(208,109,11)" fg:x="3480" fg:w="8"/><text x="99.2824%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (8 samples, 0.23%)</title><rect x="99.0324%" y="261" width="0.2277%" height="15" fill="rgb(216,190,48)" fg:x="3480" fg:w="8"/><text x="99.2824%" y="271.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.06%)</title><rect x="99.2032%" y="245" width="0.0569%" height="15" fill="rgb(251,171,36)" fg:x="3486" fg:w="2"/><text x="99.4532%" y="255.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (2 samples, 0.06%)</title><rect x="99.2032%" y="229" width="0.0569%" height="15" fill="rgb(230,62,22)" fg:x="3486" fg:w="2"/><text x="99.4532%" y="239.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::encrypt_in_place_detached (1,617 samples, 46.02%)</title><rect x="53.2726%" y="357" width="46.0159%" height="15" fill="rgb(225,114,35)" fg:x="1872" fg:w="1617"/><text x="53.5226%" y="367.50">&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::encrypt_in_pl..</text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (57 samples, 1.62%)</title><rect x="97.6665%" y="341" width="1.6221%" height="15" fill="rgb(215,118,42)" fg:x="3432" fg:w="57"/><text x="97.9165%" y="351.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (9 samples, 0.26%)</title><rect x="99.0324%" y="325" width="0.2561%" height="15" fill="rgb(243,119,21)" fg:x="3480" fg:w="9"/><text x="99.2824%" y="335.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (9 samples, 0.26%)</title><rect x="99.0324%" y="309" width="0.2561%" height="15" fill="rgb(252,177,53)" fg:x="3480" fg:w="9"/><text x="99.2824%" y="319.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (1 samples, 0.03%)</title><rect x="99.2601%" y="293" width="0.0285%" height="15" fill="rgb(237,209,29)" fg:x="3488" fg:w="1"/><text x="99.5101%" y="303.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.03%)</title><rect x="99.2886%" y="357" width="0.0285%" height="15" fill="rgb(212,65,23)" fg:x="3489" fg:w="1"/><text x="99.5386%" y="367.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.03%)</title><rect x="99.3170%" y="341" width="0.0285%" height="15" fill="rgb(230,222,46)" fg:x="3490" fg:w="1"/><text x="99.5670%" y="351.50"></text></g><g><title>tftp::encryption::Encryptor::encrypt (1,623 samples, 46.19%)</title><rect x="53.2726%" y="389" width="46.1867%" height="15" fill="rgb(215,135,32)" fg:x="1872" fg:w="1623"/><text x="53.5226%" y="399.50">tftp::encryption::Encryptor::encrypt</text></g><g><title>aead::AeadInPlace::encrypt_in_place (1,623 samples, 46.19%)</title><rect x="53.2726%" y="373" width="46.1867%" height="15" fill="rgb(246,101,22)" fg:x="1872" fg:w="1623"/><text x="53.5226%" y="383.50">aead::AeadInPlace::encrypt_in_place</text></g><g><title>&lt;heapless::vec::Vec&lt;u8,_&gt; as aead::Buffer&gt;::extend_from_slice (5 samples, 0.14%)</title><rect x="99.3170%" y="357" width="0.1423%" height="15" fill="rgb(206,107,13)" fg:x="3490" fg:w="5"/><text x="99.5670%" y="367.50"></text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::extend_from_slice (4 samples, 0.11%)</title><rect x="99.3455%" y="341" width="0.1138%" height="15" fill="rgb(250,100,44)" fg:x="3491" fg:w="4"/><text x="99.5955%" y="351.50"></text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::push_unchecked (3 samples, 0.09%)</title><rect x="99.3739%" y="325" width="0.0854%" height="15" fill="rgb(231,147,38)" fg:x="3492" fg:w="3"/><text x="99.6239%" y="335.50"></text></g><g><title>tftp::packet::PacketType::from_repr (2 samples, 0.06%)</title><rect x="99.4593%" y="373" width="0.0569%" height="15" fill="rgb(229,8,40)" fg:x="3495" fg:w="2"/><text x="99.7093%" y="383.50"></text></g><g><title>&lt;tftp::socket::EncryptionBoundSocket&lt;S&gt; as tftp::socket::Socket&gt;::send_to (1,632 samples, 46.44%)</title><rect x="53.1303%" y="405" width="46.4428%" height="15" fill="rgb(221,135,30)" fg:x="1867" fg:w="1632"/><text x="53.3803%" y="415.50">&lt;tftp::socket::EncryptionBoundSocket&lt;S&gt; as tftp::socket::Socket&gt;::send_to</text></g><g><title>tftp::packet::PacketType::from_bytes (4 samples, 0.11%)</title><rect x="99.4593%" y="389" width="0.1138%" height="15" fill="rgb(249,193,18)" fg:x="3495" fg:w="4"/><text x="99.7093%" y="399.50"></text></g><g><title>tftp::packet::try_from (2 samples, 0.06%)</title><rect x="99.5162%" y="373" width="0.0569%" height="15" fill="rgb(209,133,39)" fg:x="3497" fg:w="2"/><text x="99.7662%" y="383.50"></text></g><g><title>core::num::&lt;impl u16&gt;::from_be_bytes (1 samples, 0.03%)</title><rect x="99.5447%" y="357" width="0.0285%" height="15" fill="rgb(232,100,14)" fg:x="3498" fg:w="1"/><text x="99.7947%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.03%)</title><rect x="99.5731%" y="389" width="0.0285%" height="15" fill="rgb(224,185,1)" fg:x="3499" fg:w="1"/><text x="99.8231%" y="399.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="99.5731%" y="373" width="0.0285%" height="15" fill="rgb(223,139,8)" fg:x="3499" fg:w="1"/><text x="99.8231%" y="383.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::pop_at (1 samples, 0.03%)</title><rect x="99.6016%" y="341" width="0.0285%" height="15" fill="rgb(232,213,38)" fg:x="3500" fg:w="1"/><text x="99.8516%" y="351.50"></text></g><g><title>&lt;arrayvec::arrayvec::Drain&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="99.6016%" y="325" width="0.0285%" height="15" fill="rgb(207,94,22)" fg:x="3500" fg:w="1"/><text x="99.8516%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.03%)</title><rect x="99.6016%" y="309" width="0.0285%" height="15" fill="rgb(219,183,54)" fg:x="3500" fg:w="1"/><text x="99.8516%" y="319.50"></text></g><g><title>&lt;arrayvec::arrayvec::Drain&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (1 samples, 0.03%)</title><rect x="99.6016%" y="293" width="0.0285%" height="15" fill="rgb(216,185,54)" fg:x="3500" fg:w="1"/><text x="99.8516%" y="303.50"></text></g><g><title>core::ptr::read (1 samples, 0.03%)</title><rect x="99.6016%" y="277" width="0.0285%" height="15" fill="rgb(254,217,39)" fg:x="3500" fg:w="1"/><text x="99.8516%" y="287.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (1 samples, 0.03%)</title><rect x="99.6016%" y="261" width="0.0285%" height="15" fill="rgb(240,178,23)" fg:x="3500" fg:w="1"/><text x="99.8516%" y="271.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (1 samples, 0.03%)</title><rect x="99.6016%" y="245" width="0.0285%" height="15" fill="rgb(218,11,47)" fg:x="3500" fg:w="1"/><text x="99.8516%" y="255.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="99.6016%" y="229" width="0.0285%" height="15" fill="rgb(218,51,51)" fg:x="3500" fg:w="1"/><text x="99.8516%" y="239.50"></text></g><g><title>&lt;tftp::storage::FileReader&lt;T&gt; as tftp::storage::BlockReader&gt;::free_block (3 samples, 0.09%)</title><rect x="99.5731%" y="405" width="0.0854%" height="15" fill="rgb(238,126,27)" fg:x="3499" fg:w="3"/><text x="99.8231%" y="415.50"></text></g><g><title>tftp::map::Map&lt;K,V,_&gt;::remove (2 samples, 0.06%)</title><rect x="99.6016%" y="389" width="0.0569%" height="15" fill="rgb(249,202,22)" fg:x="3500" fg:w="2"/><text x="99.8516%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (2 samples, 0.06%)</title><rect x="99.6016%" y="373" width="0.0569%" height="15" fill="rgb(254,195,49)" fg:x="3500" fg:w="2"/><text x="99.8516%" y="383.50"></text></g><g><title>tftp::map::Map&lt;K,V,_&gt;::remove::{{closure}} (2 samples, 0.06%)</title><rect x="99.6016%" y="357" width="0.0569%" height="15" fill="rgb(208,123,14)" fg:x="3500" fg:w="2"/><text x="99.8516%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.03%)</title><rect x="99.6301%" y="341" width="0.0285%" height="15" fill="rgb(224,200,8)" fg:x="3501" fg:w="1"/><text x="99.8801%" y="351.50"></text></g><g><title>tftp::map::Map&lt;K,V,_&gt;::remove::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="99.6301%" y="325" width="0.0285%" height="15" fill="rgb(217,61,36)" fg:x="3501" fg:w="1"/><text x="99.8801%" y="335.50"></text></g><g><title>[libc.so.6] (1 samples, 0.03%)</title><rect x="99.6301%" y="309" width="0.0285%" height="15" fill="rgb(206,35,45)" fg:x="3501" fg:w="1"/><text x="99.8801%" y="319.50"></text></g><g><title>[libc.so.6] (4 samples, 0.11%)</title><rect x="99.6585%" y="405" width="0.1138%" height="15" fill="rgb(217,65,33)" fg:x="3502" fg:w="4"/><text x="99.9085%" y="415.50"></text></g><g><title>core::cmp::PartialEq::ne (1 samples, 0.03%)</title><rect x="99.7723%" y="405" width="0.0285%" height="15" fill="rgb(222,158,48)" fg:x="3506" fg:w="1"/><text x="100.0223%" y="415.50"></text></g><g><title>tftp::flow_control::RateControl::start_rtt (1 samples, 0.03%)</title><rect x="99.8008%" y="405" width="0.0285%" height="15" fill="rgb(254,2,54)" fg:x="3507" fg:w="1"/><text x="100.0508%" y="415.50"></text></g><g><title>tftp::instant_callback (1 samples, 0.03%)</title><rect x="99.8008%" y="389" width="0.0285%" height="15" fill="rgb(250,143,38)" fg:x="3507" fg:w="1"/><text x="100.0508%" y="399.50"></text></g><g><title>tftp::std_compat::time::Instant::from_time (1 samples, 0.03%)</title><rect x="99.8008%" y="373" width="0.0285%" height="15" fill="rgb(248,25,0)" fg:x="3507" fg:w="1"/><text x="100.0508%" y="383.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.03%)</title><rect x="99.8008%" y="357" width="0.0285%" height="15" fill="rgb(206,152,27)" fg:x="3507" fg:w="1"/><text x="100.0508%" y="367.50"></text></g><g><title>tftp::instant_callback::{{closure}} (1 samples, 0.03%)</title><rect x="99.8008%" y="341" width="0.0285%" height="15" fill="rgb(240,77,30)" fg:x="3507" fg:w="1"/><text x="100.0508%" y="351.50"></text></g><g><title>core::time::Duration::as_micros (1 samples, 0.03%)</title><rect x="99.8008%" y="325" width="0.0285%" height="15" fill="rgb(231,5,3)" fg:x="3507" fg:w="1"/><text x="100.0508%" y="335.50"></text></g><g><title>tftp::packet::PacketType::from_bytes (1 samples, 0.03%)</title><rect x="99.8293%" y="405" width="0.0285%" height="15" fill="rgb(207,226,32)" fg:x="3508" fg:w="1"/><text x="100.0793%" y="415.50"></text></g><g><title>tftp::packet::PacketType::from_repr (1 samples, 0.03%)</title><rect x="99.8293%" y="389" width="0.0285%" height="15" fill="rgb(222,207,47)" fg:x="3508" fg:w="1"/><text x="100.0793%" y="399.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4 samples, 0.11%)</title><rect x="99.8577%" y="389" width="0.1138%" height="15" fill="rgb(229,115,45)" fg:x="3509" fg:w="4"/><text x="100.1077%" y="399.50"></text></g><g><title>tftp::instant_callback::{{closure}} (4 samples, 0.11%)</title><rect x="99.8577%" y="373" width="0.1138%" height="15" fill="rgb(224,191,6)" fg:x="3509" fg:w="4"/><text x="100.1077%" y="383.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (3 samples, 0.09%)</title><rect x="99.8862%" y="357" width="0.0854%" height="15" fill="rgb(230,227,24)" fg:x="3510" fg:w="3"/><text x="100.1362%" y="367.50"></text></g><g><title>clock_gettime (3 samples, 0.09%)</title><rect x="99.8862%" y="341" width="0.0854%" height="15" fill="rgb(228,80,19)" fg:x="3510" fg:w="3"/><text x="100.1362%" y="351.50"></text></g><g><title>__vdso_clock_gettime (3 samples, 0.09%)</title><rect x="99.8862%" y="325" width="0.0854%" height="15" fill="rgb(247,229,0)" fg:x="3510" fg:w="3"/><text x="100.1362%" y="335.50"></text></g><g><title>[[vdso]] (1 samples, 0.03%)</title><rect x="99.9431%" y="309" width="0.0285%" height="15" fill="rgb(237,194,15)" fg:x="3512" fg:w="1"/><text x="100.1931%" y="319.50"></text></g><g><title>all (3,514 samples, 100%)</title><rect x="0.0000%" y="469" width="100.0000%" height="15" fill="rgb(219,203,20)" fg:x="0" fg:w="3514"/><text x="0.2500%" y="479.50"></text></g><g><title>tftp (3,514 samples, 100.00%)</title><rect x="0.0000%" y="453" width="100.0000%" height="15" fill="rgb(234,128,8)" fg:x="0" fg:w="3514"/><text x="0.2500%" y="463.50">tftp</text></g><g><title>[unknown] (3,508 samples, 99.83%)</title><rect x="0.1707%" y="437" width="99.8293%" height="15" fill="rgb(248,202,8)" fg:x="6" fg:w="3508"/><text x="0.4207%" y="447.50">[unknown]</text></g><g><title>tftp::client::client::send_file (1,709 samples, 48.63%)</title><rect x="51.3660%" y="421" width="48.6340%" height="15" fill="rgb(206,104,37)" fg:x="1805" fg:w="1709"/><text x="51.6160%" y="431.50">tftp::client::client::send_file</text></g><g><title>tftp::std_compat::time::Instant::elapsed (5 samples, 0.14%)</title><rect x="99.8577%" y="405" width="0.1423%" height="15" fill="rgb(223,8,27)" fg:x="3509" fg:w="5"/><text x="100.1077%" y="415.50"></text></g><g><title>core::time::Duration::from_micros (1 samples, 0.03%)</title><rect x="99.9715%" y="389" width="0.0285%" height="15" fill="rgb(216,217,28)" fg:x="3513" fg:w="1"/><text x="100.2215%" y="399.50"></text></g><g><title>core::time::Duration::new (1 samples, 0.03%)</title><rect x="99.9715%" y="373" width="0.0285%" height="15" fill="rgb(249,199,1)" fg:x="3513" fg:w="1"/><text x="100.2215%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::checked_add (1 samples, 0.03%)</title><rect x="99.9715%" y="357" width="0.0285%" height="15" fill="rgb(240,85,17)" fg:x="3513" fg:w="1"/><text x="100.2215%" y="367.50"></text></g></svg></svg>