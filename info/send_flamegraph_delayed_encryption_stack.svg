<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="710" onload="init(evt)" viewBox="0 0 1200 710" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="710" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="693.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="693.00"> </text><svg id="frames" x="10" width="1180" total_samples="3953"><g><title>_raw_spin_unlock (1 samples, 0.03%)</title><rect x="0.0000%" y="501" width="0.0253%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="511.50"></text></g><g><title>ctx_resched (2 samples, 0.05%)</title><rect x="0.0253%" y="501" width="0.0506%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="2"/><text x="0.2753%" y="511.50"></text></g><g><title>perf_ctx_enable (2 samples, 0.05%)</title><rect x="0.0253%" y="485" width="0.0506%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="2"/><text x="0.2753%" y="495.50"></text></g><g><title>amd_pmu_enable_all (1 samples, 0.03%)</title><rect x="0.0506%" y="469" width="0.0253%" height="15" fill="rgb(248,212,6)" fg:x="2" fg:w="1"/><text x="0.3006%" y="479.50"></text></g><g><title>perf-exec (4 samples, 0.10%)</title><rect x="0.0000%" y="645" width="0.1012%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="4"/><text x="0.2500%" y="655.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4 samples, 0.10%)</title><rect x="0.0000%" y="629" width="0.1012%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="4"/><text x="0.2500%" y="639.50"></text></g><g><title>do_syscall_64 (4 samples, 0.10%)</title><rect x="0.0000%" y="613" width="0.1012%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="4"/><text x="0.2500%" y="623.50"></text></g><g><title>__x64_sys_execve (4 samples, 0.10%)</title><rect x="0.0000%" y="597" width="0.1012%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="4"/><text x="0.2500%" y="607.50"></text></g><g><title>do_execveat_common.isra.0 (4 samples, 0.10%)</title><rect x="0.0000%" y="581" width="0.1012%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="4"/><text x="0.2500%" y="591.50"></text></g><g><title>bprm_execve (4 samples, 0.10%)</title><rect x="0.0000%" y="565" width="0.1012%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="4"/><text x="0.2500%" y="575.50"></text></g><g><title>load_elf_binary (4 samples, 0.10%)</title><rect x="0.0000%" y="549" width="0.1012%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="4"/><text x="0.2500%" y="559.50"></text></g><g><title>begin_new_exec (4 samples, 0.10%)</title><rect x="0.0000%" y="533" width="0.1012%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="4"/><text x="0.2500%" y="543.50"></text></g><g><title>perf_event_exec (4 samples, 0.10%)</title><rect x="0.0000%" y="517" width="0.1012%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="4"/><text x="0.2500%" y="527.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.03%)</title><rect x="0.0759%" y="501" width="0.0253%" height="15" fill="rgb(206,188,39)" fg:x="3" fg:w="1"/><text x="0.3259%" y="511.50"></text></g><g><title>perf_event_addr_filters_exec (1 samples, 0.03%)</title><rect x="0.0759%" y="485" width="0.0253%" height="15" fill="rgb(217,207,13)" fg:x="3" fg:w="1"/><text x="0.3259%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="0.1012%" y="629" width="0.0253%" height="15" fill="rgb(231,73,38)" fg:x="4" fg:w="1"/><text x="0.3512%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.03%)</title><rect x="0.1265%" y="629" width="0.0253%" height="15" fill="rgb(225,20,46)" fg:x="5" fg:w="1"/><text x="0.3765%" y="639.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (1 samples, 0.03%)</title><rect x="0.1518%" y="629" width="0.0253%" height="15" fill="rgb(210,31,41)" fg:x="6" fg:w="1"/><text x="0.4018%" y="639.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.03%)</title><rect x="0.1771%" y="629" width="0.0253%" height="15" fill="rgb(221,200,47)" fg:x="7" fg:w="1"/><text x="0.4271%" y="639.50"></text></g><g><title>[[heap]] (1 samples, 0.03%)</title><rect x="0.2024%" y="629" width="0.0253%" height="15" fill="rgb(226,26,5)" fg:x="8" fg:w="1"/><text x="0.4524%" y="639.50"></text></g><g><title>[[vdso]] (1 samples, 0.03%)</title><rect x="0.2024%" y="613" width="0.0253%" height="15" fill="rgb(249,33,26)" fg:x="8" fg:w="1"/><text x="0.4524%" y="623.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="0.2277%" y="613" width="0.0253%" height="15" fill="rgb(235,183,28)" fg:x="9" fg:w="1"/><text x="0.4777%" y="623.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (3 samples, 0.08%)</title><rect x="0.2530%" y="613" width="0.0759%" height="15" fill="rgb(221,5,38)" fg:x="10" fg:w="3"/><text x="0.5030%" y="623.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.03%)</title><rect x="0.3289%" y="613" width="0.0253%" height="15" fill="rgb(247,18,42)" fg:x="13" fg:w="1"/><text x="0.5789%" y="623.50"></text></g><g><title>&lt;[Z] as zeroize::Zeroize&gt;::zeroize (1 samples, 0.03%)</title><rect x="0.3542%" y="613" width="0.0253%" height="15" fill="rgb(241,131,45)" fg:x="14" fg:w="1"/><text x="0.6042%" y="623.50"></text></g><g><title>zeroize::volatile_set (1 samples, 0.03%)</title><rect x="0.3542%" y="597" width="0.0253%" height="15" fill="rgb(249,31,29)" fg:x="14" fg:w="1"/><text x="0.6042%" y="607.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (1 samples, 0.03%)</title><rect x="0.3795%" y="613" width="0.0253%" height="15" fill="rgb(225,111,53)" fg:x="15" fg:w="1"/><text x="0.6295%" y="623.50"></text></g><g><title>chacha20::avx2_cpuid::InitToken::get (1 samples, 0.03%)</title><rect x="0.3795%" y="597" width="0.0253%" height="15" fill="rgb(238,160,17)" fg:x="15" fg:w="1"/><text x="0.6295%" y="607.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (1 samples, 0.03%)</title><rect x="0.4048%" y="613" width="0.0253%" height="15" fill="rgb(214,148,48)" fg:x="16" fg:w="1"/><text x="0.6548%" y="623.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (1 samples, 0.03%)</title><rect x="0.4301%" y="613" width="0.0253%" height="15" fill="rgb(232,36,49)" fg:x="17" fg:w="1"/><text x="0.6801%" y="623.50"></text></g><g><title>inout::inout_buf::InOutBuf&lt;u8&gt;::xor_in2out (1 samples, 0.03%)</title><rect x="0.4301%" y="597" width="0.0253%" height="15" fill="rgb(209,103,24)" fg:x="17" fg:w="1"/><text x="0.6801%" y="607.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="0.4554%" y="613" width="0.0253%" height="15" fill="rgb(229,88,8)" fg:x="18" fg:w="1"/><text x="0.7054%" y="623.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.03%)</title><rect x="0.4554%" y="597" width="0.0253%" height="15" fill="rgb(213,181,19)" fg:x="18" fg:w="1"/><text x="0.7054%" y="607.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as crypto_common::KeyIvInit&gt;::new (1 samples, 0.03%)</title><rect x="0.4806%" y="613" width="0.0253%" height="15" fill="rgb(254,191,54)" fg:x="19" fg:w="1"/><text x="0.7306%" y="623.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.03%)</title><rect x="0.4806%" y="597" width="0.0253%" height="15" fill="rgb(241,83,37)" fg:x="19" fg:w="1"/><text x="0.7306%" y="607.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (15 samples, 0.38%)</title><rect x="0.5059%" y="613" width="0.3795%" height="15" fill="rgb(233,36,39)" fg:x="20" fg:w="15"/><text x="0.7559%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="0.8854%" y="613" width="0.0253%" height="15" fill="rgb(226,3,54)" fg:x="35" fg:w="1"/><text x="1.1354%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (33 samples, 0.83%)</title><rect x="0.9107%" y="613" width="0.8348%" height="15" fill="rgb(245,192,40)" fg:x="36" fg:w="33"/><text x="1.1607%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.13%)</title><rect x="1.7455%" y="613" width="0.1265%" height="15" fill="rgb(238,167,29)" fg:x="69" fg:w="5"/><text x="1.9955%" y="623.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (9 samples, 0.23%)</title><rect x="1.8720%" y="613" width="0.2277%" height="15" fill="rgb(232,182,51)" fg:x="74" fg:w="9"/><text x="2.1220%" y="623.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.03%)</title><rect x="2.0744%" y="597" width="0.0253%" height="15" fill="rgb(231,60,39)" fg:x="82" fg:w="1"/><text x="2.3244%" y="607.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.03%)</title><rect x="2.0997%" y="613" width="0.0253%" height="15" fill="rgb(208,69,12)" fg:x="83" fg:w="1"/><text x="2.3497%" y="623.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::convert::From&lt;T&gt;&gt;::from (1 samples, 0.03%)</title><rect x="2.1250%" y="613" width="0.0253%" height="15" fill="rgb(235,93,37)" fg:x="84" fg:w="1"/><text x="2.3750%" y="623.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.03%)</title><rect x="2.1503%" y="613" width="0.0253%" height="15" fill="rgb(213,116,39)" fg:x="85" fg:w="1"/><text x="2.4003%" y="623.50"></text></g><g><title>&lt;core::slice::iter::ChunksExact&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (1 samples, 0.03%)</title><rect x="2.1756%" y="613" width="0.0253%" height="15" fill="rgb(222,207,29)" fg:x="86" fg:w="1"/><text x="2.4256%" y="623.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.03%)</title><rect x="2.1756%" y="597" width="0.0253%" height="15" fill="rgb(206,96,30)" fg:x="86" fg:w="1"/><text x="2.4256%" y="607.50"></text></g><g><title>&lt;core::slice::iter::ChunksExact&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.03%)</title><rect x="2.2009%" y="613" width="0.0253%" height="15" fill="rgb(218,138,4)" fg:x="87" fg:w="1"/><text x="2.4509%" y="623.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (3 samples, 0.08%)</title><rect x="2.2262%" y="613" width="0.0759%" height="15" fill="rgb(250,191,14)" fg:x="88" fg:w="3"/><text x="2.4762%" y="623.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="2.3020%" y="613" width="0.0253%" height="15" fill="rgb(239,60,40)" fg:x="91" fg:w="1"/><text x="2.5520%" y="623.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (7 samples, 0.18%)</title><rect x="3.0863%" y="597" width="0.1771%" height="15" fill="rgb(206,27,48)" fg:x="122" fg:w="7"/><text x="3.3363%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (3 samples, 0.08%)</title><rect x="3.1875%" y="581" width="0.0759%" height="15" fill="rgb(225,35,8)" fg:x="126" fg:w="3"/><text x="3.4375%" y="591.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (4 samples, 0.10%)</title><rect x="3.2633%" y="597" width="0.1012%" height="15" fill="rgb(250,213,24)" fg:x="129" fg:w="4"/><text x="3.5133%" y="607.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (42 samples, 1.06%)</title><rect x="2.3273%" y="613" width="1.0625%" height="15" fill="rgb(247,123,22)" fg:x="92" fg:w="42"/><text x="2.5773%" y="623.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::sub_ptr (1 samples, 0.03%)</title><rect x="3.3645%" y="597" width="0.0253%" height="15" fill="rgb(231,138,38)" fg:x="133" fg:w="1"/><text x="3.6145%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (1 samples, 0.03%)</title><rect x="3.3645%" y="581" width="0.0253%" height="15" fill="rgb(231,145,46)" fg:x="133" fg:w="1"/><text x="3.6145%" y="591.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (101 samples, 2.56%)</title><rect x="5.3883%" y="597" width="2.5550%" height="15" fill="rgb(251,118,11)" fg:x="213" fg:w="101"/><text x="5.6383%" y="607.50">&lt;c..</text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_mut (2 samples, 0.05%)</title><rect x="7.9433%" y="597" width="0.0506%" height="15" fill="rgb(217,147,25)" fg:x="314" fg:w="2"/><text x="8.1933%" y="607.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_sub (4 samples, 0.10%)</title><rect x="9.0564%" y="581" width="0.1012%" height="15" fill="rgb(247,81,37)" fg:x="358" fg:w="4"/><text x="9.3064%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::cast (2 samples, 0.05%)</title><rect x="9.1576%" y="581" width="0.0506%" height="15" fill="rgb(209,12,38)" fg:x="362" fg:w="2"/><text x="9.4076%" y="591.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (240 samples, 6.07%)</title><rect x="3.3898%" y="613" width="6.0713%" height="15" fill="rgb(227,1,9)" fg:x="134" fg:w="240"/><text x="3.6398%" y="623.50">&lt;core::s..</text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (58 samples, 1.47%)</title><rect x="7.9939%" y="597" width="1.4672%" height="15" fill="rgb(248,47,43)" fg:x="316" fg:w="58"/><text x="8.2439%" y="607.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (10 samples, 0.25%)</title><rect x="9.2082%" y="581" width="0.2530%" height="15" fill="rgb(221,10,30)" fg:x="364" fg:w="10"/><text x="9.4582%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (3 samples, 0.08%)</title><rect x="9.3853%" y="565" width="0.0759%" height="15" fill="rgb(210,229,1)" fg:x="371" fg:w="3"/><text x="9.6353%" y="575.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;Z&gt; as zeroize::Zeroize&gt;::zeroize (1 samples, 0.03%)</title><rect x="9.4612%" y="613" width="0.0253%" height="15" fill="rgb(222,148,37)" fg:x="374" fg:w="1"/><text x="9.7112%" y="623.50"></text></g><g><title>&lt;core::time::Duration as core::cmp::PartialOrd&gt;::partial_cmp (1 samples, 0.03%)</title><rect x="9.4865%" y="613" width="0.0253%" height="15" fill="rgb(234,67,33)" fg:x="375" fg:w="1"/><text x="9.7365%" y="623.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (3 samples, 0.08%)</title><rect x="9.5118%" y="613" width="0.0759%" height="15" fill="rgb(247,98,35)" fg:x="376" fg:w="3"/><text x="9.7618%" y="623.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (53 samples, 1.34%)</title><rect x="9.5877%" y="613" width="1.3408%" height="15" fill="rgb(247,138,52)" fg:x="379" fg:w="53"/><text x="9.8377%" y="623.50"></text></g><g><title>&lt;std::io::error::repr_bitpacked::Repr as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="10.9284%" y="613" width="0.0253%" height="15" fill="rgb(213,79,30)" fg:x="432" fg:w="1"/><text x="11.1784%" y="623.50"></text></g><g><title>&lt;tftp::client::encryption_socket::EncryptionBoundSocket&lt;S,Rng&gt; as tftp::socket::Socket&gt;::recv_from (1 samples, 0.03%)</title><rect x="10.9537%" y="613" width="0.0253%" height="15" fill="rgb(246,177,23)" fg:x="433" fg:w="1"/><text x="11.2037%" y="623.50"></text></g><g><title>&lt;tftp::socket::UdpUnboundSocket as tftp::socket::Socket&gt;::recv_from (1 samples, 0.03%)</title><rect x="10.9790%" y="613" width="0.0253%" height="15" fill="rgb(230,62,27)" fg:x="434" fg:w="1"/><text x="11.2290%" y="623.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (2 samples, 0.05%)</title><rect x="11.0043%" y="613" width="0.0506%" height="15" fill="rgb(216,154,8)" fg:x="435" fg:w="2"/><text x="11.2543%" y="623.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.03%)</title><rect x="11.0549%" y="613" width="0.0253%" height="15" fill="rgb(244,35,45)" fg:x="437" fg:w="1"/><text x="11.3049%" y="623.50"></text></g><g><title>chacha20::xchacha::hchacha (1 samples, 0.03%)</title><rect x="11.0802%" y="613" width="0.0253%" height="15" fill="rgb(251,115,12)" fg:x="438" fg:w="1"/><text x="11.3302%" y="623.50"></text></g><g><title>chacha20::xchacha::quarter_round (5 samples, 0.13%)</title><rect x="11.1055%" y="613" width="0.1265%" height="15" fill="rgb(240,54,50)" fg:x="439" fg:w="5"/><text x="11.3555%" y="623.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (1 samples, 0.03%)</title><rect x="11.2320%" y="613" width="0.0253%" height="15" fill="rgb(233,84,52)" fg:x="444" fg:w="1"/><text x="11.4820%" y="623.50"></text></g><g><title>cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt;::get_pos (1 samples, 0.03%)</title><rect x="11.2573%" y="613" width="0.0253%" height="15" fill="rgb(207,117,47)" fg:x="445" fg:w="1"/><text x="11.5073%" y="623.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (2 samples, 0.05%)</title><rect x="11.2826%" y="613" width="0.0506%" height="15" fill="rgb(249,43,39)" fg:x="446" fg:w="2"/><text x="11.5326%" y="623.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from::{{closure}} (1 samples, 0.03%)</title><rect x="11.3332%" y="613" width="0.0253%" height="15" fill="rgb(209,38,44)" fg:x="448" fg:w="1"/><text x="11.5832%" y="623.50"></text></g><g><title>core::convert::num::&lt;impl core::convert::TryFrom&lt;u64&gt; for u32&gt;::try_from (1 samples, 0.03%)</title><rect x="11.3585%" y="613" width="0.0253%" height="15" fill="rgb(236,212,23)" fg:x="449" fg:w="1"/><text x="11.6085%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (2 samples, 0.05%)</title><rect x="11.3838%" y="613" width="0.0506%" height="15" fill="rgb(242,79,21)" fg:x="450" fg:w="2"/><text x="11.6338%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (1 samples, 0.03%)</title><rect x="11.4344%" y="613" width="0.0253%" height="15" fill="rgb(211,96,35)" fg:x="452" fg:w="1"/><text x="11.6844%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (2 samples, 0.05%)</title><rect x="11.4597%" y="613" width="0.0506%" height="15" fill="rgb(253,215,40)" fg:x="453" fg:w="2"/><text x="11.7097%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (2 samples, 0.05%)</title><rect x="11.5102%" y="613" width="0.0506%" height="15" fill="rgb(211,81,21)" fg:x="455" fg:w="2"/><text x="11.7602%" y="623.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.05%)</title><rect x="11.5608%" y="613" width="0.0506%" height="15" fill="rgb(208,190,38)" fg:x="457" fg:w="2"/><text x="11.8108%" y="623.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (3 samples, 0.08%)</title><rect x="11.6114%" y="613" width="0.0759%" height="15" fill="rgb(235,213,38)" fg:x="459" fg:w="3"/><text x="11.8614%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_storeu_si128 (1 samples, 0.03%)</title><rect x="11.6873%" y="613" width="0.0253%" height="15" fill="rgb(237,122,38)" fg:x="462" fg:w="1"/><text x="11.9373%" y="623.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.03%)</title><rect x="11.7126%" y="613" width="0.0253%" height="15" fill="rgb(244,218,35)" fg:x="463" fg:w="1"/><text x="11.9626%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.03%)</title><rect x="11.7379%" y="613" width="0.0253%" height="15" fill="rgb(240,68,47)" fg:x="464" fg:w="1"/><text x="11.9879%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (25 samples, 0.63%)</title><rect x="11.7632%" y="613" width="0.6324%" height="15" fill="rgb(210,16,53)" fg:x="465" fg:w="25"/><text x="12.0132%" y="623.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_le_bytes (1 samples, 0.03%)</title><rect x="12.3956%" y="613" width="0.0253%" height="15" fill="rgb(235,124,12)" fg:x="490" fg:w="1"/><text x="12.6456%" y="623.50"></text></g><g><title>core::ops::function::FnOnce::call_once (2 samples, 0.05%)</title><rect x="12.4209%" y="613" width="0.0506%" height="15" fill="rgb(224,169,11)" fg:x="491" fg:w="2"/><text x="12.6709%" y="623.50"></text></g><g><title>chacha20::xchacha::quarter_round (2 samples, 0.05%)</title><rect x="12.4209%" y="597" width="0.0506%" height="15" fill="rgb(250,166,2)" fg:x="491" fg:w="2"/><text x="12.6709%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;chacha20::xchacha::XChaChaCore&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm,typenum::bit::B1&gt;,typenum::bit::B0&gt;,typenum::bit::B1&gt;,typenum::bit::B0&gt;&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="12.4715%" y="613" width="0.0253%" height="15" fill="rgb(242,216,29)" fg:x="493" fg:w="1"/><text x="12.7215%" y="623.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (1 samples, 0.03%)</title><rect x="12.4968%" y="613" width="0.0253%" height="15" fill="rgb(230,116,27)" fg:x="494" fg:w="1"/><text x="12.7468%" y="623.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::cast (1 samples, 0.03%)</title><rect x="12.4968%" y="597" width="0.0253%" height="15" fill="rgb(228,99,48)" fg:x="494" fg:w="1"/><text x="12.7468%" y="607.50"></text></g><g><title>core::ptr::write (3 samples, 0.08%)</title><rect x="12.5221%" y="613" width="0.0759%" height="15" fill="rgb(253,11,6)" fg:x="495" fg:w="3"/><text x="12.7721%" y="623.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (2 samples, 0.05%)</title><rect x="12.5980%" y="613" width="0.0506%" height="15" fill="rgb(247,143,39)" fg:x="498" fg:w="2"/><text x="12.8480%" y="623.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::ok (1 samples, 0.03%)</title><rect x="12.6486%" y="613" width="0.0253%" height="15" fill="rgb(236,97,10)" fg:x="500" fg:w="1"/><text x="12.8986%" y="623.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (1 samples, 0.03%)</title><rect x="12.6739%" y="613" width="0.0253%" height="15" fill="rgb(233,208,19)" fg:x="501" fg:w="1"/><text x="12.9239%" y="623.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.03%)</title><rect x="12.6992%" y="613" width="0.0253%" height="15" fill="rgb(216,164,2)" fg:x="502" fg:w="1"/><text x="12.9492%" y="623.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (1 samples, 0.03%)</title><rect x="12.7245%" y="613" width="0.0253%" height="15" fill="rgb(220,129,5)" fg:x="503" fg:w="1"/><text x="12.9745%" y="623.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="12.7245%" y="597" width="0.0253%" height="15" fill="rgb(242,17,10)" fg:x="503" fg:w="1"/><text x="12.9745%" y="607.50"></text></g><g><title>core::slice::iter::&lt;impl core::iter::traits::collect::IntoIterator for &amp;mut [T]&gt;::into_iter (1 samples, 0.03%)</title><rect x="12.7498%" y="613" width="0.0253%" height="15" fill="rgb(242,107,0)" fg:x="504" fg:w="1"/><text x="12.9998%" y="623.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (1 samples, 0.03%)</title><rect x="12.7498%" y="597" width="0.0253%" height="15" fill="rgb(251,28,31)" fg:x="504" fg:w="1"/><text x="12.9998%" y="607.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="12.7498%" y="581" width="0.0253%" height="15" fill="rgb(233,223,10)" fg:x="504" fg:w="1"/><text x="12.9998%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::cast (1 samples, 0.03%)</title><rect x="12.7751%" y="581" width="0.0253%" height="15" fill="rgb(215,21,27)" fg:x="505" fg:w="1"/><text x="13.0251%" y="591.50"></text></g><g><title>core::slice::raw::from_raw_parts (5 samples, 0.13%)</title><rect x="12.7751%" y="613" width="0.1265%" height="15" fill="rgb(232,23,21)" fg:x="505" fg:w="5"/><text x="13.0251%" y="623.50"></text></g><g><title>core::ptr::slice_from_raw_parts (5 samples, 0.13%)</title><rect x="12.7751%" y="597" width="0.1265%" height="15" fill="rgb(244,5,23)" fg:x="505" fg:w="5"/><text x="13.0251%" y="607.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (4 samples, 0.10%)</title><rect x="12.8004%" y="581" width="0.1012%" height="15" fill="rgb(226,81,46)" fg:x="506" fg:w="4"/><text x="13.0504%" y="591.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (3 samples, 0.08%)</title><rect x="12.9016%" y="613" width="0.0759%" height="15" fill="rgb(247,70,30)" fg:x="510" fg:w="3"/><text x="13.1516%" y="623.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (1 samples, 0.03%)</title><rect x="12.9522%" y="597" width="0.0253%" height="15" fill="rgb(212,68,19)" fg:x="512" fg:w="1"/><text x="13.2022%" y="607.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (1 samples, 0.03%)</title><rect x="12.9522%" y="581" width="0.0253%" height="15" fill="rgb(240,187,13)" fg:x="512" fg:w="1"/><text x="13.2022%" y="591.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (2 samples, 0.05%)</title><rect x="12.9775%" y="613" width="0.0506%" height="15" fill="rgb(223,113,26)" fg:x="513" fg:w="2"/><text x="13.2275%" y="623.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::iter_position (1 samples, 0.03%)</title><rect x="13.0281%" y="613" width="0.0253%" height="15" fill="rgb(206,192,2)" fg:x="515" fg:w="1"/><text x="13.2781%" y="623.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.03%)</title><rect x="13.0281%" y="597" width="0.0253%" height="15" fill="rgb(241,108,4)" fg:x="515" fg:w="1"/><text x="13.2781%" y="607.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::new (1 samples, 0.03%)</title><rect x="13.0534%" y="613" width="0.0253%" height="15" fill="rgb(247,173,49)" fg:x="516" fg:w="1"/><text x="13.3034%" y="623.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (8 samples, 0.20%)</title><rect x="13.0787%" y="613" width="0.2024%" height="15" fill="rgb(224,114,35)" fg:x="517" fg:w="8"/><text x="13.3287%" y="623.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.03%)</title><rect x="13.2558%" y="597" width="0.0253%" height="15" fill="rgb(245,159,27)" fg:x="524" fg:w="1"/><text x="13.5058%" y="607.50"></text></g><g><title>getrandom::imp::getrandom_inner::{{closure}} (1 samples, 0.03%)</title><rect x="13.2811%" y="613" width="0.0253%" height="15" fill="rgb(245,172,44)" fg:x="525" fg:w="1"/><text x="13.5311%" y="623.50"></text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::as_mut_slice (1 samples, 0.03%)</title><rect x="13.3063%" y="613" width="0.0253%" height="15" fill="rgb(236,23,11)" fg:x="526" fg:w="1"/><text x="13.5563%" y="623.50"></text></g><g><title>rustix::backend::arch::asm::syscall4_readonly (1 samples, 0.03%)</title><rect x="13.3316%" y="613" width="0.0253%" height="15" fill="rgb(205,117,38)" fg:x="527" fg:w="1"/><text x="13.5816%" y="623.50"></text></g><g><title>std::sys::unix::time::Timespec::now (1 samples, 0.03%)</title><rect x="13.3569%" y="613" width="0.0253%" height="15" fill="rgb(237,72,25)" fg:x="528" fg:w="1"/><text x="13.6069%" y="623.50"></text></g><g><title>tftp::encryption::remove_bit_padding (6 samples, 0.15%)</title><rect x="13.3822%" y="613" width="0.1518%" height="15" fill="rgb(244,70,9)" fg:x="529" fg:w="6"/><text x="13.6322%" y="623.50"></text></g><g><title>[[stack]] (527 samples, 13.33%)</title><rect x="0.2277%" y="629" width="13.3316%" height="15" fill="rgb(217,125,39)" fg:x="9" fg:w="527"/><text x="0.4777%" y="639.50">[[stack]]</text></g><g><title>tftp::flow_control::RateControl::end_rtt (1 samples, 0.03%)</title><rect x="13.5340%" y="613" width="0.0253%" height="15" fill="rgb(235,36,10)" fg:x="535" fg:w="1"/><text x="13.7840%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::capacity (1 samples, 0.03%)</title><rect x="13.5593%" y="613" width="0.0253%" height="15" fill="rgb(251,123,47)" fg:x="536" fg:w="1"/><text x="13.8093%" y="623.50"></text></g><g><title>core::ops::range::Range&lt;Idx&gt;::contains (1 samples, 0.03%)</title><rect x="13.5846%" y="613" width="0.0253%" height="15" fill="rgb(221,13,13)" fg:x="537" fg:w="1"/><text x="13.8346%" y="623.50"></text></g><g><title>core::time::Duration::new (1 samples, 0.03%)</title><rect x="13.5846%" y="597" width="0.0253%" height="15" fill="rgb(238,131,9)" fg:x="537" fg:w="1"/><text x="13.8346%" y="607.50"></text></g><g><title>[tftp] (3 samples, 0.08%)</title><rect x="13.5593%" y="629" width="0.0759%" height="15" fill="rgb(211,50,8)" fg:x="536" fg:w="3"/><text x="13.8093%" y="639.50"></text></g><g><title>core::time::Duration::from_micros (1 samples, 0.03%)</title><rect x="13.6099%" y="613" width="0.0253%" height="15" fill="rgb(245,182,24)" fg:x="538" fg:w="1"/><text x="13.8599%" y="623.50"></text></g><g><title>&lt;&amp;T as core::convert::AsRef&lt;U&gt;&gt;::as_ref (1 samples, 0.03%)</title><rect x="13.6352%" y="613" width="0.0253%" height="15" fill="rgb(242,14,37)" fg:x="539" fg:w="1"/><text x="13.8852%" y="623.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::packed_simd::u64x4 as core::ops::arith::Add&gt;::add (1 samples, 0.03%)</title><rect x="13.6605%" y="597" width="0.0253%" height="15" fill="rgb(246,228,12)" fg:x="540" fg:w="1"/><text x="13.9105%" y="607.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::packed_simd::u64x4 as &lt;curve25519_dalek::backend::vector::packed_simd::u64x4 as core::ops::arith::Add&gt;::add::__Impl_add__&gt;::_impl_add (1 samples, 0.03%)</title><rect x="13.6605%" y="581" width="0.0253%" height="15" fill="rgb(213,55,15)" fg:x="540" fg:w="1"/><text x="13.9105%" y="591.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.03%)</title><rect x="13.6605%" y="565" width="0.0253%" height="15" fill="rgb(209,9,3)" fg:x="540" fg:w="1"/><text x="13.9105%" y="575.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4 as &lt;&amp;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4&gt;&gt;::mul::__Impl_mul__&gt;::_impl_mul (2 samples, 0.05%)</title><rect x="13.6605%" y="613" width="0.0506%" height="15" fill="rgb(230,59,30)" fg:x="540" fg:w="2"/><text x="13.9105%" y="623.50"></text></g><g><title>curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4::reduce64 (1 samples, 0.03%)</title><rect x="13.6858%" y="597" width="0.0253%" height="15" fill="rgb(209,121,21)" fg:x="541" fg:w="1"/><text x="13.9358%" y="607.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4 as curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4::reduce64::__Impl_reduce64__&gt;::_impl_reduce64 (1 samples, 0.03%)</title><rect x="13.6858%" y="581" width="0.0253%" height="15" fill="rgb(220,109,13)" fg:x="541" fg:w="1"/><text x="13.9358%" y="591.50"></text></g><g><title>curve25519_dalek::backend::vector::avx2::field::repack_pair (1 samples, 0.03%)</title><rect x="13.6858%" y="565" width="0.0253%" height="15" fill="rgb(232,18,1)" fg:x="541" fg:w="1"/><text x="13.9358%" y="575.50"></text></g><g><title>curve25519_dalek::backend::vector::avx2::field::repack_pair::_impl_repack_pair (1 samples, 0.03%)</title><rect x="13.6858%" y="549" width="0.0253%" height="15" fill="rgb(215,41,42)" fg:x="541" fg:w="1"/><text x="13.9358%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.03%)</title><rect x="13.6858%" y="533" width="0.0253%" height="15" fill="rgb(224,123,36)" fg:x="541" fg:w="1"/><text x="13.9358%" y="543.50"></text></g><g><title>&lt;&amp;generic_array::GenericArray&lt;T,N&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (1 samples, 0.03%)</title><rect x="13.7111%" y="613" width="0.0253%" height="15" fill="rgb(240,125,3)" fg:x="542" fg:w="1"/><text x="13.9611%" y="623.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (4 samples, 0.10%)</title><rect x="13.7364%" y="613" width="0.1012%" height="15" fill="rgb(205,98,50)" fg:x="543" fg:w="4"/><text x="13.9864%" y="623.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3 samples, 0.08%)</title><rect x="13.8376%" y="613" width="0.0759%" height="15" fill="rgb(205,185,37)" fg:x="547" fg:w="3"/><text x="14.0876%" y="623.50"></text></g><g><title>__entry_text_start (1 samples, 0.03%)</title><rect x="13.8882%" y="597" width="0.0253%" height="15" fill="rgb(238,207,15)" fg:x="549" fg:w="1"/><text x="14.1382%" y="607.50"></text></g><g><title>&lt;[Z] as zeroize::Zeroize&gt;::zeroize (3 samples, 0.08%)</title><rect x="13.9135%" y="613" width="0.0759%" height="15" fill="rgb(213,199,42)" fg:x="550" fg:w="3"/><text x="14.1635%" y="623.50"></text></g><g><title>zeroize::volatile_set (2 samples, 0.05%)</title><rect x="13.9388%" y="597" width="0.0506%" height="15" fill="rgb(235,201,11)" fg:x="551" fg:w="2"/><text x="14.1888%" y="607.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (1 samples, 0.03%)</title><rect x="13.9894%" y="613" width="0.0253%" height="15" fill="rgb(207,46,11)" fg:x="553" fg:w="1"/><text x="14.2394%" y="623.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.08%)</title><rect x="14.0400%" y="389" width="0.0759%" height="15" fill="rgb(241,35,35)" fg:x="555" fg:w="3"/><text x="14.2900%" y="399.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.03%)</title><rect x="14.0906%" y="373" width="0.0253%" height="15" fill="rgb(243,32,47)" fg:x="557" fg:w="1"/><text x="14.3406%" y="383.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.03%)</title><rect x="14.1159%" y="389" width="0.0253%" height="15" fill="rgb(247,202,23)" fg:x="558" fg:w="1"/><text x="14.3659%" y="399.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (14 samples, 0.35%)</title><rect x="14.1412%" y="389" width="0.3542%" height="15" fill="rgb(219,102,11)" fg:x="559" fg:w="14"/><text x="14.3912%" y="399.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (1 samples, 0.03%)</title><rect x="14.4953%" y="389" width="0.0253%" height="15" fill="rgb(243,110,44)" fg:x="573" fg:w="1"/><text x="14.7453%" y="399.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (4 samples, 0.10%)</title><rect x="14.5206%" y="389" width="0.1012%" height="15" fill="rgb(222,74,54)" fg:x="574" fg:w="4"/><text x="14.7706%" y="399.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="14.7736%" y="373" width="0.0253%" height="15" fill="rgb(216,99,12)" fg:x="584" fg:w="1"/><text x="15.0236%" y="383.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (1 samples, 0.03%)</title><rect x="14.7989%" y="373" width="0.0253%" height="15" fill="rgb(226,22,26)" fg:x="585" fg:w="1"/><text x="15.0489%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="14.8242%" y="373" width="0.0253%" height="15" fill="rgb(217,163,10)" fg:x="586" fg:w="1"/><text x="15.0742%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (2 samples, 0.05%)</title><rect x="14.8495%" y="373" width="0.0506%" height="15" fill="rgb(213,25,53)" fg:x="587" fg:w="2"/><text x="15.0995%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="14.9001%" y="373" width="0.0253%" height="15" fill="rgb(252,105,26)" fg:x="589" fg:w="1"/><text x="15.1501%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.05%)</title><rect x="14.9254%" y="373" width="0.0506%" height="15" fill="rgb(220,39,43)" fg:x="590" fg:w="2"/><text x="15.1754%" y="383.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (2 samples, 0.05%)</title><rect x="14.9254%" y="357" width="0.0506%" height="15" fill="rgb(229,68,48)" fg:x="590" fg:w="2"/><text x="15.1754%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (15 samples, 0.38%)</title><rect x="14.6218%" y="389" width="0.3795%" height="15" fill="rgb(252,8,32)" fg:x="578" fg:w="15"/><text x="14.8718%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="14.9760%" y="373" width="0.0253%" height="15" fill="rgb(223,20,43)" fg:x="592" fg:w="1"/><text x="15.2260%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.03%)</title><rect x="15.0013%" y="389" width="0.0253%" height="15" fill="rgb(229,81,49)" fg:x="593" fg:w="1"/><text x="15.2513%" y="399.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.03%)</title><rect x="15.2542%" y="373" width="0.0253%" height="15" fill="rgb(236,28,36)" fg:x="603" fg:w="1"/><text x="15.5042%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.03%)</title><rect x="15.2795%" y="373" width="0.0253%" height="15" fill="rgb(249,185,26)" fg:x="604" fg:w="1"/><text x="15.5295%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="15.3048%" y="373" width="0.0253%" height="15" fill="rgb(249,174,33)" fg:x="605" fg:w="1"/><text x="15.5548%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (14 samples, 0.35%)</title><rect x="15.0266%" y="389" width="0.3542%" height="15" fill="rgb(233,201,37)" fg:x="594" fg:w="14"/><text x="15.2766%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (2 samples, 0.05%)</title><rect x="15.3301%" y="373" width="0.0506%" height="15" fill="rgb(221,78,26)" fg:x="606" fg:w="2"/><text x="15.5801%" y="383.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.03%)</title><rect x="15.4060%" y="373" width="0.0253%" height="15" fill="rgb(250,127,30)" fg:x="609" fg:w="1"/><text x="15.6560%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="15.4313%" y="373" width="0.0253%" height="15" fill="rgb(230,49,44)" fg:x="610" fg:w="1"/><text x="15.6813%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.03%)</title><rect x="15.4566%" y="373" width="0.0253%" height="15" fill="rgb(229,67,23)" fg:x="611" fg:w="1"/><text x="15.7066%" y="383.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.03%)</title><rect x="15.4566%" y="357" width="0.0253%" height="15" fill="rgb(249,83,47)" fg:x="611" fg:w="1"/><text x="15.7066%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (5 samples, 0.13%)</title><rect x="15.3807%" y="389" width="0.1265%" height="15" fill="rgb(215,43,3)" fg:x="608" fg:w="5"/><text x="15.6307%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="15.4819%" y="373" width="0.0253%" height="15" fill="rgb(238,154,13)" fg:x="612" fg:w="1"/><text x="15.7319%" y="383.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="15.6084%" y="373" width="0.0253%" height="15" fill="rgb(219,56,2)" fg:x="617" fg:w="1"/><text x="15.8584%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (6 samples, 0.15%)</title><rect x="15.5072%" y="389" width="0.1518%" height="15" fill="rgb(233,0,4)" fg:x="613" fg:w="6"/><text x="15.7572%" y="399.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.03%)</title><rect x="15.6337%" y="373" width="0.0253%" height="15" fill="rgb(235,30,7)" fg:x="618" fg:w="1"/><text x="15.8837%" y="383.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="15.9373%" y="373" width="0.0253%" height="15" fill="rgb(250,79,13)" fg:x="630" fg:w="1"/><text x="16.1873%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="15.9626%" y="373" width="0.0253%" height="15" fill="rgb(211,146,34)" fg:x="631" fg:w="1"/><text x="16.2126%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (14 samples, 0.35%)</title><rect x="15.6590%" y="389" width="0.3542%" height="15" fill="rgb(228,22,38)" fg:x="619" fg:w="14"/><text x="15.9090%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="15.9879%" y="373" width="0.0253%" height="15" fill="rgb(235,168,5)" fg:x="632" fg:w="1"/><text x="16.2379%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.03%)</title><rect x="16.0132%" y="389" width="0.0253%" height="15" fill="rgb(221,155,16)" fg:x="633" fg:w="1"/><text x="16.2632%" y="399.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi64x (1 samples, 0.03%)</title><rect x="16.0132%" y="373" width="0.0253%" height="15" fill="rgb(215,215,53)" fg:x="633" fg:w="1"/><text x="16.2632%" y="383.50"></text></g><g><title>core::core_arch::simd::i64x4::new (1 samples, 0.03%)</title><rect x="16.0132%" y="357" width="0.0253%" height="15" fill="rgb(223,4,10)" fg:x="633" fg:w="1"/><text x="16.2632%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (10 samples, 0.25%)</title><rect x="16.0385%" y="389" width="0.2530%" height="15" fill="rgb(234,103,6)" fg:x="634" fg:w="10"/><text x="16.2885%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (6 samples, 0.15%)</title><rect x="16.2914%" y="389" width="0.1518%" height="15" fill="rgb(227,97,0)" fg:x="644" fg:w="6"/><text x="16.5414%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (5 samples, 0.13%)</title><rect x="16.4432%" y="389" width="0.1265%" height="15" fill="rgb(234,150,53)" fg:x="650" fg:w="5"/><text x="16.6932%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (8 samples, 0.20%)</title><rect x="16.5697%" y="389" width="0.2024%" height="15" fill="rgb(228,201,54)" fg:x="655" fg:w="8"/><text x="16.8197%" y="399.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (110 samples, 2.78%)</title><rect x="14.0147%" y="405" width="2.7827%" height="15" fill="rgb(222,22,37)" fg:x="554" fg:w="110"/><text x="14.2647%" y="415.50">ch..</text></g><g><title>core::ptr::write (1 samples, 0.03%)</title><rect x="16.7721%" y="389" width="0.0253%" height="15" fill="rgb(237,53,32)" fg:x="663" fg:w="1"/><text x="17.0221%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="16.7974%" y="405" width="0.0253%" height="15" fill="rgb(233,25,53)" fg:x="664" fg:w="1"/><text x="17.0474%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.03%)</title><rect x="16.8227%" y="405" width="0.0253%" height="15" fill="rgb(210,40,34)" fg:x="665" fg:w="1"/><text x="17.0727%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="16.8480%" y="405" width="0.0253%" height="15" fill="rgb(241,220,44)" fg:x="666" fg:w="1"/><text x="17.0980%" y="415.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.03%)</title><rect x="16.8480%" y="389" width="0.0253%" height="15" fill="rgb(235,28,35)" fg:x="666" fg:w="1"/><text x="17.0980%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (9 samples, 0.23%)</title><rect x="16.8733%" y="405" width="0.2277%" height="15" fill="rgb(210,56,17)" fg:x="667" fg:w="9"/><text x="17.1233%" y="415.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.03%)</title><rect x="17.1009%" y="405" width="0.0253%" height="15" fill="rgb(224,130,29)" fg:x="676" fg:w="1"/><text x="17.3509%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (3 samples, 0.08%)</title><rect x="17.1262%" y="405" width="0.0759%" height="15" fill="rgb(235,212,8)" fg:x="677" fg:w="3"/><text x="17.3762%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="17.2021%" y="405" width="0.0253%" height="15" fill="rgb(223,33,50)" fg:x="680" fg:w="1"/><text x="17.4521%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="17.2274%" y="405" width="0.0253%" height="15" fill="rgb(219,149,13)" fg:x="681" fg:w="1"/><text x="17.4774%" y="415.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_par_ks_blocks (131 samples, 3.31%)</title><rect x="14.0147%" y="453" width="3.3139%" height="15" fill="rgb(250,156,29)" fg:x="554" fg:w="131"/><text x="14.2647%" y="463.50">&lt;ch..</text></g><g><title>chacha20::backends::avx2::rounds (131 samples, 3.31%)</title><rect x="14.0147%" y="437" width="3.3139%" height="15" fill="rgb(216,193,19)" fg:x="554" fg:w="131"/><text x="14.2647%" y="447.50">cha..</text></g><g><title>chacha20::backends::avx2::double_quarter_round (131 samples, 3.31%)</title><rect x="14.0147%" y="421" width="3.3139%" height="15" fill="rgb(216,135,14)" fg:x="554" fg:w="131"/><text x="14.2647%" y="431.50">cha..</text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (3 samples, 0.08%)</title><rect x="17.2527%" y="405" width="0.0759%" height="15" fill="rgb(241,47,5)" fg:x="682" fg:w="3"/><text x="17.5027%" y="415.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (2 samples, 0.05%)</title><rect x="17.3539%" y="373" width="0.0506%" height="15" fill="rgb(233,42,35)" fg:x="686" fg:w="2"/><text x="17.6039%" y="383.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (1 samples, 0.03%)</title><rect x="17.4045%" y="373" width="0.0253%" height="15" fill="rgb(231,13,6)" fg:x="688" fg:w="1"/><text x="17.6545%" y="383.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (2 samples, 0.05%)</title><rect x="17.4551%" y="357" width="0.0506%" height="15" fill="rgb(207,181,40)" fg:x="690" fg:w="2"/><text x="17.7051%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (4 samples, 0.10%)</title><rect x="17.4298%" y="373" width="0.1012%" height="15" fill="rgb(254,173,49)" fg:x="689" fg:w="4"/><text x="17.6798%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="17.5057%" y="357" width="0.0253%" height="15" fill="rgb(221,1,38)" fg:x="692" fg:w="1"/><text x="17.7557%" y="367.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.03%)</title><rect x="17.5057%" y="341" width="0.0253%" height="15" fill="rgb(206,124,46)" fg:x="692" fg:w="1"/><text x="17.7557%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (2 samples, 0.05%)</title><rect x="17.5310%" y="373" width="0.0506%" height="15" fill="rgb(249,21,11)" fg:x="693" fg:w="2"/><text x="17.7810%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (3 samples, 0.08%)</title><rect x="17.5816%" y="373" width="0.0759%" height="15" fill="rgb(222,201,40)" fg:x="695" fg:w="3"/><text x="17.8316%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.03%)</title><rect x="17.6575%" y="373" width="0.0253%" height="15" fill="rgb(235,61,29)" fg:x="698" fg:w="1"/><text x="17.9075%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="17.6575%" y="357" width="0.0253%" height="15" fill="rgb(219,207,3)" fg:x="698" fg:w="1"/><text x="17.9075%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (5 samples, 0.13%)</title><rect x="17.6828%" y="373" width="0.1265%" height="15" fill="rgb(222,56,46)" fg:x="699" fg:w="5"/><text x="17.9328%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="17.7840%" y="357" width="0.0253%" height="15" fill="rgb(239,76,54)" fg:x="703" fg:w="1"/><text x="18.0340%" y="367.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (20 samples, 0.51%)</title><rect x="17.3286%" y="389" width="0.5059%" height="15" fill="rgb(231,124,27)" fg:x="685" fg:w="20"/><text x="17.5786%" y="399.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.03%)</title><rect x="17.8093%" y="373" width="0.0253%" height="15" fill="rgb(249,195,6)" fg:x="704" fg:w="1"/><text x="18.0593%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.03%)</title><rect x="17.8346%" y="389" width="0.0253%" height="15" fill="rgb(237,174,47)" fg:x="705" fg:w="1"/><text x="18.0846%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="17.8599%" y="389" width="0.0253%" height="15" fill="rgb(206,201,31)" fg:x="706" fg:w="1"/><text x="18.1099%" y="399.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.03%)</title><rect x="17.8852%" y="389" width="0.0253%" height="15" fill="rgb(231,57,52)" fg:x="707" fg:w="1"/><text x="18.1352%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.05%)</title><rect x="17.9104%" y="389" width="0.0506%" height="15" fill="rgb(248,177,22)" fg:x="708" fg:w="2"/><text x="18.1604%" y="399.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (157 samples, 3.97%)</title><rect x="14.0147%" y="613" width="3.9717%" height="15" fill="rgb(215,211,37)" fg:x="554" fg:w="157"/><text x="14.2647%" y="623.50">&lt;cha..</text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::decrypt_in_place_detached (157 samples, 3.97%)</title><rect x="14.0147%" y="597" width="3.9717%" height="15" fill="rgb(241,128,51)" fg:x="554" fg:w="157"/><text x="14.2647%" y="607.50">chac..</text></g><g><title>cipher::stream::StreamCipher::apply_keystream (157 samples, 3.97%)</title><rect x="14.0147%" y="581" width="3.9717%" height="15" fill="rgb(227,165,31)" fg:x="554" fg:w="157"/><text x="14.2647%" y="591.50">ciph..</text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (157 samples, 3.97%)</title><rect x="14.0147%" y="565" width="3.9717%" height="15" fill="rgb(228,167,24)" fg:x="554" fg:w="157"/><text x="14.2647%" y="575.50">ciph..</text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (157 samples, 3.97%)</title><rect x="14.0147%" y="549" width="3.9717%" height="15" fill="rgb(228,143,12)" fg:x="554" fg:w="157"/><text x="14.2647%" y="559.50">&lt;cip..</text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (157 samples, 3.97%)</title><rect x="14.0147%" y="533" width="3.9717%" height="15" fill="rgb(249,149,8)" fg:x="554" fg:w="157"/><text x="14.2647%" y="543.50">ciph..</text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (157 samples, 3.97%)</title><rect x="14.0147%" y="517" width="3.9717%" height="15" fill="rgb(243,35,44)" fg:x="554" fg:w="157"/><text x="14.2647%" y="527.50">&lt;cha..</text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (157 samples, 3.97%)</title><rect x="14.0147%" y="501" width="3.9717%" height="15" fill="rgb(246,89,9)" fg:x="554" fg:w="157"/><text x="14.2647%" y="511.50">&lt;cha..</text></g><g><title>chacha20::backends::avx2::inner (157 samples, 3.97%)</title><rect x="14.0147%" y="485" width="3.9717%" height="15" fill="rgb(233,213,13)" fg:x="554" fg:w="157"/><text x="14.2647%" y="495.50">chac..</text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (157 samples, 3.97%)</title><rect x="14.0147%" y="469" width="3.9717%" height="15" fill="rgb(233,141,41)" fg:x="554" fg:w="157"/><text x="14.2647%" y="479.50">&lt;cip..</text></g><g><title>cipher::stream_core::StreamBackend::gen_tail_blocks (26 samples, 0.66%)</title><rect x="17.3286%" y="453" width="0.6577%" height="15" fill="rgb(239,167,4)" fg:x="685" fg:w="26"/><text x="17.5786%" y="463.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (26 samples, 0.66%)</title><rect x="17.3286%" y="437" width="0.6577%" height="15" fill="rgb(209,217,16)" fg:x="685" fg:w="26"/><text x="17.5786%" y="447.50"></text></g><g><title>chacha20::backends::avx2::rounds (26 samples, 0.66%)</title><rect x="17.3286%" y="421" width="0.6577%" height="15" fill="rgb(219,88,35)" fg:x="685" fg:w="26"/><text x="17.5786%" y="431.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (26 samples, 0.66%)</title><rect x="17.3286%" y="405" width="0.6577%" height="15" fill="rgb(220,193,23)" fg:x="685" fg:w="26"/><text x="17.5786%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="17.9610%" y="389" width="0.0253%" height="15" fill="rgb(230,90,52)" fg:x="710" fg:w="1"/><text x="18.2110%" y="399.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.03%)</title><rect x="18.4164%" y="389" width="0.0253%" height="15" fill="rgb(252,106,19)" fg:x="728" fg:w="1"/><text x="18.6664%" y="399.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.10%)</title><rect x="18.4670%" y="373" width="0.1012%" height="15" fill="rgb(206,74,20)" fg:x="730" fg:w="4"/><text x="18.7170%" y="383.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.15%)</title><rect x="18.4417%" y="389" width="0.1518%" height="15" fill="rgb(230,138,44)" fg:x="729" fg:w="6"/><text x="18.6917%" y="399.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (1 samples, 0.03%)</title><rect x="18.5682%" y="373" width="0.0253%" height="15" fill="rgb(235,182,43)" fg:x="734" fg:w="1"/><text x="18.8182%" y="383.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (60 samples, 1.52%)</title><rect x="18.5935%" y="389" width="1.5178%" height="15" fill="rgb(242,16,51)" fg:x="735" fg:w="60"/><text x="18.8435%" y="399.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (6 samples, 0.15%)</title><rect x="20.1113%" y="389" width="0.1518%" height="15" fill="rgb(248,9,4)" fg:x="795" fg:w="6"/><text x="20.3613%" y="399.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (8 samples, 0.20%)</title><rect x="20.2631%" y="389" width="0.2024%" height="15" fill="rgb(210,31,22)" fg:x="801" fg:w="8"/><text x="20.5131%" y="399.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.03%)</title><rect x="20.7943%" y="373" width="0.0253%" height="15" fill="rgb(239,54,39)" fg:x="822" fg:w="1"/><text x="21.0443%" y="383.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (7 samples, 0.18%)</title><rect x="20.8196%" y="373" width="0.1771%" height="15" fill="rgb(230,99,41)" fg:x="823" fg:w="7"/><text x="21.0696%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (2 samples, 0.05%)</title><rect x="20.9967%" y="373" width="0.0506%" height="15" fill="rgb(253,106,12)" fg:x="830" fg:w="2"/><text x="21.2467%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (3 samples, 0.08%)</title><rect x="21.0473%" y="373" width="0.0759%" height="15" fill="rgb(213,46,41)" fg:x="832" fg:w="3"/><text x="21.2973%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.03%)</title><rect x="21.1232%" y="373" width="0.0253%" height="15" fill="rgb(215,133,35)" fg:x="835" fg:w="1"/><text x="21.3732%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (3 samples, 0.08%)</title><rect x="21.1485%" y="373" width="0.0759%" height="15" fill="rgb(213,28,5)" fg:x="836" fg:w="3"/><text x="21.3985%" y="383.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.03%)</title><rect x="21.4521%" y="357" width="0.0253%" height="15" fill="rgb(215,77,49)" fg:x="848" fg:w="1"/><text x="21.7021%" y="367.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="21.4774%" y="357" width="0.0253%" height="15" fill="rgb(248,100,22)" fg:x="849" fg:w="1"/><text x="21.7274%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (12 samples, 0.30%)</title><rect x="21.2244%" y="373" width="0.3036%" height="15" fill="rgb(208,67,9)" fg:x="839" fg:w="12"/><text x="21.4744%" y="383.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (1 samples, 0.03%)</title><rect x="21.5027%" y="357" width="0.0253%" height="15" fill="rgb(219,133,21)" fg:x="850" fg:w="1"/><text x="21.7527%" y="367.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="21.5027%" y="341" width="0.0253%" height="15" fill="rgb(246,46,29)" fg:x="850" fg:w="1"/><text x="21.7527%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::as_mut_ptr (1 samples, 0.03%)</title><rect x="21.5027%" y="325" width="0.0253%" height="15" fill="rgb(246,185,52)" fg:x="850" fg:w="1"/><text x="21.7527%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="21.5280%" y="373" width="0.0253%" height="15" fill="rgb(252,136,11)" fg:x="851" fg:w="1"/><text x="21.7780%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (44 samples, 1.11%)</title><rect x="20.4655%" y="389" width="1.1131%" height="15" fill="rgb(219,138,53)" fg:x="809" fg:w="44"/><text x="20.7155%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="21.5533%" y="373" width="0.0253%" height="15" fill="rgb(211,51,23)" fg:x="852" fg:w="1"/><text x="21.8033%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (8 samples, 0.20%)</title><rect x="21.5785%" y="389" width="0.2024%" height="15" fill="rgb(247,221,28)" fg:x="853" fg:w="8"/><text x="21.8285%" y="399.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (2 samples, 0.05%)</title><rect x="22.2110%" y="373" width="0.0506%" height="15" fill="rgb(251,222,45)" fg:x="878" fg:w="2"/><text x="22.4610%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (7 samples, 0.18%)</title><rect x="22.2616%" y="373" width="0.1771%" height="15" fill="rgb(217,162,53)" fg:x="880" fg:w="7"/><text x="22.5116%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.03%)</title><rect x="22.4387%" y="373" width="0.0253%" height="15" fill="rgb(229,93,14)" fg:x="887" fg:w="1"/><text x="22.6887%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (7 samples, 0.18%)</title><rect x="22.4640%" y="373" width="0.1771%" height="15" fill="rgb(209,67,49)" fg:x="888" fg:w="7"/><text x="22.7140%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (2 samples, 0.05%)</title><rect x="22.6410%" y="373" width="0.0506%" height="15" fill="rgb(213,87,29)" fg:x="895" fg:w="2"/><text x="22.8910%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (38 samples, 0.96%)</title><rect x="21.7809%" y="389" width="0.9613%" height="15" fill="rgb(205,151,52)" fg:x="861" fg:w="38"/><text x="22.0309%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (2 samples, 0.05%)</title><rect x="22.6916%" y="373" width="0.0506%" height="15" fill="rgb(253,215,39)" fg:x="897" fg:w="2"/><text x="22.9416%" y="383.50"></text></g><g><title>chacha20::backends::avx2::rounds (1 samples, 0.03%)</title><rect x="22.8940%" y="373" width="0.0253%" height="15" fill="rgb(221,220,41)" fg:x="905" fg:w="1"/><text x="23.1440%" y="383.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (1 samples, 0.03%)</title><rect x="22.9193%" y="373" width="0.0253%" height="15" fill="rgb(218,133,21)" fg:x="906" fg:w="1"/><text x="23.1693%" y="383.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (4 samples, 0.10%)</title><rect x="22.9446%" y="373" width="0.1012%" height="15" fill="rgb(221,193,43)" fg:x="907" fg:w="4"/><text x="23.1946%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (2 samples, 0.05%)</title><rect x="23.0458%" y="373" width="0.0506%" height="15" fill="rgb(240,128,52)" fg:x="911" fg:w="2"/><text x="23.2958%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (2 samples, 0.05%)</title><rect x="23.0964%" y="373" width="0.0506%" height="15" fill="rgb(253,114,12)" fg:x="913" fg:w="2"/><text x="23.3464%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (2 samples, 0.05%)</title><rect x="23.1470%" y="373" width="0.0506%" height="15" fill="rgb(215,223,47)" fg:x="915" fg:w="2"/><text x="23.3970%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (4 samples, 0.10%)</title><rect x="23.1976%" y="373" width="0.1012%" height="15" fill="rgb(248,225,23)" fg:x="917" fg:w="4"/><text x="23.4476%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi64x (2 samples, 0.05%)</title><rect x="23.2482%" y="357" width="0.0506%" height="15" fill="rgb(250,108,0)" fg:x="919" fg:w="2"/><text x="23.4982%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="23.2988%" y="373" width="0.0253%" height="15" fill="rgb(228,208,7)" fg:x="921" fg:w="1"/><text x="23.5488%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="23.3241%" y="373" width="0.0253%" height="15" fill="rgb(244,45,10)" fg:x="922" fg:w="1"/><text x="23.5741%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (30 samples, 0.76%)</title><rect x="22.7422%" y="389" width="0.7589%" height="15" fill="rgb(207,125,25)" fg:x="899" fg:w="30"/><text x="22.9922%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (6 samples, 0.15%)</title><rect x="23.3494%" y="373" width="0.1518%" height="15" fill="rgb(210,195,18)" fg:x="923" fg:w="6"/><text x="23.5994%" y="383.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="23.9059%" y="373" width="0.0253%" height="15" fill="rgb(249,80,12)" fg:x="945" fg:w="1"/><text x="24.1559%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (26 samples, 0.66%)</title><rect x="23.5011%" y="389" width="0.6577%" height="15" fill="rgb(221,65,9)" fg:x="929" fg:w="26"/><text x="23.7511%" y="399.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (9 samples, 0.23%)</title><rect x="23.9312%" y="373" width="0.2277%" height="15" fill="rgb(235,49,36)" fg:x="946" fg:w="9"/><text x="24.1812%" y="383.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="25.4237%" y="373" width="0.0253%" height="15" fill="rgb(225,32,20)" fg:x="1005" fg:w="1"/><text x="25.6737%" y="383.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="25.4237%" y="357" width="0.0253%" height="15" fill="rgb(215,141,46)" fg:x="1005" fg:w="1"/><text x="25.6737%" y="367.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="25.4237%" y="341" width="0.0253%" height="15" fill="rgb(250,160,47)" fg:x="1005" fg:w="1"/><text x="25.6737%" y="351.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.03%)</title><rect x="25.4237%" y="325" width="0.0253%" height="15" fill="rgb(216,222,40)" fg:x="1005" fg:w="1"/><text x="25.6737%" y="335.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.03%)</title><rect x="25.4237%" y="309" width="0.0253%" height="15" fill="rgb(234,217,39)" fg:x="1005" fg:w="1"/><text x="25.6737%" y="319.50"></text></g><g><title>tick_sched_timer (1 samples, 0.03%)</title><rect x="25.4237%" y="293" width="0.0253%" height="15" fill="rgb(207,178,40)" fg:x="1005" fg:w="1"/><text x="25.6737%" y="303.50"></text></g><g><title>tick_sched_handle (1 samples, 0.03%)</title><rect x="25.4237%" y="277" width="0.0253%" height="15" fill="rgb(221,136,13)" fg:x="1005" fg:w="1"/><text x="25.6737%" y="287.50"></text></g><g><title>update_process_times (1 samples, 0.03%)</title><rect x="25.4237%" y="261" width="0.0253%" height="15" fill="rgb(249,199,10)" fg:x="1005" fg:w="1"/><text x="25.6737%" y="271.50"></text></g><g><title>scheduler_tick (1 samples, 0.03%)</title><rect x="25.4237%" y="245" width="0.0253%" height="15" fill="rgb(249,222,13)" fg:x="1005" fg:w="1"/><text x="25.6737%" y="255.50"></text></g><g><title>task_tick_fair (1 samples, 0.03%)</title><rect x="25.4237%" y="229" width="0.0253%" height="15" fill="rgb(244,185,38)" fg:x="1005" fg:w="1"/><text x="25.6737%" y="239.50"></text></g><g><title>update_curr (1 samples, 0.03%)</title><rect x="25.4237%" y="213" width="0.0253%" height="15" fill="rgb(236,202,9)" fg:x="1005" fg:w="1"/><text x="25.6737%" y="223.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (2 samples, 0.05%)</title><rect x="25.4490%" y="373" width="0.0506%" height="15" fill="rgb(250,229,37)" fg:x="1006" fg:w="2"/><text x="25.6990%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.03%)</title><rect x="25.4996%" y="373" width="0.0253%" height="15" fill="rgb(206,174,23)" fg:x="1008" fg:w="1"/><text x="25.7496%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (5 samples, 0.13%)</title><rect x="25.5249%" y="373" width="0.1265%" height="15" fill="rgb(211,33,43)" fg:x="1009" fg:w="5"/><text x="25.7749%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.05%)</title><rect x="25.6514%" y="373" width="0.0506%" height="15" fill="rgb(245,58,50)" fg:x="1014" fg:w="2"/><text x="25.9014%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="25.7020%" y="373" width="0.0253%" height="15" fill="rgb(244,68,36)" fg:x="1016" fg:w="1"/><text x="25.9520%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (64 samples, 1.62%)</title><rect x="24.1589%" y="389" width="1.6190%" height="15" fill="rgb(232,229,15)" fg:x="955" fg:w="64"/><text x="24.4089%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (2 samples, 0.05%)</title><rect x="25.7273%" y="373" width="0.0506%" height="15" fill="rgb(254,30,23)" fg:x="1017" fg:w="2"/><text x="25.9773%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (6 samples, 0.15%)</title><rect x="25.7779%" y="389" width="0.1518%" height="15" fill="rgb(235,160,14)" fg:x="1019" fg:w="6"/><text x="26.0279%" y="399.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi64x (4 samples, 0.10%)</title><rect x="25.8285%" y="373" width="0.1012%" height="15" fill="rgb(212,155,44)" fg:x="1021" fg:w="4"/><text x="26.0785%" y="383.50"></text></g><g><title>core::core_arch::simd::i64x4::new (3 samples, 0.08%)</title><rect x="25.8538%" y="357" width="0.0759%" height="15" fill="rgb(226,2,50)" fg:x="1022" fg:w="3"/><text x="26.1038%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (44 samples, 1.11%)</title><rect x="25.9297%" y="389" width="1.1131%" height="15" fill="rgb(234,177,6)" fg:x="1025" fg:w="44"/><text x="26.1797%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (27 samples, 0.68%)</title><rect x="27.0428%" y="389" width="0.6830%" height="15" fill="rgb(217,24,9)" fg:x="1069" fg:w="27"/><text x="27.2928%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (33 samples, 0.83%)</title><rect x="27.7258%" y="389" width="0.8348%" height="15" fill="rgb(220,13,46)" fg:x="1096" fg:w="33"/><text x="27.9758%" y="399.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (455 samples, 11.51%)</title><rect x="17.9863%" y="405" width="11.5102%" height="15" fill="rgb(239,221,27)" fg:x="711" fg:w="455"/><text x="18.2363%" y="415.50">chacha20::backend..</text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (37 samples, 0.94%)</title><rect x="28.5606%" y="389" width="0.9360%" height="15" fill="rgb(222,198,25)" fg:x="1129" fg:w="37"/><text x="28.8106%" y="399.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (1 samples, 0.03%)</title><rect x="29.4966%" y="405" width="0.0253%" height="15" fill="rgb(211,99,13)" fg:x="1166" fg:w="1"/><text x="29.7466%" y="415.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (4 samples, 0.10%)</title><rect x="29.5219%" y="405" width="0.1012%" height="15" fill="rgb(232,111,31)" fg:x="1167" fg:w="4"/><text x="29.7719%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (6 samples, 0.15%)</title><rect x="29.6231%" y="405" width="0.1518%" height="15" fill="rgb(245,82,37)" fg:x="1171" fg:w="6"/><text x="29.8731%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (2 samples, 0.05%)</title><rect x="29.7749%" y="405" width="0.0506%" height="15" fill="rgb(227,149,46)" fg:x="1177" fg:w="2"/><text x="30.0249%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (4 samples, 0.10%)</title><rect x="29.8254%" y="405" width="0.1012%" height="15" fill="rgb(218,36,50)" fg:x="1179" fg:w="4"/><text x="30.0754%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.03%)</title><rect x="29.9266%" y="405" width="0.0253%" height="15" fill="rgb(226,80,48)" fg:x="1183" fg:w="1"/><text x="30.1766%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (5 samples, 0.13%)</title><rect x="29.9519%" y="405" width="0.1265%" height="15" fill="rgb(238,224,15)" fg:x="1184" fg:w="5"/><text x="30.2019%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (17 samples, 0.43%)</title><rect x="30.0784%" y="405" width="0.4301%" height="15" fill="rgb(241,136,10)" fg:x="1189" fg:w="17"/><text x="30.3284%" y="415.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (3 samples, 0.08%)</title><rect x="30.5085%" y="405" width="0.0759%" height="15" fill="rgb(208,32,45)" fg:x="1206" fg:w="3"/><text x="30.7585%" y="415.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi64x (1 samples, 0.03%)</title><rect x="30.5591%" y="389" width="0.0253%" height="15" fill="rgb(207,135,9)" fg:x="1208" fg:w="1"/><text x="30.8091%" y="399.50"></text></g><g><title>core::core_arch::simd::i64x4::new (1 samples, 0.03%)</title><rect x="30.5591%" y="373" width="0.0253%" height="15" fill="rgb(206,86,44)" fg:x="1208" fg:w="1"/><text x="30.8091%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (18 samples, 0.46%)</title><rect x="30.5844%" y="405" width="0.4554%" height="15" fill="rgb(245,177,15)" fg:x="1209" fg:w="18"/><text x="30.8344%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (9 samples, 0.23%)</title><rect x="31.0397%" y="405" width="0.2277%" height="15" fill="rgb(206,64,50)" fg:x="1227" fg:w="9"/><text x="31.2897%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (7 samples, 0.18%)</title><rect x="31.2674%" y="405" width="0.1771%" height="15" fill="rgb(234,36,40)" fg:x="1236" fg:w="7"/><text x="31.5174%" y="415.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_par_ks_blocks (536 samples, 13.56%)</title><rect x="17.9863%" y="453" width="13.5593%" height="15" fill="rgb(213,64,8)" fg:x="711" fg:w="536"/><text x="18.2363%" y="463.50">&lt;chacha20::backends:..</text></g><g><title>chacha20::backends::avx2::rounds (536 samples, 13.56%)</title><rect x="17.9863%" y="437" width="13.5593%" height="15" fill="rgb(210,75,36)" fg:x="711" fg:w="536"/><text x="18.2363%" y="447.50">chacha20::backends::..</text></g><g><title>chacha20::backends::avx2::double_quarter_round (536 samples, 13.56%)</title><rect x="17.9863%" y="421" width="13.5593%" height="15" fill="rgb(229,88,21)" fg:x="711" fg:w="536"/><text x="18.2363%" y="431.50">chacha20::backends::..</text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (4 samples, 0.10%)</title><rect x="31.4445%" y="405" width="0.1012%" height="15" fill="rgb(252,204,47)" fg:x="1243" fg:w="4"/><text x="31.6945%" y="415.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="31.6469%" y="373" width="0.0253%" height="15" fill="rgb(208,77,27)" fg:x="1251" fg:w="1"/><text x="31.8969%" y="383.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (1 samples, 0.03%)</title><rect x="31.6469%" y="357" width="0.0253%" height="15" fill="rgb(221,76,26)" fg:x="1251" fg:w="1"/><text x="31.8969%" y="367.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (14 samples, 0.35%)</title><rect x="31.6721%" y="373" width="0.3542%" height="15" fill="rgb(225,139,18)" fg:x="1252" fg:w="14"/><text x="31.9221%" y="383.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (2 samples, 0.05%)</title><rect x="32.0263%" y="373" width="0.0506%" height="15" fill="rgb(230,137,11)" fg:x="1266" fg:w="2"/><text x="32.2763%" y="383.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (1 samples, 0.03%)</title><rect x="32.0769%" y="373" width="0.0253%" height="15" fill="rgb(212,28,1)" fg:x="1268" fg:w="1"/><text x="32.3269%" y="383.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="32.1528%" y="357" width="0.0253%" height="15" fill="rgb(248,164,17)" fg:x="1271" fg:w="1"/><text x="32.4028%" y="367.50"></text></g><g><title>chacha20::backends::avx2::inner (1 samples, 0.03%)</title><rect x="32.1781%" y="357" width="0.0253%" height="15" fill="rgb(222,171,42)" fg:x="1272" fg:w="1"/><text x="32.4281%" y="367.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (1 samples, 0.03%)</title><rect x="32.1781%" y="341" width="0.0253%" height="15" fill="rgb(243,84,45)" fg:x="1272" fg:w="1"/><text x="32.4281%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="32.2034%" y="357" width="0.0253%" height="15" fill="rgb(252,49,23)" fg:x="1273" fg:w="1"/><text x="32.4534%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (5 samples, 0.13%)</title><rect x="32.2287%" y="357" width="0.1265%" height="15" fill="rgb(215,19,7)" fg:x="1274" fg:w="5"/><text x="32.4787%" y="367.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.03%)</title><rect x="32.3299%" y="341" width="0.0253%" height="15" fill="rgb(238,81,41)" fg:x="1278" fg:w="1"/><text x="32.5799%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (12 samples, 0.30%)</title><rect x="32.1022%" y="373" width="0.3036%" height="15" fill="rgb(210,199,37)" fg:x="1269" fg:w="12"/><text x="32.3522%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (2 samples, 0.05%)</title><rect x="32.3552%" y="357" width="0.0506%" height="15" fill="rgb(244,192,49)" fg:x="1279" fg:w="2"/><text x="32.6052%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (2 samples, 0.05%)</title><rect x="32.4058%" y="373" width="0.0506%" height="15" fill="rgb(226,211,11)" fg:x="1281" fg:w="2"/><text x="32.6558%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (5 samples, 0.13%)</title><rect x="32.4564%" y="373" width="0.1265%" height="15" fill="rgb(236,162,54)" fg:x="1283" fg:w="5"/><text x="32.7064%" y="383.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (3 samples, 0.08%)</title><rect x="32.6081%" y="357" width="0.0759%" height="15" fill="rgb(220,229,9)" fg:x="1289" fg:w="3"/><text x="32.8581%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (5 samples, 0.13%)</title><rect x="32.5828%" y="373" width="0.1265%" height="15" fill="rgb(250,87,22)" fg:x="1288" fg:w="5"/><text x="32.8328%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.03%)</title><rect x="32.6840%" y="357" width="0.0253%" height="15" fill="rgb(239,43,17)" fg:x="1292" fg:w="1"/><text x="32.9340%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (2 samples, 0.05%)</title><rect x="32.7093%" y="373" width="0.0506%" height="15" fill="rgb(231,177,25)" fg:x="1293" fg:w="2"/><text x="32.9593%" y="383.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.03%)</title><rect x="32.7346%" y="357" width="0.0253%" height="15" fill="rgb(219,179,1)" fg:x="1294" fg:w="1"/><text x="32.9846%" y="367.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.03%)</title><rect x="33.0129%" y="357" width="0.0253%" height="15" fill="rgb(238,219,53)" fg:x="1305" fg:w="1"/><text x="33.2629%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (12 samples, 0.30%)</title><rect x="32.7599%" y="373" width="0.3036%" height="15" fill="rgb(232,167,36)" fg:x="1295" fg:w="12"/><text x="33.0099%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="33.0382%" y="357" width="0.0253%" height="15" fill="rgb(244,19,51)" fg:x="1306" fg:w="1"/><text x="33.2882%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (7 samples, 0.18%)</title><rect x="33.0635%" y="373" width="0.1771%" height="15" fill="rgb(224,6,22)" fg:x="1307" fg:w="7"/><text x="33.3135%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (4 samples, 0.10%)</title><rect x="33.2406%" y="373" width="0.1012%" height="15" fill="rgb(224,145,5)" fg:x="1314" fg:w="4"/><text x="33.4906%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (11 samples, 0.28%)</title><rect x="33.3418%" y="373" width="0.2783%" height="15" fill="rgb(234,130,49)" fg:x="1318" fg:w="11"/><text x="33.5918%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (6 samples, 0.15%)</title><rect x="33.6200%" y="373" width="0.1518%" height="15" fill="rgb(254,6,2)" fg:x="1329" fg:w="6"/><text x="33.8700%" y="383.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (89 samples, 2.25%)</title><rect x="31.5457%" y="389" width="2.2515%" height="15" fill="rgb(208,96,46)" fg:x="1247" fg:w="89"/><text x="31.7957%" y="399.50">c..</text></g><g><title>core::ptr::write (1 samples, 0.03%)</title><rect x="33.7718%" y="373" width="0.0253%" height="15" fill="rgb(239,3,39)" fg:x="1335" fg:w="1"/><text x="34.0218%" y="383.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (1 samples, 0.03%)</title><rect x="33.7971%" y="389" width="0.0253%" height="15" fill="rgb(233,210,1)" fg:x="1336" fg:w="1"/><text x="34.0471%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="33.8224%" y="389" width="0.0253%" height="15" fill="rgb(244,137,37)" fg:x="1337" fg:w="1"/><text x="34.0724%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (2 samples, 0.05%)</title><rect x="33.8477%" y="389" width="0.0506%" height="15" fill="rgb(240,136,2)" fg:x="1338" fg:w="2"/><text x="34.0977%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.05%)</title><rect x="33.8983%" y="389" width="0.0506%" height="15" fill="rgb(239,18,37)" fg:x="1340" fg:w="2"/><text x="34.1483%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.05%)</title><rect x="33.9489%" y="389" width="0.0506%" height="15" fill="rgb(218,185,22)" fg:x="1342" fg:w="2"/><text x="34.1989%" y="399.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::encrypt_in_place_detached (635 samples, 16.06%)</title><rect x="17.9863%" y="613" width="16.0637%" height="15" fill="rgb(225,218,4)" fg:x="711" fg:w="635"/><text x="18.2363%" y="623.50">&lt;chacha20poly1305::ChaCha..</text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::encrypt_in_place_detached (635 samples, 16.06%)</title><rect x="17.9863%" y="597" width="16.0637%" height="15" fill="rgb(230,182,32)" fg:x="711" fg:w="635"/><text x="18.2363%" y="607.50">chacha20poly1305::cipher:..</text></g><g><title>cipher::stream::StreamCipher::apply_keystream (635 samples, 16.06%)</title><rect x="17.9863%" y="581" width="16.0637%" height="15" fill="rgb(242,56,43)" fg:x="711" fg:w="635"/><text x="18.2363%" y="591.50">cipher::stream::StreamCip..</text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (635 samples, 16.06%)</title><rect x="17.9863%" y="565" width="16.0637%" height="15" fill="rgb(233,99,24)" fg:x="711" fg:w="635"/><text x="18.2363%" y="575.50">cipher::stream::StreamCip..</text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (635 samples, 16.06%)</title><rect x="17.9863%" y="549" width="16.0637%" height="15" fill="rgb(234,209,42)" fg:x="711" fg:w="635"/><text x="18.2363%" y="559.50">&lt;cipher::stream_wrapper::..</text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (635 samples, 16.06%)</title><rect x="17.9863%" y="533" width="16.0637%" height="15" fill="rgb(227,7,12)" fg:x="711" fg:w="635"/><text x="18.2363%" y="543.50">cipher::stream_core::Stre..</text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (635 samples, 16.06%)</title><rect x="17.9863%" y="517" width="16.0637%" height="15" fill="rgb(245,203,43)" fg:x="711" fg:w="635"/><text x="18.2363%" y="527.50">&lt;chacha20::xchacha::XChaC..</text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (635 samples, 16.06%)</title><rect x="17.9863%" y="501" width="16.0637%" height="15" fill="rgb(238,205,33)" fg:x="711" fg:w="635"/><text x="18.2363%" y="511.50">&lt;chacha20::ChaChaCore&lt;R&gt; ..</text></g><g><title>chacha20::backends::avx2::inner (635 samples, 16.06%)</title><rect x="17.9863%" y="485" width="16.0637%" height="15" fill="rgb(231,56,7)" fg:x="711" fg:w="635"/><text x="18.2363%" y="495.50">chacha20::backends::avx2:..</text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (635 samples, 16.06%)</title><rect x="17.9863%" y="469" width="16.0637%" height="15" fill="rgb(244,186,29)" fg:x="711" fg:w="635"/><text x="18.2363%" y="479.50">&lt;cipher::stream_core::App..</text></g><g><title>cipher::stream_core::StreamBackend::gen_tail_blocks (99 samples, 2.50%)</title><rect x="31.5457%" y="453" width="2.5044%" height="15" fill="rgb(234,111,31)" fg:x="1247" fg:w="99"/><text x="31.7957%" y="463.50">ci..</text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (99 samples, 2.50%)</title><rect x="31.5457%" y="437" width="2.5044%" height="15" fill="rgb(241,149,10)" fg:x="1247" fg:w="99"/><text x="31.7957%" y="447.50">&lt;c..</text></g><g><title>chacha20::backends::avx2::rounds (99 samples, 2.50%)</title><rect x="31.5457%" y="421" width="2.5044%" height="15" fill="rgb(249,206,44)" fg:x="1247" fg:w="99"/><text x="31.7957%" y="431.50">ch..</text></g><g><title>chacha20::backends::avx2::double_quarter_round (99 samples, 2.50%)</title><rect x="31.5457%" y="405" width="2.5044%" height="15" fill="rgb(251,153,30)" fg:x="1247" fg:w="99"/><text x="31.7957%" y="415.50">ch..</text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (2 samples, 0.05%)</title><rect x="33.9995%" y="389" width="0.0506%" height="15" fill="rgb(239,152,38)" fg:x="1344" fg:w="2"/><text x="34.2495%" y="399.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (3 samples, 0.08%)</title><rect x="34.0501%" y="613" width="0.0759%" height="15" fill="rgb(249,139,47)" fg:x="1346" fg:w="3"/><text x="34.3001%" y="623.50"></text></g><g><title>inout::inout_buf::InOutBuf&lt;u8&gt;::xor_in2out (3 samples, 0.08%)</title><rect x="34.0501%" y="597" width="0.0759%" height="15" fill="rgb(244,64,35)" fg:x="1346" fg:w="3"/><text x="34.3001%" y="607.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipherSeek&gt;::try_seek (1 samples, 0.03%)</title><rect x="34.1260%" y="613" width="0.0253%" height="15" fill="rgb(216,46,15)" fg:x="1349" fg:w="1"/><text x="34.3760%" y="623.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (194 samples, 4.91%)</title><rect x="34.1513%" y="613" width="4.9077%" height="15" fill="rgb(250,74,19)" fg:x="1350" fg:w="194"/><text x="34.4013%" y="623.50">&lt;core:..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.03%)</title><rect x="39.0589%" y="613" width="0.0253%" height="15" fill="rgb(249,42,33)" fg:x="1544" fg:w="1"/><text x="39.3089%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (37 samples, 0.94%)</title><rect x="39.0842%" y="613" width="0.9360%" height="15" fill="rgb(242,149,17)" fg:x="1545" fg:w="37"/><text x="39.3342%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="40.0202%" y="613" width="0.0253%" height="15" fill="rgb(244,29,21)" fg:x="1582" fg:w="1"/><text x="40.2702%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate (1 samples, 0.03%)</title><rect x="40.0202%" y="597" width="0.0253%" height="15" fill="rgb(220,130,37)" fg:x="1582" fg:w="1"/><text x="40.2702%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (1 samples, 0.03%)</title><rect x="40.0455%" y="613" width="0.0253%" height="15" fill="rgb(211,67,2)" fg:x="1583" fg:w="1"/><text x="40.2955%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (2 samples, 0.05%)</title><rect x="40.0708%" y="613" width="0.0506%" height="15" fill="rgb(235,68,52)" fg:x="1584" fg:w="2"/><text x="40.3208%" y="623.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (39 samples, 0.99%)</title><rect x="40.1214%" y="613" width="0.9866%" height="15" fill="rgb(246,142,3)" fg:x="1586" fg:w="39"/><text x="40.3714%" y="623.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (2 samples, 0.05%)</title><rect x="41.0574%" y="597" width="0.0506%" height="15" fill="rgb(241,25,7)" fg:x="1623" fg:w="2"/><text x="41.3074%" y="607.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::ops::range::RangeBounds&lt;T&gt;&gt;::end_bound (1 samples, 0.03%)</title><rect x="41.1080%" y="613" width="0.0253%" height="15" fill="rgb(242,119,39)" fg:x="1625" fg:w="1"/><text x="41.3580%" y="623.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.03%)</title><rect x="41.1333%" y="613" width="0.0253%" height="15" fill="rgb(241,98,45)" fg:x="1626" fg:w="1"/><text x="41.3833%" y="623.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.03%)</title><rect x="41.1586%" y="613" width="0.0253%" height="15" fill="rgb(254,28,30)" fg:x="1627" fg:w="1"/><text x="41.4086%" y="623.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.03%)</title><rect x="41.1839%" y="613" width="0.0253%" height="15" fill="rgb(241,142,54)" fg:x="1628" fg:w="1"/><text x="41.4339%" y="623.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.03%)</title><rect x="41.2092%" y="613" width="0.0253%" height="15" fill="rgb(222,85,15)" fg:x="1629" fg:w="1"/><text x="41.4592%" y="623.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.03%)</title><rect x="41.2598%" y="597" width="0.0253%" height="15" fill="rgb(210,85,47)" fg:x="1631" fg:w="1"/><text x="41.5098%" y="607.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::cast (1 samples, 0.03%)</title><rect x="41.3104%" y="581" width="0.0253%" height="15" fill="rgb(224,206,25)" fg:x="1633" fg:w="1"/><text x="41.5604%" y="591.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.18%)</title><rect x="41.2345%" y="613" width="0.1771%" height="15" fill="rgb(243,201,19)" fg:x="1630" fg:w="7"/><text x="41.4845%" y="623.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (5 samples, 0.13%)</title><rect x="41.2851%" y="597" width="0.1265%" height="15" fill="rgb(236,59,4)" fg:x="1632" fg:w="5"/><text x="41.5351%" y="607.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (3 samples, 0.08%)</title><rect x="41.3357%" y="581" width="0.0759%" height="15" fill="rgb(254,179,45)" fg:x="1634" fg:w="3"/><text x="41.5857%" y="591.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (1 samples, 0.03%)</title><rect x="41.4116%" y="613" width="0.0253%" height="15" fill="rgb(226,14,10)" fg:x="1637" fg:w="1"/><text x="41.6616%" y="623.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.03%)</title><rect x="41.4116%" y="597" width="0.0253%" height="15" fill="rgb(244,27,41)" fg:x="1637" fg:w="1"/><text x="41.6616%" y="607.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (4 samples, 0.10%)</title><rect x="41.7657%" y="597" width="0.1012%" height="15" fill="rgb(235,35,32)" fg:x="1651" fg:w="4"/><text x="42.0157%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (2 samples, 0.05%)</title><rect x="41.8163%" y="581" width="0.0506%" height="15" fill="rgb(218,68,31)" fg:x="1653" fg:w="2"/><text x="42.0663%" y="591.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (18 samples, 0.46%)</title><rect x="41.4369%" y="613" width="0.4554%" height="15" fill="rgb(207,120,37)" fg:x="1638" fg:w="18"/><text x="41.6869%" y="623.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::sub_ptr (1 samples, 0.03%)</title><rect x="41.8669%" y="597" width="0.0253%" height="15" fill="rgb(227,98,0)" fg:x="1655" fg:w="1"/><text x="42.1169%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (1 samples, 0.03%)</title><rect x="41.8669%" y="581" width="0.0253%" height="15" fill="rgb(207,7,3)" fg:x="1655" fg:w="1"/><text x="42.1169%" y="591.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (50 samples, 1.26%)</title><rect x="43.1824%" y="597" width="1.2649%" height="15" fill="rgb(206,98,19)" fg:x="1707" fg:w="50"/><text x="43.4324%" y="607.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_mut (1 samples, 0.03%)</title><rect x="44.4473%" y="597" width="0.0253%" height="15" fill="rgb(217,5,26)" fg:x="1757" fg:w="1"/><text x="44.6973%" y="607.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_sub (3 samples, 0.08%)</title><rect x="44.9026%" y="581" width="0.0759%" height="15" fill="rgb(235,190,38)" fg:x="1775" fg:w="3"/><text x="45.1526%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::cast (3 samples, 0.08%)</title><rect x="44.9785%" y="581" width="0.0759%" height="15" fill="rgb(247,86,24)" fg:x="1778" fg:w="3"/><text x="45.2285%" y="591.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (129 samples, 3.26%)</title><rect x="41.8922%" y="613" width="3.2633%" height="15" fill="rgb(205,101,16)" fg:x="1656" fg:w="129"/><text x="42.1422%" y="623.50">&lt;co..</text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (27 samples, 0.68%)</title><rect x="44.4726%" y="597" width="0.6830%" height="15" fill="rgb(246,168,33)" fg:x="1758" fg:w="27"/><text x="44.7226%" y="607.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (4 samples, 0.10%)</title><rect x="45.0544%" y="581" width="0.1012%" height="15" fill="rgb(231,114,1)" fg:x="1781" fg:w="4"/><text x="45.3044%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.03%)</title><rect x="45.1303%" y="565" width="0.0253%" height="15" fill="rgb(207,184,53)" fg:x="1784" fg:w="1"/><text x="45.3803%" y="575.50"></text></g><g><title>&lt;core::time::Duration as core::cmp::PartialOrd&gt;::partial_cmp (1 samples, 0.03%)</title><rect x="45.1556%" y="613" width="0.0253%" height="15" fill="rgb(224,95,51)" fg:x="1785" fg:w="1"/><text x="45.4056%" y="623.50"></text></g><g><title>&lt;core::time::Nanoseconds as core::cmp::PartialOrd&gt;::partial_cmp (1 samples, 0.03%)</title><rect x="45.1556%" y="597" width="0.0253%" height="15" fill="rgb(212,188,45)" fg:x="1785" fg:w="1"/><text x="45.4056%" y="607.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u32&gt;::partial_cmp (1 samples, 0.03%)</title><rect x="45.1556%" y="581" width="0.0253%" height="15" fill="rgb(223,154,38)" fg:x="1785" fg:w="1"/><text x="45.4056%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u32&gt;::cmp (1 samples, 0.03%)</title><rect x="45.1556%" y="565" width="0.0253%" height="15" fill="rgb(251,22,52)" fg:x="1785" fg:w="1"/><text x="45.4056%" y="575.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (5 samples, 0.13%)</title><rect x="45.1809%" y="613" width="0.1265%" height="15" fill="rgb(229,209,22)" fg:x="1786" fg:w="5"/><text x="45.4309%" y="623.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (45 samples, 1.14%)</title><rect x="45.3074%" y="613" width="1.1384%" height="15" fill="rgb(234,138,34)" fg:x="1791" fg:w="45"/><text x="45.5574%" y="623.50"></text></g><g><title>&lt;heapless::vec::Vec&lt;T,_&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.03%)</title><rect x="46.4457%" y="613" width="0.0253%" height="15" fill="rgb(212,95,11)" fg:x="1836" fg:w="1"/><text x="46.6957%" y="623.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (3 samples, 0.08%)</title><rect x="46.4710%" y="613" width="0.0759%" height="15" fill="rgb(240,179,47)" fg:x="1837" fg:w="3"/><text x="46.7210%" y="623.50"></text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (2 samples, 0.05%)</title><rect x="46.4963%" y="597" width="0.0506%" height="15" fill="rgb(240,163,11)" fg:x="1838" fg:w="2"/><text x="46.7463%" y="607.50"></text></g><g><title>universal_hash::to_blocks (1 samples, 0.03%)</title><rect x="46.5216%" y="581" width="0.0253%" height="15" fill="rgb(236,37,12)" fg:x="1839" fg:w="1"/><text x="46.7716%" y="591.50"></text></g><g><title>&lt;poly1305::backend::avx2::State as universal_hash::UhfBackend&gt;::proc_block (1 samples, 0.03%)</title><rect x="46.5469%" y="613" width="0.0253%" height="15" fill="rgb(232,164,16)" fg:x="1840" fg:w="1"/><text x="46.7969%" y="623.50"></text></g><g><title>&lt;poly1305::backend::avx2::State as universal_hash::UhfBackend&gt;::proc_par_blocks (1 samples, 0.03%)</title><rect x="46.5722%" y="613" width="0.0253%" height="15" fill="rgb(244,205,15)" fg:x="1841" fg:w="1"/><text x="46.8222%" y="623.50"></text></g><g><title>&lt;rustix::backend::event::epoll::Iter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="46.5975%" y="613" width="0.0253%" height="15" fill="rgb(223,117,47)" fg:x="1842" fg:w="1"/><text x="46.8475%" y="623.50"></text></g><g><title>&lt;rustix::backend::reg::ArgReg&lt;Num&gt; as rustix::backend::reg::ToAsm&gt;::to_asm (1 samples, 0.03%)</title><rect x="46.6228%" y="613" width="0.0253%" height="15" fill="rgb(244,107,35)" fg:x="1843" fg:w="1"/><text x="46.8728%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.03%)</title><rect x="46.6987%" y="325" width="0.0253%" height="15" fill="rgb(205,140,8)" fg:x="1846" fg:w="1"/><text x="46.9487%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (2 samples, 0.05%)</title><rect x="46.7240%" y="325" width="0.0506%" height="15" fill="rgb(228,84,46)" fg:x="1847" fg:w="2"/><text x="46.9740%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (4 samples, 0.10%)</title><rect x="46.6987%" y="341" width="0.1012%" height="15" fill="rgb(254,188,9)" fg:x="1846" fg:w="4"/><text x="46.9487%" y="351.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="46.7746%" y="325" width="0.0253%" height="15" fill="rgb(206,112,54)" fg:x="1849" fg:w="1"/><text x="47.0246%" y="335.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (5 samples, 0.13%)</title><rect x="46.6987%" y="357" width="0.1265%" height="15" fill="rgb(216,84,49)" fg:x="1846" fg:w="5"/><text x="46.9487%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="46.7999%" y="341" width="0.0253%" height="15" fill="rgb(214,194,35)" fg:x="1850" fg:w="1"/><text x="47.0499%" y="351.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (2 samples, 0.05%)</title><rect x="46.8252%" y="341" width="0.0506%" height="15" fill="rgb(249,28,3)" fg:x="1851" fg:w="2"/><text x="47.0752%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="46.8758%" y="341" width="0.0253%" height="15" fill="rgb(222,56,52)" fg:x="1853" fg:w="1"/><text x="47.1258%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.03%)</title><rect x="46.9011%" y="341" width="0.0253%" height="15" fill="rgb(245,217,50)" fg:x="1854" fg:w="1"/><text x="47.1511%" y="351.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="46.9011%" y="325" width="0.0253%" height="15" fill="rgb(213,201,24)" fg:x="1854" fg:w="1"/><text x="47.1511%" y="335.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_par_ks_blocks (14 samples, 0.35%)</title><rect x="46.6481%" y="405" width="0.3542%" height="15" fill="rgb(248,116,28)" fg:x="1844" fg:w="14"/><text x="46.8981%" y="415.50"></text></g><g><title>chacha20::backends::avx2::rounds (12 samples, 0.30%)</title><rect x="46.6987%" y="389" width="0.3036%" height="15" fill="rgb(219,72,43)" fg:x="1846" fg:w="12"/><text x="46.9487%" y="399.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (12 samples, 0.30%)</title><rect x="46.6987%" y="373" width="0.3036%" height="15" fill="rgb(209,138,14)" fg:x="1846" fg:w="12"/><text x="46.9487%" y="383.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (7 samples, 0.18%)</title><rect x="46.8252%" y="357" width="0.1771%" height="15" fill="rgb(222,18,33)" fg:x="1851" fg:w="7"/><text x="47.0752%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (3 samples, 0.08%)</title><rect x="46.9264%" y="341" width="0.0759%" height="15" fill="rgb(213,199,7)" fg:x="1855" fg:w="3"/><text x="47.1764%" y="351.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (1 samples, 0.03%)</title><rect x="47.0023%" y="341" width="0.0253%" height="15" fill="rgb(250,110,10)" fg:x="1858" fg:w="1"/><text x="47.2523%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.03%)</title><rect x="47.0023%" y="325" width="0.0253%" height="15" fill="rgb(248,123,6)" fg:x="1858" fg:w="1"/><text x="47.2523%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="47.0023%" y="309" width="0.0253%" height="15" fill="rgb(206,91,31)" fg:x="1858" fg:w="1"/><text x="47.2523%" y="319.50"></text></g><g><title>cipher::stream_core::StreamBackend::gen_tail_blocks (2 samples, 0.05%)</title><rect x="47.0023%" y="405" width="0.0506%" height="15" fill="rgb(211,154,13)" fg:x="1858" fg:w="2"/><text x="47.2523%" y="415.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (2 samples, 0.05%)</title><rect x="47.0023%" y="389" width="0.0506%" height="15" fill="rgb(225,148,7)" fg:x="1858" fg:w="2"/><text x="47.2523%" y="399.50"></text></g><g><title>chacha20::backends::avx2::rounds (2 samples, 0.05%)</title><rect x="47.0023%" y="373" width="0.0506%" height="15" fill="rgb(220,160,43)" fg:x="1858" fg:w="2"/><text x="47.2523%" y="383.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (2 samples, 0.05%)</title><rect x="47.0023%" y="357" width="0.0506%" height="15" fill="rgb(213,52,39)" fg:x="1858" fg:w="2"/><text x="47.2523%" y="367.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (1 samples, 0.03%)</title><rect x="47.0276%" y="341" width="0.0253%" height="15" fill="rgb(243,137,7)" fg:x="1859" fg:w="1"/><text x="47.2776%" y="351.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="47.0276%" y="325" width="0.0253%" height="15" fill="rgb(230,79,13)" fg:x="1859" fg:w="1"/><text x="47.2776%" y="335.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.03%)</title><rect x="47.1541%" y="149" width="0.0253%" height="15" fill="rgb(247,105,23)" fg:x="1864" fg:w="1"/><text x="47.4041%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (11 samples, 0.28%)</title><rect x="47.0529%" y="181" width="0.2783%" height="15" fill="rgb(223,179,41)" fg:x="1860" fg:w="11"/><text x="47.3029%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (8 samples, 0.20%)</title><rect x="47.1288%" y="165" width="0.2024%" height="15" fill="rgb(218,9,34)" fg:x="1863" fg:w="8"/><text x="47.3788%" y="175.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (6 samples, 0.15%)</title><rect x="47.1794%" y="149" width="0.1518%" height="15" fill="rgb(222,106,8)" fg:x="1865" fg:w="6"/><text x="47.4294%" y="159.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (1 samples, 0.03%)</title><rect x="47.3058%" y="133" width="0.0253%" height="15" fill="rgb(211,220,0)" fg:x="1870" fg:w="1"/><text x="47.5558%" y="143.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (12 samples, 0.30%)</title><rect x="47.0529%" y="405" width="0.3036%" height="15" fill="rgb(229,52,16)" fg:x="1860" fg:w="12"/><text x="47.3029%" y="415.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (12 samples, 0.30%)</title><rect x="47.0529%" y="389" width="0.3036%" height="15" fill="rgb(212,155,18)" fg:x="1860" fg:w="12"/><text x="47.3029%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (12 samples, 0.30%)</title><rect x="47.0529%" y="373" width="0.3036%" height="15" fill="rgb(242,21,14)" fg:x="1860" fg:w="12"/><text x="47.3029%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12 samples, 0.30%)</title><rect x="47.0529%" y="357" width="0.3036%" height="15" fill="rgb(222,19,48)" fg:x="1860" fg:w="12"/><text x="47.3029%" y="367.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12 samples, 0.30%)</title><rect x="47.0529%" y="341" width="0.3036%" height="15" fill="rgb(232,45,27)" fg:x="1860" fg:w="12"/><text x="47.3029%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (12 samples, 0.30%)</title><rect x="47.0529%" y="325" width="0.3036%" height="15" fill="rgb(249,103,42)" fg:x="1860" fg:w="12"/><text x="47.3029%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (12 samples, 0.30%)</title><rect x="47.0529%" y="309" width="0.3036%" height="15" fill="rgb(246,81,33)" fg:x="1860" fg:w="12"/><text x="47.3029%" y="319.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (12 samples, 0.30%)</title><rect x="47.0529%" y="293" width="0.3036%" height="15" fill="rgb(252,33,42)" fg:x="1860" fg:w="12"/><text x="47.3029%" y="303.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (12 samples, 0.30%)</title><rect x="47.0529%" y="277" width="0.3036%" height="15" fill="rgb(209,212,41)" fg:x="1860" fg:w="12"/><text x="47.3029%" y="287.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (12 samples, 0.30%)</title><rect x="47.0529%" y="261" width="0.3036%" height="15" fill="rgb(207,154,6)" fg:x="1860" fg:w="12"/><text x="47.3029%" y="271.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (12 samples, 0.30%)</title><rect x="47.0529%" y="245" width="0.3036%" height="15" fill="rgb(223,64,47)" fg:x="1860" fg:w="12"/><text x="47.3029%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (12 samples, 0.30%)</title><rect x="47.0529%" y="229" width="0.3036%" height="15" fill="rgb(211,161,38)" fg:x="1860" fg:w="12"/><text x="47.3029%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12 samples, 0.30%)</title><rect x="47.0529%" y="213" width="0.3036%" height="15" fill="rgb(219,138,40)" fg:x="1860" fg:w="12"/><text x="47.3029%" y="223.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12 samples, 0.30%)</title><rect x="47.0529%" y="197" width="0.3036%" height="15" fill="rgb(241,228,46)" fg:x="1860" fg:w="12"/><text x="47.3029%" y="207.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (1 samples, 0.03%)</title><rect x="47.3311%" y="181" width="0.0253%" height="15" fill="rgb(223,209,38)" fg:x="1871" fg:w="1"/><text x="47.5811%" y="191.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="47.4070%" y="389" width="0.0253%" height="15" fill="rgb(236,164,45)" fg:x="1874" fg:w="1"/><text x="47.6570%" y="399.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.03%)</title><rect x="47.4323%" y="389" width="0.0253%" height="15" fill="rgb(231,15,5)" fg:x="1875" fg:w="1"/><text x="47.6823%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="47.5082%" y="133" width="0.0253%" height="15" fill="rgb(252,35,15)" fg:x="1878" fg:w="1"/><text x="47.7582%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.03%)</title><rect x="47.5335%" y="133" width="0.0253%" height="15" fill="rgb(248,181,18)" fg:x="1879" fg:w="1"/><text x="47.7835%" y="143.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.03%)</title><rect x="47.5588%" y="133" width="0.0253%" height="15" fill="rgb(233,39,42)" fg:x="1880" fg:w="1"/><text x="47.8088%" y="143.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (9 samples, 0.23%)</title><rect x="47.4576%" y="213" width="0.2277%" height="15" fill="rgb(238,110,33)" fg:x="1876" fg:w="9"/><text x="47.7076%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.23%)</title><rect x="47.4576%" y="197" width="0.2277%" height="15" fill="rgb(233,195,10)" fg:x="1876" fg:w="9"/><text x="47.7076%" y="207.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.23%)</title><rect x="47.4576%" y="181" width="0.2277%" height="15" fill="rgb(254,105,3)" fg:x="1876" fg:w="9"/><text x="47.7076%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (9 samples, 0.23%)</title><rect x="47.4576%" y="165" width="0.2277%" height="15" fill="rgb(221,225,9)" fg:x="1876" fg:w="9"/><text x="47.7076%" y="175.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (8 samples, 0.20%)</title><rect x="47.4829%" y="149" width="0.2024%" height="15" fill="rgb(224,227,45)" fg:x="1877" fg:w="8"/><text x="47.7329%" y="159.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (4 samples, 0.10%)</title><rect x="47.5841%" y="133" width="0.1012%" height="15" fill="rgb(229,198,43)" fg:x="1881" fg:w="4"/><text x="47.8341%" y="143.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (1 samples, 0.03%)</title><rect x="47.6600%" y="117" width="0.0253%" height="15" fill="rgb(206,209,35)" fg:x="1884" fg:w="1"/><text x="47.9100%" y="127.50"></text></g><g><title>chacha20::backends::avx2::inner (42 samples, 1.06%)</title><rect x="46.6481%" y="437" width="1.0625%" height="15" fill="rgb(245,195,53)" fg:x="1844" fg:w="42"/><text x="46.8981%" y="447.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (42 samples, 1.06%)</title><rect x="46.6481%" y="421" width="1.0625%" height="15" fill="rgb(240,92,26)" fg:x="1844" fg:w="42"/><text x="46.8981%" y="431.50"></text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;generic_array::GenericArray&lt;u8,N&gt;,M&gt;&gt;::xor_in2out (14 samples, 0.35%)</title><rect x="47.3564%" y="405" width="0.3542%" height="15" fill="rgb(207,40,23)" fg:x="1872" fg:w="14"/><text x="47.6064%" y="415.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (10 samples, 0.25%)</title><rect x="47.4576%" y="389" width="0.2530%" height="15" fill="rgb(223,111,35)" fg:x="1876" fg:w="10"/><text x="47.7076%" y="399.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (10 samples, 0.25%)</title><rect x="47.4576%" y="373" width="0.2530%" height="15" fill="rgb(229,147,28)" fg:x="1876" fg:w="10"/><text x="47.7076%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (10 samples, 0.25%)</title><rect x="47.4576%" y="357" width="0.2530%" height="15" fill="rgb(211,29,28)" fg:x="1876" fg:w="10"/><text x="47.7076%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10 samples, 0.25%)</title><rect x="47.4576%" y="341" width="0.2530%" height="15" fill="rgb(228,72,33)" fg:x="1876" fg:w="10"/><text x="47.7076%" y="351.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10 samples, 0.25%)</title><rect x="47.4576%" y="325" width="0.2530%" height="15" fill="rgb(205,214,31)" fg:x="1876" fg:w="10"/><text x="47.7076%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (10 samples, 0.25%)</title><rect x="47.4576%" y="309" width="0.2530%" height="15" fill="rgb(224,111,15)" fg:x="1876" fg:w="10"/><text x="47.7076%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (10 samples, 0.25%)</title><rect x="47.4576%" y="293" width="0.2530%" height="15" fill="rgb(253,21,26)" fg:x="1876" fg:w="10"/><text x="47.7076%" y="303.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (10 samples, 0.25%)</title><rect x="47.4576%" y="277" width="0.2530%" height="15" fill="rgb(245,139,43)" fg:x="1876" fg:w="10"/><text x="47.7076%" y="287.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (10 samples, 0.25%)</title><rect x="47.4576%" y="261" width="0.2530%" height="15" fill="rgb(252,170,7)" fg:x="1876" fg:w="10"/><text x="47.7076%" y="271.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (10 samples, 0.25%)</title><rect x="47.4576%" y="245" width="0.2530%" height="15" fill="rgb(231,118,14)" fg:x="1876" fg:w="10"/><text x="47.7076%" y="255.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (10 samples, 0.25%)</title><rect x="47.4576%" y="229" width="0.2530%" height="15" fill="rgb(238,83,0)" fg:x="1876" fg:w="10"/><text x="47.7076%" y="239.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (1 samples, 0.03%)</title><rect x="47.6853%" y="213" width="0.0253%" height="15" fill="rgb(221,39,39)" fg:x="1885" fg:w="1"/><text x="47.9353%" y="223.50"></text></g><g><title>chacha20::backends::avx2::rounds (1 samples, 0.03%)</title><rect x="47.7106%" y="437" width="0.0253%" height="15" fill="rgb(222,119,46)" fg:x="1886" fg:w="1"/><text x="47.9606%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="47.7359%" y="437" width="0.0253%" height="15" fill="rgb(222,165,49)" fg:x="1887" fg:w="1"/><text x="47.9859%" y="447.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (46 samples, 1.16%)</title><rect x="46.6481%" y="533" width="1.1637%" height="15" fill="rgb(219,113,52)" fg:x="1844" fg:w="46"/><text x="46.8981%" y="543.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (46 samples, 1.16%)</title><rect x="46.6481%" y="517" width="1.1637%" height="15" fill="rgb(214,7,15)" fg:x="1844" fg:w="46"/><text x="46.8981%" y="527.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (46 samples, 1.16%)</title><rect x="46.6481%" y="501" width="1.1637%" height="15" fill="rgb(235,32,4)" fg:x="1844" fg:w="46"/><text x="46.8981%" y="511.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (46 samples, 1.16%)</title><rect x="46.6481%" y="485" width="1.1637%" height="15" fill="rgb(238,90,54)" fg:x="1844" fg:w="46"/><text x="46.8981%" y="495.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (46 samples, 1.16%)</title><rect x="46.6481%" y="469" width="1.1637%" height="15" fill="rgb(213,208,19)" fg:x="1844" fg:w="46"/><text x="46.8981%" y="479.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (46 samples, 1.16%)</title><rect x="46.6481%" y="453" width="1.1637%" height="15" fill="rgb(233,156,4)" fg:x="1844" fg:w="46"/><text x="46.8981%" y="463.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.05%)</title><rect x="47.7612%" y="437" width="0.0506%" height="15" fill="rgb(207,194,5)" fg:x="1888" fg:w="2"/><text x="48.0112%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (2 samples, 0.05%)</title><rect x="47.8118%" y="357" width="0.0506%" height="15" fill="rgb(206,111,30)" fg:x="1890" fg:w="2"/><text x="48.0618%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (4 samples, 0.10%)</title><rect x="47.8624%" y="357" width="0.1012%" height="15" fill="rgb(243,70,54)" fg:x="1892" fg:w="4"/><text x="48.1124%" y="367.50"></text></g><g><title>core::core_arch::simd::u64x4::splat (1 samples, 0.03%)</title><rect x="47.9383%" y="341" width="0.0253%" height="15" fill="rgb(242,28,8)" fg:x="1895" fg:w="1"/><text x="48.1883%" y="351.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="47.9636%" y="357" width="0.0253%" height="15" fill="rgb(219,106,18)" fg:x="1896" fg:w="1"/><text x="48.2136%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.03%)</title><rect x="47.9889%" y="357" width="0.0253%" height="15" fill="rgb(244,222,10)" fg:x="1897" fg:w="1"/><text x="48.2389%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (9 samples, 0.23%)</title><rect x="47.8118%" y="373" width="0.2277%" height="15" fill="rgb(236,179,52)" fg:x="1890" fg:w="9"/><text x="48.0618%" y="383.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (1 samples, 0.03%)</title><rect x="48.0142%" y="357" width="0.0253%" height="15" fill="rgb(213,23,39)" fg:x="1898" fg:w="1"/><text x="48.2642%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.03%)</title><rect x="48.0395%" y="373" width="0.0253%" height="15" fill="rgb(238,48,10)" fg:x="1899" fg:w="1"/><text x="48.2895%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.03%)</title><rect x="48.0395%" y="357" width="0.0253%" height="15" fill="rgb(251,196,23)" fg:x="1899" fg:w="1"/><text x="48.2895%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (2 samples, 0.05%)</title><rect x="48.0648%" y="373" width="0.0506%" height="15" fill="rgb(250,152,24)" fg:x="1900" fg:w="2"/><text x="48.3148%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.03%)</title><rect x="48.1154%" y="357" width="0.0253%" height="15" fill="rgb(209,150,17)" fg:x="1902" fg:w="1"/><text x="48.3654%" y="367.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="48.1407%" y="357" width="0.0253%" height="15" fill="rgb(234,202,34)" fg:x="1903" fg:w="1"/><text x="48.3907%" y="367.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="48.1407%" y="341" width="0.0253%" height="15" fill="rgb(253,148,53)" fg:x="1903" fg:w="1"/><text x="48.3907%" y="351.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="48.1407%" y="325" width="0.0253%" height="15" fill="rgb(218,129,16)" fg:x="1903" fg:w="1"/><text x="48.3907%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="48.1659%" y="357" width="0.0253%" height="15" fill="rgb(216,85,19)" fg:x="1904" fg:w="1"/><text x="48.4159%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.03%)</title><rect x="48.1912%" y="357" width="0.0253%" height="15" fill="rgb(235,228,7)" fg:x="1905" fg:w="1"/><text x="48.4412%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (5 samples, 0.13%)</title><rect x="48.1154%" y="373" width="0.1265%" height="15" fill="rgb(245,175,0)" fg:x="1902" fg:w="5"/><text x="48.3654%" y="383.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (1 samples, 0.03%)</title><rect x="48.2165%" y="357" width="0.0253%" height="15" fill="rgb(208,168,36)" fg:x="1906" fg:w="1"/><text x="48.4665%" y="367.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (1 samples, 0.03%)</title><rect x="48.2165%" y="341" width="0.0253%" height="15" fill="rgb(246,171,24)" fg:x="1906" fg:w="1"/><text x="48.4665%" y="351.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::decrypt_in_place_detached (64 samples, 1.62%)</title><rect x="46.6481%" y="549" width="1.6190%" height="15" fill="rgb(215,142,24)" fg:x="1844" fg:w="64"/><text x="46.8981%" y="559.50"></text></g><g><title>universal_hash::UniversalHash::update_padded (18 samples, 0.46%)</title><rect x="47.8118%" y="533" width="0.4554%" height="15" fill="rgb(250,187,7)" fg:x="1890" fg:w="18"/><text x="48.0618%" y="543.50"></text></g><g><title>universal_hash::UniversalHash::update (18 samples, 0.46%)</title><rect x="47.8118%" y="517" width="0.4554%" height="15" fill="rgb(228,66,33)" fg:x="1890" fg:w="18"/><text x="48.0618%" y="527.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (18 samples, 0.46%)</title><rect x="47.8118%" y="501" width="0.4554%" height="15" fill="rgb(234,215,21)" fg:x="1890" fg:w="18"/><text x="48.0618%" y="511.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (18 samples, 0.46%)</title><rect x="47.8118%" y="485" width="0.4554%" height="15" fill="rgb(222,191,20)" fg:x="1890" fg:w="18"/><text x="48.0618%" y="495.50"></text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (18 samples, 0.46%)</title><rect x="47.8118%" y="469" width="0.4554%" height="15" fill="rgb(245,79,54)" fg:x="1890" fg:w="18"/><text x="48.0618%" y="479.50"></text></g><g><title>&lt;poly1305::backend::avx2::State as universal_hash::UhfBackend&gt;::proc_par_blocks (18 samples, 0.46%)</title><rect x="47.8118%" y="453" width="0.4554%" height="15" fill="rgb(240,10,37)" fg:x="1890" fg:w="18"/><text x="48.0618%" y="463.50"></text></g><g><title>poly1305::backend::avx2::State::compute_par_blocks (18 samples, 0.46%)</title><rect x="47.8118%" y="437" width="0.4554%" height="15" fill="rgb(214,192,32)" fg:x="1890" fg:w="18"/><text x="48.0618%" y="447.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (18 samples, 0.46%)</title><rect x="47.8118%" y="421" width="0.4554%" height="15" fill="rgb(209,36,54)" fg:x="1890" fg:w="18"/><text x="48.0618%" y="431.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (18 samples, 0.46%)</title><rect x="47.8118%" y="405" width="0.4554%" height="15" fill="rgb(220,10,11)" fg:x="1890" fg:w="18"/><text x="48.0618%" y="415.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (18 samples, 0.46%)</title><rect x="47.8118%" y="389" width="0.4554%" height="15" fill="rgb(221,106,17)" fg:x="1890" fg:w="18"/><text x="48.0618%" y="399.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (1 samples, 0.03%)</title><rect x="48.2418%" y="373" width="0.0253%" height="15" fill="rgb(251,142,44)" fg:x="1907" fg:w="1"/><text x="48.4918%" y="383.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (1 samples, 0.03%)</title><rect x="48.2418%" y="357" width="0.0253%" height="15" fill="rgb(238,13,15)" fg:x="1907" fg:w="1"/><text x="48.4918%" y="367.50"></text></g><g><title>&lt;tftp::client::encryption_socket::EncryptionBoundSocket&lt;S,Rng&gt; as tftp::socket::Socket&gt;::recv_from (66 samples, 1.67%)</title><rect x="46.6481%" y="613" width="1.6696%" height="15" fill="rgb(208,107,27)" fg:x="1844" fg:w="66"/><text x="46.8981%" y="623.50"></text></g><g><title>tftp::encrypted_packet::EncryptedPacket::decrypt (66 samples, 1.67%)</title><rect x="46.6481%" y="597" width="1.6696%" height="15" fill="rgb(205,136,37)" fg:x="1844" fg:w="66"/><text x="46.8981%" y="607.50"></text></g><g><title>tftp::encryption::Encryptor&lt;R&gt;::decrypt (66 samples, 1.67%)</title><rect x="46.6481%" y="581" width="1.6696%" height="15" fill="rgb(250,205,27)" fg:x="1844" fg:w="66"/><text x="46.8981%" y="591.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (66 samples, 1.67%)</title><rect x="46.6481%" y="565" width="1.6696%" height="15" fill="rgb(210,80,43)" fg:x="1844" fg:w="66"/><text x="46.8981%" y="575.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (2 samples, 0.05%)</title><rect x="48.2671%" y="549" width="0.0506%" height="15" fill="rgb(247,160,36)" fg:x="1908" fg:w="2"/><text x="48.5171%" y="559.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (2 samples, 0.05%)</title><rect x="48.2671%" y="533" width="0.0506%" height="15" fill="rgb(234,13,49)" fg:x="1908" fg:w="2"/><text x="48.5171%" y="543.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (2 samples, 0.05%)</title><rect x="48.2671%" y="517" width="0.0506%" height="15" fill="rgb(234,122,0)" fg:x="1908" fg:w="2"/><text x="48.5171%" y="527.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (2 samples, 0.05%)</title><rect x="48.2671%" y="501" width="0.0506%" height="15" fill="rgb(207,146,38)" fg:x="1908" fg:w="2"/><text x="48.5171%" y="511.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (2 samples, 0.05%)</title><rect x="48.2671%" y="485" width="0.0506%" height="15" fill="rgb(207,177,25)" fg:x="1908" fg:w="2"/><text x="48.5171%" y="495.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (2 samples, 0.05%)</title><rect x="48.2671%" y="469" width="0.0506%" height="15" fill="rgb(211,178,42)" fg:x="1908" fg:w="2"/><text x="48.5171%" y="479.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (2 samples, 0.05%)</title><rect x="48.2671%" y="453" width="0.0506%" height="15" fill="rgb(230,69,54)" fg:x="1908" fg:w="2"/><text x="48.5171%" y="463.50"></text></g><g><title>chacha20::backends::avx2::inner (2 samples, 0.05%)</title><rect x="48.2671%" y="437" width="0.0506%" height="15" fill="rgb(214,135,41)" fg:x="1908" fg:w="2"/><text x="48.5171%" y="447.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (1 samples, 0.03%)</title><rect x="48.2924%" y="421" width="0.0253%" height="15" fill="rgb(237,67,25)" fg:x="1909" fg:w="1"/><text x="48.5424%" y="431.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.03%)</title><rect x="48.2924%" y="405" width="0.0253%" height="15" fill="rgb(222,189,50)" fg:x="1909" fg:w="1"/><text x="48.5424%" y="415.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.03%)</title><rect x="48.2924%" y="389" width="0.0253%" height="15" fill="rgb(245,148,34)" fg:x="1909" fg:w="1"/><text x="48.5424%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.03%)</title><rect x="48.2924%" y="373" width="0.0253%" height="15" fill="rgb(222,29,6)" fg:x="1909" fg:w="1"/><text x="48.5424%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="48.2924%" y="357" width="0.0253%" height="15" fill="rgb(221,189,43)" fg:x="1909" fg:w="1"/><text x="48.5424%" y="367.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="48.2924%" y="341" width="0.0253%" height="15" fill="rgb(207,36,27)" fg:x="1909" fg:w="1"/><text x="48.5424%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.03%)</title><rect x="48.2924%" y="325" width="0.0253%" height="15" fill="rgb(217,90,24)" fg:x="1909" fg:w="1"/><text x="48.5424%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.03%)</title><rect x="48.2924%" y="309" width="0.0253%" height="15" fill="rgb(224,66,35)" fg:x="1909" fg:w="1"/><text x="48.5424%" y="319.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (1 samples, 0.03%)</title><rect x="48.2924%" y="293" width="0.0253%" height="15" fill="rgb(221,13,50)" fg:x="1909" fg:w="1"/><text x="48.5424%" y="303.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (1 samples, 0.03%)</title><rect x="48.2924%" y="277" width="0.0253%" height="15" fill="rgb(236,68,49)" fg:x="1909" fg:w="1"/><text x="48.5424%" y="287.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.03%)</title><rect x="48.2924%" y="261" width="0.0253%" height="15" fill="rgb(229,146,28)" fg:x="1909" fg:w="1"/><text x="48.5424%" y="271.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.03%)</title><rect x="48.2924%" y="245" width="0.0253%" height="15" fill="rgb(225,31,38)" fg:x="1909" fg:w="1"/><text x="48.5424%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.03%)</title><rect x="48.2924%" y="229" width="0.0253%" height="15" fill="rgb(250,208,3)" fg:x="1909" fg:w="1"/><text x="48.5424%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="48.2924%" y="213" width="0.0253%" height="15" fill="rgb(246,54,23)" fg:x="1909" fg:w="1"/><text x="48.5424%" y="223.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="48.2924%" y="197" width="0.0253%" height="15" fill="rgb(243,76,11)" fg:x="1909" fg:w="1"/><text x="48.5424%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.03%)</title><rect x="48.2924%" y="181" width="0.0253%" height="15" fill="rgb(245,21,50)" fg:x="1909" fg:w="1"/><text x="48.5424%" y="191.50"></text></g><g><title>core::ptr::write (1 samples, 0.03%)</title><rect x="48.2924%" y="165" width="0.0253%" height="15" fill="rgb(228,9,43)" fg:x="1909" fg:w="1"/><text x="48.5424%" y="175.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="48.3177%" y="437" width="0.0506%" height="15" fill="rgb(208,100,47)" fg:x="1910" fg:w="2"/><text x="48.5677%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.03%)</title><rect x="48.3430%" y="421" width="0.0253%" height="15" fill="rgb(232,26,8)" fg:x="1911" fg:w="1"/><text x="48.5930%" y="431.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_par_ks_blocks (8 samples, 0.20%)</title><rect x="48.3683%" y="405" width="0.2024%" height="15" fill="rgb(216,166,38)" fg:x="1912" fg:w="8"/><text x="48.6183%" y="415.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.03%)</title><rect x="48.8237%" y="149" width="0.0253%" height="15" fill="rgb(251,202,51)" fg:x="1930" fg:w="1"/><text x="49.0737%" y="159.50"></text></g><g><title>core::slice::raw::from_raw_parts (1 samples, 0.03%)</title><rect x="49.2790%" y="133" width="0.0253%" height="15" fill="rgb(254,216,34)" fg:x="1948" fg:w="1"/><text x="49.5290%" y="143.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.03%)</title><rect x="49.2790%" y="117" width="0.0253%" height="15" fill="rgb(251,32,27)" fg:x="1948" fg:w="1"/><text x="49.5290%" y="127.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::cast (1 samples, 0.03%)</title><rect x="49.2790%" y="101" width="0.0253%" height="15" fill="rgb(208,127,28)" fg:x="1948" fg:w="1"/><text x="49.5290%" y="111.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (19 samples, 0.48%)</title><rect x="48.8490%" y="149" width="0.4806%" height="15" fill="rgb(224,137,22)" fg:x="1931" fg:w="19"/><text x="49.0990%" y="159.50"></text></g><g><title>universal_hash::UniversalHash::update_padded (1 samples, 0.03%)</title><rect x="49.3043%" y="133" width="0.0253%" height="15" fill="rgb(254,70,32)" fg:x="1949" fg:w="1"/><text x="49.5543%" y="143.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.03%)</title><rect x="49.3296%" y="149" width="0.0253%" height="15" fill="rgb(229,75,37)" fg:x="1950" fg:w="1"/><text x="49.5796%" y="159.50"></text></g><g><title>core::slice::raw::from_raw_parts (1 samples, 0.03%)</title><rect x="49.3549%" y="149" width="0.0253%" height="15" fill="rgb(252,64,23)" fg:x="1951" fg:w="1"/><text x="49.6049%" y="159.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.03%)</title><rect x="49.3549%" y="133" width="0.0253%" height="15" fill="rgb(232,162,48)" fg:x="1951" fg:w="1"/><text x="49.6049%" y="143.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (1 samples, 0.03%)</title><rect x="49.3549%" y="117" width="0.0253%" height="15" fill="rgb(246,160,12)" fg:x="1951" fg:w="1"/><text x="49.6049%" y="127.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (33 samples, 0.83%)</title><rect x="48.5707%" y="405" width="0.8348%" height="15" fill="rgb(247,166,0)" fg:x="1920" fg:w="33"/><text x="48.8207%" y="415.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (33 samples, 0.83%)</title><rect x="48.5707%" y="389" width="0.8348%" height="15" fill="rgb(249,219,21)" fg:x="1920" fg:w="33"/><text x="48.8207%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (33 samples, 0.83%)</title><rect x="48.5707%" y="373" width="0.8348%" height="15" fill="rgb(205,209,3)" fg:x="1920" fg:w="33"/><text x="48.8207%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (33 samples, 0.83%)</title><rect x="48.5707%" y="357" width="0.8348%" height="15" fill="rgb(243,44,1)" fg:x="1920" fg:w="33"/><text x="48.8207%" y="367.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (33 samples, 0.83%)</title><rect x="48.5707%" y="341" width="0.8348%" height="15" fill="rgb(206,159,16)" fg:x="1920" fg:w="33"/><text x="48.8207%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (33 samples, 0.83%)</title><rect x="48.5707%" y="325" width="0.8348%" height="15" fill="rgb(244,77,30)" fg:x="1920" fg:w="33"/><text x="48.8207%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (33 samples, 0.83%)</title><rect x="48.5707%" y="309" width="0.8348%" height="15" fill="rgb(218,69,12)" fg:x="1920" fg:w="33"/><text x="48.8207%" y="319.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (33 samples, 0.83%)</title><rect x="48.5707%" y="293" width="0.8348%" height="15" fill="rgb(212,87,7)" fg:x="1920" fg:w="33"/><text x="48.8207%" y="303.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (33 samples, 0.83%)</title><rect x="48.5707%" y="277" width="0.8348%" height="15" fill="rgb(245,114,25)" fg:x="1920" fg:w="33"/><text x="48.8207%" y="287.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (33 samples, 0.83%)</title><rect x="48.5707%" y="261" width="0.8348%" height="15" fill="rgb(210,61,42)" fg:x="1920" fg:w="33"/><text x="48.8207%" y="271.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (33 samples, 0.83%)</title><rect x="48.5707%" y="245" width="0.8348%" height="15" fill="rgb(211,52,33)" fg:x="1920" fg:w="33"/><text x="48.8207%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (33 samples, 0.83%)</title><rect x="48.5707%" y="229" width="0.8348%" height="15" fill="rgb(234,58,33)" fg:x="1920" fg:w="33"/><text x="48.8207%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (33 samples, 0.83%)</title><rect x="48.5707%" y="213" width="0.8348%" height="15" fill="rgb(220,115,36)" fg:x="1920" fg:w="33"/><text x="48.8207%" y="223.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (33 samples, 0.83%)</title><rect x="48.5707%" y="197" width="0.8348%" height="15" fill="rgb(243,153,54)" fg:x="1920" fg:w="33"/><text x="48.8207%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (33 samples, 0.83%)</title><rect x="48.5707%" y="181" width="0.8348%" height="15" fill="rgb(251,47,18)" fg:x="1920" fg:w="33"/><text x="48.8207%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (26 samples, 0.66%)</title><rect x="48.7478%" y="165" width="0.6577%" height="15" fill="rgb(242,102,42)" fg:x="1927" fg:w="26"/><text x="48.9978%" y="175.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (1 samples, 0.03%)</title><rect x="49.3802%" y="149" width="0.0253%" height="15" fill="rgb(234,31,38)" fg:x="1952" fg:w="1"/><text x="49.6302%" y="159.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (1 samples, 0.03%)</title><rect x="49.3802%" y="133" width="0.0253%" height="15" fill="rgb(221,117,51)" fg:x="1952" fg:w="1"/><text x="49.6302%" y="143.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (1 samples, 0.03%)</title><rect x="49.3802%" y="117" width="0.0253%" height="15" fill="rgb(212,20,18)" fg:x="1952" fg:w="1"/><text x="49.6302%" y="127.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.13%)</title><rect x="49.6585%" y="389" width="0.1265%" height="15" fill="rgb(245,133,36)" fg:x="1963" fg:w="5"/><text x="49.9085%" y="399.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (2 samples, 0.05%)</title><rect x="49.7850%" y="389" width="0.0506%" height="15" fill="rgb(212,6,19)" fg:x="1968" fg:w="2"/><text x="50.0350%" y="399.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.03%)</title><rect x="49.9621%" y="133" width="0.0253%" height="15" fill="rgb(218,1,36)" fg:x="1975" fg:w="1"/><text x="50.2121%" y="143.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.03%)</title><rect x="50.2656%" y="117" width="0.0253%" height="15" fill="rgb(246,84,54)" fg:x="1987" fg:w="1"/><text x="50.5156%" y="127.50"></text></g><g><title>__memcpy_avx_unaligned (1 samples, 0.03%)</title><rect x="50.2909%" y="117" width="0.0253%" height="15" fill="rgb(242,110,6)" fg:x="1988" fg:w="1"/><text x="50.5409%" y="127.50"></text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;generic_array::GenericArray&lt;u8,N&gt;,M&gt;&gt;::xor_in2out (37 samples, 0.94%)</title><rect x="49.4055%" y="405" width="0.9360%" height="15" fill="rgb(214,47,5)" fg:x="1953" fg:w="37"/><text x="49.6555%" y="415.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (20 samples, 0.51%)</title><rect x="49.8356%" y="389" width="0.5059%" height="15" fill="rgb(218,159,25)" fg:x="1970" fg:w="20"/><text x="50.0856%" y="399.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (20 samples, 0.51%)</title><rect x="49.8356%" y="373" width="0.5059%" height="15" fill="rgb(215,211,28)" fg:x="1970" fg:w="20"/><text x="50.0856%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (20 samples, 0.51%)</title><rect x="49.8356%" y="357" width="0.5059%" height="15" fill="rgb(238,59,32)" fg:x="1970" fg:w="20"/><text x="50.0856%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (20 samples, 0.51%)</title><rect x="49.8356%" y="341" width="0.5059%" height="15" fill="rgb(226,82,3)" fg:x="1970" fg:w="20"/><text x="50.0856%" y="351.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (20 samples, 0.51%)</title><rect x="49.8356%" y="325" width="0.5059%" height="15" fill="rgb(240,164,32)" fg:x="1970" fg:w="20"/><text x="50.0856%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (20 samples, 0.51%)</title><rect x="49.8356%" y="309" width="0.5059%" height="15" fill="rgb(232,46,7)" fg:x="1970" fg:w="20"/><text x="50.0856%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (20 samples, 0.51%)</title><rect x="49.8356%" y="293" width="0.5059%" height="15" fill="rgb(229,129,53)" fg:x="1970" fg:w="20"/><text x="50.0856%" y="303.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (20 samples, 0.51%)</title><rect x="49.8356%" y="277" width="0.5059%" height="15" fill="rgb(234,188,29)" fg:x="1970" fg:w="20"/><text x="50.0856%" y="287.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (20 samples, 0.51%)</title><rect x="49.8356%" y="261" width="0.5059%" height="15" fill="rgb(246,141,4)" fg:x="1970" fg:w="20"/><text x="50.0856%" y="271.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (20 samples, 0.51%)</title><rect x="49.8356%" y="245" width="0.5059%" height="15" fill="rgb(229,23,39)" fg:x="1970" fg:w="20"/><text x="50.0856%" y="255.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (20 samples, 0.51%)</title><rect x="49.8356%" y="229" width="0.5059%" height="15" fill="rgb(206,12,3)" fg:x="1970" fg:w="20"/><text x="50.0856%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (20 samples, 0.51%)</title><rect x="49.8356%" y="213" width="0.5059%" height="15" fill="rgb(252,226,20)" fg:x="1970" fg:w="20"/><text x="50.0856%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (20 samples, 0.51%)</title><rect x="49.8356%" y="197" width="0.5059%" height="15" fill="rgb(216,123,35)" fg:x="1970" fg:w="20"/><text x="50.0856%" y="207.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (20 samples, 0.51%)</title><rect x="49.8356%" y="181" width="0.5059%" height="15" fill="rgb(212,68,40)" fg:x="1970" fg:w="20"/><text x="50.0856%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (20 samples, 0.51%)</title><rect x="49.8356%" y="165" width="0.5059%" height="15" fill="rgb(254,125,32)" fg:x="1970" fg:w="20"/><text x="50.0856%" y="175.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (15 samples, 0.38%)</title><rect x="49.9621%" y="149" width="0.3795%" height="15" fill="rgb(253,97,22)" fg:x="1975" fg:w="15"/><text x="50.2121%" y="159.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (14 samples, 0.35%)</title><rect x="49.9874%" y="133" width="0.3542%" height="15" fill="rgb(241,101,14)" fg:x="1976" fg:w="14"/><text x="50.2374%" y="143.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.03%)</title><rect x="50.3162%" y="117" width="0.0253%" height="15" fill="rgb(238,103,29)" fg:x="1989" fg:w="1"/><text x="50.5662%" y="127.50"></text></g><g><title>chacha20::backends::avx2::inner (79 samples, 2.00%)</title><rect x="48.3683%" y="437" width="1.9985%" height="15" fill="rgb(233,195,47)" fg:x="1912" fg:w="79"/><text x="48.6183%" y="447.50">c..</text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (79 samples, 2.00%)</title><rect x="48.3683%" y="421" width="1.9985%" height="15" fill="rgb(246,218,30)" fg:x="1912" fg:w="79"/><text x="48.6183%" y="431.50">&lt;..</text></g><g><title>inout::inout_buf::InOutBuf&lt;T&gt;::into_chunks (1 samples, 0.03%)</title><rect x="50.3415%" y="405" width="0.0253%" height="15" fill="rgb(219,145,47)" fg:x="1990" fg:w="1"/><text x="50.5915%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.03%)</title><rect x="50.3415%" y="389" width="0.0253%" height="15" fill="rgb(243,12,26)" fg:x="1990" fg:w="1"/><text x="50.5915%" y="399.50"></text></g><g><title>chacha20::backends::avx2::rounds (4 samples, 0.10%)</title><rect x="50.3668%" y="437" width="0.1012%" height="15" fill="rgb(214,87,16)" fg:x="1991" fg:w="4"/><text x="50.6168%" y="447.50"></text></g><g><title>core::array::iter::&lt;impl core::iter::traits::collect::IntoIterator for [T: N]&gt;::into_iter (1 samples, 0.03%)</title><rect x="50.4680%" y="437" width="0.0253%" height="15" fill="rgb(208,99,42)" fg:x="1995" fg:w="1"/><text x="50.7180%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (5 samples, 0.13%)</title><rect x="50.4933%" y="437" width="0.1265%" height="15" fill="rgb(253,99,2)" fg:x="1996" fg:w="5"/><text x="50.7433%" y="447.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (1 samples, 0.03%)</title><rect x="50.6198%" y="437" width="0.0253%" height="15" fill="rgb(220,168,23)" fg:x="2001" fg:w="1"/><text x="50.8698%" y="447.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi32 (1 samples, 0.03%)</title><rect x="50.6198%" y="421" width="0.0253%" height="15" fill="rgb(242,38,24)" fg:x="2001" fg:w="1"/><text x="50.8698%" y="431.50"></text></g><g><title>core::core_arch::simd::i32x8::new (1 samples, 0.03%)</title><rect x="50.6198%" y="405" width="0.0253%" height="15" fill="rgb(225,182,9)" fg:x="2001" fg:w="1"/><text x="50.8698%" y="415.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (95 samples, 2.40%)</title><rect x="48.3177%" y="533" width="2.4032%" height="15" fill="rgb(243,178,37)" fg:x="1910" fg:w="95"/><text x="48.5677%" y="543.50">ci..</text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (95 samples, 2.40%)</title><rect x="48.3177%" y="517" width="2.4032%" height="15" fill="rgb(232,139,19)" fg:x="1910" fg:w="95"/><text x="48.5677%" y="527.50">ci..</text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (95 samples, 2.40%)</title><rect x="48.3177%" y="501" width="2.4032%" height="15" fill="rgb(225,201,24)" fg:x="1910" fg:w="95"/><text x="48.5677%" y="511.50">&lt;c..</text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (95 samples, 2.40%)</title><rect x="48.3177%" y="485" width="2.4032%" height="15" fill="rgb(221,47,46)" fg:x="1910" fg:w="95"/><text x="48.5677%" y="495.50">ci..</text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (95 samples, 2.40%)</title><rect x="48.3177%" y="469" width="2.4032%" height="15" fill="rgb(249,23,13)" fg:x="1910" fg:w="95"/><text x="48.5677%" y="479.50">&lt;c..</text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (95 samples, 2.40%)</title><rect x="48.3177%" y="453" width="2.4032%" height="15" fill="rgb(219,9,5)" fg:x="1910" fg:w="95"/><text x="48.5677%" y="463.50">&lt;c..</text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (3 samples, 0.08%)</title><rect x="50.6451%" y="437" width="0.0759%" height="15" fill="rgb(254,171,16)" fg:x="2002" fg:w="3"/><text x="50.8951%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (2 samples, 0.05%)</title><rect x="50.7210%" y="373" width="0.0506%" height="15" fill="rgb(230,171,20)" fg:x="2005" fg:w="2"/><text x="50.9710%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.03%)</title><rect x="50.7463%" y="357" width="0.0253%" height="15" fill="rgb(210,71,41)" fg:x="2006" fg:w="1"/><text x="50.9963%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.03%)</title><rect x="50.7716%" y="373" width="0.0253%" height="15" fill="rgb(206,173,20)" fg:x="2007" fg:w="1"/><text x="51.0216%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="50.7716%" y="357" width="0.0253%" height="15" fill="rgb(233,88,34)" fg:x="2007" fg:w="1"/><text x="51.0216%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (5 samples, 0.13%)</title><rect x="50.7969%" y="373" width="0.1265%" height="15" fill="rgb(223,209,46)" fg:x="2008" fg:w="5"/><text x="51.0469%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (2 samples, 0.05%)</title><rect x="50.8728%" y="357" width="0.0506%" height="15" fill="rgb(250,43,18)" fg:x="2011" fg:w="2"/><text x="51.1228%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.05%)</title><rect x="50.9233%" y="373" width="0.0506%" height="15" fill="rgb(208,13,10)" fg:x="2013" fg:w="2"/><text x="51.1733%" y="383.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::encrypt_in_place_detached (106 samples, 2.68%)</title><rect x="48.3177%" y="549" width="2.6815%" height="15" fill="rgb(212,200,36)" fg:x="1910" fg:w="106"/><text x="48.5677%" y="559.50">ch..</text></g><g><title>universal_hash::UniversalHash::update_padded (11 samples, 0.28%)</title><rect x="50.7210%" y="533" width="0.2783%" height="15" fill="rgb(225,90,30)" fg:x="2005" fg:w="11"/><text x="50.9710%" y="543.50"></text></g><g><title>universal_hash::UniversalHash::update (11 samples, 0.28%)</title><rect x="50.7210%" y="517" width="0.2783%" height="15" fill="rgb(236,182,39)" fg:x="2005" fg:w="11"/><text x="50.9710%" y="527.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (11 samples, 0.28%)</title><rect x="50.7210%" y="501" width="0.2783%" height="15" fill="rgb(212,144,35)" fg:x="2005" fg:w="11"/><text x="50.9710%" y="511.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (11 samples, 0.28%)</title><rect x="50.7210%" y="485" width="0.2783%" height="15" fill="rgb(228,63,44)" fg:x="2005" fg:w="11"/><text x="50.9710%" y="495.50"></text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (11 samples, 0.28%)</title><rect x="50.7210%" y="469" width="0.2783%" height="15" fill="rgb(228,109,6)" fg:x="2005" fg:w="11"/><text x="50.9710%" y="479.50"></text></g><g><title>&lt;poly1305::backend::avx2::State as universal_hash::UhfBackend&gt;::proc_par_blocks (11 samples, 0.28%)</title><rect x="50.7210%" y="453" width="0.2783%" height="15" fill="rgb(238,117,24)" fg:x="2005" fg:w="11"/><text x="50.9710%" y="463.50"></text></g><g><title>poly1305::backend::avx2::State::compute_par_blocks (11 samples, 0.28%)</title><rect x="50.7210%" y="437" width="0.2783%" height="15" fill="rgb(242,26,26)" fg:x="2005" fg:w="11"/><text x="50.9710%" y="447.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (11 samples, 0.28%)</title><rect x="50.7210%" y="421" width="0.2783%" height="15" fill="rgb(221,92,48)" fg:x="2005" fg:w="11"/><text x="50.9710%" y="431.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (11 samples, 0.28%)</title><rect x="50.7210%" y="405" width="0.2783%" height="15" fill="rgb(209,209,32)" fg:x="2005" fg:w="11"/><text x="50.9710%" y="415.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (11 samples, 0.28%)</title><rect x="50.7210%" y="389" width="0.2783%" height="15" fill="rgb(221,70,22)" fg:x="2005" fg:w="11"/><text x="50.9710%" y="399.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (1 samples, 0.03%)</title><rect x="50.9739%" y="373" width="0.0253%" height="15" fill="rgb(248,145,5)" fg:x="2015" fg:w="1"/><text x="51.2239%" y="383.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (1 samples, 0.03%)</title><rect x="50.9739%" y="357" width="0.0253%" height="15" fill="rgb(226,116,26)" fg:x="2015" fg:w="1"/><text x="51.2239%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (4 samples, 0.10%)</title><rect x="51.0245%" y="181" width="0.1012%" height="15" fill="rgb(244,5,17)" fg:x="2017" fg:w="4"/><text x="51.2745%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (3 samples, 0.08%)</title><rect x="51.0498%" y="165" width="0.0759%" height="15" fill="rgb(252,159,33)" fg:x="2018" fg:w="3"/><text x="51.2998%" y="175.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (3 samples, 0.08%)</title><rect x="51.0498%" y="149" width="0.0759%" height="15" fill="rgb(206,71,0)" fg:x="2018" fg:w="3"/><text x="51.2998%" y="159.50"></text></g><g><title>chacha20::backends::avx2::inner (6 samples, 0.15%)</title><rect x="50.9992%" y="437" width="0.1518%" height="15" fill="rgb(233,118,54)" fg:x="2016" fg:w="6"/><text x="51.2492%" y="447.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (5 samples, 0.13%)</title><rect x="51.0245%" y="421" width="0.1265%" height="15" fill="rgb(234,83,48)" fg:x="2017" fg:w="5"/><text x="51.2745%" y="431.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (5 samples, 0.13%)</title><rect x="51.0245%" y="405" width="0.1265%" height="15" fill="rgb(228,3,54)" fg:x="2017" fg:w="5"/><text x="51.2745%" y="415.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (5 samples, 0.13%)</title><rect x="51.0245%" y="389" width="0.1265%" height="15" fill="rgb(226,155,13)" fg:x="2017" fg:w="5"/><text x="51.2745%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5 samples, 0.13%)</title><rect x="51.0245%" y="373" width="0.1265%" height="15" fill="rgb(241,28,37)" fg:x="2017" fg:w="5"/><text x="51.2745%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.13%)</title><rect x="51.0245%" y="357" width="0.1265%" height="15" fill="rgb(233,93,10)" fg:x="2017" fg:w="5"/><text x="51.2745%" y="367.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.13%)</title><rect x="51.0245%" y="341" width="0.1265%" height="15" fill="rgb(225,113,19)" fg:x="2017" fg:w="5"/><text x="51.2745%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (5 samples, 0.13%)</title><rect x="51.0245%" y="325" width="0.1265%" height="15" fill="rgb(241,2,18)" fg:x="2017" fg:w="5"/><text x="51.2745%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (5 samples, 0.13%)</title><rect x="51.0245%" y="309" width="0.1265%" height="15" fill="rgb(228,207,21)" fg:x="2017" fg:w="5"/><text x="51.2745%" y="319.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (5 samples, 0.13%)</title><rect x="51.0245%" y="293" width="0.1265%" height="15" fill="rgb(213,211,35)" fg:x="2017" fg:w="5"/><text x="51.2745%" y="303.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (5 samples, 0.13%)</title><rect x="51.0245%" y="277" width="0.1265%" height="15" fill="rgb(209,83,10)" fg:x="2017" fg:w="5"/><text x="51.2745%" y="287.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (5 samples, 0.13%)</title><rect x="51.0245%" y="261" width="0.1265%" height="15" fill="rgb(209,164,1)" fg:x="2017" fg:w="5"/><text x="51.2745%" y="271.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (5 samples, 0.13%)</title><rect x="51.0245%" y="245" width="0.1265%" height="15" fill="rgb(213,184,43)" fg:x="2017" fg:w="5"/><text x="51.2745%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5 samples, 0.13%)</title><rect x="51.0245%" y="229" width="0.1265%" height="15" fill="rgb(231,61,34)" fg:x="2017" fg:w="5"/><text x="51.2745%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.13%)</title><rect x="51.0245%" y="213" width="0.1265%" height="15" fill="rgb(235,75,3)" fg:x="2017" fg:w="5"/><text x="51.2745%" y="223.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.13%)</title><rect x="51.0245%" y="197" width="0.1265%" height="15" fill="rgb(220,106,47)" fg:x="2017" fg:w="5"/><text x="51.2745%" y="207.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.03%)</title><rect x="51.1257%" y="181" width="0.0253%" height="15" fill="rgb(210,196,33)" fg:x="2021" fg:w="1"/><text x="51.3757%" y="191.50"></text></g><g><title>&lt;tftp::client::encryption_socket::EncryptionBoundSocket&lt;S,Rng&gt; as tftp::socket::Socket&gt;::send_to (113 samples, 2.86%)</title><rect x="48.3177%" y="613" width="2.8586%" height="15" fill="rgb(229,154,42)" fg:x="1910" fg:w="113"/><text x="48.5677%" y="623.50">&lt;t..</text></g><g><title>tftp::encrypted_packet::EncryptedPacket::encrypt (113 samples, 2.86%)</title><rect x="48.3177%" y="597" width="2.8586%" height="15" fill="rgb(228,114,26)" fg:x="1910" fg:w="113"/><text x="48.5677%" y="607.50">tf..</text></g><g><title>tftp::encryption::Encryptor&lt;R&gt;::encrypt (113 samples, 2.86%)</title><rect x="48.3177%" y="581" width="2.8586%" height="15" fill="rgb(208,144,1)" fg:x="1910" fg:w="113"/><text x="48.5677%" y="591.50">tf..</text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::encrypt_in_place_detached (113 samples, 2.86%)</title><rect x="48.3177%" y="565" width="2.8586%" height="15" fill="rgb(239,112,37)" fg:x="1910" fg:w="113"/><text x="48.5677%" y="575.50">&lt;c..</text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (7 samples, 0.18%)</title><rect x="50.9992%" y="549" width="0.1771%" height="15" fill="rgb(210,96,50)" fg:x="2016" fg:w="7"/><text x="51.2492%" y="559.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (7 samples, 0.18%)</title><rect x="50.9992%" y="533" width="0.1771%" height="15" fill="rgb(222,178,2)" fg:x="2016" fg:w="7"/><text x="51.2492%" y="543.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (7 samples, 0.18%)</title><rect x="50.9992%" y="517" width="0.1771%" height="15" fill="rgb(226,74,18)" fg:x="2016" fg:w="7"/><text x="51.2492%" y="527.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (7 samples, 0.18%)</title><rect x="50.9992%" y="501" width="0.1771%" height="15" fill="rgb(225,67,54)" fg:x="2016" fg:w="7"/><text x="51.2492%" y="511.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (7 samples, 0.18%)</title><rect x="50.9992%" y="485" width="0.1771%" height="15" fill="rgb(251,92,32)" fg:x="2016" fg:w="7"/><text x="51.2492%" y="495.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (7 samples, 0.18%)</title><rect x="50.9992%" y="469" width="0.1771%" height="15" fill="rgb(228,149,22)" fg:x="2016" fg:w="7"/><text x="51.2492%" y="479.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (7 samples, 0.18%)</title><rect x="50.9992%" y="453" width="0.1771%" height="15" fill="rgb(243,54,13)" fg:x="2016" fg:w="7"/><text x="51.2492%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.03%)</title><rect x="51.1510%" y="437" width="0.0253%" height="15" fill="rgb(243,180,28)" fg:x="2022" fg:w="1"/><text x="51.4010%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.03%)</title><rect x="51.1510%" y="421" width="0.0253%" height="15" fill="rgb(208,167,24)" fg:x="2022" fg:w="1"/><text x="51.4010%" y="431.50"></text></g><g><title>&lt;tftp::readers::multiple_block_reader::MultipleBlockReader&lt;R&gt; as tftp::readers::block_reader::BlockReader&gt;::free_block (1 samples, 0.03%)</title><rect x="51.1763%" y="613" width="0.0253%" height="15" fill="rgb(245,73,45)" fg:x="2023" fg:w="1"/><text x="51.4263%" y="623.50"></text></g><g><title>&lt;tftp::readers::multiple_block_reader::MultipleBlockReader&lt;R&gt; as tftp::readers::block_reader::BlockReader&gt;::next (2 samples, 0.05%)</title><rect x="51.2016%" y="613" width="0.0506%" height="15" fill="rgb(237,203,48)" fg:x="2024" fg:w="2"/><text x="51.4516%" y="623.50"></text></g><g><title>&lt;tftp::socket::UdpUnboundSocket as tftp::socket::Socket&gt;::modify_interest (1 samples, 0.03%)</title><rect x="51.2522%" y="613" width="0.0253%" height="15" fill="rgb(211,197,16)" fg:x="2026" fg:w="1"/><text x="51.5022%" y="623.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (7 samples, 0.18%)</title><rect x="51.2775%" y="613" width="0.1771%" height="15" fill="rgb(243,99,51)" fg:x="2027" fg:w="7"/><text x="51.5275%" y="623.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (3 samples, 0.08%)</title><rect x="51.3787%" y="597" width="0.0759%" height="15" fill="rgb(215,123,29)" fg:x="2031" fg:w="3"/><text x="51.6287%" y="607.50"></text></g><g><title>[tftp] (1 samples, 0.03%)</title><rect x="51.4546%" y="613" width="0.0253%" height="15" fill="rgb(239,186,37)" fg:x="2034" fg:w="1"/><text x="51.7046%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_blend_epi32 (1 samples, 0.03%)</title><rect x="51.4546%" y="597" width="0.0253%" height="15" fill="rgb(252,136,39)" fg:x="2034" fg:w="1"/><text x="51.7046%" y="607.50"></text></g><g><title>__memcpy_avx_unaligned (3 samples, 0.08%)</title><rect x="51.4799%" y="613" width="0.0759%" height="15" fill="rgb(223,213,32)" fg:x="2035" fg:w="3"/><text x="51.7299%" y="623.50"></text></g><g><title>__memcpy_avx_unaligned_erms (4 samples, 0.10%)</title><rect x="51.5558%" y="613" width="0.1012%" height="15" fill="rgb(233,115,5)" fg:x="2038" fg:w="4"/><text x="51.8058%" y="623.50"></text></g><g><title>_init (2 samples, 0.05%)</title><rect x="51.6570%" y="613" width="0.0506%" height="15" fill="rgb(207,226,44)" fg:x="2042" fg:w="2"/><text x="51.9070%" y="623.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (4 samples, 0.10%)</title><rect x="51.7076%" y="613" width="0.1012%" height="15" fill="rgb(208,126,0)" fg:x="2044" fg:w="4"/><text x="51.9576%" y="623.50"></text></g><g><title>chacha20::xchacha::hchacha (7 samples, 0.18%)</title><rect x="51.8088%" y="613" width="0.1771%" height="15" fill="rgb(244,66,21)" fg:x="2048" fg:w="7"/><text x="52.0588%" y="623.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="51.9605%" y="597" width="0.0253%" height="15" fill="rgb(222,97,12)" fg:x="2054" fg:w="1"/><text x="52.2105%" y="607.50"></text></g><g><title>chacha20::xchacha::quarter_round (4 samples, 0.10%)</title><rect x="51.9858%" y="613" width="0.1012%" height="15" fill="rgb(219,213,19)" fg:x="2055" fg:w="4"/><text x="52.2358%" y="623.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::authenticate_lengths (1 samples, 0.03%)</title><rect x="52.0870%" y="613" width="0.0253%" height="15" fill="rgb(252,169,30)" fg:x="2059" fg:w="1"/><text x="52.3370%" y="623.50"></text></g><g><title>core::array::&lt;impl core::iter::traits::collect::IntoIterator for &amp;mut [T: N]&gt;::into_iter (2 samples, 0.05%)</title><rect x="52.1123%" y="613" width="0.0506%" height="15" fill="rgb(206,32,51)" fg:x="2060" fg:w="2"/><text x="52.3623%" y="623.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (2 samples, 0.05%)</title><rect x="52.1123%" y="597" width="0.0506%" height="15" fill="rgb(250,172,42)" fg:x="2060" fg:w="2"/><text x="52.3623%" y="607.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (2 samples, 0.05%)</title><rect x="52.1123%" y="581" width="0.0506%" height="15" fill="rgb(209,34,43)" fg:x="2060" fg:w="2"/><text x="52.3623%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.03%)</title><rect x="52.1376%" y="565" width="0.0253%" height="15" fill="rgb(223,11,35)" fg:x="2061" fg:w="1"/><text x="52.3876%" y="575.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (1 samples, 0.03%)</title><rect x="52.1629%" y="613" width="0.0253%" height="15" fill="rgb(251,219,26)" fg:x="2062" fg:w="1"/><text x="52.4129%" y="623.50"></text></g><g><title>core::convert::num::ptr_try_from_impls::&lt;impl core::convert::TryFrom&lt;usize&gt; for u64&gt;::try_from (1 samples, 0.03%)</title><rect x="52.1882%" y="613" width="0.0253%" height="15" fill="rgb(231,119,3)" fg:x="2063" fg:w="1"/><text x="52.4382%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (17 samples, 0.43%)</title><rect x="52.2135%" y="613" width="0.4301%" height="15" fill="rgb(216,97,11)" fg:x="2064" fg:w="17"/><text x="52.4635%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (14 samples, 0.35%)</title><rect x="52.6436%" y="613" width="0.3542%" height="15" fill="rgb(223,59,9)" fg:x="2081" fg:w="14"/><text x="52.8936%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (2 samples, 0.05%)</title><rect x="52.9977%" y="613" width="0.0506%" height="15" fill="rgb(233,93,31)" fg:x="2095" fg:w="2"/><text x="53.2477%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_inserti128_si256 (1 samples, 0.03%)</title><rect x="53.0483%" y="613" width="0.0253%" height="15" fill="rgb(239,81,33)" fg:x="2097" fg:w="1"/><text x="53.2983%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (4 samples, 0.10%)</title><rect x="53.0736%" y="613" width="0.1012%" height="15" fill="rgb(213,120,34)" fg:x="2098" fg:w="4"/><text x="53.3236%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (1 samples, 0.03%)</title><rect x="53.1748%" y="613" width="0.0253%" height="15" fill="rgb(243,49,53)" fg:x="2102" fg:w="1"/><text x="53.4248%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (4 samples, 0.10%)</title><rect x="53.2001%" y="613" width="0.1012%" height="15" fill="rgb(247,216,33)" fg:x="2103" fg:w="4"/><text x="53.4501%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.03%)</title><rect x="53.3013%" y="613" width="0.0253%" height="15" fill="rgb(226,26,14)" fg:x="2107" fg:w="1"/><text x="53.5513%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (6 samples, 0.15%)</title><rect x="53.3266%" y="613" width="0.1518%" height="15" fill="rgb(215,49,53)" fg:x="2108" fg:w="6"/><text x="53.5766%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi64 (2 samples, 0.05%)</title><rect x="53.4784%" y="613" width="0.0506%" height="15" fill="rgb(245,162,40)" fg:x="2114" fg:w="2"/><text x="53.7284%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (14 samples, 0.35%)</title><rect x="53.5290%" y="613" width="0.3542%" height="15" fill="rgb(229,68,17)" fg:x="2116" fg:w="14"/><text x="53.7790%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (8 samples, 0.20%)</title><rect x="53.8831%" y="613" width="0.2024%" height="15" fill="rgb(213,182,10)" fg:x="2130" fg:w="8"/><text x="54.1331%" y="623.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_loadu_si256 (1 samples, 0.03%)</title><rect x="54.0855%" y="613" width="0.0253%" height="15" fill="rgb(245,125,30)" fg:x="2138" fg:w="1"/><text x="54.3355%" y="623.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (2 samples, 0.05%)</title><rect x="54.1108%" y="613" width="0.0506%" height="15" fill="rgb(232,202,2)" fg:x="2139" fg:w="2"/><text x="54.3608%" y="623.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi32 (1 samples, 0.03%)</title><rect x="54.1361%" y="597" width="0.0253%" height="15" fill="rgb(237,140,51)" fg:x="2140" fg:w="1"/><text x="54.3861%" y="607.50"></text></g><g><title>core::core_arch::simd::i32x8::new (1 samples, 0.03%)</title><rect x="54.1361%" y="581" width="0.0253%" height="15" fill="rgb(236,157,25)" fg:x="2140" fg:w="1"/><text x="54.3861%" y="591.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (2 samples, 0.05%)</title><rect x="54.1614%" y="613" width="0.0506%" height="15" fill="rgb(219,209,0)" fg:x="2141" fg:w="2"/><text x="54.4114%" y="623.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (3 samples, 0.08%)</title><rect x="54.2120%" y="613" width="0.0759%" height="15" fill="rgb(240,116,54)" fg:x="2143" fg:w="3"/><text x="54.4620%" y="623.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (6 samples, 0.15%)</title><rect x="54.2879%" y="613" width="0.1518%" height="15" fill="rgb(216,10,36)" fg:x="2146" fg:w="6"/><text x="54.5379%" y="623.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (24 samples, 0.61%)</title><rect x="54.4397%" y="613" width="0.6071%" height="15" fill="rgb(222,72,44)" fg:x="2152" fg:w="24"/><text x="54.6897%" y="623.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (9 samples, 0.23%)</title><rect x="55.0468%" y="613" width="0.2277%" height="15" fill="rgb(232,159,9)" fg:x="2176" fg:w="9"/><text x="55.2968%" y="623.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (7 samples, 0.18%)</title><rect x="55.2745%" y="613" width="0.1771%" height="15" fill="rgb(210,39,32)" fg:x="2185" fg:w="7"/><text x="55.5245%" y="623.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (4 samples, 0.10%)</title><rect x="55.4516%" y="613" width="0.1012%" height="15" fill="rgb(216,194,45)" fg:x="2192" fg:w="4"/><text x="55.7016%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_storeu_si128 (2 samples, 0.05%)</title><rect x="55.5527%" y="613" width="0.0506%" height="15" fill="rgb(218,18,35)" fg:x="2196" fg:w="2"/><text x="55.8027%" y="623.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.03%)</title><rect x="55.6033%" y="613" width="0.0253%" height="15" fill="rgb(207,83,51)" fg:x="2198" fg:w="1"/><text x="55.8533%" y="623.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (7 samples, 0.18%)</title><rect x="55.6286%" y="613" width="0.1771%" height="15" fill="rgb(225,63,43)" fg:x="2199" fg:w="7"/><text x="55.8786%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.03%)</title><rect x="55.8057%" y="613" width="0.0253%" height="15" fill="rgb(207,57,36)" fg:x="2206" fg:w="1"/><text x="56.0557%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (33 samples, 0.83%)</title><rect x="55.8310%" y="613" width="0.8348%" height="15" fill="rgb(216,99,33)" fg:x="2207" fg:w="33"/><text x="56.0810%" y="623.50"></text></g><g><title>core::mem::forget (1 samples, 0.03%)</title><rect x="56.6658%" y="613" width="0.0253%" height="15" fill="rgb(225,42,16)" fg:x="2240" fg:w="1"/><text x="56.9158%" y="623.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.03%)</title><rect x="56.6911%" y="613" width="0.0253%" height="15" fill="rgb(220,201,45)" fg:x="2241" fg:w="1"/><text x="56.9411%" y="623.50"></text></g><g><title>core::ops::range::Range&lt;Idx&gt;::contains (1 samples, 0.03%)</title><rect x="56.7164%" y="613" width="0.0253%" height="15" fill="rgb(225,33,4)" fg:x="2242" fg:w="1"/><text x="56.9664%" y="623.50"></text></g><g><title>core::ops::range::RangeBounds::contains (1 samples, 0.03%)</title><rect x="56.7417%" y="613" width="0.0253%" height="15" fill="rgb(224,33,50)" fg:x="2243" fg:w="1"/><text x="56.9917%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;chacha20poly1305::cipher::Cipher&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;chacha20::xchacha::XChaChaCore&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm,typenum::bit::B1&gt;,typenum::bit::B0&gt;,typenum::bit::B1&gt;,typenum::bit::B0&gt;&gt;&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="56.7670%" y="613" width="0.0253%" height="15" fill="rgb(246,198,51)" fg:x="2244" fg:w="1"/><text x="57.0170%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;chacha20::xchacha::XChaChaCore&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm,typenum::bit::B1&gt;,typenum::bit::B0&gt;,typenum::bit::B1&gt;,typenum::bit::B0&gt;&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="56.7923%" y="613" width="0.0253%" height="15" fill="rgb(205,22,4)" fg:x="2245" fg:w="1"/><text x="57.0423%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;tftp::packet::PacketType,tftp::error::PacketError&gt;&gt; (1 samples, 0.03%)</title><rect x="56.8176%" y="613" width="0.0253%" height="15" fill="rgb(206,3,8)" fg:x="2246" fg:w="1"/><text x="57.0676%" y="623.50"></text></g><g><title>core::ptr::read (1 samples, 0.03%)</title><rect x="56.8429%" y="613" width="0.0253%" height="15" fill="rgb(251,23,15)" fg:x="2247" fg:w="1"/><text x="57.0929%" y="623.50"></text></g><g><title>core::ptr::write (8 samples, 0.20%)</title><rect x="56.8682%" y="613" width="0.2024%" height="15" fill="rgb(252,88,28)" fg:x="2248" fg:w="8"/><text x="57.1182%" y="623.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (2 samples, 0.05%)</title><rect x="57.2477%" y="581" width="0.0506%" height="15" fill="rgb(212,127,14)" fg:x="2263" fg:w="2"/><text x="57.4977%" y="591.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (11 samples, 0.28%)</title><rect x="57.0706%" y="613" width="0.2783%" height="15" fill="rgb(247,145,37)" fg:x="2256" fg:w="11"/><text x="57.3206%" y="623.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (9 samples, 0.23%)</title><rect x="57.1212%" y="597" width="0.2277%" height="15" fill="rgb(209,117,53)" fg:x="2258" fg:w="9"/><text x="57.3712%" y="607.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::as_mut_ptr (2 samples, 0.05%)</title><rect x="57.2983%" y="581" width="0.0506%" height="15" fill="rgb(212,90,42)" fg:x="2265" fg:w="2"/><text x="57.5483%" y="591.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at (1 samples, 0.03%)</title><rect x="57.3488%" y="613" width="0.0253%" height="15" fill="rgb(218,164,37)" fg:x="2267" fg:w="1"/><text x="57.5988%" y="623.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::cast (2 samples, 0.05%)</title><rect x="57.6524%" y="581" width="0.0506%" height="15" fill="rgb(246,65,34)" fg:x="2279" fg:w="2"/><text x="57.9024%" y="591.50"></text></g><g><title>core::slice::raw::from_raw_parts (49 samples, 1.24%)</title><rect x="57.3741%" y="613" width="1.2396%" height="15" fill="rgb(231,100,33)" fg:x="2268" fg:w="49"/><text x="57.6241%" y="623.50"></text></g><g><title>core::ptr::slice_from_raw_parts (38 samples, 0.96%)</title><rect x="57.6524%" y="597" width="0.9613%" height="15" fill="rgb(228,126,14)" fg:x="2279" fg:w="38"/><text x="57.9024%" y="607.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (36 samples, 0.91%)</title><rect x="57.7030%" y="581" width="0.9107%" height="15" fill="rgb(215,173,21)" fg:x="2281" fg:w="36"/><text x="57.9530%" y="591.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (23 samples, 0.58%)</title><rect x="58.6390%" y="581" width="0.5818%" height="15" fill="rgb(210,6,40)" fg:x="2318" fg:w="23"/><text x="58.8890%" y="591.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (25 samples, 0.63%)</title><rect x="58.6137%" y="613" width="0.6324%" height="15" fill="rgb(212,48,18)" fg:x="2317" fg:w="25"/><text x="58.8637%" y="623.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (24 samples, 0.61%)</title><rect x="58.6390%" y="597" width="0.6071%" height="15" fill="rgb(230,214,11)" fg:x="2318" fg:w="24"/><text x="58.8890%" y="607.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::cast (1 samples, 0.03%)</title><rect x="59.2208%" y="581" width="0.0253%" height="15" fill="rgb(254,105,39)" fg:x="2341" fg:w="1"/><text x="59.4708%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.03%)</title><rect x="59.2461%" y="613" width="0.0253%" height="15" fill="rgb(245,158,5)" fg:x="2342" fg:w="1"/><text x="59.4961%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.03%)</title><rect x="59.2714%" y="613" width="0.0253%" height="15" fill="rgb(249,208,11)" fg:x="2343" fg:w="1"/><text x="59.5214%" y="623.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (2 samples, 0.05%)</title><rect x="59.2967%" y="613" width="0.0506%" height="15" fill="rgb(210,39,28)" fg:x="2344" fg:w="2"/><text x="59.5467%" y="623.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (1 samples, 0.03%)</title><rect x="59.3220%" y="597" width="0.0253%" height="15" fill="rgb(211,56,53)" fg:x="2345" fg:w="1"/><text x="59.5720%" y="607.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (8 samples, 0.20%)</title><rect x="59.3473%" y="613" width="0.2024%" height="15" fill="rgb(226,201,30)" fg:x="2346" fg:w="8"/><text x="59.5973%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove (1 samples, 0.03%)</title><rect x="59.5497%" y="613" width="0.0253%" height="15" fill="rgb(239,101,34)" fg:x="2354" fg:w="1"/><text x="59.7997%" y="623.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::read (1 samples, 0.03%)</title><rect x="59.5497%" y="597" width="0.0253%" height="15" fill="rgb(226,209,5)" fg:x="2354" fg:w="1"/><text x="59.7997%" y="607.50"></text></g><g><title>poly1305::backend::avx2::State::compute_par_blocks (1 samples, 0.03%)</title><rect x="59.5750%" y="613" width="0.0253%" height="15" fill="rgb(250,105,47)" fg:x="2355" fg:w="1"/><text x="59.8250%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (2 samples, 0.05%)</title><rect x="59.6762%" y="549" width="0.0506%" height="15" fill="rgb(230,72,3)" fg:x="2359" fg:w="2"/><text x="59.9262%" y="559.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.03%)</title><rect x="59.7015%" y="533" width="0.0253%" height="15" fill="rgb(232,218,39)" fg:x="2360" fg:w="1"/><text x="59.9515%" y="543.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (1 samples, 0.03%)</title><rect x="59.7268%" y="549" width="0.0253%" height="15" fill="rgb(248,166,6)" fg:x="2361" fg:w="1"/><text x="59.9768%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (5 samples, 0.13%)</title><rect x="59.6509%" y="565" width="0.1265%" height="15" fill="rgb(247,89,20)" fg:x="2358" fg:w="5"/><text x="59.9009%" y="575.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="59.7521%" y="549" width="0.0253%" height="15" fill="rgb(248,130,54)" fg:x="2362" fg:w="1"/><text x="60.0021%" y="559.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="59.7521%" y="533" width="0.0253%" height="15" fill="rgb(234,196,4)" fg:x="2362" fg:w="1"/><text x="60.0021%" y="543.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="59.7521%" y="517" width="0.0253%" height="15" fill="rgb(250,143,31)" fg:x="2362" fg:w="1"/><text x="60.0021%" y="527.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::AdditionKey as core::ops::arith::Add&lt;poly1305::backend::avx2::helpers::Aligned130&gt;&gt;::add::propagate_carry (1 samples, 0.03%)</title><rect x="59.7774%" y="549" width="0.0253%" height="15" fill="rgb(211,110,34)" fg:x="2363" fg:w="1"/><text x="60.0274%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.03%)</title><rect x="59.8027%" y="549" width="0.0253%" height="15" fill="rgb(215,124,48)" fg:x="2364" fg:w="1"/><text x="60.0527%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (3 samples, 0.08%)</title><rect x="59.7774%" y="565" width="0.0759%" height="15" fill="rgb(216,46,13)" fg:x="2363" fg:w="3"/><text x="60.0274%" y="575.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="59.8280%" y="549" width="0.0253%" height="15" fill="rgb(205,184,25)" fg:x="2365" fg:w="1"/><text x="60.0780%" y="559.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="59.8280%" y="533" width="0.0253%" height="15" fill="rgb(228,1,10)" fg:x="2365" fg:w="1"/><text x="60.0780%" y="543.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="59.8280%" y="517" width="0.0253%" height="15" fill="rgb(213,116,27)" fg:x="2365" fg:w="1"/><text x="60.0780%" y="527.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_blend_epi32 (1 samples, 0.03%)</title><rect x="59.8533%" y="565" width="0.0253%" height="15" fill="rgb(241,95,50)" fg:x="2366" fg:w="1"/><text x="60.1033%" y="575.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::AdditionKey as core::ops::arith::Add&lt;poly1305::backend::avx2::helpers::Aligned130&gt;&gt;::add::propagate_carry (1 samples, 0.03%)</title><rect x="59.9798%" y="549" width="0.0253%" height="15" fill="rgb(238,48,32)" fg:x="2371" fg:w="1"/><text x="60.2298%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.03%)</title><rect x="60.0051%" y="549" width="0.0253%" height="15" fill="rgb(235,113,49)" fg:x="2372" fg:w="1"/><text x="60.2551%" y="559.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (1 samples, 0.03%)</title><rect x="60.0304%" y="549" width="0.0253%" height="15" fill="rgb(205,127,43)" fg:x="2373" fg:w="1"/><text x="60.2804%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (8 samples, 0.20%)</title><rect x="59.8786%" y="565" width="0.2024%" height="15" fill="rgb(250,162,2)" fg:x="2367" fg:w="8"/><text x="60.1286%" y="575.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="60.0557%" y="549" width="0.0253%" height="15" fill="rgb(220,13,41)" fg:x="2374" fg:w="1"/><text x="60.3057%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (2 samples, 0.05%)</title><rect x="60.0810%" y="565" width="0.0506%" height="15" fill="rgb(249,221,25)" fg:x="2375" fg:w="2"/><text x="60.3310%" y="575.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.03%)</title><rect x="60.1062%" y="549" width="0.0253%" height="15" fill="rgb(215,208,19)" fg:x="2376" fg:w="1"/><text x="60.3562%" y="559.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (2 samples, 0.05%)</title><rect x="60.1315%" y="565" width="0.0506%" height="15" fill="rgb(236,175,2)" fg:x="2377" fg:w="2"/><text x="60.3815%" y="575.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi32 (1 samples, 0.03%)</title><rect x="60.1568%" y="549" width="0.0253%" height="15" fill="rgb(241,52,2)" fg:x="2378" fg:w="1"/><text x="60.4068%" y="559.50"></text></g><g><title>core::core_arch::simd::i32x8::new (1 samples, 0.03%)</title><rect x="60.1568%" y="533" width="0.0253%" height="15" fill="rgb(248,140,14)" fg:x="2378" fg:w="1"/><text x="60.4068%" y="543.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="60.1821%" y="565" width="0.0253%" height="15" fill="rgb(253,22,42)" fg:x="2379" fg:w="1"/><text x="60.4321%" y="575.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="60.1821%" y="549" width="0.0253%" height="15" fill="rgb(234,61,47)" fg:x="2379" fg:w="1"/><text x="60.4321%" y="559.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="60.1821%" y="533" width="0.0253%" height="15" fill="rgb(208,226,15)" fg:x="2379" fg:w="1"/><text x="60.4321%" y="543.50"></text></g><g><title>core::core_arch::simd::i8x32::new (1 samples, 0.03%)</title><rect x="60.1821%" y="517" width="0.0253%" height="15" fill="rgb(217,221,4)" fg:x="2379" fg:w="1"/><text x="60.4321%" y="527.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::AdditionKey as core::ops::arith::Add&lt;poly1305::backend::avx2::helpers::Aligned130&gt;&gt;::add::propagate_carry (26 samples, 0.66%)</title><rect x="59.6003%" y="581" width="0.6577%" height="15" fill="rgb(212,174,34)" fg:x="2356" fg:w="26"/><text x="59.8503%" y="591.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.05%)</title><rect x="60.2074%" y="565" width="0.0506%" height="15" fill="rgb(253,83,4)" fg:x="2380" fg:w="2"/><text x="60.4574%" y="575.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="60.2580%" y="565" width="0.0253%" height="15" fill="rgb(250,195,49)" fg:x="2382" fg:w="1"/><text x="60.5080%" y="575.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (2 samples, 0.05%)</title><rect x="60.2833%" y="565" width="0.0506%" height="15" fill="rgb(241,192,25)" fg:x="2383" fg:w="2"/><text x="60.5333%" y="575.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="60.3086%" y="549" width="0.0253%" height="15" fill="rgb(208,124,10)" fg:x="2384" fg:w="1"/><text x="60.5586%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (2 samples, 0.05%)</title><rect x="60.3339%" y="565" width="0.0506%" height="15" fill="rgb(222,33,0)" fg:x="2385" fg:w="2"/><text x="60.5839%" y="575.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srlv_epi32 (1 samples, 0.03%)</title><rect x="60.3845%" y="565" width="0.0253%" height="15" fill="rgb(234,209,28)" fg:x="2387" fg:w="1"/><text x="60.6345%" y="575.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::AdditionKey as core::ops::arith::Add&lt;poly1305::backend::avx2::helpers::Aligned130&gt;&gt;::add::propagate_carry_32 (7 samples, 0.18%)</title><rect x="60.2580%" y="581" width="0.1771%" height="15" fill="rgb(224,11,23)" fg:x="2382" fg:w="7"/><text x="60.5080%" y="591.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="60.4098%" y="565" width="0.0253%" height="15" fill="rgb(232,99,1)" fg:x="2388" fg:w="1"/><text x="60.6598%" y="575.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (1 samples, 0.03%)</title><rect x="60.4351%" y="581" width="0.0253%" height="15" fill="rgb(237,95,45)" fg:x="2389" fg:w="1"/><text x="60.6851%" y="591.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (1 samples, 0.03%)</title><rect x="60.4351%" y="565" width="0.0253%" height="15" fill="rgb(208,109,11)" fg:x="2389" fg:w="1"/><text x="60.6851%" y="575.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.03%)</title><rect x="60.4604%" y="581" width="0.0253%" height="15" fill="rgb(216,190,48)" fg:x="2390" fg:w="1"/><text x="60.7104%" y="591.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.03%)</title><rect x="60.4604%" y="565" width="0.0253%" height="15" fill="rgb(251,171,36)" fg:x="2390" fg:w="1"/><text x="60.7104%" y="575.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="60.4857%" y="581" width="0.0253%" height="15" fill="rgb(230,62,22)" fg:x="2391" fg:w="1"/><text x="60.7357%" y="591.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="60.5110%" y="565" width="0.0253%" height="15" fill="rgb(225,114,35)" fg:x="2392" fg:w="1"/><text x="60.7610%" y="575.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_sub_epi32 (2 samples, 0.05%)</title><rect x="60.5110%" y="581" width="0.0506%" height="15" fill="rgb(215,118,42)" fg:x="2392" fg:w="2"/><text x="60.7610%" y="591.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (1 samples, 0.03%)</title><rect x="60.5363%" y="565" width="0.0253%" height="15" fill="rgb(243,119,21)" fg:x="2393" fg:w="1"/><text x="60.7863%" y="575.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (1 samples, 0.03%)</title><rect x="60.5616%" y="581" width="0.0253%" height="15" fill="rgb(252,177,53)" fg:x="2394" fg:w="1"/><text x="60.8116%" y="591.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi32 (1 samples, 0.03%)</title><rect x="60.5616%" y="565" width="0.0253%" height="15" fill="rgb(237,209,29)" fg:x="2394" fg:w="1"/><text x="60.8116%" y="575.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="60.5869%" y="581" width="0.0253%" height="15" fill="rgb(212,65,23)" fg:x="2395" fg:w="1"/><text x="60.8369%" y="591.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="60.5869%" y="565" width="0.0253%" height="15" fill="rgb(230,222,46)" fg:x="2395" fg:w="1"/><text x="60.8369%" y="575.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="60.5869%" y="549" width="0.0253%" height="15" fill="rgb(215,135,32)" fg:x="2395" fg:w="1"/><text x="60.8369%" y="559.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::AdditionKey as core::ops::arith::Add&lt;poly1305::backend::avx2::helpers::Aligned130&gt;&gt;::add (43 samples, 1.09%)</title><rect x="59.6003%" y="597" width="1.0878%" height="15" fill="rgb(246,101,22)" fg:x="2356" fg:w="43"/><text x="59.8503%" y="607.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (3 samples, 0.08%)</title><rect x="60.6122%" y="581" width="0.0759%" height="15" fill="rgb(206,107,13)" fg:x="2396" fg:w="3"/><text x="60.8622%" y="591.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.03%)</title><rect x="60.6881%" y="581" width="0.0253%" height="15" fill="rgb(250,100,44)" fg:x="2399" fg:w="1"/><text x="60.9381%" y="591.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.03%)</title><rect x="60.7134%" y="581" width="0.0253%" height="15" fill="rgb(231,147,38)" fg:x="2400" fg:w="1"/><text x="60.9634%" y="591.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (3 samples, 0.08%)</title><rect x="60.7387%" y="581" width="0.0759%" height="15" fill="rgb(229,8,40)" fg:x="2401" fg:w="3"/><text x="60.9887%" y="591.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.03%)</title><rect x="60.8146%" y="581" width="0.0253%" height="15" fill="rgb(221,135,30)" fg:x="2404" fg:w="1"/><text x="61.0646%" y="591.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="60.8652%" y="549" width="0.0253%" height="15" fill="rgb(249,193,18)" fg:x="2406" fg:w="1"/><text x="61.1152%" y="559.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (1 samples, 0.03%)</title><rect x="60.8652%" y="533" width="0.0253%" height="15" fill="rgb(209,133,39)" fg:x="2406" fg:w="1"/><text x="61.1152%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (2 samples, 0.05%)</title><rect x="60.8905%" y="549" width="0.0506%" height="15" fill="rgb(232,100,14)" fg:x="2407" fg:w="2"/><text x="61.1405%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.03%)</title><rect x="60.9158%" y="533" width="0.0253%" height="15" fill="rgb(224,185,1)" fg:x="2408" fg:w="1"/><text x="61.1658%" y="543.50"></text></g><g><title>core::core_arch::simd::u64x4::splat (1 samples, 0.03%)</title><rect x="60.9917%" y="533" width="0.0253%" height="15" fill="rgb(223,139,8)" fg:x="2411" fg:w="1"/><text x="61.2417%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (2 samples, 0.05%)</title><rect x="61.0169%" y="533" width="0.0506%" height="15" fill="rgb(232,213,38)" fg:x="2412" fg:w="2"/><text x="61.2669%" y="543.50"></text></g><g><title>core::core_arch::simd::u64x4::splat (1 samples, 0.03%)</title><rect x="61.0422%" y="517" width="0.0253%" height="15" fill="rgb(207,94,22)" fg:x="2413" fg:w="1"/><text x="61.2922%" y="527.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="61.0675%" y="533" width="0.0253%" height="15" fill="rgb(219,183,54)" fg:x="2414" fg:w="1"/><text x="61.3175%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (7 samples, 0.18%)</title><rect x="60.9411%" y="549" width="0.1771%" height="15" fill="rgb(216,185,54)" fg:x="2409" fg:w="7"/><text x="61.1911%" y="559.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.03%)</title><rect x="61.0928%" y="533" width="0.0253%" height="15" fill="rgb(254,217,39)" fg:x="2415" fg:w="1"/><text x="61.3428%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (1 samples, 0.03%)</title><rect x="61.1434%" y="533" width="0.0253%" height="15" fill="rgb(240,178,23)" fg:x="2417" fg:w="1"/><text x="61.3934%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi64 (1 samples, 0.03%)</title><rect x="61.1687%" y="533" width="0.0253%" height="15" fill="rgb(218,11,47)" fg:x="2418" fg:w="1"/><text x="61.4187%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (4 samples, 0.10%)</title><rect x="61.1181%" y="549" width="0.1012%" height="15" fill="rgb(218,51,51)" fg:x="2416" fg:w="4"/><text x="61.3681%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (1 samples, 0.03%)</title><rect x="61.1940%" y="533" width="0.0253%" height="15" fill="rgb(238,126,27)" fg:x="2419" fg:w="1"/><text x="61.4440%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.03%)</title><rect x="61.2193%" y="549" width="0.0253%" height="15" fill="rgb(249,202,22)" fg:x="2420" fg:w="1"/><text x="61.4693%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_unpackhi_epi32 (1 samples, 0.03%)</title><rect x="61.2446%" y="549" width="0.0253%" height="15" fill="rgb(254,195,49)" fg:x="2421" fg:w="1"/><text x="61.4946%" y="559.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="61.2446%" y="533" width="0.0253%" height="15" fill="rgb(208,123,14)" fg:x="2421" fg:w="1"/><text x="61.4946%" y="543.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (1 samples, 0.03%)</title><rect x="61.2699%" y="549" width="0.0253%" height="15" fill="rgb(224,200,8)" fg:x="2422" fg:w="1"/><text x="61.5199%" y="559.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi32 (1 samples, 0.03%)</title><rect x="61.2699%" y="533" width="0.0253%" height="15" fill="rgb(217,61,36)" fg:x="2422" fg:w="1"/><text x="61.5199%" y="543.50"></text></g><g><title>core::core_arch::simd::i32x8::new (1 samples, 0.03%)</title><rect x="61.2699%" y="517" width="0.0253%" height="15" fill="rgb(206,35,45)" fg:x="2422" fg:w="1"/><text x="61.5199%" y="527.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="61.2952%" y="549" width="0.0253%" height="15" fill="rgb(217,65,33)" fg:x="2423" fg:w="1"/><text x="61.5452%" y="559.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="61.3205%" y="549" width="0.0253%" height="15" fill="rgb(222,158,48)" fg:x="2424" fg:w="1"/><text x="61.5705%" y="559.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="61.3458%" y="549" width="0.0253%" height="15" fill="rgb(254,2,54)" fg:x="2425" fg:w="1"/><text x="61.5958%" y="559.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::SpacedMultiplier4x130&gt;&gt;::mul (22 samples, 0.56%)</title><rect x="60.8399%" y="565" width="0.5565%" height="15" fill="rgb(250,143,38)" fg:x="2405" fg:w="22"/><text x="61.0899%" y="575.50"></text></g><g><title>poly1305::backend::avx2::State::finalize::{{closure}} (1 samples, 0.03%)</title><rect x="61.3711%" y="549" width="0.0253%" height="15" fill="rgb(248,25,0)" fg:x="2426" fg:w="1"/><text x="61.6211%" y="559.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::SpacedMultiplier4x130&gt;&gt;::mul (1 samples, 0.03%)</title><rect x="61.3711%" y="533" width="0.0253%" height="15" fill="rgb(206,152,27)" fg:x="2426" fg:w="1"/><text x="61.6211%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_blend_epi32 (1 samples, 0.03%)</title><rect x="61.3964%" y="549" width="0.0253%" height="15" fill="rgb(240,77,30)" fg:x="2427" fg:w="1"/><text x="61.6464%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.03%)</title><rect x="61.3964%" y="533" width="0.0253%" height="15" fill="rgb(231,5,3)" fg:x="2427" fg:w="1"/><text x="61.6464%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (1 samples, 0.03%)</title><rect x="61.4217%" y="549" width="0.0253%" height="15" fill="rgb(207,226,32)" fg:x="2428" fg:w="1"/><text x="61.6717%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (1 samples, 0.03%)</title><rect x="61.4217%" y="533" width="0.0253%" height="15" fill="rgb(222,207,47)" fg:x="2428" fg:w="1"/><text x="61.6717%" y="543.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="61.4470%" y="549" width="0.0253%" height="15" fill="rgb(229,115,45)" fg:x="2429" fg:w="1"/><text x="61.6970%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (1 samples, 0.03%)</title><rect x="61.4723%" y="533" width="0.0253%" height="15" fill="rgb(224,191,6)" fg:x="2430" fg:w="1"/><text x="61.7223%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (1 samples, 0.03%)</title><rect x="61.4723%" y="517" width="0.0253%" height="15" fill="rgb(230,227,24)" fg:x="2430" fg:w="1"/><text x="61.7223%" y="527.50"></text></g><g><title>poly1305::backend::avx2::helpers::adc (2 samples, 0.05%)</title><rect x="61.4723%" y="549" width="0.0506%" height="15" fill="rgb(228,80,19)" fg:x="2430" fg:w="2"/><text x="61.7223%" y="559.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.03%)</title><rect x="61.4976%" y="533" width="0.0253%" height="15" fill="rgb(247,229,0)" fg:x="2431" fg:w="1"/><text x="61.7476%" y="543.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced130::reduce (6 samples, 0.15%)</title><rect x="61.3964%" y="565" width="0.1518%" height="15" fill="rgb(237,194,15)" fg:x="2427" fg:w="6"/><text x="61.6464%" y="575.50"></text></g><g><title>poly1305::backend::avx2::helpers::red (1 samples, 0.03%)</title><rect x="61.5229%" y="549" width="0.0253%" height="15" fill="rgb(219,203,20)" fg:x="2432" fg:w="1"/><text x="61.7729%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_inserti128_si256 (1 samples, 0.03%)</title><rect x="61.5229%" y="533" width="0.0253%" height="15" fill="rgb(234,128,8)" fg:x="2432" fg:w="1"/><text x="61.7729%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_inserti128_si256 (1 samples, 0.03%)</title><rect x="61.5482%" y="549" width="0.0253%" height="15" fill="rgb(248,202,8)" fg:x="2433" fg:w="1"/><text x="61.7982%" y="559.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="61.5482%" y="533" width="0.0253%" height="15" fill="rgb(206,104,37)" fg:x="2433" fg:w="1"/><text x="61.7982%" y="543.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.03%)</title><rect x="61.5482%" y="517" width="0.0253%" height="15" fill="rgb(223,8,27)" fg:x="2433" fg:w="1"/><text x="61.7982%" y="527.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.03%)</title><rect x="61.5735%" y="549" width="0.0253%" height="15" fill="rgb(216,217,28)" fg:x="2434" fg:w="1"/><text x="61.8235%" y="559.50"></text></g><g><title>core::core_arch::simd::u64x4::splat (1 samples, 0.03%)</title><rect x="61.5735%" y="533" width="0.0253%" height="15" fill="rgb(249,199,1)" fg:x="2434" fg:w="1"/><text x="61.8235%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (1 samples, 0.03%)</title><rect x="61.5988%" y="549" width="0.0253%" height="15" fill="rgb(240,85,17)" fg:x="2435" fg:w="1"/><text x="61.8488%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_unpacklo_epi64 (1 samples, 0.03%)</title><rect x="61.6241%" y="549" width="0.0253%" height="15" fill="rgb(206,108,45)" fg:x="2436" fg:w="1"/><text x="61.8741%" y="559.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="61.6241%" y="533" width="0.0253%" height="15" fill="rgb(245,210,41)" fg:x="2436" fg:w="1"/><text x="61.8741%" y="543.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.03%)</title><rect x="61.6494%" y="549" width="0.0253%" height="15" fill="rgb(206,13,37)" fg:x="2437" fg:w="1"/><text x="61.8994%" y="559.50"></text></g><g><title>poly1305::backend::avx2::State::finalize (84 samples, 2.12%)</title><rect x="59.6003%" y="613" width="2.1250%" height="15" fill="rgb(250,61,18)" fg:x="2356" fg:w="84"/><text x="59.8503%" y="623.50">p..</text></g><g><title>core::option::Option&lt;T&gt;::map (41 samples, 1.04%)</title><rect x="60.6881%" y="597" width="1.0372%" height="15" fill="rgb(235,172,48)" fg:x="2399" fg:w="41"/><text x="60.9381%" y="607.50"></text></g><g><title>poly1305::backend::avx2::State::finalize::{{closure}} (35 samples, 0.89%)</title><rect x="60.8399%" y="581" width="0.8854%" height="15" fill="rgb(249,201,17)" fg:x="2405" fg:w="35"/><text x="61.0899%" y="591.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::sum (7 samples, 0.18%)</title><rect x="61.5482%" y="565" width="0.1771%" height="15" fill="rgb(219,208,6)" fg:x="2433" fg:w="7"/><text x="61.7982%" y="575.50"></text></g><g><title>poly1305::backend::avx2::State::finalize::{{closure}} (2 samples, 0.05%)</title><rect x="61.6747%" y="549" width="0.0506%" height="15" fill="rgb(248,31,23)" fg:x="2438" fg:w="2"/><text x="61.9247%" y="559.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::SpacedMultiplier4x130&gt;&gt;::mul (2 samples, 0.05%)</title><rect x="61.6747%" y="533" width="0.0506%" height="15" fill="rgb(245,15,42)" fg:x="2438" fg:w="2"/><text x="61.9247%" y="543.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.03%)</title><rect x="61.7253%" y="597" width="0.0253%" height="15" fill="rgb(222,217,39)" fg:x="2440" fg:w="1"/><text x="61.9753%" y="607.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi64x (1 samples, 0.03%)</title><rect x="61.7253%" y="581" width="0.0253%" height="15" fill="rgb(210,219,27)" fg:x="2440" fg:w="1"/><text x="61.9753%" y="591.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.03%)</title><rect x="61.7506%" y="581" width="0.0253%" height="15" fill="rgb(252,166,36)" fg:x="2441" fg:w="1"/><text x="62.0006%" y="591.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier as core::convert::From&lt;poly1305::backend::avx2::helpers::Aligned130&gt;&gt;::from (1 samples, 0.03%)</title><rect x="61.7506%" y="565" width="0.0253%" height="15" fill="rgb(245,132,34)" fg:x="2441" fg:w="1"/><text x="62.0006%" y="575.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute2x128_si256 (1 samples, 0.03%)</title><rect x="61.7506%" y="549" width="0.0253%" height="15" fill="rgb(236,54,3)" fg:x="2441" fg:w="1"/><text x="62.0006%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.03%)</title><rect x="61.7506%" y="533" width="0.0253%" height="15" fill="rgb(241,173,43)" fg:x="2441" fg:w="1"/><text x="62.0006%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (1 samples, 0.03%)</title><rect x="61.7759%" y="533" width="0.0253%" height="15" fill="rgb(215,190,9)" fg:x="2442" fg:w="1"/><text x="62.0259%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (2 samples, 0.05%)</title><rect x="61.7759%" y="549" width="0.0506%" height="15" fill="rgb(242,101,16)" fg:x="2442" fg:w="2"/><text x="62.0259%" y="559.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="61.8012%" y="533" width="0.0253%" height="15" fill="rgb(223,190,21)" fg:x="2443" fg:w="1"/><text x="62.0512%" y="543.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="61.8012%" y="517" width="0.0253%" height="15" fill="rgb(215,228,25)" fg:x="2443" fg:w="1"/><text x="62.0512%" y="527.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="61.8012%" y="501" width="0.0253%" height="15" fill="rgb(225,36,22)" fg:x="2443" fg:w="1"/><text x="62.0512%" y="511.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (3 samples, 0.08%)</title><rect x="61.8265%" y="549" width="0.0759%" height="15" fill="rgb(251,106,46)" fg:x="2444" fg:w="3"/><text x="62.0765%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (1 samples, 0.03%)</title><rect x="61.8771%" y="533" width="0.0253%" height="15" fill="rgb(208,90,1)" fg:x="2446" fg:w="1"/><text x="62.1271%" y="543.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier as core::ops::arith::Mul&gt;::mul (1 samples, 0.03%)</title><rect x="61.9024%" y="533" width="0.0253%" height="15" fill="rgb(243,10,4)" fg:x="2447" fg:w="1"/><text x="62.1524%" y="543.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (1 samples, 0.03%)</title><rect x="61.9024%" y="517" width="0.0253%" height="15" fill="rgb(212,137,27)" fg:x="2447" fg:w="1"/><text x="62.1524%" y="527.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="61.9276%" y="533" width="0.0253%" height="15" fill="rgb(231,220,49)" fg:x="2448" fg:w="1"/><text x="62.1776%" y="543.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="61.9276%" y="517" width="0.0253%" height="15" fill="rgb(237,96,20)" fg:x="2448" fg:w="1"/><text x="62.1776%" y="527.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="61.9276%" y="501" width="0.0253%" height="15" fill="rgb(239,229,30)" fg:x="2448" fg:w="1"/><text x="62.1776%" y="511.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (3 samples, 0.08%)</title><rect x="61.9024%" y="549" width="0.0759%" height="15" fill="rgb(219,65,33)" fg:x="2447" fg:w="3"/><text x="62.1524%" y="559.50"></text></g><g><title>poly1305::backend::avx2::helpers::SpacedMultiplier4x130::new (1 samples, 0.03%)</title><rect x="61.9529%" y="533" width="0.0253%" height="15" fill="rgb(243,134,7)" fg:x="2449" fg:w="1"/><text x="62.2029%" y="543.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="62.0035%" y="533" width="0.0253%" height="15" fill="rgb(216,177,54)" fg:x="2451" fg:w="1"/><text x="62.2535%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (3 samples, 0.08%)</title><rect x="61.9782%" y="549" width="0.0759%" height="15" fill="rgb(211,160,20)" fg:x="2450" fg:w="3"/><text x="62.2282%" y="559.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="62.0288%" y="533" width="0.0253%" height="15" fill="rgb(239,85,39)" fg:x="2452" fg:w="1"/><text x="62.2788%" y="543.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.03%)</title><rect x="62.0288%" y="517" width="0.0253%" height="15" fill="rgb(232,125,22)" fg:x="2452" fg:w="1"/><text x="62.2788%" y="527.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (2 samples, 0.05%)</title><rect x="62.0541%" y="549" width="0.0506%" height="15" fill="rgb(244,57,34)" fg:x="2453" fg:w="2"/><text x="62.3041%" y="559.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="62.1047%" y="549" width="0.0253%" height="15" fill="rgb(214,203,32)" fg:x="2455" fg:w="1"/><text x="62.3547%" y="559.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="62.1047%" y="533" width="0.0253%" height="15" fill="rgb(207,58,43)" fg:x="2455" fg:w="1"/><text x="62.3547%" y="543.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="62.1047%" y="517" width="0.0253%" height="15" fill="rgb(215,193,15)" fg:x="2455" fg:w="1"/><text x="62.3547%" y="527.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.05%)</title><rect x="62.1300%" y="549" width="0.0506%" height="15" fill="rgb(232,15,44)" fg:x="2456" fg:w="2"/><text x="62.3800%" y="559.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (3 samples, 0.08%)</title><rect x="62.1806%" y="549" width="0.0759%" height="15" fill="rgb(212,3,48)" fg:x="2458" fg:w="3"/><text x="62.4306%" y="559.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier as core::ops::arith::Mul&gt;::mul (20 samples, 0.51%)</title><rect x="61.7759%" y="581" width="0.5059%" height="15" fill="rgb(218,128,7)" fg:x="2442" fg:w="20"/><text x="62.0259%" y="591.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (20 samples, 0.51%)</title><rect x="61.7759%" y="565" width="0.5059%" height="15" fill="rgb(226,216,39)" fg:x="2442" fg:w="20"/><text x="62.0259%" y="575.50"></text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_loaded_blocks (1 samples, 0.03%)</title><rect x="62.2565%" y="549" width="0.0253%" height="15" fill="rgb(243,47,51)" fg:x="2461" fg:w="1"/><text x="62.5065%" y="559.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="62.2818%" y="581" width="0.0253%" height="15" fill="rgb(241,183,40)" fg:x="2462" fg:w="1"/><text x="62.5318%" y="591.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="62.2818%" y="565" width="0.0253%" height="15" fill="rgb(231,217,32)" fg:x="2462" fg:w="1"/><text x="62.5318%" y="575.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="62.2818%" y="549" width="0.0253%" height="15" fill="rgb(229,61,38)" fg:x="2462" fg:w="1"/><text x="62.5318%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (2 samples, 0.05%)</title><rect x="62.3071%" y="549" width="0.0506%" height="15" fill="rgb(225,210,5)" fg:x="2463" fg:w="2"/><text x="62.5571%" y="559.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.03%)</title><rect x="62.3577%" y="533" width="0.0253%" height="15" fill="rgb(231,79,45)" fg:x="2465" fg:w="1"/><text x="62.6077%" y="543.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi64x (1 samples, 0.03%)</title><rect x="62.3577%" y="517" width="0.0253%" height="15" fill="rgb(224,100,7)" fg:x="2465" fg:w="1"/><text x="62.6077%" y="527.50"></text></g><g><title>core::core_arch::simd::i64x4::new (1 samples, 0.03%)</title><rect x="62.3577%" y="501" width="0.0253%" height="15" fill="rgb(241,198,18)" fg:x="2465" fg:w="1"/><text x="62.6077%" y="511.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (2 samples, 0.05%)</title><rect x="62.3577%" y="549" width="0.0506%" height="15" fill="rgb(252,97,53)" fg:x="2465" fg:w="2"/><text x="62.6077%" y="559.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.03%)</title><rect x="62.3830%" y="533" width="0.0253%" height="15" fill="rgb(220,88,7)" fg:x="2466" fg:w="1"/><text x="62.6330%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (2 samples, 0.05%)</title><rect x="62.4083%" y="549" width="0.0506%" height="15" fill="rgb(213,176,14)" fg:x="2467" fg:w="2"/><text x="62.6583%" y="559.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="62.4336%" y="533" width="0.0253%" height="15" fill="rgb(246,73,7)" fg:x="2468" fg:w="1"/><text x="62.6836%" y="543.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.03%)</title><rect x="62.4336%" y="517" width="0.0253%" height="15" fill="rgb(245,64,36)" fg:x="2468" fg:w="1"/><text x="62.6836%" y="527.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (1 samples, 0.03%)</title><rect x="62.4589%" y="549" width="0.0253%" height="15" fill="rgb(245,80,10)" fg:x="2469" fg:w="1"/><text x="62.7089%" y="559.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.03%)</title><rect x="62.4589%" y="533" width="0.0253%" height="15" fill="rgb(232,107,50)" fg:x="2469" fg:w="1"/><text x="62.7089%" y="543.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.03%)</title><rect x="62.4842%" y="549" width="0.0253%" height="15" fill="rgb(253,3,0)" fg:x="2470" fg:w="1"/><text x="62.7342%" y="559.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (3 samples, 0.08%)</title><rect x="62.5095%" y="549" width="0.0759%" height="15" fill="rgb(212,99,53)" fg:x="2471" fg:w="3"/><text x="62.7595%" y="559.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (3 samples, 0.08%)</title><rect x="62.5095%" y="533" width="0.0759%" height="15" fill="rgb(249,111,54)" fg:x="2471" fg:w="3"/><text x="62.7595%" y="543.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (3 samples, 0.08%)</title><rect x="62.5095%" y="517" width="0.0759%" height="15" fill="rgb(249,55,30)" fg:x="2471" fg:w="3"/><text x="62.7595%" y="527.50"></text></g><g><title>poly1305::backend::avx2::helpers::adc (12 samples, 0.30%)</title><rect x="62.3071%" y="565" width="0.3036%" height="15" fill="rgb(237,47,42)" fg:x="2463" fg:w="12"/><text x="62.5571%" y="575.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="62.5854%" y="549" width="0.0253%" height="15" fill="rgb(211,20,18)" fg:x="2474" fg:w="1"/><text x="62.8354%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.03%)</title><rect x="62.6107%" y="549" width="0.0253%" height="15" fill="rgb(231,203,46)" fg:x="2475" fg:w="1"/><text x="62.8607%" y="559.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (38 samples, 0.96%)</title><rect x="61.7253%" y="613" width="0.9613%" height="15" fill="rgb(237,142,3)" fg:x="2440" fg:w="38"/><text x="61.9753%" y="623.50"></text></g><g><title>poly1305::backend::avx2::helpers::SpacedMultiplier4x130::new (37 samples, 0.94%)</title><rect x="61.7506%" y="597" width="0.9360%" height="15" fill="rgb(241,107,1)" fg:x="2441" fg:w="37"/><text x="62.0006%" y="607.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced130::reduce (15 samples, 0.38%)</title><rect x="62.3071%" y="581" width="0.3795%" height="15" fill="rgb(229,83,13)" fg:x="2463" fg:w="15"/><text x="62.5571%" y="591.50"></text></g><g><title>poly1305::backend::avx2::helpers::red (3 samples, 0.08%)</title><rect x="62.6107%" y="565" width="0.0759%" height="15" fill="rgb(241,91,40)" fg:x="2475" fg:w="3"/><text x="62.8607%" y="575.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (2 samples, 0.05%)</title><rect x="62.6360%" y="549" width="0.0506%" height="15" fill="rgb(225,3,45)" fg:x="2476" fg:w="2"/><text x="62.8860%" y="559.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (2 samples, 0.05%)</title><rect x="62.6360%" y="533" width="0.0506%" height="15" fill="rgb(244,223,14)" fg:x="2476" fg:w="2"/><text x="62.8860%" y="543.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (2 samples, 0.05%)</title><rect x="62.6360%" y="517" width="0.0506%" height="15" fill="rgb(224,124,37)" fg:x="2476" fg:w="2"/><text x="62.8860%" y="527.50"></text></g><g><title>core::core_arch::simd::i8x32::new (1 samples, 0.03%)</title><rect x="62.6613%" y="501" width="0.0253%" height="15" fill="rgb(251,171,30)" fg:x="2477" fg:w="1"/><text x="62.9113%" y="511.50"></text></g><g><title>rustix::backend::event::epoll::_::InternalBitFlags::from_bits_retain (1 samples, 0.03%)</title><rect x="62.6866%" y="613" width="0.0253%" height="15" fill="rgb(236,46,54)" fg:x="2478" fg:w="1"/><text x="62.9366%" y="623.50"></text></g><g><title>std::sys::unix::net::Socket::recv_from_with_flags (1 samples, 0.03%)</title><rect x="62.7119%" y="613" width="0.0253%" height="15" fill="rgb(245,213,5)" fg:x="2479" fg:w="1"/><text x="62.9619%" y="623.50"></text></g><g><title>std::sys_common::net::UdpSocket::send_to (1 samples, 0.03%)</title><rect x="62.7372%" y="613" width="0.0253%" height="15" fill="rgb(230,144,27)" fg:x="2480" fg:w="1"/><text x="62.9872%" y="623.50"></text></g><g><title>std::sys::unix::cvt (1 samples, 0.03%)</title><rect x="62.7372%" y="597" width="0.0253%" height="15" fill="rgb(220,86,6)" fg:x="2480" fg:w="1"/><text x="62.9872%" y="607.50"></text></g><g><title>&lt;core::num::wrapping::Wrapping&lt;u8&gt; as core::ops::arith::AddAssign&lt;u8&gt;&gt;::add_assign (1 samples, 0.03%)</title><rect x="62.8384%" y="597" width="0.0253%" height="15" fill="rgb(240,20,13)" fg:x="2484" fg:w="1"/><text x="63.0884%" y="607.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.03%)</title><rect x="62.8636%" y="565" width="0.0253%" height="15" fill="rgb(217,89,34)" fg:x="2485" fg:w="1"/><text x="63.1136%" y="575.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.03%)</title><rect x="62.8636%" y="549" width="0.0253%" height="15" fill="rgb(229,13,5)" fg:x="2485" fg:w="1"/><text x="63.1136%" y="559.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.03%)</title><rect x="62.8636%" y="533" width="0.0253%" height="15" fill="rgb(244,67,35)" fg:x="2485" fg:w="1"/><text x="63.1136%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.03%)</title><rect x="62.8636%" y="517" width="0.0253%" height="15" fill="rgb(221,40,2)" fg:x="2485" fg:w="1"/><text x="63.1136%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="62.8636%" y="501" width="0.0253%" height="15" fill="rgb(237,157,21)" fg:x="2485" fg:w="1"/><text x="63.1136%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="62.8636%" y="485" width="0.0253%" height="15" fill="rgb(222,94,11)" fg:x="2485" fg:w="1"/><text x="63.1136%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="62.8636%" y="469" width="0.0253%" height="15" fill="rgb(249,113,6)" fg:x="2485" fg:w="1"/><text x="63.1136%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="62.8636%" y="453" width="0.0253%" height="15" fill="rgb(238,137,36)" fg:x="2485" fg:w="1"/><text x="63.1136%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.03%)</title><rect x="62.8636%" y="437" width="0.0253%" height="15" fill="rgb(210,102,26)" fg:x="2485" fg:w="1"/><text x="63.1136%" y="447.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.03%)</title><rect x="62.8636%" y="421" width="0.0253%" height="15" fill="rgb(218,30,30)" fg:x="2485" fg:w="1"/><text x="63.1136%" y="431.50"></text></g><g><title>polling::epoll::epoll_flags (1 samples, 0.03%)</title><rect x="62.8889%" y="501" width="0.0253%" height="15" fill="rgb(214,67,26)" fg:x="2486" fg:w="1"/><text x="63.1389%" y="511.50"></text></g><g><title>polling::epoll::read_flags (1 samples, 0.03%)</title><rect x="62.8889%" y="485" width="0.0253%" height="15" fill="rgb(251,9,53)" fg:x="2486" fg:w="1"/><text x="63.1389%" y="495.50"></text></g><g><title>rustix::backend::event::epoll::_::&lt;impl core::ops::bit::BitOr for rustix::backend::event::epoll::EventFlags&gt;::bitor (1 samples, 0.03%)</title><rect x="62.8889%" y="469" width="0.0253%" height="15" fill="rgb(228,204,25)" fg:x="2486" fg:w="1"/><text x="63.1389%" y="479.50"></text></g><g><title>rustix::backend::event::epoll::_::&lt;impl rustix::backend::event::epoll::EventFlags&gt;::union (1 samples, 0.03%)</title><rect x="62.8889%" y="453" width="0.0253%" height="15" fill="rgb(207,153,8)" fg:x="2486" fg:w="1"/><text x="63.1389%" y="463.50"></text></g><g><title>rustix::backend::event::epoll::_::InternalBitFlags::union (1 samples, 0.03%)</title><rect x="62.8889%" y="437" width="0.0253%" height="15" fill="rgb(242,9,16)" fg:x="2486" fg:w="1"/><text x="63.1389%" y="447.50"></text></g><g><title>&lt;std::net::udp::UdpSocket as std::os::fd::owned::AsFd&gt;::as_fd (1 samples, 0.03%)</title><rect x="62.8889%" y="421" width="0.0253%" height="15" fill="rgb(217,211,10)" fg:x="2486" fg:w="1"/><text x="63.1389%" y="431.50"></text></g><g><title>polling::Poller::modify (2 samples, 0.05%)</title><rect x="62.8889%" y="549" width="0.0506%" height="15" fill="rgb(219,228,52)" fg:x="2486" fg:w="2"/><text x="63.1389%" y="559.50"></text></g><g><title>polling::Poller::modify_with_mode (2 samples, 0.05%)</title><rect x="62.8889%" y="533" width="0.0506%" height="15" fill="rgb(231,92,29)" fg:x="2486" fg:w="2"/><text x="63.1389%" y="543.50"></text></g><g><title>polling::epoll::Poller::modify (2 samples, 0.05%)</title><rect x="62.8889%" y="517" width="0.0506%" height="15" fill="rgb(232,8,23)" fg:x="2486" fg:w="2"/><text x="63.1389%" y="527.50"></text></g><g><title>rustix::backend::event::epoll::modify (1 samples, 0.03%)</title><rect x="62.9142%" y="501" width="0.0253%" height="15" fill="rgb(216,211,34)" fg:x="2487" fg:w="1"/><text x="63.1642%" y="511.50"></text></g><g><title>rustix::backend::event::syscalls::epoll_mod (1 samples, 0.03%)</title><rect x="62.9142%" y="485" width="0.0253%" height="15" fill="rgb(236,151,0)" fg:x="2487" fg:w="1"/><text x="63.1642%" y="495.50"></text></g><g><title>rustix::backend::arch::asm::syscall4_readonly (1 samples, 0.03%)</title><rect x="62.9142%" y="469" width="0.0253%" height="15" fill="rgb(209,168,3)" fg:x="2487" fg:w="1"/><text x="63.1642%" y="479.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.03%)</title><rect x="62.9142%" y="453" width="0.0253%" height="15" fill="rgb(208,129,28)" fg:x="2487" fg:w="1"/><text x="63.1642%" y="463.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.03%)</title><rect x="62.9142%" y="437" width="0.0253%" height="15" fill="rgb(229,78,22)" fg:x="2487" fg:w="1"/><text x="63.1642%" y="447.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.03%)</title><rect x="62.9142%" y="421" width="0.0253%" height="15" fill="rgb(228,187,13)" fg:x="2487" fg:w="1"/><text x="63.1642%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.03%)</title><rect x="62.9395%" y="453" width="0.0253%" height="15" fill="rgb(240,119,24)" fg:x="2488" fg:w="1"/><text x="63.1895%" y="463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.03%)</title><rect x="62.9395%" y="437" width="0.0253%" height="15" fill="rgb(209,194,42)" fg:x="2488" fg:w="1"/><text x="63.1895%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.03%)</title><rect x="62.9395%" y="421" width="0.0253%" height="15" fill="rgb(247,200,46)" fg:x="2488" fg:w="1"/><text x="63.1895%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.03%)</title><rect x="62.9395%" y="405" width="0.0253%" height="15" fill="rgb(218,76,16)" fg:x="2488" fg:w="1"/><text x="63.1895%" y="415.50"></text></g><g><title>&lt;tftp::socket::UdpUnboundSocket as tftp::socket::Socket&gt;::modify_interest (5 samples, 0.13%)</title><rect x="62.8889%" y="565" width="0.1265%" height="15" fill="rgb(225,21,48)" fg:x="2486" fg:w="5"/><text x="63.1389%" y="575.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::remove (3 samples, 0.08%)</title><rect x="62.9395%" y="549" width="0.0759%" height="15" fill="rgb(239,223,50)" fg:x="2488" fg:w="3"/><text x="63.1895%" y="559.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::remove (3 samples, 0.08%)</title><rect x="62.9395%" y="533" width="0.0759%" height="15" fill="rgb(244,45,21)" fg:x="2488" fg:w="3"/><text x="63.1895%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (3 samples, 0.08%)</title><rect x="62.9395%" y="517" width="0.0759%" height="15" fill="rgb(232,33,43)" fg:x="2488" fg:w="3"/><text x="63.1895%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (3 samples, 0.08%)</title><rect x="62.9395%" y="501" width="0.0759%" height="15" fill="rgb(209,8,3)" fg:x="2488" fg:w="3"/><text x="63.1895%" y="511.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.08%)</title><rect x="62.9395%" y="485" width="0.0759%" height="15" fill="rgb(214,25,53)" fg:x="2488" fg:w="3"/><text x="63.1895%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.08%)</title><rect x="62.9395%" y="469" width="0.0759%" height="15" fill="rgb(254,186,54)" fg:x="2488" fg:w="3"/><text x="63.1895%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.05%)</title><rect x="62.9648%" y="453" width="0.0506%" height="15" fill="rgb(208,174,49)" fg:x="2489" fg:w="2"/><text x="63.2148%" y="463.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.03%)</title><rect x="62.9901%" y="437" width="0.0253%" height="15" fill="rgb(233,191,51)" fg:x="2490" fg:w="1"/><text x="63.2401%" y="447.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.03%)</title><rect x="62.9901%" y="421" width="0.0253%" height="15" fill="rgb(222,134,10)" fg:x="2490" fg:w="1"/><text x="63.2401%" y="431.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.03%)</title><rect x="62.9901%" y="405" width="0.0253%" height="15" fill="rgb(230,226,20)" fg:x="2490" fg:w="1"/><text x="63.2401%" y="415.50"></text></g><g><title>&lt;tftp::socket::UdpUnboundSocket as tftp::socket::ToSocketId&gt;::as_raw_fd (1 samples, 0.03%)</title><rect x="63.0154%" y="565" width="0.0253%" height="15" fill="rgb(251,111,25)" fg:x="2491" fg:w="1"/><text x="63.2654%" y="575.50"></text></g><g><title>&lt;std::net::udp::UdpSocket as std::os::fd::owned::AsFd&gt;::as_fd (1 samples, 0.03%)</title><rect x="63.0154%" y="549" width="0.0253%" height="15" fill="rgb(224,40,46)" fg:x="2491" fg:w="1"/><text x="63.2654%" y="559.50"></text></g><g><title>&lt;tftp::readers::multiple_block_reader::MultipleBlockReader&lt;R&gt; as tftp::readers::block_reader::BlockReader&gt;::next (1 samples, 0.03%)</title><rect x="63.0154%" y="533" width="0.0253%" height="15" fill="rgb(236,108,47)" fg:x="2491" fg:w="1"/><text x="63.2654%" y="543.50"></text></g><g><title>std::sys::unix::time::Timespec::now (1 samples, 0.03%)</title><rect x="63.0407%" y="517" width="0.0253%" height="15" fill="rgb(234,93,0)" fg:x="2492" fg:w="1"/><text x="63.2907%" y="527.50"></text></g><g><title>__GI___clock_gettime (1 samples, 0.03%)</title><rect x="63.0407%" y="501" width="0.0253%" height="15" fill="rgb(224,213,32)" fg:x="2492" fg:w="1"/><text x="63.2907%" y="511.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.03%)</title><rect x="63.0407%" y="485" width="0.0253%" height="15" fill="rgb(251,11,48)" fg:x="2492" fg:w="1"/><text x="63.2907%" y="495.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.03%)</title><rect x="63.0407%" y="469" width="0.0253%" height="15" fill="rgb(236,173,5)" fg:x="2492" fg:w="1"/><text x="63.2907%" y="479.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.03%)</title><rect x="63.0407%" y="453" width="0.0253%" height="15" fill="rgb(230,95,12)" fg:x="2492" fg:w="1"/><text x="63.2907%" y="463.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.03%)</title><rect x="63.0407%" y="437" width="0.0253%" height="15" fill="rgb(232,209,1)" fg:x="2492" fg:w="1"/><text x="63.2907%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.05%)</title><rect x="63.0407%" y="549" width="0.0506%" height="15" fill="rgb(232,6,1)" fg:x="2492" fg:w="2"/><text x="63.2907%" y="559.50"></text></g><g><title>polling::Poller::wait::{{closure}} (2 samples, 0.05%)</title><rect x="63.0407%" y="533" width="0.0506%" height="15" fill="rgb(210,224,50)" fg:x="2492" fg:w="2"/><text x="63.2907%" y="543.50"></text></g><g><title>std::time::Instant::duration_since (1 samples, 0.03%)</title><rect x="63.0660%" y="517" width="0.0253%" height="15" fill="rgb(228,127,35)" fg:x="2493" fg:w="1"/><text x="63.3160%" y="527.50"></text></g><g><title>std::time::Instant::checked_duration_since (1 samples, 0.03%)</title><rect x="63.0660%" y="501" width="0.0253%" height="15" fill="rgb(245,102,45)" fg:x="2493" fg:w="1"/><text x="63.3160%" y="511.50"></text></g><g><title>std::sys::unix::time::Instant::checked_sub_instant (1 samples, 0.03%)</title><rect x="63.0660%" y="485" width="0.0253%" height="15" fill="rgb(214,1,49)" fg:x="2493" fg:w="1"/><text x="63.3160%" y="495.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (1 samples, 0.03%)</title><rect x="63.0660%" y="469" width="0.0253%" height="15" fill="rgb(226,163,40)" fg:x="2493" fg:w="1"/><text x="63.3160%" y="479.50"></text></g><g><title>polling::Events::len (1 samples, 0.03%)</title><rect x="63.0913%" y="549" width="0.0253%" height="15" fill="rgb(239,212,28)" fg:x="2494" fg:w="1"/><text x="63.3413%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (1 samples, 0.03%)</title><rect x="63.0913%" y="533" width="0.0253%" height="15" fill="rgb(220,20,13)" fg:x="2494" fg:w="1"/><text x="63.3413%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.03%)</title><rect x="63.0913%" y="517" width="0.0253%" height="15" fill="rgb(210,164,35)" fg:x="2494" fg:w="1"/><text x="63.3413%" y="527.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.03%)</title><rect x="63.0913%" y="501" width="0.0253%" height="15" fill="rgb(248,109,41)" fg:x="2494" fg:w="1"/><text x="63.3413%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="63.0913%" y="485" width="0.0253%" height="15" fill="rgb(238,23,50)" fg:x="2494" fg:w="1"/><text x="63.3413%" y="495.50"></text></g><g><title>polling::Event::readable (1 samples, 0.03%)</title><rect x="63.1166%" y="533" width="0.0253%" height="15" fill="rgb(211,48,49)" fg:x="2495" fg:w="1"/><text x="63.3666%" y="543.50"></text></g><g><title>polling::Event::new (1 samples, 0.03%)</title><rect x="63.1166%" y="517" width="0.0253%" height="15" fill="rgb(223,36,21)" fg:x="2495" fg:w="1"/><text x="63.3666%" y="527.50"></text></g><g><title>polling::epoll::EventExtra::empty (1 samples, 0.03%)</title><rect x="63.1166%" y="501" width="0.0253%" height="15" fill="rgb(207,123,46)" fg:x="2495" fg:w="1"/><text x="63.3666%" y="511.50"></text></g><g><title>rustix::backend::event::epoll::_::&lt;impl rustix::backend::event::epoll::EventFlags&gt;::empty (1 samples, 0.03%)</title><rect x="63.1166%" y="485" width="0.0253%" height="15" fill="rgb(240,218,32)" fg:x="2495" fg:w="1"/><text x="63.3666%" y="495.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.03%)</title><rect x="63.1419%" y="485" width="0.0253%" height="15" fill="rgb(252,5,43)" fg:x="2496" fg:w="1"/><text x="63.3919%" y="495.50"></text></g><g><title>rustix::backend::conv::&lt;impl core::convert::From&lt;std::os::fd::owned::BorrowedFd&gt; for rustix::backend::reg::ArgReg&lt;Num&gt;&gt;::from (1 samples, 0.03%)</title><rect x="63.1419%" y="469" width="0.0253%" height="15" fill="rgb(252,84,19)" fg:x="2496" fg:w="1"/><text x="63.3919%" y="479.50"></text></g><g><title>rustix::backend::conv::raw_fd (1 samples, 0.03%)</title><rect x="63.1419%" y="453" width="0.0253%" height="15" fill="rgb(243,152,39)" fg:x="2496" fg:w="1"/><text x="63.3919%" y="463.50"></text></g><g><title>polling::epoll::Notifier::clear (2 samples, 0.05%)</title><rect x="63.1419%" y="533" width="0.0506%" height="15" fill="rgb(234,160,15)" fg:x="2496" fg:w="2"/><text x="63.3919%" y="543.50"></text></g><g><title>rustix::io::read_write::read (2 samples, 0.05%)</title><rect x="63.1419%" y="517" width="0.0506%" height="15" fill="rgb(237,34,20)" fg:x="2496" fg:w="2"/><text x="63.3919%" y="527.50"></text></g><g><title>rustix::backend::io::syscalls::read (2 samples, 0.05%)</title><rect x="63.1419%" y="501" width="0.0506%" height="15" fill="rgb(229,97,13)" fg:x="2496" fg:w="2"/><text x="63.3919%" y="511.50"></text></g><g><title>rustix::backend::arch::asm::syscall3 (1 samples, 0.03%)</title><rect x="63.1672%" y="485" width="0.0253%" height="15" fill="rgb(234,71,50)" fg:x="2497" fg:w="1"/><text x="63.4172%" y="495.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="63.1672%" y="469" width="0.0253%" height="15" fill="rgb(253,155,4)" fg:x="2497" fg:w="1"/><text x="63.4172%" y="479.50"></text></g><g><title>do_syscall_64 (1 samples, 0.03%)</title><rect x="63.1672%" y="453" width="0.0253%" height="15" fill="rgb(222,185,37)" fg:x="2497" fg:w="1"/><text x="63.4172%" y="463.50"></text></g><g><title>ksys_read (1 samples, 0.03%)</title><rect x="63.1672%" y="437" width="0.0253%" height="15" fill="rgb(251,177,13)" fg:x="2497" fg:w="1"/><text x="63.4172%" y="447.50"></text></g><g><title>vfs_read (1 samples, 0.03%)</title><rect x="63.1672%" y="421" width="0.0253%" height="15" fill="rgb(250,179,40)" fg:x="2497" fg:w="1"/><text x="63.4172%" y="431.50"></text></g><g><title>security_file_permission (1 samples, 0.03%)</title><rect x="63.1672%" y="405" width="0.0253%" height="15" fill="rgb(242,44,2)" fg:x="2497" fg:w="1"/><text x="63.4172%" y="415.50"></text></g><g><title>apparmor_file_permission (1 samples, 0.03%)</title><rect x="63.1672%" y="389" width="0.0253%" height="15" fill="rgb(216,177,13)" fg:x="2497" fg:w="1"/><text x="63.4172%" y="399.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.03%)</title><rect x="63.2178%" y="485" width="0.0253%" height="15" fill="rgb(216,106,43)" fg:x="2499" fg:w="1"/><text x="63.4678%" y="495.50"></text></g><g><title>rustix::backend::conv::&lt;impl core::convert::From&lt;std::os::fd::owned::BorrowedFd&gt; for rustix::backend::reg::ArgReg&lt;Num&gt;&gt;::from (1 samples, 0.03%)</title><rect x="63.2178%" y="469" width="0.0253%" height="15" fill="rgb(216,183,2)" fg:x="2499" fg:w="1"/><text x="63.4678%" y="479.50"></text></g><g><title>&lt;std::os::fd::owned::BorrowedFd as std::os::fd::raw::AsRawFd&gt;::as_raw_fd (1 samples, 0.03%)</title><rect x="63.2178%" y="453" width="0.0253%" height="15" fill="rgb(249,75,3)" fg:x="2499" fg:w="1"/><text x="63.4678%" y="463.50"></text></g><g><title>rustix::backend::arch::asm::syscall4_readonly (3 samples, 0.08%)</title><rect x="63.2431%" y="485" width="0.0759%" height="15" fill="rgb(219,67,39)" fg:x="2500" fg:w="3"/><text x="63.4931%" y="495.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (3 samples, 0.08%)</title><rect x="63.2431%" y="469" width="0.0759%" height="15" fill="rgb(253,228,2)" fg:x="2500" fg:w="3"/><text x="63.4931%" y="479.50"></text></g><g><title>do_syscall_64 (2 samples, 0.05%)</title><rect x="63.2684%" y="453" width="0.0506%" height="15" fill="rgb(235,138,27)" fg:x="2501" fg:w="2"/><text x="63.5184%" y="463.50"></text></g><g><title>__x64_sys_epoll_ctl (2 samples, 0.05%)</title><rect x="63.2684%" y="437" width="0.0506%" height="15" fill="rgb(236,97,51)" fg:x="2501" fg:w="2"/><text x="63.5184%" y="447.50"></text></g><g><title>do_epoll_ctl (1 samples, 0.03%)</title><rect x="63.2937%" y="421" width="0.0253%" height="15" fill="rgb(240,80,30)" fg:x="2502" fg:w="1"/><text x="63.5437%" y="431.50"></text></g><g><title>ep_item_poll.isra.0 (1 samples, 0.03%)</title><rect x="63.2937%" y="405" width="0.0253%" height="15" fill="rgb(230,178,19)" fg:x="2502" fg:w="1"/><text x="63.5437%" y="415.50"></text></g><g><title>eventfd_poll (1 samples, 0.03%)</title><rect x="63.2937%" y="389" width="0.0253%" height="15" fill="rgb(210,190,27)" fg:x="2502" fg:w="1"/><text x="63.5437%" y="399.50"></text></g><g><title>polling::epoll::Poller::modify (6 samples, 0.15%)</title><rect x="63.1925%" y="533" width="0.1518%" height="15" fill="rgb(222,107,31)" fg:x="2498" fg:w="6"/><text x="63.4425%" y="543.50"></text></g><g><title>rustix::backend::event::epoll::modify (6 samples, 0.15%)</title><rect x="63.1925%" y="517" width="0.1518%" height="15" fill="rgb(216,127,34)" fg:x="2498" fg:w="6"/><text x="63.4425%" y="527.50"></text></g><g><title>rustix::backend::event::syscalls::epoll_mod (5 samples, 0.13%)</title><rect x="63.2178%" y="501" width="0.1265%" height="15" fill="rgb(234,116,52)" fg:x="2499" fg:w="5"/><text x="63.4678%" y="511.50"></text></g><g><title>rustix::backend::conv::raw_fd (1 samples, 0.03%)</title><rect x="63.3190%" y="485" width="0.0253%" height="15" fill="rgb(222,124,15)" fg:x="2503" fg:w="1"/><text x="63.5690%" y="495.50"></text></g><g><title>dequeue_task_fair (1 samples, 0.03%)</title><rect x="63.3949%" y="373" width="0.0253%" height="15" fill="rgb(231,179,28)" fg:x="2506" fg:w="1"/><text x="63.6449%" y="383.50"></text></g><g><title>dequeue_entity (1 samples, 0.03%)</title><rect x="63.3949%" y="357" width="0.0253%" height="15" fill="rgb(226,93,45)" fg:x="2506" fg:w="1"/><text x="63.6449%" y="367.50"></text></g><g><title>update_load_avg (1 samples, 0.03%)</title><rect x="63.3949%" y="341" width="0.0253%" height="15" fill="rgb(215,8,51)" fg:x="2506" fg:w="1"/><text x="63.6449%" y="351.50"></text></g><g><title>rustix::backend::arch::asm::syscall4 (4 samples, 0.10%)</title><rect x="63.3443%" y="501" width="0.1012%" height="15" fill="rgb(223,106,5)" fg:x="2504" fg:w="4"/><text x="63.5943%" y="511.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4 samples, 0.10%)</title><rect x="63.3443%" y="485" width="0.1012%" height="15" fill="rgb(250,191,5)" fg:x="2504" fg:w="4"/><text x="63.5943%" y="495.50"></text></g><g><title>do_syscall_64 (4 samples, 0.10%)</title><rect x="63.3443%" y="469" width="0.1012%" height="15" fill="rgb(242,132,44)" fg:x="2504" fg:w="4"/><text x="63.5943%" y="479.50"></text></g><g><title>__x64_sys_epoll_wait (4 samples, 0.10%)</title><rect x="63.3443%" y="453" width="0.1012%" height="15" fill="rgb(251,152,29)" fg:x="2504" fg:w="4"/><text x="63.5943%" y="463.50"></text></g><g><title>do_epoll_wait (4 samples, 0.10%)</title><rect x="63.3443%" y="437" width="0.1012%" height="15" fill="rgb(218,179,5)" fg:x="2504" fg:w="4"/><text x="63.5943%" y="447.50"></text></g><g><title>schedule_hrtimeout_range_clock (3 samples, 0.08%)</title><rect x="63.3696%" y="421" width="0.0759%" height="15" fill="rgb(227,67,19)" fg:x="2505" fg:w="3"/><text x="63.6196%" y="431.50"></text></g><g><title>schedule (3 samples, 0.08%)</title><rect x="63.3696%" y="405" width="0.0759%" height="15" fill="rgb(233,119,31)" fg:x="2505" fg:w="3"/><text x="63.6196%" y="415.50"></text></g><g><title>__schedule (3 samples, 0.08%)</title><rect x="63.3696%" y="389" width="0.0759%" height="15" fill="rgb(241,120,22)" fg:x="2505" fg:w="3"/><text x="63.6196%" y="399.50"></text></g><g><title>pick_next_task_fair (1 samples, 0.03%)</title><rect x="63.4202%" y="373" width="0.0253%" height="15" fill="rgb(224,102,30)" fg:x="2507" fg:w="1"/><text x="63.6702%" y="383.50"></text></g><g><title>newidle_balance (1 samples, 0.03%)</title><rect x="63.4202%" y="357" width="0.0253%" height="15" fill="rgb(210,164,37)" fg:x="2507" fg:w="1"/><text x="63.6702%" y="367.50"></text></g><g><title>rustix::backend::event::epoll::wait (5 samples, 0.13%)</title><rect x="63.3443%" y="533" width="0.1265%" height="15" fill="rgb(226,191,16)" fg:x="2504" fg:w="5"/><text x="63.5943%" y="543.50"></text></g><g><title>rustix::backend::event::syscalls::epoll_wait (5 samples, 0.13%)</title><rect x="63.3443%" y="517" width="0.1265%" height="15" fill="rgb(214,40,45)" fg:x="2504" fg:w="5"/><text x="63.5943%" y="527.50"></text></g><g><title>rustix::backend::conv::by_ref (1 samples, 0.03%)</title><rect x="63.4455%" y="501" width="0.0253%" height="15" fill="rgb(244,29,26)" fg:x="2508" fg:w="1"/><text x="63.6955%" y="511.50"></text></g><g><title>polling::epoll::Poller::wait (15 samples, 0.38%)</title><rect x="63.1166%" y="549" width="0.3795%" height="15" fill="rgb(216,16,5)" fg:x="2495" fg:w="15"/><text x="63.3666%" y="559.50"></text></g><g><title>tracing_core::metadata::LevelFilter::current (1 samples, 0.03%)</title><rect x="63.4708%" y="533" width="0.0253%" height="15" fill="rgb(249,76,35)" fg:x="2509" fg:w="1"/><text x="63.7208%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.03%)</title><rect x="63.4708%" y="517" width="0.0253%" height="15" fill="rgb(207,11,44)" fg:x="2509" fg:w="1"/><text x="63.7208%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.03%)</title><rect x="63.4708%" y="501" width="0.0253%" height="15" fill="rgb(228,190,49)" fg:x="2509" fg:w="1"/><text x="63.7208%" y="511.50"></text></g><g><title>polling::Poller::wait (19 samples, 0.48%)</title><rect x="63.0407%" y="565" width="0.4806%" height="15" fill="rgb(214,173,12)" fg:x="2492" fg:w="19"/><text x="63.2907%" y="575.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (1 samples, 0.03%)</title><rect x="63.4961%" y="549" width="0.0253%" height="15" fill="rgb(218,26,35)" fg:x="2510" fg:w="1"/><text x="63.7461%" y="559.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="63.4961%" y="533" width="0.0253%" height="15" fill="rgb(220,200,19)" fg:x="2510" fg:w="1"/><text x="63.7461%" y="543.50"></text></g><g><title>std::sync::poison::map_result (1 samples, 0.03%)</title><rect x="63.4961%" y="517" width="0.0253%" height="15" fill="rgb(239,95,49)" fg:x="2510" fg:w="1"/><text x="63.7461%" y="527.50"></text></g><g><title>&lt;tftp::socket::UdpUnboundSocket as tftp::socket::Socket&gt;::recv_from (28 samples, 0.71%)</title><rect x="62.8636%" y="581" width="0.7083%" height="15" fill="rgb(235,85,53)" fg:x="2485" fg:w="28"/><text x="63.1136%" y="591.50"></text></g><g><title>std::net::udp::UdpSocket::recv_from (2 samples, 0.05%)</title><rect x="63.5214%" y="565" width="0.0506%" height="15" fill="rgb(233,133,31)" fg:x="2511" fg:w="2"/><text x="63.7714%" y="575.50"></text></g><g><title>std::sys_common::net::UdpSocket::recv_from (2 samples, 0.05%)</title><rect x="63.5214%" y="549" width="0.0506%" height="15" fill="rgb(218,25,20)" fg:x="2511" fg:w="2"/><text x="63.7714%" y="559.50"></text></g><g><title>std::sys::unix::net::Socket::recv_from (2 samples, 0.05%)</title><rect x="63.5214%" y="533" width="0.0506%" height="15" fill="rgb(252,210,38)" fg:x="2511" fg:w="2"/><text x="63.7714%" y="543.50"></text></g><g><title>std::sys::unix::net::Socket::recv_from_with_flags (2 samples, 0.05%)</title><rect x="63.5214%" y="517" width="0.0506%" height="15" fill="rgb(242,134,21)" fg:x="2511" fg:w="2"/><text x="63.7714%" y="527.50"></text></g><g><title>__libc_recvfrom (2 samples, 0.05%)</title><rect x="63.5214%" y="501" width="0.0506%" height="15" fill="rgb(213,28,48)" fg:x="2511" fg:w="2"/><text x="63.7714%" y="511.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="63.5214%" y="485" width="0.0506%" height="15" fill="rgb(250,196,2)" fg:x="2511" fg:w="2"/><text x="63.7714%" y="495.50"></text></g><g><title>do_syscall_64 (2 samples, 0.05%)</title><rect x="63.5214%" y="469" width="0.0506%" height="15" fill="rgb(227,5,17)" fg:x="2511" fg:w="2"/><text x="63.7714%" y="479.50"></text></g><g><title>__x64_sys_recvfrom (2 samples, 0.05%)</title><rect x="63.5214%" y="453" width="0.0506%" height="15" fill="rgb(221,226,24)" fg:x="2511" fg:w="2"/><text x="63.7714%" y="463.50"></text></g><g><title>__sys_recvfrom (1 samples, 0.03%)</title><rect x="63.5467%" y="437" width="0.0253%" height="15" fill="rgb(211,5,48)" fg:x="2512" fg:w="1"/><text x="63.7967%" y="447.50"></text></g><g><title>sock_recvmsg (1 samples, 0.03%)</title><rect x="63.5467%" y="421" width="0.0253%" height="15" fill="rgb(219,150,6)" fg:x="2512" fg:w="1"/><text x="63.7967%" y="431.50"></text></g><g><title>inet_recvmsg (1 samples, 0.03%)</title><rect x="63.5467%" y="405" width="0.0253%" height="15" fill="rgb(251,46,16)" fg:x="2512" fg:w="1"/><text x="63.7967%" y="415.50"></text></g><g><title>udp_recvmsg (1 samples, 0.03%)</title><rect x="63.5467%" y="389" width="0.0253%" height="15" fill="rgb(220,204,40)" fg:x="2512" fg:w="1"/><text x="63.7967%" y="399.50"></text></g><g><title>__slab_free (1 samples, 0.03%)</title><rect x="63.5467%" y="373" width="0.0253%" height="15" fill="rgb(211,85,2)" fg:x="2512" fg:w="1"/><text x="63.7967%" y="383.50"></text></g><g><title>cmpxchg_double_slab.constprop.0.isra.0 (1 samples, 0.03%)</title><rect x="63.5467%" y="357" width="0.0253%" height="15" fill="rgb(229,17,7)" fg:x="2512" fg:w="1"/><text x="63.7967%" y="367.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (1 samples, 0.03%)</title><rect x="63.5720%" y="501" width="0.0253%" height="15" fill="rgb(239,72,28)" fg:x="2513" fg:w="1"/><text x="63.8220%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (1 samples, 0.03%)</title><rect x="63.5720%" y="485" width="0.0253%" height="15" fill="rgb(230,47,54)" fg:x="2513" fg:w="1"/><text x="63.8220%" y="495.50"></text></g><g><title>core::iter::adapters::zip::Zip&lt;A,B&gt;::new (1 samples, 0.03%)</title><rect x="63.5720%" y="469" width="0.0253%" height="15" fill="rgb(214,50,8)" fg:x="2513" fg:w="1"/><text x="63.8220%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (1 samples, 0.03%)</title><rect x="63.5720%" y="453" width="0.0253%" height="15" fill="rgb(216,198,43)" fg:x="2513" fg:w="1"/><text x="63.8220%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.03%)</title><rect x="63.5720%" y="437" width="0.0253%" height="15" fill="rgb(234,20,35)" fg:x="2513" fg:w="1"/><text x="63.8220%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="63.5973%" y="485" width="0.0253%" height="15" fill="rgb(254,45,19)" fg:x="2514" fg:w="1"/><text x="63.8473%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.03%)</title><rect x="63.5973%" y="469" width="0.0253%" height="15" fill="rgb(219,14,44)" fg:x="2514" fg:w="1"/><text x="63.8473%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.03%)</title><rect x="63.5973%" y="453" width="0.0253%" height="15" fill="rgb(217,220,26)" fg:x="2514" fg:w="1"/><text x="63.8473%" y="463.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as crypto_common::KeyIvInit&gt;::new (6 samples, 0.15%)</title><rect x="63.5720%" y="533" width="0.1518%" height="15" fill="rgb(213,158,28)" fg:x="2513" fg:w="6"/><text x="63.8220%" y="543.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (6 samples, 0.15%)</title><rect x="63.5720%" y="517" width="0.1518%" height="15" fill="rgb(252,51,52)" fg:x="2513" fg:w="6"/><text x="63.8220%" y="527.50"></text></g><g><title>chacha20::xchacha::hchacha (5 samples, 0.13%)</title><rect x="63.5973%" y="501" width="0.1265%" height="15" fill="rgb(246,89,16)" fg:x="2514" fg:w="5"/><text x="63.8473%" y="511.50"></text></g><g><title>chacha20::xchacha::quarter_round (4 samples, 0.10%)</title><rect x="63.6226%" y="485" width="0.1012%" height="15" fill="rgb(216,158,49)" fg:x="2515" fg:w="4"/><text x="63.8726%" y="495.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="63.7238%" y="405" width="0.0253%" height="15" fill="rgb(236,107,19)" fg:x="2519" fg:w="1"/><text x="63.9738%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.03%)</title><rect x="63.7491%" y="373" width="0.0253%" height="15" fill="rgb(228,185,30)" fg:x="2520" fg:w="1"/><text x="63.9991%" y="383.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::authenticate_lengths (3 samples, 0.08%)</title><rect x="63.7238%" y="517" width="0.0759%" height="15" fill="rgb(246,134,8)" fg:x="2519" fg:w="3"/><text x="63.9738%" y="527.50"></text></g><g><title>universal_hash::UniversalHash::update (3 samples, 0.08%)</title><rect x="63.7238%" y="501" width="0.0759%" height="15" fill="rgb(214,143,50)" fg:x="2519" fg:w="3"/><text x="63.9738%" y="511.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (3 samples, 0.08%)</title><rect x="63.7238%" y="485" width="0.0759%" height="15" fill="rgb(228,75,8)" fg:x="2519" fg:w="3"/><text x="63.9738%" y="495.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (3 samples, 0.08%)</title><rect x="63.7238%" y="469" width="0.0759%" height="15" fill="rgb(207,175,4)" fg:x="2519" fg:w="3"/><text x="63.9738%" y="479.50"></text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (3 samples, 0.08%)</title><rect x="63.7238%" y="453" width="0.0759%" height="15" fill="rgb(205,108,24)" fg:x="2519" fg:w="3"/><text x="63.9738%" y="463.50"></text></g><g><title>&lt;poly1305::backend::avx2::State as universal_hash::UhfBackend&gt;::proc_block (3 samples, 0.08%)</title><rect x="63.7238%" y="437" width="0.0759%" height="15" fill="rgb(244,120,49)" fg:x="2519" fg:w="3"/><text x="63.9738%" y="447.50"></text></g><g><title>poly1305::backend::avx2::State::compute_block (3 samples, 0.08%)</title><rect x="63.7238%" y="421" width="0.0759%" height="15" fill="rgb(223,47,38)" fg:x="2519" fg:w="3"/><text x="63.9738%" y="431.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (2 samples, 0.05%)</title><rect x="63.7491%" y="405" width="0.0506%" height="15" fill="rgb(229,179,11)" fg:x="2520" fg:w="2"/><text x="63.9991%" y="415.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (2 samples, 0.05%)</title><rect x="63.7491%" y="389" width="0.0506%" height="15" fill="rgb(231,122,1)" fg:x="2520" fg:w="2"/><text x="63.9991%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.03%)</title><rect x="63.7743%" y="373" width="0.0253%" height="15" fill="rgb(245,119,9)" fg:x="2521" fg:w="1"/><text x="64.0243%" y="383.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="63.7996%" y="373" width="0.0253%" height="15" fill="rgb(241,163,25)" fg:x="2522" fg:w="1"/><text x="64.0496%" y="383.50"></text></g><g><title>chacha20::backends::avx2::rounds (1 samples, 0.03%)</title><rect x="63.8249%" y="373" width="0.0253%" height="15" fill="rgb(217,214,3)" fg:x="2523" fg:w="1"/><text x="64.0749%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="63.8249%" y="357" width="0.0253%" height="15" fill="rgb(240,86,28)" fg:x="2523" fg:w="1"/><text x="64.0749%" y="367.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_par_ks_blocks (3 samples, 0.08%)</title><rect x="63.7996%" y="389" width="0.0759%" height="15" fill="rgb(215,47,9)" fg:x="2522" fg:w="3"/><text x="64.0496%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="63.8502%" y="373" width="0.0253%" height="15" fill="rgb(252,25,45)" fg:x="2524" fg:w="1"/><text x="64.1002%" y="383.50"></text></g><g><title>chacha20::backends::avx2::rounds (1 samples, 0.03%)</title><rect x="63.8755%" y="357" width="0.0253%" height="15" fill="rgb(251,164,9)" fg:x="2525" fg:w="1"/><text x="64.1255%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="63.8755%" y="341" width="0.0253%" height="15" fill="rgb(233,194,0)" fg:x="2525" fg:w="1"/><text x="64.1255%" y="351.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.03%)</title><rect x="63.8755%" y="325" width="0.0253%" height="15" fill="rgb(249,111,24)" fg:x="2525" fg:w="1"/><text x="64.1255%" y="335.50"></text></g><g><title>cipher::stream_core::StreamBackend::gen_tail_blocks (2 samples, 0.05%)</title><rect x="63.8755%" y="389" width="0.0506%" height="15" fill="rgb(250,223,3)" fg:x="2525" fg:w="2"/><text x="64.1255%" y="399.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (2 samples, 0.05%)</title><rect x="63.8755%" y="373" width="0.0506%" height="15" fill="rgb(236,178,37)" fg:x="2525" fg:w="2"/><text x="64.1255%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="63.9008%" y="357" width="0.0253%" height="15" fill="rgb(241,158,50)" fg:x="2526" fg:w="1"/><text x="64.1508%" y="367.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.03%)</title><rect x="63.9261%" y="389" width="0.0253%" height="15" fill="rgb(213,121,41)" fg:x="2527" fg:w="1"/><text x="64.1761%" y="399.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.03%)</title><rect x="63.9261%" y="373" width="0.0253%" height="15" fill="rgb(240,92,3)" fg:x="2527" fg:w="1"/><text x="64.1761%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.03%)</title><rect x="63.9261%" y="357" width="0.0253%" height="15" fill="rgb(205,123,3)" fg:x="2527" fg:w="1"/><text x="64.1761%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="63.9261%" y="341" width="0.0253%" height="15" fill="rgb(205,97,47)" fg:x="2527" fg:w="1"/><text x="64.1761%" y="351.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="63.9261%" y="325" width="0.0253%" height="15" fill="rgb(247,152,14)" fg:x="2527" fg:w="1"/><text x="64.1761%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.03%)</title><rect x="63.9261%" y="309" width="0.0253%" height="15" fill="rgb(248,195,53)" fg:x="2527" fg:w="1"/><text x="64.1761%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.03%)</title><rect x="63.9261%" y="293" width="0.0253%" height="15" fill="rgb(226,201,16)" fg:x="2527" fg:w="1"/><text x="64.1761%" y="303.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (1 samples, 0.03%)</title><rect x="63.9261%" y="277" width="0.0253%" height="15" fill="rgb(205,98,0)" fg:x="2527" fg:w="1"/><text x="64.1761%" y="287.50"></text></g><g><title>core::ptr::write (1 samples, 0.03%)</title><rect x="63.9261%" y="261" width="0.0253%" height="15" fill="rgb(214,191,48)" fg:x="2527" fg:w="1"/><text x="64.1761%" y="271.50"></text></g><g><title>core::mem::forget (1 samples, 0.03%)</title><rect x="63.9261%" y="245" width="0.0253%" height="15" fill="rgb(237,112,39)" fg:x="2527" fg:w="1"/><text x="64.1761%" y="255.50"></text></g><g><title>core::slice::raw::from_raw_parts (2 samples, 0.05%)</title><rect x="64.6092%" y="357" width="0.0506%" height="15" fill="rgb(247,203,27)" fg:x="2554" fg:w="2"/><text x="64.8592%" y="367.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.03%)</title><rect x="64.6345%" y="341" width="0.0253%" height="15" fill="rgb(235,124,28)" fg:x="2555" fg:w="1"/><text x="64.8845%" y="351.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (1 samples, 0.03%)</title><rect x="64.6345%" y="325" width="0.0253%" height="15" fill="rgb(208,207,46)" fg:x="2555" fg:w="1"/><text x="64.8845%" y="335.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::Deref&gt;::deref (18 samples, 0.46%)</title><rect x="64.2803%" y="373" width="0.4554%" height="15" fill="rgb(234,176,4)" fg:x="2541" fg:w="18"/><text x="64.5303%" y="383.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (3 samples, 0.08%)</title><rect x="64.6598%" y="357" width="0.0759%" height="15" fill="rgb(230,133,28)" fg:x="2556" fg:w="3"/><text x="64.9098%" y="367.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (3 samples, 0.08%)</title><rect x="64.6598%" y="341" width="0.0759%" height="15" fill="rgb(211,137,40)" fg:x="2556" fg:w="3"/><text x="64.9098%" y="351.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (3 samples, 0.08%)</title><rect x="64.6598%" y="325" width="0.0759%" height="15" fill="rgb(254,35,13)" fg:x="2556" fg:w="3"/><text x="64.9098%" y="335.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (5 samples, 0.13%)</title><rect x="64.7356%" y="373" width="0.1265%" height="15" fill="rgb(225,49,51)" fg:x="2559" fg:w="5"/><text x="64.9856%" y="383.50"></text></g><g><title>core::slice::raw::from_raw_parts (1 samples, 0.03%)</title><rect x="64.8368%" y="357" width="0.0253%" height="15" fill="rgb(251,10,15)" fg:x="2563" fg:w="1"/><text x="65.0868%" y="367.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.03%)</title><rect x="64.8368%" y="341" width="0.0253%" height="15" fill="rgb(228,207,15)" fg:x="2563" fg:w="1"/><text x="65.0868%" y="351.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (1 samples, 0.03%)</title><rect x="64.8368%" y="325" width="0.0253%" height="15" fill="rgb(241,99,19)" fg:x="2563" fg:w="1"/><text x="65.0868%" y="335.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.05%)</title><rect x="64.8621%" y="373" width="0.0506%" height="15" fill="rgb(207,104,49)" fg:x="2564" fg:w="2"/><text x="65.1121%" y="383.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="64.8874%" y="357" width="0.0253%" height="15" fill="rgb(234,99,18)" fg:x="2565" fg:w="1"/><text x="65.1374%" y="367.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="64.8874%" y="341" width="0.0253%" height="15" fill="rgb(213,191,49)" fg:x="2565" fg:w="1"/><text x="65.1374%" y="351.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="64.8874%" y="325" width="0.0253%" height="15" fill="rgb(210,226,19)" fg:x="2565" fg:w="1"/><text x="65.1374%" y="335.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.03%)</title><rect x="64.8874%" y="309" width="0.0253%" height="15" fill="rgb(229,97,18)" fg:x="2565" fg:w="1"/><text x="65.1374%" y="319.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.03%)</title><rect x="64.8874%" y="293" width="0.0253%" height="15" fill="rgb(211,167,15)" fg:x="2565" fg:w="1"/><text x="65.1374%" y="303.50"></text></g><g><title>tick_sched_timer (1 samples, 0.03%)</title><rect x="64.8874%" y="277" width="0.0253%" height="15" fill="rgb(210,169,34)" fg:x="2565" fg:w="1"/><text x="65.1374%" y="287.50"></text></g><g><title>tick_sched_handle (1 samples, 0.03%)</title><rect x="64.8874%" y="261" width="0.0253%" height="15" fill="rgb(241,121,31)" fg:x="2565" fg:w="1"/><text x="65.1374%" y="271.50"></text></g><g><title>update_process_times (1 samples, 0.03%)</title><rect x="64.8874%" y="245" width="0.0253%" height="15" fill="rgb(232,40,11)" fg:x="2565" fg:w="1"/><text x="65.1374%" y="255.50"></text></g><g><title>scheduler_tick (1 samples, 0.03%)</title><rect x="64.8874%" y="229" width="0.0253%" height="15" fill="rgb(205,86,26)" fg:x="2565" fg:w="1"/><text x="65.1374%" y="239.50"></text></g><g><title>perf_event_task_tick (1 samples, 0.03%)</title><rect x="64.8874%" y="213" width="0.0253%" height="15" fill="rgb(231,126,28)" fg:x="2565" fg:w="1"/><text x="65.1374%" y="223.50"></text></g><g><title>perf_adjust_freq_unthr_context (1 samples, 0.03%)</title><rect x="64.8874%" y="197" width="0.0253%" height="15" fill="rgb(219,221,18)" fg:x="2565" fg:w="1"/><text x="65.1374%" y="207.50"></text></g><g><title>perf_ibs_stop (1 samples, 0.03%)</title><rect x="64.8874%" y="181" width="0.0253%" height="15" fill="rgb(211,40,0)" fg:x="2565" fg:w="1"/><text x="65.1374%" y="191.50"></text></g><g><title>native_read_msr (1 samples, 0.03%)</title><rect x="64.8874%" y="165" width="0.0253%" height="15" fill="rgb(239,85,43)" fg:x="2565" fg:w="1"/><text x="65.1374%" y="175.50"></text></g><g><title>chacha20::backends::avx2::inner (45 samples, 1.14%)</title><rect x="63.7996%" y="421" width="1.1384%" height="15" fill="rgb(231,55,21)" fg:x="2522" fg:w="45"/><text x="64.0496%" y="431.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (45 samples, 1.14%)</title><rect x="63.7996%" y="405" width="1.1384%" height="15" fill="rgb(225,184,43)" fg:x="2522" fg:w="45"/><text x="64.0496%" y="415.50"></text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;generic_array::GenericArray&lt;u8,N&gt;,M&gt;&gt;::xor_in2out (39 samples, 0.99%)</title><rect x="63.9514%" y="389" width="0.9866%" height="15" fill="rgb(251,158,41)" fg:x="2528" fg:w="39"/><text x="64.2014%" y="399.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.03%)</title><rect x="64.9127%" y="373" width="0.0253%" height="15" fill="rgb(234,159,37)" fg:x="2566" fg:w="1"/><text x="65.1627%" y="383.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.03%)</title><rect x="64.9127%" y="357" width="0.0253%" height="15" fill="rgb(216,204,22)" fg:x="2566" fg:w="1"/><text x="65.1627%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.03%)</title><rect x="64.9127%" y="341" width="0.0253%" height="15" fill="rgb(214,17,3)" fg:x="2566" fg:w="1"/><text x="65.1627%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="64.9127%" y="325" width="0.0253%" height="15" fill="rgb(212,111,17)" fg:x="2566" fg:w="1"/><text x="65.1627%" y="335.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="64.9127%" y="309" width="0.0253%" height="15" fill="rgb(221,157,24)" fg:x="2566" fg:w="1"/><text x="65.1627%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.03%)</title><rect x="64.9127%" y="293" width="0.0253%" height="15" fill="rgb(252,16,13)" fg:x="2566" fg:w="1"/><text x="65.1627%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.03%)</title><rect x="64.9127%" y="277" width="0.0253%" height="15" fill="rgb(221,62,2)" fg:x="2566" fg:w="1"/><text x="65.1627%" y="287.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (1 samples, 0.03%)</title><rect x="64.9127%" y="261" width="0.0253%" height="15" fill="rgb(247,87,22)" fg:x="2566" fg:w="1"/><text x="65.1627%" y="271.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (1 samples, 0.03%)</title><rect x="64.9127%" y="245" width="0.0253%" height="15" fill="rgb(215,73,9)" fg:x="2566" fg:w="1"/><text x="65.1627%" y="255.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.03%)</title><rect x="64.9127%" y="229" width="0.0253%" height="15" fill="rgb(207,175,33)" fg:x="2566" fg:w="1"/><text x="65.1627%" y="239.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.03%)</title><rect x="64.9127%" y="213" width="0.0253%" height="15" fill="rgb(243,129,54)" fg:x="2566" fg:w="1"/><text x="65.1627%" y="223.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="64.9380%" y="421" width="0.0253%" height="15" fill="rgb(227,119,45)" fg:x="2567" fg:w="1"/><text x="65.1880%" y="431.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.03%)</title><rect x="64.9380%" y="405" width="0.0253%" height="15" fill="rgb(205,109,36)" fg:x="2567" fg:w="1"/><text x="65.1880%" y="415.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (48 samples, 1.21%)</title><rect x="63.7996%" y="469" width="1.2143%" height="15" fill="rgb(205,6,39)" fg:x="2522" fg:w="48"/><text x="64.0496%" y="479.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (48 samples, 1.21%)</title><rect x="63.7996%" y="453" width="1.2143%" height="15" fill="rgb(221,32,16)" fg:x="2522" fg:w="48"/><text x="64.0496%" y="463.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (48 samples, 1.21%)</title><rect x="63.7996%" y="437" width="1.2143%" height="15" fill="rgb(228,144,50)" fg:x="2522" fg:w="48"/><text x="64.0496%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (2 samples, 0.05%)</title><rect x="64.9633%" y="421" width="0.0506%" height="15" fill="rgb(229,201,53)" fg:x="2568" fg:w="2"/><text x="65.2133%" y="431.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="65.0392%" y="325" width="0.0253%" height="15" fill="rgb(249,153,27)" fg:x="2571" fg:w="1"/><text x="65.2892%" y="335.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (2 samples, 0.05%)</title><rect x="65.0645%" y="325" width="0.0506%" height="15" fill="rgb(227,106,25)" fg:x="2572" fg:w="2"/><text x="65.3145%" y="335.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (1 samples, 0.03%)</title><rect x="65.1151%" y="325" width="0.0253%" height="15" fill="rgb(230,65,29)" fg:x="2574" fg:w="1"/><text x="65.3651%" y="335.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (1 samples, 0.03%)</title><rect x="65.1404%" y="325" width="0.0253%" height="15" fill="rgb(221,57,46)" fg:x="2575" fg:w="1"/><text x="65.3904%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="65.1657%" y="325" width="0.0253%" height="15" fill="rgb(229,161,17)" fg:x="2576" fg:w="1"/><text x="65.4157%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.03%)</title><rect x="65.1657%" y="309" width="0.0253%" height="15" fill="rgb(222,213,11)" fg:x="2576" fg:w="1"/><text x="65.4157%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.03%)</title><rect x="65.1910%" y="325" width="0.0253%" height="15" fill="rgb(235,35,13)" fg:x="2577" fg:w="1"/><text x="65.4410%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.03%)</title><rect x="65.2163%" y="325" width="0.0253%" height="15" fill="rgb(233,158,34)" fg:x="2578" fg:w="1"/><text x="65.4663%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="65.2163%" y="309" width="0.0253%" height="15" fill="rgb(215,151,48)" fg:x="2578" fg:w="1"/><text x="65.4663%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="65.2416%" y="325" width="0.0253%" height="15" fill="rgb(229,84,14)" fg:x="2579" fg:w="1"/><text x="65.4916%" y="335.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.03%)</title><rect x="65.2416%" y="309" width="0.0253%" height="15" fill="rgb(229,68,14)" fg:x="2579" fg:w="1"/><text x="65.4916%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (4 samples, 0.10%)</title><rect x="65.2669%" y="325" width="0.1012%" height="15" fill="rgb(243,106,26)" fg:x="2580" fg:w="4"/><text x="65.5169%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="65.3428%" y="309" width="0.0253%" height="15" fill="rgb(206,45,38)" fg:x="2583" fg:w="1"/><text x="65.5928%" y="319.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.05%)</title><rect x="65.3681%" y="325" width="0.0506%" height="15" fill="rgb(226,6,15)" fg:x="2584" fg:w="2"/><text x="65.6181%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (3 samples, 0.08%)</title><rect x="65.4187%" y="325" width="0.0759%" height="15" fill="rgb(232,22,54)" fg:x="2586" fg:w="3"/><text x="65.6687%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="65.4946%" y="325" width="0.0253%" height="15" fill="rgb(229,222,32)" fg:x="2589" fg:w="1"/><text x="65.7446%" y="335.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (21 samples, 0.53%)</title><rect x="65.0139%" y="341" width="0.5312%" height="15" fill="rgb(228,62,29)" fg:x="2570" fg:w="21"/><text x="65.2639%" y="351.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="65.5199%" y="325" width="0.0253%" height="15" fill="rgb(251,103,34)" fg:x="2590" fg:w="1"/><text x="65.7699%" y="335.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (2 samples, 0.05%)</title><rect x="65.5452%" y="341" width="0.0506%" height="15" fill="rgb(233,12,30)" fg:x="2591" fg:w="2"/><text x="65.7952%" y="351.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="65.5705%" y="325" width="0.0253%" height="15" fill="rgb(238,52,0)" fg:x="2592" fg:w="1"/><text x="65.8205%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.05%)</title><rect x="65.5958%" y="341" width="0.0506%" height="15" fill="rgb(223,98,5)" fg:x="2593" fg:w="2"/><text x="65.8458%" y="351.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (74 samples, 1.87%)</title><rect x="63.7996%" y="517" width="1.8720%" height="15" fill="rgb(228,75,37)" fg:x="2522" fg:w="74"/><text x="64.0496%" y="527.50">c..</text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (74 samples, 1.87%)</title><rect x="63.7996%" y="501" width="1.8720%" height="15" fill="rgb(205,115,49)" fg:x="2522" fg:w="74"/><text x="64.0496%" y="511.50">c..</text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (74 samples, 1.87%)</title><rect x="63.7996%" y="485" width="1.8720%" height="15" fill="rgb(250,154,43)" fg:x="2522" fg:w="74"/><text x="64.0496%" y="495.50">&lt;..</text></g><g><title>cipher::stream_core::StreamCipherCore::write_keystream_block (26 samples, 0.66%)</title><rect x="65.0139%" y="469" width="0.6577%" height="15" fill="rgb(226,43,29)" fg:x="2570" fg:w="26"/><text x="65.2639%" y="479.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (26 samples, 0.66%)</title><rect x="65.0139%" y="453" width="0.6577%" height="15" fill="rgb(249,228,39)" fg:x="2570" fg:w="26"/><text x="65.2639%" y="463.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (26 samples, 0.66%)</title><rect x="65.0139%" y="437" width="0.6577%" height="15" fill="rgb(216,79,43)" fg:x="2570" fg:w="26"/><text x="65.2639%" y="447.50"></text></g><g><title>chacha20::backends::avx2::inner (26 samples, 0.66%)</title><rect x="65.0139%" y="421" width="0.6577%" height="15" fill="rgb(228,95,12)" fg:x="2570" fg:w="26"/><text x="65.2639%" y="431.50"></text></g><g><title>&lt;cipher::stream_core::WriteBlockCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (26 samples, 0.66%)</title><rect x="65.0139%" y="405" width="0.6577%" height="15" fill="rgb(249,221,15)" fg:x="2570" fg:w="26"/><text x="65.2639%" y="415.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (26 samples, 0.66%)</title><rect x="65.0139%" y="389" width="0.6577%" height="15" fill="rgb(233,34,13)" fg:x="2570" fg:w="26"/><text x="65.2639%" y="399.50"></text></g><g><title>chacha20::backends::avx2::rounds (26 samples, 0.66%)</title><rect x="65.0139%" y="373" width="0.6577%" height="15" fill="rgb(214,103,39)" fg:x="2570" fg:w="26"/><text x="65.2639%" y="383.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (26 samples, 0.66%)</title><rect x="65.0139%" y="357" width="0.6577%" height="15" fill="rgb(251,126,39)" fg:x="2570" fg:w="26"/><text x="65.2639%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="65.6463%" y="341" width="0.0253%" height="15" fill="rgb(214,216,36)" fg:x="2595" fg:w="1"/><text x="65.8963%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (2 samples, 0.05%)</title><rect x="65.6716%" y="405" width="0.0506%" height="15" fill="rgb(220,221,8)" fg:x="2596" fg:w="2"/><text x="65.9216%" y="415.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (3 samples, 0.08%)</title><rect x="65.7222%" y="405" width="0.0759%" height="15" fill="rgb(240,216,3)" fg:x="2598" fg:w="3"/><text x="65.9722%" y="415.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (3 samples, 0.08%)</title><rect x="65.7222%" y="389" width="0.0759%" height="15" fill="rgb(232,218,17)" fg:x="2598" fg:w="3"/><text x="65.9722%" y="399.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (3 samples, 0.08%)</title><rect x="65.7222%" y="373" width="0.0759%" height="15" fill="rgb(229,163,45)" fg:x="2598" fg:w="3"/><text x="65.9722%" y="383.50"></text></g><g><title>core::core_arch::simd::i8x32::new (1 samples, 0.03%)</title><rect x="65.7728%" y="357" width="0.0253%" height="15" fill="rgb(231,110,42)" fg:x="2600" fg:w="1"/><text x="66.0228%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (3 samples, 0.08%)</title><rect x="65.7981%" y="373" width="0.0759%" height="15" fill="rgb(208,170,48)" fg:x="2601" fg:w="3"/><text x="66.0481%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="65.8487%" y="357" width="0.0253%" height="15" fill="rgb(239,116,25)" fg:x="2603" fg:w="1"/><text x="66.0987%" y="367.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="65.8487%" y="341" width="0.0253%" height="15" fill="rgb(219,200,50)" fg:x="2603" fg:w="1"/><text x="66.0987%" y="351.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="65.8487%" y="325" width="0.0253%" height="15" fill="rgb(245,200,0)" fg:x="2603" fg:w="1"/><text x="66.0987%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_blend_epi32 (1 samples, 0.03%)</title><rect x="65.8740%" y="373" width="0.0253%" height="15" fill="rgb(245,119,33)" fg:x="2604" fg:w="1"/><text x="66.1240%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="66.1017%" y="357" width="0.0253%" height="15" fill="rgb(231,125,12)" fg:x="2613" fg:w="1"/><text x="66.3517%" y="367.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="66.1017%" y="341" width="0.0253%" height="15" fill="rgb(216,96,41)" fg:x="2613" fg:w="1"/><text x="66.3517%" y="351.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="66.1017%" y="325" width="0.0253%" height="15" fill="rgb(248,43,45)" fg:x="2613" fg:w="1"/><text x="66.3517%" y="335.50"></text></g><g><title>core::core_arch::simd::i8x32::new (1 samples, 0.03%)</title><rect x="66.1017%" y="309" width="0.0253%" height="15" fill="rgb(217,222,7)" fg:x="2613" fg:w="1"/><text x="66.3517%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (10 samples, 0.25%)</title><rect x="65.8993%" y="373" width="0.2530%" height="15" fill="rgb(233,28,6)" fg:x="2605" fg:w="10"/><text x="66.1493%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="66.1270%" y="357" width="0.0253%" height="15" fill="rgb(231,218,15)" fg:x="2614" fg:w="1"/><text x="66.3770%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (2 samples, 0.05%)</title><rect x="66.1523%" y="357" width="0.0506%" height="15" fill="rgb(226,171,48)" fg:x="2615" fg:w="2"/><text x="66.4023%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (5 samples, 0.13%)</title><rect x="66.1523%" y="373" width="0.1265%" height="15" fill="rgb(235,201,9)" fg:x="2615" fg:w="5"/><text x="66.4023%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (3 samples, 0.08%)</title><rect x="66.2029%" y="357" width="0.0759%" height="15" fill="rgb(217,80,15)" fg:x="2617" fg:w="3"/><text x="66.4529%" y="367.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (3 samples, 0.08%)</title><rect x="66.2029%" y="341" width="0.0759%" height="15" fill="rgb(219,152,8)" fg:x="2617" fg:w="3"/><text x="66.4529%" y="351.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (3 samples, 0.08%)</title><rect x="66.2029%" y="325" width="0.0759%" height="15" fill="rgb(243,107,38)" fg:x="2617" fg:w="3"/><text x="66.4529%" y="335.50"></text></g><g><title>core::core_arch::simd::i8x32::new (1 samples, 0.03%)</title><rect x="66.2535%" y="309" width="0.0253%" height="15" fill="rgb(231,17,5)" fg:x="2619" fg:w="1"/><text x="66.5035%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (4 samples, 0.10%)</title><rect x="66.2788%" y="373" width="0.1012%" height="15" fill="rgb(209,25,54)" fg:x="2620" fg:w="4"/><text x="66.5288%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi64 (1 samples, 0.03%)</title><rect x="66.3800%" y="373" width="0.0253%" height="15" fill="rgb(219,0,2)" fg:x="2624" fg:w="1"/><text x="66.6300%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (1 samples, 0.03%)</title><rect x="66.4053%" y="373" width="0.0253%" height="15" fill="rgb(246,9,5)" fg:x="2625" fg:w="1"/><text x="66.6553%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_unpacklo_epi64 (1 samples, 0.03%)</title><rect x="66.4306%" y="373" width="0.0253%" height="15" fill="rgb(226,159,4)" fg:x="2626" fg:w="1"/><text x="66.6806%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi32 (2 samples, 0.05%)</title><rect x="66.4559%" y="373" width="0.0506%" height="15" fill="rgb(219,175,34)" fg:x="2627" fg:w="2"/><text x="66.7059%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (2 samples, 0.05%)</title><rect x="66.5065%" y="373" width="0.0506%" height="15" fill="rgb(236,10,46)" fg:x="2629" fg:w="2"/><text x="66.7565%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (2 samples, 0.05%)</title><rect x="66.5065%" y="357" width="0.0506%" height="15" fill="rgb(240,211,16)" fg:x="2629" fg:w="2"/><text x="66.7565%" y="367.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (2 samples, 0.05%)</title><rect x="66.5065%" y="341" width="0.0506%" height="15" fill="rgb(205,3,43)" fg:x="2629" fg:w="2"/><text x="66.7565%" y="351.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="66.5570%" y="373" width="0.0253%" height="15" fill="rgb(245,7,22)" fg:x="2631" fg:w="1"/><text x="66.8070%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.05%)</title><rect x="66.5823%" y="373" width="0.0506%" height="15" fill="rgb(239,132,32)" fg:x="2632" fg:w="2"/><text x="66.8323%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (2 samples, 0.05%)</title><rect x="66.6329%" y="373" width="0.0506%" height="15" fill="rgb(228,202,34)" fg:x="2634" fg:w="2"/><text x="66.8829%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (4 samples, 0.10%)</title><rect x="66.6835%" y="373" width="0.1012%" height="15" fill="rgb(254,200,22)" fg:x="2636" fg:w="4"/><text x="66.9335%" y="383.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (4 samples, 0.10%)</title><rect x="66.7847%" y="373" width="0.1012%" height="15" fill="rgb(219,10,39)" fg:x="2640" fg:w="4"/><text x="67.0347%" y="383.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (3 samples, 0.08%)</title><rect x="66.8100%" y="357" width="0.0759%" height="15" fill="rgb(226,210,39)" fg:x="2641" fg:w="3"/><text x="67.0600%" y="367.50"></text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_loaded_blocks (1 samples, 0.03%)</title><rect x="66.8859%" y="373" width="0.0253%" height="15" fill="rgb(208,219,16)" fg:x="2644" fg:w="1"/><text x="67.1359%" y="383.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (45 samples, 1.14%)</title><rect x="65.7981%" y="389" width="1.1384%" height="15" fill="rgb(216,158,51)" fg:x="2601" fg:w="45"/><text x="66.0481%" y="399.50"></text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_par_blocks (1 samples, 0.03%)</title><rect x="66.9112%" y="373" width="0.0253%" height="15" fill="rgb(233,14,44)" fg:x="2645" fg:w="1"/><text x="67.1612%" y="383.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Add&gt;::add (1 samples, 0.03%)</title><rect x="66.9365%" y="389" width="0.0253%" height="15" fill="rgb(237,97,39)" fg:x="2646" fg:w="1"/><text x="67.1865%" y="399.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (1 samples, 0.03%)</title><rect x="66.9365%" y="373" width="0.0253%" height="15" fill="rgb(218,198,43)" fg:x="2646" fg:w="1"/><text x="67.1865%" y="383.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (1 samples, 0.03%)</title><rect x="66.9365%" y="357" width="0.0253%" height="15" fill="rgb(231,104,20)" fg:x="2646" fg:w="1"/><text x="67.1865%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.03%)</title><rect x="66.9871%" y="373" width="0.0253%" height="15" fill="rgb(254,36,13)" fg:x="2648" fg:w="1"/><text x="67.2371%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.03%)</title><rect x="67.0124%" y="373" width="0.0253%" height="15" fill="rgb(248,14,50)" fg:x="2649" fg:w="1"/><text x="67.2624%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (1 samples, 0.03%)</title><rect x="67.0377%" y="373" width="0.0253%" height="15" fill="rgb(217,107,29)" fg:x="2650" fg:w="1"/><text x="67.2877%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="67.0630%" y="373" width="0.0253%" height="15" fill="rgb(251,169,33)" fg:x="2651" fg:w="1"/><text x="67.3130%" y="383.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (1 samples, 0.03%)</title><rect x="67.0883%" y="373" width="0.0253%" height="15" fill="rgb(217,108,32)" fg:x="2652" fg:w="1"/><text x="67.3383%" y="383.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (1 samples, 0.03%)</title><rect x="67.0883%" y="357" width="0.0253%" height="15" fill="rgb(219,66,42)" fg:x="2652" fg:w="1"/><text x="67.3383%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (2 samples, 0.05%)</title><rect x="67.1136%" y="357" width="0.0506%" height="15" fill="rgb(206,180,7)" fg:x="2653" fg:w="2"/><text x="67.3636%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (6 samples, 0.15%)</title><rect x="67.1642%" y="357" width="0.1518%" height="15" fill="rgb(208,226,31)" fg:x="2655" fg:w="6"/><text x="67.4142%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (1 samples, 0.03%)</title><rect x="67.3160%" y="357" width="0.0253%" height="15" fill="rgb(218,26,49)" fg:x="2661" fg:w="1"/><text x="67.5660%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.05%)</title><rect x="67.3413%" y="357" width="0.0506%" height="15" fill="rgb(233,197,48)" fg:x="2662" fg:w="2"/><text x="67.5913%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (2 samples, 0.05%)</title><rect x="67.3919%" y="357" width="0.0506%" height="15" fill="rgb(252,181,51)" fg:x="2664" fg:w="2"/><text x="67.6419%" y="367.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (67 samples, 1.69%)</title><rect x="65.7981%" y="405" width="1.6949%" height="15" fill="rgb(253,90,19)" fg:x="2601" fg:w="67"/><text x="66.0481%" y="415.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (21 samples, 0.53%)</title><rect x="66.9618%" y="389" width="0.5312%" height="15" fill="rgb(215,171,30)" fg:x="2647" fg:w="21"/><text x="67.2118%" y="399.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (15 samples, 0.38%)</title><rect x="67.1136%" y="373" width="0.3795%" height="15" fill="rgb(214,222,9)" fg:x="2653" fg:w="15"/><text x="67.3636%" y="383.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (2 samples, 0.05%)</title><rect x="67.4424%" y="357" width="0.0506%" height="15" fill="rgb(223,3,22)" fg:x="2666" fg:w="2"/><text x="67.6924%" y="367.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (2 samples, 0.05%)</title><rect x="67.4424%" y="341" width="0.0506%" height="15" fill="rgb(225,196,46)" fg:x="2666" fg:w="2"/><text x="67.6924%" y="351.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (1 samples, 0.03%)</title><rect x="67.4930%" y="389" width="0.0253%" height="15" fill="rgb(209,110,37)" fg:x="2668" fg:w="1"/><text x="67.7430%" y="399.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (1 samples, 0.03%)</title><rect x="67.4930%" y="373" width="0.0253%" height="15" fill="rgb(249,89,12)" fg:x="2668" fg:w="1"/><text x="67.7430%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (4 samples, 0.10%)</title><rect x="67.5183%" y="373" width="0.1012%" height="15" fill="rgb(226,27,33)" fg:x="2669" fg:w="4"/><text x="67.7683%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="67.5942%" y="357" width="0.0253%" height="15" fill="rgb(213,82,22)" fg:x="2672" fg:w="1"/><text x="67.8442%" y="367.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (1 samples, 0.03%)</title><rect x="67.6195%" y="357" width="0.0253%" height="15" fill="rgb(248,140,0)" fg:x="2673" fg:w="1"/><text x="67.8695%" y="367.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (1 samples, 0.03%)</title><rect x="67.6195%" y="341" width="0.0253%" height="15" fill="rgb(228,106,3)" fg:x="2673" fg:w="1"/><text x="67.8695%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (2 samples, 0.05%)</title><rect x="67.6195%" y="373" width="0.0506%" height="15" fill="rgb(209,23,37)" fg:x="2673" fg:w="2"/><text x="67.8695%" y="383.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (1 samples, 0.03%)</title><rect x="67.6448%" y="357" width="0.0253%" height="15" fill="rgb(241,93,50)" fg:x="2674" fg:w="1"/><text x="67.8948%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.03%)</title><rect x="67.6701%" y="357" width="0.0253%" height="15" fill="rgb(253,46,43)" fg:x="2675" fg:w="1"/><text x="67.9201%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.03%)</title><rect x="67.6954%" y="357" width="0.0253%" height="15" fill="rgb(226,206,43)" fg:x="2676" fg:w="1"/><text x="67.9454%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (1 samples, 0.03%)</title><rect x="67.7207%" y="357" width="0.0253%" height="15" fill="rgb(217,54,7)" fg:x="2677" fg:w="1"/><text x="67.9707%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (4 samples, 0.10%)</title><rect x="67.6701%" y="373" width="0.1012%" height="15" fill="rgb(223,5,52)" fg:x="2675" fg:w="4"/><text x="67.9201%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.03%)</title><rect x="67.7460%" y="357" width="0.0253%" height="15" fill="rgb(206,52,46)" fg:x="2678" fg:w="1"/><text x="67.9960%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (3 samples, 0.08%)</title><rect x="67.7713%" y="373" width="0.0759%" height="15" fill="rgb(253,136,11)" fg:x="2679" fg:w="3"/><text x="68.0213%" y="383.50"></text></g><g><title>core::core_arch::simd::u64x4::splat (2 samples, 0.05%)</title><rect x="67.7966%" y="357" width="0.0506%" height="15" fill="rgb(208,106,33)" fg:x="2680" fg:w="2"/><text x="68.0466%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_unpackhi_epi64 (1 samples, 0.03%)</title><rect x="67.8472%" y="373" width="0.0253%" height="15" fill="rgb(206,54,4)" fg:x="2682" fg:w="1"/><text x="68.0972%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.03%)</title><rect x="67.8472%" y="357" width="0.0253%" height="15" fill="rgb(213,3,15)" fg:x="2682" fg:w="1"/><text x="68.0972%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_unpacklo_epi64 (2 samples, 0.05%)</title><rect x="67.8725%" y="373" width="0.0506%" height="15" fill="rgb(252,211,39)" fg:x="2683" fg:w="2"/><text x="68.1225%" y="383.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (2 samples, 0.05%)</title><rect x="67.8725%" y="357" width="0.0506%" height="15" fill="rgb(223,6,36)" fg:x="2683" fg:w="2"/><text x="68.1225%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="67.9231%" y="373" width="0.0253%" height="15" fill="rgb(252,169,45)" fg:x="2685" fg:w="1"/><text x="68.1731%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (2 samples, 0.05%)</title><rect x="67.9484%" y="373" width="0.0506%" height="15" fill="rgb(212,48,26)" fg:x="2686" fg:w="2"/><text x="68.1984%" y="383.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (3 samples, 0.08%)</title><rect x="67.9990%" y="373" width="0.0759%" height="15" fill="rgb(251,102,48)" fg:x="2688" fg:w="3"/><text x="68.2490%" y="383.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (3 samples, 0.08%)</title><rect x="67.9990%" y="357" width="0.0759%" height="15" fill="rgb(243,208,16)" fg:x="2688" fg:w="3"/><text x="68.2490%" y="367.50"></text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_loaded_blocks (23 samples, 0.58%)</title><rect x="67.5183%" y="389" width="0.5818%" height="15" fill="rgb(219,96,24)" fg:x="2669" fg:w="23"/><text x="67.7683%" y="399.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (1 samples, 0.03%)</title><rect x="68.0749%" y="373" width="0.0253%" height="15" fill="rgb(219,33,29)" fg:x="2691" fg:w="1"/><text x="68.3249%" y="383.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::decrypt_in_place_detached (174 samples, 4.40%)</title><rect x="63.7238%" y="533" width="4.4017%" height="15" fill="rgb(223,176,5)" fg:x="2519" fg:w="174"/><text x="63.9738%" y="543.50">chach..</text></g><g><title>universal_hash::UniversalHash::update_padded (97 samples, 2.45%)</title><rect x="65.6716%" y="517" width="2.4538%" height="15" fill="rgb(228,140,14)" fg:x="2596" fg:w="97"/><text x="65.9216%" y="527.50">un..</text></g><g><title>universal_hash::UniversalHash::update (97 samples, 2.45%)</title><rect x="65.6716%" y="501" width="2.4538%" height="15" fill="rgb(217,179,31)" fg:x="2596" fg:w="97"/><text x="65.9216%" y="511.50">un..</text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (97 samples, 2.45%)</title><rect x="65.6716%" y="485" width="2.4538%" height="15" fill="rgb(230,9,30)" fg:x="2596" fg:w="97"/><text x="65.9216%" y="495.50">&lt;p..</text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (97 samples, 2.45%)</title><rect x="65.6716%" y="469" width="2.4538%" height="15" fill="rgb(230,136,20)" fg:x="2596" fg:w="97"/><text x="65.9216%" y="479.50">&lt;p..</text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (97 samples, 2.45%)</title><rect x="65.6716%" y="453" width="2.4538%" height="15" fill="rgb(215,210,22)" fg:x="2596" fg:w="97"/><text x="65.9216%" y="463.50">&lt;u..</text></g><g><title>&lt;poly1305::backend::avx2::State as universal_hash::UhfBackend&gt;::proc_par_blocks (97 samples, 2.45%)</title><rect x="65.6716%" y="437" width="2.4538%" height="15" fill="rgb(218,43,5)" fg:x="2596" fg:w="97"/><text x="65.9216%" y="447.50">&lt;p..</text></g><g><title>poly1305::backend::avx2::State::compute_par_blocks (97 samples, 2.45%)</title><rect x="65.6716%" y="421" width="2.4538%" height="15" fill="rgb(216,11,5)" fg:x="2596" fg:w="97"/><text x="65.9216%" y="431.50">po..</text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_par_blocks (25 samples, 0.63%)</title><rect x="67.4930%" y="405" width="0.6324%" height="15" fill="rgb(209,82,29)" fg:x="2668" fg:w="25"/><text x="67.7430%" y="415.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (1 samples, 0.03%)</title><rect x="68.1002%" y="389" width="0.0253%" height="15" fill="rgb(244,115,12)" fg:x="2692" fg:w="1"/><text x="68.3502%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.03%)</title><rect x="68.1255%" y="485" width="0.0253%" height="15" fill="rgb(222,82,18)" fg:x="2693" fg:w="1"/><text x="68.3755%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.03%)</title><rect x="68.1508%" y="437" width="0.0253%" height="15" fill="rgb(249,227,8)" fg:x="2694" fg:w="1"/><text x="68.4008%" y="447.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (1 samples, 0.03%)</title><rect x="68.1508%" y="421" width="0.0253%" height="15" fill="rgb(253,141,45)" fg:x="2694" fg:w="1"/><text x="68.4008%" y="431.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier as core::ops::arith::Mul&gt;::mul (2 samples, 0.05%)</title><rect x="68.1508%" y="469" width="0.0506%" height="15" fill="rgb(234,184,4)" fg:x="2694" fg:w="2"/><text x="68.4008%" y="479.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (2 samples, 0.05%)</title><rect x="68.1508%" y="453" width="0.0506%" height="15" fill="rgb(218,194,23)" fg:x="2694" fg:w="2"/><text x="68.4008%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (1 samples, 0.03%)</title><rect x="68.1761%" y="437" width="0.0253%" height="15" fill="rgb(235,66,41)" fg:x="2695" fg:w="1"/><text x="68.4261%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.03%)</title><rect x="68.1761%" y="421" width="0.0253%" height="15" fill="rgb(245,217,1)" fg:x="2695" fg:w="1"/><text x="68.4261%" y="431.50"></text></g><g><title>&lt;poly1305::Poly1305 as crypto_common::KeyInit&gt;::new (4 samples, 0.10%)</title><rect x="68.1255%" y="517" width="0.1012%" height="15" fill="rgb(229,91,1)" fg:x="2693" fg:w="4"/><text x="68.3755%" y="527.50"></text></g><g><title>poly1305::backend::autodetect::State::new (4 samples, 0.10%)</title><rect x="68.1255%" y="501" width="0.1012%" height="15" fill="rgb(207,101,30)" fg:x="2693" fg:w="4"/><text x="68.3755%" y="511.50"></text></g><g><title>poly1305::backend::avx2::State::new (3 samples, 0.08%)</title><rect x="68.1508%" y="485" width="0.0759%" height="15" fill="rgb(223,82,49)" fg:x="2694" fg:w="3"/><text x="68.4008%" y="495.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced130::reduce (1 samples, 0.03%)</title><rect x="68.2014%" y="469" width="0.0253%" height="15" fill="rgb(218,167,17)" fg:x="2696" fg:w="1"/><text x="68.4514%" y="479.50"></text></g><g><title>poly1305::backend::avx2::helpers::adc (1 samples, 0.03%)</title><rect x="68.2014%" y="453" width="0.0253%" height="15" fill="rgb(208,103,14)" fg:x="2696" fg:w="1"/><text x="68.4514%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (1 samples, 0.03%)</title><rect x="68.2014%" y="437" width="0.0253%" height="15" fill="rgb(238,20,8)" fg:x="2696" fg:w="1"/><text x="68.4514%" y="447.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.03%)</title><rect x="68.2014%" y="421" width="0.0253%" height="15" fill="rgb(218,80,54)" fg:x="2696" fg:w="1"/><text x="68.4514%" y="431.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="68.2267%" y="325" width="0.0253%" height="15" fill="rgb(240,144,17)" fg:x="2697" fg:w="1"/><text x="68.4767%" y="335.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (1 samples, 0.03%)</title><rect x="68.2267%" y="309" width="0.0253%" height="15" fill="rgb(245,27,50)" fg:x="2697" fg:w="1"/><text x="68.4767%" y="319.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (2 samples, 0.05%)</title><rect x="68.2520%" y="325" width="0.0506%" height="15" fill="rgb(251,51,7)" fg:x="2698" fg:w="2"/><text x="68.5020%" y="335.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (1 samples, 0.03%)</title><rect x="68.3026%" y="325" width="0.0253%" height="15" fill="rgb(245,217,29)" fg:x="2700" fg:w="1"/><text x="68.5526%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="68.3531%" y="309" width="0.0253%" height="15" fill="rgb(221,176,29)" fg:x="2702" fg:w="1"/><text x="68.6031%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (3 samples, 0.08%)</title><rect x="68.3279%" y="325" width="0.0759%" height="15" fill="rgb(212,180,24)" fg:x="2701" fg:w="3"/><text x="68.5779%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="68.3784%" y="309" width="0.0253%" height="15" fill="rgb(254,24,2)" fg:x="2703" fg:w="1"/><text x="68.6284%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (3 samples, 0.08%)</title><rect x="68.4037%" y="325" width="0.0759%" height="15" fill="rgb(230,100,2)" fg:x="2704" fg:w="3"/><text x="68.6537%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.05%)</title><rect x="68.4290%" y="309" width="0.0506%" height="15" fill="rgb(219,142,25)" fg:x="2705" fg:w="2"/><text x="68.6790%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.03%)</title><rect x="68.4796%" y="325" width="0.0253%" height="15" fill="rgb(240,73,43)" fg:x="2707" fg:w="1"/><text x="68.7296%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="68.4796%" y="309" width="0.0253%" height="15" fill="rgb(214,114,15)" fg:x="2707" fg:w="1"/><text x="68.7296%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (3 samples, 0.08%)</title><rect x="68.5049%" y="325" width="0.0759%" height="15" fill="rgb(207,130,4)" fg:x="2708" fg:w="3"/><text x="68.7549%" y="335.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.03%)</title><rect x="68.5555%" y="309" width="0.0253%" height="15" fill="rgb(221,25,40)" fg:x="2710" fg:w="1"/><text x="68.8055%" y="319.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="68.6314%" y="309" width="0.0253%" height="15" fill="rgb(241,184,7)" fg:x="2713" fg:w="1"/><text x="68.8814%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (4 samples, 0.10%)</title><rect x="68.5808%" y="325" width="0.1012%" height="15" fill="rgb(235,159,4)" fg:x="2711" fg:w="4"/><text x="68.8308%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="68.6567%" y="309" width="0.0253%" height="15" fill="rgb(214,87,48)" fg:x="2714" fg:w="1"/><text x="68.9067%" y="319.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.03%)</title><rect x="68.6567%" y="293" width="0.0253%" height="15" fill="rgb(246,198,24)" fg:x="2714" fg:w="1"/><text x="68.9067%" y="303.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (5 samples, 0.13%)</title><rect x="68.6820%" y="325" width="0.1265%" height="15" fill="rgb(209,66,40)" fg:x="2715" fg:w="5"/><text x="68.9320%" y="335.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (24 samples, 0.61%)</title><rect x="68.2267%" y="341" width="0.6071%" height="15" fill="rgb(233,147,39)" fg:x="2697" fg:w="24"/><text x="68.4767%" y="351.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="68.8085%" y="325" width="0.0253%" height="15" fill="rgb(231,145,52)" fg:x="2720" fg:w="1"/><text x="69.0585%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="68.8338%" y="325" width="0.0253%" height="15" fill="rgb(206,20,26)" fg:x="2721" fg:w="1"/><text x="69.0838%" y="335.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (2 samples, 0.05%)</title><rect x="68.8338%" y="341" width="0.0506%" height="15" fill="rgb(238,220,4)" fg:x="2721" fg:w="2"/><text x="69.0838%" y="351.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="68.8591%" y="325" width="0.0253%" height="15" fill="rgb(252,195,42)" fg:x="2722" fg:w="1"/><text x="69.1091%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="68.8844%" y="325" width="0.0253%" height="15" fill="rgb(209,10,6)" fg:x="2723" fg:w="1"/><text x="69.1344%" y="335.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (3 samples, 0.08%)</title><rect x="68.8844%" y="341" width="0.0759%" height="15" fill="rgb(229,3,52)" fg:x="2723" fg:w="3"/><text x="69.1344%" y="351.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (2 samples, 0.05%)</title><rect x="68.9097%" y="325" width="0.0506%" height="15" fill="rgb(253,49,37)" fg:x="2724" fg:w="2"/><text x="69.1597%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (2 samples, 0.05%)</title><rect x="68.9603%" y="341" width="0.0506%" height="15" fill="rgb(240,103,49)" fg:x="2726" fg:w="2"/><text x="69.2103%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="69.0109%" y="341" width="0.0253%" height="15" fill="rgb(250,182,30)" fg:x="2728" fg:w="1"/><text x="69.2609%" y="351.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="69.0362%" y="341" width="0.0253%" height="15" fill="rgb(248,8,30)" fg:x="2729" fg:w="1"/><text x="69.2862%" y="351.50"></text></g><g><title>chacha20::backends::avx2::inner (34 samples, 0.86%)</title><rect x="68.2267%" y="421" width="0.8601%" height="15" fill="rgb(237,120,30)" fg:x="2697" fg:w="34"/><text x="68.4767%" y="431.50"></text></g><g><title>&lt;cipher::stream_core::WriteBlockCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (34 samples, 0.86%)</title><rect x="68.2267%" y="405" width="0.8601%" height="15" fill="rgb(221,146,34)" fg:x="2697" fg:w="34"/><text x="68.4767%" y="415.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (34 samples, 0.86%)</title><rect x="68.2267%" y="389" width="0.8601%" height="15" fill="rgb(242,55,13)" fg:x="2697" fg:w="34"/><text x="68.4767%" y="399.50"></text></g><g><title>chacha20::backends::avx2::rounds (34 samples, 0.86%)</title><rect x="68.2267%" y="373" width="0.8601%" height="15" fill="rgb(242,112,31)" fg:x="2697" fg:w="34"/><text x="68.4767%" y="383.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (34 samples, 0.86%)</title><rect x="68.2267%" y="357" width="0.8601%" height="15" fill="rgb(249,192,27)" fg:x="2697" fg:w="34"/><text x="68.4767%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="69.0615%" y="341" width="0.0253%" height="15" fill="rgb(208,204,44)" fg:x="2730" fg:w="1"/><text x="69.3115%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.03%)</title><rect x="69.0868%" y="421" width="0.0253%" height="15" fill="rgb(208,93,54)" fg:x="2731" fg:w="1"/><text x="69.3368%" y="431.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (40 samples, 1.01%)</title><rect x="68.1255%" y="533" width="1.0119%" height="15" fill="rgb(242,1,31)" fg:x="2693" fg:w="40"/><text x="68.3755%" y="543.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (36 samples, 0.91%)</title><rect x="68.2267%" y="517" width="0.9107%" height="15" fill="rgb(241,83,25)" fg:x="2697" fg:w="36"/><text x="68.4767%" y="527.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (36 samples, 0.91%)</title><rect x="68.2267%" y="501" width="0.9107%" height="15" fill="rgb(205,169,50)" fg:x="2697" fg:w="36"/><text x="68.4767%" y="511.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (36 samples, 0.91%)</title><rect x="68.2267%" y="485" width="0.9107%" height="15" fill="rgb(239,186,37)" fg:x="2697" fg:w="36"/><text x="68.4767%" y="495.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::write_keystream_block (36 samples, 0.91%)</title><rect x="68.2267%" y="469" width="0.9107%" height="15" fill="rgb(205,221,10)" fg:x="2697" fg:w="36"/><text x="68.4767%" y="479.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (36 samples, 0.91%)</title><rect x="68.2267%" y="453" width="0.9107%" height="15" fill="rgb(218,196,15)" fg:x="2697" fg:w="36"/><text x="68.4767%" y="463.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (36 samples, 0.91%)</title><rect x="68.2267%" y="437" width="0.9107%" height="15" fill="rgb(218,196,35)" fg:x="2697" fg:w="36"/><text x="68.4767%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="69.1121%" y="421" width="0.0253%" height="15" fill="rgb(233,63,24)" fg:x="2732" fg:w="1"/><text x="69.3621%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.03%)</title><rect x="69.1374%" y="533" width="0.0253%" height="15" fill="rgb(225,8,4)" fg:x="2733" fg:w="1"/><text x="69.3874%" y="543.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.03%)</title><rect x="69.1627%" y="533" width="0.0253%" height="15" fill="rgb(234,105,35)" fg:x="2734" fg:w="1"/><text x="69.4127%" y="543.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (2 samples, 0.05%)</title><rect x="69.1880%" y="533" width="0.0506%" height="15" fill="rgb(236,21,32)" fg:x="2735" fg:w="2"/><text x="69.4380%" y="543.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (2 samples, 0.05%)</title><rect x="69.1880%" y="517" width="0.0506%" height="15" fill="rgb(228,109,6)" fg:x="2735" fg:w="2"/><text x="69.4380%" y="527.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (2 samples, 0.05%)</title><rect x="69.1880%" y="501" width="0.0506%" height="15" fill="rgb(229,215,31)" fg:x="2735" fg:w="2"/><text x="69.4380%" y="511.50"></text></g><g><title>tftp::encryption::Encryptor&lt;R&gt;::decrypt (227 samples, 5.74%)</title><rect x="63.5720%" y="565" width="5.7425%" height="15" fill="rgb(221,52,54)" fg:x="2513" fg:w="227"/><text x="63.8220%" y="575.50">tftp::e..</text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (227 samples, 5.74%)</title><rect x="63.5720%" y="549" width="5.7425%" height="15" fill="rgb(252,129,43)" fg:x="2513" fg:w="227"/><text x="63.8220%" y="559.50">&lt;chacha..</text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (3 samples, 0.08%)</title><rect x="69.2386%" y="533" width="0.0759%" height="15" fill="rgb(248,183,27)" fg:x="2737" fg:w="3"/><text x="69.4886%" y="543.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.03%)</title><rect x="69.3650%" y="517" width="0.0253%" height="15" fill="rgb(250,0,22)" fg:x="2742" fg:w="1"/><text x="69.6150%" y="527.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.03%)</title><rect x="69.3903%" y="517" width="0.0253%" height="15" fill="rgb(213,166,10)" fg:x="2743" fg:w="1"/><text x="69.6403%" y="527.50"></text></g><g><title>&lt;tftp::client::encryption_socket::EncryptionBoundSocket&lt;S,Rng&gt; as tftp::socket::Socket&gt;::recv_from (262 samples, 6.63%)</title><rect x="62.8636%" y="597" width="6.6279%" height="15" fill="rgb(207,163,36)" fg:x="2485" fg:w="262"/><text x="63.1136%" y="607.50">&lt;tftp::cl..</text></g><g><title>tftp::encrypted_packet::EncryptedPacket::decrypt (234 samples, 5.92%)</title><rect x="63.5720%" y="581" width="5.9196%" height="15" fill="rgb(208,122,22)" fg:x="2513" fg:w="234"/><text x="63.8220%" y="591.50">tftp::en..</text></g><g><title>tftp::encryption::remove_bit_padding (7 samples, 0.18%)</title><rect x="69.3144%" y="565" width="0.1771%" height="15" fill="rgb(207,104,49)" fg:x="2740" fg:w="7"/><text x="69.5644%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.13%)</title><rect x="69.3650%" y="549" width="0.1265%" height="15" fill="rgb(248,211,50)" fg:x="2742" fg:w="5"/><text x="69.6150%" y="559.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (5 samples, 0.13%)</title><rect x="69.3650%" y="533" width="0.1265%" height="15" fill="rgb(217,13,45)" fg:x="2742" fg:w="5"/><text x="69.6150%" y="543.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::pre_dec_end (3 samples, 0.08%)</title><rect x="69.4156%" y="517" width="0.0759%" height="15" fill="rgb(211,216,49)" fg:x="2744" fg:w="3"/><text x="69.6656%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::cast (2 samples, 0.05%)</title><rect x="69.4409%" y="501" width="0.0506%" height="15" fill="rgb(221,58,53)" fg:x="2745" fg:w="2"/><text x="69.6909%" y="511.50"></text></g><g><title>core::cmp::PartialOrd::le (1 samples, 0.03%)</title><rect x="69.4915%" y="565" width="0.0253%" height="15" fill="rgb(220,112,41)" fg:x="2747" fg:w="1"/><text x="69.7415%" y="575.50"></text></g><g><title>&lt;log::Level as core::cmp::PartialOrd&lt;log::LevelFilter&gt;&gt;::partial_cmp (1 samples, 0.03%)</title><rect x="69.4915%" y="549" width="0.0253%" height="15" fill="rgb(236,38,28)" fg:x="2747" fg:w="1"/><text x="69.7415%" y="559.50"></text></g><g><title>&lt;tftp::socket::UdpUnboundSocket as tftp::socket::Socket&gt;::recv_from (1 samples, 0.03%)</title><rect x="69.4915%" y="533" width="0.0253%" height="15" fill="rgb(227,195,22)" fg:x="2747" fg:w="1"/><text x="69.7415%" y="543.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="69.5168%" y="549" width="0.0253%" height="15" fill="rgb(214,55,33)" fg:x="2748" fg:w="1"/><text x="69.7668%" y="559.50"></text></g><g><title>ip_generic_getfrag (1 samples, 0.03%)</title><rect x="69.6180%" y="389" width="0.0253%" height="15" fill="rgb(248,80,13)" fg:x="2752" fg:w="1"/><text x="69.8680%" y="399.50"></text></g><g><title>__check_object_size (1 samples, 0.03%)</title><rect x="69.6180%" y="373" width="0.0253%" height="15" fill="rgb(238,52,6)" fg:x="2752" fg:w="1"/><text x="69.8680%" y="383.50"></text></g><g><title>__check_heap_object (1 samples, 0.03%)</title><rect x="69.6180%" y="357" width="0.0253%" height="15" fill="rgb(224,198,47)" fg:x="2752" fg:w="1"/><text x="69.8680%" y="367.50"></text></g><g><title>__kmalloc_node_track_caller (1 samples, 0.03%)</title><rect x="69.6686%" y="325" width="0.0253%" height="15" fill="rgb(233,171,20)" fg:x="2754" fg:w="1"/><text x="69.9186%" y="335.50"></text></g><g><title>__kmem_cache_alloc_node (1 samples, 0.03%)</title><rect x="69.6686%" y="309" width="0.0253%" height="15" fill="rgb(241,30,25)" fg:x="2754" fg:w="1"/><text x="69.9186%" y="319.50"></text></g><g><title>__cond_resched (1 samples, 0.03%)</title><rect x="69.6686%" y="293" width="0.0253%" height="15" fill="rgb(207,171,38)" fg:x="2754" fg:w="1"/><text x="69.9186%" y="303.50"></text></g><g><title>kmalloc_reserve (3 samples, 0.08%)</title><rect x="69.6433%" y="341" width="0.0759%" height="15" fill="rgb(234,70,1)" fg:x="2753" fg:w="3"/><text x="69.8933%" y="351.50"></text></g><g><title>kmalloc_size_roundup (1 samples, 0.03%)</title><rect x="69.6939%" y="325" width="0.0253%" height="15" fill="rgb(232,178,18)" fg:x="2755" fg:w="1"/><text x="69.9439%" y="335.50"></text></g><g><title>alloc_skb_with_frags (4 samples, 0.10%)</title><rect x="69.6433%" y="373" width="0.1012%" height="15" fill="rgb(241,78,40)" fg:x="2753" fg:w="4"/><text x="69.8933%" y="383.50"></text></g><g><title>__alloc_skb (4 samples, 0.10%)</title><rect x="69.6433%" y="357" width="0.1012%" height="15" fill="rgb(222,35,25)" fg:x="2753" fg:w="4"/><text x="69.8933%" y="367.50"></text></g><g><title>kmem_cache_alloc_node (1 samples, 0.03%)</title><rect x="69.7192%" y="341" width="0.0253%" height="15" fill="rgb(207,92,16)" fg:x="2756" fg:w="1"/><text x="69.9692%" y="351.50"></text></g><g><title>__memset (1 samples, 0.03%)</title><rect x="69.7192%" y="325" width="0.0253%" height="15" fill="rgb(216,59,51)" fg:x="2756" fg:w="1"/><text x="69.9692%" y="335.50"></text></g><g><title>__ip_append_data (8 samples, 0.20%)</title><rect x="69.5674%" y="405" width="0.2024%" height="15" fill="rgb(213,80,28)" fg:x="2750" fg:w="8"/><text x="69.8174%" y="415.50"></text></g><g><title>sock_alloc_send_pskb (5 samples, 0.13%)</title><rect x="69.6433%" y="389" width="0.1265%" height="15" fill="rgb(220,93,7)" fg:x="2753" fg:w="5"/><text x="69.8933%" y="399.50"></text></g><g><title>skb_set_owner_w (1 samples, 0.03%)</title><rect x="69.7445%" y="373" width="0.0253%" height="15" fill="rgb(225,24,44)" fg:x="2757" fg:w="1"/><text x="69.9945%" y="383.50"></text></g><g><title>__ip_make_skb (1 samples, 0.03%)</title><rect x="69.7698%" y="405" width="0.0253%" height="15" fill="rgb(243,74,40)" fg:x="2758" fg:w="1"/><text x="70.0198%" y="415.50"></text></g><g><title>__ip_select_ident (1 samples, 0.03%)</title><rect x="69.7698%" y="389" width="0.0253%" height="15" fill="rgb(228,39,7)" fg:x="2758" fg:w="1"/><text x="70.0198%" y="399.50"></text></g><g><title>ip_make_skb (10 samples, 0.25%)</title><rect x="69.5674%" y="421" width="0.2530%" height="15" fill="rgb(227,79,8)" fg:x="2750" fg:w="10"/><text x="69.8174%" y="431.50"></text></g><g><title>ip_setup_cork (1 samples, 0.03%)</title><rect x="69.7951%" y="405" width="0.0253%" height="15" fill="rgb(236,58,11)" fg:x="2759" fg:w="1"/><text x="70.0451%" y="415.50"></text></g><g><title>ipv4_mtu (1 samples, 0.03%)</title><rect x="69.7951%" y="389" width="0.0253%" height="15" fill="rgb(249,63,35)" fg:x="2759" fg:w="1"/><text x="70.0451%" y="399.50"></text></g><g><title>__ip_finish_output (1 samples, 0.03%)</title><rect x="69.8457%" y="389" width="0.0253%" height="15" fill="rgb(252,114,16)" fg:x="2761" fg:w="1"/><text x="70.0957%" y="399.50"></text></g><g><title>ip_skb_dst_mtu (1 samples, 0.03%)</title><rect x="69.8457%" y="373" width="0.0253%" height="15" fill="rgb(254,151,24)" fg:x="2761" fg:w="1"/><text x="70.0957%" y="383.50"></text></g><g><title>ipv4_conntrack_defrag (1 samples, 0.03%)</title><rect x="69.8710%" y="357" width="0.0253%" height="15" fill="rgb(253,54,39)" fg:x="2762" fg:w="1"/><text x="70.1210%" y="367.50"></text></g><g><title>hash_conntrack_raw (1 samples, 0.03%)</title><rect x="69.8963%" y="341" width="0.0253%" height="15" fill="rgb(243,25,45)" fg:x="2763" fg:w="1"/><text x="70.1463%" y="351.50"></text></g><g><title>siphash_4u64 (1 samples, 0.03%)</title><rect x="69.8963%" y="325" width="0.0253%" height="15" fill="rgb(234,134,9)" fg:x="2763" fg:w="1"/><text x="70.1463%" y="335.50"></text></g><g><title>nf_conntrack_in (2 samples, 0.05%)</title><rect x="69.8963%" y="357" width="0.0506%" height="15" fill="rgb(227,166,31)" fg:x="2763" fg:w="2"/><text x="70.1463%" y="367.50"></text></g><g><title>nf_ct_get_tuple (1 samples, 0.03%)</title><rect x="69.9216%" y="341" width="0.0253%" height="15" fill="rgb(245,143,41)" fg:x="2764" fg:w="1"/><text x="70.1716%" y="351.50"></text></g><g><title>__ip_local_out (4 samples, 0.10%)</title><rect x="69.8710%" y="389" width="0.1012%" height="15" fill="rgb(238,181,32)" fg:x="2762" fg:w="4"/><text x="70.1210%" y="399.50"></text></g><g><title>nf_hook_slow (4 samples, 0.10%)</title><rect x="69.8710%" y="373" width="0.1012%" height="15" fill="rgb(224,113,18)" fg:x="2762" fg:w="4"/><text x="70.1210%" y="383.50"></text></g><g><title>nf_nat_ipv4_local_fn (1 samples, 0.03%)</title><rect x="69.9469%" y="357" width="0.0253%" height="15" fill="rgb(240,229,28)" fg:x="2765" fg:w="1"/><text x="70.1969%" y="367.50"></text></g><g><title>__dev_queue_xmit (2 samples, 0.05%)</title><rect x="69.9975%" y="373" width="0.0506%" height="15" fill="rgb(250,185,3)" fg:x="2767" fg:w="2"/><text x="70.2475%" y="383.50"></text></g><g><title>dev_hard_start_xmit (2 samples, 0.05%)</title><rect x="69.9975%" y="357" width="0.0506%" height="15" fill="rgb(212,59,25)" fg:x="2767" fg:w="2"/><text x="70.2475%" y="367.50"></text></g><g><title>loopback_xmit (2 samples, 0.05%)</title><rect x="69.9975%" y="341" width="0.0506%" height="15" fill="rgb(221,87,20)" fg:x="2767" fg:w="2"/><text x="70.2475%" y="351.50"></text></g><g><title>__netif_rx (1 samples, 0.03%)</title><rect x="70.0228%" y="325" width="0.0253%" height="15" fill="rgb(213,74,28)" fg:x="2768" fg:w="1"/><text x="70.2728%" y="335.50"></text></g><g><title>netif_rx_internal (1 samples, 0.03%)</title><rect x="70.0228%" y="309" width="0.0253%" height="15" fill="rgb(224,132,34)" fg:x="2768" fg:w="1"/><text x="70.2728%" y="319.50"></text></g><g><title>enqueue_to_backlog (1 samples, 0.03%)</title><rect x="70.0228%" y="293" width="0.0253%" height="15" fill="rgb(222,101,24)" fg:x="2768" fg:w="1"/><text x="70.2728%" y="303.50"></text></g><g><title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="70.0228%" y="277" width="0.0253%" height="15" fill="rgb(254,142,4)" fg:x="2768" fg:w="1"/><text x="70.2728%" y="287.50"></text></g><g><title>__netif_receive_skb_core.constprop.0 (1 samples, 0.03%)</title><rect x="70.0734%" y="261" width="0.0253%" height="15" fill="rgb(230,229,49)" fg:x="2770" fg:w="1"/><text x="70.3234%" y="271.50"></text></g><g><title>ip_local_deliver (1 samples, 0.03%)</title><rect x="70.0987%" y="261" width="0.0253%" height="15" fill="rgb(238,70,47)" fg:x="2771" fg:w="1"/><text x="70.3487%" y="271.50"></text></g><g><title>nf_hook_slow (1 samples, 0.03%)</title><rect x="70.0987%" y="245" width="0.0253%" height="15" fill="rgb(231,160,17)" fg:x="2771" fg:w="1"/><text x="70.3487%" y="255.50"></text></g><g><title>nf_confirm (1 samples, 0.03%)</title><rect x="70.0987%" y="229" width="0.0253%" height="15" fill="rgb(218,68,53)" fg:x="2771" fg:w="1"/><text x="70.3487%" y="239.50"></text></g><g><title>__udp4_lib_lookup (1 samples, 0.03%)</title><rect x="70.1240%" y="213" width="0.0253%" height="15" fill="rgb(236,111,10)" fg:x="2772" fg:w="1"/><text x="70.3740%" y="223.50"></text></g><g><title>udp4_lib_lookup2 (1 samples, 0.03%)</title><rect x="70.1240%" y="197" width="0.0253%" height="15" fill="rgb(224,34,41)" fg:x="2772" fg:w="1"/><text x="70.3740%" y="207.50"></text></g><g><title>__wake_up_common_lock (1 samples, 0.03%)</title><rect x="70.1493%" y="101" width="0.0253%" height="15" fill="rgb(241,118,19)" fg:x="2773" fg:w="1"/><text x="70.3993%" y="111.50"></text></g><g><title>__wake_up_common (1 samples, 0.03%)</title><rect x="70.1493%" y="85" width="0.0253%" height="15" fill="rgb(238,129,25)" fg:x="2773" fg:w="1"/><text x="70.3993%" y="95.50"></text></g><g><title>ep_autoremove_wake_function (1 samples, 0.03%)</title><rect x="70.1493%" y="69" width="0.0253%" height="15" fill="rgb(238,22,31)" fg:x="2773" fg:w="1"/><text x="70.3993%" y="79.50"></text></g><g><title>try_to_wake_up (1 samples, 0.03%)</title><rect x="70.1493%" y="53" width="0.0253%" height="15" fill="rgb(222,174,48)" fg:x="2773" fg:w="1"/><text x="70.3993%" y="63.50"></text></g><g><title>ttwu_queue_wakelist (1 samples, 0.03%)</title><rect x="70.1493%" y="37" width="0.0253%" height="15" fill="rgb(206,152,40)" fg:x="2773" fg:w="1"/><text x="70.3993%" y="47.50"></text></g><g><title>__wake_up_common (2 samples, 0.05%)</title><rect x="70.1493%" y="133" width="0.0506%" height="15" fill="rgb(218,99,54)" fg:x="2773" fg:w="2"/><text x="70.3993%" y="143.50"></text></g><g><title>ep_poll_callback (2 samples, 0.05%)</title><rect x="70.1493%" y="117" width="0.0506%" height="15" fill="rgb(220,174,26)" fg:x="2773" fg:w="2"/><text x="70.3993%" y="127.50"></text></g><g><title>_raw_read_lock_irqsave (1 samples, 0.03%)</title><rect x="70.1746%" y="101" width="0.0253%" height="15" fill="rgb(245,116,9)" fg:x="2774" fg:w="1"/><text x="70.4246%" y="111.50"></text></g><g><title>__udp_enqueue_schedule_skb (3 samples, 0.08%)</title><rect x="70.1493%" y="181" width="0.0759%" height="15" fill="rgb(209,72,35)" fg:x="2773" fg:w="3"/><text x="70.3993%" y="191.50"></text></g><g><title>sock_def_readable (3 samples, 0.08%)</title><rect x="70.1493%" y="165" width="0.0759%" height="15" fill="rgb(226,126,21)" fg:x="2773" fg:w="3"/><text x="70.3993%" y="175.50"></text></g><g><title>__wake_up_common_lock (3 samples, 0.08%)</title><rect x="70.1493%" y="149" width="0.0759%" height="15" fill="rgb(227,192,1)" fg:x="2773" fg:w="3"/><text x="70.3993%" y="159.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="70.1998%" y="133" width="0.0253%" height="15" fill="rgb(237,180,29)" fg:x="2775" fg:w="1"/><text x="70.4498%" y="143.50"></text></g><g><title>ip_local_deliver_finish (5 samples, 0.13%)</title><rect x="70.1240%" y="261" width="0.1265%" height="15" fill="rgb(230,197,35)" fg:x="2772" fg:w="5"/><text x="70.3740%" y="271.50"></text></g><g><title>ip_protocol_deliver_rcu (5 samples, 0.13%)</title><rect x="70.1240%" y="245" width="0.1265%" height="15" fill="rgb(246,193,31)" fg:x="2772" fg:w="5"/><text x="70.3740%" y="255.50"></text></g><g><title>__udp4_lib_rcv (5 samples, 0.13%)</title><rect x="70.1240%" y="229" width="0.1265%" height="15" fill="rgb(241,36,4)" fg:x="2772" fg:w="5"/><text x="70.3740%" y="239.50"></text></g><g><title>udp_unicast_rcv_skb (4 samples, 0.10%)</title><rect x="70.1493%" y="213" width="0.1012%" height="15" fill="rgb(241,130,17)" fg:x="2773" fg:w="4"/><text x="70.3993%" y="223.50"></text></g><g><title>udp_queue_rcv_one_skb (4 samples, 0.10%)</title><rect x="70.1493%" y="197" width="0.1012%" height="15" fill="rgb(206,137,32)" fg:x="2773" fg:w="4"/><text x="70.3993%" y="207.50"></text></g><g><title>__xfrm_policy_check2.constprop.0 (1 samples, 0.03%)</title><rect x="70.2251%" y="181" width="0.0253%" height="15" fill="rgb(237,228,51)" fg:x="2776" fg:w="1"/><text x="70.4751%" y="191.50"></text></g><g><title>ip_finish_output2 (14 samples, 0.35%)</title><rect x="69.9722%" y="389" width="0.3542%" height="15" fill="rgb(243,6,42)" fg:x="2766" fg:w="14"/><text x="70.2222%" y="399.50"></text></g><g><title>__local_bh_enable_ip (11 samples, 0.28%)</title><rect x="70.0481%" y="373" width="0.2783%" height="15" fill="rgb(251,74,28)" fg:x="2769" fg:w="11"/><text x="70.2981%" y="383.50"></text></g><g><title>do_softirq.part.0 (11 samples, 0.28%)</title><rect x="70.0481%" y="357" width="0.2783%" height="15" fill="rgb(218,20,49)" fg:x="2769" fg:w="11"/><text x="70.2981%" y="367.50"></text></g><g><title>__do_softirq (11 samples, 0.28%)</title><rect x="70.0481%" y="341" width="0.2783%" height="15" fill="rgb(238,28,14)" fg:x="2769" fg:w="11"/><text x="70.2981%" y="351.50"></text></g><g><title>net_rx_action (11 samples, 0.28%)</title><rect x="70.0481%" y="325" width="0.2783%" height="15" fill="rgb(229,40,46)" fg:x="2769" fg:w="11"/><text x="70.2981%" y="335.50"></text></g><g><title>__napi_poll (10 samples, 0.25%)</title><rect x="70.0734%" y="309" width="0.2530%" height="15" fill="rgb(244,195,20)" fg:x="2770" fg:w="10"/><text x="70.3234%" y="319.50"></text></g><g><title>process_backlog (10 samples, 0.25%)</title><rect x="70.0734%" y="293" width="0.2530%" height="15" fill="rgb(253,56,35)" fg:x="2770" fg:w="10"/><text x="70.3234%" y="303.50"></text></g><g><title>__netif_receive_skb_one_core (10 samples, 0.25%)</title><rect x="70.0734%" y="277" width="0.2530%" height="15" fill="rgb(210,149,44)" fg:x="2770" fg:w="10"/><text x="70.3234%" y="287.50"></text></g><g><title>ip_rcv (3 samples, 0.08%)</title><rect x="70.2504%" y="261" width="0.0759%" height="15" fill="rgb(240,135,12)" fg:x="2777" fg:w="3"/><text x="70.5004%" y="271.50"></text></g><g><title>nf_hook_slow (1 samples, 0.03%)</title><rect x="70.3010%" y="245" width="0.0253%" height="15" fill="rgb(251,24,50)" fg:x="2779" fg:w="1"/><text x="70.5510%" y="255.50"></text></g><g><title>nf_nat_ipv4_pre_routing (1 samples, 0.03%)</title><rect x="70.3010%" y="229" width="0.0253%" height="15" fill="rgb(243,200,47)" fg:x="2779" fg:w="1"/><text x="70.5510%" y="239.50"></text></g><g><title>&lt;tftp::socket::UdpUnboundSocket as tftp::socket::Socket&gt;::send_to (34 samples, 0.86%)</title><rect x="69.4915%" y="581" width="0.8601%" height="15" fill="rgb(224,166,26)" fg:x="2747" fg:w="34"/><text x="69.7415%" y="591.50"></text></g><g><title>std::net::udp::UdpSocket::send_to (33 samples, 0.83%)</title><rect x="69.5168%" y="565" width="0.8348%" height="15" fill="rgb(233,0,47)" fg:x="2748" fg:w="33"/><text x="69.7668%" y="575.50"></text></g><g><title>std::sys_common::net::UdpSocket::send_to (32 samples, 0.81%)</title><rect x="69.5421%" y="549" width="0.8095%" height="15" fill="rgb(253,80,5)" fg:x="2749" fg:w="32"/><text x="69.7921%" y="559.50"></text></g><g><title>__libc_sendto (32 samples, 0.81%)</title><rect x="69.5421%" y="533" width="0.8095%" height="15" fill="rgb(214,133,25)" fg:x="2749" fg:w="32"/><text x="69.7921%" y="543.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (32 samples, 0.81%)</title><rect x="69.5421%" y="517" width="0.8095%" height="15" fill="rgb(209,27,14)" fg:x="2749" fg:w="32"/><text x="69.7921%" y="527.50"></text></g><g><title>do_syscall_64 (32 samples, 0.81%)</title><rect x="69.5421%" y="501" width="0.8095%" height="15" fill="rgb(219,102,51)" fg:x="2749" fg:w="32"/><text x="69.7921%" y="511.50"></text></g><g><title>__x64_sys_sendto (32 samples, 0.81%)</title><rect x="69.5421%" y="485" width="0.8095%" height="15" fill="rgb(237,18,16)" fg:x="2749" fg:w="32"/><text x="69.7921%" y="495.50"></text></g><g><title>__sys_sendto (32 samples, 0.81%)</title><rect x="69.5421%" y="469" width="0.8095%" height="15" fill="rgb(241,85,17)" fg:x="2749" fg:w="32"/><text x="69.7921%" y="479.50"></text></g><g><title>sock_sendmsg (32 samples, 0.81%)</title><rect x="69.5421%" y="453" width="0.8095%" height="15" fill="rgb(236,90,42)" fg:x="2749" fg:w="32"/><text x="69.7921%" y="463.50"></text></g><g><title>udp_sendmsg (32 samples, 0.81%)</title><rect x="69.5421%" y="437" width="0.8095%" height="15" fill="rgb(249,57,21)" fg:x="2749" fg:w="32"/><text x="69.7921%" y="447.50"></text></g><g><title>udp_send_skb (21 samples, 0.53%)</title><rect x="69.8204%" y="421" width="0.5312%" height="15" fill="rgb(243,12,36)" fg:x="2760" fg:w="21"/><text x="70.0704%" y="431.50"></text></g><g><title>ip_send_skb (21 samples, 0.53%)</title><rect x="69.8204%" y="405" width="0.5312%" height="15" fill="rgb(253,128,47)" fg:x="2760" fg:w="21"/><text x="70.0704%" y="415.50"></text></g><g><title>ip_output (1 samples, 0.03%)</title><rect x="70.3263%" y="389" width="0.0253%" height="15" fill="rgb(207,33,20)" fg:x="2780" fg:w="1"/><text x="70.5763%" y="399.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (1 samples, 0.03%)</title><rect x="70.3516%" y="501" width="0.0253%" height="15" fill="rgb(233,215,35)" fg:x="2781" fg:w="1"/><text x="70.6016%" y="511.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.03%)</title><rect x="70.3516%" y="485" width="0.0253%" height="15" fill="rgb(249,188,52)" fg:x="2781" fg:w="1"/><text x="70.6016%" y="495.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (2 samples, 0.05%)</title><rect x="70.3769%" y="485" width="0.0506%" height="15" fill="rgb(225,12,32)" fg:x="2782" fg:w="2"/><text x="70.6269%" y="495.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (3 samples, 0.08%)</title><rect x="70.4275%" y="485" width="0.0759%" height="15" fill="rgb(247,98,14)" fg:x="2784" fg:w="3"/><text x="70.6775%" y="495.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (2 samples, 0.05%)</title><rect x="70.4528%" y="469" width="0.0506%" height="15" fill="rgb(247,219,48)" fg:x="2785" fg:w="2"/><text x="70.7028%" y="479.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (2 samples, 0.05%)</title><rect x="70.4528%" y="453" width="0.0506%" height="15" fill="rgb(253,60,48)" fg:x="2785" fg:w="2"/><text x="70.7028%" y="463.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from::{{closure}} (1 samples, 0.03%)</title><rect x="70.4781%" y="437" width="0.0253%" height="15" fill="rgb(245,15,52)" fg:x="2786" fg:w="1"/><text x="70.7281%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="70.5034%" y="485" width="0.0253%" height="15" fill="rgb(220,133,28)" fg:x="2787" fg:w="1"/><text x="70.7534%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.03%)</title><rect x="70.5034%" y="469" width="0.0253%" height="15" fill="rgb(217,180,4)" fg:x="2787" fg:w="1"/><text x="70.7534%" y="479.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (4 samples, 0.10%)</title><rect x="70.7058%" y="469" width="0.1012%" height="15" fill="rgb(251,24,1)" fg:x="2795" fg:w="4"/><text x="70.9558%" y="479.50"></text></g><g><title>chacha20::xchacha::quarter_round (12 samples, 0.30%)</title><rect x="70.5287%" y="485" width="0.3036%" height="15" fill="rgb(212,185,49)" fg:x="2788" fg:w="12"/><text x="70.7787%" y="495.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.03%)</title><rect x="70.8070%" y="469" width="0.0253%" height="15" fill="rgb(215,175,22)" fg:x="2799" fg:w="1"/><text x="71.0570%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (1 samples, 0.03%)</title><rect x="70.8323%" y="485" width="0.0253%" height="15" fill="rgb(250,205,14)" fg:x="2800" fg:w="1"/><text x="71.0823%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.03%)</title><rect x="70.8323%" y="469" width="0.0253%" height="15" fill="rgb(225,211,22)" fg:x="2800" fg:w="1"/><text x="71.0823%" y="479.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as crypto_common::KeyIvInit&gt;::new (21 samples, 0.53%)</title><rect x="70.3516%" y="533" width="0.5312%" height="15" fill="rgb(251,179,42)" fg:x="2781" fg:w="21"/><text x="70.6016%" y="543.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (21 samples, 0.53%)</title><rect x="70.3516%" y="517" width="0.5312%" height="15" fill="rgb(208,216,51)" fg:x="2781" fg:w="21"/><text x="70.6016%" y="527.50"></text></g><g><title>chacha20::xchacha::hchacha (20 samples, 0.51%)</title><rect x="70.3769%" y="501" width="0.5059%" height="15" fill="rgb(235,36,11)" fg:x="2782" fg:w="20"/><text x="70.6269%" y="511.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.03%)</title><rect x="70.8576%" y="485" width="0.0253%" height="15" fill="rgb(213,189,28)" fg:x="2801" fg:w="1"/><text x="71.1076%" y="495.50"></text></g><g><title>chacha20::xchacha::quarter_round (1 samples, 0.03%)</title><rect x="70.8576%" y="469" width="0.0253%" height="15" fill="rgb(227,203,42)" fg:x="2801" fg:w="1"/><text x="71.1076%" y="479.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier as core::convert::From&lt;poly1305::backend::avx2::helpers::Aligned130&gt;&gt;::from (1 samples, 0.03%)</title><rect x="70.8829%" y="533" width="0.0253%" height="15" fill="rgb(244,72,36)" fg:x="2802" fg:w="1"/><text x="71.1329%" y="543.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (1 samples, 0.03%)</title><rect x="70.9082%" y="533" width="0.0253%" height="15" fill="rgb(213,53,17)" fg:x="2803" fg:w="1"/><text x="71.1582%" y="543.50"></text></g><g><title>chacha20::backends::avx2::rounds (3 samples, 0.08%)</title><rect x="70.9335%" y="533" width="0.0759%" height="15" fill="rgb(207,167,3)" fg:x="2804" fg:w="3"/><text x="71.1835%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_blend_epi32 (1 samples, 0.03%)</title><rect x="71.0094%" y="405" width="0.0253%" height="15" fill="rgb(216,98,30)" fg:x="2807" fg:w="1"/><text x="71.2594%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="71.0347%" y="405" width="0.0253%" height="15" fill="rgb(236,123,15)" fg:x="2808" fg:w="1"/><text x="71.2847%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (2 samples, 0.05%)</title><rect x="71.0600%" y="373" width="0.0506%" height="15" fill="rgb(248,81,50)" fg:x="2809" fg:w="2"/><text x="71.3100%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.03%)</title><rect x="71.0853%" y="357" width="0.0253%" height="15" fill="rgb(214,120,4)" fg:x="2810" fg:w="1"/><text x="71.3353%" y="367.50"></text></g><g><title>core::core_arch::simd::u64x4::splat (2 samples, 0.05%)</title><rect x="71.1358%" y="357" width="0.0506%" height="15" fill="rgb(208,179,34)" fg:x="2812" fg:w="2"/><text x="71.3858%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="71.1864%" y="357" width="0.0253%" height="15" fill="rgb(227,140,7)" fg:x="2814" fg:w="1"/><text x="71.4364%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (5 samples, 0.13%)</title><rect x="71.1105%" y="373" width="0.1265%" height="15" fill="rgb(214,22,6)" fg:x="2811" fg:w="5"/><text x="71.3605%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.03%)</title><rect x="71.2117%" y="357" width="0.0253%" height="15" fill="rgb(207,137,27)" fg:x="2815" fg:w="1"/><text x="71.4617%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="71.2117%" y="341" width="0.0253%" height="15" fill="rgb(210,8,46)" fg:x="2815" fg:w="1"/><text x="71.4617%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (1 samples, 0.03%)</title><rect x="71.2370%" y="373" width="0.0253%" height="15" fill="rgb(240,16,54)" fg:x="2816" fg:w="1"/><text x="71.4870%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="71.2370%" y="357" width="0.0253%" height="15" fill="rgb(211,209,29)" fg:x="2816" fg:w="1"/><text x="71.4870%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (1 samples, 0.03%)</title><rect x="71.2623%" y="373" width="0.0253%" height="15" fill="rgb(226,228,24)" fg:x="2817" fg:w="1"/><text x="71.5123%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_unpackhi_epi64 (1 samples, 0.03%)</title><rect x="71.2876%" y="373" width="0.0253%" height="15" fill="rgb(222,84,9)" fg:x="2818" fg:w="1"/><text x="71.5376%" y="383.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (12 samples, 0.30%)</title><rect x="71.0600%" y="389" width="0.3036%" height="15" fill="rgb(234,203,30)" fg:x="2809" fg:w="12"/><text x="71.3100%" y="399.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (2 samples, 0.05%)</title><rect x="71.3129%" y="373" width="0.0506%" height="15" fill="rgb(238,109,14)" fg:x="2819" fg:w="2"/><text x="71.5629%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (2 samples, 0.05%)</title><rect x="71.3129%" y="357" width="0.0506%" height="15" fill="rgb(233,206,34)" fg:x="2819" fg:w="2"/><text x="71.5629%" y="367.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (2 samples, 0.05%)</title><rect x="71.3129%" y="341" width="0.0506%" height="15" fill="rgb(220,167,47)" fg:x="2819" fg:w="2"/><text x="71.5629%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.03%)</title><rect x="71.3635%" y="357" width="0.0253%" height="15" fill="rgb(238,105,10)" fg:x="2821" fg:w="1"/><text x="71.6135%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (2 samples, 0.05%)</title><rect x="71.3888%" y="357" width="0.0506%" height="15" fill="rgb(213,227,17)" fg:x="2822" fg:w="2"/><text x="71.6388%" y="367.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (16 samples, 0.40%)</title><rect x="71.0600%" y="405" width="0.4048%" height="15" fill="rgb(217,132,38)" fg:x="2809" fg:w="16"/><text x="71.3100%" y="415.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (4 samples, 0.10%)</title><rect x="71.3635%" y="389" width="0.1012%" height="15" fill="rgb(242,146,4)" fg:x="2821" fg:w="4"/><text x="71.6135%" y="399.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (4 samples, 0.10%)</title><rect x="71.3635%" y="373" width="0.1012%" height="15" fill="rgb(212,61,9)" fg:x="2821" fg:w="4"/><text x="71.6135%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="71.4394%" y="357" width="0.0253%" height="15" fill="rgb(247,126,22)" fg:x="2824" fg:w="1"/><text x="71.6894%" y="367.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="71.4394%" y="341" width="0.0253%" height="15" fill="rgb(220,196,2)" fg:x="2824" fg:w="1"/><text x="71.6894%" y="351.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="71.4394%" y="325" width="0.0253%" height="15" fill="rgb(208,46,4)" fg:x="2824" fg:w="1"/><text x="71.6894%" y="335.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::authenticate_lengths (19 samples, 0.48%)</title><rect x="71.0094%" y="517" width="0.4806%" height="15" fill="rgb(252,104,46)" fg:x="2807" fg:w="19"/><text x="71.2594%" y="527.50"></text></g><g><title>universal_hash::UniversalHash::update (19 samples, 0.48%)</title><rect x="71.0094%" y="501" width="0.4806%" height="15" fill="rgb(237,152,48)" fg:x="2807" fg:w="19"/><text x="71.2594%" y="511.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (19 samples, 0.48%)</title><rect x="71.0094%" y="485" width="0.4806%" height="15" fill="rgb(221,59,37)" fg:x="2807" fg:w="19"/><text x="71.2594%" y="495.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (19 samples, 0.48%)</title><rect x="71.0094%" y="469" width="0.4806%" height="15" fill="rgb(209,202,51)" fg:x="2807" fg:w="19"/><text x="71.2594%" y="479.50"></text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (19 samples, 0.48%)</title><rect x="71.0094%" y="453" width="0.4806%" height="15" fill="rgb(228,81,30)" fg:x="2807" fg:w="19"/><text x="71.2594%" y="463.50"></text></g><g><title>&lt;poly1305::backend::avx2::State as universal_hash::UhfBackend&gt;::proc_block (19 samples, 0.48%)</title><rect x="71.0094%" y="437" width="0.4806%" height="15" fill="rgb(227,42,39)" fg:x="2807" fg:w="19"/><text x="71.2594%" y="447.50"></text></g><g><title>poly1305::backend::avx2::State::compute_block (19 samples, 0.48%)</title><rect x="71.0094%" y="421" width="0.4806%" height="15" fill="rgb(221,26,2)" fg:x="2807" fg:w="19"/><text x="71.2594%" y="431.50"></text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_blocks (1 samples, 0.03%)</title><rect x="71.4647%" y="405" width="0.0253%" height="15" fill="rgb(254,61,31)" fg:x="2825" fg:w="1"/><text x="71.7147%" y="415.50"></text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_loaded_blocks (1 samples, 0.03%)</title><rect x="71.4647%" y="389" width="0.0253%" height="15" fill="rgb(222,173,38)" fg:x="2825" fg:w="1"/><text x="71.7147%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (1 samples, 0.03%)</title><rect x="71.4647%" y="373" width="0.0253%" height="15" fill="rgb(218,50,12)" fg:x="2825" fg:w="1"/><text x="71.7147%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="71.4647%" y="357" width="0.0253%" height="15" fill="rgb(223,88,40)" fg:x="2825" fg:w="1"/><text x="71.7147%" y="367.50"></text></g><g><title>core::slice::raw::from_raw_parts (1 samples, 0.03%)</title><rect x="71.4647%" y="341" width="0.0253%" height="15" fill="rgb(237,54,19)" fg:x="2825" fg:w="1"/><text x="71.7147%" y="351.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="71.4900%" y="421" width="0.0253%" height="15" fill="rgb(251,129,25)" fg:x="2826" fg:w="1"/><text x="71.7400%" y="431.50"></text></g><g><title>&lt;core::ops::index_range::IndexRange as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="71.4900%" y="405" width="0.0253%" height="15" fill="rgb(238,97,19)" fg:x="2826" fg:w="1"/><text x="71.7400%" y="415.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (1 samples, 0.03%)</title><rect x="71.5153%" y="421" width="0.0253%" height="15" fill="rgb(240,169,18)" fg:x="2827" fg:w="1"/><text x="71.7653%" y="431.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="71.6165%" y="373" width="0.0253%" height="15" fill="rgb(230,187,49)" fg:x="2831" fg:w="1"/><text x="71.8665%" y="383.50"></text></g><g><title>&lt;core::ops::index_range::IndexRange as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="71.6165%" y="357" width="0.0253%" height="15" fill="rgb(209,44,26)" fg:x="2831" fg:w="1"/><text x="71.8665%" y="367.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="71.6165%" y="341" width="0.0253%" height="15" fill="rgb(244,0,6)" fg:x="2831" fg:w="1"/><text x="71.8665%" y="351.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="71.6165%" y="325" width="0.0253%" height="15" fill="rgb(248,18,21)" fg:x="2831" fg:w="1"/><text x="71.8665%" y="335.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="71.6165%" y="309" width="0.0253%" height="15" fill="rgb(245,180,19)" fg:x="2831" fg:w="1"/><text x="71.8665%" y="319.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.03%)</title><rect x="71.6165%" y="293" width="0.0253%" height="15" fill="rgb(252,118,36)" fg:x="2831" fg:w="1"/><text x="71.8665%" y="303.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.03%)</title><rect x="71.6165%" y="277" width="0.0253%" height="15" fill="rgb(210,224,19)" fg:x="2831" fg:w="1"/><text x="71.8665%" y="287.50"></text></g><g><title>tick_sched_timer (1 samples, 0.03%)</title><rect x="71.6165%" y="261" width="0.0253%" height="15" fill="rgb(218,30,24)" fg:x="2831" fg:w="1"/><text x="71.8665%" y="271.50"></text></g><g><title>tick_sched_do_timer (1 samples, 0.03%)</title><rect x="71.6165%" y="245" width="0.0253%" height="15" fill="rgb(219,75,50)" fg:x="2831" fg:w="1"/><text x="71.8665%" y="255.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (3 samples, 0.08%)</title><rect x="71.6418%" y="341" width="0.0759%" height="15" fill="rgb(234,72,50)" fg:x="2832" fg:w="3"/><text x="71.8918%" y="351.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.03%)</title><rect x="71.7177%" y="325" width="0.0253%" height="15" fill="rgb(219,100,48)" fg:x="2835" fg:w="1"/><text x="71.9677%" y="335.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (4 samples, 0.10%)</title><rect x="71.7430%" y="325" width="0.1012%" height="15" fill="rgb(253,5,41)" fg:x="2836" fg:w="4"/><text x="71.9930%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (2 samples, 0.05%)</title><rect x="71.8442%" y="325" width="0.0506%" height="15" fill="rgb(247,181,11)" fg:x="2840" fg:w="2"/><text x="72.0942%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="71.8948%" y="309" width="0.0253%" height="15" fill="rgb(222,223,25)" fg:x="2842" fg:w="1"/><text x="72.1448%" y="319.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="71.9201%" y="309" width="0.0253%" height="15" fill="rgb(214,198,28)" fg:x="2843" fg:w="1"/><text x="72.1701%" y="319.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.03%)</title><rect x="71.9201%" y="293" width="0.0253%" height="15" fill="rgb(230,46,43)" fg:x="2843" fg:w="1"/><text x="72.1701%" y="303.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (5 samples, 0.13%)</title><rect x="71.8948%" y="325" width="0.1265%" height="15" fill="rgb(233,65,53)" fg:x="2842" fg:w="5"/><text x="72.1448%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (3 samples, 0.08%)</title><rect x="71.9454%" y="309" width="0.0759%" height="15" fill="rgb(221,121,27)" fg:x="2844" fg:w="3"/><text x="72.1954%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.03%)</title><rect x="72.0212%" y="325" width="0.0253%" height="15" fill="rgb(247,70,47)" fg:x="2847" fg:w="1"/><text x="72.2712%" y="335.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.03%)</title><rect x="72.0212%" y="309" width="0.0253%" height="15" fill="rgb(228,85,35)" fg:x="2847" fg:w="1"/><text x="72.2712%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="72.0465%" y="325" width="0.0253%" height="15" fill="rgb(209,50,18)" fg:x="2848" fg:w="1"/><text x="72.2965%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (6 samples, 0.15%)</title><rect x="72.0718%" y="325" width="0.1518%" height="15" fill="rgb(250,19,35)" fg:x="2849" fg:w="6"/><text x="72.3218%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.05%)</title><rect x="72.2236%" y="325" width="0.0506%" height="15" fill="rgb(253,107,29)" fg:x="2855" fg:w="2"/><text x="72.4736%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (10 samples, 0.25%)</title><rect x="72.2742%" y="325" width="0.2530%" height="15" fill="rgb(252,179,29)" fg:x="2857" fg:w="10"/><text x="72.5242%" y="335.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (35 samples, 0.89%)</title><rect x="71.7177%" y="341" width="0.8854%" height="15" fill="rgb(238,194,6)" fg:x="2835" fg:w="35"/><text x="71.9677%" y="351.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (3 samples, 0.08%)</title><rect x="72.5272%" y="325" width="0.0759%" height="15" fill="rgb(238,164,29)" fg:x="2867" fg:w="3"/><text x="72.7772%" y="335.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="72.6031%" y="325" width="0.0253%" height="15" fill="rgb(224,25,9)" fg:x="2870" fg:w="1"/><text x="72.8531%" y="335.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (1 samples, 0.03%)</title><rect x="72.6031%" y="309" width="0.0253%" height="15" fill="rgb(244,153,23)" fg:x="2870" fg:w="1"/><text x="72.8531%" y="319.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (6 samples, 0.15%)</title><rect x="72.6284%" y="325" width="0.1518%" height="15" fill="rgb(212,203,14)" fg:x="2871" fg:w="6"/><text x="72.8784%" y="335.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="72.7802%" y="309" width="0.0253%" height="15" fill="rgb(220,164,20)" fg:x="2877" fg:w="1"/><text x="73.0302%" y="319.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="72.7802%" y="293" width="0.0253%" height="15" fill="rgb(222,203,48)" fg:x="2877" fg:w="1"/><text x="73.0302%" y="303.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="72.7802%" y="277" width="0.0253%" height="15" fill="rgb(215,159,22)" fg:x="2877" fg:w="1"/><text x="73.0302%" y="287.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.03%)</title><rect x="72.7802%" y="261" width="0.0253%" height="15" fill="rgb(216,183,47)" fg:x="2877" fg:w="1"/><text x="73.0302%" y="271.50"></text></g><g><title>clockevents_program_event (1 samples, 0.03%)</title><rect x="72.7802%" y="245" width="0.0253%" height="15" fill="rgb(229,195,25)" fg:x="2877" fg:w="1"/><text x="73.0302%" y="255.50"></text></g><g><title>ktime_get (1 samples, 0.03%)</title><rect x="72.7802%" y="229" width="0.0253%" height="15" fill="rgb(224,132,51)" fg:x="2877" fg:w="1"/><text x="73.0302%" y="239.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (3 samples, 0.08%)</title><rect x="72.8055%" y="309" width="0.0759%" height="15" fill="rgb(240,63,7)" fg:x="2878" fg:w="3"/><text x="73.0555%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.03%)</title><rect x="72.8814%" y="309" width="0.0253%" height="15" fill="rgb(249,182,41)" fg:x="2881" fg:w="1"/><text x="73.1314%" y="319.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.03%)</title><rect x="72.8814%" y="293" width="0.0253%" height="15" fill="rgb(243,47,26)" fg:x="2881" fg:w="1"/><text x="73.1314%" y="303.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (2 samples, 0.05%)</title><rect x="72.9067%" y="309" width="0.0506%" height="15" fill="rgb(233,48,2)" fg:x="2882" fg:w="2"/><text x="73.1567%" y="319.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="72.9572%" y="309" width="0.0253%" height="15" fill="rgb(244,165,34)" fg:x="2884" fg:w="1"/><text x="73.2072%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (9 samples, 0.23%)</title><rect x="72.7802%" y="325" width="0.2277%" height="15" fill="rgb(207,89,7)" fg:x="2877" fg:w="9"/><text x="73.0302%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="72.9825%" y="309" width="0.0253%" height="15" fill="rgb(244,117,36)" fg:x="2885" fg:w="1"/><text x="73.2325%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (3 samples, 0.08%)</title><rect x="73.0078%" y="325" width="0.0759%" height="15" fill="rgb(226,144,34)" fg:x="2886" fg:w="3"/><text x="73.2578%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (3 samples, 0.08%)</title><rect x="73.0837%" y="325" width="0.0759%" height="15" fill="rgb(213,23,19)" fg:x="2889" fg:w="3"/><text x="73.3337%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (6 samples, 0.15%)</title><rect x="73.1596%" y="325" width="0.1518%" height="15" fill="rgb(217,75,12)" fg:x="2892" fg:w="6"/><text x="73.4096%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (3 samples, 0.08%)</title><rect x="73.3114%" y="325" width="0.0759%" height="15" fill="rgb(224,159,17)" fg:x="2898" fg:w="3"/><text x="73.5614%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (3 samples, 0.08%)</title><rect x="73.3873%" y="325" width="0.0759%" height="15" fill="rgb(217,118,1)" fg:x="2901" fg:w="3"/><text x="73.6373%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (8 samples, 0.20%)</title><rect x="73.4632%" y="325" width="0.2024%" height="15" fill="rgb(232,180,48)" fg:x="2904" fg:w="8"/><text x="73.7132%" y="335.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (45 samples, 1.14%)</title><rect x="72.6031%" y="341" width="1.1384%" height="15" fill="rgb(230,27,33)" fg:x="2870" fg:w="45"/><text x="72.8531%" y="351.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (3 samples, 0.08%)</title><rect x="73.6656%" y="325" width="0.0759%" height="15" fill="rgb(205,31,21)" fg:x="2912" fg:w="3"/><text x="73.9156%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="73.7415%" y="341" width="0.0253%" height="15" fill="rgb(253,59,4)" fg:x="2915" fg:w="1"/><text x="73.9915%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (2 samples, 0.05%)</title><rect x="73.7668%" y="341" width="0.0506%" height="15" fill="rgb(224,201,9)" fg:x="2916" fg:w="2"/><text x="74.0168%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.03%)</title><rect x="73.8174%" y="341" width="0.0253%" height="15" fill="rgb(229,206,30)" fg:x="2918" fg:w="1"/><text x="74.0674%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="73.8427%" y="341" width="0.0253%" height="15" fill="rgb(212,67,47)" fg:x="2919" fg:w="1"/><text x="74.0927%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (4 samples, 0.10%)</title><rect x="73.8679%" y="341" width="0.1012%" height="15" fill="rgb(211,96,50)" fg:x="2920" fg:w="4"/><text x="74.1179%" y="351.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="73.9691%" y="341" width="0.0253%" height="15" fill="rgb(252,114,18)" fg:x="2924" fg:w="1"/><text x="74.2191%" y="351.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="73.9944%" y="341" width="0.0253%" height="15" fill="rgb(223,58,37)" fg:x="2925" fg:w="1"/><text x="74.2444%" y="351.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (100 samples, 2.53%)</title><rect x="71.6418%" y="357" width="2.5297%" height="15" fill="rgb(237,70,4)" fg:x="2832" fg:w="100"/><text x="71.8918%" y="367.50">ch..</text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (6 samples, 0.15%)</title><rect x="74.0197%" y="341" width="0.1518%" height="15" fill="rgb(244,85,46)" fg:x="2926" fg:w="6"/><text x="74.2697%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.03%)</title><rect x="74.1715%" y="341" width="0.0253%" height="15" fill="rgb(223,39,52)" fg:x="2932" fg:w="1"/><text x="74.4215%" y="351.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.03%)</title><rect x="74.1715%" y="325" width="0.0253%" height="15" fill="rgb(218,200,14)" fg:x="2932" fg:w="1"/><text x="74.4215%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="74.1968%" y="341" width="0.0253%" height="15" fill="rgb(208,171,16)" fg:x="2933" fg:w="1"/><text x="74.4468%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (3 samples, 0.08%)</title><rect x="74.1715%" y="357" width="0.0759%" height="15" fill="rgb(234,200,18)" fg:x="2932" fg:w="3"/><text x="74.4215%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="74.2221%" y="341" width="0.0253%" height="15" fill="rgb(228,45,11)" fg:x="2934" fg:w="1"/><text x="74.4721%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (2 samples, 0.05%)</title><rect x="74.2474%" y="357" width="0.0506%" height="15" fill="rgb(237,182,11)" fg:x="2935" fg:w="2"/><text x="74.4974%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="74.2980%" y="357" width="0.0253%" height="15" fill="rgb(241,175,49)" fg:x="2937" fg:w="1"/><text x="74.5480%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="74.3233%" y="357" width="0.0253%" height="15" fill="rgb(247,38,35)" fg:x="2938" fg:w="1"/><text x="74.5733%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="74.3486%" y="357" width="0.0253%" height="15" fill="rgb(228,39,49)" fg:x="2939" fg:w="1"/><text x="74.5986%" y="367.50"></text></g><g><title>chacha20::backends::avx2::rounds (109 samples, 2.76%)</title><rect x="71.6418%" y="373" width="2.7574%" height="15" fill="rgb(226,101,26)" fg:x="2832" fg:w="109"/><text x="71.8918%" y="383.50">ch..</text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="74.3739%" y="357" width="0.0253%" height="15" fill="rgb(206,141,19)" fg:x="2940" fg:w="1"/><text x="74.6239%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (2 samples, 0.05%)</title><rect x="74.3992%" y="373" width="0.0506%" height="15" fill="rgb(211,200,13)" fg:x="2941" fg:w="2"/><text x="74.6492%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="74.4498%" y="373" width="0.0253%" height="15" fill="rgb(241,121,6)" fg:x="2943" fg:w="1"/><text x="74.6998%" y="383.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_par_ks_blocks (115 samples, 2.91%)</title><rect x="71.5912%" y="389" width="2.9092%" height="15" fill="rgb(234,221,29)" fg:x="2830" fg:w="115"/><text x="71.8412%" y="399.50">&lt;c..</text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="74.4751%" y="373" width="0.0253%" height="15" fill="rgb(229,136,5)" fg:x="2944" fg:w="1"/><text x="74.7251%" y="383.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="74.5004%" y="341" width="0.0253%" height="15" fill="rgb(238,36,11)" fg:x="2945" fg:w="1"/><text x="74.7504%" y="351.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="74.5257%" y="325" width="0.0253%" height="15" fill="rgb(251,55,41)" fg:x="2946" fg:w="1"/><text x="74.7757%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="74.5510%" y="309" width="0.0253%" height="15" fill="rgb(242,34,40)" fg:x="2947" fg:w="1"/><text x="74.8010%" y="319.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="74.5763%" y="293" width="0.0253%" height="15" fill="rgb(215,42,17)" fg:x="2948" fg:w="1"/><text x="74.8263%" y="303.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (2 samples, 0.05%)</title><rect x="74.5763%" y="309" width="0.0506%" height="15" fill="rgb(207,44,46)" fg:x="2948" fg:w="2"/><text x="74.8263%" y="319.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="74.6016%" y="293" width="0.0253%" height="15" fill="rgb(211,206,28)" fg:x="2949" fg:w="1"/><text x="74.8516%" y="303.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="74.6269%" y="309" width="0.0253%" height="15" fill="rgb(237,167,16)" fg:x="2950" fg:w="1"/><text x="74.8769%" y="319.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (5 samples, 0.13%)</title><rect x="74.5510%" y="325" width="0.1265%" height="15" fill="rgb(233,66,6)" fg:x="2947" fg:w="5"/><text x="74.8010%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="74.6522%" y="309" width="0.0253%" height="15" fill="rgb(246,123,29)" fg:x="2951" fg:w="1"/><text x="74.9022%" y="319.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="74.6775%" y="293" width="0.0253%" height="15" fill="rgb(209,62,40)" fg:x="2952" fg:w="1"/><text x="74.9275%" y="303.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="74.7028%" y="293" width="0.0253%" height="15" fill="rgb(218,4,25)" fg:x="2953" fg:w="1"/><text x="74.9528%" y="303.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (3 samples, 0.08%)</title><rect x="74.6775%" y="309" width="0.0759%" height="15" fill="rgb(253,91,49)" fg:x="2952" fg:w="3"/><text x="74.9275%" y="319.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="74.7281%" y="293" width="0.0253%" height="15" fill="rgb(228,155,29)" fg:x="2954" fg:w="1"/><text x="74.9781%" y="303.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (1 samples, 0.03%)</title><rect x="74.7281%" y="277" width="0.0253%" height="15" fill="rgb(243,57,37)" fg:x="2954" fg:w="1"/><text x="74.9781%" y="287.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="74.7281%" y="261" width="0.0253%" height="15" fill="rgb(244,167,17)" fg:x="2954" fg:w="1"/><text x="74.9781%" y="271.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.03%)</title><rect x="74.7534%" y="309" width="0.0253%" height="15" fill="rgb(207,181,38)" fg:x="2955" fg:w="1"/><text x="75.0034%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="74.7786%" y="309" width="0.0253%" height="15" fill="rgb(211,8,23)" fg:x="2956" fg:w="1"/><text x="75.0286%" y="319.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="74.8039%" y="309" width="0.0253%" height="15" fill="rgb(235,11,44)" fg:x="2957" fg:w="1"/><text x="75.0539%" y="319.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="74.8292%" y="309" width="0.0253%" height="15" fill="rgb(248,18,52)" fg:x="2958" fg:w="1"/><text x="75.0792%" y="319.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (2 samples, 0.05%)</title><rect x="74.8545%" y="309" width="0.0506%" height="15" fill="rgb(208,4,7)" fg:x="2959" fg:w="2"/><text x="75.1045%" y="319.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (10 samples, 0.25%)</title><rect x="74.6775%" y="325" width="0.2530%" height="15" fill="rgb(240,17,39)" fg:x="2952" fg:w="10"/><text x="74.9275%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="74.9051%" y="309" width="0.0253%" height="15" fill="rgb(207,170,3)" fg:x="2961" fg:w="1"/><text x="75.1551%" y="319.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (17 samples, 0.43%)</title><rect x="74.5257%" y="341" width="0.4301%" height="15" fill="rgb(236,100,52)" fg:x="2946" fg:w="17"/><text x="74.7757%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="74.9304%" y="325" width="0.0253%" height="15" fill="rgb(246,78,51)" fg:x="2962" fg:w="1"/><text x="75.1804%" y="335.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.03%)</title><rect x="74.9304%" y="309" width="0.0253%" height="15" fill="rgb(211,17,15)" fg:x="2962" fg:w="1"/><text x="75.1804%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="74.9557%" y="341" width="0.0253%" height="15" fill="rgb(209,59,46)" fg:x="2963" fg:w="1"/><text x="75.2057%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="74.9557%" y="325" width="0.0253%" height="15" fill="rgb(210,92,25)" fg:x="2963" fg:w="1"/><text x="75.2057%" y="335.50"></text></g><g><title>cipher::stream_core::StreamBackend::gen_tail_blocks (20 samples, 0.51%)</title><rect x="74.5004%" y="389" width="0.5059%" height="15" fill="rgb(238,174,52)" fg:x="2945" fg:w="20"/><text x="74.7504%" y="399.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (20 samples, 0.51%)</title><rect x="74.5004%" y="373" width="0.5059%" height="15" fill="rgb(230,73,7)" fg:x="2945" fg:w="20"/><text x="74.7504%" y="383.50"></text></g><g><title>chacha20::backends::avx2::rounds (20 samples, 0.51%)</title><rect x="74.5004%" y="357" width="0.5059%" height="15" fill="rgb(243,124,40)" fg:x="2945" fg:w="20"/><text x="74.7504%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="74.9810%" y="341" width="0.0253%" height="15" fill="rgb(244,170,11)" fg:x="2964" fg:w="1"/><text x="75.2310%" y="351.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (3 samples, 0.08%)</title><rect x="75.0063%" y="389" width="0.0759%" height="15" fill="rgb(207,114,54)" fg:x="2965" fg:w="3"/><text x="75.2563%" y="399.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (3 samples, 0.08%)</title><rect x="75.0063%" y="373" width="0.0759%" height="15" fill="rgb(205,42,20)" fg:x="2965" fg:w="3"/><text x="75.2563%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.08%)</title><rect x="75.0063%" y="357" width="0.0759%" height="15" fill="rgb(230,30,28)" fg:x="2965" fg:w="3"/><text x="75.2563%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.08%)</title><rect x="75.0063%" y="341" width="0.0759%" height="15" fill="rgb(205,73,54)" fg:x="2965" fg:w="3"/><text x="75.2563%" y="351.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.08%)</title><rect x="75.0063%" y="325" width="0.0759%" height="15" fill="rgb(254,227,23)" fg:x="2965" fg:w="3"/><text x="75.2563%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (3 samples, 0.08%)</title><rect x="75.0063%" y="309" width="0.0759%" height="15" fill="rgb(228,202,34)" fg:x="2965" fg:w="3"/><text x="75.2563%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (3 samples, 0.08%)</title><rect x="75.0063%" y="293" width="0.0759%" height="15" fill="rgb(222,225,37)" fg:x="2965" fg:w="3"/><text x="75.2563%" y="303.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (3 samples, 0.08%)</title><rect x="75.0063%" y="277" width="0.0759%" height="15" fill="rgb(221,14,54)" fg:x="2965" fg:w="3"/><text x="75.2563%" y="287.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (2 samples, 0.05%)</title><rect x="75.0316%" y="261" width="0.0506%" height="15" fill="rgb(254,102,2)" fg:x="2966" fg:w="2"/><text x="75.2816%" y="271.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (2 samples, 0.05%)</title><rect x="75.0316%" y="245" width="0.0506%" height="15" fill="rgb(232,104,17)" fg:x="2966" fg:w="2"/><text x="75.2816%" y="255.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (2 samples, 0.05%)</title><rect x="75.0316%" y="229" width="0.0506%" height="15" fill="rgb(250,220,14)" fg:x="2966" fg:w="2"/><text x="75.2816%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.03%)</title><rect x="75.0569%" y="213" width="0.0253%" height="15" fill="rgb(241,158,9)" fg:x="2967" fg:w="1"/><text x="75.3069%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="75.0569%" y="197" width="0.0253%" height="15" fill="rgb(246,9,43)" fg:x="2967" fg:w="1"/><text x="75.3069%" y="207.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="75.0569%" y="181" width="0.0253%" height="15" fill="rgb(206,73,33)" fg:x="2967" fg:w="1"/><text x="75.3069%" y="191.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (1 samples, 0.03%)</title><rect x="75.0569%" y="165" width="0.0253%" height="15" fill="rgb(222,79,8)" fg:x="2967" fg:w="1"/><text x="75.3069%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.03%)</title><rect x="77.7637%" y="357" width="0.0253%" height="15" fill="rgb(234,8,54)" fg:x="3074" fg:w="1"/><text x="78.0137%" y="367.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (1 samples, 0.03%)</title><rect x="77.7890%" y="357" width="0.0253%" height="15" fill="rgb(209,134,38)" fg:x="3075" fg:w="1"/><text x="78.0390%" y="367.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.03%)</title><rect x="77.8143%" y="357" width="0.0253%" height="15" fill="rgb(230,127,29)" fg:x="3076" fg:w="1"/><text x="78.0643%" y="367.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (1 samples, 0.03%)</title><rect x="77.8143%" y="341" width="0.0253%" height="15" fill="rgb(242,44,41)" fg:x="3076" fg:w="1"/><text x="78.0643%" y="351.50"></text></g><g><title>_init (1 samples, 0.03%)</title><rect x="77.8396%" y="357" width="0.0253%" height="15" fill="rgb(222,56,43)" fg:x="3077" fg:w="1"/><text x="78.0896%" y="367.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.03%)</title><rect x="77.8649%" y="357" width="0.0253%" height="15" fill="rgb(238,39,47)" fg:x="3078" fg:w="1"/><text x="78.1149%" y="367.50"></text></g><g><title>core::slice::raw::from_raw_parts (8 samples, 0.20%)</title><rect x="77.8902%" y="357" width="0.2024%" height="15" fill="rgb(226,79,43)" fg:x="3079" fg:w="8"/><text x="78.1402%" y="367.50"></text></g><g><title>core::ptr::slice_from_raw_parts (7 samples, 0.18%)</title><rect x="77.9155%" y="341" width="0.1771%" height="15" fill="rgb(242,105,53)" fg:x="3080" fg:w="7"/><text x="78.1655%" y="351.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (7 samples, 0.18%)</title><rect x="77.9155%" y="325" width="0.1771%" height="15" fill="rgb(251,132,46)" fg:x="3080" fg:w="7"/><text x="78.1655%" y="335.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (4 samples, 0.10%)</title><rect x="78.1179%" y="325" width="0.1012%" height="15" fill="rgb(231,77,14)" fg:x="3088" fg:w="4"/><text x="78.3679%" y="335.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::Deref&gt;::deref (57 samples, 1.44%)</title><rect x="76.8024%" y="373" width="1.4419%" height="15" fill="rgb(240,135,9)" fg:x="3036" fg:w="57"/><text x="77.0524%" y="383.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (6 samples, 0.15%)</title><rect x="78.0926%" y="357" width="0.1518%" height="15" fill="rgb(248,109,14)" fg:x="3087" fg:w="6"/><text x="78.3426%" y="367.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (5 samples, 0.13%)</title><rect x="78.1179%" y="341" width="0.1265%" height="15" fill="rgb(227,146,52)" fg:x="3088" fg:w="5"/><text x="78.3679%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::cast (1 samples, 0.03%)</title><rect x="78.2191%" y="325" width="0.0253%" height="15" fill="rgb(232,54,3)" fg:x="3092" fg:w="1"/><text x="78.4691%" y="335.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.03%)</title><rect x="78.6997%" y="357" width="0.0253%" height="15" fill="rgb(229,201,43)" fg:x="3111" fg:w="1"/><text x="78.9497%" y="367.50"></text></g><g><title>core::slice::raw::from_raw_parts (6 samples, 0.15%)</title><rect x="78.7250%" y="357" width="0.1518%" height="15" fill="rgb(252,161,33)" fg:x="3112" fg:w="6"/><text x="78.9750%" y="367.50"></text></g><g><title>core::ptr::slice_from_raw_parts (5 samples, 0.13%)</title><rect x="78.7503%" y="341" width="0.1265%" height="15" fill="rgb(226,146,40)" fg:x="3113" fg:w="5"/><text x="79.0003%" y="351.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (5 samples, 0.13%)</title><rect x="78.7503%" y="325" width="0.1265%" height="15" fill="rgb(219,47,25)" fg:x="3113" fg:w="5"/><text x="79.0003%" y="335.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (5 samples, 0.13%)</title><rect x="78.8768%" y="325" width="0.1265%" height="15" fill="rgb(250,135,13)" fg:x="3118" fg:w="5"/><text x="79.1268%" y="335.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (31 samples, 0.78%)</title><rect x="78.2444%" y="373" width="0.7842%" height="15" fill="rgb(219,229,18)" fg:x="3093" fg:w="31"/><text x="78.4944%" y="383.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (6 samples, 0.15%)</title><rect x="78.8768%" y="357" width="0.1518%" height="15" fill="rgb(217,152,27)" fg:x="3118" fg:w="6"/><text x="79.1268%" y="367.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (6 samples, 0.15%)</title><rect x="78.8768%" y="341" width="0.1518%" height="15" fill="rgb(225,71,47)" fg:x="3118" fg:w="6"/><text x="79.1268%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::cast (1 samples, 0.03%)</title><rect x="79.0033%" y="325" width="0.0253%" height="15" fill="rgb(220,139,14)" fg:x="3123" fg:w="1"/><text x="79.2533%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::cast (1 samples, 0.03%)</title><rect x="79.0792%" y="309" width="0.0253%" height="15" fill="rgb(247,54,32)" fg:x="3126" fg:w="1"/><text x="79.3292%" y="319.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4 samples, 0.10%)</title><rect x="79.0286%" y="373" width="0.1012%" height="15" fill="rgb(252,131,39)" fg:x="3124" fg:w="4"/><text x="79.2786%" y="383.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4 samples, 0.10%)</title><rect x="79.0286%" y="357" width="0.1012%" height="15" fill="rgb(210,108,39)" fg:x="3124" fg:w="4"/><text x="79.2786%" y="367.50"></text></g><g><title>core::slice::raw::from_raw_parts (3 samples, 0.08%)</title><rect x="79.0539%" y="341" width="0.0759%" height="15" fill="rgb(205,23,29)" fg:x="3125" fg:w="3"/><text x="79.3039%" y="351.50"></text></g><g><title>core::ptr::slice_from_raw_parts (2 samples, 0.05%)</title><rect x="79.0792%" y="325" width="0.0506%" height="15" fill="rgb(246,139,46)" fg:x="3126" fg:w="2"/><text x="79.3292%" y="335.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (1 samples, 0.03%)</title><rect x="79.1045%" y="309" width="0.0253%" height="15" fill="rgb(250,81,26)" fg:x="3127" fg:w="1"/><text x="79.3545%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.05%)</title><rect x="79.1551%" y="197" width="0.0506%" height="15" fill="rgb(214,104,7)" fg:x="3129" fg:w="2"/><text x="79.4051%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.05%)</title><rect x="79.1551%" y="181" width="0.0506%" height="15" fill="rgb(233,189,8)" fg:x="3129" fg:w="2"/><text x="79.4051%" y="191.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.05%)</title><rect x="79.1551%" y="165" width="0.0506%" height="15" fill="rgb(228,141,17)" fg:x="3129" fg:w="2"/><text x="79.4051%" y="175.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (1 samples, 0.03%)</title><rect x="79.1804%" y="149" width="0.0253%" height="15" fill="rgb(247,157,1)" fg:x="3130" fg:w="1"/><text x="79.4304%" y="159.50"></text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;generic_array::GenericArray&lt;u8,N&gt;,M&gt;&gt;::xor_in2out (164 samples, 4.15%)</title><rect x="75.0822%" y="389" width="4.1487%" height="15" fill="rgb(249,225,5)" fg:x="2968" fg:w="164"/><text x="75.3322%" y="399.50">inout..</text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (4 samples, 0.10%)</title><rect x="79.1298%" y="373" width="0.1012%" height="15" fill="rgb(242,55,13)" fg:x="3128" fg:w="4"/><text x="79.3798%" y="383.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (4 samples, 0.10%)</title><rect x="79.1298%" y="357" width="0.1012%" height="15" fill="rgb(230,49,50)" fg:x="3128" fg:w="4"/><text x="79.3798%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.10%)</title><rect x="79.1298%" y="341" width="0.1012%" height="15" fill="rgb(241,111,38)" fg:x="3128" fg:w="4"/><text x="79.3798%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.10%)</title><rect x="79.1298%" y="325" width="0.1012%" height="15" fill="rgb(252,155,4)" fg:x="3128" fg:w="4"/><text x="79.3798%" y="335.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.10%)</title><rect x="79.1298%" y="309" width="0.1012%" height="15" fill="rgb(212,69,32)" fg:x="3128" fg:w="4"/><text x="79.3798%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (3 samples, 0.08%)</title><rect x="79.1551%" y="293" width="0.0759%" height="15" fill="rgb(243,107,47)" fg:x="3129" fg:w="3"/><text x="79.4051%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (3 samples, 0.08%)</title><rect x="79.1551%" y="277" width="0.0759%" height="15" fill="rgb(247,130,12)" fg:x="3129" fg:w="3"/><text x="79.4051%" y="287.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (3 samples, 0.08%)</title><rect x="79.1551%" y="261" width="0.0759%" height="15" fill="rgb(233,74,16)" fg:x="3129" fg:w="3"/><text x="79.4051%" y="271.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (3 samples, 0.08%)</title><rect x="79.1551%" y="245" width="0.0759%" height="15" fill="rgb(208,58,18)" fg:x="3129" fg:w="3"/><text x="79.4051%" y="255.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (3 samples, 0.08%)</title><rect x="79.1551%" y="229" width="0.0759%" height="15" fill="rgb(242,225,1)" fg:x="3129" fg:w="3"/><text x="79.4051%" y="239.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (3 samples, 0.08%)</title><rect x="79.1551%" y="213" width="0.0759%" height="15" fill="rgb(249,39,40)" fg:x="3129" fg:w="3"/><text x="79.4051%" y="223.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::iter_position (1 samples, 0.03%)</title><rect x="79.2057%" y="197" width="0.0253%" height="15" fill="rgb(207,72,44)" fg:x="3131" fg:w="1"/><text x="79.4557%" y="207.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.03%)</title><rect x="79.2057%" y="181" width="0.0253%" height="15" fill="rgb(215,193,12)" fg:x="3131" fg:w="1"/><text x="79.4557%" y="191.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (307 samples, 7.77%)</title><rect x="71.5406%" y="405" width="7.7663%" height="15" fill="rgb(248,41,39)" fg:x="2828" fg:w="307"/><text x="71.7906%" y="415.50">&lt;cipher::st..</text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;u8,N&gt;&gt;::xor_in2out (3 samples, 0.08%)</title><rect x="79.2310%" y="389" width="0.0759%" height="15" fill="rgb(253,85,4)" fg:x="3132" fg:w="3"/><text x="79.4810%" y="399.50"></text></g><g><title>chacha20::backends::avx2::inner (308 samples, 7.79%)</title><rect x="71.5406%" y="421" width="7.7916%" height="15" fill="rgb(243,70,31)" fg:x="2828" fg:w="308"/><text x="71.7906%" y="431.50">chacha20::b..</text></g><g><title>poly1305::backend::avx2::State::new (1 samples, 0.03%)</title><rect x="79.3069%" y="405" width="0.0253%" height="15" fill="rgb(253,195,26)" fg:x="3135" fg:w="1"/><text x="79.5569%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (3 samples, 0.08%)</title><rect x="79.3322%" y="421" width="0.0759%" height="15" fill="rgb(243,42,11)" fg:x="3136" fg:w="3"/><text x="79.5822%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="79.4080%" y="421" width="0.0253%" height="15" fill="rgb(239,66,17)" fg:x="3139" fg:w="1"/><text x="79.6580%" y="431.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.03%)</title><rect x="79.4080%" y="405" width="0.0253%" height="15" fill="rgb(217,132,21)" fg:x="3139" fg:w="1"/><text x="79.6580%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (5 samples, 0.13%)</title><rect x="79.4333%" y="421" width="0.1265%" height="15" fill="rgb(252,202,21)" fg:x="3140" fg:w="5"/><text x="79.6833%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (4 samples, 0.10%)</title><rect x="79.5598%" y="421" width="0.1012%" height="15" fill="rgb(233,98,36)" fg:x="3145" fg:w="4"/><text x="79.8098%" y="431.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (324 samples, 8.20%)</title><rect x="71.4900%" y="469" width="8.1963%" height="15" fill="rgb(216,153,54)" fg:x="2826" fg:w="324"/><text x="71.7400%" y="479.50">cipher::str..</text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (324 samples, 8.20%)</title><rect x="71.4900%" y="453" width="8.1963%" height="15" fill="rgb(250,99,7)" fg:x="2826" fg:w="324"/><text x="71.7400%" y="463.50">&lt;chacha20::..</text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (324 samples, 8.20%)</title><rect x="71.4900%" y="437" width="8.1963%" height="15" fill="rgb(207,56,50)" fg:x="2826" fg:w="324"/><text x="71.7400%" y="447.50">&lt;chacha20::..</text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="79.6610%" y="421" width="0.0253%" height="15" fill="rgb(244,61,34)" fg:x="3149" fg:w="1"/><text x="79.9110%" y="431.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="79.8634%" y="325" width="0.0253%" height="15" fill="rgb(241,50,38)" fg:x="3157" fg:w="1"/><text x="80.1134%" y="335.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (13 samples, 0.33%)</title><rect x="79.8887%" y="325" width="0.3289%" height="15" fill="rgb(212,166,30)" fg:x="3158" fg:w="13"/><text x="80.1387%" y="335.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (3 samples, 0.08%)</title><rect x="80.2176%" y="325" width="0.0759%" height="15" fill="rgb(249,127,32)" fg:x="3171" fg:w="3"/><text x="80.4676%" y="335.50"></text></g><g><title>chacha20::backends::avx2::inner (3 samples, 0.08%)</title><rect x="80.2934%" y="325" width="0.0759%" height="15" fill="rgb(209,103,0)" fg:x="3174" fg:w="3"/><text x="80.5434%" y="335.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (3 samples, 0.08%)</title><rect x="80.2934%" y="309" width="0.0759%" height="15" fill="rgb(238,209,51)" fg:x="3174" fg:w="3"/><text x="80.5434%" y="319.50"></text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;u8,N&gt;&gt;::xor_in2out (3 samples, 0.08%)</title><rect x="80.2934%" y="293" width="0.0759%" height="15" fill="rgb(237,56,23)" fg:x="3174" fg:w="3"/><text x="80.5434%" y="303.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.03%)</title><rect x="80.3440%" y="277" width="0.0253%" height="15" fill="rgb(215,153,46)" fg:x="3176" fg:w="1"/><text x="80.5940%" y="287.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (2 samples, 0.05%)</title><rect x="80.3693%" y="325" width="0.0506%" height="15" fill="rgb(224,49,31)" fg:x="3177" fg:w="2"/><text x="80.6193%" y="335.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.03%)</title><rect x="80.5211%" y="309" width="0.0253%" height="15" fill="rgb(250,18,42)" fg:x="3183" fg:w="1"/><text x="80.7711%" y="319.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="80.5464%" y="309" width="0.0253%" height="15" fill="rgb(215,176,39)" fg:x="3184" fg:w="1"/><text x="80.7964%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="80.5717%" y="309" width="0.0253%" height="15" fill="rgb(223,77,29)" fg:x="3185" fg:w="1"/><text x="80.8217%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.03%)</title><rect x="80.5970%" y="309" width="0.0253%" height="15" fill="rgb(234,94,52)" fg:x="3186" fg:w="1"/><text x="80.8470%" y="319.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="80.6223%" y="309" width="0.0253%" height="15" fill="rgb(220,154,50)" fg:x="3187" fg:w="1"/><text x="80.8723%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (10 samples, 0.25%)</title><rect x="80.4199%" y="325" width="0.2530%" height="15" fill="rgb(212,11,10)" fg:x="3179" fg:w="10"/><text x="80.6699%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="80.6476%" y="309" width="0.0253%" height="15" fill="rgb(205,166,19)" fg:x="3188" fg:w="1"/><text x="80.8976%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_broadcastsi128_si256 (1 samples, 0.03%)</title><rect x="80.6729%" y="325" width="0.0253%" height="15" fill="rgb(244,198,16)" fg:x="3189" fg:w="1"/><text x="80.9229%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.03%)</title><rect x="80.6982%" y="325" width="0.0253%" height="15" fill="rgb(219,69,12)" fg:x="3190" fg:w="1"/><text x="80.9482%" y="335.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (4 samples, 0.10%)</title><rect x="80.8247%" y="309" width="0.1012%" height="15" fill="rgb(245,30,7)" fg:x="3195" fg:w="4"/><text x="81.0747%" y="319.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (1 samples, 0.03%)</title><rect x="80.9259%" y="309" width="0.0253%" height="15" fill="rgb(218,221,48)" fg:x="3199" fg:w="1"/><text x="81.1759%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="80.9512%" y="309" width="0.0253%" height="15" fill="rgb(216,66,15)" fg:x="3200" fg:w="1"/><text x="81.2012%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="80.9765%" y="309" width="0.0253%" height="15" fill="rgb(226,122,50)" fg:x="3201" fg:w="1"/><text x="81.2265%" y="319.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="81.0018%" y="309" width="0.0253%" height="15" fill="rgb(239,156,16)" fg:x="3202" fg:w="1"/><text x="81.2518%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (13 samples, 0.33%)</title><rect x="80.7235%" y="325" width="0.3289%" height="15" fill="rgb(224,27,38)" fg:x="3191" fg:w="13"/><text x="80.9735%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="81.0271%" y="309" width="0.0253%" height="15" fill="rgb(224,39,27)" fg:x="3203" fg:w="1"/><text x="81.2771%" y="319.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="81.0524%" y="309" width="0.0253%" height="15" fill="rgb(215,92,29)" fg:x="3204" fg:w="1"/><text x="81.3024%" y="319.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (1 samples, 0.03%)</title><rect x="81.0777%" y="309" width="0.0253%" height="15" fill="rgb(207,159,16)" fg:x="3205" fg:w="1"/><text x="81.3277%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="81.1030%" y="309" width="0.0253%" height="15" fill="rgb(238,163,47)" fg:x="3206" fg:w="1"/><text x="81.3530%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="81.1283%" y="309" width="0.0253%" height="15" fill="rgb(219,91,49)" fg:x="3207" fg:w="1"/><text x="81.3783%" y="319.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.05%)</title><rect x="81.1536%" y="309" width="0.0506%" height="15" fill="rgb(227,167,31)" fg:x="3208" fg:w="2"/><text x="81.4036%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (7 samples, 0.18%)</title><rect x="81.0524%" y="325" width="0.1771%" height="15" fill="rgb(234,80,54)" fg:x="3204" fg:w="7"/><text x="81.3024%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="81.2041%" y="309" width="0.0253%" height="15" fill="rgb(212,114,2)" fg:x="3210" fg:w="1"/><text x="81.4541%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (4 samples, 0.10%)</title><rect x="81.2294%" y="325" width="0.1012%" height="15" fill="rgb(234,50,24)" fg:x="3211" fg:w="4"/><text x="81.4794%" y="335.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.03%)</title><rect x="81.3053%" y="309" width="0.0253%" height="15" fill="rgb(221,68,8)" fg:x="3214" fg:w="1"/><text x="81.5553%" y="319.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (2 samples, 0.05%)</title><rect x="81.6342%" y="309" width="0.0506%" height="15" fill="rgb(254,180,31)" fg:x="3227" fg:w="2"/><text x="81.8842%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (16 samples, 0.40%)</title><rect x="81.3306%" y="325" width="0.4048%" height="15" fill="rgb(247,130,50)" fg:x="3215" fg:w="16"/><text x="81.5806%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.05%)</title><rect x="81.6848%" y="309" width="0.0506%" height="15" fill="rgb(211,109,4)" fg:x="3229" fg:w="2"/><text x="81.9348%" y="319.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.03%)</title><rect x="81.7101%" y="293" width="0.0253%" height="15" fill="rgb(238,50,21)" fg:x="3230" fg:w="1"/><text x="81.9601%" y="303.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (5 samples, 0.13%)</title><rect x="81.7354%" y="325" width="0.1265%" height="15" fill="rgb(225,57,45)" fg:x="3231" fg:w="5"/><text x="81.9854%" y="335.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi64x (2 samples, 0.05%)</title><rect x="81.8113%" y="309" width="0.0506%" height="15" fill="rgb(209,196,50)" fg:x="3234" fg:w="2"/><text x="82.0613%" y="319.50"></text></g><g><title>core::core_arch::simd::i64x4::new (2 samples, 0.05%)</title><rect x="81.8113%" y="293" width="0.0506%" height="15" fill="rgb(242,140,13)" fg:x="3234" fg:w="2"/><text x="82.0613%" y="303.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (7 samples, 0.18%)</title><rect x="81.8619%" y="325" width="0.1771%" height="15" fill="rgb(217,111,7)" fg:x="3236" fg:w="7"/><text x="82.1119%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (6 samples, 0.15%)</title><rect x="82.0390%" y="325" width="0.1518%" height="15" fill="rgb(253,193,51)" fg:x="3243" fg:w="6"/><text x="82.2890%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (7 samples, 0.18%)</title><rect x="82.1907%" y="325" width="0.1771%" height="15" fill="rgb(252,70,29)" fg:x="3249" fg:w="7"/><text x="82.4407%" y="335.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (110 samples, 2.78%)</title><rect x="79.6863%" y="341" width="2.7827%" height="15" fill="rgb(232,127,12)" fg:x="3150" fg:w="110"/><text x="79.9363%" y="351.50">ch..</text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (4 samples, 0.10%)</title><rect x="82.3678%" y="325" width="0.1012%" height="15" fill="rgb(211,180,21)" fg:x="3256" fg:w="4"/><text x="82.6178%" y="335.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (2 samples, 0.05%)</title><rect x="82.4690%" y="325" width="0.0506%" height="15" fill="rgb(229,72,13)" fg:x="3260" fg:w="2"/><text x="82.7190%" y="335.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="82.5196%" y="309" width="0.0253%" height="15" fill="rgb(240,211,49)" fg:x="3262" fg:w="1"/><text x="82.7696%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.03%)</title><rect x="82.5449%" y="309" width="0.0253%" height="15" fill="rgb(219,149,40)" fg:x="3263" fg:w="1"/><text x="82.7949%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="82.5702%" y="309" width="0.0253%" height="15" fill="rgb(210,127,46)" fg:x="3264" fg:w="1"/><text x="82.8202%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (4 samples, 0.10%)</title><rect x="82.5196%" y="325" width="0.1012%" height="15" fill="rgb(220,106,7)" fg:x="3262" fg:w="4"/><text x="82.7696%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="82.5955%" y="309" width="0.0253%" height="15" fill="rgb(249,31,22)" fg:x="3265" fg:w="1"/><text x="82.8455%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="82.6208%" y="325" width="0.0253%" height="15" fill="rgb(253,1,49)" fg:x="3266" fg:w="1"/><text x="82.8708%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="82.6461%" y="325" width="0.0253%" height="15" fill="rgb(227,144,33)" fg:x="3267" fg:w="1"/><text x="82.8961%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="82.6714%" y="325" width="0.0253%" height="15" fill="rgb(249,163,44)" fg:x="3268" fg:w="1"/><text x="82.9214%" y="335.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (10 samples, 0.25%)</title><rect x="82.4690%" y="341" width="0.2530%" height="15" fill="rgb(234,15,39)" fg:x="3260" fg:w="10"/><text x="82.7190%" y="351.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="82.6967%" y="325" width="0.0253%" height="15" fill="rgb(207,66,16)" fg:x="3269" fg:w="1"/><text x="82.9467%" y="335.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="82.7220%" y="325" width="0.0253%" height="15" fill="rgb(233,112,24)" fg:x="3270" fg:w="1"/><text x="82.9720%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="82.7473%" y="325" width="0.0253%" height="15" fill="rgb(230,90,22)" fg:x="3271" fg:w="1"/><text x="82.9973%" y="335.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.03%)</title><rect x="82.7726%" y="309" width="0.0253%" height="15" fill="rgb(229,61,13)" fg:x="3272" fg:w="1"/><text x="83.0226%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (2 samples, 0.05%)</title><rect x="82.7726%" y="325" width="0.0506%" height="15" fill="rgb(225,57,24)" fg:x="3272" fg:w="2"/><text x="83.0226%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="82.7979%" y="309" width="0.0253%" height="15" fill="rgb(208,169,48)" fg:x="3273" fg:w="1"/><text x="83.0479%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.03%)</title><rect x="82.8232%" y="325" width="0.0253%" height="15" fill="rgb(244,218,51)" fg:x="3274" fg:w="1"/><text x="83.0732%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (2 samples, 0.05%)</title><rect x="82.8485%" y="325" width="0.0506%" height="15" fill="rgb(214,148,10)" fg:x="3275" fg:w="2"/><text x="83.0985%" y="335.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (8 samples, 0.20%)</title><rect x="82.7220%" y="341" width="0.2024%" height="15" fill="rgb(225,174,27)" fg:x="3270" fg:w="8"/><text x="82.9720%" y="351.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="82.8991%" y="325" width="0.0253%" height="15" fill="rgb(230,96,26)" fg:x="3277" fg:w="1"/><text x="83.1491%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="82.9244%" y="341" width="0.0253%" height="15" fill="rgb(232,10,30)" fg:x="3278" fg:w="1"/><text x="83.1744%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (3 samples, 0.08%)</title><rect x="82.9497%" y="341" width="0.0759%" height="15" fill="rgb(222,8,50)" fg:x="3279" fg:w="3"/><text x="83.1997%" y="351.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (2 samples, 0.05%)</title><rect x="82.9750%" y="325" width="0.0506%" height="15" fill="rgb(213,81,27)" fg:x="3280" fg:w="2"/><text x="83.2250%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="83.0256%" y="341" width="0.0253%" height="15" fill="rgb(245,50,10)" fg:x="3282" fg:w="1"/><text x="83.2756%" y="351.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.05%)</title><rect x="83.0508%" y="341" width="0.0506%" height="15" fill="rgb(216,100,18)" fg:x="3283" fg:w="2"/><text x="83.3008%" y="351.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (137 samples, 3.47%)</title><rect x="79.6863%" y="357" width="3.4657%" height="15" fill="rgb(236,147,54)" fg:x="3150" fg:w="137"/><text x="79.9363%" y="367.50">cha..</text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (2 samples, 0.05%)</title><rect x="83.1014%" y="341" width="0.0506%" height="15" fill="rgb(205,143,26)" fg:x="3285" fg:w="2"/><text x="83.3514%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="83.1520%" y="357" width="0.0253%" height="15" fill="rgb(236,26,9)" fg:x="3287" fg:w="1"/><text x="83.4020%" y="367.50"></text></g><g><title>chacha20::backends::avx2::rounds (139 samples, 3.52%)</title><rect x="79.6863%" y="373" width="3.5163%" height="15" fill="rgb(221,165,53)" fg:x="3150" fg:w="139"/><text x="79.9363%" y="383.50">cha..</text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="83.1773%" y="357" width="0.0253%" height="15" fill="rgb(214,110,17)" fg:x="3288" fg:w="1"/><text x="83.4273%" y="367.50"></text></g><g><title>&lt;cipher::stream_core::WriteBlockCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (140 samples, 3.54%)</title><rect x="79.6863%" y="405" width="3.5416%" height="15" fill="rgb(237,197,12)" fg:x="3150" fg:w="140"/><text x="79.9363%" y="415.50">&lt;cip..</text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (140 samples, 3.54%)</title><rect x="79.6863%" y="389" width="3.5416%" height="15" fill="rgb(205,84,17)" fg:x="3150" fg:w="140"/><text x="79.9363%" y="399.50">&lt;cha..</text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="83.2026%" y="373" width="0.0253%" height="15" fill="rgb(237,18,45)" fg:x="3289" fg:w="1"/><text x="83.4526%" y="383.50"></text></g><g><title>chacha20::backends::avx2::inner (1 samples, 0.03%)</title><rect x="83.2279%" y="405" width="0.0253%" height="15" fill="rgb(221,87,14)" fg:x="3290" fg:w="1"/><text x="83.4779%" y="415.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (1 samples, 0.03%)</title><rect x="83.2279%" y="389" width="0.0253%" height="15" fill="rgb(238,186,15)" fg:x="3290" fg:w="1"/><text x="83.4779%" y="399.50"></text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;u8,N&gt;&gt;::xor_in2out (1 samples, 0.03%)</title><rect x="83.2279%" y="373" width="0.0253%" height="15" fill="rgb(208,115,11)" fg:x="3290" fg:w="1"/><text x="83.4779%" y="383.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::write_keystream_block (142 samples, 3.59%)</title><rect x="79.6863%" y="469" width="3.5922%" height="15" fill="rgb(254,175,0)" fg:x="3150" fg:w="142"/><text x="79.9363%" y="479.50">ciph..</text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (142 samples, 3.59%)</title><rect x="79.6863%" y="453" width="3.5922%" height="15" fill="rgb(227,24,42)" fg:x="3150" fg:w="142"/><text x="79.9363%" y="463.50">&lt;cha..</text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (142 samples, 3.59%)</title><rect x="79.6863%" y="437" width="3.5922%" height="15" fill="rgb(223,211,37)" fg:x="3150" fg:w="142"/><text x="79.9363%" y="447.50">&lt;cha..</text></g><g><title>chacha20::backends::avx2::inner (142 samples, 3.59%)</title><rect x="79.6863%" y="421" width="3.5922%" height="15" fill="rgb(235,49,27)" fg:x="3150" fg:w="142"/><text x="79.9363%" y="431.50">chac..</text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="83.2532%" y="405" width="0.0253%" height="15" fill="rgb(254,97,51)" fg:x="3291" fg:w="1"/><text x="83.5032%" y="415.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (467 samples, 11.81%)</title><rect x="71.4900%" y="517" width="11.8138%" height="15" fill="rgb(249,51,40)" fg:x="2826" fg:w="467"/><text x="71.7400%" y="527.50">cipher::stream::St..</text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (467 samples, 11.81%)</title><rect x="71.4900%" y="501" width="11.8138%" height="15" fill="rgb(210,128,45)" fg:x="2826" fg:w="467"/><text x="71.7400%" y="511.50">cipher::stream::St..</text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (467 samples, 11.81%)</title><rect x="71.4900%" y="485" width="11.8138%" height="15" fill="rgb(224,137,50)" fg:x="2826" fg:w="467"/><text x="71.7400%" y="495.50">&lt;cipher::stream_wr..</text></g><g><title>inout::inout_buf::InOutBuf&lt;u8&gt;::xor_in2out (1 samples, 0.03%)</title><rect x="83.2785%" y="469" width="0.0253%" height="15" fill="rgb(242,15,9)" fg:x="3292" fg:w="1"/><text x="83.5285%" y="479.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="83.2785%" y="453" width="0.0253%" height="15" fill="rgb(233,187,41)" fg:x="3292" fg:w="1"/><text x="83.5285%" y="463.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (1 samples, 0.03%)</title><rect x="83.2785%" y="437" width="0.0253%" height="15" fill="rgb(227,2,29)" fg:x="3292" fg:w="1"/><text x="83.5285%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="83.3038%" y="421" width="0.0253%" height="15" fill="rgb(222,70,3)" fg:x="3293" fg:w="1"/><text x="83.5538%" y="431.50"></text></g><g><title>&lt;poly1305::backend::avx2::State as universal_hash::UhfBackend&gt;::proc_block (2 samples, 0.05%)</title><rect x="83.3038%" y="437" width="0.0506%" height="15" fill="rgb(213,11,42)" fg:x="3293" fg:w="2"/><text x="83.5538%" y="447.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (1 samples, 0.03%)</title><rect x="83.3291%" y="421" width="0.0253%" height="15" fill="rgb(225,150,9)" fg:x="3294" fg:w="1"/><text x="83.5791%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="83.3544%" y="421" width="0.0253%" height="15" fill="rgb(230,162,45)" fg:x="3295" fg:w="1"/><text x="83.6044%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (6 samples, 0.15%)</title><rect x="83.3797%" y="405" width="0.1518%" height="15" fill="rgb(222,14,52)" fg:x="3296" fg:w="6"/><text x="83.6297%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_blend_epi32 (1 samples, 0.03%)</title><rect x="83.5315%" y="405" width="0.0253%" height="15" fill="rgb(254,198,14)" fg:x="3302" fg:w="1"/><text x="83.7815%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (9 samples, 0.23%)</title><rect x="83.5568%" y="405" width="0.2277%" height="15" fill="rgb(220,217,30)" fg:x="3303" fg:w="9"/><text x="83.8068%" y="415.50"></text></g><g><title>core::core_arch::simd::u64x4::splat (1 samples, 0.03%)</title><rect x="83.7592%" y="389" width="0.0253%" height="15" fill="rgb(215,146,41)" fg:x="3311" fg:w="1"/><text x="84.0092%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (2 samples, 0.05%)</title><rect x="83.7845%" y="405" width="0.0506%" height="15" fill="rgb(217,27,36)" fg:x="3312" fg:w="2"/><text x="84.0345%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi64 (2 samples, 0.05%)</title><rect x="83.8351%" y="405" width="0.0506%" height="15" fill="rgb(219,218,39)" fg:x="3314" fg:w="2"/><text x="84.0851%" y="415.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi32 (1 samples, 0.03%)</title><rect x="83.8857%" y="405" width="0.0253%" height="15" fill="rgb(219,4,42)" fg:x="3316" fg:w="1"/><text x="84.1357%" y="415.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (2 samples, 0.05%)</title><rect x="83.9110%" y="405" width="0.0506%" height="15" fill="rgb(249,119,36)" fg:x="3317" fg:w="2"/><text x="84.1610%" y="415.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (2 samples, 0.05%)</title><rect x="83.9110%" y="389" width="0.0506%" height="15" fill="rgb(209,23,33)" fg:x="3317" fg:w="2"/><text x="84.1610%" y="399.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (2 samples, 0.05%)</title><rect x="83.9110%" y="373" width="0.0506%" height="15" fill="rgb(211,10,0)" fg:x="3317" fg:w="2"/><text x="84.1610%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.05%)</title><rect x="83.9615%" y="405" width="0.0506%" height="15" fill="rgb(208,99,37)" fg:x="3319" fg:w="2"/><text x="84.2115%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (3 samples, 0.08%)</title><rect x="84.0121%" y="405" width="0.0759%" height="15" fill="rgb(213,132,31)" fg:x="3321" fg:w="3"/><text x="84.2621%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (3 samples, 0.08%)</title><rect x="84.0880%" y="405" width="0.0759%" height="15" fill="rgb(243,129,40)" fg:x="3324" fg:w="3"/><text x="84.3380%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (3 samples, 0.08%)</title><rect x="84.2398%" y="373" width="0.0759%" height="15" fill="rgb(210,66,33)" fg:x="3330" fg:w="3"/><text x="84.4898%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (2 samples, 0.05%)</title><rect x="84.6446%" y="357" width="0.0506%" height="15" fill="rgb(209,189,4)" fg:x="3346" fg:w="2"/><text x="84.8946%" y="367.50"></text></g><g><title>core::core_arch::simd::u64x4::splat (1 samples, 0.03%)</title><rect x="84.6699%" y="341" width="0.0253%" height="15" fill="rgb(214,107,37)" fg:x="3347" fg:w="1"/><text x="84.9199%" y="351.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="84.6952%" y="357" width="0.0253%" height="15" fill="rgb(245,88,54)" fg:x="3348" fg:w="1"/><text x="84.9452%" y="367.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.03%)</title><rect x="84.6952%" y="341" width="0.0253%" height="15" fill="rgb(205,146,20)" fg:x="3348" fg:w="1"/><text x="84.9452%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (17 samples, 0.43%)</title><rect x="84.3157%" y="373" width="0.4301%" height="15" fill="rgb(220,161,25)" fg:x="3333" fg:w="17"/><text x="84.5657%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="84.7205%" y="357" width="0.0253%" height="15" fill="rgb(215,152,15)" fg:x="3349" fg:w="1"/><text x="84.9705%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.03%)</title><rect x="84.7458%" y="373" width="0.0253%" height="15" fill="rgb(233,192,44)" fg:x="3350" fg:w="1"/><text x="84.9958%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_blend_epi32 (3 samples, 0.08%)</title><rect x="84.7711%" y="373" width="0.0759%" height="15" fill="rgb(240,170,46)" fg:x="3351" fg:w="3"/><text x="85.0211%" y="383.50"></text></g><g><title>core::core_arch::simd::u64x4::splat (3 samples, 0.08%)</title><rect x="85.6818%" y="357" width="0.0759%" height="15" fill="rgb(207,104,33)" fg:x="3387" fg:w="3"/><text x="85.9318%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (2 samples, 0.05%)</title><rect x="85.7577%" y="357" width="0.0506%" height="15" fill="rgb(219,21,39)" fg:x="3390" fg:w="2"/><text x="86.0077%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (2 samples, 0.05%)</title><rect x="85.8082%" y="357" width="0.0506%" height="15" fill="rgb(214,133,29)" fg:x="3392" fg:w="2"/><text x="86.0582%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_blend_epi32 (1 samples, 0.03%)</title><rect x="85.8588%" y="357" width="0.0253%" height="15" fill="rgb(226,93,6)" fg:x="3394" fg:w="1"/><text x="86.1088%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.03%)</title><rect x="85.8841%" y="357" width="0.0253%" height="15" fill="rgb(252,222,34)" fg:x="3395" fg:w="1"/><text x="86.1341%" y="367.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (4 samples, 0.10%)</title><rect x="85.9094%" y="357" width="0.1012%" height="15" fill="rgb(252,92,48)" fg:x="3396" fg:w="4"/><text x="86.1594%" y="367.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (4 samples, 0.10%)</title><rect x="85.9094%" y="341" width="0.1012%" height="15" fill="rgb(245,223,24)" fg:x="3396" fg:w="4"/><text x="86.1594%" y="351.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (4 samples, 0.10%)</title><rect x="85.9094%" y="325" width="0.1012%" height="15" fill="rgb(205,176,3)" fg:x="3396" fg:w="4"/><text x="86.1594%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="86.0106%" y="357" width="0.0253%" height="15" fill="rgb(235,151,15)" fg:x="3400" fg:w="1"/><text x="86.2606%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (3 samples, 0.08%)</title><rect x="86.0359%" y="357" width="0.0759%" height="15" fill="rgb(237,209,11)" fg:x="3401" fg:w="3"/><text x="86.2859%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="86.1118%" y="357" width="0.0253%" height="15" fill="rgb(243,227,24)" fg:x="3404" fg:w="1"/><text x="86.3618%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.03%)</title><rect x="86.1371%" y="357" width="0.0253%" height="15" fill="rgb(239,193,16)" fg:x="3405" fg:w="1"/><text x="86.3871%" y="367.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (1 samples, 0.03%)</title><rect x="86.1624%" y="341" width="0.0253%" height="15" fill="rgb(231,27,9)" fg:x="3406" fg:w="1"/><text x="86.4124%" y="351.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (2 samples, 0.05%)</title><rect x="86.1624%" y="357" width="0.0506%" height="15" fill="rgb(219,169,10)" fg:x="3406" fg:w="2"/><text x="86.4124%" y="367.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Add&gt;::add (1 samples, 0.03%)</title><rect x="86.1877%" y="341" width="0.0253%" height="15" fill="rgb(244,229,43)" fg:x="3407" fg:w="1"/><text x="86.4377%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (55 samples, 1.39%)</title><rect x="84.8470%" y="373" width="1.3913%" height="15" fill="rgb(254,38,20)" fg:x="3354" fg:w="55"/><text x="85.0970%" y="383.50"></text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_par_blocks (1 samples, 0.03%)</title><rect x="86.2130%" y="357" width="0.0253%" height="15" fill="rgb(250,47,30)" fg:x="3408" fg:w="1"/><text x="86.4630%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (1 samples, 0.03%)</title><rect x="86.2383%" y="373" width="0.0253%" height="15" fill="rgb(224,124,36)" fg:x="3409" fg:w="1"/><text x="86.4883%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.03%)</title><rect x="86.3142%" y="357" width="0.0253%" height="15" fill="rgb(246,68,51)" fg:x="3412" fg:w="1"/><text x="86.5642%" y="367.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (3 samples, 0.08%)</title><rect x="86.3395%" y="357" width="0.0759%" height="15" fill="rgb(253,43,49)" fg:x="3413" fg:w="3"/><text x="86.5895%" y="367.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (3 samples, 0.08%)</title><rect x="86.3395%" y="341" width="0.0759%" height="15" fill="rgb(219,54,36)" fg:x="3413" fg:w="3"/><text x="86.5895%" y="351.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (3 samples, 0.08%)</title><rect x="86.3395%" y="325" width="0.0759%" height="15" fill="rgb(227,133,34)" fg:x="3413" fg:w="3"/><text x="86.5895%" y="335.50"></text></g><g><title>core::core_arch::simd::i8x32::new (2 samples, 0.05%)</title><rect x="86.3648%" y="309" width="0.0506%" height="15" fill="rgb(247,227,15)" fg:x="3414" fg:w="2"/><text x="86.6148%" y="319.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="86.4154%" y="357" width="0.0253%" height="15" fill="rgb(229,96,14)" fg:x="3416" fg:w="1"/><text x="86.6654%" y="367.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.03%)</title><rect x="86.4660%" y="341" width="0.0253%" height="15" fill="rgb(220,79,17)" fg:x="3418" fg:w="1"/><text x="86.7160%" y="351.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (3 samples, 0.08%)</title><rect x="86.4407%" y="357" width="0.0759%" height="15" fill="rgb(205,131,53)" fg:x="3417" fg:w="3"/><text x="86.6907%" y="367.50"></text></g><g><title>__memcpy_avx_unaligned (1 samples, 0.03%)</title><rect x="86.4913%" y="341" width="0.0253%" height="15" fill="rgb(209,50,29)" fg:x="3419" fg:w="1"/><text x="86.7413%" y="351.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (1 samples, 0.03%)</title><rect x="86.5166%" y="357" width="0.0253%" height="15" fill="rgb(245,86,46)" fg:x="3420" fg:w="1"/><text x="86.7666%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (12 samples, 0.30%)</title><rect x="86.2636%" y="373" width="0.3036%" height="15" fill="rgb(235,66,46)" fg:x="3410" fg:w="12"/><text x="86.5136%" y="383.50"></text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_loaded_blocks (1 samples, 0.03%)</title><rect x="86.5419%" y="357" width="0.0253%" height="15" fill="rgb(232,148,31)" fg:x="3421" fg:w="1"/><text x="86.7919%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (1 samples, 0.03%)</title><rect x="86.8707%" y="357" width="0.0253%" height="15" fill="rgb(217,149,8)" fg:x="3434" fg:w="1"/><text x="87.1207%" y="367.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (2 samples, 0.05%)</title><rect x="86.8960%" y="357" width="0.0506%" height="15" fill="rgb(209,183,11)" fg:x="3435" fg:w="2"/><text x="87.1460%" y="367.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (2 samples, 0.05%)</title><rect x="86.8960%" y="341" width="0.0506%" height="15" fill="rgb(208,55,20)" fg:x="3435" fg:w="2"/><text x="87.1460%" y="351.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (2 samples, 0.05%)</title><rect x="86.8960%" y="325" width="0.0506%" height="15" fill="rgb(218,39,14)" fg:x="3435" fg:w="2"/><text x="87.1460%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="86.9466%" y="357" width="0.0253%" height="15" fill="rgb(216,169,33)" fg:x="3437" fg:w="1"/><text x="87.1966%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="86.9719%" y="357" width="0.0253%" height="15" fill="rgb(233,80,24)" fg:x="3438" fg:w="1"/><text x="87.2219%" y="367.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.03%)</title><rect x="86.9719%" y="341" width="0.0253%" height="15" fill="rgb(213,179,31)" fg:x="3438" fg:w="1"/><text x="87.2219%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (19 samples, 0.48%)</title><rect x="86.5672%" y="373" width="0.4806%" height="15" fill="rgb(209,19,5)" fg:x="3422" fg:w="19"/><text x="86.8172%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (2 samples, 0.05%)</title><rect x="86.9972%" y="357" width="0.0506%" height="15" fill="rgb(219,18,35)" fg:x="3439" fg:w="2"/><text x="87.2472%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi64 (7 samples, 0.18%)</title><rect x="87.0478%" y="373" width="0.1771%" height="15" fill="rgb(209,169,16)" fg:x="3441" fg:w="7"/><text x="87.2978%" y="383.50"></text></g><g><title>core::core_arch::simd::u64x4::splat (2 samples, 0.05%)</title><rect x="87.1743%" y="357" width="0.0506%" height="15" fill="rgb(245,90,51)" fg:x="3446" fg:w="2"/><text x="87.4243%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (3 samples, 0.08%)</title><rect x="87.2249%" y="373" width="0.0759%" height="15" fill="rgb(220,99,45)" fg:x="3448" fg:w="3"/><text x="87.4749%" y="383.50"></text></g><g><title>core::core_arch::simd::u64x4::splat (2 samples, 0.05%)</title><rect x="87.2502%" y="357" width="0.0506%" height="15" fill="rgb(249,89,25)" fg:x="3449" fg:w="2"/><text x="87.5002%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_unpackhi_epi64 (1 samples, 0.03%)</title><rect x="87.3008%" y="373" width="0.0253%" height="15" fill="rgb(239,193,0)" fg:x="3451" fg:w="1"/><text x="87.5508%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (3 samples, 0.08%)</title><rect x="87.3261%" y="373" width="0.0759%" height="15" fill="rgb(231,126,1)" fg:x="3452" fg:w="3"/><text x="87.5761%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi32 (2 samples, 0.05%)</title><rect x="87.3514%" y="357" width="0.0506%" height="15" fill="rgb(243,166,3)" fg:x="3453" fg:w="2"/><text x="87.6014%" y="367.50"></text></g><g><title>core::core_arch::simd::i32x8::new (2 samples, 0.05%)</title><rect x="87.3514%" y="341" width="0.0506%" height="15" fill="rgb(223,22,34)" fg:x="3453" fg:w="2"/><text x="87.6014%" y="351.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (19 samples, 0.48%)</title><rect x="87.4020%" y="373" width="0.4806%" height="15" fill="rgb(251,52,51)" fg:x="3455" fg:w="19"/><text x="87.6520%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (19 samples, 0.48%)</title><rect x="87.4020%" y="357" width="0.4806%" height="15" fill="rgb(221,165,28)" fg:x="3455" fg:w="19"/><text x="87.6520%" y="367.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (19 samples, 0.48%)</title><rect x="87.4020%" y="341" width="0.4806%" height="15" fill="rgb(218,121,47)" fg:x="3455" fg:w="19"/><text x="87.6520%" y="351.50"></text></g><g><title>core::core_arch::simd::i8x32::new (4 samples, 0.10%)</title><rect x="87.7814%" y="325" width="0.1012%" height="15" fill="rgb(209,120,9)" fg:x="3470" fg:w="4"/><text x="88.0314%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (7 samples, 0.18%)</title><rect x="87.8826%" y="373" width="0.1771%" height="15" fill="rgb(236,68,12)" fg:x="3474" fg:w="7"/><text x="88.1326%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (13 samples, 0.33%)</title><rect x="88.0597%" y="373" width="0.3289%" height="15" fill="rgb(225,194,26)" fg:x="3481" fg:w="13"/><text x="88.3097%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (11 samples, 0.28%)</title><rect x="88.3886%" y="373" width="0.2783%" height="15" fill="rgb(231,84,39)" fg:x="3494" fg:w="11"/><text x="88.6386%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (20 samples, 0.51%)</title><rect x="88.6668%" y="373" width="0.5059%" height="15" fill="rgb(210,11,45)" fg:x="3505" fg:w="20"/><text x="88.9168%" y="383.50"></text></g><g><title>poly1305::backend::avx2::State::compute_par_blocks (1 samples, 0.03%)</title><rect x="89.1728%" y="373" width="0.0253%" height="15" fill="rgb(224,54,52)" fg:x="3525" fg:w="1"/><text x="89.4228%" y="383.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (5 samples, 0.13%)</title><rect x="89.2487%" y="357" width="0.1265%" height="15" fill="rgb(238,102,14)" fg:x="3528" fg:w="5"/><text x="89.4987%" y="367.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Add&gt;::add (2 samples, 0.05%)</title><rect x="89.3752%" y="357" width="0.0506%" height="15" fill="rgb(243,160,52)" fg:x="3533" fg:w="2"/><text x="89.6252%" y="367.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (10 samples, 0.25%)</title><rect x="89.1981%" y="373" width="0.2530%" height="15" fill="rgb(216,114,19)" fg:x="3526" fg:w="10"/><text x="89.4481%" y="383.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (1 samples, 0.03%)</title><rect x="89.4258%" y="357" width="0.0253%" height="15" fill="rgb(244,166,37)" fg:x="3535" fg:w="1"/><text x="89.6758%" y="367.50"></text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_loaded_blocks (2 samples, 0.05%)</title><rect x="89.4510%" y="373" width="0.0506%" height="15" fill="rgb(246,29,44)" fg:x="3536" fg:w="2"/><text x="89.7010%" y="383.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (212 samples, 5.36%)</title><rect x="84.1639%" y="389" width="5.3630%" height="15" fill="rgb(215,56,53)" fg:x="3327" fg:w="212"/><text x="84.4139%" y="399.50">&lt;&amp;poly1..</text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_par_blocks (1 samples, 0.03%)</title><rect x="89.5016%" y="373" width="0.0253%" height="15" fill="rgb(217,60,2)" fg:x="3538" fg:w="1"/><text x="89.7516%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="89.5269%" y="373" width="0.0253%" height="15" fill="rgb(207,26,24)" fg:x="3539" fg:w="1"/><text x="89.7769%" y="383.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (1 samples, 0.03%)</title><rect x="89.5269%" y="357" width="0.0253%" height="15" fill="rgb(252,210,15)" fg:x="3539" fg:w="1"/><text x="89.7769%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (3 samples, 0.08%)</title><rect x="89.5522%" y="373" width="0.0759%" height="15" fill="rgb(253,209,26)" fg:x="3540" fg:w="3"/><text x="89.8022%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (3 samples, 0.08%)</title><rect x="89.6281%" y="373" width="0.0759%" height="15" fill="rgb(238,170,14)" fg:x="3543" fg:w="3"/><text x="89.8781%" y="383.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (1 samples, 0.03%)</title><rect x="89.7040%" y="373" width="0.0253%" height="15" fill="rgb(216,178,15)" fg:x="3546" fg:w="1"/><text x="89.9540%" y="383.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (1 samples, 0.03%)</title><rect x="89.7040%" y="357" width="0.0253%" height="15" fill="rgb(250,197,2)" fg:x="3546" fg:w="1"/><text x="89.9540%" y="367.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Add&gt;::add (9 samples, 0.23%)</title><rect x="89.5269%" y="389" width="0.2277%" height="15" fill="rgb(212,70,42)" fg:x="3539" fg:w="9"/><text x="89.7769%" y="399.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (1 samples, 0.03%)</title><rect x="89.7293%" y="373" width="0.0253%" height="15" fill="rgb(227,213,9)" fg:x="3547" fg:w="1"/><text x="89.9793%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (5 samples, 0.13%)</title><rect x="89.7546%" y="373" width="0.1265%" height="15" fill="rgb(245,99,25)" fg:x="3548" fg:w="5"/><text x="90.0046%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_blend_epi32 (1 samples, 0.03%)</title><rect x="89.8811%" y="373" width="0.0253%" height="15" fill="rgb(250,82,29)" fg:x="3553" fg:w="1"/><text x="90.1311%" y="383.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (1 samples, 0.03%)</title><rect x="89.8811%" y="357" width="0.0253%" height="15" fill="rgb(241,226,54)" fg:x="3553" fg:w="1"/><text x="90.1311%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (5 samples, 0.13%)</title><rect x="89.9064%" y="373" width="0.1265%" height="15" fill="rgb(221,99,41)" fg:x="3554" fg:w="5"/><text x="90.1564%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi64 (1 samples, 0.03%)</title><rect x="90.0329%" y="373" width="0.0253%" height="15" fill="rgb(213,90,21)" fg:x="3559" fg:w="1"/><text x="90.2829%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.03%)</title><rect x="90.0329%" y="357" width="0.0253%" height="15" fill="rgb(205,208,24)" fg:x="3559" fg:w="1"/><text x="90.2829%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (2 samples, 0.05%)</title><rect x="90.0582%" y="373" width="0.0506%" height="15" fill="rgb(246,31,12)" fg:x="3560" fg:w="2"/><text x="90.3082%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi64x (1 samples, 0.03%)</title><rect x="90.1088%" y="373" width="0.0253%" height="15" fill="rgb(213,154,6)" fg:x="3562" fg:w="1"/><text x="90.3588%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="90.1341%" y="373" width="0.0253%" height="15" fill="rgb(222,163,29)" fg:x="3563" fg:w="1"/><text x="90.3841%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="90.1341%" y="357" width="0.0253%" height="15" fill="rgb(227,201,8)" fg:x="3563" fg:w="1"/><text x="90.3841%" y="367.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="90.1341%" y="341" width="0.0253%" height="15" fill="rgb(233,9,32)" fg:x="3563" fg:w="1"/><text x="90.3841%" y="351.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="90.1594%" y="373" width="0.0253%" height="15" fill="rgb(217,54,24)" fg:x="3564" fg:w="1"/><text x="90.4094%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="90.1847%" y="373" width="0.0253%" height="15" fill="rgb(235,192,0)" fg:x="3565" fg:w="1"/><text x="90.4347%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (7 samples, 0.18%)</title><rect x="90.2100%" y="373" width="0.1771%" height="15" fill="rgb(235,45,9)" fg:x="3566" fg:w="7"/><text x="90.4600%" y="383.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (2 samples, 0.05%)</title><rect x="90.3870%" y="357" width="0.0506%" height="15" fill="rgb(246,42,40)" fg:x="3573" fg:w="2"/><text x="90.6370%" y="367.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (3 samples, 0.08%)</title><rect x="90.3870%" y="373" width="0.0759%" height="15" fill="rgb(248,111,24)" fg:x="3573" fg:w="3"/><text x="90.6370%" y="383.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (1 samples, 0.03%)</title><rect x="90.4376%" y="357" width="0.0253%" height="15" fill="rgb(249,65,22)" fg:x="3575" fg:w="1"/><text x="90.6876%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (3 samples, 0.08%)</title><rect x="90.7918%" y="341" width="0.0759%" height="15" fill="rgb(238,111,51)" fg:x="3589" fg:w="3"/><text x="91.0418%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (4 samples, 0.10%)</title><rect x="90.8677%" y="341" width="0.1012%" height="15" fill="rgb(250,118,22)" fg:x="3592" fg:w="4"/><text x="91.1177%" y="351.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="90.9689%" y="341" width="0.0253%" height="15" fill="rgb(234,84,26)" fg:x="3596" fg:w="1"/><text x="91.2189%" y="351.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (3 samples, 0.08%)</title><rect x="90.9942%" y="341" width="0.0759%" height="15" fill="rgb(243,172,12)" fg:x="3597" fg:w="3"/><text x="91.2442%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (22 samples, 0.56%)</title><rect x="90.5388%" y="357" width="0.5565%" height="15" fill="rgb(236,150,49)" fg:x="3579" fg:w="22"/><text x="90.7888%" y="367.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (1 samples, 0.03%)</title><rect x="91.0701%" y="341" width="0.0253%" height="15" fill="rgb(225,197,26)" fg:x="3600" fg:w="1"/><text x="91.3201%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (2 samples, 0.05%)</title><rect x="91.0954%" y="341" width="0.0506%" height="15" fill="rgb(214,17,42)" fg:x="3601" fg:w="2"/><text x="91.3454%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (3 samples, 0.08%)</title><rect x="91.1460%" y="341" width="0.0759%" height="15" fill="rgb(224,165,40)" fg:x="3603" fg:w="3"/><text x="91.3960%" y="351.50"></text></g><g><title>core::core_arch::simd::u64x4::splat (1 samples, 0.03%)</title><rect x="91.1966%" y="325" width="0.0253%" height="15" fill="rgb(246,100,4)" fg:x="3605" fg:w="1"/><text x="91.4466%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (1 samples, 0.03%)</title><rect x="91.2219%" y="341" width="0.0253%" height="15" fill="rgb(222,103,0)" fg:x="3606" fg:w="1"/><text x="91.4719%" y="351.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="91.2472%" y="341" width="0.0253%" height="15" fill="rgb(227,189,26)" fg:x="3607" fg:w="1"/><text x="91.4972%" y="351.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="91.2472%" y="325" width="0.0253%" height="15" fill="rgb(214,202,17)" fg:x="3607" fg:w="1"/><text x="91.4972%" y="335.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="91.2472%" y="309" width="0.0253%" height="15" fill="rgb(229,111,3)" fg:x="3607" fg:w="1"/><text x="91.4972%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (10 samples, 0.25%)</title><rect x="91.0954%" y="357" width="0.2530%" height="15" fill="rgb(229,172,15)" fg:x="3601" fg:w="10"/><text x="91.3454%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (3 samples, 0.08%)</title><rect x="91.2725%" y="341" width="0.0759%" height="15" fill="rgb(230,224,35)" fg:x="3608" fg:w="3"/><text x="91.5225%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (23 samples, 0.58%)</title><rect x="91.3483%" y="357" width="0.5818%" height="15" fill="rgb(251,141,6)" fg:x="3611" fg:w="23"/><text x="91.5983%" y="367.50"></text></g><g><title>core::core_arch::simd::u64x4::splat (3 samples, 0.08%)</title><rect x="91.8543%" y="341" width="0.0759%" height="15" fill="rgb(225,208,6)" fg:x="3631" fg:w="3"/><text x="92.1043%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (1 samples, 0.03%)</title><rect x="91.9302%" y="357" width="0.0253%" height="15" fill="rgb(246,181,16)" fg:x="3634" fg:w="1"/><text x="92.1802%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (2 samples, 0.05%)</title><rect x="91.9555%" y="357" width="0.0506%" height="15" fill="rgb(227,129,36)" fg:x="3635" fg:w="2"/><text x="92.2055%" y="367.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (2 samples, 0.05%)</title><rect x="91.9555%" y="341" width="0.0506%" height="15" fill="rgb(248,117,24)" fg:x="3635" fg:w="2"/><text x="92.2055%" y="351.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (2 samples, 0.05%)</title><rect x="91.9555%" y="325" width="0.0506%" height="15" fill="rgb(214,185,35)" fg:x="3635" fg:w="2"/><text x="92.2055%" y="335.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (2 samples, 0.05%)</title><rect x="91.9555%" y="309" width="0.0506%" height="15" fill="rgb(236,150,34)" fg:x="3635" fg:w="2"/><text x="92.2055%" y="319.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi64x (2 samples, 0.05%)</title><rect x="92.0061%" y="357" width="0.0506%" height="15" fill="rgb(243,228,27)" fg:x="3637" fg:w="2"/><text x="92.2561%" y="367.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi64x (1 samples, 0.03%)</title><rect x="92.0314%" y="341" width="0.0253%" height="15" fill="rgb(245,77,44)" fg:x="3638" fg:w="1"/><text x="92.2814%" y="351.50"></text></g><g><title>core::core_arch::simd::i64x4::new (1 samples, 0.03%)</title><rect x="92.0314%" y="325" width="0.0253%" height="15" fill="rgb(235,214,42)" fg:x="3638" fg:w="1"/><text x="92.2814%" y="335.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (8 samples, 0.20%)</title><rect x="92.0567%" y="357" width="0.2024%" height="15" fill="rgb(221,74,3)" fg:x="3639" fg:w="8"/><text x="92.3067%" y="367.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (8 samples, 0.20%)</title><rect x="92.0567%" y="341" width="0.2024%" height="15" fill="rgb(206,121,29)" fg:x="3639" fg:w="8"/><text x="92.3067%" y="351.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (8 samples, 0.20%)</title><rect x="92.0567%" y="325" width="0.2024%" height="15" fill="rgb(249,131,53)" fg:x="3639" fg:w="8"/><text x="92.3067%" y="335.50"></text></g><g><title>core::core_arch::simd::i8x32::new (1 samples, 0.03%)</title><rect x="92.2337%" y="309" width="0.0253%" height="15" fill="rgb(236,170,29)" fg:x="3646" fg:w="1"/><text x="92.4837%" y="319.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (5 samples, 0.13%)</title><rect x="92.2590%" y="357" width="0.1265%" height="15" fill="rgb(247,96,15)" fg:x="3647" fg:w="5"/><text x="92.5090%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (2 samples, 0.05%)</title><rect x="92.3855%" y="357" width="0.0506%" height="15" fill="rgb(211,210,7)" fg:x="3652" fg:w="2"/><text x="92.6355%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (10 samples, 0.25%)</title><rect x="92.4361%" y="357" width="0.2530%" height="15" fill="rgb(240,88,50)" fg:x="3654" fg:w="10"/><text x="92.6861%" y="367.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (4 samples, 0.10%)</title><rect x="92.6891%" y="357" width="0.1012%" height="15" fill="rgb(209,229,26)" fg:x="3664" fg:w="4"/><text x="92.9391%" y="367.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (4 samples, 0.10%)</title><rect x="92.6891%" y="341" width="0.1012%" height="15" fill="rgb(210,68,23)" fg:x="3664" fg:w="4"/><text x="92.9391%" y="351.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (345 samples, 8.73%)</title><rect x="84.1639%" y="405" width="8.7275%" height="15" fill="rgb(229,180,13)" fg:x="3327" fg:w="345"/><text x="84.4139%" y="415.50">poly1305::ba..</text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (124 samples, 3.14%)</title><rect x="89.7546%" y="389" width="3.1369%" height="15" fill="rgb(236,53,44)" fg:x="3548" fg:w="124"/><text x="90.0046%" y="399.50">pol..</text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (96 samples, 2.43%)</title><rect x="90.4629%" y="373" width="2.4285%" height="15" fill="rgb(244,214,29)" fg:x="3576" fg:w="96"/><text x="90.7129%" y="383.50">po..</text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (4 samples, 0.10%)</title><rect x="92.7903%" y="357" width="0.1012%" height="15" fill="rgb(220,75,29)" fg:x="3668" fg:w="4"/><text x="93.0403%" y="367.50"></text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_loaded_blocks (1 samples, 0.03%)</title><rect x="92.8915%" y="405" width="0.0253%" height="15" fill="rgb(214,183,37)" fg:x="3672" fg:w="1"/><text x="93.1415%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="92.9168%" y="389" width="0.0253%" height="15" fill="rgb(239,117,29)" fg:x="3673" fg:w="1"/><text x="93.1668%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.03%)</title><rect x="92.9421%" y="389" width="0.0253%" height="15" fill="rgb(237,171,35)" fg:x="3674" fg:w="1"/><text x="93.1921%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="92.9674%" y="389" width="0.0253%" height="15" fill="rgb(229,178,53)" fg:x="3675" fg:w="1"/><text x="93.2174%" y="399.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (2 samples, 0.05%)</title><rect x="92.9927%" y="389" width="0.0506%" height="15" fill="rgb(210,102,19)" fg:x="3676" fg:w="2"/><text x="93.2427%" y="399.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (2 samples, 0.05%)</title><rect x="92.9927%" y="373" width="0.0506%" height="15" fill="rgb(235,127,22)" fg:x="3676" fg:w="2"/><text x="93.2427%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (3 samples, 0.08%)</title><rect x="93.0433%" y="373" width="0.0759%" height="15" fill="rgb(244,31,31)" fg:x="3678" fg:w="3"/><text x="93.2933%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.03%)</title><rect x="93.2709%" y="357" width="0.0253%" height="15" fill="rgb(231,43,21)" fg:x="3687" fg:w="1"/><text x="93.5209%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.03%)</title><rect x="93.2962%" y="357" width="0.0253%" height="15" fill="rgb(217,131,35)" fg:x="3688" fg:w="1"/><text x="93.5462%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.05%)</title><rect x="93.3215%" y="357" width="0.0506%" height="15" fill="rgb(221,149,4)" fg:x="3689" fg:w="2"/><text x="93.5715%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (11 samples, 0.28%)</title><rect x="93.1192%" y="373" width="0.2783%" height="15" fill="rgb(232,170,28)" fg:x="3681" fg:w="11"/><text x="93.3692%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.03%)</title><rect x="93.3721%" y="357" width="0.0253%" height="15" fill="rgb(238,56,10)" fg:x="3691" fg:w="1"/><text x="93.6221%" y="367.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (1 samples, 0.03%)</title><rect x="93.3974%" y="357" width="0.0253%" height="15" fill="rgb(235,196,14)" fg:x="3692" fg:w="1"/><text x="93.6474%" y="367.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi32 (1 samples, 0.03%)</title><rect x="93.3974%" y="341" width="0.0253%" height="15" fill="rgb(216,45,48)" fg:x="3692" fg:w="1"/><text x="93.6474%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (2 samples, 0.05%)</title><rect x="93.3974%" y="373" width="0.0506%" height="15" fill="rgb(238,213,17)" fg:x="3692" fg:w="2"/><text x="93.6474%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="93.4227%" y="357" width="0.0253%" height="15" fill="rgb(212,13,2)" fg:x="3693" fg:w="1"/><text x="93.6727%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (4 samples, 0.10%)</title><rect x="93.4480%" y="357" width="0.1012%" height="15" fill="rgb(240,114,20)" fg:x="3694" fg:w="4"/><text x="93.6980%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (2 samples, 0.05%)</title><rect x="93.5492%" y="357" width="0.0506%" height="15" fill="rgb(228,41,40)" fg:x="3698" fg:w="2"/><text x="93.7992%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (2 samples, 0.05%)</title><rect x="93.5998%" y="357" width="0.0506%" height="15" fill="rgb(244,132,35)" fg:x="3700" fg:w="2"/><text x="93.8498%" y="367.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (1 samples, 0.03%)</title><rect x="93.6504%" y="357" width="0.0253%" height="15" fill="rgb(253,189,4)" fg:x="3702" fg:w="1"/><text x="93.9004%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (3 samples, 0.08%)</title><rect x="93.6757%" y="357" width="0.0759%" height="15" fill="rgb(224,37,19)" fg:x="3703" fg:w="3"/><text x="93.9257%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (2 samples, 0.05%)</title><rect x="93.7516%" y="357" width="0.0506%" height="15" fill="rgb(235,223,18)" fg:x="3706" fg:w="2"/><text x="94.0016%" y="367.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (4 samples, 0.10%)</title><rect x="93.8022%" y="357" width="0.1012%" height="15" fill="rgb(235,163,25)" fg:x="3708" fg:w="4"/><text x="94.0522%" y="367.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (4 samples, 0.10%)</title><rect x="93.8022%" y="341" width="0.1012%" height="15" fill="rgb(217,145,28)" fg:x="3708" fg:w="4"/><text x="94.0522%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (24 samples, 0.61%)</title><rect x="93.4480%" y="373" width="0.6071%" height="15" fill="rgb(223,223,32)" fg:x="3694" fg:w="24"/><text x="93.6980%" y="383.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (6 samples, 0.15%)</title><rect x="93.9034%" y="357" width="0.1518%" height="15" fill="rgb(227,189,39)" fg:x="3712" fg:w="6"/><text x="94.1534%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi64 (1 samples, 0.03%)</title><rect x="94.0551%" y="373" width="0.0253%" height="15" fill="rgb(248,10,22)" fg:x="3718" fg:w="1"/><text x="94.3051%" y="383.50"></text></g><g><title>poly1305::backend::avx2::helpers::SpacedMultiplier4x130::new (1 samples, 0.03%)</title><rect x="94.0551%" y="357" width="0.0253%" height="15" fill="rgb(248,46,39)" fg:x="3718" fg:w="1"/><text x="94.3051%" y="367.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced130::reduce (1 samples, 0.03%)</title><rect x="94.0551%" y="341" width="0.0253%" height="15" fill="rgb(248,113,48)" fg:x="3718" fg:w="1"/><text x="94.3051%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (7 samples, 0.18%)</title><rect x="94.0804%" y="373" width="0.1771%" height="15" fill="rgb(245,16,25)" fg:x="3719" fg:w="7"/><text x="94.3304%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi64x (1 samples, 0.03%)</title><rect x="94.2575%" y="357" width="0.0253%" height="15" fill="rgb(249,152,16)" fg:x="3726" fg:w="1"/><text x="94.5075%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_unpackhi_epi64 (2 samples, 0.05%)</title><rect x="94.2575%" y="373" width="0.0506%" height="15" fill="rgb(250,16,1)" fg:x="3726" fg:w="2"/><text x="94.5075%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.03%)</title><rect x="94.2828%" y="357" width="0.0253%" height="15" fill="rgb(249,138,3)" fg:x="3727" fg:w="1"/><text x="94.5328%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_unpacklo_epi64 (1 samples, 0.03%)</title><rect x="94.3081%" y="373" width="0.0253%" height="15" fill="rgb(227,71,41)" fg:x="3728" fg:w="1"/><text x="94.5581%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="94.3081%" y="357" width="0.0253%" height="15" fill="rgb(209,184,23)" fg:x="3728" fg:w="1"/><text x="94.5581%" y="367.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.03%)</title><rect x="94.3334%" y="373" width="0.0253%" height="15" fill="rgb(223,215,31)" fg:x="3729" fg:w="1"/><text x="94.5834%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi64x (1 samples, 0.03%)</title><rect x="94.3334%" y="357" width="0.0253%" height="15" fill="rgb(210,146,28)" fg:x="3729" fg:w="1"/><text x="94.5834%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (6 samples, 0.15%)</title><rect x="94.3587%" y="373" width="0.1518%" height="15" fill="rgb(209,183,41)" fg:x="3730" fg:w="6"/><text x="94.6087%" y="383.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (5 samples, 0.13%)</title><rect x="94.5105%" y="373" width="0.1265%" height="15" fill="rgb(209,224,45)" fg:x="3736" fg:w="5"/><text x="94.7605%" y="383.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (5 samples, 0.13%)</title><rect x="94.5105%" y="357" width="0.1265%" height="15" fill="rgb(224,209,51)" fg:x="3736" fg:w="5"/><text x="94.7605%" y="367.50"></text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_loaded_blocks (71 samples, 1.80%)</title><rect x="93.0433%" y="389" width="1.7961%" height="15" fill="rgb(223,17,39)" fg:x="3678" fg:w="71"/><text x="93.2933%" y="399.50">p..</text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (8 samples, 0.20%)</title><rect x="94.6370%" y="373" width="0.2024%" height="15" fill="rgb(234,204,37)" fg:x="3741" fg:w="8"/><text x="94.8870%" y="383.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::encrypt_in_place_detached (947 samples, 23.96%)</title><rect x="71.0094%" y="533" width="23.9565%" height="15" fill="rgb(236,120,5)" fg:x="2807" fg:w="947"/><text x="71.2594%" y="543.50">chacha20poly1305::cipher::Cipher&lt;C&gt;::e..</text></g><g><title>universal_hash::UniversalHash::update_padded (461 samples, 11.66%)</title><rect x="83.3038%" y="517" width="11.6620%" height="15" fill="rgb(248,97,27)" fg:x="3293" fg:w="461"/><text x="83.5538%" y="527.50">universal_hash::U..</text></g><g><title>universal_hash::UniversalHash::update (461 samples, 11.66%)</title><rect x="83.3038%" y="501" width="11.6620%" height="15" fill="rgb(240,66,17)" fg:x="3293" fg:w="461"/><text x="83.5538%" y="511.50">universal_hash::U..</text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (461 samples, 11.66%)</title><rect x="83.3038%" y="485" width="11.6620%" height="15" fill="rgb(210,79,3)" fg:x="3293" fg:w="461"/><text x="83.5538%" y="495.50">&lt;poly1305::Poly13..</text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (461 samples, 11.66%)</title><rect x="83.3038%" y="469" width="11.6620%" height="15" fill="rgb(214,176,27)" fg:x="3293" fg:w="461"/><text x="83.5538%" y="479.50">&lt;poly1305::backen..</text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (461 samples, 11.66%)</title><rect x="83.3038%" y="453" width="11.6620%" height="15" fill="rgb(235,185,3)" fg:x="3293" fg:w="461"/><text x="83.5538%" y="463.50">&lt;universal_hash::..</text></g><g><title>&lt;poly1305::backend::avx2::State as universal_hash::UhfBackend&gt;::proc_par_blocks (459 samples, 11.61%)</title><rect x="83.3544%" y="437" width="11.6114%" height="15" fill="rgb(227,24,12)" fg:x="3295" fg:w="459"/><text x="83.6044%" y="447.50">&lt;poly1305::backen..</text></g><g><title>poly1305::backend::avx2::State::compute_par_blocks (458 samples, 11.59%)</title><rect x="83.3797%" y="421" width="11.5861%" height="15" fill="rgb(252,169,48)" fg:x="3296" fg:w="458"/><text x="83.6297%" y="431.50">poly1305::backend..</text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_par_blocks (81 samples, 2.05%)</title><rect x="92.9168%" y="405" width="2.0491%" height="15" fill="rgb(212,65,1)" fg:x="3673" fg:w="81"/><text x="93.1668%" y="415.50">p..</text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (5 samples, 0.13%)</title><rect x="94.8394%" y="389" width="0.1265%" height="15" fill="rgb(242,39,24)" fg:x="3749" fg:w="5"/><text x="95.0894%" y="399.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.03%)</title><rect x="94.9658%" y="517" width="0.0253%" height="15" fill="rgb(249,32,23)" fg:x="3754" fg:w="1"/><text x="95.2158%" y="527.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.03%)</title><rect x="94.9658%" y="501" width="0.0253%" height="15" fill="rgb(251,195,23)" fg:x="3754" fg:w="1"/><text x="95.2158%" y="511.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.03%)</title><rect x="94.9911%" y="485" width="0.0253%" height="15" fill="rgb(236,174,8)" fg:x="3755" fg:w="1"/><text x="95.2411%" y="495.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (4 samples, 0.10%)</title><rect x="95.0164%" y="485" width="0.1012%" height="15" fill="rgb(220,197,8)" fg:x="3756" fg:w="4"/><text x="95.2664%" y="495.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (4 samples, 0.10%)</title><rect x="95.0164%" y="469" width="0.1012%" height="15" fill="rgb(240,108,37)" fg:x="3756" fg:w="4"/><text x="95.2664%" y="479.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (4 samples, 0.10%)</title><rect x="95.0164%" y="453" width="0.1012%" height="15" fill="rgb(232,176,24)" fg:x="3756" fg:w="4"/><text x="95.2664%" y="463.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="95.1176%" y="485" width="0.0253%" height="15" fill="rgb(243,35,29)" fg:x="3760" fg:w="1"/><text x="95.3676%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="95.1429%" y="437" width="0.0253%" height="15" fill="rgb(210,37,18)" fg:x="3761" fg:w="1"/><text x="95.3929%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srlv_epi64 (1 samples, 0.03%)</title><rect x="95.1429%" y="421" width="0.0253%" height="15" fill="rgb(224,184,40)" fg:x="3761" fg:w="1"/><text x="95.3929%" y="431.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.05%)</title><rect x="95.1429%" y="469" width="0.0506%" height="15" fill="rgb(236,39,29)" fg:x="3761" fg:w="2"/><text x="95.3929%" y="479.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier as core::convert::From&lt;poly1305::backend::avx2::helpers::Aligned130&gt;&gt;::from (2 samples, 0.05%)</title><rect x="95.1429%" y="453" width="0.0506%" height="15" fill="rgb(232,48,39)" fg:x="3761" fg:w="2"/><text x="95.3929%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.03%)</title><rect x="95.1682%" y="437" width="0.0253%" height="15" fill="rgb(236,34,42)" fg:x="3762" fg:w="1"/><text x="95.4182%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.03%)</title><rect x="95.1935%" y="421" width="0.0253%" height="15" fill="rgb(243,106,37)" fg:x="3763" fg:w="1"/><text x="95.4435%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (2 samples, 0.05%)</title><rect x="95.1935%" y="437" width="0.0506%" height="15" fill="rgb(218,96,6)" fg:x="3763" fg:w="2"/><text x="95.4435%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="95.2188%" y="421" width="0.0253%" height="15" fill="rgb(235,130,12)" fg:x="3764" fg:w="1"/><text x="95.4688%" y="431.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier as core::ops::arith::Mul&gt;::mul (3 samples, 0.08%)</title><rect x="95.1935%" y="469" width="0.0759%" height="15" fill="rgb(231,95,0)" fg:x="3763" fg:w="3"/><text x="95.4435%" y="479.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (3 samples, 0.08%)</title><rect x="95.1935%" y="453" width="0.0759%" height="15" fill="rgb(228,12,23)" fg:x="3763" fg:w="3"/><text x="95.4435%" y="463.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (1 samples, 0.03%)</title><rect x="95.2441%" y="437" width="0.0253%" height="15" fill="rgb(216,12,1)" fg:x="3765" fg:w="1"/><text x="95.4941%" y="447.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi32 (1 samples, 0.03%)</title><rect x="95.2441%" y="421" width="0.0253%" height="15" fill="rgb(219,59,3)" fg:x="3765" fg:w="1"/><text x="95.4941%" y="431.50"></text></g><g><title>core::core_arch::simd::i32x8::new (1 samples, 0.03%)</title><rect x="95.2441%" y="405" width="0.0253%" height="15" fill="rgb(215,208,46)" fg:x="3765" fg:w="1"/><text x="95.4941%" y="415.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_castsi256_si128 (1 samples, 0.03%)</title><rect x="95.2694%" y="469" width="0.0253%" height="15" fill="rgb(254,224,29)" fg:x="3766" fg:w="1"/><text x="95.5194%" y="479.50"></text></g><g><title>poly1305::backend::avx2::helpers::adc (1 samples, 0.03%)</title><rect x="95.2947%" y="453" width="0.0253%" height="15" fill="rgb(232,14,29)" fg:x="3767" fg:w="1"/><text x="95.5447%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.03%)</title><rect x="95.2947%" y="437" width="0.0253%" height="15" fill="rgb(208,45,52)" fg:x="3767" fg:w="1"/><text x="95.5447%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.03%)</title><rect x="95.2947%" y="421" width="0.0253%" height="15" fill="rgb(234,191,28)" fg:x="3767" fg:w="1"/><text x="95.5447%" y="431.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier as core::ops::arith::Mul&gt;::mul (1 samples, 0.03%)</title><rect x="95.3200%" y="437" width="0.0253%" height="15" fill="rgb(244,67,43)" fg:x="3768" fg:w="1"/><text x="95.5700%" y="447.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (1 samples, 0.03%)</title><rect x="95.3200%" y="421" width="0.0253%" height="15" fill="rgb(236,189,24)" fg:x="3768" fg:w="1"/><text x="95.5700%" y="431.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced130::reduce (3 samples, 0.08%)</title><rect x="95.2947%" y="469" width="0.0759%" height="15" fill="rgb(239,214,33)" fg:x="3767" fg:w="3"/><text x="95.5447%" y="479.50"></text></g><g><title>poly1305::backend::avx2::helpers::red (2 samples, 0.05%)</title><rect x="95.3200%" y="453" width="0.0506%" height="15" fill="rgb(226,176,41)" fg:x="3768" fg:w="2"/><text x="95.5700%" y="463.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="95.3453%" y="437" width="0.0253%" height="15" fill="rgb(248,47,8)" fg:x="3769" fg:w="1"/><text x="95.5953%" y="447.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="95.3453%" y="421" width="0.0253%" height="15" fill="rgb(218,81,44)" fg:x="3769" fg:w="1"/><text x="95.5953%" y="431.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="95.3453%" y="405" width="0.0253%" height="15" fill="rgb(213,98,6)" fg:x="3769" fg:w="1"/><text x="95.5953%" y="415.50"></text></g><g><title>&lt;poly1305::Poly1305 as crypto_common::KeyInit&gt;::new (16 samples, 0.40%)</title><rect x="94.9911%" y="517" width="0.4048%" height="15" fill="rgb(222,85,22)" fg:x="3755" fg:w="16"/><text x="95.2411%" y="527.50"></text></g><g><title>poly1305::backend::autodetect::State::new (16 samples, 0.40%)</title><rect x="94.9911%" y="501" width="0.4048%" height="15" fill="rgb(239,46,39)" fg:x="3755" fg:w="16"/><text x="95.2411%" y="511.50"></text></g><g><title>poly1305::backend::avx2::State::new (10 samples, 0.25%)</title><rect x="95.1429%" y="485" width="0.2530%" height="15" fill="rgb(237,12,29)" fg:x="3761" fg:w="10"/><text x="95.3929%" y="495.50"></text></g><g><title>poly1305::backend::avx2::helpers::prepare_keys (1 samples, 0.03%)</title><rect x="95.3706%" y="469" width="0.0253%" height="15" fill="rgb(214,77,8)" fg:x="3770" fg:w="1"/><text x="95.6206%" y="479.50"></text></g><g><title>poly1305::backend::avx2::helpers::Aligned130::new (1 samples, 0.03%)</title><rect x="95.3706%" y="453" width="0.0253%" height="15" fill="rgb(217,168,37)" fg:x="3770" fg:w="1"/><text x="95.6206%" y="463.50"></text></g><g><title>chacha20::backends::avx2::inner (1 samples, 0.03%)</title><rect x="95.3706%" y="437" width="0.0253%" height="15" fill="rgb(221,217,23)" fg:x="3770" fg:w="1"/><text x="95.6206%" y="447.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (1 samples, 0.03%)</title><rect x="95.3959%" y="469" width="0.0253%" height="15" fill="rgb(243,229,36)" fg:x="3771" fg:w="1"/><text x="95.6459%" y="479.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (1 samples, 0.03%)</title><rect x="95.3959%" y="453" width="0.0253%" height="15" fill="rgb(251,163,40)" fg:x="3771" fg:w="1"/><text x="95.6459%" y="463.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (1 samples, 0.03%)</title><rect x="95.3959%" y="437" width="0.0253%" height="15" fill="rgb(237,222,12)" fg:x="3771" fg:w="1"/><text x="95.6459%" y="447.50"></text></g><g><title>chacha20::backends::avx2::inner (1 samples, 0.03%)</title><rect x="95.3959%" y="421" width="0.0253%" height="15" fill="rgb(248,132,6)" fg:x="3771" fg:w="1"/><text x="95.6459%" y="431.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (1 samples, 0.03%)</title><rect x="95.3959%" y="405" width="0.0253%" height="15" fill="rgb(227,167,50)" fg:x="3771" fg:w="1"/><text x="95.6459%" y="415.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.03%)</title><rect x="95.3959%" y="389" width="0.0253%" height="15" fill="rgb(242,84,37)" fg:x="3771" fg:w="1"/><text x="95.6459%" y="399.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.03%)</title><rect x="95.3959%" y="373" width="0.0253%" height="15" fill="rgb(212,4,50)" fg:x="3771" fg:w="1"/><text x="95.6459%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.03%)</title><rect x="95.3959%" y="357" width="0.0253%" height="15" fill="rgb(230,228,32)" fg:x="3771" fg:w="1"/><text x="95.6459%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="95.3959%" y="341" width="0.0253%" height="15" fill="rgb(248,217,23)" fg:x="3771" fg:w="1"/><text x="95.6459%" y="351.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="95.3959%" y="325" width="0.0253%" height="15" fill="rgb(238,197,32)" fg:x="3771" fg:w="1"/><text x="95.6459%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.03%)</title><rect x="95.3959%" y="309" width="0.0253%" height="15" fill="rgb(236,106,1)" fg:x="3771" fg:w="1"/><text x="95.6459%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.03%)</title><rect x="95.3959%" y="293" width="0.0253%" height="15" fill="rgb(219,228,13)" fg:x="3771" fg:w="1"/><text x="95.6459%" y="303.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (1 samples, 0.03%)</title><rect x="95.3959%" y="277" width="0.0253%" height="15" fill="rgb(238,30,35)" fg:x="3771" fg:w="1"/><text x="95.6459%" y="287.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (1 samples, 0.03%)</title><rect x="95.3959%" y="261" width="0.0253%" height="15" fill="rgb(236,70,23)" fg:x="3771" fg:w="1"/><text x="95.6459%" y="271.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="95.4212%" y="357" width="0.0253%" height="15" fill="rgb(249,104,48)" fg:x="3772" fg:w="1"/><text x="95.6712%" y="367.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.03%)</title><rect x="95.5224%" y="309" width="0.0253%" height="15" fill="rgb(254,117,50)" fg:x="3776" fg:w="1"/><text x="95.7724%" y="319.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.10%)</title><rect x="95.4718%" y="325" width="0.1012%" height="15" fill="rgb(223,152,4)" fg:x="3774" fg:w="4"/><text x="95.7218%" y="335.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (1 samples, 0.03%)</title><rect x="95.5477%" y="309" width="0.0253%" height="15" fill="rgb(245,6,2)" fg:x="3777" fg:w="1"/><text x="95.7977%" y="319.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (11 samples, 0.28%)</title><rect x="95.5730%" y="325" width="0.2783%" height="15" fill="rgb(249,150,24)" fg:x="3778" fg:w="11"/><text x="95.8230%" y="335.50"></text></g><g><title>chacha20::backends::avx2::inner (1 samples, 0.03%)</title><rect x="95.8513%" y="325" width="0.0253%" height="15" fill="rgb(228,185,42)" fg:x="3789" fg:w="1"/><text x="96.1013%" y="335.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (1 samples, 0.03%)</title><rect x="95.8765%" y="325" width="0.0253%" height="15" fill="rgb(226,39,33)" fg:x="3790" fg:w="1"/><text x="96.1265%" y="335.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (3 samples, 0.08%)</title><rect x="95.9777%" y="309" width="0.0759%" height="15" fill="rgb(221,166,19)" fg:x="3794" fg:w="3"/><text x="96.2277%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="96.0536%" y="309" width="0.0253%" height="15" fill="rgb(209,109,2)" fg:x="3797" fg:w="1"/><text x="96.3036%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.03%)</title><rect x="96.0789%" y="309" width="0.0253%" height="15" fill="rgb(252,216,26)" fg:x="3798" fg:w="1"/><text x="96.3289%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.03%)</title><rect x="96.1042%" y="309" width="0.0253%" height="15" fill="rgb(227,173,36)" fg:x="3799" fg:w="1"/><text x="96.3542%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (10 samples, 0.25%)</title><rect x="95.9018%" y="325" width="0.2530%" height="15" fill="rgb(209,90,7)" fg:x="3791" fg:w="10"/><text x="96.1518%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="96.1295%" y="309" width="0.0253%" height="15" fill="rgb(250,194,11)" fg:x="3800" fg:w="1"/><text x="96.3795%" y="319.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="96.1295%" y="293" width="0.0253%" height="15" fill="rgb(220,72,50)" fg:x="3800" fg:w="1"/><text x="96.3795%" y="303.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="96.1295%" y="277" width="0.0253%" height="15" fill="rgb(222,106,48)" fg:x="3800" fg:w="1"/><text x="96.3795%" y="287.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="96.1295%" y="261" width="0.0253%" height="15" fill="rgb(216,220,45)" fg:x="3800" fg:w="1"/><text x="96.3795%" y="271.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.03%)</title><rect x="96.1295%" y="245" width="0.0253%" height="15" fill="rgb(234,112,18)" fg:x="3800" fg:w="1"/><text x="96.3795%" y="255.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.03%)</title><rect x="96.1295%" y="229" width="0.0253%" height="15" fill="rgb(206,179,9)" fg:x="3800" fg:w="1"/><text x="96.3795%" y="239.50"></text></g><g><title>tick_sched_timer (1 samples, 0.03%)</title><rect x="96.1295%" y="213" width="0.0253%" height="15" fill="rgb(215,115,40)" fg:x="3800" fg:w="1"/><text x="96.3795%" y="223.50"></text></g><g><title>tick_sched_handle (1 samples, 0.03%)</title><rect x="96.1295%" y="197" width="0.0253%" height="15" fill="rgb(222,69,34)" fg:x="3800" fg:w="1"/><text x="96.3795%" y="207.50"></text></g><g><title>update_process_times (1 samples, 0.03%)</title><rect x="96.1295%" y="181" width="0.0253%" height="15" fill="rgb(209,161,10)" fg:x="3800" fg:w="1"/><text x="96.3795%" y="191.50"></text></g><g><title>scheduler_tick (1 samples, 0.03%)</title><rect x="96.1295%" y="165" width="0.0253%" height="15" fill="rgb(217,6,38)" fg:x="3800" fg:w="1"/><text x="96.3795%" y="175.50"></text></g><g><title>update_rq_clock (1 samples, 0.03%)</title><rect x="96.1295%" y="149" width="0.0253%" height="15" fill="rgb(229,229,48)" fg:x="3800" fg:w="1"/><text x="96.3795%" y="159.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.03%)</title><rect x="96.1295%" y="133" width="0.0253%" height="15" fill="rgb(225,21,28)" fg:x="3800" fg:w="1"/><text x="96.3795%" y="143.50"></text></g><g><title>native_sched_clock (1 samples, 0.03%)</title><rect x="96.1295%" y="117" width="0.0253%" height="15" fill="rgb(206,33,13)" fg:x="3800" fg:w="1"/><text x="96.3795%" y="127.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_broadcastsi128_si256 (1 samples, 0.03%)</title><rect x="96.1548%" y="325" width="0.0253%" height="15" fill="rgb(242,178,17)" fg:x="3801" fg:w="1"/><text x="96.4048%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.03%)</title><rect x="96.1801%" y="325" width="0.0253%" height="15" fill="rgb(220,162,5)" fg:x="3802" fg:w="1"/><text x="96.4301%" y="335.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="96.2307%" y="309" width="0.0253%" height="15" fill="rgb(210,33,43)" fg:x="3804" fg:w="1"/><text x="96.4807%" y="319.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="96.2560%" y="309" width="0.0253%" height="15" fill="rgb(216,116,54)" fg:x="3805" fg:w="1"/><text x="96.5060%" y="319.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="96.2813%" y="309" width="0.0253%" height="15" fill="rgb(249,92,24)" fg:x="3806" fg:w="1"/><text x="96.5313%" y="319.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="96.3066%" y="309" width="0.0253%" height="15" fill="rgb(231,189,14)" fg:x="3807" fg:w="1"/><text x="96.5566%" y="319.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.03%)</title><rect x="96.3066%" y="293" width="0.0253%" height="15" fill="rgb(230,8,41)" fg:x="3807" fg:w="1"/><text x="96.5566%" y="303.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (6 samples, 0.15%)</title><rect x="96.2054%" y="325" width="0.1518%" height="15" fill="rgb(249,7,27)" fg:x="3803" fg:w="6"/><text x="96.4554%" y="335.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (1 samples, 0.03%)</title><rect x="96.3319%" y="309" width="0.0253%" height="15" fill="rgb(232,86,5)" fg:x="3808" fg:w="1"/><text x="96.5819%" y="319.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="96.3319%" y="293" width="0.0253%" height="15" fill="rgb(224,175,18)" fg:x="3808" fg:w="1"/><text x="96.5819%" y="303.50"></text></g><g><title>chacha20::backends::avx2::rounds (1 samples, 0.03%)</title><rect x="96.3825%" y="309" width="0.0253%" height="15" fill="rgb(220,129,12)" fg:x="3810" fg:w="1"/><text x="96.6325%" y="319.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (2 samples, 0.05%)</title><rect x="96.4078%" y="309" width="0.0506%" height="15" fill="rgb(210,19,36)" fg:x="3811" fg:w="2"/><text x="96.6578%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (5 samples, 0.13%)</title><rect x="96.3572%" y="325" width="0.1265%" height="15" fill="rgb(219,96,14)" fg:x="3809" fg:w="5"/><text x="96.6072%" y="335.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.03%)</title><rect x="96.4584%" y="309" width="0.0253%" height="15" fill="rgb(249,106,1)" fg:x="3813" fg:w="1"/><text x="96.7084%" y="319.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi64x (1 samples, 0.03%)</title><rect x="96.4584%" y="293" width="0.0253%" height="15" fill="rgb(249,155,20)" fg:x="3813" fg:w="1"/><text x="96.7084%" y="303.50"></text></g><g><title>core::core_arch::simd::i64x4::new (1 samples, 0.03%)</title><rect x="96.4584%" y="277" width="0.0253%" height="15" fill="rgb(244,168,9)" fg:x="3813" fg:w="1"/><text x="96.7084%" y="287.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (2 samples, 0.05%)</title><rect x="96.4837%" y="325" width="0.0506%" height="15" fill="rgb(216,23,50)" fg:x="3814" fg:w="2"/><text x="96.7337%" y="335.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.03%)</title><rect x="96.5090%" y="309" width="0.0253%" height="15" fill="rgb(224,219,20)" fg:x="3815" fg:w="1"/><text x="96.7590%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (13 samples, 0.33%)</title><rect x="96.5343%" y="325" width="0.3289%" height="15" fill="rgb(222,156,15)" fg:x="3816" fg:w="13"/><text x="96.7843%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="96.8378%" y="309" width="0.0253%" height="15" fill="rgb(231,97,17)" fg:x="3828" fg:w="1"/><text x="97.0878%" y="319.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.03%)</title><rect x="96.8631%" y="325" width="0.0253%" height="15" fill="rgb(218,70,48)" fg:x="3829" fg:w="1"/><text x="97.1131%" y="335.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi64x (1 samples, 0.03%)</title><rect x="96.8631%" y="309" width="0.0253%" height="15" fill="rgb(212,196,52)" fg:x="3829" fg:w="1"/><text x="97.1131%" y="319.50"></text></g><g><title>core::core_arch::simd::i64x4::new (1 samples, 0.03%)</title><rect x="96.8631%" y="293" width="0.0253%" height="15" fill="rgb(243,203,18)" fg:x="3829" fg:w="1"/><text x="97.1131%" y="303.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="96.8884%" y="325" width="0.0253%" height="15" fill="rgb(252,125,41)" fg:x="3830" fg:w="1"/><text x="97.1384%" y="335.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="96.8884%" y="309" width="0.0253%" height="15" fill="rgb(223,180,33)" fg:x="3830" fg:w="1"/><text x="97.1384%" y="319.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="96.8884%" y="293" width="0.0253%" height="15" fill="rgb(254,159,46)" fg:x="3830" fg:w="1"/><text x="97.1384%" y="303.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (11 samples, 0.28%)</title><rect x="96.9137%" y="325" width="0.2783%" height="15" fill="rgb(254,38,10)" fg:x="3831" fg:w="11"/><text x="97.1637%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (4 samples, 0.10%)</title><rect x="97.1920%" y="325" width="0.1012%" height="15" fill="rgb(208,217,32)" fg:x="3842" fg:w="4"/><text x="97.4420%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (9 samples, 0.23%)</title><rect x="97.2932%" y="325" width="0.2277%" height="15" fill="rgb(221,120,13)" fg:x="3846" fg:w="9"/><text x="97.5432%" y="335.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (89 samples, 2.25%)</title><rect x="95.4465%" y="341" width="2.2515%" height="15" fill="rgb(246,54,52)" fg:x="3773" fg:w="89"/><text x="95.6965%" y="351.50">c..</text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (7 samples, 0.18%)</title><rect x="97.5209%" y="325" width="0.1771%" height="15" fill="rgb(242,34,25)" fg:x="3855" fg:w="7"/><text x="97.7709%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.03%)</title><rect x="97.6980%" y="325" width="0.0253%" height="15" fill="rgb(247,209,9)" fg:x="3862" fg:w="1"/><text x="97.9480%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="97.6980%" y="309" width="0.0253%" height="15" fill="rgb(228,71,26)" fg:x="3862" fg:w="1"/><text x="97.9480%" y="319.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (2 samples, 0.05%)</title><rect x="97.6980%" y="341" width="0.0506%" height="15" fill="rgb(222,145,49)" fg:x="3862" fg:w="2"/><text x="97.9480%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="97.7232%" y="325" width="0.0253%" height="15" fill="rgb(218,121,17)" fg:x="3863" fg:w="1"/><text x="97.9732%" y="335.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="97.7485%" y="325" width="0.0253%" height="15" fill="rgb(244,50,7)" fg:x="3864" fg:w="1"/><text x="97.9985%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="97.7738%" y="325" width="0.0253%" height="15" fill="rgb(246,229,37)" fg:x="3865" fg:w="1"/><text x="98.0238%" y="335.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (3 samples, 0.08%)</title><rect x="97.7485%" y="341" width="0.0759%" height="15" fill="rgb(225,18,5)" fg:x="3864" fg:w="3"/><text x="97.9985%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="97.7991%" y="325" width="0.0253%" height="15" fill="rgb(213,204,8)" fg:x="3866" fg:w="1"/><text x="98.0491%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="97.8244%" y="341" width="0.0253%" height="15" fill="rgb(238,103,6)" fg:x="3867" fg:w="1"/><text x="98.0744%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.03%)</title><rect x="97.8497%" y="341" width="0.0253%" height="15" fill="rgb(222,25,35)" fg:x="3868" fg:w="1"/><text x="98.0997%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.03%)</title><rect x="97.8750%" y="341" width="0.0253%" height="15" fill="rgb(213,203,35)" fg:x="3869" fg:w="1"/><text x="98.1250%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="97.9003%" y="341" width="0.0253%" height="15" fill="rgb(221,79,53)" fg:x="3870" fg:w="1"/><text x="98.1503%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (3 samples, 0.08%)</title><rect x="97.9256%" y="341" width="0.0759%" height="15" fill="rgb(243,200,35)" fg:x="3871" fg:w="3"/><text x="98.1756%" y="351.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.03%)</title><rect x="98.0015%" y="341" width="0.0253%" height="15" fill="rgb(248,60,25)" fg:x="3874" fg:w="1"/><text x="98.2515%" y="351.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (2 samples, 0.05%)</title><rect x="98.0268%" y="341" width="0.0506%" height="15" fill="rgb(227,53,46)" fg:x="3875" fg:w="2"/><text x="98.2768%" y="351.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (105 samples, 2.66%)</title><rect x="95.4465%" y="357" width="2.6562%" height="15" fill="rgb(216,120,32)" fg:x="3773" fg:w="105"/><text x="95.6965%" y="367.50">ch..</text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="98.0774%" y="341" width="0.0253%" height="15" fill="rgb(220,134,1)" fg:x="3877" fg:w="1"/><text x="98.3274%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="98.1027%" y="357" width="0.0253%" height="15" fill="rgb(237,168,5)" fg:x="3878" fg:w="1"/><text x="98.3527%" y="367.50"></text></g><g><title>chacha20::backends::avx2::rounds (108 samples, 2.73%)</title><rect x="95.4212%" y="373" width="2.7321%" height="15" fill="rgb(231,100,33)" fg:x="3772" fg:w="108"/><text x="95.6712%" y="383.50">ch..</text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="98.1280%" y="357" width="0.0253%" height="15" fill="rgb(236,177,47)" fg:x="3879" fg:w="1"/><text x="98.3780%" y="367.50"></text></g><g><title>chacha20::backends::avx2::inner (109 samples, 2.76%)</title><rect x="95.4212%" y="421" width="2.7574%" height="15" fill="rgb(235,7,49)" fg:x="3772" fg:w="109"/><text x="95.6712%" y="431.50">ch..</text></g><g><title>&lt;cipher::stream_core::WriteBlockCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (109 samples, 2.76%)</title><rect x="95.4212%" y="405" width="2.7574%" height="15" fill="rgb(232,119,22)" fg:x="3772" fg:w="109"/><text x="95.6712%" y="415.50">&lt;c..</text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (109 samples, 2.76%)</title><rect x="95.4212%" y="389" width="2.7574%" height="15" fill="rgb(254,73,53)" fg:x="3772" fg:w="109"/><text x="95.6712%" y="399.50">&lt;c..</text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="98.1533%" y="373" width="0.0253%" height="15" fill="rgb(251,35,20)" fg:x="3880" fg:w="1"/><text x="98.4033%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="98.1786%" y="421" width="0.0253%" height="15" fill="rgb(241,119,20)" fg:x="3881" fg:w="1"/><text x="98.4286%" y="431.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (112 samples, 2.83%)</title><rect x="95.3959%" y="517" width="2.8333%" height="15" fill="rgb(207,102,14)" fg:x="3771" fg:w="112"/><text x="95.6459%" y="527.50">ci..</text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (112 samples, 2.83%)</title><rect x="95.3959%" y="501" width="2.8333%" height="15" fill="rgb(248,201,50)" fg:x="3771" fg:w="112"/><text x="95.6459%" y="511.50">ci..</text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (112 samples, 2.83%)</title><rect x="95.3959%" y="485" width="2.8333%" height="15" fill="rgb(222,185,44)" fg:x="3771" fg:w="112"/><text x="95.6459%" y="495.50">&lt;c..</text></g><g><title>cipher::stream_core::StreamCipherCore::write_keystream_block (111 samples, 2.81%)</title><rect x="95.4212%" y="469" width="2.8080%" height="15" fill="rgb(218,107,18)" fg:x="3772" fg:w="111"/><text x="95.6712%" y="479.50">ci..</text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (111 samples, 2.81%)</title><rect x="95.4212%" y="453" width="2.8080%" height="15" fill="rgb(237,177,39)" fg:x="3772" fg:w="111"/><text x="95.6712%" y="463.50">&lt;c..</text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (111 samples, 2.81%)</title><rect x="95.4212%" y="437" width="2.8080%" height="15" fill="rgb(246,69,6)" fg:x="3772" fg:w="111"/><text x="95.6712%" y="447.50">&lt;c..</text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="98.2039%" y="421" width="0.0253%" height="15" fill="rgb(234,208,37)" fg:x="3882" fg:w="1"/><text x="98.4539%" y="431.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (130 samples, 3.29%)</title><rect x="94.9658%" y="533" width="3.2886%" height="15" fill="rgb(225,4,6)" fg:x="3754" fg:w="130"/><text x="95.2158%" y="543.50">cha..</text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.03%)</title><rect x="98.2292%" y="517" width="0.0253%" height="15" fill="rgb(233,45,0)" fg:x="3883" fg:w="1"/><text x="98.4792%" y="527.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.03%)</title><rect x="98.2292%" y="501" width="0.0253%" height="15" fill="rgb(226,136,5)" fg:x="3883" fg:w="1"/><text x="98.4792%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.03%)</title><rect x="98.2292%" y="485" width="0.0253%" height="15" fill="rgb(211,91,47)" fg:x="3883" fg:w="1"/><text x="98.4792%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="98.2292%" y="469" width="0.0253%" height="15" fill="rgb(242,88,51)" fg:x="3883" fg:w="1"/><text x="98.4792%" y="479.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="98.2292%" y="453" width="0.0253%" height="15" fill="rgb(230,91,28)" fg:x="3883" fg:w="1"/><text x="98.4792%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.03%)</title><rect x="98.2292%" y="437" width="0.0253%" height="15" fill="rgb(254,186,29)" fg:x="3883" fg:w="1"/><text x="98.4792%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.03%)</title><rect x="98.2292%" y="421" width="0.0253%" height="15" fill="rgb(238,6,4)" fg:x="3883" fg:w="1"/><text x="98.4792%" y="431.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (1 samples, 0.03%)</title><rect x="98.2292%" y="405" width="0.0253%" height="15" fill="rgb(221,151,16)" fg:x="3883" fg:w="1"/><text x="98.4792%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.03%)</title><rect x="98.2545%" y="533" width="0.0253%" height="15" fill="rgb(251,143,52)" fg:x="3884" fg:w="1"/><text x="98.5045%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.03%)</title><rect x="98.2798%" y="533" width="0.0253%" height="15" fill="rgb(206,90,15)" fg:x="3885" fg:w="1"/><text x="98.5298%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.03%)</title><rect x="98.3051%" y="533" width="0.0253%" height="15" fill="rgb(218,35,8)" fg:x="3886" fg:w="1"/><text x="98.5551%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi64 (1 samples, 0.03%)</title><rect x="98.3304%" y="533" width="0.0253%" height="15" fill="rgb(239,215,6)" fg:x="3887" fg:w="1"/><text x="98.5804%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="98.3557%" y="533" width="0.0253%" height="15" fill="rgb(245,116,39)" fg:x="3888" fg:w="1"/><text x="98.6057%" y="543.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="98.3810%" y="533" width="0.0253%" height="15" fill="rgb(242,65,28)" fg:x="3889" fg:w="1"/><text x="98.6310%" y="543.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="98.3810%" y="517" width="0.0253%" height="15" fill="rgb(252,132,53)" fg:x="3889" fg:w="1"/><text x="98.6310%" y="527.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="98.3810%" y="501" width="0.0253%" height="15" fill="rgb(224,159,50)" fg:x="3889" fg:w="1"/><text x="98.6310%" y="511.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::encrypt_in_place_detached (1,112 samples, 28.13%)</title><rect x="70.3516%" y="549" width="28.1305%" height="15" fill="rgb(224,93,4)" fg:x="2781" fg:w="1112"/><text x="70.6016%" y="559.50">&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aea..</text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (3 samples, 0.08%)</title><rect x="98.4063%" y="533" width="0.0759%" height="15" fill="rgb(208,81,34)" fg:x="3890" fg:w="3"/><text x="98.6563%" y="543.50"></text></g><g><title>&lt;tftp::client::encryption_socket::EncryptionBoundSocket&lt;S,Rng&gt; as tftp::socket::Socket&gt;::send_to (1,147 samples, 29.02%)</title><rect x="69.4915%" y="597" width="29.0159%" height="15" fill="rgb(233,92,54)" fg:x="2747" fg:w="1147"/><text x="69.7415%" y="607.50">&lt;tftp::client::encryption_socket::EncryptionBou..</text></g><g><title>tftp::encrypted_packet::EncryptedPacket::encrypt (1,113 samples, 28.16%)</title><rect x="70.3516%" y="581" width="28.1558%" height="15" fill="rgb(237,21,14)" fg:x="2781" fg:w="1113"/><text x="70.6016%" y="591.50">tftp::encrypted_packet::EncryptedPacket::encr..</text></g><g><title>tftp::encryption::Encryptor&lt;R&gt;::encrypt (1,113 samples, 28.16%)</title><rect x="70.3516%" y="565" width="28.1558%" height="15" fill="rgb(249,128,51)" fg:x="2781" fg:w="1113"/><text x="70.6016%" y="575.50">tftp::encryption::Encryptor&lt;R&gt;::encrypt</text></g><g><title>tftp::buffer::extend_from_slice (1 samples, 0.03%)</title><rect x="98.4822%" y="549" width="0.0253%" height="15" fill="rgb(223,129,24)" fg:x="3893" fg:w="1"/><text x="98.7322%" y="559.50"></text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::extend_from_slice (1 samples, 0.03%)</title><rect x="98.4822%" y="533" width="0.0253%" height="15" fill="rgb(231,168,25)" fg:x="3893" fg:w="1"/><text x="98.7322%" y="543.50"></text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::push_unchecked (1 samples, 0.03%)</title><rect x="98.4822%" y="517" width="0.0253%" height="15" fill="rgb(224,39,20)" fg:x="3893" fg:w="1"/><text x="98.7322%" y="527.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="98.4822%" y="501" width="0.0253%" height="15" fill="rgb(225,152,53)" fg:x="3893" fg:w="1"/><text x="98.7322%" y="511.50"></text></g><g><title>&lt;tftp::readers::multiple_block_reader::MultipleBlockReader&lt;R&gt; as tftp::readers::block_reader::BlockReader&gt;::free_block (1 samples, 0.03%)</title><rect x="98.5075%" y="597" width="0.0253%" height="15" fill="rgb(252,17,24)" fg:x="3894" fg:w="1"/><text x="98.7575%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="98.5075%" y="581" width="0.0253%" height="15" fill="rgb(250,114,30)" fg:x="3894" fg:w="1"/><text x="98.7575%" y="591.50"></text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::as_slice (1 samples, 0.03%)</title><rect x="98.5075%" y="565" width="0.0253%" height="15" fill="rgb(229,5,4)" fg:x="3894" fg:w="1"/><text x="98.7575%" y="575.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.03%)</title><rect x="98.5075%" y="549" width="0.0253%" height="15" fill="rgb(225,176,49)" fg:x="3894" fg:w="1"/><text x="98.7575%" y="559.50"></text></g><g><title>&lt;tftp::readers::multiple_block_reader::MultipleBlockReader&lt;R&gt; as tftp::readers::block_reader::BlockReader&gt;::next (1 samples, 0.03%)</title><rect x="98.5328%" y="597" width="0.0253%" height="15" fill="rgb(224,221,49)" fg:x="3895" fg:w="1"/><text x="98.7828%" y="607.50"></text></g><g><title>&lt;tftp::std_compat::fs::File as tftp::std_compat::io::Read&gt;::read (1 samples, 0.03%)</title><rect x="98.5328%" y="581" width="0.0253%" height="15" fill="rgb(253,169,27)" fg:x="3895" fg:w="1"/><text x="98.7828%" y="591.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (1 samples, 0.03%)</title><rect x="98.5328%" y="565" width="0.0253%" height="15" fill="rgb(211,206,16)" fg:x="3895" fg:w="1"/><text x="98.7828%" y="575.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Read&gt;::read (1 samples, 0.03%)</title><rect x="98.5328%" y="549" width="0.0253%" height="15" fill="rgb(244,87,35)" fg:x="3895" fg:w="1"/><text x="98.7828%" y="559.50"></text></g><g><title>std::sys::unix::fs::File::read (1 samples, 0.03%)</title><rect x="98.5328%" y="533" width="0.0253%" height="15" fill="rgb(246,28,10)" fg:x="3895" fg:w="1"/><text x="98.7828%" y="543.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (1 samples, 0.03%)</title><rect x="98.5328%" y="517" width="0.0253%" height="15" fill="rgb(229,12,44)" fg:x="3895" fg:w="1"/><text x="98.7828%" y="527.50"></text></g><g><title>__GI___libc_read (1 samples, 0.03%)</title><rect x="98.5328%" y="501" width="0.0253%" height="15" fill="rgb(210,145,37)" fg:x="3895" fg:w="1"/><text x="98.7828%" y="511.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="98.5328%" y="485" width="0.0253%" height="15" fill="rgb(227,112,52)" fg:x="3895" fg:w="1"/><text x="98.7828%" y="495.50"></text></g><g><title>do_syscall_64 (1 samples, 0.03%)</title><rect x="98.5328%" y="469" width="0.0253%" height="15" fill="rgb(238,155,34)" fg:x="3895" fg:w="1"/><text x="98.7828%" y="479.50"></text></g><g><title>ksys_read (1 samples, 0.03%)</title><rect x="98.5328%" y="453" width="0.0253%" height="15" fill="rgb(239,226,36)" fg:x="3895" fg:w="1"/><text x="98.7828%" y="463.50"></text></g><g><title>vfs_read (1 samples, 0.03%)</title><rect x="98.5328%" y="437" width="0.0253%" height="15" fill="rgb(230,16,23)" fg:x="3895" fg:w="1"/><text x="98.7828%" y="447.50"></text></g><g><title>filemap_read (1 samples, 0.03%)</title><rect x="98.5328%" y="421" width="0.0253%" height="15" fill="rgb(236,171,36)" fg:x="3895" fg:w="1"/><text x="98.7828%" y="431.50"></text></g><g><title>copy_page_to_iter (1 samples, 0.03%)</title><rect x="98.5328%" y="405" width="0.0253%" height="15" fill="rgb(221,22,14)" fg:x="3895" fg:w="1"/><text x="98.7828%" y="415.50"></text></g><g><title>_copy_to_iter (1 samples, 0.03%)</title><rect x="98.5328%" y="389" width="0.0253%" height="15" fill="rgb(242,43,11)" fg:x="3895" fg:w="1"/><text x="98.7828%" y="399.50"></text></g><g><title>copy_user_generic_string (1 samples, 0.03%)</title><rect x="98.5328%" y="373" width="0.0253%" height="15" fill="rgb(232,69,23)" fg:x="3895" fg:w="1"/><text x="98.7828%" y="383.50"></text></g><g><title>tftp::flow_control::RateControl::timeout_interval (1 samples, 0.03%)</title><rect x="98.5581%" y="597" width="0.0253%" height="15" fill="rgb(216,180,54)" fg:x="3896" fg:w="1"/><text x="98.8081%" y="607.50"></text></g><g><title>tftp::io::instant_callback (1 samples, 0.03%)</title><rect x="98.5834%" y="597" width="0.0253%" height="15" fill="rgb(216,5,24)" fg:x="3897" fg:w="1"/><text x="98.8334%" y="607.50"></text></g><g><title>&lt;&amp;mut [u8] as tftp::buffer::SliceMutExt&gt;::write_bytes (1 samples, 0.03%)</title><rect x="98.6339%" y="581" width="0.0253%" height="15" fill="rgb(225,89,9)" fg:x="3899" fg:w="1"/><text x="98.8839%" y="591.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.03%)</title><rect x="98.6592%" y="581" width="0.0253%" height="15" fill="rgb(243,75,33)" fg:x="3900" fg:w="1"/><text x="98.9092%" y="591.50"></text></g><g><title>tftp::packet::prepend_data_header (4 samples, 0.10%)</title><rect x="98.6087%" y="597" width="0.1012%" height="15" fill="rgb(247,141,45)" fg:x="3898" fg:w="4"/><text x="98.8587%" y="607.50"></text></g><g><title>tftp::packet::PacketType::to_bytes (1 samples, 0.03%)</title><rect x="98.6845%" y="581" width="0.0253%" height="15" fill="rgb(232,177,36)" fg:x="3901" fg:w="1"/><text x="98.9345%" y="591.50"></text></g><g><title>&lt;core::time::Duration as core::ops::arith::Sub&gt;::sub (1 samples, 0.03%)</title><rect x="98.7098%" y="581" width="0.0253%" height="15" fill="rgb(219,125,36)" fg:x="3902" fg:w="1"/><text x="98.9598%" y="591.50"></text></g><g><title>core::time::Duration::checked_sub (1 samples, 0.03%)</title><rect x="98.7098%" y="565" width="0.0253%" height="15" fill="rgb(227,94,9)" fg:x="3902" fg:w="1"/><text x="98.9598%" y="575.50"></text></g><g><title>core::time::Duration::new (1 samples, 0.03%)</title><rect x="98.7098%" y="549" width="0.0253%" height="15" fill="rgb(240,34,52)" fg:x="3902" fg:w="1"/><text x="98.9598%" y="559.50"></text></g><g><title>tftp::client::sender::send_file (1,423 samples, 36.00%)</title><rect x="62.7625%" y="613" width="35.9980%" height="15" fill="rgb(216,45,12)" fg:x="2481" fg:w="1423"/><text x="63.0125%" y="623.50">tftp::client::sender::send_file</text></g><g><title>tftp::std_compat::time::Instant::elapsed (2 samples, 0.05%)</title><rect x="98.7098%" y="597" width="0.0506%" height="15" fill="rgb(246,21,19)" fg:x="3902" fg:w="2"/><text x="98.9598%" y="607.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.03%)</title><rect x="98.7351%" y="581" width="0.0253%" height="15" fill="rgb(213,98,42)" fg:x="3903" fg:w="1"/><text x="98.9851%" y="591.50"></text></g><g><title>tftp::io::instant_callback::{{closure}} (1 samples, 0.03%)</title><rect x="98.7351%" y="565" width="0.0253%" height="15" fill="rgb(250,136,47)" fg:x="3903" fg:w="1"/><text x="98.9851%" y="575.50"></text></g><g><title>std::time::SystemTime::duration_since (1 samples, 0.03%)</title><rect x="98.7351%" y="549" width="0.0253%" height="15" fill="rgb(251,124,27)" fg:x="3903" fg:w="1"/><text x="98.9851%" y="559.50"></text></g><g><title>std::sys::unix::time::SystemTime::sub_time (1 samples, 0.03%)</title><rect x="98.7351%" y="533" width="0.0253%" height="15" fill="rgb(229,180,14)" fg:x="3903" fg:w="1"/><text x="98.9851%" y="543.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (1 samples, 0.03%)</title><rect x="98.7351%" y="517" width="0.0253%" height="15" fill="rgb(245,216,25)" fg:x="3903" fg:w="1"/><text x="98.9851%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (1 samples, 0.03%)</title><rect x="98.7351%" y="501" width="0.0253%" height="15" fill="rgb(251,43,5)" fg:x="3903" fg:w="1"/><text x="98.9851%" y="511.50"></text></g><g><title>core::cmp::PartialOrd::ge (1 samples, 0.03%)</title><rect x="98.7351%" y="485" width="0.0253%" height="15" fill="rgb(250,128,24)" fg:x="3903" fg:w="1"/><text x="98.9851%" y="495.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (1 samples, 0.03%)</title><rect x="98.7351%" y="469" width="0.0253%" height="15" fill="rgb(217,117,27)" fg:x="3903" fg:w="1"/><text x="98.9851%" y="479.50"></text></g><g><title>tftp::config::ConnectionOptions::block_size_with_encryption (1 samples, 0.03%)</title><rect x="98.7604%" y="613" width="0.0253%" height="15" fill="rgb(245,147,4)" fg:x="3904" fg:w="1"/><text x="99.0104%" y="623.50"></text></g><g><title>tftp::encryption::Encryptor&lt;R&gt;::decrypt (1 samples, 0.03%)</title><rect x="98.7857%" y="613" width="0.0253%" height="15" fill="rgb(242,201,35)" fg:x="3905" fg:w="1"/><text x="99.0357%" y="623.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (1 samples, 0.03%)</title><rect x="98.7857%" y="597" width="0.0253%" height="15" fill="rgb(218,181,1)" fg:x="3905" fg:w="1"/><text x="99.0357%" y="607.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (1 samples, 0.03%)</title><rect x="98.7857%" y="581" width="0.0253%" height="15" fill="rgb(222,6,29)" fg:x="3905" fg:w="1"/><text x="99.0357%" y="591.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (1 samples, 0.03%)</title><rect x="98.7857%" y="565" width="0.0253%" height="15" fill="rgb(208,186,3)" fg:x="3905" fg:w="1"/><text x="99.0357%" y="575.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (1 samples, 0.03%)</title><rect x="98.7857%" y="549" width="0.0253%" height="15" fill="rgb(216,36,26)" fg:x="3905" fg:w="1"/><text x="99.0357%" y="559.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (1 samples, 0.03%)</title><rect x="98.7857%" y="533" width="0.0253%" height="15" fill="rgb(248,201,23)" fg:x="3905" fg:w="1"/><text x="99.0357%" y="543.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (1 samples, 0.03%)</title><rect x="98.7857%" y="517" width="0.0253%" height="15" fill="rgb(251,170,31)" fg:x="3905" fg:w="1"/><text x="99.0357%" y="527.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (1 samples, 0.03%)</title><rect x="98.7857%" y="501" width="0.0253%" height="15" fill="rgb(207,110,25)" fg:x="3905" fg:w="1"/><text x="99.0357%" y="511.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (1 samples, 0.03%)</title><rect x="98.7857%" y="485" width="0.0253%" height="15" fill="rgb(250,54,15)" fg:x="3905" fg:w="1"/><text x="99.0357%" y="495.50"></text></g><g><title>chacha20::backends::avx2::inner (1 samples, 0.03%)</title><rect x="98.7857%" y="469" width="0.0253%" height="15" fill="rgb(227,68,33)" fg:x="3905" fg:w="1"/><text x="99.0357%" y="479.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (1 samples, 0.03%)</title><rect x="98.7857%" y="453" width="0.0253%" height="15" fill="rgb(238,34,41)" fg:x="3905" fg:w="1"/><text x="99.0357%" y="463.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.03%)</title><rect x="98.7857%" y="437" width="0.0253%" height="15" fill="rgb(220,11,15)" fg:x="3905" fg:w="1"/><text x="99.0357%" y="447.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.03%)</title><rect x="98.7857%" y="421" width="0.0253%" height="15" fill="rgb(246,111,35)" fg:x="3905" fg:w="1"/><text x="99.0357%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.03%)</title><rect x="98.7857%" y="405" width="0.0253%" height="15" fill="rgb(209,88,53)" fg:x="3905" fg:w="1"/><text x="99.0357%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="98.7857%" y="389" width="0.0253%" height="15" fill="rgb(231,185,47)" fg:x="3905" fg:w="1"/><text x="99.0357%" y="399.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="98.7857%" y="373" width="0.0253%" height="15" fill="rgb(233,154,1)" fg:x="3905" fg:w="1"/><text x="99.0357%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.03%)</title><rect x="98.7857%" y="357" width="0.0253%" height="15" fill="rgb(225,15,46)" fg:x="3905" fg:w="1"/><text x="99.0357%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.03%)</title><rect x="98.7857%" y="341" width="0.0253%" height="15" fill="rgb(211,135,41)" fg:x="3905" fg:w="1"/><text x="99.0357%" y="351.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (1 samples, 0.03%)</title><rect x="98.7857%" y="325" width="0.0253%" height="15" fill="rgb(208,54,0)" fg:x="3905" fg:w="1"/><text x="99.0357%" y="335.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (1 samples, 0.03%)</title><rect x="98.7857%" y="309" width="0.0253%" height="15" fill="rgb(244,136,14)" fg:x="3905" fg:w="1"/><text x="99.0357%" y="319.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.03%)</title><rect x="98.7857%" y="293" width="0.0253%" height="15" fill="rgb(241,56,14)" fg:x="3905" fg:w="1"/><text x="99.0357%" y="303.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.03%)</title><rect x="98.7857%" y="277" width="0.0253%" height="15" fill="rgb(205,80,24)" fg:x="3905" fg:w="1"/><text x="99.0357%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.03%)</title><rect x="98.7857%" y="261" width="0.0253%" height="15" fill="rgb(220,57,4)" fg:x="3905" fg:w="1"/><text x="99.0357%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="98.7857%" y="245" width="0.0253%" height="15" fill="rgb(226,193,50)" fg:x="3905" fg:w="1"/><text x="99.0357%" y="255.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="98.7857%" y="229" width="0.0253%" height="15" fill="rgb(231,168,22)" fg:x="3905" fg:w="1"/><text x="99.0357%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.03%)</title><rect x="98.7857%" y="213" width="0.0253%" height="15" fill="rgb(254,215,14)" fg:x="3905" fg:w="1"/><text x="99.0357%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.03%)</title><rect x="98.7857%" y="197" width="0.0253%" height="15" fill="rgb(211,115,16)" fg:x="3905" fg:w="1"/><text x="99.0357%" y="207.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (1 samples, 0.03%)</title><rect x="98.7857%" y="181" width="0.0253%" height="15" fill="rgb(236,210,16)" fg:x="3905" fg:w="1"/><text x="99.0357%" y="191.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (1 samples, 0.03%)</title><rect x="98.7857%" y="165" width="0.0253%" height="15" fill="rgb(221,94,12)" fg:x="3905" fg:w="1"/><text x="99.0357%" y="175.50"></text></g><g><title>tftp::encryption::Encryptor&lt;R&gt;::encrypt (1 samples, 0.03%)</title><rect x="98.8110%" y="613" width="0.0253%" height="15" fill="rgb(235,218,49)" fg:x="3906" fg:w="1"/><text x="99.0610%" y="623.50"></text></g><g><title>tftp::encryption::apply_bit_padding (1 samples, 0.03%)</title><rect x="98.8363%" y="613" width="0.0253%" height="15" fill="rgb(217,114,14)" fg:x="3907" fg:w="1"/><text x="99.0863%" y="623.50"></text></g><g><title>tftp::encryption::remove_bit_padding (2 samples, 0.05%)</title><rect x="98.8616%" y="613" width="0.0506%" height="15" fill="rgb(216,145,22)" fg:x="3908" fg:w="2"/><text x="99.1116%" y="623.50"></text></g><g><title>tftp::flow_control::RateControl::end_rtt (1 samples, 0.03%)</title><rect x="98.9122%" y="613" width="0.0253%" height="15" fill="rgb(217,112,39)" fg:x="3910" fg:w="1"/><text x="99.1622%" y="623.50"></text></g><g><title>[unknown] (3,374 samples, 85.35%)</title><rect x="13.6352%" y="629" width="85.3529%" height="15" fill="rgb(225,85,32)" fg:x="539" fg:w="3374"/><text x="13.8852%" y="639.50">[unknown]</text></g><g><title>universal_hash::UniversalHash::update_padded (2 samples, 0.05%)</title><rect x="98.9375%" y="613" width="0.0506%" height="15" fill="rgb(245,209,47)" fg:x="3911" fg:w="2"/><text x="99.1875%" y="623.50"></text></g><g><title>_start (1 samples, 0.03%)</title><rect x="98.9881%" y="629" width="0.0253%" height="15" fill="rgb(218,220,15)" fg:x="3913" fg:w="1"/><text x="99.2381%" y="639.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="98.9881%" y="613" width="0.0253%" height="15" fill="rgb(222,202,31)" fg:x="3913" fg:w="1"/><text x="99.2381%" y="623.50"></text></g><g><title>do_syscall_64 (1 samples, 0.03%)</title><rect x="98.9881%" y="597" width="0.0253%" height="15" fill="rgb(243,203,4)" fg:x="3913" fg:w="1"/><text x="99.2381%" y="607.50"></text></g><g><title>syscall_exit_to_user_mode (1 samples, 0.03%)</title><rect x="98.9881%" y="581" width="0.0253%" height="15" fill="rgb(237,92,17)" fg:x="3913" fg:w="1"/><text x="99.2381%" y="591.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.03%)</title><rect x="98.9881%" y="565" width="0.0253%" height="15" fill="rgb(231,119,7)" fg:x="3913" fg:w="1"/><text x="99.2381%" y="575.50"></text></g><g><title>task_work_run (1 samples, 0.03%)</title><rect x="98.9881%" y="549" width="0.0253%" height="15" fill="rgb(237,82,41)" fg:x="3913" fg:w="1"/><text x="99.2381%" y="559.50"></text></g><g><title>__fput (1 samples, 0.03%)</title><rect x="98.9881%" y="533" width="0.0253%" height="15" fill="rgb(226,81,48)" fg:x="3913" fg:w="1"/><text x="99.2381%" y="543.50"></text></g><g><title>pipe_release (1 samples, 0.03%)</title><rect x="98.9881%" y="517" width="0.0253%" height="15" fill="rgb(234,70,51)" fg:x="3913" fg:w="1"/><text x="99.2381%" y="527.50"></text></g><g><title>__slab_free (1 samples, 0.03%)</title><rect x="98.9881%" y="501" width="0.0253%" height="15" fill="rgb(251,86,4)" fg:x="3913" fg:w="1"/><text x="99.2381%" y="511.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.03%)</title><rect x="99.0134%" y="629" width="0.0253%" height="15" fill="rgb(244,144,28)" fg:x="3914" fg:w="1"/><text x="99.2634%" y="639.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="99.0387%" y="629" width="0.0253%" height="15" fill="rgb(232,161,39)" fg:x="3915" fg:w="1"/><text x="99.2887%" y="639.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="99.0387%" y="613" width="0.0253%" height="15" fill="rgb(247,34,51)" fg:x="3915" fg:w="1"/><text x="99.2887%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="99.0640%" y="629" width="0.0253%" height="15" fill="rgb(225,132,2)" fg:x="3916" fg:w="1"/><text x="99.3140%" y="639.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="99.0640%" y="613" width="0.0253%" height="15" fill="rgb(209,159,44)" fg:x="3916" fg:w="1"/><text x="99.3140%" y="623.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="99.0893%" y="629" width="0.0253%" height="15" fill="rgb(251,214,1)" fg:x="3917" fg:w="1"/><text x="99.3393%" y="639.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="99.0893%" y="613" width="0.0253%" height="15" fill="rgb(247,84,47)" fg:x="3917" fg:w="1"/><text x="99.3393%" y="623.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.03%)</title><rect x="99.1146%" y="629" width="0.0253%" height="15" fill="rgb(240,111,43)" fg:x="3918" fg:w="1"/><text x="99.3646%" y="639.50"></text></g><g><title>core::slice::raw::from_raw_parts (1 samples, 0.03%)</title><rect x="99.1399%" y="629" width="0.0253%" height="15" fill="rgb(215,214,35)" fg:x="3919" fg:w="1"/><text x="99.3899%" y="639.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.03%)</title><rect x="99.1399%" y="613" width="0.0253%" height="15" fill="rgb(248,207,23)" fg:x="3919" fg:w="1"/><text x="99.3899%" y="623.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (1 samples, 0.03%)</title><rect x="99.1399%" y="597" width="0.0253%" height="15" fill="rgb(214,186,4)" fg:x="3919" fg:w="1"/><text x="99.3899%" y="607.50"></text></g><g><title>__x64_sys_epoll_ctl (1 samples, 0.03%)</title><rect x="99.2411%" y="597" width="0.0253%" height="15" fill="rgb(220,133,22)" fg:x="3923" fg:w="1"/><text x="99.4911%" y="607.50"></text></g><g><title>do_epoll_ctl (1 samples, 0.03%)</title><rect x="99.2411%" y="581" width="0.0253%" height="15" fill="rgb(239,134,19)" fg:x="3923" fg:w="1"/><text x="99.4911%" y="591.50"></text></g><g><title>kmem_cache_alloc (1 samples, 0.03%)</title><rect x="99.2411%" y="565" width="0.0253%" height="15" fill="rgb(250,140,9)" fg:x="3923" fg:w="1"/><text x="99.4911%" y="575.50"></text></g><g><title>memcg_slab_post_alloc_hook (1 samples, 0.03%)</title><rect x="99.2411%" y="549" width="0.0253%" height="15" fill="rgb(225,59,14)" fg:x="3923" fg:w="1"/><text x="99.4911%" y="559.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.03%)</title><rect x="99.2664%" y="597" width="0.0253%" height="15" fill="rgb(214,152,51)" fg:x="3924" fg:w="1"/><text x="99.5164%" y="607.50"></text></g><g><title>do_execveat_common.isra.0 (1 samples, 0.03%)</title><rect x="99.2664%" y="581" width="0.0253%" height="15" fill="rgb(251,227,43)" fg:x="3924" fg:w="1"/><text x="99.5164%" y="591.50"></text></g><g><title>bprm_execve (1 samples, 0.03%)</title><rect x="99.2664%" y="565" width="0.0253%" height="15" fill="rgb(241,96,17)" fg:x="3924" fg:w="1"/><text x="99.5164%" y="575.50"></text></g><g><title>load_elf_binary (1 samples, 0.03%)</title><rect x="99.2664%" y="549" width="0.0253%" height="15" fill="rgb(234,198,43)" fg:x="3924" fg:w="1"/><text x="99.5164%" y="559.50"></text></g><g><title>setup_new_exec (1 samples, 0.03%)</title><rect x="99.2664%" y="533" width="0.0253%" height="15" fill="rgb(220,108,29)" fg:x="3924" fg:w="1"/><text x="99.5164%" y="543.50"></text></g><g><title>arch_pick_mmap_layout (1 samples, 0.03%)</title><rect x="99.2664%" y="517" width="0.0253%" height="15" fill="rgb(226,163,33)" fg:x="3924" fg:w="1"/><text x="99.5164%" y="527.50"></text></g><g><title>get_random_u64 (1 samples, 0.03%)</title><rect x="99.2664%" y="501" width="0.0253%" height="15" fill="rgb(205,194,45)" fg:x="3924" fg:w="1"/><text x="99.5164%" y="511.50"></text></g><g><title>__x64_sys_recvfrom (4 samples, 0.10%)</title><rect x="99.2917%" y="597" width="0.1012%" height="15" fill="rgb(206,143,44)" fg:x="3925" fg:w="4"/><text x="99.5417%" y="607.50"></text></g><g><title>__sys_recvfrom (4 samples, 0.10%)</title><rect x="99.2917%" y="581" width="0.1012%" height="15" fill="rgb(236,136,36)" fg:x="3925" fg:w="4"/><text x="99.5417%" y="591.50"></text></g><g><title>sock_recvmsg (3 samples, 0.08%)</title><rect x="99.3170%" y="565" width="0.0759%" height="15" fill="rgb(249,172,42)" fg:x="3926" fg:w="3"/><text x="99.5670%" y="575.50"></text></g><g><title>inet_recvmsg (3 samples, 0.08%)</title><rect x="99.3170%" y="549" width="0.0759%" height="15" fill="rgb(216,139,23)" fg:x="3926" fg:w="3"/><text x="99.5670%" y="559.50"></text></g><g><title>udp_recvmsg (3 samples, 0.08%)</title><rect x="99.3170%" y="533" width="0.0759%" height="15" fill="rgb(207,166,20)" fg:x="3926" fg:w="3"/><text x="99.5670%" y="543.50"></text></g><g><title>__skb_recv_udp (1 samples, 0.03%)</title><rect x="99.3676%" y="517" width="0.0253%" height="15" fill="rgb(210,209,22)" fg:x="3928" fg:w="1"/><text x="99.6176%" y="527.50"></text></g><g><title>move_addr_to_kernel (1 samples, 0.03%)</title><rect x="99.4182%" y="565" width="0.0253%" height="15" fill="rgb(232,118,20)" fg:x="3930" fg:w="1"/><text x="99.6682%" y="575.50"></text></g><g><title>__check_object_size (1 samples, 0.03%)</title><rect x="99.4182%" y="549" width="0.0253%" height="15" fill="rgb(238,113,42)" fg:x="3930" fg:w="1"/><text x="99.6682%" y="559.50"></text></g><g><title>security_socket_sendmsg (3 samples, 0.08%)</title><rect x="99.4435%" y="549" width="0.0759%" height="15" fill="rgb(231,42,5)" fg:x="3931" fg:w="3"/><text x="99.6935%" y="559.50"></text></g><g><title>tomoyo_socket_sendmsg_permission (1 samples, 0.03%)</title><rect x="99.4941%" y="533" width="0.0253%" height="15" fill="rgb(243,166,24)" fg:x="3933" fg:w="1"/><text x="99.7441%" y="543.50"></text></g><g><title>tomoyo_check_inet_address (1 samples, 0.03%)</title><rect x="99.4941%" y="517" width="0.0253%" height="15" fill="rgb(237,226,12)" fg:x="3933" fg:w="1"/><text x="99.7441%" y="527.50"></text></g><g><title>__x64_sys_sendto (8 samples, 0.20%)</title><rect x="99.3929%" y="597" width="0.2024%" height="15" fill="rgb(229,133,24)" fg:x="3929" fg:w="8"/><text x="99.6429%" y="607.50"></text></g><g><title>__sys_sendto (8 samples, 0.20%)</title><rect x="99.3929%" y="581" width="0.2024%" height="15" fill="rgb(238,33,43)" fg:x="3929" fg:w="8"/><text x="99.6429%" y="591.50"></text></g><g><title>sock_sendmsg (6 samples, 0.15%)</title><rect x="99.4435%" y="565" width="0.1518%" height="15" fill="rgb(227,59,38)" fg:x="3931" fg:w="6"/><text x="99.6935%" y="575.50"></text></g><g><title>udp_sendmsg (3 samples, 0.08%)</title><rect x="99.5194%" y="549" width="0.0759%" height="15" fill="rgb(230,97,0)" fg:x="3934" fg:w="3"/><text x="99.7694%" y="559.50"></text></g><g><title>ip_route_output_flow (3 samples, 0.08%)</title><rect x="99.5194%" y="533" width="0.0759%" height="15" fill="rgb(250,173,50)" fg:x="3934" fg:w="3"/><text x="99.7694%" y="543.50"></text></g><g><title>ip_route_output_key_hash_rcu (3 samples, 0.08%)</title><rect x="99.5194%" y="517" width="0.0759%" height="15" fill="rgb(240,15,50)" fg:x="3934" fg:w="3"/><text x="99.7694%" y="527.50"></text></g><g><title>fib_table_lookup (3 samples, 0.08%)</title><rect x="99.5194%" y="501" width="0.0759%" height="15" fill="rgb(221,93,22)" fg:x="3934" fg:w="3"/><text x="99.7694%" y="511.50"></text></g><g><title>__fget_light (1 samples, 0.03%)</title><rect x="99.5952%" y="565" width="0.0253%" height="15" fill="rgb(245,180,53)" fg:x="3937" fg:w="1"/><text x="99.8452%" y="575.50"></text></g><g><title>__remove_hrtimer (1 samples, 0.03%)</title><rect x="99.6205%" y="549" width="0.0253%" height="15" fill="rgb(231,88,51)" fg:x="3938" fg:w="1"/><text x="99.8705%" y="559.50"></text></g><g><title>timerqueue_del (1 samples, 0.03%)</title><rect x="99.6205%" y="533" width="0.0253%" height="15" fill="rgb(240,58,21)" fg:x="3938" fg:w="1"/><text x="99.8705%" y="543.50"></text></g><g><title>rb_next (1 samples, 0.03%)</title><rect x="99.6205%" y="517" width="0.0253%" height="15" fill="rgb(237,21,10)" fg:x="3938" fg:w="1"/><text x="99.8705%" y="527.50"></text></g><g><title>hrtimer_try_to_cancel (2 samples, 0.05%)</title><rect x="99.6205%" y="565" width="0.0506%" height="15" fill="rgb(218,43,11)" fg:x="3938" fg:w="2"/><text x="99.8705%" y="575.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="99.6458%" y="549" width="0.0253%" height="15" fill="rgb(218,221,29)" fg:x="3939" fg:w="1"/><text x="99.8958%" y="559.50"></text></g><g><title>__x64_sys_timerfd_settime (4 samples, 0.10%)</title><rect x="99.5952%" y="597" width="0.1012%" height="15" fill="rgb(214,118,42)" fg:x="3937" fg:w="4"/><text x="99.8452%" y="607.50"></text></g><g><title>do_timerfd_settime (4 samples, 0.10%)</title><rect x="99.5952%" y="581" width="0.1012%" height="15" fill="rgb(251,200,26)" fg:x="3937" fg:w="4"/><text x="99.8452%" y="591.50"></text></g><g><title>ktime_get (1 samples, 0.03%)</title><rect x="99.6711%" y="565" width="0.0253%" height="15" fill="rgb(237,101,39)" fg:x="3940" fg:w="1"/><text x="99.9211%" y="575.50"></text></g><g><title>__fsnotify_parent (1 samples, 0.03%)</title><rect x="99.6964%" y="565" width="0.0253%" height="15" fill="rgb(251,117,11)" fg:x="3941" fg:w="1"/><text x="99.9464%" y="575.50"></text></g><g><title>ext4_file_read_iter (1 samples, 0.03%)</title><rect x="99.7217%" y="565" width="0.0253%" height="15" fill="rgb(216,223,23)" fg:x="3942" fg:w="1"/><text x="99.9717%" y="575.50"></text></g><g><title>copy_page_to_iter (1 samples, 0.03%)</title><rect x="99.7470%" y="549" width="0.0253%" height="15" fill="rgb(251,54,12)" fg:x="3943" fg:w="1"/><text x="99.9970%" y="559.50"></text></g><g><title>filemap_read (4 samples, 0.10%)</title><rect x="99.7470%" y="565" width="0.1012%" height="15" fill="rgb(254,176,54)" fg:x="3943" fg:w="4"/><text x="99.9970%" y="575.50"></text></g><g><title>filemap_get_pages (3 samples, 0.08%)</title><rect x="99.7723%" y="549" width="0.0759%" height="15" fill="rgb(210,32,8)" fg:x="3944" fg:w="3"/><text x="100.0223%" y="559.50"></text></g><g><title>filemap_get_read_batch (3 samples, 0.08%)</title><rect x="99.7723%" y="533" width="0.0759%" height="15" fill="rgb(235,52,38)" fg:x="3944" fg:w="3"/><text x="100.0223%" y="543.50"></text></g><g><title>xas_load (1 samples, 0.03%)</title><rect x="99.8229%" y="517" width="0.0253%" height="15" fill="rgb(231,4,44)" fg:x="3946" fg:w="1"/><text x="100.0729%" y="527.50"></text></g><g><title>xas_descend (1 samples, 0.03%)</title><rect x="99.8229%" y="501" width="0.0253%" height="15" fill="rgb(249,2,32)" fg:x="3946" fg:w="1"/><text x="100.0729%" y="511.50"></text></g><g><title>fsnotify_perm.part.0 (1 samples, 0.03%)</title><rect x="99.8482%" y="565" width="0.0253%" height="15" fill="rgb(224,65,26)" fg:x="3947" fg:w="1"/><text x="100.0982%" y="575.50"></text></g><g><title>ksys_read (8 samples, 0.20%)</title><rect x="99.6964%" y="597" width="0.2024%" height="15" fill="rgb(250,73,40)" fg:x="3941" fg:w="8"/><text x="99.9464%" y="607.50"></text></g><g><title>vfs_read (8 samples, 0.20%)</title><rect x="99.6964%" y="581" width="0.2024%" height="15" fill="rgb(253,177,16)" fg:x="3941" fg:w="8"/><text x="99.9464%" y="591.50"></text></g><g><title>security_file_permission (1 samples, 0.03%)</title><rect x="99.8735%" y="565" width="0.0253%" height="15" fill="rgb(217,32,34)" fg:x="3948" fg:w="1"/><text x="100.1235%" y="575.50"></text></g><g><title>apparmor_file_permission (1 samples, 0.03%)</title><rect x="99.8735%" y="549" width="0.0253%" height="15" fill="rgb(212,7,10)" fg:x="3948" fg:w="1"/><text x="100.1235%" y="559.50"></text></g><g><title>aa_file_perm (1 samples, 0.03%)</title><rect x="99.8735%" y="533" width="0.0253%" height="15" fill="rgb(245,89,8)" fg:x="3948" fg:w="1"/><text x="100.1235%" y="543.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (30 samples, 0.76%)</title><rect x="99.1652%" y="629" width="0.7589%" height="15" fill="rgb(237,16,53)" fg:x="3920" fg:w="30"/><text x="99.4152%" y="639.50"></text></g><g><title>do_syscall_64 (28 samples, 0.71%)</title><rect x="99.2158%" y="613" width="0.7083%" height="15" fill="rgb(250,204,30)" fg:x="3922" fg:w="28"/><text x="99.4658%" y="623.50"></text></g><g><title>syscall_exit_to_user_mode (1 samples, 0.03%)</title><rect x="99.8988%" y="597" width="0.0253%" height="15" fill="rgb(208,77,27)" fg:x="3949" fg:w="1"/><text x="100.1488%" y="607.50"></text></g><g><title>syscall_exit_to_user_mode_prepare (1 samples, 0.03%)</title><rect x="99.8988%" y="581" width="0.0253%" height="15" fill="rgb(250,204,28)" fg:x="3949" fg:w="1"/><text x="100.1488%" y="591.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (1 samples, 0.03%)</title><rect x="99.9241%" y="629" width="0.0253%" height="15" fill="rgb(244,63,21)" fg:x="3950" fg:w="1"/><text x="100.1741%" y="639.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.03%)</title><rect x="99.9241%" y="613" width="0.0253%" height="15" fill="rgb(236,85,44)" fg:x="3950" fg:w="1"/><text x="100.1741%" y="623.50"></text></g><g><title>polling::epoll::epoll_flags (1 samples, 0.03%)</title><rect x="99.9494%" y="629" width="0.0253%" height="15" fill="rgb(215,98,4)" fg:x="3951" fg:w="1"/><text x="100.1994%" y="639.50"></text></g><g><title>all (3,953 samples, 100%)</title><rect x="0.0000%" y="661" width="100.0000%" height="15" fill="rgb(235,38,11)" fg:x="0" fg:w="3953"/><text x="0.2500%" y="671.50"></text></g><g><title>tftp (3,949 samples, 99.90%)</title><rect x="0.1012%" y="645" width="99.8988%" height="15" fill="rgb(254,186,25)" fg:x="4" fg:w="3949"/><text x="0.3512%" y="655.50">tftp</text></g><g><title>tftp::buffer::resize_buffer (1 samples, 0.03%)</title><rect x="99.9747%" y="629" width="0.0253%" height="15" fill="rgb(225,55,31)" fg:x="3952" fg:w="1"/><text x="100.2247%" y="639.50"></text></g></svg></svg>