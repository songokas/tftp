<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="886" onload="init(evt)" viewBox="0 0 1200 886" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="886" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="869.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="869.00"> </text><svg id="frames" x="10" width="1180" total_samples="3244"><g><title>perf_event_comm (1 samples, 0.03%)</title><rect x="0.0000%" y="693" width="0.0308%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="703.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.03%)</title><rect x="0.0000%" y="677" width="0.0308%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="687.50"></text></g><g><title>perf_event_comm_output (1 samples, 0.03%)</title><rect x="0.0000%" y="661" width="0.0308%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="671.50"></text></g><g><title>ctx_resched (2 samples, 0.06%)</title><rect x="0.0308%" y="677" width="0.0617%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="2"/><text x="0.2808%" y="687.50"></text></g><g><title>perf_ctx_enable (2 samples, 0.06%)</title><rect x="0.0308%" y="661" width="0.0617%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="2"/><text x="0.2808%" y="671.50"></text></g><g><title>amd_pmu_enable_all (1 samples, 0.03%)</title><rect x="0.0617%" y="645" width="0.0308%" height="15" fill="rgb(232,128,0)" fg:x="2" fg:w="1"/><text x="0.3117%" y="655.50"></text></g><g><title>x86_pmu_enable_event (1 samples, 0.03%)</title><rect x="0.0617%" y="629" width="0.0308%" height="15" fill="rgb(207,160,47)" fg:x="2" fg:w="1"/><text x="0.3117%" y="639.50"></text></g><g><title>perf-exec (4 samples, 0.12%)</title><rect x="0.0000%" y="821" width="0.1233%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="4"/><text x="0.2500%" y="831.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4 samples, 0.12%)</title><rect x="0.0000%" y="805" width="0.1233%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="4"/><text x="0.2500%" y="815.50"></text></g><g><title>do_syscall_64 (4 samples, 0.12%)</title><rect x="0.0000%" y="789" width="0.1233%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="4"/><text x="0.2500%" y="799.50"></text></g><g><title>__x64_sys_execve (4 samples, 0.12%)</title><rect x="0.0000%" y="773" width="0.1233%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="4"/><text x="0.2500%" y="783.50"></text></g><g><title>do_execveat_common.isra.0 (4 samples, 0.12%)</title><rect x="0.0000%" y="757" width="0.1233%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="4"/><text x="0.2500%" y="767.50"></text></g><g><title>bprm_execve (4 samples, 0.12%)</title><rect x="0.0000%" y="741" width="0.1233%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="4"/><text x="0.2500%" y="751.50"></text></g><g><title>load_elf_binary (4 samples, 0.12%)</title><rect x="0.0000%" y="725" width="0.1233%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="4"/><text x="0.2500%" y="735.50"></text></g><g><title>begin_new_exec (4 samples, 0.12%)</title><rect x="0.0000%" y="709" width="0.1233%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="4"/><text x="0.2500%" y="719.50"></text></g><g><title>perf_event_exec (3 samples, 0.09%)</title><rect x="0.0308%" y="693" width="0.0925%" height="15" fill="rgb(231,73,38)" fg:x="1" fg:w="3"/><text x="0.2808%" y="703.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.03%)</title><rect x="0.0925%" y="677" width="0.0308%" height="15" fill="rgb(225,20,46)" fg:x="3" fg:w="1"/><text x="0.3425%" y="687.50"></text></g><g><title>perf_event_addr_filters_exec (1 samples, 0.03%)</title><rect x="0.0925%" y="661" width="0.0308%" height="15" fill="rgb(210,31,41)" fg:x="3" fg:w="1"/><text x="0.3425%" y="671.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.03%)</title><rect x="0.1233%" y="805" width="0.0308%" height="15" fill="rgb(221,200,47)" fg:x="4" fg:w="1"/><text x="0.3733%" y="815.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.09%)</title><rect x="0.1541%" y="805" width="0.0925%" height="15" fill="rgb(226,26,5)" fg:x="5" fg:w="3"/><text x="0.4041%" y="815.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (2 samples, 0.06%)</title><rect x="0.1850%" y="789" width="0.0617%" height="15" fill="rgb(249,33,26)" fg:x="6" fg:w="2"/><text x="0.4350%" y="799.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (1 samples, 0.03%)</title><rect x="0.2466%" y="805" width="0.0308%" height="15" fill="rgb(235,183,28)" fg:x="8" fg:w="1"/><text x="0.4966%" y="815.50"></text></g><g><title>[[stack]] (1 samples, 0.03%)</title><rect x="0.2774%" y="805" width="0.0308%" height="15" fill="rgb(221,5,38)" fg:x="9" fg:w="1"/><text x="0.5274%" y="815.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.03%)</title><rect x="0.2774%" y="789" width="0.0308%" height="15" fill="rgb(247,18,42)" fg:x="9" fg:w="1"/><text x="0.5274%" y="799.50"></text></g><g><title>&lt;[T] as subtle::ConstantTimeEq&gt;::ct_eq (1 samples, 0.03%)</title><rect x="0.3083%" y="789" width="0.0308%" height="15" fill="rgb(241,131,45)" fg:x="10" fg:w="1"/><text x="0.5583%" y="799.50"></text></g><g><title>&lt;[Z: N] as zeroize::Zeroize&gt;::zeroize (1 samples, 0.03%)</title><rect x="0.3391%" y="789" width="0.0308%" height="15" fill="rgb(249,31,29)" fg:x="11" fg:w="1"/><text x="0.5891%" y="799.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (1 samples, 0.03%)</title><rect x="0.3699%" y="789" width="0.0308%" height="15" fill="rgb(225,111,53)" fg:x="12" fg:w="1"/><text x="0.6199%" y="799.50"></text></g><g><title>&lt;core::core_arch::x86::__m128i as core::core_arch::x86::m128iExt&gt;::as_m128i (1 samples, 0.03%)</title><rect x="0.4007%" y="789" width="0.0308%" height="15" fill="rgb(238,160,17)" fg:x="13" fg:w="1"/><text x="0.6507%" y="799.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (7 samples, 0.22%)</title><rect x="0.4316%" y="789" width="0.2158%" height="15" fill="rgb(214,148,48)" fg:x="14" fg:w="7"/><text x="0.6816%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (34 samples, 1.05%)</title><rect x="0.6473%" y="789" width="1.0481%" height="15" fill="rgb(232,36,49)" fg:x="21" fg:w="34"/><text x="0.8973%" y="799.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (9 samples, 0.28%)</title><rect x="1.6954%" y="789" width="0.2774%" height="15" fill="rgb(209,103,24)" fg:x="55" fg:w="9"/><text x="1.9454%" y="799.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.03%)</title><rect x="1.9729%" y="789" width="0.0308%" height="15" fill="rgb(229,88,8)" fg:x="64" fg:w="1"/><text x="2.2229%" y="799.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (2 samples, 0.06%)</title><rect x="3.1134%" y="773" width="0.0617%" height="15" fill="rgb(213,181,19)" fg:x="101" fg:w="2"/><text x="3.3634%" y="783.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (8 samples, 0.25%)</title><rect x="3.1751%" y="773" width="0.2466%" height="15" fill="rgb(254,191,54)" fg:x="103" fg:w="8"/><text x="3.4251%" y="783.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.03%)</title><rect x="3.3909%" y="757" width="0.0308%" height="15" fill="rgb(241,83,37)" fg:x="110" fg:w="1"/><text x="3.6409%" y="767.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (47 samples, 1.45%)</title><rect x="2.0037%" y="789" width="1.4488%" height="15" fill="rgb(233,36,39)" fg:x="65" fg:w="47"/><text x="2.2537%" y="799.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.03%)</title><rect x="3.4217%" y="773" width="0.0308%" height="15" fill="rgb(226,3,54)" fg:x="111" fg:w="1"/><text x="3.6717%" y="783.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (91 samples, 2.81%)</title><rect x="5.3329%" y="773" width="2.8052%" height="15" fill="rgb(245,192,40)" fg:x="173" fg:w="91"/><text x="5.5829%" y="783.50">&lt;c..</text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_mut (6 samples, 0.18%)</title><rect x="8.1381%" y="773" width="0.1850%" height="15" fill="rgb(238,167,29)" fg:x="264" fg:w="6"/><text x="8.3881%" y="783.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_sub (2 samples, 0.06%)</title><rect x="9.2787%" y="757" width="0.0617%" height="15" fill="rgb(232,182,51)" fg:x="301" fg:w="2"/><text x="9.5287%" y="767.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::cast (8 samples, 0.25%)</title><rect x="9.3403%" y="757" width="0.2466%" height="15" fill="rgb(231,60,39)" fg:x="303" fg:w="8"/><text x="9.5903%" y="767.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (206 samples, 6.35%)</title><rect x="3.4525%" y="789" width="6.3502%" height="15" fill="rgb(208,69,12)" fg:x="112" fg:w="206"/><text x="3.7025%" y="799.50">&lt;core::s..</text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (48 samples, 1.48%)</title><rect x="8.3231%" y="773" width="1.4797%" height="15" fill="rgb(235,93,37)" fg:x="270" fg:w="48"/><text x="8.5731%" y="783.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (7 samples, 0.22%)</title><rect x="9.5869%" y="757" width="0.2158%" height="15" fill="rgb(213,116,39)" fg:x="311" fg:w="7"/><text x="9.8369%" y="767.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (2 samples, 0.06%)</title><rect x="9.7411%" y="741" width="0.0617%" height="15" fill="rgb(222,207,29)" fg:x="316" fg:w="2"/><text x="9.9911%" y="751.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (3 samples, 0.09%)</title><rect x="9.8027%" y="789" width="0.0925%" height="15" fill="rgb(206,96,30)" fg:x="318" fg:w="3"/><text x="10.0527%" y="799.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (27 samples, 0.83%)</title><rect x="9.8952%" y="789" width="0.8323%" height="15" fill="rgb(218,138,4)" fg:x="321" fg:w="27"/><text x="10.1452%" y="799.50"></text></g><g><title>&lt;subtle::Choice as core::convert::From&lt;u8&gt;&gt;::from (1 samples, 0.03%)</title><rect x="10.7275%" y="789" width="0.0308%" height="15" fill="rgb(250,191,14)" fg:x="348" fg:w="1"/><text x="10.9775%" y="799.50"></text></g><g><title>&lt;tftp::writers::single_block_writer::SingleBlockWriter&lt;W&gt; as tftp::writers::block_writer::BlockWriter&gt;::write_block (1 samples, 0.03%)</title><rect x="10.7583%" y="789" width="0.0308%" height="15" fill="rgb(239,60,40)" fg:x="349" fg:w="1"/><text x="11.0083%" y="799.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (2 samples, 0.06%)</title><rect x="10.7891%" y="789" width="0.0617%" height="15" fill="rgb(206,27,48)" fg:x="350" fg:w="2"/><text x="11.0391%" y="799.50"></text></g><g><title>__memcpy_avx_unaligned (1 samples, 0.03%)</title><rect x="10.8508%" y="789" width="0.0308%" height="15" fill="rgb(225,35,8)" fg:x="352" fg:w="1"/><text x="11.1008%" y="799.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.03%)</title><rect x="10.8816%" y="789" width="0.0308%" height="15" fill="rgb(250,213,24)" fg:x="353" fg:w="1"/><text x="11.1316%" y="799.50"></text></g><g><title>_init (1 samples, 0.03%)</title><rect x="10.9125%" y="789" width="0.0308%" height="15" fill="rgb(247,123,22)" fg:x="354" fg:w="1"/><text x="11.1625%" y="799.50"></text></g><g><title>chacha20::backends::avx2::inner (1 samples, 0.03%)</title><rect x="10.9433%" y="789" width="0.0308%" height="15" fill="rgb(231,138,38)" fg:x="355" fg:w="1"/><text x="11.1933%" y="799.50"></text></g><g><title>chacha20::xchacha::quarter_round (2 samples, 0.06%)</title><rect x="10.9741%" y="789" width="0.0617%" height="15" fill="rgb(231,145,46)" fg:x="356" fg:w="2"/><text x="11.2241%" y="799.50"></text></g><g><title>core::array::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T: N]&gt;::index_mut (1 samples, 0.03%)</title><rect x="11.0358%" y="789" width="0.0308%" height="15" fill="rgb(251,118,11)" fg:x="358" fg:w="1"/><text x="11.2858%" y="799.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.03%)</title><rect x="11.0666%" y="789" width="0.0308%" height="15" fill="rgb(217,147,25)" fg:x="359" fg:w="1"/><text x="11.3166%" y="799.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="11.0974%" y="789" width="0.0308%" height="15" fill="rgb(247,81,37)" fg:x="360" fg:w="1"/><text x="11.3474%" y="799.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.03%)</title><rect x="11.1282%" y="789" width="0.0308%" height="15" fill="rgb(209,12,38)" fg:x="361" fg:w="1"/><text x="11.3782%" y="799.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.03%)</title><rect x="11.1591%" y="789" width="0.0308%" height="15" fill="rgb(227,1,9)" fg:x="362" fg:w="1"/><text x="11.4091%" y="799.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi64 (1 samples, 0.03%)</title><rect x="11.1899%" y="789" width="0.0308%" height="15" fill="rgb(248,47,43)" fg:x="363" fg:w="1"/><text x="11.4399%" y="799.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="11.2207%" y="789" width="0.0308%" height="15" fill="rgb(221,10,30)" fg:x="364" fg:w="1"/><text x="11.4707%" y="799.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="11.2515%" y="789" width="0.0308%" height="15" fill="rgb(210,229,1)" fg:x="365" fg:w="1"/><text x="11.5015%" y="799.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="11.2824%" y="789" width="0.0308%" height="15" fill="rgb(222,148,37)" fg:x="366" fg:w="1"/><text x="11.5324%" y="799.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (2 samples, 0.06%)</title><rect x="11.3132%" y="789" width="0.0617%" height="15" fill="rgb(234,67,33)" fg:x="367" fg:w="2"/><text x="11.5632%" y="799.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_setzero_si128 (1 samples, 0.03%)</title><rect x="11.3748%" y="789" width="0.0308%" height="15" fill="rgb(247,98,35)" fg:x="369" fg:w="1"/><text x="11.6248%" y="799.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi64x (1 samples, 0.03%)</title><rect x="11.3748%" y="773" width="0.0308%" height="15" fill="rgb(247,138,52)" fg:x="369" fg:w="1"/><text x="11.6248%" y="783.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi64x (1 samples, 0.03%)</title><rect x="11.3748%" y="757" width="0.0308%" height="15" fill="rgb(213,79,30)" fg:x="369" fg:w="1"/><text x="11.6248%" y="767.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3 samples, 0.09%)</title><rect x="11.4057%" y="789" width="0.0925%" height="15" fill="rgb(246,177,23)" fg:x="370" fg:w="3"/><text x="11.6557%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (14 samples, 0.43%)</title><rect x="11.4982%" y="789" width="0.4316%" height="15" fill="rgb(230,62,27)" fg:x="373" fg:w="14"/><text x="11.7482%" y="799.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_le_bytes (1 samples, 0.03%)</title><rect x="11.9297%" y="789" width="0.0308%" height="15" fill="rgb(216,154,8)" fg:x="387" fg:w="1"/><text x="12.1797%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (1 samples, 0.03%)</title><rect x="11.9605%" y="789" width="0.0308%" height="15" fill="rgb(244,35,45)" fg:x="388" fg:w="1"/><text x="12.2105%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::array::iter::IntoIter&lt;[core::core_arch::x86::__m256i: 4],2_usize&gt;&gt; (1 samples, 0.03%)</title><rect x="11.9914%" y="789" width="0.0308%" height="15" fill="rgb(251,115,12)" fg:x="389" fg:w="1"/><text x="12.2414%" y="799.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.03%)</title><rect x="12.0222%" y="789" width="0.0308%" height="15" fill="rgb(240,54,50)" fg:x="390" fg:w="1"/><text x="12.2722%" y="799.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::chunks_exact (1 samples, 0.03%)</title><rect x="12.0530%" y="789" width="0.0308%" height="15" fill="rgb(233,84,52)" fg:x="391" fg:w="1"/><text x="12.3030%" y="799.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (3 samples, 0.09%)</title><rect x="12.0838%" y="789" width="0.0925%" height="15" fill="rgb(207,117,47)" fg:x="392" fg:w="3"/><text x="12.3338%" y="799.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (2 samples, 0.06%)</title><rect x="12.1147%" y="773" width="0.0617%" height="15" fill="rgb(249,43,39)" fg:x="393" fg:w="2"/><text x="12.3647%" y="783.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at (1 samples, 0.03%)</title><rect x="12.1763%" y="789" width="0.0308%" height="15" fill="rgb(209,38,44)" fg:x="395" fg:w="1"/><text x="12.4263%" y="799.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (1 samples, 0.03%)</title><rect x="12.1763%" y="773" width="0.0308%" height="15" fill="rgb(236,212,23)" fg:x="395" fg:w="1"/><text x="12.4263%" y="783.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::as_ptr (1 samples, 0.03%)</title><rect x="12.1763%" y="757" width="0.0308%" height="15" fill="rgb(242,79,21)" fg:x="395" fg:w="1"/><text x="12.4263%" y="767.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.03%)</title><rect x="12.2072%" y="789" width="0.0308%" height="15" fill="rgb(211,96,35)" fg:x="396" fg:w="1"/><text x="12.4572%" y="799.50"></text></g><g><title>core::slice::raw::from_raw_parts (6 samples, 0.18%)</title><rect x="12.2380%" y="789" width="0.1850%" height="15" fill="rgb(253,215,40)" fg:x="397" fg:w="6"/><text x="12.4880%" y="799.50"></text></g><g><title>core::ptr::slice_from_raw_parts (6 samples, 0.18%)</title><rect x="12.2380%" y="773" width="0.1850%" height="15" fill="rgb(211,81,21)" fg:x="397" fg:w="6"/><text x="12.4880%" y="783.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (6 samples, 0.18%)</title><rect x="12.2380%" y="757" width="0.1850%" height="15" fill="rgb(208,190,38)" fg:x="397" fg:w="6"/><text x="12.4880%" y="767.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (2 samples, 0.06%)</title><rect x="12.4229%" y="789" width="0.0617%" height="15" fill="rgb(235,213,38)" fg:x="403" fg:w="2"/><text x="12.6729%" y="799.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (1 samples, 0.03%)</title><rect x="12.4538%" y="773" width="0.0308%" height="15" fill="rgb(237,122,38)" fg:x="404" fg:w="1"/><text x="12.7038%" y="783.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (1 samples, 0.03%)</title><rect x="12.4538%" y="757" width="0.0308%" height="15" fill="rgb(244,218,35)" fg:x="404" fg:w="1"/><text x="12.7038%" y="767.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (2 samples, 0.06%)</title><rect x="12.4846%" y="789" width="0.0617%" height="15" fill="rgb(240,68,47)" fg:x="405" fg:w="2"/><text x="12.7346%" y="799.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::iter_position (1 samples, 0.03%)</title><rect x="12.5462%" y="789" width="0.0308%" height="15" fill="rgb(210,16,53)" fg:x="407" fg:w="1"/><text x="12.7962%" y="799.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (2 samples, 0.06%)</title><rect x="12.5771%" y="789" width="0.0617%" height="15" fill="rgb(235,124,12)" fg:x="408" fg:w="2"/><text x="12.8271%" y="799.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.03%)</title><rect x="12.6079%" y="773" width="0.0308%" height="15" fill="rgb(224,169,11)" fg:x="409" fg:w="1"/><text x="12.8579%" y="783.50"></text></g><g><title>[anon] (401 samples, 12.36%)</title><rect x="0.3083%" y="805" width="12.3613%" height="15" fill="rgb(250,166,2)" fg:x="10" fg:w="401"/><text x="0.5583%" y="815.50">[anon]</text></g><g><title>polling::epoll::Poller::modify (1 samples, 0.03%)</title><rect x="12.6387%" y="789" width="0.0308%" height="15" fill="rgb(242,216,29)" fg:x="410" fg:w="1"/><text x="12.8887%" y="799.50"></text></g><g><title>&lt;tracing_core::metadata::Level as core::cmp::PartialOrd&lt;tracing_core::metadata::LevelFilter&gt;&gt;::le (1 samples, 0.03%)</title><rect x="12.6387%" y="773" width="0.0308%" height="15" fill="rgb(230,116,27)" fg:x="410" fg:w="1"/><text x="12.8887%" y="783.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.03%)</title><rect x="12.6695%" y="789" width="0.0308%" height="15" fill="rgb(228,99,48)" fg:x="411" fg:w="1"/><text x="12.9195%" y="799.50"></text></g><g><title>[tftp] (2 samples, 0.06%)</title><rect x="12.6695%" y="805" width="0.0617%" height="15" fill="rgb(253,11,6)" fg:x="411" fg:w="2"/><text x="12.9195%" y="815.50"></text></g><g><title>__GI___pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="12.7004%" y="789" width="0.0308%" height="15" fill="rgb(247,143,39)" fg:x="412" fg:w="1"/><text x="12.9504%" y="799.50"></text></g><g><title>__GI___pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="12.7004%" y="773" width="0.0308%" height="15" fill="rgb(236,97,10)" fg:x="412" fg:w="1"/><text x="12.9504%" y="783.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::packed_simd::u32x8 as curve25519_dalek::backend::vector::packed_simd::u32x8::mul32::__Impl_mul32__&gt;::_impl_mul32 (1 samples, 0.03%)</title><rect x="12.7312%" y="741" width="0.0308%" height="15" fill="rgb(233,208,19)" fg:x="413" fg:w="1"/><text x="12.9812%" y="751.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.03%)</title><rect x="12.7312%" y="725" width="0.0308%" height="15" fill="rgb(216,164,2)" fg:x="413" fg:w="1"/><text x="12.9812%" y="735.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4 as &lt;&amp;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4&gt;&gt;::mul::__Impl_mul__&gt;::_impl_mul::m (2 samples, 0.06%)</title><rect x="12.7312%" y="773" width="0.0617%" height="15" fill="rgb(220,129,5)" fg:x="413" fg:w="2"/><text x="12.9812%" y="783.50"></text></g><g><title>curve25519_dalek::backend::vector::packed_simd::u32x8::mul32 (2 samples, 0.06%)</title><rect x="12.7312%" y="757" width="0.0617%" height="15" fill="rgb(242,17,10)" fg:x="413" fg:w="2"/><text x="12.9812%" y="767.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.03%)</title><rect x="12.7620%" y="741" width="0.0308%" height="15" fill="rgb(242,107,0)" fg:x="414" fg:w="1"/><text x="13.0120%" y="751.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.03%)</title><rect x="12.7928%" y="741" width="0.0308%" height="15" fill="rgb(251,28,31)" fg:x="415" fg:w="1"/><text x="13.0428%" y="751.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::packed_simd::u64x4 as core::convert::From&lt;core::core_arch::x86::__m256i&gt;&gt;::from (1 samples, 0.03%)</title><rect x="12.7928%" y="725" width="0.0308%" height="15" fill="rgb(233,223,10)" fg:x="415" fg:w="1"/><text x="13.0428%" y="735.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4 as &lt;&amp;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4&gt;&gt;::mul::__Impl_mul__&gt;::_impl_mul (4 samples, 0.12%)</title><rect x="12.7312%" y="789" width="0.1233%" height="15" fill="rgb(215,21,27)" fg:x="413" fg:w="4"/><text x="12.9812%" y="799.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::packed_simd::u64x4 as core::ops::arith::Add&gt;::add (2 samples, 0.06%)</title><rect x="12.7928%" y="773" width="0.0617%" height="15" fill="rgb(232,23,21)" fg:x="415" fg:w="2"/><text x="13.0428%" y="783.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::packed_simd::u64x4 as &lt;curve25519_dalek::backend::vector::packed_simd::u64x4 as core::ops::arith::Add&gt;::add::__Impl_add__&gt;::_impl_add (2 samples, 0.06%)</title><rect x="12.7928%" y="757" width="0.0617%" height="15" fill="rgb(244,5,23)" fg:x="415" fg:w="2"/><text x="13.0428%" y="767.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.03%)</title><rect x="12.8237%" y="741" width="0.0308%" height="15" fill="rgb(226,81,46)" fg:x="416" fg:w="1"/><text x="13.0737%" y="751.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (3 samples, 0.09%)</title><rect x="12.8545%" y="789" width="0.0925%" height="15" fill="rgb(247,70,30)" fg:x="417" fg:w="3"/><text x="13.1045%" y="799.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.03%)</title><rect x="12.9470%" y="789" width="0.0308%" height="15" fill="rgb(212,68,19)" fg:x="420" fg:w="1"/><text x="13.1970%" y="799.50"></text></g><g><title>&lt;Z as zeroize::Zeroize&gt;::zeroize (1 samples, 0.03%)</title><rect x="12.9778%" y="789" width="0.0308%" height="15" fill="rgb(240,187,13)" fg:x="421" fg:w="1"/><text x="13.2278%" y="799.50"></text></g><g><title>zeroize::atomic_fence (1 samples, 0.03%)</title><rect x="12.9778%" y="773" width="0.0308%" height="15" fill="rgb(223,113,26)" fg:x="421" fg:w="1"/><text x="13.2278%" y="783.50"></text></g><g><title>&lt;[Z] as zeroize::Zeroize&gt;::zeroize (1 samples, 0.03%)</title><rect x="13.0086%" y="789" width="0.0308%" height="15" fill="rgb(206,192,2)" fg:x="422" fg:w="1"/><text x="13.2586%" y="799.50"></text></g><g><title>zeroize::volatile_set (1 samples, 0.03%)</title><rect x="13.0086%" y="773" width="0.0308%" height="15" fill="rgb(241,108,4)" fg:x="422" fg:w="1"/><text x="13.2586%" y="783.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (51 samples, 1.57%)</title><rect x="13.5943%" y="565" width="1.5721%" height="15" fill="rgb(247,173,49)" fg:x="441" fg:w="51"/><text x="13.8443%" y="575.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (5 samples, 0.15%)</title><rect x="15.1665%" y="565" width="0.1541%" height="15" fill="rgb(224,114,35)" fg:x="492" fg:w="5"/><text x="15.4165%" y="575.50"></text></g><g><title>chacha20::backends::avx2::rounds (1 samples, 0.03%)</title><rect x="15.3206%" y="565" width="0.0308%" height="15" fill="rgb(245,159,27)" fg:x="497" fg:w="1"/><text x="15.5706%" y="575.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (2 samples, 0.06%)</title><rect x="15.3514%" y="565" width="0.0617%" height="15" fill="rgb(245,172,44)" fg:x="498" fg:w="2"/><text x="15.6014%" y="575.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (2 samples, 0.06%)</title><rect x="15.8446%" y="549" width="0.0617%" height="15" fill="rgb(236,23,11)" fg:x="514" fg:w="2"/><text x="16.0946%" y="559.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (2 samples, 0.06%)</title><rect x="15.9063%" y="549" width="0.0617%" height="15" fill="rgb(205,117,38)" fg:x="516" fg:w="2"/><text x="16.1563%" y="559.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (4 samples, 0.12%)</title><rect x="15.9679%" y="549" width="0.1233%" height="15" fill="rgb(237,72,25)" fg:x="518" fg:w="4"/><text x="16.2179%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (2 samples, 0.06%)</title><rect x="16.0912%" y="549" width="0.0617%" height="15" fill="rgb(244,70,9)" fg:x="522" fg:w="2"/><text x="16.3412%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (4 samples, 0.12%)</title><rect x="16.1529%" y="549" width="0.1233%" height="15" fill="rgb(217,125,39)" fg:x="524" fg:w="4"/><text x="16.4029%" y="559.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.03%)</title><rect x="16.2762%" y="549" width="0.0308%" height="15" fill="rgb(235,36,10)" fg:x="528" fg:w="1"/><text x="16.5262%" y="559.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi64x (1 samples, 0.03%)</title><rect x="16.2762%" y="533" width="0.0308%" height="15" fill="rgb(251,123,47)" fg:x="528" fg:w="1"/><text x="16.5262%" y="543.50"></text></g><g><title>core::core_arch::simd::i64x4::new (1 samples, 0.03%)</title><rect x="16.2762%" y="517" width="0.0308%" height="15" fill="rgb(221,13,13)" fg:x="528" fg:w="1"/><text x="16.5262%" y="527.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.03%)</title><rect x="16.3687%" y="533" width="0.0308%" height="15" fill="rgb(238,131,9)" fg:x="531" fg:w="1"/><text x="16.6187%" y="543.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="16.3995%" y="533" width="0.0308%" height="15" fill="rgb(211,50,8)" fg:x="532" fg:w="1"/><text x="16.6495%" y="543.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (5 samples, 0.15%)</title><rect x="16.3070%" y="549" width="0.1541%" height="15" fill="rgb(245,182,24)" fg:x="529" fg:w="5"/><text x="16.5570%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="16.4303%" y="533" width="0.0308%" height="15" fill="rgb(242,14,37)" fg:x="533" fg:w="1"/><text x="16.6803%" y="543.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (4 samples, 0.12%)</title><rect x="16.4612%" y="549" width="0.1233%" height="15" fill="rgb(246,228,12)" fg:x="534" fg:w="4"/><text x="16.7112%" y="559.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (2 samples, 0.06%)</title><rect x="16.5845%" y="549" width="0.0617%" height="15" fill="rgb(213,55,15)" fg:x="538" fg:w="2"/><text x="16.8345%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (42 samples, 1.29%)</title><rect x="15.4131%" y="565" width="1.2947%" height="15" fill="rgb(209,9,3)" fg:x="500" fg:w="42"/><text x="15.6631%" y="575.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (2 samples, 0.06%)</title><rect x="16.6461%" y="549" width="0.0617%" height="15" fill="rgb(230,59,30)" fg:x="540" fg:w="2"/><text x="16.8961%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (6 samples, 0.18%)</title><rect x="16.7078%" y="565" width="0.1850%" height="15" fill="rgb(209,121,21)" fg:x="542" fg:w="6"/><text x="16.9578%" y="575.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (6 samples, 0.18%)</title><rect x="17.4784%" y="549" width="0.1850%" height="15" fill="rgb(220,109,13)" fg:x="567" fg:w="6"/><text x="17.7284%" y="559.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (1 samples, 0.03%)</title><rect x="17.6634%" y="549" width="0.0308%" height="15" fill="rgb(232,18,1)" fg:x="573" fg:w="1"/><text x="17.9134%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="17.6942%" y="549" width="0.0308%" height="15" fill="rgb(215,41,42)" fg:x="574" fg:w="1"/><text x="17.9442%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (3 samples, 0.09%)</title><rect x="17.7250%" y="549" width="0.0925%" height="15" fill="rgb(224,123,36)" fg:x="575" fg:w="3"/><text x="17.9750%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (3 samples, 0.09%)</title><rect x="17.8175%" y="549" width="0.0925%" height="15" fill="rgb(240,125,3)" fg:x="578" fg:w="3"/><text x="18.0675%" y="559.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (3 samples, 0.09%)</title><rect x="17.9100%" y="549" width="0.0925%" height="15" fill="rgb(205,98,50)" fg:x="581" fg:w="3"/><text x="18.1600%" y="559.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="18.0025%" y="549" width="0.0308%" height="15" fill="rgb(205,185,37)" fg:x="584" fg:w="1"/><text x="18.2525%" y="559.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.03%)</title><rect x="18.0333%" y="533" width="0.0308%" height="15" fill="rgb(238,207,15)" fg:x="585" fg:w="1"/><text x="18.2833%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (39 samples, 1.20%)</title><rect x="16.8927%" y="565" width="1.2022%" height="15" fill="rgb(213,199,42)" fg:x="548" fg:w="39"/><text x="17.1427%" y="575.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (2 samples, 0.06%)</title><rect x="18.0333%" y="549" width="0.0617%" height="15" fill="rgb(235,201,11)" fg:x="585" fg:w="2"/><text x="18.2833%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (1 samples, 0.03%)</title><rect x="18.0641%" y="533" width="0.0308%" height="15" fill="rgb(207,46,11)" fg:x="586" fg:w="1"/><text x="18.3141%" y="543.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (2 samples, 0.06%)</title><rect x="18.1874%" y="549" width="0.0617%" height="15" fill="rgb(241,35,35)" fg:x="590" fg:w="2"/><text x="18.4374%" y="559.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (1 samples, 0.03%)</title><rect x="18.2491%" y="549" width="0.0308%" height="15" fill="rgb(243,32,47)" fg:x="592" fg:w="1"/><text x="18.4991%" y="559.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.03%)</title><rect x="18.2799%" y="549" width="0.0308%" height="15" fill="rgb(247,202,23)" fg:x="593" fg:w="1"/><text x="18.5299%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.03%)</title><rect x="18.3107%" y="549" width="0.0308%" height="15" fill="rgb(219,102,11)" fg:x="594" fg:w="1"/><text x="18.5607%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (6 samples, 0.18%)</title><rect x="18.3416%" y="549" width="0.1850%" height="15" fill="rgb(243,110,44)" fg:x="595" fg:w="6"/><text x="18.5916%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="18.5265%" y="549" width="0.0308%" height="15" fill="rgb(222,74,54)" fg:x="601" fg:w="1"/><text x="18.7765%" y="559.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (4 samples, 0.12%)</title><rect x="18.5573%" y="549" width="0.1233%" height="15" fill="rgb(216,99,12)" fg:x="602" fg:w="4"/><text x="18.8073%" y="559.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.06%)</title><rect x="18.6806%" y="549" width="0.0617%" height="15" fill="rgb(226,22,26)" fg:x="606" fg:w="2"/><text x="18.9306%" y="559.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (3 samples, 0.09%)</title><rect x="18.7423%" y="549" width="0.0925%" height="15" fill="rgb(217,163,10)" fg:x="608" fg:w="3"/><text x="18.9923%" y="559.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.03%)</title><rect x="18.8039%" y="533" width="0.0308%" height="15" fill="rgb(213,25,53)" fg:x="610" fg:w="1"/><text x="19.0539%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (26 samples, 0.80%)</title><rect x="18.0949%" y="565" width="0.8015%" height="15" fill="rgb(252,105,26)" fg:x="587" fg:w="26"/><text x="18.3449%" y="575.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (2 samples, 0.06%)</title><rect x="18.8348%" y="549" width="0.0617%" height="15" fill="rgb(220,39,43)" fg:x="611" fg:w="2"/><text x="19.0848%" y="559.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (6 samples, 0.18%)</title><rect x="19.1430%" y="549" width="0.1850%" height="15" fill="rgb(229,68,48)" fg:x="621" fg:w="6"/><text x="19.3930%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="19.3280%" y="549" width="0.0308%" height="15" fill="rgb(252,8,32)" fg:x="627" fg:w="1"/><text x="19.5780%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (16 samples, 0.49%)</title><rect x="18.8964%" y="565" width="0.4932%" height="15" fill="rgb(223,20,43)" fg:x="613" fg:w="16"/><text x="19.1464%" y="575.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="19.3588%" y="549" width="0.0308%" height="15" fill="rgb(229,81,49)" fg:x="628" fg:w="1"/><text x="19.6088%" y="559.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (4 samples, 0.12%)</title><rect x="21.1467%" y="549" width="0.1233%" height="15" fill="rgb(236,28,36)" fg:x="686" fg:w="4"/><text x="21.3967%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.03%)</title><rect x="21.2700%" y="549" width="0.0308%" height="15" fill="rgb(249,185,26)" fg:x="690" fg:w="1"/><text x="21.5200%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (2 samples, 0.06%)</title><rect x="21.3009%" y="549" width="0.0617%" height="15" fill="rgb(249,174,33)" fg:x="691" fg:w="2"/><text x="21.5509%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (2 samples, 0.06%)</title><rect x="21.3625%" y="549" width="0.0617%" height="15" fill="rgb(233,201,37)" fg:x="693" fg:w="2"/><text x="21.6125%" y="559.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (2 samples, 0.06%)</title><rect x="21.4242%" y="549" width="0.0617%" height="15" fill="rgb(221,78,26)" fg:x="695" fg:w="2"/><text x="21.6742%" y="559.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="21.4858%" y="549" width="0.0308%" height="15" fill="rgb(250,127,30)" fg:x="697" fg:w="1"/><text x="21.7358%" y="559.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="21.5166%" y="549" width="0.0308%" height="15" fill="rgb(230,49,44)" fg:x="698" fg:w="1"/><text x="21.7666%" y="559.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="21.5475%" y="549" width="0.0308%" height="15" fill="rgb(229,67,23)" fg:x="699" fg:w="1"/><text x="21.7975%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (73 samples, 2.25%)</title><rect x="19.3896%" y="565" width="2.2503%" height="15" fill="rgb(249,83,47)" fg:x="629" fg:w="73"/><text x="19.6396%" y="575.50">c..</text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (2 samples, 0.06%)</title><rect x="21.5783%" y="549" width="0.0617%" height="15" fill="rgb(215,43,3)" fg:x="700" fg:w="2"/><text x="21.8283%" y="559.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (12 samples, 0.37%)</title><rect x="21.6400%" y="565" width="0.3699%" height="15" fill="rgb(238,154,13)" fg:x="702" fg:w="12"/><text x="21.8900%" y="575.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi64x (3 samples, 0.09%)</title><rect x="21.9174%" y="549" width="0.0925%" height="15" fill="rgb(219,56,2)" fg:x="711" fg:w="3"/><text x="22.1674%" y="559.50"></text></g><g><title>core::core_arch::simd::i64x4::new (3 samples, 0.09%)</title><rect x="21.9174%" y="533" width="0.0925%" height="15" fill="rgb(233,0,4)" fg:x="711" fg:w="3"/><text x="22.1674%" y="543.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="22.0099%" y="565" width="0.0308%" height="15" fill="rgb(235,30,7)" fg:x="714" fg:w="1"/><text x="22.2599%" y="575.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="22.0099%" y="549" width="0.0308%" height="15" fill="rgb(250,79,13)" fg:x="714" fg:w="1"/><text x="22.2599%" y="559.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="22.0099%" y="533" width="0.0308%" height="15" fill="rgb(211,146,34)" fg:x="714" fg:w="1"/><text x="22.2599%" y="543.50"></text></g><g><title>core::core_arch::simd::i8x32::new (1 samples, 0.03%)</title><rect x="22.0099%" y="517" width="0.0308%" height="15" fill="rgb(228,22,38)" fg:x="714" fg:w="1"/><text x="22.2599%" y="527.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (44 samples, 1.36%)</title><rect x="22.0407%" y="565" width="1.3564%" height="15" fill="rgb(235,168,5)" fg:x="715" fg:w="44"/><text x="22.2907%" y="575.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (19 samples, 0.59%)</title><rect x="23.3970%" y="565" width="0.5857%" height="15" fill="rgb(221,155,16)" fg:x="759" fg:w="19"/><text x="23.6470%" y="575.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (28 samples, 0.86%)</title><rect x="23.9827%" y="565" width="0.8631%" height="15" fill="rgb(215,215,53)" fg:x="778" fg:w="28"/><text x="24.2327%" y="575.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (419 samples, 12.92%)</title><rect x="13.0395%" y="581" width="12.9162%" height="15" fill="rgb(223,4,10)" fg:x="423" fg:w="419"/><text x="13.2895%" y="591.50">chacha20::backends:..</text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (36 samples, 1.11%)</title><rect x="24.8459%" y="565" width="1.1097%" height="15" fill="rgb(234,103,6)" fg:x="806" fg:w="36"/><text x="25.0959%" y="575.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (1 samples, 0.03%)</title><rect x="25.9556%" y="581" width="0.0308%" height="15" fill="rgb(227,97,0)" fg:x="842" fg:w="1"/><text x="26.2056%" y="591.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (3 samples, 0.09%)</title><rect x="25.9864%" y="581" width="0.0925%" height="15" fill="rgb(234,150,53)" fg:x="843" fg:w="3"/><text x="26.2364%" y="591.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (2 samples, 0.06%)</title><rect x="26.0789%" y="581" width="0.0617%" height="15" fill="rgb(228,201,54)" fg:x="846" fg:w="2"/><text x="26.3289%" y="591.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (2 samples, 0.06%)</title><rect x="26.1406%" y="581" width="0.0617%" height="15" fill="rgb(222,22,37)" fg:x="848" fg:w="2"/><text x="26.3906%" y="591.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (10 samples, 0.31%)</title><rect x="26.2022%" y="581" width="0.3083%" height="15" fill="rgb(237,53,32)" fg:x="850" fg:w="10"/><text x="26.4522%" y="591.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.03%)</title><rect x="26.5105%" y="581" width="0.0308%" height="15" fill="rgb(233,25,53)" fg:x="860" fg:w="1"/><text x="26.7605%" y="591.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.03%)</title><rect x="26.5105%" y="565" width="0.0308%" height="15" fill="rgb(210,40,34)" fg:x="860" fg:w="1"/><text x="26.7605%" y="575.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (6 samples, 0.18%)</title><rect x="26.5413%" y="581" width="0.1850%" height="15" fill="rgb(241,220,44)" fg:x="861" fg:w="6"/><text x="26.7913%" y="591.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (3 samples, 0.09%)</title><rect x="26.6338%" y="565" width="0.0925%" height="15" fill="rgb(235,28,35)" fg:x="864" fg:w="3"/><text x="26.8838%" y="575.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (14 samples, 0.43%)</title><rect x="26.7263%" y="581" width="0.4316%" height="15" fill="rgb(210,56,17)" fg:x="867" fg:w="14"/><text x="26.9763%" y="591.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.03%)</title><rect x="27.1578%" y="581" width="0.0308%" height="15" fill="rgb(224,130,29)" fg:x="881" fg:w="1"/><text x="27.4078%" y="591.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi64x (1 samples, 0.03%)</title><rect x="27.1578%" y="565" width="0.0308%" height="15" fill="rgb(235,212,8)" fg:x="881" fg:w="1"/><text x="27.4078%" y="575.50"></text></g><g><title>core::core_arch::simd::i64x4::new (1 samples, 0.03%)</title><rect x="27.1578%" y="549" width="0.0308%" height="15" fill="rgb(223,33,50)" fg:x="881" fg:w="1"/><text x="27.4078%" y="559.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (10 samples, 0.31%)</title><rect x="27.1887%" y="581" width="0.3083%" height="15" fill="rgb(219,149,13)" fg:x="882" fg:w="10"/><text x="27.4387%" y="591.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (4 samples, 0.12%)</title><rect x="27.4969%" y="581" width="0.1233%" height="15" fill="rgb(250,156,29)" fg:x="892" fg:w="4"/><text x="27.7469%" y="591.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (2 samples, 0.06%)</title><rect x="27.6202%" y="581" width="0.0617%" height="15" fill="rgb(216,193,19)" fg:x="896" fg:w="2"/><text x="27.8702%" y="591.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_par_ks_blocks (486 samples, 14.98%)</title><rect x="13.0395%" y="629" width="14.9815%" height="15" fill="rgb(216,135,14)" fg:x="423" fg:w="486"/><text x="13.2895%" y="639.50">&lt;chacha20::backends::av..</text></g><g><title>chacha20::backends::avx2::rounds (486 samples, 14.98%)</title><rect x="13.0395%" y="613" width="14.9815%" height="15" fill="rgb(241,47,5)" fg:x="423" fg:w="486"/><text x="13.2895%" y="623.50">chacha20::backends::avx..</text></g><g><title>chacha20::backends::avx2::double_quarter_round (486 samples, 14.98%)</title><rect x="13.0395%" y="597" width="14.9815%" height="15" fill="rgb(233,42,35)" fg:x="423" fg:w="486"/><text x="13.2895%" y="607.50">chacha20::backends::avx..</text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (11 samples, 0.34%)</title><rect x="27.6819%" y="581" width="0.3391%" height="15" fill="rgb(231,13,6)" fg:x="898" fg:w="11"/><text x="27.9319%" y="591.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (10 samples, 0.31%)</title><rect x="28.1134%" y="549" width="0.3083%" height="15" fill="rgb(207,181,40)" fg:x="912" fg:w="10"/><text x="28.3634%" y="559.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (1 samples, 0.03%)</title><rect x="28.4217%" y="549" width="0.0308%" height="15" fill="rgb(254,173,49)" fg:x="922" fg:w="1"/><text x="28.6717%" y="559.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (1 samples, 0.03%)</title><rect x="28.4525%" y="549" width="0.0308%" height="15" fill="rgb(221,1,38)" fg:x="923" fg:w="1"/><text x="28.7025%" y="559.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.03%)</title><rect x="28.6375%" y="533" width="0.0308%" height="15" fill="rgb(206,124,46)" fg:x="929" fg:w="1"/><text x="28.8875%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (7 samples, 0.22%)</title><rect x="28.4834%" y="549" width="0.2158%" height="15" fill="rgb(249,21,11)" fg:x="924" fg:w="7"/><text x="28.7334%" y="559.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="28.6683%" y="533" width="0.0308%" height="15" fill="rgb(222,201,40)" fg:x="930" fg:w="1"/><text x="28.9183%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (2 samples, 0.06%)</title><rect x="28.6991%" y="549" width="0.0617%" height="15" fill="rgb(235,61,29)" fg:x="931" fg:w="2"/><text x="28.9491%" y="559.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (1 samples, 0.03%)</title><rect x="29.0074%" y="533" width="0.0308%" height="15" fill="rgb(219,207,3)" fg:x="941" fg:w="1"/><text x="29.2574%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="29.0382%" y="533" width="0.0308%" height="15" fill="rgb(222,56,46)" fg:x="942" fg:w="1"/><text x="29.2882%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (11 samples, 0.34%)</title><rect x="28.7608%" y="549" width="0.3391%" height="15" fill="rgb(239,76,54)" fg:x="933" fg:w="11"/><text x="29.0108%" y="559.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="29.0691%" y="533" width="0.0308%" height="15" fill="rgb(231,124,27)" fg:x="943" fg:w="1"/><text x="29.3191%" y="543.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="29.0999%" y="533" width="0.0308%" height="15" fill="rgb(249,195,6)" fg:x="944" fg:w="1"/><text x="29.3499%" y="543.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.03%)</title><rect x="29.1307%" y="533" width="0.0308%" height="15" fill="rgb(237,174,47)" fg:x="945" fg:w="1"/><text x="29.3807%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="29.1615%" y="533" width="0.0308%" height="15" fill="rgb(206,201,31)" fg:x="946" fg:w="1"/><text x="29.4115%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.03%)</title><rect x="29.1924%" y="533" width="0.0308%" height="15" fill="rgb(231,57,52)" fg:x="947" fg:w="1"/><text x="29.4424%" y="543.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="29.2232%" y="533" width="0.0308%" height="15" fill="rgb(248,177,22)" fg:x="948" fg:w="1"/><text x="29.4732%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (7 samples, 0.22%)</title><rect x="29.0999%" y="549" width="0.2158%" height="15" fill="rgb(215,211,37)" fg:x="944" fg:w="7"/><text x="29.3499%" y="559.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (2 samples, 0.06%)</title><rect x="29.2540%" y="533" width="0.0617%" height="15" fill="rgb(241,128,51)" fg:x="949" fg:w="2"/><text x="29.5040%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (4 samples, 0.12%)</title><rect x="29.3157%" y="549" width="0.1233%" height="15" fill="rgb(227,165,31)" fg:x="951" fg:w="4"/><text x="29.5657%" y="559.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="29.8089%" y="533" width="0.0308%" height="15" fill="rgb(228,167,24)" fg:x="967" fg:w="1"/><text x="30.0589%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="29.8397%" y="533" width="0.0308%" height="15" fill="rgb(228,143,12)" fg:x="968" fg:w="1"/><text x="30.0897%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (16 samples, 0.49%)</title><rect x="29.4390%" y="549" width="0.4932%" height="15" fill="rgb(249,149,8)" fg:x="955" fg:w="16"/><text x="29.6890%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (2 samples, 0.06%)</title><rect x="29.8705%" y="533" width="0.0617%" height="15" fill="rgb(243,35,44)" fg:x="969" fg:w="2"/><text x="30.1205%" y="543.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="29.9322%" y="549" width="0.0308%" height="15" fill="rgb(246,89,9)" fg:x="971" fg:w="1"/><text x="30.1822%" y="559.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="29.9322%" y="533" width="0.0308%" height="15" fill="rgb(233,213,13)" fg:x="971" fg:w="1"/><text x="30.1822%" y="543.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="29.9322%" y="517" width="0.0308%" height="15" fill="rgb(233,141,41)" fg:x="971" fg:w="1"/><text x="30.1822%" y="527.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (12 samples, 0.37%)</title><rect x="29.9630%" y="549" width="0.3699%" height="15" fill="rgb(239,167,4)" fg:x="972" fg:w="12"/><text x="30.2130%" y="559.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.06%)</title><rect x="30.3329%" y="549" width="0.0617%" height="15" fill="rgb(209,217,16)" fg:x="984" fg:w="2"/><text x="30.5829%" y="559.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (5 samples, 0.15%)</title><rect x="30.3946%" y="549" width="0.1541%" height="15" fill="rgb(219,88,35)" fg:x="986" fg:w="5"/><text x="30.6446%" y="559.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (89 samples, 2.74%)</title><rect x="28.0210%" y="565" width="2.7435%" height="15" fill="rgb(220,193,23)" fg:x="909" fg:w="89"/><text x="28.2710%" y="575.50">ch..</text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (7 samples, 0.22%)</title><rect x="30.5487%" y="549" width="0.2158%" height="15" fill="rgb(230,90,52)" fg:x="991" fg:w="7"/><text x="30.7987%" y="559.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (1 samples, 0.03%)</title><rect x="30.7645%" y="565" width="0.0308%" height="15" fill="rgb(252,106,19)" fg:x="998" fg:w="1"/><text x="31.0145%" y="575.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="30.7953%" y="565" width="0.0308%" height="15" fill="rgb(206,74,20)" fg:x="999" fg:w="1"/><text x="31.0453%" y="575.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.03%)</title><rect x="30.8261%" y="565" width="0.0308%" height="15" fill="rgb(230,138,44)" fg:x="1000" fg:w="1"/><text x="31.0761%" y="575.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.03%)</title><rect x="30.8570%" y="565" width="0.0308%" height="15" fill="rgb(235,182,43)" fg:x="1001" fg:w="1"/><text x="31.1070%" y="575.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="30.8878%" y="565" width="0.0308%" height="15" fill="rgb(242,16,51)" fg:x="1002" fg:w="1"/><text x="31.1378%" y="575.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (3 samples, 0.09%)</title><rect x="30.9186%" y="565" width="0.0925%" height="15" fill="rgb(248,9,4)" fg:x="1003" fg:w="3"/><text x="31.1686%" y="575.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (3 samples, 0.09%)</title><rect x="31.0111%" y="565" width="0.0925%" height="15" fill="rgb(210,31,22)" fg:x="1006" fg:w="3"/><text x="31.2611%" y="575.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (4 samples, 0.12%)</title><rect x="31.1036%" y="565" width="0.1233%" height="15" fill="rgb(239,54,39)" fg:x="1009" fg:w="4"/><text x="31.3536%" y="575.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (2 samples, 0.06%)</title><rect x="31.2269%" y="565" width="0.0617%" height="15" fill="rgb(230,99,41)" fg:x="1013" fg:w="2"/><text x="31.4769%" y="575.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (593 samples, 18.28%)</title><rect x="13.0395%" y="789" width="18.2799%" height="15" fill="rgb(253,106,12)" fg:x="423" fg:w="593"/><text x="13.2895%" y="799.50">&lt;chacha20poly1305::ChaChaPol..</text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::decrypt_in_place_detached (593 samples, 18.28%)</title><rect x="13.0395%" y="773" width="18.2799%" height="15" fill="rgb(213,46,41)" fg:x="423" fg:w="593"/><text x="13.2895%" y="783.50">chacha20poly1305::cipher::Ci..</text></g><g><title>cipher::stream::StreamCipher::apply_keystream (593 samples, 18.28%)</title><rect x="13.0395%" y="757" width="18.2799%" height="15" fill="rgb(215,133,35)" fg:x="423" fg:w="593"/><text x="13.2895%" y="767.50">cipher::stream::StreamCipher..</text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (593 samples, 18.28%)</title><rect x="13.0395%" y="741" width="18.2799%" height="15" fill="rgb(213,28,5)" fg:x="423" fg:w="593"/><text x="13.2895%" y="751.50">cipher::stream::StreamCipher..</text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (593 samples, 18.28%)</title><rect x="13.0395%" y="725" width="18.2799%" height="15" fill="rgb(215,77,49)" fg:x="423" fg:w="593"/><text x="13.2895%" y="735.50">&lt;cipher::stream_wrapper::Str..</text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (593 samples, 18.28%)</title><rect x="13.0395%" y="709" width="18.2799%" height="15" fill="rgb(248,100,22)" fg:x="423" fg:w="593"/><text x="13.2895%" y="719.50">cipher::stream_core::StreamC..</text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (593 samples, 18.28%)</title><rect x="13.0395%" y="693" width="18.2799%" height="15" fill="rgb(208,67,9)" fg:x="423" fg:w="593"/><text x="13.2895%" y="703.50">&lt;chacha20::xchacha::XChaChaC..</text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (593 samples, 18.28%)</title><rect x="13.0395%" y="677" width="18.2799%" height="15" fill="rgb(219,133,21)" fg:x="423" fg:w="593"/><text x="13.2895%" y="687.50">&lt;chacha20::ChaChaCore&lt;R&gt; as ..</text></g><g><title>chacha20::backends::avx2::inner (593 samples, 18.28%)</title><rect x="13.0395%" y="661" width="18.2799%" height="15" fill="rgb(246,46,29)" fg:x="423" fg:w="593"/><text x="13.2895%" y="671.50">chacha20::backends::avx2::in..</text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (593 samples, 18.28%)</title><rect x="13.0395%" y="645" width="18.2799%" height="15" fill="rgb(246,185,52)" fg:x="423" fg:w="593"/><text x="13.2895%" y="655.50">&lt;cipher::stream_core::ApplyB..</text></g><g><title>cipher::stream_core::StreamBackend::gen_tail_blocks (107 samples, 3.30%)</title><rect x="28.0210%" y="629" width="3.2984%" height="15" fill="rgb(252,136,11)" fg:x="909" fg:w="107"/><text x="28.2710%" y="639.50">cip..</text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (107 samples, 3.30%)</title><rect x="28.0210%" y="613" width="3.2984%" height="15" fill="rgb(219,138,53)" fg:x="909" fg:w="107"/><text x="28.2710%" y="623.50">&lt;ch..</text></g><g><title>chacha20::backends::avx2::rounds (107 samples, 3.30%)</title><rect x="28.0210%" y="597" width="3.2984%" height="15" fill="rgb(211,51,23)" fg:x="909" fg:w="107"/><text x="28.2710%" y="607.50">cha..</text></g><g><title>chacha20::backends::avx2::double_quarter_round (107 samples, 3.30%)</title><rect x="28.0210%" y="581" width="3.2984%" height="15" fill="rgb(247,221,28)" fg:x="909" fg:w="107"/><text x="28.2710%" y="591.50">cha..</text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="31.2885%" y="565" width="0.0308%" height="15" fill="rgb(251,222,45)" fg:x="1015" fg:w="1"/><text x="31.5385%" y="575.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (2 samples, 0.06%)</title><rect x="31.4427%" y="565" width="0.0617%" height="15" fill="rgb(217,162,53)" fg:x="1020" fg:w="2"/><text x="31.6927%" y="575.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (1 samples, 0.03%)</title><rect x="31.5043%" y="565" width="0.0308%" height="15" fill="rgb(229,93,14)" fg:x="1022" fg:w="1"/><text x="31.7543%" y="575.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="31.5968%" y="549" width="0.0308%" height="15" fill="rgb(209,67,49)" fg:x="1025" fg:w="1"/><text x="31.8468%" y="559.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.06%)</title><rect x="31.6276%" y="549" width="0.0617%" height="15" fill="rgb(213,87,29)" fg:x="1026" fg:w="2"/><text x="31.8776%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (6 samples, 0.18%)</title><rect x="31.5351%" y="565" width="0.1850%" height="15" fill="rgb(205,151,52)" fg:x="1023" fg:w="6"/><text x="31.7851%" y="575.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="31.6893%" y="549" width="0.0308%" height="15" fill="rgb(253,215,39)" fg:x="1028" fg:w="1"/><text x="31.9393%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.03%)</title><rect x="31.7201%" y="565" width="0.0308%" height="15" fill="rgb(221,220,41)" fg:x="1029" fg:w="1"/><text x="31.9701%" y="575.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="31.8126%" y="549" width="0.0308%" height="15" fill="rgb(218,133,21)" fg:x="1032" fg:w="1"/><text x="32.0626%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.03%)</title><rect x="31.8434%" y="549" width="0.0308%" height="15" fill="rgb(221,193,43)" fg:x="1033" fg:w="1"/><text x="32.0934%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (5 samples, 0.15%)</title><rect x="31.7509%" y="565" width="0.1541%" height="15" fill="rgb(240,128,52)" fg:x="1030" fg:w="5"/><text x="32.0009%" y="575.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="31.8742%" y="549" width="0.0308%" height="15" fill="rgb(253,114,12)" fg:x="1034" fg:w="1"/><text x="32.1242%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="31.9051%" y="549" width="0.0308%" height="15" fill="rgb(215,223,47)" fg:x="1035" fg:w="1"/><text x="32.1551%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (2 samples, 0.06%)</title><rect x="31.9051%" y="565" width="0.0617%" height="15" fill="rgb(248,225,23)" fg:x="1035" fg:w="2"/><text x="32.1551%" y="575.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="31.9359%" y="549" width="0.0308%" height="15" fill="rgb(250,108,0)" fg:x="1036" fg:w="1"/><text x="32.1859%" y="559.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.03%)</title><rect x="31.9975%" y="549" width="0.0308%" height="15" fill="rgb(228,208,7)" fg:x="1038" fg:w="1"/><text x="32.2475%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.03%)</title><rect x="32.0284%" y="549" width="0.0308%" height="15" fill="rgb(244,45,10)" fg:x="1039" fg:w="1"/><text x="32.2784%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (5 samples, 0.15%)</title><rect x="31.9667%" y="565" width="0.1541%" height="15" fill="rgb(207,125,25)" fg:x="1037" fg:w="5"/><text x="32.2167%" y="575.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (2 samples, 0.06%)</title><rect x="32.0592%" y="549" width="0.0617%" height="15" fill="rgb(210,195,18)" fg:x="1040" fg:w="2"/><text x="32.3092%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (3 samples, 0.09%)</title><rect x="32.1208%" y="565" width="0.0925%" height="15" fill="rgb(249,80,12)" fg:x="1042" fg:w="3"/><text x="32.3708%" y="575.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="32.1825%" y="549" width="0.0308%" height="15" fill="rgb(221,65,9)" fg:x="1044" fg:w="1"/><text x="32.4325%" y="559.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.03%)</title><rect x="32.2133%" y="565" width="0.0308%" height="15" fill="rgb(235,49,36)" fg:x="1045" fg:w="1"/><text x="32.4633%" y="575.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (11 samples, 0.34%)</title><rect x="32.2441%" y="565" width="0.3391%" height="15" fill="rgb(225,32,20)" fg:x="1046" fg:w="11"/><text x="32.4941%" y="575.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (6 samples, 0.18%)</title><rect x="32.5832%" y="565" width="0.1850%" height="15" fill="rgb(215,141,46)" fg:x="1057" fg:w="6"/><text x="32.8332%" y="575.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (5 samples, 0.15%)</title><rect x="32.7682%" y="565" width="0.1541%" height="15" fill="rgb(250,160,47)" fg:x="1063" fg:w="5"/><text x="33.0182%" y="575.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (55 samples, 1.70%)</title><rect x="31.3194%" y="581" width="1.6954%" height="15" fill="rgb(216,222,40)" fg:x="1016" fg:w="55"/><text x="31.5694%" y="591.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (3 samples, 0.09%)</title><rect x="32.9223%" y="565" width="0.0925%" height="15" fill="rgb(234,217,39)" fg:x="1068" fg:w="3"/><text x="33.1723%" y="575.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="33.0148%" y="581" width="0.0308%" height="15" fill="rgb(207,178,40)" fg:x="1071" fg:w="1"/><text x="33.2648%" y="591.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.03%)</title><rect x="33.0456%" y="581" width="0.0308%" height="15" fill="rgb(221,136,13)" fg:x="1072" fg:w="1"/><text x="33.2956%" y="591.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.06%)</title><rect x="33.0764%" y="581" width="0.0617%" height="15" fill="rgb(249,199,10)" fg:x="1073" fg:w="2"/><text x="33.3264%" y="591.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (2 samples, 0.06%)</title><rect x="33.1381%" y="581" width="0.0617%" height="15" fill="rgb(249,222,13)" fg:x="1075" fg:w="2"/><text x="33.3881%" y="591.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_par_ks_blocks (62 samples, 1.91%)</title><rect x="31.3194%" y="629" width="1.9112%" height="15" fill="rgb(244,185,38)" fg:x="1016" fg:w="62"/><text x="31.5694%" y="639.50">&lt;..</text></g><g><title>chacha20::backends::avx2::rounds (62 samples, 1.91%)</title><rect x="31.3194%" y="613" width="1.9112%" height="15" fill="rgb(236,202,9)" fg:x="1016" fg:w="62"/><text x="31.5694%" y="623.50">c..</text></g><g><title>chacha20::backends::avx2::double_quarter_round (62 samples, 1.91%)</title><rect x="31.3194%" y="597" width="1.9112%" height="15" fill="rgb(250,229,37)" fg:x="1016" fg:w="62"/><text x="31.5694%" y="607.50">c..</text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="33.1998%" y="581" width="0.0308%" height="15" fill="rgb(206,174,23)" fg:x="1077" fg:w="1"/><text x="33.4498%" y="591.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (2 samples, 0.06%)</title><rect x="33.2306%" y="549" width="0.0617%" height="15" fill="rgb(211,33,43)" fg:x="1078" fg:w="2"/><text x="33.4806%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="33.2922%" y="549" width="0.0308%" height="15" fill="rgb(245,58,50)" fg:x="1080" fg:w="1"/><text x="33.5422%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="33.3231%" y="549" width="0.0308%" height="15" fill="rgb(244,68,36)" fg:x="1081" fg:w="1"/><text x="33.5731%" y="559.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="33.3539%" y="549" width="0.0308%" height="15" fill="rgb(232,229,15)" fg:x="1082" fg:w="1"/><text x="33.6039%" y="559.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::encrypt_in_place_detached (68 samples, 2.10%)</title><rect x="31.3194%" y="789" width="2.0962%" height="15" fill="rgb(254,30,23)" fg:x="1016" fg:w="68"/><text x="31.5694%" y="799.50">&lt;..</text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::encrypt_in_place_detached (68 samples, 2.10%)</title><rect x="31.3194%" y="773" width="2.0962%" height="15" fill="rgb(235,160,14)" fg:x="1016" fg:w="68"/><text x="31.5694%" y="783.50">c..</text></g><g><title>cipher::stream::StreamCipher::apply_keystream (68 samples, 2.10%)</title><rect x="31.3194%" y="757" width="2.0962%" height="15" fill="rgb(212,155,44)" fg:x="1016" fg:w="68"/><text x="31.5694%" y="767.50">c..</text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (68 samples, 2.10%)</title><rect x="31.3194%" y="741" width="2.0962%" height="15" fill="rgb(226,2,50)" fg:x="1016" fg:w="68"/><text x="31.5694%" y="751.50">c..</text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (68 samples, 2.10%)</title><rect x="31.3194%" y="725" width="2.0962%" height="15" fill="rgb(234,177,6)" fg:x="1016" fg:w="68"/><text x="31.5694%" y="735.50">&lt;..</text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (68 samples, 2.10%)</title><rect x="31.3194%" y="709" width="2.0962%" height="15" fill="rgb(217,24,9)" fg:x="1016" fg:w="68"/><text x="31.5694%" y="719.50">c..</text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (68 samples, 2.10%)</title><rect x="31.3194%" y="693" width="2.0962%" height="15" fill="rgb(220,13,46)" fg:x="1016" fg:w="68"/><text x="31.5694%" y="703.50">&lt;..</text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (68 samples, 2.10%)</title><rect x="31.3194%" y="677" width="2.0962%" height="15" fill="rgb(239,221,27)" fg:x="1016" fg:w="68"/><text x="31.5694%" y="687.50">&lt;..</text></g><g><title>chacha20::backends::avx2::inner (68 samples, 2.10%)</title><rect x="31.3194%" y="661" width="2.0962%" height="15" fill="rgb(222,198,25)" fg:x="1016" fg:w="68"/><text x="31.5694%" y="671.50">c..</text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (68 samples, 2.10%)</title><rect x="31.3194%" y="645" width="2.0962%" height="15" fill="rgb(211,99,13)" fg:x="1016" fg:w="68"/><text x="31.5694%" y="655.50">&lt;..</text></g><g><title>cipher::stream_core::StreamBackend::gen_tail_blocks (6 samples, 0.18%)</title><rect x="33.2306%" y="629" width="0.1850%" height="15" fill="rgb(232,111,31)" fg:x="1078" fg:w="6"/><text x="33.4806%" y="639.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (6 samples, 0.18%)</title><rect x="33.2306%" y="613" width="0.1850%" height="15" fill="rgb(245,82,37)" fg:x="1078" fg:w="6"/><text x="33.4806%" y="623.50"></text></g><g><title>chacha20::backends::avx2::rounds (6 samples, 0.18%)</title><rect x="33.2306%" y="597" width="0.1850%" height="15" fill="rgb(227,149,46)" fg:x="1078" fg:w="6"/><text x="33.4806%" y="607.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (6 samples, 0.18%)</title><rect x="33.2306%" y="581" width="0.1850%" height="15" fill="rgb(218,36,50)" fg:x="1078" fg:w="6"/><text x="33.4806%" y="591.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (6 samples, 0.18%)</title><rect x="33.2306%" y="565" width="0.1850%" height="15" fill="rgb(226,80,48)" fg:x="1078" fg:w="6"/><text x="33.4806%" y="575.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="33.3847%" y="549" width="0.0308%" height="15" fill="rgb(238,224,15)" fg:x="1083" fg:w="1"/><text x="33.6347%" y="559.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (3 samples, 0.09%)</title><rect x="33.4155%" y="789" width="0.0925%" height="15" fill="rgb(241,136,10)" fg:x="1084" fg:w="3"/><text x="33.6655%" y="799.50"></text></g><g><title>inout::inout_buf::InOutBuf&lt;u8&gt;::xor_in2out (3 samples, 0.09%)</title><rect x="33.4155%" y="773" width="0.0925%" height="15" fill="rgb(208,32,45)" fg:x="1084" fg:w="3"/><text x="33.6655%" y="783.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.03%)</title><rect x="33.4772%" y="757" width="0.0308%" height="15" fill="rgb(207,135,9)" fg:x="1086" fg:w="1"/><text x="33.7272%" y="767.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (195 samples, 6.01%)</title><rect x="33.5080%" y="789" width="6.0111%" height="15" fill="rgb(206,86,44)" fg:x="1087" fg:w="195"/><text x="33.7580%" y="799.50">&lt;core::c..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.06%)</title><rect x="39.5191%" y="789" width="0.0617%" height="15" fill="rgb(245,177,15)" fg:x="1282" fg:w="2"/><text x="39.7691%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (41 samples, 1.26%)</title><rect x="39.5808%" y="789" width="1.2639%" height="15" fill="rgb(206,64,50)" fg:x="1284" fg:w="41"/><text x="39.8308%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (1 samples, 0.03%)</title><rect x="40.8446%" y="789" width="0.0308%" height="15" fill="rgb(234,36,40)" fg:x="1325" fg:w="1"/><text x="41.0946%" y="799.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.03%)</title><rect x="40.8446%" y="773" width="0.0308%" height="15" fill="rgb(213,64,8)" fg:x="1325" fg:w="1"/><text x="41.0946%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.03%)</title><rect x="40.8755%" y="789" width="0.0308%" height="15" fill="rgb(210,75,36)" fg:x="1326" fg:w="1"/><text x="41.1255%" y="799.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (27 samples, 0.83%)</title><rect x="40.9063%" y="789" width="0.8323%" height="15" fill="rgb(229,88,21)" fg:x="1327" fg:w="27"/><text x="41.1563%" y="799.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.03%)</title><rect x="41.7078%" y="773" width="0.0308%" height="15" fill="rgb(252,204,47)" fg:x="1353" fg:w="1"/><text x="41.9578%" y="783.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.03%)</title><rect x="41.7386%" y="789" width="0.0308%" height="15" fill="rgb(208,77,27)" fg:x="1354" fg:w="1"/><text x="41.9886%" y="799.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (2 samples, 0.06%)</title><rect x="41.7694%" y="421" width="0.0617%" height="15" fill="rgb(221,76,26)" fg:x="1355" fg:w="2"/><text x="42.0194%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="41.8311%" y="421" width="0.0308%" height="15" fill="rgb(225,139,18)" fg:x="1357" fg:w="1"/><text x="42.0811%" y="431.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (4 samples, 0.12%)</title><rect x="41.7694%" y="453" width="0.1233%" height="15" fill="rgb(230,137,11)" fg:x="1355" fg:w="4"/><text x="42.0194%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (4 samples, 0.12%)</title><rect x="41.7694%" y="437" width="0.1233%" height="15" fill="rgb(212,28,1)" fg:x="1355" fg:w="4"/><text x="42.0194%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="41.8619%" y="421" width="0.0308%" height="15" fill="rgb(248,164,17)" fg:x="1358" fg:w="1"/><text x="42.1119%" y="431.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 0.18%)</title><rect x="41.7694%" y="789" width="0.1850%" height="15" fill="rgb(222,171,42)" fg:x="1355" fg:w="6"/><text x="42.0194%" y="799.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (6 samples, 0.18%)</title><rect x="41.7694%" y="773" width="0.1850%" height="15" fill="rgb(243,84,45)" fg:x="1355" fg:w="6"/><text x="42.0194%" y="783.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (6 samples, 0.18%)</title><rect x="41.7694%" y="757" width="0.1850%" height="15" fill="rgb(252,49,23)" fg:x="1355" fg:w="6"/><text x="42.0194%" y="767.50"></text></g><g><title>tftp::server::multi_thread::spawn_writer::{{closure}} (6 samples, 0.18%)</title><rect x="41.7694%" y="741" width="0.1850%" height="15" fill="rgb(215,19,7)" fg:x="1355" fg:w="6"/><text x="42.0194%" y="751.50"></text></g><g><title>tftp::server::helpers::write::handle_write (6 samples, 0.18%)</title><rect x="41.7694%" y="725" width="0.1850%" height="15" fill="rgb(238,81,41)" fg:x="1355" fg:w="6"/><text x="42.0194%" y="735.50"></text></g><g><title>tftp::server::connection::Connection&lt;B,Rng&gt;::decrypt_packet (6 samples, 0.18%)</title><rect x="41.7694%" y="709" width="0.1850%" height="15" fill="rgb(210,199,37)" fg:x="1355" fg:w="6"/><text x="42.0194%" y="719.50"></text></g><g><title>tftp::encrypted_packet::EncryptedPacket::decrypt (6 samples, 0.18%)</title><rect x="41.7694%" y="693" width="0.1850%" height="15" fill="rgb(244,192,49)" fg:x="1355" fg:w="6"/><text x="42.0194%" y="703.50"></text></g><g><title>tftp::encryption::Encryptor&lt;R&gt;::decrypt (6 samples, 0.18%)</title><rect x="41.7694%" y="677" width="0.1850%" height="15" fill="rgb(226,211,11)" fg:x="1355" fg:w="6"/><text x="42.0194%" y="687.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (6 samples, 0.18%)</title><rect x="41.7694%" y="661" width="0.1850%" height="15" fill="rgb(236,162,54)" fg:x="1355" fg:w="6"/><text x="42.0194%" y="671.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (6 samples, 0.18%)</title><rect x="41.7694%" y="645" width="0.1850%" height="15" fill="rgb(220,229,9)" fg:x="1355" fg:w="6"/><text x="42.0194%" y="655.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (6 samples, 0.18%)</title><rect x="41.7694%" y="629" width="0.1850%" height="15" fill="rgb(250,87,22)" fg:x="1355" fg:w="6"/><text x="42.0194%" y="639.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (6 samples, 0.18%)</title><rect x="41.7694%" y="613" width="0.1850%" height="15" fill="rgb(239,43,17)" fg:x="1355" fg:w="6"/><text x="42.0194%" y="623.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (6 samples, 0.18%)</title><rect x="41.7694%" y="597" width="0.1850%" height="15" fill="rgb(231,177,25)" fg:x="1355" fg:w="6"/><text x="42.0194%" y="607.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::write_keystream_block (6 samples, 0.18%)</title><rect x="41.7694%" y="581" width="0.1850%" height="15" fill="rgb(219,179,1)" fg:x="1355" fg:w="6"/><text x="42.0194%" y="591.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (6 samples, 0.18%)</title><rect x="41.7694%" y="565" width="0.1850%" height="15" fill="rgb(238,219,53)" fg:x="1355" fg:w="6"/><text x="42.0194%" y="575.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (6 samples, 0.18%)</title><rect x="41.7694%" y="549" width="0.1850%" height="15" fill="rgb(232,167,36)" fg:x="1355" fg:w="6"/><text x="42.0194%" y="559.50"></text></g><g><title>chacha20::backends::avx2::inner (6 samples, 0.18%)</title><rect x="41.7694%" y="533" width="0.1850%" height="15" fill="rgb(244,19,51)" fg:x="1355" fg:w="6"/><text x="42.0194%" y="543.50"></text></g><g><title>&lt;cipher::stream_core::WriteBlockCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (6 samples, 0.18%)</title><rect x="41.7694%" y="517" width="0.1850%" height="15" fill="rgb(224,6,22)" fg:x="1355" fg:w="6"/><text x="42.0194%" y="527.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (6 samples, 0.18%)</title><rect x="41.7694%" y="501" width="0.1850%" height="15" fill="rgb(224,145,5)" fg:x="1355" fg:w="6"/><text x="42.0194%" y="511.50"></text></g><g><title>chacha20::backends::avx2::rounds (6 samples, 0.18%)</title><rect x="41.7694%" y="485" width="0.1850%" height="15" fill="rgb(234,130,49)" fg:x="1355" fg:w="6"/><text x="42.0194%" y="495.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (6 samples, 0.18%)</title><rect x="41.7694%" y="469" width="0.1850%" height="15" fill="rgb(254,6,2)" fg:x="1355" fg:w="6"/><text x="42.0194%" y="479.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (2 samples, 0.06%)</title><rect x="41.8927%" y="453" width="0.0617%" height="15" fill="rgb(208,96,46)" fg:x="1359" fg:w="2"/><text x="42.1427%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (2 samples, 0.06%)</title><rect x="41.8927%" y="437" width="0.0617%" height="15" fill="rgb(239,3,39)" fg:x="1359" fg:w="2"/><text x="42.1427%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (2 samples, 0.06%)</title><rect x="41.8927%" y="421" width="0.0617%" height="15" fill="rgb(233,210,1)" fg:x="1359" fg:w="2"/><text x="42.1427%" y="431.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.06%)</title><rect x="41.9544%" y="789" width="0.0617%" height="15" fill="rgb(244,137,37)" fg:x="1361" fg:w="2"/><text x="42.2044%" y="799.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (1 samples, 0.03%)</title><rect x="42.0160%" y="789" width="0.0308%" height="15" fill="rgb(240,136,2)" fg:x="1363" fg:w="1"/><text x="42.2660%" y="799.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.06%)</title><rect x="42.0469%" y="789" width="0.0617%" height="15" fill="rgb(239,18,37)" fg:x="1364" fg:w="2"/><text x="42.2969%" y="799.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.03%)</title><rect x="42.0777%" y="773" width="0.0308%" height="15" fill="rgb(218,185,22)" fg:x="1365" fg:w="1"/><text x="42.3277%" y="783.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (1 samples, 0.03%)</title><rect x="42.0777%" y="757" width="0.0308%" height="15" fill="rgb(225,218,4)" fg:x="1365" fg:w="1"/><text x="42.3277%" y="767.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (1 samples, 0.03%)</title><rect x="42.6326%" y="773" width="0.0308%" height="15" fill="rgb(230,182,32)" fg:x="1383" fg:w="1"/><text x="42.8826%" y="783.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (3 samples, 0.09%)</title><rect x="42.6634%" y="773" width="0.0925%" height="15" fill="rgb(242,56,43)" fg:x="1384" fg:w="3"/><text x="42.9134%" y="783.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (2 samples, 0.06%)</title><rect x="42.6942%" y="757" width="0.0617%" height="15" fill="rgb(233,99,24)" fg:x="1385" fg:w="2"/><text x="42.9442%" y="767.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (22 samples, 0.68%)</title><rect x="42.1085%" y="789" width="0.6782%" height="15" fill="rgb(234,209,42)" fg:x="1366" fg:w="22"/><text x="42.3585%" y="799.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::sub_ptr (1 samples, 0.03%)</title><rect x="42.7559%" y="773" width="0.0308%" height="15" fill="rgb(227,7,12)" fg:x="1387" fg:w="1"/><text x="43.0059%" y="783.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (1 samples, 0.03%)</title><rect x="42.7559%" y="757" width="0.0308%" height="15" fill="rgb(245,203,43)" fg:x="1387" fg:w="1"/><text x="43.0059%" y="767.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (39 samples, 1.20%)</title><rect x="44.0197%" y="773" width="1.2022%" height="15" fill="rgb(238,205,33)" fg:x="1428" fg:w="39"/><text x="44.2697%" y="783.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_sub (2 samples, 0.06%)</title><rect x="45.7152%" y="757" width="0.0617%" height="15" fill="rgb(231,56,7)" fg:x="1483" fg:w="2"/><text x="45.9652%" y="767.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::cast (1 samples, 0.03%)</title><rect x="45.7768%" y="757" width="0.0308%" height="15" fill="rgb(244,186,29)" fg:x="1485" fg:w="1"/><text x="46.0268%" y="767.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (104 samples, 3.21%)</title><rect x="42.7867%" y="789" width="3.2059%" height="15" fill="rgb(234,111,31)" fg:x="1388" fg:w="104"/><text x="43.0367%" y="799.50">&lt;co..</text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (25 samples, 0.77%)</title><rect x="45.2219%" y="773" width="0.7707%" height="15" fill="rgb(241,149,10)" fg:x="1467" fg:w="25"/><text x="45.4719%" y="783.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (6 samples, 0.18%)</title><rect x="45.8076%" y="757" width="0.1850%" height="15" fill="rgb(249,206,44)" fg:x="1486" fg:w="6"/><text x="46.0576%" y="767.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (2 samples, 0.06%)</title><rect x="45.9309%" y="741" width="0.0617%" height="15" fill="rgb(251,153,30)" fg:x="1490" fg:w="2"/><text x="46.1809%" y="751.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4 as curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4::blend::__Impl_blend__&gt;::_impl_blend (1 samples, 0.03%)</title><rect x="45.9926%" y="757" width="0.0308%" height="15" fill="rgb(239,152,38)" fg:x="1492" fg:w="1"/><text x="46.2426%" y="767.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4 as curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4::blend::__Impl_blend__&gt;::_impl_blend::blend_lanes (1 samples, 0.03%)</title><rect x="45.9926%" y="741" width="0.0308%" height="15" fill="rgb(249,139,47)" fg:x="1492" fg:w="1"/><text x="46.2426%" y="751.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4 as curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4::blend::__Impl_blend__&gt;::_impl_blend (1 samples, 0.03%)</title><rect x="45.9926%" y="725" width="0.0308%" height="15" fill="rgb(244,64,35)" fg:x="1492" fg:w="1"/><text x="46.2426%" y="735.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4 as curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4::blend::__Impl_blend__&gt;::_impl_blend::blend_lanes (1 samples, 0.03%)</title><rect x="45.9926%" y="709" width="0.0308%" height="15" fill="rgb(216,46,15)" fg:x="1492" fg:w="1"/><text x="46.2426%" y="719.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::avx2::edwards::ExtendedPoint as curve25519_dalek::backend::vector::avx2::edwards::ExtendedPoint::double::__Impl_double__&gt;::_impl_double (2 samples, 0.06%)</title><rect x="45.9926%" y="789" width="0.0617%" height="15" fill="rgb(250,74,19)" fg:x="1492" fg:w="2"/><text x="46.2426%" y="799.50"></text></g><g><title>curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4::blend (2 samples, 0.06%)</title><rect x="45.9926%" y="773" width="0.0617%" height="15" fill="rgb(249,42,33)" fg:x="1492" fg:w="2"/><text x="46.2426%" y="783.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="46.0234%" y="757" width="0.0308%" height="15" fill="rgb(242,149,17)" fg:x="1493" fg:w="1"/><text x="46.2734%" y="767.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4 as curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4::square_and_negate_D::__Impl_square_and_negate_D__&gt;::_impl_square_and_negate_D (1 samples, 0.03%)</title><rect x="46.0543%" y="789" width="0.0308%" height="15" fill="rgb(244,29,21)" fg:x="1494" fg:w="1"/><text x="46.3043%" y="799.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4 as curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4::square_and_negate_D::__Impl_square_and_negate_D__&gt;::_impl_square_and_negate_D::m (1 samples, 0.03%)</title><rect x="46.0543%" y="773" width="0.0308%" height="15" fill="rgb(220,130,37)" fg:x="1494" fg:w="1"/><text x="46.3043%" y="783.50"></text></g><g><title>curve25519_dalek::backend::vector::packed_simd::u32x8::mul32 (1 samples, 0.03%)</title><rect x="46.0543%" y="757" width="0.0308%" height="15" fill="rgb(211,67,2)" fg:x="1494" fg:w="1"/><text x="46.3043%" y="767.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::packed_simd::u32x8 as curve25519_dalek::backend::vector::packed_simd::u32x8::mul32::__Impl_mul32__&gt;::_impl_mul32 (1 samples, 0.03%)</title><rect x="46.0543%" y="741" width="0.0308%" height="15" fill="rgb(235,68,52)" fg:x="1494" fg:w="1"/><text x="46.3043%" y="751.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::packed_simd::u64x4 as &lt;curve25519_dalek::backend::vector::packed_simd::u64x4 as core::ops::arith::Add&gt;::add::__Impl_add__&gt;::_impl_add (1 samples, 0.03%)</title><rect x="46.0543%" y="725" width="0.0308%" height="15" fill="rgb(246,142,3)" fg:x="1494" fg:w="1"/><text x="46.3043%" y="735.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (3 samples, 0.09%)</title><rect x="46.0851%" y="789" width="0.0925%" height="15" fill="rgb(241,25,7)" fg:x="1495" fg:w="3"/><text x="46.3351%" y="799.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (53 samples, 1.63%)</title><rect x="46.1776%" y="789" width="1.6338%" height="15" fill="rgb(242,119,39)" fg:x="1498" fg:w="53"/><text x="46.4276%" y="799.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (3 samples, 0.09%)</title><rect x="47.8113%" y="789" width="0.0925%" height="15" fill="rgb(241,98,45)" fg:x="1551" fg:w="3"/><text x="48.0613%" y="799.50"></text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (3 samples, 0.09%)</title><rect x="47.8113%" y="773" width="0.0925%" height="15" fill="rgb(254,28,30)" fg:x="1551" fg:w="3"/><text x="48.0613%" y="783.50"></text></g><g><title>universal_hash::to_blocks (1 samples, 0.03%)</title><rect x="47.8730%" y="757" width="0.0308%" height="15" fill="rgb(241,142,54)" fg:x="1553" fg:w="1"/><text x="48.1230%" y="767.50"></text></g><g><title>&lt;std::os::fd::owned::BorrowedFd as std::os::fd::raw::AsRawFd&gt;::as_raw_fd (1 samples, 0.03%)</title><rect x="47.9038%" y="789" width="0.0308%" height="15" fill="rgb(222,85,15)" fg:x="1554" fg:w="1"/><text x="48.1538%" y="799.50"></text></g><g><title>&lt;std::os::fd::owned::OwnedFd as std::os::fd::owned::AsFd&gt;::as_fd (1 samples, 0.03%)</title><rect x="47.9346%" y="789" width="0.0308%" height="15" fill="rgb(210,85,47)" fg:x="1555" fg:w="1"/><text x="48.1846%" y="799.50"></text></g><g><title>&lt;u8 as subtle::ConstantTimeEq&gt;::ct_eq (1 samples, 0.03%)</title><rect x="47.9655%" y="789" width="0.0308%" height="15" fill="rgb(224,206,25)" fg:x="1556" fg:w="1"/><text x="48.2155%" y="799.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (4 samples, 0.12%)</title><rect x="47.9963%" y="789" width="0.1233%" height="15" fill="rgb(243,201,19)" fg:x="1557" fg:w="4"/><text x="48.2463%" y="799.50"></text></g><g><title>[tftp] (1 samples, 0.03%)</title><rect x="48.1196%" y="789" width="0.0308%" height="15" fill="rgb(236,59,4)" fg:x="1561" fg:w="1"/><text x="48.3696%" y="799.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi64 (1 samples, 0.03%)</title><rect x="48.1196%" y="773" width="0.0308%" height="15" fill="rgb(254,179,45)" fg:x="1561" fg:w="1"/><text x="48.3696%" y="783.50"></text></g><g><title>__memcpy_avx_unaligned (2 samples, 0.06%)</title><rect x="48.1504%" y="789" width="0.0617%" height="15" fill="rgb(226,14,10)" fg:x="1562" fg:w="2"/><text x="48.4004%" y="799.50"></text></g><g><title>__memcpy_avx_unaligned_erms (4 samples, 0.12%)</title><rect x="48.2121%" y="789" width="0.1233%" height="15" fill="rgb(244,27,41)" fg:x="1564" fg:w="4"/><text x="48.4621%" y="799.50"></text></g><g><title>_init (1 samples, 0.03%)</title><rect x="48.3354%" y="789" width="0.0308%" height="15" fill="rgb(235,35,32)" fg:x="1568" fg:w="1"/><text x="48.5854%" y="799.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="48.3662%" y="789" width="0.0308%" height="15" fill="rgb(218,68,31)" fg:x="1569" fg:w="1"/><text x="48.6162%" y="799.50"></text></g><g><title>chacha20::xchacha::hchacha (2 samples, 0.06%)</title><rect x="48.3970%" y="789" width="0.0617%" height="15" fill="rgb(207,120,37)" fg:x="1570" fg:w="2"/><text x="48.6470%" y="799.50"></text></g><g><title>chacha20::xchacha::quarter_round (3 samples, 0.09%)</title><rect x="48.4587%" y="789" width="0.0925%" height="15" fill="rgb(227,98,0)" fg:x="1572" fg:w="3"/><text x="48.7087%" y="799.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.03%)</title><rect x="48.5203%" y="773" width="0.0308%" height="15" fill="rgb(207,7,3)" fg:x="1574" fg:w="1"/><text x="48.7703%" y="783.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::authenticate_lengths (2 samples, 0.06%)</title><rect x="48.5512%" y="789" width="0.0617%" height="15" fill="rgb(206,98,19)" fg:x="1575" fg:w="2"/><text x="48.8012%" y="799.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (2 samples, 0.06%)</title><rect x="48.6128%" y="789" width="0.0617%" height="15" fill="rgb(217,5,26)" fg:x="1577" fg:w="2"/><text x="48.8628%" y="799.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.03%)</title><rect x="48.6436%" y="773" width="0.0308%" height="15" fill="rgb(235,190,38)" fg:x="1578" fg:w="1"/><text x="48.8936%" y="783.50"></text></g><g><title>rustix::backend::arch::asm::syscall4_readonly (1 samples, 0.03%)</title><rect x="48.6436%" y="757" width="0.0308%" height="15" fill="rgb(247,86,24)" fg:x="1578" fg:w="1"/><text x="48.8936%" y="767.50"></text></g><g><title>core::array::&lt;impl core::iter::traits::collect::IntoIterator for &amp;mut [T: N]&gt;::into_iter (3 samples, 0.09%)</title><rect x="48.6745%" y="789" width="0.0925%" height="15" fill="rgb(205,101,16)" fg:x="1579" fg:w="3"/><text x="48.9245%" y="799.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (2 samples, 0.06%)</title><rect x="48.7053%" y="773" width="0.0617%" height="15" fill="rgb(246,168,33)" fg:x="1580" fg:w="2"/><text x="48.9553%" y="783.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (2 samples, 0.06%)</title><rect x="48.7053%" y="757" width="0.0617%" height="15" fill="rgb(231,114,1)" fg:x="1580" fg:w="2"/><text x="48.9553%" y="767.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (2 samples, 0.06%)</title><rect x="48.7053%" y="741" width="0.0617%" height="15" fill="rgb(207,184,53)" fg:x="1580" fg:w="2"/><text x="48.9553%" y="751.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.03%)</title><rect x="48.7670%" y="789" width="0.0308%" height="15" fill="rgb(224,95,51)" fg:x="1582" fg:w="1"/><text x="49.0170%" y="799.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (12 samples, 0.37%)</title><rect x="48.7978%" y="789" width="0.3699%" height="15" fill="rgb(212,188,45)" fg:x="1583" fg:w="12"/><text x="49.0478%" y="799.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (16 samples, 0.49%)</title><rect x="49.1677%" y="789" width="0.4932%" height="15" fill="rgb(223,154,38)" fg:x="1595" fg:w="16"/><text x="49.4177%" y="799.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.03%)</title><rect x="49.6609%" y="789" width="0.0308%" height="15" fill="rgb(251,22,52)" fg:x="1611" fg:w="1"/><text x="49.9109%" y="799.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (3 samples, 0.09%)</title><rect x="49.6917%" y="789" width="0.0925%" height="15" fill="rgb(229,209,22)" fg:x="1612" fg:w="3"/><text x="49.9417%" y="799.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (1 samples, 0.03%)</title><rect x="49.7842%" y="789" width="0.0308%" height="15" fill="rgb(234,138,34)" fg:x="1615" fg:w="1"/><text x="50.0342%" y="799.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (6 samples, 0.18%)</title><rect x="49.8150%" y="789" width="0.1850%" height="15" fill="rgb(212,95,11)" fg:x="1616" fg:w="6"/><text x="50.0650%" y="799.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (2 samples, 0.06%)</title><rect x="50.0000%" y="789" width="0.0617%" height="15" fill="rgb(240,179,47)" fg:x="1622" fg:w="2"/><text x="50.2500%" y="799.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.03%)</title><rect x="50.0617%" y="789" width="0.0308%" height="15" fill="rgb(240,163,11)" fg:x="1624" fg:w="1"/><text x="50.3117%" y="799.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (2 samples, 0.06%)</title><rect x="50.0925%" y="789" width="0.0617%" height="15" fill="rgb(236,37,12)" fg:x="1625" fg:w="2"/><text x="50.3425%" y="799.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (13 samples, 0.40%)</title><rect x="50.1541%" y="789" width="0.4007%" height="15" fill="rgb(232,164,16)" fg:x="1627" fg:w="13"/><text x="50.4041%" y="799.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (1 samples, 0.03%)</title><rect x="50.5549%" y="789" width="0.0308%" height="15" fill="rgb(244,205,15)" fg:x="1640" fg:w="1"/><text x="50.8049%" y="799.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (9 samples, 0.28%)</title><rect x="50.5857%" y="789" width="0.2774%" height="15" fill="rgb(223,117,47)" fg:x="1641" fg:w="9"/><text x="50.8357%" y="799.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (2 samples, 0.06%)</title><rect x="50.8631%" y="789" width="0.0617%" height="15" fill="rgb(244,107,35)" fg:x="1650" fg:w="2"/><text x="51.1131%" y="799.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="50.9248%" y="789" width="0.0308%" height="15" fill="rgb(205,140,8)" fg:x="1652" fg:w="1"/><text x="51.1748%" y="799.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (6 samples, 0.18%)</title><rect x="50.9556%" y="789" width="0.1850%" height="15" fill="rgb(228,84,46)" fg:x="1653" fg:w="6"/><text x="51.2056%" y="799.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (18 samples, 0.55%)</title><rect x="51.1406%" y="789" width="0.5549%" height="15" fill="rgb(254,188,9)" fg:x="1659" fg:w="18"/><text x="51.3906%" y="799.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (7 samples, 0.22%)</title><rect x="51.6954%" y="789" width="0.2158%" height="15" fill="rgb(206,112,54)" fg:x="1677" fg:w="7"/><text x="51.9454%" y="799.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (4 samples, 0.12%)</title><rect x="51.9112%" y="789" width="0.1233%" height="15" fill="rgb(216,84,49)" fg:x="1684" fg:w="4"/><text x="52.1612%" y="799.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="52.0345%" y="789" width="0.0308%" height="15" fill="rgb(214,194,35)" fg:x="1688" fg:w="1"/><text x="52.2845%" y="799.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_storeu_si128 (1 samples, 0.03%)</title><rect x="52.0654%" y="789" width="0.0308%" height="15" fill="rgb(249,28,3)" fg:x="1689" fg:w="1"/><text x="52.3154%" y="799.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_unaligned (1 samples, 0.03%)</title><rect x="52.0654%" y="773" width="0.0308%" height="15" fill="rgb(222,56,52)" fg:x="1689" fg:w="1"/><text x="52.3154%" y="783.50"></text></g><g><title>core::ptr::write_unaligned (1 samples, 0.03%)</title><rect x="52.0654%" y="757" width="0.0308%" height="15" fill="rgb(245,217,50)" fg:x="1689" fg:w="1"/><text x="52.3154%" y="767.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.03%)</title><rect x="52.0654%" y="741" width="0.0308%" height="15" fill="rgb(213,201,24)" fg:x="1689" fg:w="1"/><text x="52.3154%" y="751.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.06%)</title><rect x="52.0962%" y="789" width="0.0617%" height="15" fill="rgb(248,116,28)" fg:x="1690" fg:w="2"/><text x="52.3462%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.09%)</title><rect x="52.1578%" y="789" width="0.0925%" height="15" fill="rgb(219,72,43)" fg:x="1692" fg:w="3"/><text x="52.4078%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (38 samples, 1.17%)</title><rect x="52.2503%" y="789" width="1.1714%" height="15" fill="rgb(209,138,14)" fg:x="1695" fg:w="38"/><text x="52.5003%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (1 samples, 0.03%)</title><rect x="53.4217%" y="789" width="0.0308%" height="15" fill="rgb(222,18,33)" fg:x="1733" fg:w="1"/><text x="53.6717%" y="799.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.03%)</title><rect x="53.4525%" y="789" width="0.0308%" height="15" fill="rgb(213,199,7)" fg:x="1734" fg:w="1"/><text x="53.7025%" y="799.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.03%)</title><rect x="53.4834%" y="789" width="0.0308%" height="15" fill="rgb(250,110,10)" fg:x="1735" fg:w="1"/><text x="53.7334%" y="799.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (1 samples, 0.03%)</title><rect x="53.4834%" y="773" width="0.0308%" height="15" fill="rgb(248,123,6)" fg:x="1735" fg:w="1"/><text x="53.7334%" y="783.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.03%)</title><rect x="53.4834%" y="757" width="0.0308%" height="15" fill="rgb(206,91,31)" fg:x="1735" fg:w="1"/><text x="53.7334%" y="767.50"></text></g><g><title>std::panicking::try (1 samples, 0.03%)</title><rect x="53.4834%" y="741" width="0.0308%" height="15" fill="rgb(211,154,13)" fg:x="1735" fg:w="1"/><text x="53.7334%" y="751.50"></text></g><g><title>__rust_try (1 samples, 0.03%)</title><rect x="53.4834%" y="725" width="0.0308%" height="15" fill="rgb(225,148,7)" fg:x="1735" fg:w="1"/><text x="53.7334%" y="735.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.03%)</title><rect x="53.4834%" y="709" width="0.0308%" height="15" fill="rgb(220,160,43)" fg:x="1735" fg:w="1"/><text x="53.7334%" y="719.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.03%)</title><rect x="53.4834%" y="693" width="0.0308%" height="15" fill="rgb(213,52,39)" fg:x="1735" fg:w="1"/><text x="53.7334%" y="703.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (1 samples, 0.03%)</title><rect x="53.4834%" y="677" width="0.0308%" height="15" fill="rgb(243,137,7)" fg:x="1735" fg:w="1"/><text x="53.7334%" y="687.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.03%)</title><rect x="53.4834%" y="661" width="0.0308%" height="15" fill="rgb(230,79,13)" fg:x="1735" fg:w="1"/><text x="53.7334%" y="671.50"></text></g><g><title>tftp::server::multi_thread::spawn_writer::{{closure}} (1 samples, 0.03%)</title><rect x="53.4834%" y="645" width="0.0308%" height="15" fill="rgb(247,105,23)" fg:x="1735" fg:w="1"/><text x="53.7334%" y="655.50"></text></g><g><title>tftp::server::helpers::write::handle_write (1 samples, 0.03%)</title><rect x="53.4834%" y="629" width="0.0308%" height="15" fill="rgb(223,179,41)" fg:x="1735" fg:w="1"/><text x="53.7334%" y="639.50"></text></g><g><title>tftp::server::connection::Connection&lt;B,Rng&gt;::send_packet (1 samples, 0.03%)</title><rect x="53.4834%" y="613" width="0.0308%" height="15" fill="rgb(218,9,34)" fg:x="1735" fg:w="1"/><text x="53.7334%" y="623.50"></text></g><g><title>tftp::server::connection::Connection&lt;B,Rng&gt;::send_bytes (1 samples, 0.03%)</title><rect x="53.4834%" y="597" width="0.0308%" height="15" fill="rgb(222,106,8)" fg:x="1735" fg:w="1"/><text x="53.7334%" y="607.50"></text></g><g><title>tftp::encrypted_packet::EncryptedPacket::encrypt (1 samples, 0.03%)</title><rect x="53.4834%" y="581" width="0.0308%" height="15" fill="rgb(211,220,0)" fg:x="1735" fg:w="1"/><text x="53.7334%" y="591.50"></text></g><g><title>tftp::encryption::Encryptor&lt;R&gt;::encrypt (1 samples, 0.03%)</title><rect x="53.4834%" y="565" width="0.0308%" height="15" fill="rgb(229,52,16)" fg:x="1735" fg:w="1"/><text x="53.7334%" y="575.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::encrypt_in_place_detached (1 samples, 0.03%)</title><rect x="53.4834%" y="549" width="0.0308%" height="15" fill="rgb(212,155,18)" fg:x="1735" fg:w="1"/><text x="53.7334%" y="559.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::encrypt_in_place_detached (1 samples, 0.03%)</title><rect x="53.4834%" y="533" width="0.0308%" height="15" fill="rgb(242,21,14)" fg:x="1735" fg:w="1"/><text x="53.7334%" y="543.50"></text></g><g><title>universal_hash::UniversalHash::update_padded (1 samples, 0.03%)</title><rect x="53.4834%" y="517" width="0.0308%" height="15" fill="rgb(222,19,48)" fg:x="1735" fg:w="1"/><text x="53.7334%" y="527.50"></text></g><g><title>universal_hash::UniversalHash::update (1 samples, 0.03%)</title><rect x="53.4834%" y="501" width="0.0308%" height="15" fill="rgb(232,45,27)" fg:x="1735" fg:w="1"/><text x="53.7334%" y="511.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (1 samples, 0.03%)</title><rect x="53.4834%" y="485" width="0.0308%" height="15" fill="rgb(249,103,42)" fg:x="1735" fg:w="1"/><text x="53.7334%" y="495.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (1 samples, 0.03%)</title><rect x="53.4834%" y="469" width="0.0308%" height="15" fill="rgb(246,81,33)" fg:x="1735" fg:w="1"/><text x="53.7334%" y="479.50"></text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (1 samples, 0.03%)</title><rect x="53.4834%" y="453" width="0.0308%" height="15" fill="rgb(252,33,42)" fg:x="1735" fg:w="1"/><text x="53.7334%" y="463.50"></text></g><g><title>&lt;poly1305::backend::avx2::State as universal_hash::UhfBackend&gt;::proc_par_blocks (1 samples, 0.03%)</title><rect x="53.4834%" y="437" width="0.0308%" height="15" fill="rgb(209,212,41)" fg:x="1735" fg:w="1"/><text x="53.7334%" y="447.50"></text></g><g><title>poly1305::backend::avx2::State::compute_par_blocks (1 samples, 0.03%)</title><rect x="53.4834%" y="421" width="0.0308%" height="15" fill="rgb(207,154,6)" fg:x="1735" fg:w="1"/><text x="53.7334%" y="431.50"></text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_par_blocks (1 samples, 0.03%)</title><rect x="53.4834%" y="405" width="0.0308%" height="15" fill="rgb(223,64,47)" fg:x="1735" fg:w="1"/><text x="53.7334%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.03%)</title><rect x="53.4834%" y="389" width="0.0308%" height="15" fill="rgb(211,161,38)" fg:x="1735" fg:w="1"/><text x="53.7334%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (1 samples, 0.03%)</title><rect x="53.5142%" y="789" width="0.0308%" height="15" fill="rgb(219,138,40)" fg:x="1736" fg:w="1"/><text x="53.7642%" y="799.50"></text></g><g><title>core::ptr::read (2 samples, 0.06%)</title><rect x="53.5450%" y="789" width="0.0617%" height="15" fill="rgb(241,228,46)" fg:x="1737" fg:w="2"/><text x="53.7950%" y="799.50"></text></g><g><title>core::ptr::write (1 samples, 0.03%)</title><rect x="53.6067%" y="789" width="0.0308%" height="15" fill="rgb(223,209,38)" fg:x="1739" fg:w="1"/><text x="53.8567%" y="799.50"></text></g><g><title>core::ptr::write_volatile (1 samples, 0.03%)</title><rect x="53.6375%" y="789" width="0.0308%" height="15" fill="rgb(236,164,45)" fg:x="1740" fg:w="1"/><text x="53.8875%" y="799.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::chunks_exact (1 samples, 0.03%)</title><rect x="53.6683%" y="789" width="0.0308%" height="15" fill="rgb(231,15,5)" fg:x="1741" fg:w="1"/><text x="53.9183%" y="799.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.03%)</title><rect x="54.1615%" y="757" width="0.0308%" height="15" fill="rgb(252,35,15)" fg:x="1757" fg:w="1"/><text x="54.4115%" y="767.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (17 samples, 0.52%)</title><rect x="53.6991%" y="789" width="0.5240%" height="15" fill="rgb(248,181,18)" fg:x="1742" fg:w="17"/><text x="53.9491%" y="799.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (13 samples, 0.40%)</title><rect x="53.8224%" y="773" width="0.4007%" height="15" fill="rgb(233,39,42)" fg:x="1746" fg:w="13"/><text x="54.0724%" y="783.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::as_mut_ptr (1 samples, 0.03%)</title><rect x="54.1924%" y="757" width="0.0308%" height="15" fill="rgb(238,110,33)" fg:x="1758" fg:w="1"/><text x="54.4424%" y="767.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at (1 samples, 0.03%)</title><rect x="54.2232%" y="789" width="0.0308%" height="15" fill="rgb(233,195,10)" fg:x="1759" fg:w="1"/><text x="54.4732%" y="799.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::cast (2 samples, 0.06%)</title><rect x="54.5931%" y="757" width="0.0617%" height="15" fill="rgb(254,105,3)" fg:x="1771" fg:w="2"/><text x="54.8431%" y="767.50"></text></g><g><title>core::slice::raw::from_raw_parts (33 samples, 1.02%)</title><rect x="54.2540%" y="789" width="1.0173%" height="15" fill="rgb(221,225,9)" fg:x="1760" fg:w="33"/><text x="54.5040%" y="799.50"></text></g><g><title>core::ptr::slice_from_raw_parts (22 samples, 0.68%)</title><rect x="54.5931%" y="773" width="0.6782%" height="15" fill="rgb(224,227,45)" fg:x="1771" fg:w="22"/><text x="54.8431%" y="783.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (20 samples, 0.62%)</title><rect x="54.6547%" y="757" width="0.6165%" height="15" fill="rgb(229,198,43)" fg:x="1773" fg:w="20"/><text x="54.9047%" y="767.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (14 samples, 0.43%)</title><rect x="55.2713%" y="789" width="0.4316%" height="15" fill="rgb(206,209,35)" fg:x="1793" fg:w="14"/><text x="55.5213%" y="799.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (13 samples, 0.40%)</title><rect x="55.3021%" y="773" width="0.4007%" height="15" fill="rgb(245,195,53)" fg:x="1794" fg:w="13"/><text x="55.5521%" y="783.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (13 samples, 0.40%)</title><rect x="55.3021%" y="757" width="0.4007%" height="15" fill="rgb(240,92,26)" fg:x="1794" fg:w="13"/><text x="55.5521%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.03%)</title><rect x="55.7028%" y="789" width="0.0308%" height="15" fill="rgb(207,40,23)" fg:x="1807" fg:w="1"/><text x="55.9528%" y="799.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (2 samples, 0.06%)</title><rect x="55.7337%" y="789" width="0.0617%" height="15" fill="rgb(223,111,35)" fg:x="1808" fg:w="2"/><text x="55.9837%" y="799.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::iter_position (3 samples, 0.09%)</title><rect x="55.7953%" y="789" width="0.0925%" height="15" fill="rgb(229,147,28)" fg:x="1810" fg:w="3"/><text x="56.0453%" y="799.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.03%)</title><rect x="55.8570%" y="773" width="0.0308%" height="15" fill="rgb(211,29,28)" fg:x="1812" fg:w="1"/><text x="56.1070%" y="783.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::new (1 samples, 0.03%)</title><rect x="55.8878%" y="789" width="0.0308%" height="15" fill="rgb(228,72,33)" fg:x="1813" fg:w="1"/><text x="56.1378%" y="799.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (10 samples, 0.31%)</title><rect x="55.9186%" y="789" width="0.3083%" height="15" fill="rgb(205,214,31)" fg:x="1814" fg:w="10"/><text x="56.1686%" y="799.50"></text></g><g><title>getrandom::getrandom_uninit (1 samples, 0.03%)</title><rect x="56.2269%" y="789" width="0.0308%" height="15" fill="rgb(224,111,15)" fg:x="1824" fg:w="1"/><text x="56.4769%" y="799.50"></text></g><g><title>polling::epoll::epoll_flags (1 samples, 0.03%)</title><rect x="56.2577%" y="789" width="0.0308%" height="15" fill="rgb(253,21,26)" fg:x="1825" fg:w="1"/><text x="56.5077%" y="799.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (1 samples, 0.03%)</title><rect x="56.3810%" y="725" width="0.0308%" height="15" fill="rgb(245,139,43)" fg:x="1829" fg:w="1"/><text x="56.6310%" y="735.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="56.4118%" y="725" width="0.0308%" height="15" fill="rgb(252,170,7)" fg:x="1830" fg:w="1"/><text x="56.6618%" y="735.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="56.4118%" y="709" width="0.0308%" height="15" fill="rgb(231,118,14)" fg:x="1830" fg:w="1"/><text x="56.6618%" y="719.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="56.4118%" y="693" width="0.0308%" height="15" fill="rgb(238,83,0)" fg:x="1830" fg:w="1"/><text x="56.6618%" y="703.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (4 samples, 0.12%)</title><rect x="56.3502%" y="741" width="0.1233%" height="15" fill="rgb(221,39,39)" fg:x="1828" fg:w="4"/><text x="56.6002%" y="751.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="56.4427%" y="725" width="0.0308%" height="15" fill="rgb(222,119,46)" fg:x="1831" fg:w="1"/><text x="56.6927%" y="735.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.03%)</title><rect x="56.4427%" y="709" width="0.0308%" height="15" fill="rgb(222,165,49)" fg:x="1831" fg:w="1"/><text x="56.6927%" y="719.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.03%)</title><rect x="56.4735%" y="741" width="0.0308%" height="15" fill="rgb(219,113,52)" fg:x="1832" fg:w="1"/><text x="56.7235%" y="751.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::AdditionKey as core::ops::arith::Add&lt;poly1305::backend::avx2::helpers::Aligned130&gt;&gt;::add::propagate_carry (1 samples, 0.03%)</title><rect x="56.4735%" y="725" width="0.0308%" height="15" fill="rgb(214,7,15)" fg:x="1832" fg:w="1"/><text x="56.7235%" y="735.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (1 samples, 0.03%)</title><rect x="56.5043%" y="741" width="0.0308%" height="15" fill="rgb(235,32,4)" fg:x="1833" fg:w="1"/><text x="56.7543%" y="751.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.03%)</title><rect x="56.5351%" y="741" width="0.0308%" height="15" fill="rgb(238,90,54)" fg:x="1834" fg:w="1"/><text x="56.7851%" y="751.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (2 samples, 0.06%)</title><rect x="56.5660%" y="741" width="0.0617%" height="15" fill="rgb(213,208,19)" fg:x="1835" fg:w="2"/><text x="56.8160%" y="751.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (1 samples, 0.03%)</title><rect x="56.5968%" y="725" width="0.0308%" height="15" fill="rgb(233,156,4)" fg:x="1836" fg:w="1"/><text x="56.8468%" y="735.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (1 samples, 0.03%)</title><rect x="56.6276%" y="741" width="0.0308%" height="15" fill="rgb(207,194,5)" fg:x="1837" fg:w="1"/><text x="56.8776%" y="751.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.06%)</title><rect x="56.6584%" y="741" width="0.0617%" height="15" fill="rgb(206,111,30)" fg:x="1838" fg:w="2"/><text x="56.9084%" y="751.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (3 samples, 0.09%)</title><rect x="56.7201%" y="741" width="0.0925%" height="15" fill="rgb(243,70,54)" fg:x="1840" fg:w="3"/><text x="56.9701%" y="751.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="56.8126%" y="741" width="0.0308%" height="15" fill="rgb(242,28,8)" fg:x="1843" fg:w="1"/><text x="57.0626%" y="751.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::AdditionKey as core::ops::arith::Add&lt;poly1305::backend::avx2::helpers::Aligned130&gt;&gt;::add::propagate_carry (20 samples, 0.62%)</title><rect x="56.2885%" y="757" width="0.6165%" height="15" fill="rgb(219,106,18)" fg:x="1826" fg:w="20"/><text x="56.5385%" y="767.50"></text></g><g><title>poly1305::backend::avx2::State::finalize (2 samples, 0.06%)</title><rect x="56.8434%" y="741" width="0.0617%" height="15" fill="rgb(244,222,10)" fg:x="1844" fg:w="2"/><text x="57.0934%" y="751.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::AdditionKey as core::ops::arith::Add&lt;poly1305::backend::avx2::helpers::Aligned130&gt;&gt;::add (2 samples, 0.06%)</title><rect x="56.8434%" y="725" width="0.0617%" height="15" fill="rgb(236,179,52)" fg:x="1844" fg:w="2"/><text x="57.0934%" y="735.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.03%)</title><rect x="56.9051%" y="725" width="0.0308%" height="15" fill="rgb(213,23,39)" fg:x="1846" fg:w="1"/><text x="57.1551%" y="735.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.03%)</title><rect x="56.9051%" y="709" width="0.0308%" height="15" fill="rgb(238,48,10)" fg:x="1846" fg:w="1"/><text x="57.1551%" y="719.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="56.9359%" y="725" width="0.0308%" height="15" fill="rgb(251,196,23)" fg:x="1847" fg:w="1"/><text x="57.1859%" y="735.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (3 samples, 0.09%)</title><rect x="56.9051%" y="741" width="0.0925%" height="15" fill="rgb(250,152,24)" fg:x="1846" fg:w="3"/><text x="57.1551%" y="751.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="56.9667%" y="725" width="0.0308%" height="15" fill="rgb(209,150,17)" fg:x="1848" fg:w="1"/><text x="57.2167%" y="735.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi32 (1 samples, 0.03%)</title><rect x="56.9975%" y="725" width="0.0308%" height="15" fill="rgb(234,202,34)" fg:x="1849" fg:w="1"/><text x="57.2475%" y="735.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi32 (1 samples, 0.03%)</title><rect x="56.9975%" y="709" width="0.0308%" height="15" fill="rgb(253,148,53)" fg:x="1849" fg:w="1"/><text x="57.2475%" y="719.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (2 samples, 0.06%)</title><rect x="56.9975%" y="741" width="0.0617%" height="15" fill="rgb(218,129,16)" fg:x="1849" fg:w="2"/><text x="57.2475%" y="751.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="57.0284%" y="725" width="0.0308%" height="15" fill="rgb(216,85,19)" fg:x="1850" fg:w="1"/><text x="57.2784%" y="735.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="57.0592%" y="741" width="0.0308%" height="15" fill="rgb(235,228,7)" fg:x="1851" fg:w="1"/><text x="57.3092%" y="751.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::AdditionKey as core::ops::arith::Add&lt;poly1305::backend::avx2::helpers::Aligned130&gt;&gt;::add::propagate_carry_32 (7 samples, 0.22%)</title><rect x="56.9051%" y="757" width="0.2158%" height="15" fill="rgb(245,175,0)" fg:x="1846" fg:w="7"/><text x="57.1551%" y="767.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="57.0900%" y="741" width="0.0308%" height="15" fill="rgb(208,168,36)" fg:x="1852" fg:w="1"/><text x="57.3400%" y="751.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="57.1208%" y="757" width="0.0308%" height="15" fill="rgb(246,171,24)" fg:x="1853" fg:w="1"/><text x="57.3708%" y="767.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (1 samples, 0.03%)</title><rect x="57.1208%" y="741" width="0.0308%" height="15" fill="rgb(215,142,24)" fg:x="1853" fg:w="1"/><text x="57.3708%" y="751.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::AdditionKey as core::ops::arith::Add&lt;poly1305::backend::avx2::helpers::Aligned130&gt;&gt;::add (30 samples, 0.92%)</title><rect x="56.2885%" y="773" width="0.9248%" height="15" fill="rgb(250,187,7)" fg:x="1826" fg:w="30"/><text x="56.5385%" y="783.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (2 samples, 0.06%)</title><rect x="57.1517%" y="757" width="0.0617%" height="15" fill="rgb(228,66,33)" fg:x="1854" fg:w="2"/><text x="57.4017%" y="767.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi32 (1 samples, 0.03%)</title><rect x="57.1825%" y="741" width="0.0308%" height="15" fill="rgb(234,215,21)" fg:x="1855" fg:w="1"/><text x="57.4325%" y="751.50"></text></g><g><title>core::core_arch::simd::i32x8::new (1 samples, 0.03%)</title><rect x="57.1825%" y="725" width="0.0308%" height="15" fill="rgb(222,191,20)" fg:x="1855" fg:w="1"/><text x="57.4325%" y="735.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="57.2133%" y="757" width="0.0308%" height="15" fill="rgb(245,79,54)" fg:x="1856" fg:w="1"/><text x="57.4633%" y="767.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (2 samples, 0.06%)</title><rect x="57.2441%" y="725" width="0.0617%" height="15" fill="rgb(240,10,37)" fg:x="1857" fg:w="2"/><text x="57.4941%" y="735.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_blend_epi32 (1 samples, 0.03%)</title><rect x="57.3058%" y="709" width="0.0308%" height="15" fill="rgb(214,192,32)" fg:x="1859" fg:w="1"/><text x="57.5558%" y="719.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (2 samples, 0.06%)</title><rect x="57.3058%" y="725" width="0.0617%" height="15" fill="rgb(209,36,54)" fg:x="1859" fg:w="2"/><text x="57.5558%" y="735.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="57.3366%" y="709" width="0.0308%" height="15" fill="rgb(220,10,11)" fg:x="1860" fg:w="1"/><text x="57.5866%" y="719.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi64 (1 samples, 0.03%)</title><rect x="57.3674%" y="725" width="0.0308%" height="15" fill="rgb(221,106,17)" fg:x="1861" fg:w="1"/><text x="57.6174%" y="735.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="57.3983%" y="725" width="0.0308%" height="15" fill="rgb(251,142,44)" fg:x="1862" fg:w="1"/><text x="57.6483%" y="735.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.03%)</title><rect x="57.4291%" y="725" width="0.0308%" height="15" fill="rgb(238,13,15)" fg:x="1863" fg:w="1"/><text x="57.6791%" y="735.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::SpacedMultiplier4x130&gt;&gt;::mul (11 samples, 0.34%)</title><rect x="57.2441%" y="741" width="0.3391%" height="15" fill="rgb(208,107,27)" fg:x="1857" fg:w="11"/><text x="57.4941%" y="751.50"></text></g><g><title>poly1305::backend::avx2::State::finalize::{{closure}} (4 samples, 0.12%)</title><rect x="57.4599%" y="725" width="0.1233%" height="15" fill="rgb(205,136,37)" fg:x="1864" fg:w="4"/><text x="57.7099%" y="735.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::SpacedMultiplier4x130&gt;&gt;::mul (4 samples, 0.12%)</title><rect x="57.4599%" y="709" width="0.1233%" height="15" fill="rgb(250,205,27)" fg:x="1864" fg:w="4"/><text x="57.7099%" y="719.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="57.5832%" y="693" width="0.0308%" height="15" fill="rgb(210,80,43)" fg:x="1868" fg:w="1"/><text x="57.8332%" y="703.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="57.5832%" y="677" width="0.0308%" height="15" fill="rgb(247,160,36)" fg:x="1868" fg:w="1"/><text x="57.8332%" y="687.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="57.5832%" y="661" width="0.0308%" height="15" fill="rgb(234,13,49)" fg:x="1868" fg:w="1"/><text x="57.8332%" y="671.50"></text></g><g><title>core::core_arch::simd::i8x32::new (1 samples, 0.03%)</title><rect x="57.5832%" y="645" width="0.0308%" height="15" fill="rgb(234,122,0)" fg:x="1868" fg:w="1"/><text x="57.8332%" y="655.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (2 samples, 0.06%)</title><rect x="57.5832%" y="709" width="0.0617%" height="15" fill="rgb(207,146,38)" fg:x="1868" fg:w="2"/><text x="57.8332%" y="719.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="57.6141%" y="693" width="0.0308%" height="15" fill="rgb(207,177,25)" fg:x="1869" fg:w="1"/><text x="57.8641%" y="703.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srlv_epi64 (1 samples, 0.03%)</title><rect x="57.6449%" y="709" width="0.0308%" height="15" fill="rgb(211,178,42)" fg:x="1870" fg:w="1"/><text x="57.8949%" y="719.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.03%)</title><rect x="57.6449%" y="693" width="0.0308%" height="15" fill="rgb(230,69,54)" fg:x="1870" fg:w="1"/><text x="57.8949%" y="703.50"></text></g><g><title>poly1305::backend::avx2::helpers::adc (4 samples, 0.12%)</title><rect x="57.5832%" y="725" width="0.1233%" height="15" fill="rgb(214,135,41)" fg:x="1868" fg:w="4"/><text x="57.8332%" y="735.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="57.6757%" y="709" width="0.0308%" height="15" fill="rgb(237,67,25)" fg:x="1871" fg:w="1"/><text x="57.9257%" y="719.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="57.6757%" y="693" width="0.0308%" height="15" fill="rgb(222,189,50)" fg:x="1871" fg:w="1"/><text x="57.9257%" y="703.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="57.6757%" y="677" width="0.0308%" height="15" fill="rgb(245,148,34)" fg:x="1871" fg:w="1"/><text x="57.9257%" y="687.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced130::reduce (5 samples, 0.15%)</title><rect x="57.5832%" y="741" width="0.1541%" height="15" fill="rgb(222,29,6)" fg:x="1868" fg:w="5"/><text x="57.8332%" y="751.50"></text></g><g><title>poly1305::backend::avx2::helpers::red (1 samples, 0.03%)</title><rect x="57.7065%" y="725" width="0.0308%" height="15" fill="rgb(221,189,43)" fg:x="1872" fg:w="1"/><text x="57.9565%" y="735.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="57.7065%" y="709" width="0.0308%" height="15" fill="rgb(207,36,27)" fg:x="1872" fg:w="1"/><text x="57.9565%" y="719.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_inserti128_si256 (1 samples, 0.03%)</title><rect x="57.7374%" y="725" width="0.0308%" height="15" fill="rgb(217,90,24)" fg:x="1873" fg:w="1"/><text x="57.9874%" y="735.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="57.7374%" y="709" width="0.0308%" height="15" fill="rgb(224,66,35)" fg:x="1873" fg:w="1"/><text x="57.9874%" y="719.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="57.7682%" y="725" width="0.0308%" height="15" fill="rgb(221,13,50)" fg:x="1874" fg:w="1"/><text x="58.0182%" y="735.50"></text></g><g><title>poly1305::backend::avx2::State::finalize (50 samples, 1.54%)</title><rect x="56.2885%" y="789" width="1.5413%" height="15" fill="rgb(236,68,49)" fg:x="1826" fg:w="50"/><text x="56.5385%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (20 samples, 0.62%)</title><rect x="57.2133%" y="773" width="0.6165%" height="15" fill="rgb(229,146,28)" fg:x="1856" fg:w="20"/><text x="57.4633%" y="783.50"></text></g><g><title>poly1305::backend::avx2::State::finalize::{{closure}} (19 samples, 0.59%)</title><rect x="57.2441%" y="757" width="0.5857%" height="15" fill="rgb(225,31,38)" fg:x="1857" fg:w="19"/><text x="57.4941%" y="767.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::sum (3 samples, 0.09%)</title><rect x="57.7374%" y="741" width="0.0925%" height="15" fill="rgb(250,208,3)" fg:x="1873" fg:w="3"/><text x="57.9874%" y="751.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.03%)</title><rect x="57.7990%" y="725" width="0.0308%" height="15" fill="rgb(246,54,23)" fg:x="1875" fg:w="1"/><text x="58.0490%" y="735.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (1 samples, 0.03%)</title><rect x="57.8298%" y="773" width="0.0308%" height="15" fill="rgb(243,76,11)" fg:x="1876" fg:w="1"/><text x="58.0798%" y="783.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.03%)</title><rect x="57.8607%" y="757" width="0.0308%" height="15" fill="rgb(245,21,50)" fg:x="1877" fg:w="1"/><text x="58.1107%" y="767.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier as core::convert::From&lt;poly1305::backend::avx2::helpers::Aligned130&gt;&gt;::from (1 samples, 0.03%)</title><rect x="57.8607%" y="741" width="0.0308%" height="15" fill="rgb(228,9,43)" fg:x="1877" fg:w="1"/><text x="58.1107%" y="751.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.03%)</title><rect x="57.8607%" y="725" width="0.0308%" height="15" fill="rgb(208,100,47)" fg:x="1877" fg:w="1"/><text x="58.1107%" y="735.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.03%)</title><rect x="57.8915%" y="725" width="0.0308%" height="15" fill="rgb(232,26,8)" fg:x="1878" fg:w="1"/><text x="58.1415%" y="735.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="57.8915%" y="709" width="0.0308%" height="15" fill="rgb(216,166,38)" fg:x="1878" fg:w="1"/><text x="58.1415%" y="719.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="57.8915%" y="693" width="0.0308%" height="15" fill="rgb(251,202,51)" fg:x="1878" fg:w="1"/><text x="58.1415%" y="703.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="57.8915%" y="677" width="0.0308%" height="15" fill="rgb(254,216,34)" fg:x="1878" fg:w="1"/><text x="58.1415%" y="687.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.03%)</title><rect x="57.9223%" y="725" width="0.0308%" height="15" fill="rgb(251,32,27)" fg:x="1879" fg:w="1"/><text x="58.1723%" y="735.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.03%)</title><rect x="57.9531%" y="709" width="0.0308%" height="15" fill="rgb(208,127,28)" fg:x="1880" fg:w="1"/><text x="58.2031%" y="719.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.03%)</title><rect x="57.9840%" y="709" width="0.0308%" height="15" fill="rgb(224,137,22)" fg:x="1881" fg:w="1"/><text x="58.2340%" y="719.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (3 samples, 0.09%)</title><rect x="57.9531%" y="725" width="0.0925%" height="15" fill="rgb(254,70,32)" fg:x="1880" fg:w="3"/><text x="58.2031%" y="735.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="58.0148%" y="709" width="0.0308%" height="15" fill="rgb(229,75,37)" fg:x="1882" fg:w="1"/><text x="58.2648%" y="719.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (1 samples, 0.03%)</title><rect x="58.0456%" y="725" width="0.0308%" height="15" fill="rgb(252,64,23)" fg:x="1883" fg:w="1"/><text x="58.2956%" y="735.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.03%)</title><rect x="58.0764%" y="725" width="0.0308%" height="15" fill="rgb(232,162,48)" fg:x="1884" fg:w="1"/><text x="58.3264%" y="735.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi64x (1 samples, 0.03%)</title><rect x="58.0764%" y="709" width="0.0308%" height="15" fill="rgb(246,160,12)" fg:x="1884" fg:w="1"/><text x="58.3264%" y="719.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier as core::ops::arith::Mul&gt;::mul (10 samples, 0.31%)</title><rect x="57.8915%" y="757" width="0.3083%" height="15" fill="rgb(247,166,0)" fg:x="1878" fg:w="10"/><text x="58.1415%" y="767.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (10 samples, 0.31%)</title><rect x="57.8915%" y="741" width="0.3083%" height="15" fill="rgb(249,219,21)" fg:x="1878" fg:w="10"/><text x="58.1415%" y="751.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (3 samples, 0.09%)</title><rect x="58.1073%" y="725" width="0.0925%" height="15" fill="rgb(205,209,3)" fg:x="1885" fg:w="3"/><text x="58.3573%" y="735.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (3 samples, 0.09%)</title><rect x="58.1073%" y="709" width="0.0925%" height="15" fill="rgb(243,44,1)" fg:x="1885" fg:w="3"/><text x="58.3573%" y="719.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (3 samples, 0.09%)</title><rect x="58.1073%" y="693" width="0.0925%" height="15" fill="rgb(206,159,16)" fg:x="1885" fg:w="3"/><text x="58.3573%" y="703.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="58.1998%" y="757" width="0.0308%" height="15" fill="rgb(244,77,30)" fg:x="1888" fg:w="1"/><text x="58.4498%" y="767.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="58.1998%" y="741" width="0.0308%" height="15" fill="rgb(218,69,12)" fg:x="1888" fg:w="1"/><text x="58.4498%" y="751.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="58.1998%" y="725" width="0.0308%" height="15" fill="rgb(212,87,7)" fg:x="1888" fg:w="1"/><text x="58.4498%" y="735.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.03%)</title><rect x="58.2306%" y="757" width="0.0308%" height="15" fill="rgb(245,114,25)" fg:x="1889" fg:w="1"/><text x="58.4806%" y="767.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_blend_epi32 (1 samples, 0.03%)</title><rect x="58.2614%" y="741" width="0.0308%" height="15" fill="rgb(210,61,42)" fg:x="1890" fg:w="1"/><text x="58.5114%" y="751.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="58.2614%" y="725" width="0.0308%" height="15" fill="rgb(211,52,33)" fg:x="1890" fg:w="1"/><text x="58.5114%" y="735.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="58.2614%" y="709" width="0.0308%" height="15" fill="rgb(234,58,33)" fg:x="1890" fg:w="1"/><text x="58.5114%" y="719.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="58.2614%" y="693" width="0.0308%" height="15" fill="rgb(220,115,36)" fg:x="1890" fg:w="1"/><text x="58.5114%" y="703.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.03%)</title><rect x="58.2922%" y="725" width="0.0308%" height="15" fill="rgb(243,153,54)" fg:x="1891" fg:w="1"/><text x="58.5422%" y="735.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="58.2922%" y="709" width="0.0308%" height="15" fill="rgb(251,47,18)" fg:x="1891" fg:w="1"/><text x="58.5422%" y="719.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.03%)</title><rect x="58.3231%" y="725" width="0.0308%" height="15" fill="rgb(242,102,42)" fg:x="1892" fg:w="1"/><text x="58.5731%" y="735.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="58.3231%" y="709" width="0.0308%" height="15" fill="rgb(234,31,38)" fg:x="1892" fg:w="1"/><text x="58.5731%" y="719.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.03%)</title><rect x="58.3539%" y="725" width="0.0308%" height="15" fill="rgb(221,117,51)" fg:x="1893" fg:w="1"/><text x="58.6039%" y="735.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (2 samples, 0.06%)</title><rect x="58.3847%" y="725" width="0.0617%" height="15" fill="rgb(212,20,18)" fg:x="1894" fg:w="2"/><text x="58.6347%" y="735.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (2 samples, 0.06%)</title><rect x="58.3847%" y="709" width="0.0617%" height="15" fill="rgb(245,133,36)" fg:x="1894" fg:w="2"/><text x="58.6347%" y="719.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (2 samples, 0.06%)</title><rect x="58.3847%" y="693" width="0.0617%" height="15" fill="rgb(212,6,19)" fg:x="1894" fg:w="2"/><text x="58.6347%" y="703.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (2 samples, 0.06%)</title><rect x="58.3847%" y="677" width="0.0617%" height="15" fill="rgb(218,1,36)" fg:x="1894" fg:w="2"/><text x="58.6347%" y="687.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (2 samples, 0.06%)</title><rect x="58.4464%" y="725" width="0.0617%" height="15" fill="rgb(246,84,54)" fg:x="1896" fg:w="2"/><text x="58.6964%" y="735.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (2 samples, 0.06%)</title><rect x="58.4464%" y="709" width="0.0617%" height="15" fill="rgb(242,110,6)" fg:x="1896" fg:w="2"/><text x="58.6964%" y="719.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (2 samples, 0.06%)</title><rect x="58.4464%" y="693" width="0.0617%" height="15" fill="rgb(214,47,5)" fg:x="1896" fg:w="2"/><text x="58.6964%" y="703.50"></text></g><g><title>poly1305::backend::avx2::helpers::adc (8 samples, 0.25%)</title><rect x="58.2922%" y="741" width="0.2466%" height="15" fill="rgb(218,159,25)" fg:x="1891" fg:w="8"/><text x="58.5422%" y="751.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="58.5080%" y="725" width="0.0308%" height="15" fill="rgb(215,211,28)" fg:x="1898" fg:w="1"/><text x="58.7580%" y="735.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier as core::ops::arith::Mul&gt;::mul (1 samples, 0.03%)</title><rect x="58.5388%" y="725" width="0.0308%" height="15" fill="rgb(238,59,32)" fg:x="1899" fg:w="1"/><text x="58.7888%" y="735.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (1 samples, 0.03%)</title><rect x="58.5388%" y="709" width="0.0308%" height="15" fill="rgb(226,82,3)" fg:x="1899" fg:w="1"/><text x="58.7888%" y="719.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.03%)</title><rect x="58.5697%" y="725" width="0.0308%" height="15" fill="rgb(240,164,32)" fg:x="1900" fg:w="1"/><text x="58.8197%" y="735.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="58.5697%" y="709" width="0.0308%" height="15" fill="rgb(232,46,7)" fg:x="1900" fg:w="1"/><text x="58.8197%" y="719.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="58.5697%" y="693" width="0.0308%" height="15" fill="rgb(229,129,53)" fg:x="1900" fg:w="1"/><text x="58.8197%" y="703.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="58.5697%" y="677" width="0.0308%" height="15" fill="rgb(234,188,29)" fg:x="1900" fg:w="1"/><text x="58.8197%" y="687.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.03%)</title><rect x="58.6005%" y="725" width="0.0308%" height="15" fill="rgb(246,141,4)" fg:x="1901" fg:w="1"/><text x="58.8505%" y="735.50"></text></g><g><title>core::core_arch::simd::u64x4::splat (1 samples, 0.03%)</title><rect x="58.6005%" y="709" width="0.0308%" height="15" fill="rgb(229,23,39)" fg:x="1901" fg:w="1"/><text x="58.8505%" y="719.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srlv_epi64 (1 samples, 0.03%)</title><rect x="58.6313%" y="725" width="0.0308%" height="15" fill="rgb(206,12,3)" fg:x="1902" fg:w="1"/><text x="58.8813%" y="735.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.03%)</title><rect x="58.6313%" y="709" width="0.0308%" height="15" fill="rgb(252,226,20)" fg:x="1902" fg:w="1"/><text x="58.8813%" y="719.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (28 samples, 0.86%)</title><rect x="57.8298%" y="789" width="0.8631%" height="15" fill="rgb(216,123,35)" fg:x="1876" fg:w="28"/><text x="58.0798%" y="799.50"></text></g><g><title>poly1305::backend::avx2::helpers::SpacedMultiplier4x130::new (27 samples, 0.83%)</title><rect x="57.8607%" y="773" width="0.8323%" height="15" fill="rgb(212,68,40)" fg:x="1877" fg:w="27"/><text x="58.1107%" y="783.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced130::reduce (14 samples, 0.43%)</title><rect x="58.2614%" y="757" width="0.4316%" height="15" fill="rgb(254,125,32)" fg:x="1890" fg:w="14"/><text x="58.5114%" y="767.50"></text></g><g><title>poly1305::backend::avx2::helpers::red (5 samples, 0.15%)</title><rect x="58.5388%" y="741" width="0.1541%" height="15" fill="rgb(253,97,22)" fg:x="1899" fg:w="5"/><text x="58.7888%" y="751.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="58.6621%" y="725" width="0.0308%" height="15" fill="rgb(241,101,14)" fg:x="1903" fg:w="1"/><text x="58.9121%" y="735.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="58.6621%" y="709" width="0.0308%" height="15" fill="rgb(238,103,29)" fg:x="1903" fg:w="1"/><text x="58.9121%" y="719.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="58.6621%" y="693" width="0.0308%" height="15" fill="rgb(233,195,47)" fg:x="1903" fg:w="1"/><text x="58.9121%" y="703.50"></text></g><g><title>rustix::backend::event::epoll::_::&lt;impl rustix::backend::event::epoll::EventFlags&gt;::insert (1 samples, 0.03%)</title><rect x="58.6930%" y="789" width="0.0308%" height="15" fill="rgb(246,218,30)" fg:x="1904" fg:w="1"/><text x="58.9430%" y="799.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.03%)</title><rect x="58.7238%" y="309" width="0.0308%" height="15" fill="rgb(219,145,47)" fg:x="1905" fg:w="1"/><text x="58.9738%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (1 samples, 0.03%)</title><rect x="58.7546%" y="309" width="0.0308%" height="15" fill="rgb(243,12,26)" fg:x="1906" fg:w="1"/><text x="59.0046%" y="319.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="58.7855%" y="309" width="0.0308%" height="15" fill="rgb(214,87,16)" fg:x="1907" fg:w="1"/><text x="59.0355%" y="319.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (2 samples, 0.06%)</title><rect x="58.8163%" y="309" width="0.0617%" height="15" fill="rgb(208,99,42)" fg:x="1908" fg:w="2"/><text x="59.0663%" y="319.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (1 samples, 0.03%)</title><rect x="58.8779%" y="309" width="0.0308%" height="15" fill="rgb(253,99,2)" fg:x="1910" fg:w="1"/><text x="59.1279%" y="319.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (1 samples, 0.03%)</title><rect x="58.8779%" y="293" width="0.0308%" height="15" fill="rgb(220,168,23)" fg:x="1910" fg:w="1"/><text x="59.1279%" y="303.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (8 samples, 0.25%)</title><rect x="58.7238%" y="325" width="0.2466%" height="15" fill="rgb(242,38,24)" fg:x="1905" fg:w="8"/><text x="58.9738%" y="335.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (2 samples, 0.06%)</title><rect x="58.9088%" y="309" width="0.0617%" height="15" fill="rgb(225,182,9)" fg:x="1911" fg:w="2"/><text x="59.1588%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (2 samples, 0.06%)</title><rect x="58.9704%" y="309" width="0.0617%" height="15" fill="rgb(243,178,37)" fg:x="1913" fg:w="2"/><text x="59.2204%" y="319.50"></text></g><g><title>start_thread (11 samples, 0.34%)</title><rect x="58.7238%" y="789" width="0.3391%" height="15" fill="rgb(232,139,19)" fg:x="1905" fg:w="11"/><text x="58.9738%" y="799.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (11 samples, 0.34%)</title><rect x="58.7238%" y="773" width="0.3391%" height="15" fill="rgb(225,201,24)" fg:x="1905" fg:w="11"/><text x="58.9738%" y="783.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (11 samples, 0.34%)</title><rect x="58.7238%" y="757" width="0.3391%" height="15" fill="rgb(221,47,46)" fg:x="1905" fg:w="11"/><text x="58.9738%" y="767.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (11 samples, 0.34%)</title><rect x="58.7238%" y="741" width="0.3391%" height="15" fill="rgb(249,23,13)" fg:x="1905" fg:w="11"/><text x="58.9738%" y="751.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (11 samples, 0.34%)</title><rect x="58.7238%" y="725" width="0.3391%" height="15" fill="rgb(219,9,5)" fg:x="1905" fg:w="11"/><text x="58.9738%" y="735.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (11 samples, 0.34%)</title><rect x="58.7238%" y="709" width="0.3391%" height="15" fill="rgb(254,171,16)" fg:x="1905" fg:w="11"/><text x="58.9738%" y="719.50"></text></g><g><title>std::panic::catch_unwind (11 samples, 0.34%)</title><rect x="58.7238%" y="693" width="0.3391%" height="15" fill="rgb(230,171,20)" fg:x="1905" fg:w="11"/><text x="58.9738%" y="703.50"></text></g><g><title>std::panicking::try (11 samples, 0.34%)</title><rect x="58.7238%" y="677" width="0.3391%" height="15" fill="rgb(210,71,41)" fg:x="1905" fg:w="11"/><text x="58.9738%" y="687.50"></text></g><g><title>__rust_try (11 samples, 0.34%)</title><rect x="58.7238%" y="661" width="0.3391%" height="15" fill="rgb(206,173,20)" fg:x="1905" fg:w="11"/><text x="58.9738%" y="671.50"></text></g><g><title>std::panicking::try::do_call (11 samples, 0.34%)</title><rect x="58.7238%" y="645" width="0.3391%" height="15" fill="rgb(233,88,34)" fg:x="1905" fg:w="11"/><text x="58.9738%" y="655.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (11 samples, 0.34%)</title><rect x="58.7238%" y="629" width="0.3391%" height="15" fill="rgb(223,209,46)" fg:x="1905" fg:w="11"/><text x="58.9738%" y="639.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (11 samples, 0.34%)</title><rect x="58.7238%" y="613" width="0.3391%" height="15" fill="rgb(250,43,18)" fg:x="1905" fg:w="11"/><text x="58.9738%" y="623.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (11 samples, 0.34%)</title><rect x="58.7238%" y="597" width="0.3391%" height="15" fill="rgb(208,13,10)" fg:x="1905" fg:w="11"/><text x="58.9738%" y="607.50"></text></g><g><title>tftp::server::multi_thread::spawn_writer::{{closure}} (11 samples, 0.34%)</title><rect x="58.7238%" y="581" width="0.3391%" height="15" fill="rgb(212,200,36)" fg:x="1905" fg:w="11"/><text x="58.9738%" y="591.50"></text></g><g><title>tftp::server::helpers::write::handle_write (11 samples, 0.34%)</title><rect x="58.7238%" y="565" width="0.3391%" height="15" fill="rgb(225,90,30)" fg:x="1905" fg:w="11"/><text x="58.9738%" y="575.50"></text></g><g><title>tftp::server::connection::Connection&lt;B,Rng&gt;::decrypt_packet (11 samples, 0.34%)</title><rect x="58.7238%" y="549" width="0.3391%" height="15" fill="rgb(236,182,39)" fg:x="1905" fg:w="11"/><text x="58.9738%" y="559.50"></text></g><g><title>tftp::encrypted_packet::EncryptedPacket::decrypt (11 samples, 0.34%)</title><rect x="58.7238%" y="533" width="0.3391%" height="15" fill="rgb(212,144,35)" fg:x="1905" fg:w="11"/><text x="58.9738%" y="543.50"></text></g><g><title>tftp::encryption::Encryptor&lt;R&gt;::decrypt (11 samples, 0.34%)</title><rect x="58.7238%" y="517" width="0.3391%" height="15" fill="rgb(228,63,44)" fg:x="1905" fg:w="11"/><text x="58.9738%" y="527.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (11 samples, 0.34%)</title><rect x="58.7238%" y="501" width="0.3391%" height="15" fill="rgb(228,109,6)" fg:x="1905" fg:w="11"/><text x="58.9738%" y="511.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::decrypt_in_place_detached (11 samples, 0.34%)</title><rect x="58.7238%" y="485" width="0.3391%" height="15" fill="rgb(238,117,24)" fg:x="1905" fg:w="11"/><text x="58.9738%" y="495.50"></text></g><g><title>universal_hash::UniversalHash::update_padded (11 samples, 0.34%)</title><rect x="58.7238%" y="469" width="0.3391%" height="15" fill="rgb(242,26,26)" fg:x="1905" fg:w="11"/><text x="58.9738%" y="479.50"></text></g><g><title>universal_hash::UniversalHash::update (11 samples, 0.34%)</title><rect x="58.7238%" y="453" width="0.3391%" height="15" fill="rgb(221,92,48)" fg:x="1905" fg:w="11"/><text x="58.9738%" y="463.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (11 samples, 0.34%)</title><rect x="58.7238%" y="437" width="0.3391%" height="15" fill="rgb(209,209,32)" fg:x="1905" fg:w="11"/><text x="58.9738%" y="447.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (11 samples, 0.34%)</title><rect x="58.7238%" y="421" width="0.3391%" height="15" fill="rgb(221,70,22)" fg:x="1905" fg:w="11"/><text x="58.9738%" y="431.50"></text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (11 samples, 0.34%)</title><rect x="58.7238%" y="405" width="0.3391%" height="15" fill="rgb(248,145,5)" fg:x="1905" fg:w="11"/><text x="58.9738%" y="415.50"></text></g><g><title>&lt;poly1305::backend::avx2::State as universal_hash::UhfBackend&gt;::proc_par_blocks (11 samples, 0.34%)</title><rect x="58.7238%" y="389" width="0.3391%" height="15" fill="rgb(226,116,26)" fg:x="1905" fg:w="11"/><text x="58.9738%" y="399.50"></text></g><g><title>poly1305::backend::avx2::State::compute_par_blocks (11 samples, 0.34%)</title><rect x="58.7238%" y="373" width="0.3391%" height="15" fill="rgb(244,5,17)" fg:x="1905" fg:w="11"/><text x="58.9738%" y="383.50"></text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_par_blocks (11 samples, 0.34%)</title><rect x="58.7238%" y="357" width="0.3391%" height="15" fill="rgb(252,159,33)" fg:x="1905" fg:w="11"/><text x="58.9738%" y="367.50"></text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_loaded_blocks (11 samples, 0.34%)</title><rect x="58.7238%" y="341" width="0.3391%" height="15" fill="rgb(206,71,0)" fg:x="1905" fg:w="11"/><text x="58.9738%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_unpackhi_epi64 (3 samples, 0.09%)</title><rect x="58.9704%" y="325" width="0.0925%" height="15" fill="rgb(233,118,54)" fg:x="1913" fg:w="3"/><text x="59.2204%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.03%)</title><rect x="59.0321%" y="309" width="0.0308%" height="15" fill="rgb(234,83,48)" fg:x="1915" fg:w="1"/><text x="59.2821%" y="319.50"></text></g><g><title>std::net::udp::UdpSocket::recv (1 samples, 0.03%)</title><rect x="59.0629%" y="789" width="0.0308%" height="15" fill="rgb(228,3,54)" fg:x="1916" fg:w="1"/><text x="59.3129%" y="799.50"></text></g><g><title>std::sys_common::net::UdpSocket::recv (1 samples, 0.03%)</title><rect x="59.0629%" y="773" width="0.0308%" height="15" fill="rgb(226,155,13)" fg:x="1916" fg:w="1"/><text x="59.3129%" y="783.50"></text></g><g><title>std::sys::unix::net::Socket::read (1 samples, 0.03%)</title><rect x="59.0629%" y="757" width="0.0308%" height="15" fill="rgb(241,28,37)" fg:x="1916" fg:w="1"/><text x="59.3129%" y="767.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (1 samples, 0.03%)</title><rect x="59.0629%" y="741" width="0.0308%" height="15" fill="rgb(233,93,10)" fg:x="1916" fg:w="1"/><text x="59.3129%" y="751.50"></text></g><g><title>std::sys::unix::cvt (1 samples, 0.03%)</title><rect x="59.0629%" y="725" width="0.0308%" height="15" fill="rgb(225,113,19)" fg:x="1916" fg:w="1"/><text x="59.3129%" y="735.50"></text></g><g><title>&lt;isize as std::sys::unix::IsMinusOne&gt;::is_minus_one (1 samples, 0.03%)</title><rect x="59.0629%" y="709" width="0.0308%" height="15" fill="rgb(241,2,18)" fg:x="1916" fg:w="1"/><text x="59.3129%" y="719.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.03%)</title><rect x="59.0937%" y="421" width="0.0308%" height="15" fill="rgb(228,207,21)" fg:x="1917" fg:w="1"/><text x="59.3437%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="59.0937%" y="405" width="0.0308%" height="15" fill="rgb(213,211,35)" fg:x="1917" fg:w="1"/><text x="59.3437%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="59.1245%" y="421" width="0.0308%" height="15" fill="rgb(209,83,10)" fg:x="1918" fg:w="1"/><text x="59.3745%" y="431.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (3 samples, 0.09%)</title><rect x="59.0937%" y="437" width="0.0925%" height="15" fill="rgb(209,164,1)" fg:x="1917" fg:w="3"/><text x="59.3437%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="59.1554%" y="421" width="0.0308%" height="15" fill="rgb(213,184,43)" fg:x="1919" fg:w="1"/><text x="59.4054%" y="431.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (2 samples, 0.06%)</title><rect x="59.1862%" y="405" width="0.0617%" height="15" fill="rgb(231,61,34)" fg:x="1920" fg:w="2"/><text x="59.4362%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (3 samples, 0.09%)</title><rect x="59.1862%" y="421" width="0.0925%" height="15" fill="rgb(235,75,3)" fg:x="1920" fg:w="3"/><text x="59.4362%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="59.2478%" y="405" width="0.0308%" height="15" fill="rgb(220,106,47)" fg:x="1922" fg:w="1"/><text x="59.4978%" y="415.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::decrypt_in_place_detached (7 samples, 0.22%)</title><rect x="59.0937%" y="629" width="0.2158%" height="15" fill="rgb(210,196,33)" fg:x="1917" fg:w="7"/><text x="59.3437%" y="639.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (7 samples, 0.22%)</title><rect x="59.0937%" y="613" width="0.2158%" height="15" fill="rgb(229,154,42)" fg:x="1917" fg:w="7"/><text x="59.3437%" y="623.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (7 samples, 0.22%)</title><rect x="59.0937%" y="597" width="0.2158%" height="15" fill="rgb(228,114,26)" fg:x="1917" fg:w="7"/><text x="59.3437%" y="607.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (7 samples, 0.22%)</title><rect x="59.0937%" y="581" width="0.2158%" height="15" fill="rgb(208,144,1)" fg:x="1917" fg:w="7"/><text x="59.3437%" y="591.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::write_keystream_block (7 samples, 0.22%)</title><rect x="59.0937%" y="565" width="0.2158%" height="15" fill="rgb(239,112,37)" fg:x="1917" fg:w="7"/><text x="59.3437%" y="575.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (7 samples, 0.22%)</title><rect x="59.0937%" y="549" width="0.2158%" height="15" fill="rgb(210,96,50)" fg:x="1917" fg:w="7"/><text x="59.3437%" y="559.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (7 samples, 0.22%)</title><rect x="59.0937%" y="533" width="0.2158%" height="15" fill="rgb(222,178,2)" fg:x="1917" fg:w="7"/><text x="59.3437%" y="543.50"></text></g><g><title>chacha20::backends::avx2::inner (7 samples, 0.22%)</title><rect x="59.0937%" y="517" width="0.2158%" height="15" fill="rgb(226,74,18)" fg:x="1917" fg:w="7"/><text x="59.3437%" y="527.50"></text></g><g><title>&lt;cipher::stream_core::WriteBlockCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (7 samples, 0.22%)</title><rect x="59.0937%" y="501" width="0.2158%" height="15" fill="rgb(225,67,54)" fg:x="1917" fg:w="7"/><text x="59.3437%" y="511.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (7 samples, 0.22%)</title><rect x="59.0937%" y="485" width="0.2158%" height="15" fill="rgb(251,92,32)" fg:x="1917" fg:w="7"/><text x="59.3437%" y="495.50"></text></g><g><title>chacha20::backends::avx2::rounds (7 samples, 0.22%)</title><rect x="59.0937%" y="469" width="0.2158%" height="15" fill="rgb(228,149,22)" fg:x="1917" fg:w="7"/><text x="59.3437%" y="479.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (7 samples, 0.22%)</title><rect x="59.0937%" y="453" width="0.2158%" height="15" fill="rgb(243,54,13)" fg:x="1917" fg:w="7"/><text x="59.3437%" y="463.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (4 samples, 0.12%)</title><rect x="59.1862%" y="437" width="0.1233%" height="15" fill="rgb(243,180,28)" fg:x="1920" fg:w="4"/><text x="59.4362%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.03%)</title><rect x="59.2787%" y="421" width="0.0308%" height="15" fill="rgb(208,167,24)" fg:x="1923" fg:w="1"/><text x="59.5287%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="59.3095%" y="421" width="0.0308%" height="15" fill="rgb(245,73,45)" fg:x="1924" fg:w="1"/><text x="59.5595%" y="431.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.03%)</title><rect x="59.3095%" y="405" width="0.0308%" height="15" fill="rgb(237,203,48)" fg:x="1924" fg:w="1"/><text x="59.5595%" y="415.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (2 samples, 0.06%)</title><rect x="59.3095%" y="437" width="0.0617%" height="15" fill="rgb(211,197,16)" fg:x="1924" fg:w="2"/><text x="59.5595%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="59.3403%" y="421" width="0.0308%" height="15" fill="rgb(243,99,51)" fg:x="1925" fg:w="1"/><text x="59.5903%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="59.3711%" y="421" width="0.0308%" height="15" fill="rgb(215,123,29)" fg:x="1926" fg:w="1"/><text x="59.6211%" y="431.50"></text></g><g><title>std::panicking::try::do_call (11 samples, 0.34%)</title><rect x="59.0937%" y="789" width="0.3391%" height="15" fill="rgb(239,186,37)" fg:x="1917" fg:w="11"/><text x="59.3437%" y="799.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (11 samples, 0.34%)</title><rect x="59.0937%" y="773" width="0.3391%" height="15" fill="rgb(252,136,39)" fg:x="1917" fg:w="11"/><text x="59.3437%" y="783.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (11 samples, 0.34%)</title><rect x="59.0937%" y="757" width="0.3391%" height="15" fill="rgb(223,213,32)" fg:x="1917" fg:w="11"/><text x="59.3437%" y="767.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (11 samples, 0.34%)</title><rect x="59.0937%" y="741" width="0.3391%" height="15" fill="rgb(233,115,5)" fg:x="1917" fg:w="11"/><text x="59.3437%" y="751.50"></text></g><g><title>tftp::server::multi_thread::spawn_writer::{{closure}} (11 samples, 0.34%)</title><rect x="59.0937%" y="725" width="0.3391%" height="15" fill="rgb(207,226,44)" fg:x="1917" fg:w="11"/><text x="59.3437%" y="735.50"></text></g><g><title>tftp::server::helpers::write::handle_write (11 samples, 0.34%)</title><rect x="59.0937%" y="709" width="0.3391%" height="15" fill="rgb(208,126,0)" fg:x="1917" fg:w="11"/><text x="59.3437%" y="719.50"></text></g><g><title>tftp::server::connection::Connection&lt;B,Rng&gt;::decrypt_packet (11 samples, 0.34%)</title><rect x="59.0937%" y="693" width="0.3391%" height="15" fill="rgb(244,66,21)" fg:x="1917" fg:w="11"/><text x="59.3437%" y="703.50"></text></g><g><title>tftp::encrypted_packet::EncryptedPacket::decrypt (11 samples, 0.34%)</title><rect x="59.0937%" y="677" width="0.3391%" height="15" fill="rgb(222,97,12)" fg:x="1917" fg:w="11"/><text x="59.3437%" y="687.50"></text></g><g><title>tftp::encryption::Encryptor&lt;R&gt;::decrypt (11 samples, 0.34%)</title><rect x="59.0937%" y="661" width="0.3391%" height="15" fill="rgb(219,213,19)" fg:x="1917" fg:w="11"/><text x="59.3437%" y="671.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (11 samples, 0.34%)</title><rect x="59.0937%" y="645" width="0.3391%" height="15" fill="rgb(252,169,30)" fg:x="1917" fg:w="11"/><text x="59.3437%" y="655.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (4 samples, 0.12%)</title><rect x="59.3095%" y="629" width="0.1233%" height="15" fill="rgb(206,32,51)" fg:x="1924" fg:w="4"/><text x="59.5595%" y="639.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (4 samples, 0.12%)</title><rect x="59.3095%" y="613" width="0.1233%" height="15" fill="rgb(250,172,42)" fg:x="1924" fg:w="4"/><text x="59.5595%" y="623.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (4 samples, 0.12%)</title><rect x="59.3095%" y="597" width="0.1233%" height="15" fill="rgb(209,34,43)" fg:x="1924" fg:w="4"/><text x="59.5595%" y="607.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (4 samples, 0.12%)</title><rect x="59.3095%" y="581" width="0.1233%" height="15" fill="rgb(223,11,35)" fg:x="1924" fg:w="4"/><text x="59.5595%" y="591.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::write_keystream_block (4 samples, 0.12%)</title><rect x="59.3095%" y="565" width="0.1233%" height="15" fill="rgb(251,219,26)" fg:x="1924" fg:w="4"/><text x="59.5595%" y="575.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (4 samples, 0.12%)</title><rect x="59.3095%" y="549" width="0.1233%" height="15" fill="rgb(231,119,3)" fg:x="1924" fg:w="4"/><text x="59.5595%" y="559.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (4 samples, 0.12%)</title><rect x="59.3095%" y="533" width="0.1233%" height="15" fill="rgb(216,97,11)" fg:x="1924" fg:w="4"/><text x="59.5595%" y="543.50"></text></g><g><title>chacha20::backends::avx2::inner (4 samples, 0.12%)</title><rect x="59.3095%" y="517" width="0.1233%" height="15" fill="rgb(223,59,9)" fg:x="1924" fg:w="4"/><text x="59.5595%" y="527.50"></text></g><g><title>&lt;cipher::stream_core::WriteBlockCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (4 samples, 0.12%)</title><rect x="59.3095%" y="501" width="0.1233%" height="15" fill="rgb(233,93,31)" fg:x="1924" fg:w="4"/><text x="59.5595%" y="511.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (4 samples, 0.12%)</title><rect x="59.3095%" y="485" width="0.1233%" height="15" fill="rgb(239,81,33)" fg:x="1924" fg:w="4"/><text x="59.5595%" y="495.50"></text></g><g><title>chacha20::backends::avx2::rounds (4 samples, 0.12%)</title><rect x="59.3095%" y="469" width="0.1233%" height="15" fill="rgb(213,120,34)" fg:x="1924" fg:w="4"/><text x="59.5595%" y="479.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (4 samples, 0.12%)</title><rect x="59.3095%" y="453" width="0.1233%" height="15" fill="rgb(243,49,53)" fg:x="1924" fg:w="4"/><text x="59.5595%" y="463.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (2 samples, 0.06%)</title><rect x="59.3711%" y="437" width="0.0617%" height="15" fill="rgb(247,216,33)" fg:x="1926" fg:w="2"/><text x="59.6211%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="59.4020%" y="421" width="0.0308%" height="15" fill="rgb(226,26,14)" fg:x="1927" fg:w="1"/><text x="59.6520%" y="431.50"></text></g><g><title>chacha20::backends::avx2::inner (1 samples, 0.03%)</title><rect x="59.4328%" y="437" width="0.0308%" height="15" fill="rgb(215,49,53)" fg:x="1928" fg:w="1"/><text x="59.6828%" y="447.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (1 samples, 0.03%)</title><rect x="59.4328%" y="421" width="0.0308%" height="15" fill="rgb(245,162,40)" fg:x="1928" fg:w="1"/><text x="59.6828%" y="431.50"></text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;u8,N&gt;&gt;::xor_in2out (1 samples, 0.03%)</title><rect x="59.4328%" y="405" width="0.0308%" height="15" fill="rgb(229,68,17)" fg:x="1928" fg:w="1"/><text x="59.6828%" y="415.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.03%)</title><rect x="59.4636%" y="421" width="0.0308%" height="15" fill="rgb(213,182,10)" fg:x="1929" fg:w="1"/><text x="59.7136%" y="431.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="59.4945%" y="405" width="0.0308%" height="15" fill="rgb(245,125,30)" fg:x="1930" fg:w="1"/><text x="59.7445%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="59.5253%" y="405" width="0.0308%" height="15" fill="rgb(232,202,2)" fg:x="1931" fg:w="1"/><text x="59.7753%" y="415.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (3 samples, 0.09%)</title><rect x="59.4945%" y="421" width="0.0925%" height="15" fill="rgb(237,140,51)" fg:x="1930" fg:w="3"/><text x="59.7445%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="59.5561%" y="405" width="0.0308%" height="15" fill="rgb(236,157,25)" fg:x="1932" fg:w="1"/><text x="59.8061%" y="415.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="59.5869%" y="405" width="0.0308%" height="15" fill="rgb(219,209,0)" fg:x="1933" fg:w="1"/><text x="59.8369%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (2 samples, 0.06%)</title><rect x="59.5869%" y="421" width="0.0617%" height="15" fill="rgb(240,116,54)" fg:x="1933" fg:w="2"/><text x="59.8369%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="59.6178%" y="405" width="0.0308%" height="15" fill="rgb(216,10,36)" fg:x="1934" fg:w="1"/><text x="59.8678%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="59.6486%" y="421" width="0.0308%" height="15" fill="rgb(222,72,44)" fg:x="1935" fg:w="1"/><text x="59.8986%" y="431.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::decrypt_in_place_detached (9 samples, 0.28%)</title><rect x="59.4328%" y="597" width="0.2774%" height="15" fill="rgb(232,159,9)" fg:x="1928" fg:w="9"/><text x="59.6828%" y="607.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (9 samples, 0.28%)</title><rect x="59.4328%" y="581" width="0.2774%" height="15" fill="rgb(210,39,32)" fg:x="1928" fg:w="9"/><text x="59.6828%" y="591.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (9 samples, 0.28%)</title><rect x="59.4328%" y="565" width="0.2774%" height="15" fill="rgb(216,194,45)" fg:x="1928" fg:w="9"/><text x="59.6828%" y="575.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (9 samples, 0.28%)</title><rect x="59.4328%" y="549" width="0.2774%" height="15" fill="rgb(218,18,35)" fg:x="1928" fg:w="9"/><text x="59.6828%" y="559.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::write_keystream_block (9 samples, 0.28%)</title><rect x="59.4328%" y="533" width="0.2774%" height="15" fill="rgb(207,83,51)" fg:x="1928" fg:w="9"/><text x="59.6828%" y="543.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (9 samples, 0.28%)</title><rect x="59.4328%" y="517" width="0.2774%" height="15" fill="rgb(225,63,43)" fg:x="1928" fg:w="9"/><text x="59.6828%" y="527.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (9 samples, 0.28%)</title><rect x="59.4328%" y="501" width="0.2774%" height="15" fill="rgb(207,57,36)" fg:x="1928" fg:w="9"/><text x="59.6828%" y="511.50"></text></g><g><title>chacha20::backends::avx2::inner (9 samples, 0.28%)</title><rect x="59.4328%" y="485" width="0.2774%" height="15" fill="rgb(216,99,33)" fg:x="1928" fg:w="9"/><text x="59.6828%" y="495.50"></text></g><g><title>&lt;cipher::stream_core::WriteBlockCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (9 samples, 0.28%)</title><rect x="59.4328%" y="469" width="0.2774%" height="15" fill="rgb(225,42,16)" fg:x="1928" fg:w="9"/><text x="59.6828%" y="479.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (9 samples, 0.28%)</title><rect x="59.4328%" y="453" width="0.2774%" height="15" fill="rgb(220,201,45)" fg:x="1928" fg:w="9"/><text x="59.6828%" y="463.50"></text></g><g><title>chacha20::backends::avx2::rounds (8 samples, 0.25%)</title><rect x="59.4636%" y="437" width="0.2466%" height="15" fill="rgb(225,33,4)" fg:x="1929" fg:w="8"/><text x="59.7136%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="59.6794%" y="421" width="0.0308%" height="15" fill="rgb(224,33,50)" fg:x="1936" fg:w="1"/><text x="59.9294%" y="431.50"></text></g><g><title>std::panicking::try (10 samples, 0.31%)</title><rect x="59.4328%" y="789" width="0.3083%" height="15" fill="rgb(246,198,51)" fg:x="1928" fg:w="10"/><text x="59.6828%" y="799.50"></text></g><g><title>__rust_try (10 samples, 0.31%)</title><rect x="59.4328%" y="773" width="0.3083%" height="15" fill="rgb(205,22,4)" fg:x="1928" fg:w="10"/><text x="59.6828%" y="783.50"></text></g><g><title>std::panicking::try::do_call (10 samples, 0.31%)</title><rect x="59.4328%" y="757" width="0.3083%" height="15" fill="rgb(206,3,8)" fg:x="1928" fg:w="10"/><text x="59.6828%" y="767.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (10 samples, 0.31%)</title><rect x="59.4328%" y="741" width="0.3083%" height="15" fill="rgb(251,23,15)" fg:x="1928" fg:w="10"/><text x="59.6828%" y="751.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (10 samples, 0.31%)</title><rect x="59.4328%" y="725" width="0.3083%" height="15" fill="rgb(252,88,28)" fg:x="1928" fg:w="10"/><text x="59.6828%" y="735.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (10 samples, 0.31%)</title><rect x="59.4328%" y="709" width="0.3083%" height="15" fill="rgb(212,127,14)" fg:x="1928" fg:w="10"/><text x="59.6828%" y="719.50"></text></g><g><title>tftp::server::multi_thread::spawn_writer::{{closure}} (10 samples, 0.31%)</title><rect x="59.4328%" y="693" width="0.3083%" height="15" fill="rgb(247,145,37)" fg:x="1928" fg:w="10"/><text x="59.6828%" y="703.50"></text></g><g><title>tftp::server::helpers::write::handle_write (10 samples, 0.31%)</title><rect x="59.4328%" y="677" width="0.3083%" height="15" fill="rgb(209,117,53)" fg:x="1928" fg:w="10"/><text x="59.6828%" y="687.50"></text></g><g><title>tftp::server::connection::Connection&lt;B,Rng&gt;::decrypt_packet (10 samples, 0.31%)</title><rect x="59.4328%" y="661" width="0.3083%" height="15" fill="rgb(212,90,42)" fg:x="1928" fg:w="10"/><text x="59.6828%" y="671.50"></text></g><g><title>tftp::encrypted_packet::EncryptedPacket::decrypt (10 samples, 0.31%)</title><rect x="59.4328%" y="645" width="0.3083%" height="15" fill="rgb(218,164,37)" fg:x="1928" fg:w="10"/><text x="59.6828%" y="655.50"></text></g><g><title>tftp::encryption::Encryptor&lt;R&gt;::decrypt (10 samples, 0.31%)</title><rect x="59.4328%" y="629" width="0.3083%" height="15" fill="rgb(246,65,34)" fg:x="1928" fg:w="10"/><text x="59.6828%" y="639.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (10 samples, 0.31%)</title><rect x="59.4328%" y="613" width="0.3083%" height="15" fill="rgb(231,100,33)" fg:x="1928" fg:w="10"/><text x="59.6828%" y="623.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (1 samples, 0.03%)</title><rect x="59.7102%" y="597" width="0.0308%" height="15" fill="rgb(228,126,14)" fg:x="1937" fg:w="1"/><text x="59.9602%" y="607.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (1 samples, 0.03%)</title><rect x="59.7102%" y="581" width="0.0308%" height="15" fill="rgb(215,173,21)" fg:x="1937" fg:w="1"/><text x="59.9602%" y="591.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (1 samples, 0.03%)</title><rect x="59.7102%" y="565" width="0.0308%" height="15" fill="rgb(210,6,40)" fg:x="1937" fg:w="1"/><text x="59.9602%" y="575.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (1 samples, 0.03%)</title><rect x="59.7102%" y="549" width="0.0308%" height="15" fill="rgb(212,48,18)" fg:x="1937" fg:w="1"/><text x="59.9602%" y="559.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::write_keystream_block (1 samples, 0.03%)</title><rect x="59.7102%" y="533" width="0.0308%" height="15" fill="rgb(230,214,11)" fg:x="1937" fg:w="1"/><text x="59.9602%" y="543.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (1 samples, 0.03%)</title><rect x="59.7102%" y="517" width="0.0308%" height="15" fill="rgb(254,105,39)" fg:x="1937" fg:w="1"/><text x="59.9602%" y="527.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (1 samples, 0.03%)</title><rect x="59.7102%" y="501" width="0.0308%" height="15" fill="rgb(245,158,5)" fg:x="1937" fg:w="1"/><text x="59.9602%" y="511.50"></text></g><g><title>chacha20::backends::avx2::inner (1 samples, 0.03%)</title><rect x="59.7102%" y="485" width="0.0308%" height="15" fill="rgb(249,208,11)" fg:x="1937" fg:w="1"/><text x="59.9602%" y="495.50"></text></g><g><title>&lt;cipher::stream_core::WriteBlockCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (1 samples, 0.03%)</title><rect x="59.7102%" y="469" width="0.0308%" height="15" fill="rgb(210,39,28)" fg:x="1937" fg:w="1"/><text x="59.9602%" y="479.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (1 samples, 0.03%)</title><rect x="59.7102%" y="453" width="0.0308%" height="15" fill="rgb(211,56,53)" fg:x="1937" fg:w="1"/><text x="59.9602%" y="463.50"></text></g><g><title>chacha20::backends::avx2::rounds (1 samples, 0.03%)</title><rect x="59.7102%" y="437" width="0.0308%" height="15" fill="rgb(226,201,30)" fg:x="1937" fg:w="1"/><text x="59.9602%" y="447.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="59.7102%" y="421" width="0.0308%" height="15" fill="rgb(239,101,34)" fg:x="1937" fg:w="1"/><text x="59.9602%" y="431.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (1 samples, 0.03%)</title><rect x="59.7102%" y="405" width="0.0308%" height="15" fill="rgb(226,209,5)" fg:x="1937" fg:w="1"/><text x="59.9602%" y="415.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (1 samples, 0.03%)</title><rect x="59.7102%" y="389" width="0.0308%" height="15" fill="rgb(250,105,47)" fg:x="1937" fg:w="1"/><text x="59.9602%" y="399.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier as core::ops::arith::Mul&gt;::mul (1 samples, 0.03%)</title><rect x="59.7411%" y="613" width="0.0308%" height="15" fill="rgb(230,72,3)" fg:x="1938" fg:w="1"/><text x="59.9911%" y="623.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (1 samples, 0.03%)</title><rect x="59.7411%" y="597" width="0.0308%" height="15" fill="rgb(232,218,39)" fg:x="1938" fg:w="1"/><text x="59.9911%" y="607.50"></text></g><g><title>tftp::server::connection::Connection&lt;B,Rng&gt;::decrypt_packet (2 samples, 0.06%)</title><rect x="59.7411%" y="725" width="0.0617%" height="15" fill="rgb(248,166,6)" fg:x="1938" fg:w="2"/><text x="59.9911%" y="735.50"></text></g><g><title>tftp::encrypted_packet::EncryptedPacket::decrypt (2 samples, 0.06%)</title><rect x="59.7411%" y="709" width="0.0617%" height="15" fill="rgb(247,89,20)" fg:x="1938" fg:w="2"/><text x="59.9911%" y="719.50"></text></g><g><title>tftp::encryption::Encryptor&lt;R&gt;::decrypt (2 samples, 0.06%)</title><rect x="59.7411%" y="693" width="0.0617%" height="15" fill="rgb(248,130,54)" fg:x="1938" fg:w="2"/><text x="59.9911%" y="703.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (2 samples, 0.06%)</title><rect x="59.7411%" y="677" width="0.0617%" height="15" fill="rgb(234,196,4)" fg:x="1938" fg:w="2"/><text x="59.9911%" y="687.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (2 samples, 0.06%)</title><rect x="59.7411%" y="661" width="0.0617%" height="15" fill="rgb(250,143,31)" fg:x="1938" fg:w="2"/><text x="59.9911%" y="671.50"></text></g><g><title>&lt;poly1305::Poly1305 as crypto_common::KeyInit&gt;::new (2 samples, 0.06%)</title><rect x="59.7411%" y="645" width="0.0617%" height="15" fill="rgb(211,110,34)" fg:x="1938" fg:w="2"/><text x="59.9911%" y="655.50"></text></g><g><title>poly1305::backend::autodetect::State::new (2 samples, 0.06%)</title><rect x="59.7411%" y="629" width="0.0617%" height="15" fill="rgb(215,124,48)" fg:x="1938" fg:w="2"/><text x="59.9911%" y="639.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.03%)</title><rect x="59.7719%" y="613" width="0.0308%" height="15" fill="rgb(216,46,13)" fg:x="1939" fg:w="1"/><text x="60.0219%" y="623.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (3 samples, 0.09%)</title><rect x="59.7411%" y="789" width="0.0925%" height="15" fill="rgb(205,184,25)" fg:x="1938" fg:w="3"/><text x="59.9911%" y="799.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3 samples, 0.09%)</title><rect x="59.7411%" y="773" width="0.0925%" height="15" fill="rgb(228,1,10)" fg:x="1938" fg:w="3"/><text x="59.9911%" y="783.50"></text></g><g><title>tftp::server::multi_thread::spawn_writer::{{closure}} (3 samples, 0.09%)</title><rect x="59.7411%" y="757" width="0.0925%" height="15" fill="rgb(213,116,27)" fg:x="1938" fg:w="3"/><text x="59.9911%" y="767.50"></text></g><g><title>tftp::server::helpers::write::handle_write (3 samples, 0.09%)</title><rect x="59.7411%" y="741" width="0.0925%" height="15" fill="rgb(241,95,50)" fg:x="1938" fg:w="3"/><text x="59.9911%" y="751.50"></text></g><g><title>tftp::server::connection::Connection&lt;B,Rng&gt;::send_packet (1 samples, 0.03%)</title><rect x="59.8027%" y="725" width="0.0308%" height="15" fill="rgb(238,48,32)" fg:x="1940" fg:w="1"/><text x="60.0527%" y="735.50"></text></g><g><title>tftp::server::connection::Connection&lt;B,Rng&gt;::send_bytes (1 samples, 0.03%)</title><rect x="59.8027%" y="709" width="0.0308%" height="15" fill="rgb(235,113,49)" fg:x="1940" fg:w="1"/><text x="60.0527%" y="719.50"></text></g><g><title>tftp::encrypted_packet::EncryptedPacket::encrypt (1 samples, 0.03%)</title><rect x="59.8027%" y="693" width="0.0308%" height="15" fill="rgb(205,127,43)" fg:x="1940" fg:w="1"/><text x="60.0527%" y="703.50"></text></g><g><title>tftp::encryption::Encryptor&lt;R&gt;::encrypt (1 samples, 0.03%)</title><rect x="59.8027%" y="677" width="0.0308%" height="15" fill="rgb(250,162,2)" fg:x="1940" fg:w="1"/><text x="60.0527%" y="687.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::encrypt_in_place_detached (1 samples, 0.03%)</title><rect x="59.8027%" y="661" width="0.0308%" height="15" fill="rgb(220,13,41)" fg:x="1940" fg:w="1"/><text x="60.0527%" y="671.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::encrypt_in_place_detached (1 samples, 0.03%)</title><rect x="59.8027%" y="645" width="0.0308%" height="15" fill="rgb(249,221,25)" fg:x="1940" fg:w="1"/><text x="60.0527%" y="655.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (1 samples, 0.03%)</title><rect x="59.8027%" y="629" width="0.0308%" height="15" fill="rgb(215,208,19)" fg:x="1940" fg:w="1"/><text x="60.0527%" y="639.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (1 samples, 0.03%)</title><rect x="59.8027%" y="613" width="0.0308%" height="15" fill="rgb(236,175,2)" fg:x="1940" fg:w="1"/><text x="60.0527%" y="623.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (1 samples, 0.03%)</title><rect x="59.8027%" y="597" width="0.0308%" height="15" fill="rgb(241,52,2)" fg:x="1940" fg:w="1"/><text x="60.0527%" y="607.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::write_keystream_block (1 samples, 0.03%)</title><rect x="59.8027%" y="581" width="0.0308%" height="15" fill="rgb(248,140,14)" fg:x="1940" fg:w="1"/><text x="60.0527%" y="591.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (1 samples, 0.03%)</title><rect x="59.8027%" y="565" width="0.0308%" height="15" fill="rgb(253,22,42)" fg:x="1940" fg:w="1"/><text x="60.0527%" y="575.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (1 samples, 0.03%)</title><rect x="59.8027%" y="549" width="0.0308%" height="15" fill="rgb(234,61,47)" fg:x="1940" fg:w="1"/><text x="60.0527%" y="559.50"></text></g><g><title>chacha20::backends::avx2::inner (1 samples, 0.03%)</title><rect x="59.8027%" y="533" width="0.0308%" height="15" fill="rgb(208,226,15)" fg:x="1940" fg:w="1"/><text x="60.0527%" y="543.50"></text></g><g><title>&lt;cipher::stream_core::WriteBlockCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (1 samples, 0.03%)</title><rect x="59.8027%" y="517" width="0.0308%" height="15" fill="rgb(217,221,4)" fg:x="1940" fg:w="1"/><text x="60.0527%" y="527.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (1 samples, 0.03%)</title><rect x="59.8027%" y="501" width="0.0308%" height="15" fill="rgb(212,174,34)" fg:x="1940" fg:w="1"/><text x="60.0527%" y="511.50"></text></g><g><title>chacha20::backends::avx2::rounds (1 samples, 0.03%)</title><rect x="59.8027%" y="485" width="0.0308%" height="15" fill="rgb(253,83,4)" fg:x="1940" fg:w="1"/><text x="60.0527%" y="495.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (1 samples, 0.03%)</title><rect x="59.8027%" y="469" width="0.0308%" height="15" fill="rgb(250,195,49)" fg:x="1940" fg:w="1"/><text x="60.0527%" y="479.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (1 samples, 0.03%)</title><rect x="59.8027%" y="453" width="0.0308%" height="15" fill="rgb(241,192,25)" fg:x="1940" fg:w="1"/><text x="60.0527%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="59.8027%" y="437" width="0.0308%" height="15" fill="rgb(208,124,10)" fg:x="1940" fg:w="1"/><text x="60.0527%" y="447.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.03%)</title><rect x="59.8335%" y="405" width="0.0308%" height="15" fill="rgb(222,33,0)" fg:x="1941" fg:w="1"/><text x="60.0835%" y="415.50"></text></g><g><title>tftp::server::connection::Connection&lt;B,Rng&gt;::decrypt_packet (2 samples, 0.06%)</title><rect x="59.8335%" y="629" width="0.0617%" height="15" fill="rgb(234,209,28)" fg:x="1941" fg:w="2"/><text x="60.0835%" y="639.50"></text></g><g><title>tftp::encrypted_packet::EncryptedPacket::decrypt (2 samples, 0.06%)</title><rect x="59.8335%" y="613" width="0.0617%" height="15" fill="rgb(224,11,23)" fg:x="1941" fg:w="2"/><text x="60.0835%" y="623.50"></text></g><g><title>tftp::encryption::Encryptor&lt;R&gt;::decrypt (2 samples, 0.06%)</title><rect x="59.8335%" y="597" width="0.0617%" height="15" fill="rgb(232,99,1)" fg:x="1941" fg:w="2"/><text x="60.0835%" y="607.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (2 samples, 0.06%)</title><rect x="59.8335%" y="581" width="0.0617%" height="15" fill="rgb(237,95,45)" fg:x="1941" fg:w="2"/><text x="60.0835%" y="591.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::decrypt_in_place_detached (2 samples, 0.06%)</title><rect x="59.8335%" y="565" width="0.0617%" height="15" fill="rgb(208,109,11)" fg:x="1941" fg:w="2"/><text x="60.0835%" y="575.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (2 samples, 0.06%)</title><rect x="59.8335%" y="549" width="0.0617%" height="15" fill="rgb(216,190,48)" fg:x="1941" fg:w="2"/><text x="60.0835%" y="559.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (2 samples, 0.06%)</title><rect x="59.8335%" y="533" width="0.0617%" height="15" fill="rgb(251,171,36)" fg:x="1941" fg:w="2"/><text x="60.0835%" y="543.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (2 samples, 0.06%)</title><rect x="59.8335%" y="517" width="0.0617%" height="15" fill="rgb(230,62,22)" fg:x="1941" fg:w="2"/><text x="60.0835%" y="527.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::write_keystream_block (2 samples, 0.06%)</title><rect x="59.8335%" y="501" width="0.0617%" height="15" fill="rgb(225,114,35)" fg:x="1941" fg:w="2"/><text x="60.0835%" y="511.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (2 samples, 0.06%)</title><rect x="59.8335%" y="485" width="0.0617%" height="15" fill="rgb(215,118,42)" fg:x="1941" fg:w="2"/><text x="60.0835%" y="495.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (2 samples, 0.06%)</title><rect x="59.8335%" y="469" width="0.0617%" height="15" fill="rgb(243,119,21)" fg:x="1941" fg:w="2"/><text x="60.0835%" y="479.50"></text></g><g><title>chacha20::backends::avx2::inner (2 samples, 0.06%)</title><rect x="59.8335%" y="453" width="0.0617%" height="15" fill="rgb(252,177,53)" fg:x="1941" fg:w="2"/><text x="60.0835%" y="463.50"></text></g><g><title>&lt;cipher::stream_core::WriteBlockCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (2 samples, 0.06%)</title><rect x="59.8335%" y="437" width="0.0617%" height="15" fill="rgb(237,209,29)" fg:x="1941" fg:w="2"/><text x="60.0835%" y="447.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (2 samples, 0.06%)</title><rect x="59.8335%" y="421" width="0.0617%" height="15" fill="rgb(212,65,23)" fg:x="1941" fg:w="2"/><text x="60.0835%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="59.8644%" y="405" width="0.0308%" height="15" fill="rgb(230,222,46)" fg:x="1942" fg:w="1"/><text x="60.1144%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (2 samples, 0.06%)</title><rect x="59.8952%" y="389" width="0.0617%" height="15" fill="rgb(215,135,32)" fg:x="1943" fg:w="2"/><text x="60.1452%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.03%)</title><rect x="59.9260%" y="373" width="0.0308%" height="15" fill="rgb(246,101,22)" fg:x="1944" fg:w="1"/><text x="60.1760%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.03%)</title><rect x="59.9568%" y="373" width="0.0308%" height="15" fill="rgb(206,107,13)" fg:x="1945" fg:w="1"/><text x="60.2068%" y="383.50"></text></g><g><title>core::core_arch::simd::u64x4::splat (1 samples, 0.03%)</title><rect x="59.9568%" y="357" width="0.0308%" height="15" fill="rgb(250,100,44)" fg:x="1945" fg:w="1"/><text x="60.2068%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (2 samples, 0.06%)</title><rect x="59.9568%" y="389" width="0.0617%" height="15" fill="rgb(231,147,38)" fg:x="1945" fg:w="2"/><text x="60.2068%" y="399.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="59.9877%" y="373" width="0.0308%" height="15" fill="rgb(229,8,40)" fg:x="1946" fg:w="1"/><text x="60.2377%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="59.9877%" y="357" width="0.0308%" height="15" fill="rgb(221,135,30)" fg:x="1946" fg:w="1"/><text x="60.2377%" y="367.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="59.9877%" y="341" width="0.0308%" height="15" fill="rgb(249,193,18)" fg:x="1946" fg:w="1"/><text x="60.2377%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (1 samples, 0.03%)</title><rect x="60.0185%" y="389" width="0.0308%" height="15" fill="rgb(209,133,39)" fg:x="1947" fg:w="1"/><text x="60.2685%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="60.0493%" y="389" width="0.0308%" height="15" fill="rgb(232,100,14)" fg:x="1948" fg:w="1"/><text x="60.2993%" y="399.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (9 samples, 0.28%)</title><rect x="59.8335%" y="789" width="0.2774%" height="15" fill="rgb(224,185,1)" fg:x="1941" fg:w="9"/><text x="60.0835%" y="799.50"></text></g><g><title>std::panic::catch_unwind (9 samples, 0.28%)</title><rect x="59.8335%" y="773" width="0.2774%" height="15" fill="rgb(223,139,8)" fg:x="1941" fg:w="9"/><text x="60.0835%" y="783.50"></text></g><g><title>std::panicking::try (9 samples, 0.28%)</title><rect x="59.8335%" y="757" width="0.2774%" height="15" fill="rgb(232,213,38)" fg:x="1941" fg:w="9"/><text x="60.0835%" y="767.50"></text></g><g><title>__rust_try (9 samples, 0.28%)</title><rect x="59.8335%" y="741" width="0.2774%" height="15" fill="rgb(207,94,22)" fg:x="1941" fg:w="9"/><text x="60.0835%" y="751.50"></text></g><g><title>std::panicking::try::do_call (9 samples, 0.28%)</title><rect x="59.8335%" y="725" width="0.2774%" height="15" fill="rgb(219,183,54)" fg:x="1941" fg:w="9"/><text x="60.0835%" y="735.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (9 samples, 0.28%)</title><rect x="59.8335%" y="709" width="0.2774%" height="15" fill="rgb(216,185,54)" fg:x="1941" fg:w="9"/><text x="60.0835%" y="719.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (9 samples, 0.28%)</title><rect x="59.8335%" y="693" width="0.2774%" height="15" fill="rgb(254,217,39)" fg:x="1941" fg:w="9"/><text x="60.0835%" y="703.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (9 samples, 0.28%)</title><rect x="59.8335%" y="677" width="0.2774%" height="15" fill="rgb(240,178,23)" fg:x="1941" fg:w="9"/><text x="60.0835%" y="687.50"></text></g><g><title>tftp::server::multi_thread::spawn_writer::{{closure}} (9 samples, 0.28%)</title><rect x="59.8335%" y="661" width="0.2774%" height="15" fill="rgb(218,11,47)" fg:x="1941" fg:w="9"/><text x="60.0835%" y="671.50"></text></g><g><title>tftp::server::helpers::write::handle_write (9 samples, 0.28%)</title><rect x="59.8335%" y="645" width="0.2774%" height="15" fill="rgb(218,51,51)" fg:x="1941" fg:w="9"/><text x="60.0835%" y="655.50"></text></g><g><title>tftp::server::connection::Connection&lt;B,Rng&gt;::send_packet (7 samples, 0.22%)</title><rect x="59.8952%" y="629" width="0.2158%" height="15" fill="rgb(238,126,27)" fg:x="1943" fg:w="7"/><text x="60.1452%" y="639.50"></text></g><g><title>tftp::server::connection::Connection&lt;B,Rng&gt;::send_bytes (7 samples, 0.22%)</title><rect x="59.8952%" y="613" width="0.2158%" height="15" fill="rgb(249,202,22)" fg:x="1943" fg:w="7"/><text x="60.1452%" y="623.50"></text></g><g><title>tftp::encrypted_packet::EncryptedPacket::encrypt (7 samples, 0.22%)</title><rect x="59.8952%" y="597" width="0.2158%" height="15" fill="rgb(254,195,49)" fg:x="1943" fg:w="7"/><text x="60.1452%" y="607.50"></text></g><g><title>tftp::encryption::Encryptor&lt;R&gt;::encrypt (7 samples, 0.22%)</title><rect x="59.8952%" y="581" width="0.2158%" height="15" fill="rgb(208,123,14)" fg:x="1943" fg:w="7"/><text x="60.1452%" y="591.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::encrypt_in_place_detached (7 samples, 0.22%)</title><rect x="59.8952%" y="565" width="0.2158%" height="15" fill="rgb(224,200,8)" fg:x="1943" fg:w="7"/><text x="60.1452%" y="575.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::encrypt_in_place_detached (7 samples, 0.22%)</title><rect x="59.8952%" y="549" width="0.2158%" height="15" fill="rgb(217,61,36)" fg:x="1943" fg:w="7"/><text x="60.1452%" y="559.50"></text></g><g><title>universal_hash::UniversalHash::update_padded (7 samples, 0.22%)</title><rect x="59.8952%" y="533" width="0.2158%" height="15" fill="rgb(206,35,45)" fg:x="1943" fg:w="7"/><text x="60.1452%" y="543.50"></text></g><g><title>universal_hash::UniversalHash::update (7 samples, 0.22%)</title><rect x="59.8952%" y="517" width="0.2158%" height="15" fill="rgb(217,65,33)" fg:x="1943" fg:w="7"/><text x="60.1452%" y="527.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (7 samples, 0.22%)</title><rect x="59.8952%" y="501" width="0.2158%" height="15" fill="rgb(222,158,48)" fg:x="1943" fg:w="7"/><text x="60.1452%" y="511.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (7 samples, 0.22%)</title><rect x="59.8952%" y="485" width="0.2158%" height="15" fill="rgb(254,2,54)" fg:x="1943" fg:w="7"/><text x="60.1452%" y="495.50"></text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (7 samples, 0.22%)</title><rect x="59.8952%" y="469" width="0.2158%" height="15" fill="rgb(250,143,38)" fg:x="1943" fg:w="7"/><text x="60.1452%" y="479.50"></text></g><g><title>&lt;poly1305::backend::avx2::State as universal_hash::UhfBackend&gt;::proc_par_blocks (7 samples, 0.22%)</title><rect x="59.8952%" y="453" width="0.2158%" height="15" fill="rgb(248,25,0)" fg:x="1943" fg:w="7"/><text x="60.1452%" y="463.50"></text></g><g><title>poly1305::backend::avx2::State::compute_par_blocks (7 samples, 0.22%)</title><rect x="59.8952%" y="437" width="0.2158%" height="15" fill="rgb(206,152,27)" fg:x="1943" fg:w="7"/><text x="60.1452%" y="447.50"></text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_par_blocks (7 samples, 0.22%)</title><rect x="59.8952%" y="421" width="0.2158%" height="15" fill="rgb(240,77,30)" fg:x="1943" fg:w="7"/><text x="60.1452%" y="431.50"></text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_loaded_blocks (7 samples, 0.22%)</title><rect x="59.8952%" y="405" width="0.2158%" height="15" fill="rgb(231,5,3)" fg:x="1943" fg:w="7"/><text x="60.1452%" y="415.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (1 samples, 0.03%)</title><rect x="60.0801%" y="389" width="0.0308%" height="15" fill="rgb(207,226,32)" fg:x="1949" fg:w="1"/><text x="60.3301%" y="399.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (1 samples, 0.03%)</title><rect x="60.0801%" y="373" width="0.0308%" height="15" fill="rgb(222,207,47)" fg:x="1949" fg:w="1"/><text x="60.3301%" y="383.50"></text></g><g><title>subtle::&lt;impl core::convert::From&lt;subtle::Choice&gt; for bool&gt;::from (1 samples, 0.03%)</title><rect x="60.1110%" y="789" width="0.0308%" height="15" fill="rgb(229,115,45)" fg:x="1950" fg:w="1"/><text x="60.3610%" y="799.50"></text></g><g><title>chacha20::backends::avx2::inner (3 samples, 0.09%)</title><rect x="60.1418%" y="645" width="0.0925%" height="15" fill="rgb(224,191,6)" fg:x="1951" fg:w="3"/><text x="60.3918%" y="655.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (3 samples, 0.09%)</title><rect x="60.1418%" y="629" width="0.0925%" height="15" fill="rgb(230,227,24)" fg:x="1951" fg:w="3"/><text x="60.3918%" y="639.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (3 samples, 0.09%)</title><rect x="60.1418%" y="613" width="0.0925%" height="15" fill="rgb(228,80,19)" fg:x="1951" fg:w="3"/><text x="60.3918%" y="623.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (3 samples, 0.09%)</title><rect x="60.1418%" y="597" width="0.0925%" height="15" fill="rgb(247,229,0)" fg:x="1951" fg:w="3"/><text x="60.3918%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.09%)</title><rect x="60.1418%" y="581" width="0.0925%" height="15" fill="rgb(237,194,15)" fg:x="1951" fg:w="3"/><text x="60.3918%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.09%)</title><rect x="60.1418%" y="565" width="0.0925%" height="15" fill="rgb(219,203,20)" fg:x="1951" fg:w="3"/><text x="60.3918%" y="575.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.09%)</title><rect x="60.1418%" y="549" width="0.0925%" height="15" fill="rgb(234,128,8)" fg:x="1951" fg:w="3"/><text x="60.3918%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (3 samples, 0.09%)</title><rect x="60.1418%" y="533" width="0.0925%" height="15" fill="rgb(248,202,8)" fg:x="1951" fg:w="3"/><text x="60.3918%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (3 samples, 0.09%)</title><rect x="60.1418%" y="517" width="0.0925%" height="15" fill="rgb(206,104,37)" fg:x="1951" fg:w="3"/><text x="60.3918%" y="527.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (3 samples, 0.09%)</title><rect x="60.1418%" y="501" width="0.0925%" height="15" fill="rgb(223,8,27)" fg:x="1951" fg:w="3"/><text x="60.3918%" y="511.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (3 samples, 0.09%)</title><rect x="60.1418%" y="485" width="0.0925%" height="15" fill="rgb(216,217,28)" fg:x="1951" fg:w="3"/><text x="60.3918%" y="495.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (3 samples, 0.09%)</title><rect x="60.1418%" y="469" width="0.0925%" height="15" fill="rgb(249,199,1)" fg:x="1951" fg:w="3"/><text x="60.3918%" y="479.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (3 samples, 0.09%)</title><rect x="60.1418%" y="453" width="0.0925%" height="15" fill="rgb(240,85,17)" fg:x="1951" fg:w="3"/><text x="60.3918%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.09%)</title><rect x="60.1418%" y="437" width="0.0925%" height="15" fill="rgb(206,108,45)" fg:x="1951" fg:w="3"/><text x="60.3918%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.09%)</title><rect x="60.1418%" y="421" width="0.0925%" height="15" fill="rgb(245,210,41)" fg:x="1951" fg:w="3"/><text x="60.3918%" y="431.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.09%)</title><rect x="60.1418%" y="405" width="0.0925%" height="15" fill="rgb(206,13,37)" fg:x="1951" fg:w="3"/><text x="60.3918%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (3 samples, 0.09%)</title><rect x="60.1418%" y="389" width="0.0925%" height="15" fill="rgb(250,61,18)" fg:x="1951" fg:w="3"/><text x="60.3918%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (3 samples, 0.09%)</title><rect x="60.1418%" y="373" width="0.0925%" height="15" fill="rgb(235,172,48)" fg:x="1951" fg:w="3"/><text x="60.3918%" y="383.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (3 samples, 0.09%)</title><rect x="60.1418%" y="357" width="0.0925%" height="15" fill="rgb(249,201,17)" fg:x="1951" fg:w="3"/><text x="60.3918%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_broadcastsi128_si256 (1 samples, 0.03%)</title><rect x="60.2343%" y="645" width="0.0308%" height="15" fill="rgb(219,208,6)" fg:x="1954" fg:w="1"/><text x="60.4843%" y="655.50"></text></g><g><title>tftp::encryption::Encryptor&lt;R&gt;::decrypt (5 samples, 0.15%)</title><rect x="60.1418%" y="789" width="0.1541%" height="15" fill="rgb(248,31,23)" fg:x="1951" fg:w="5"/><text x="60.3918%" y="799.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (5 samples, 0.15%)</title><rect x="60.1418%" y="773" width="0.1541%" height="15" fill="rgb(245,15,42)" fg:x="1951" fg:w="5"/><text x="60.3918%" y="783.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (5 samples, 0.15%)</title><rect x="60.1418%" y="757" width="0.1541%" height="15" fill="rgb(222,217,39)" fg:x="1951" fg:w="5"/><text x="60.3918%" y="767.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (5 samples, 0.15%)</title><rect x="60.1418%" y="741" width="0.1541%" height="15" fill="rgb(210,219,27)" fg:x="1951" fg:w="5"/><text x="60.3918%" y="751.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (5 samples, 0.15%)</title><rect x="60.1418%" y="725" width="0.1541%" height="15" fill="rgb(252,166,36)" fg:x="1951" fg:w="5"/><text x="60.3918%" y="735.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (5 samples, 0.15%)</title><rect x="60.1418%" y="709" width="0.1541%" height="15" fill="rgb(245,132,34)" fg:x="1951" fg:w="5"/><text x="60.3918%" y="719.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (5 samples, 0.15%)</title><rect x="60.1418%" y="693" width="0.1541%" height="15" fill="rgb(236,54,3)" fg:x="1951" fg:w="5"/><text x="60.3918%" y="703.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (5 samples, 0.15%)</title><rect x="60.1418%" y="677" width="0.1541%" height="15" fill="rgb(241,173,43)" fg:x="1951" fg:w="5"/><text x="60.3918%" y="687.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (5 samples, 0.15%)</title><rect x="60.1418%" y="661" width="0.1541%" height="15" fill="rgb(215,190,9)" fg:x="1951" fg:w="5"/><text x="60.3918%" y="671.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (1 samples, 0.03%)</title><rect x="60.2651%" y="645" width="0.0308%" height="15" fill="rgb(242,101,16)" fg:x="1955" fg:w="1"/><text x="60.5151%" y="655.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi32 (1 samples, 0.03%)</title><rect x="60.2651%" y="629" width="0.0308%" height="15" fill="rgb(223,190,21)" fg:x="1955" fg:w="1"/><text x="60.5151%" y="639.50"></text></g><g><title>core::core_arch::simd::i32x8::new (1 samples, 0.03%)</title><rect x="60.2651%" y="613" width="0.0308%" height="15" fill="rgb(215,228,25)" fg:x="1955" fg:w="1"/><text x="60.5151%" y="623.50"></text></g><g><title>tftp::encryption::apply_bit_padding (1 samples, 0.03%)</title><rect x="60.2959%" y="789" width="0.0308%" height="15" fill="rgb(225,36,22)" fg:x="1956" fg:w="1"/><text x="60.5459%" y="799.50"></text></g><g><title>tftp::key_management::create_initial_keys (1 samples, 0.03%)</title><rect x="60.3268%" y="789" width="0.0308%" height="15" fill="rgb(251,106,46)" fg:x="1957" fg:w="1"/><text x="60.5768%" y="799.50"></text></g><g><title>&lt;x25519_dalek::x25519::PublicKey as core::convert::From&lt;&amp;x25519_dalek::x25519::EphemeralSecret&gt;&gt;::from (1 samples, 0.03%)</title><rect x="60.3268%" y="773" width="0.0308%" height="15" fill="rgb(208,90,1)" fg:x="1957" fg:w="1"/><text x="60.5768%" y="783.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::mul_base_clamped (1 samples, 0.03%)</title><rect x="60.3268%" y="757" width="0.0308%" height="15" fill="rgb(243,10,4)" fg:x="1957" fg:w="1"/><text x="60.5768%" y="767.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::mul_base (1 samples, 0.03%)</title><rect x="60.3268%" y="741" width="0.0308%" height="15" fill="rgb(212,137,27)" fg:x="1957" fg:w="1"/><text x="60.5768%" y="751.50"></text></g><g><title>curve25519_dalek::edwards::&lt;impl core::ops::arith::Mul&lt;curve25519_dalek::edwards::EdwardsPoint&gt; for &amp;curve25519_dalek::scalar::Scalar&gt;::mul (1 samples, 0.03%)</title><rect x="60.3268%" y="725" width="0.0308%" height="15" fill="rgb(231,220,49)" fg:x="1957" fg:w="1"/><text x="60.5768%" y="735.50"></text></g><g><title>curve25519_dalek::edwards::&lt;impl core::ops::arith::Mul&lt;&amp;curve25519_dalek::edwards::EdwardsPoint&gt; for &amp;curve25519_dalek::scalar::Scalar&gt;::mul (1 samples, 0.03%)</title><rect x="60.3268%" y="709" width="0.0308%" height="15" fill="rgb(237,96,20)" fg:x="1957" fg:w="1"/><text x="60.5768%" y="719.50"></text></g><g><title>&lt;&amp;curve25519_dalek::edwards::EdwardsPoint as core::ops::arith::Mul&lt;&amp;curve25519_dalek::scalar::Scalar&gt;&gt;::mul (1 samples, 0.03%)</title><rect x="60.3268%" y="693" width="0.0308%" height="15" fill="rgb(239,229,30)" fg:x="1957" fg:w="1"/><text x="60.5768%" y="703.50"></text></g><g><title>curve25519_dalek::backend::variable_base_mul (1 samples, 0.03%)</title><rect x="60.3268%" y="677" width="0.0308%" height="15" fill="rgb(219,65,33)" fg:x="1957" fg:w="1"/><text x="60.5768%" y="687.50"></text></g><g><title>curve25519_dalek::backend::vector::scalar_mul::variable_base::spec_avx2::mul (1 samples, 0.03%)</title><rect x="60.3268%" y="661" width="0.0308%" height="15" fill="rgb(243,134,7)" fg:x="1957" fg:w="1"/><text x="60.5768%" y="671.50"></text></g><g><title>curve25519_dalek::backend::vector::scalar_mul::variable_base::spec_avx2::mul::_impl_mul (1 samples, 0.03%)</title><rect x="60.3268%" y="645" width="0.0308%" height="15" fill="rgb(216,177,54)" fg:x="1957" fg:w="1"/><text x="60.5768%" y="655.50"></text></g><g><title>curve25519_dalek::backend::vector::avx2::edwards::ExtendedPoint::mul_by_pow_2 (1 samples, 0.03%)</title><rect x="60.3268%" y="629" width="0.0308%" height="15" fill="rgb(211,160,20)" fg:x="1957" fg:w="1"/><text x="60.5768%" y="639.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::avx2::edwards::ExtendedPoint as curve25519_dalek::backend::vector::avx2::edwards::ExtendedPoint::mul_by_pow_2::__Impl_mul_by_pow_2__&gt;::_impl_mul_by_pow_2 (1 samples, 0.03%)</title><rect x="60.3268%" y="613" width="0.0308%" height="15" fill="rgb(239,85,39)" fg:x="1957" fg:w="1"/><text x="60.5768%" y="623.50"></text></g><g><title>curve25519_dalek::backend::vector::avx2::edwards::ExtendedPoint::double (1 samples, 0.03%)</title><rect x="60.3268%" y="597" width="0.0308%" height="15" fill="rgb(232,125,22)" fg:x="1957" fg:w="1"/><text x="60.5768%" y="607.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::avx2::edwards::ExtendedPoint as curve25519_dalek::backend::vector::avx2::edwards::ExtendedPoint::double::__Impl_double__&gt;::_impl_double (1 samples, 0.03%)</title><rect x="60.3268%" y="581" width="0.0308%" height="15" fill="rgb(244,57,34)" fg:x="1957" fg:w="1"/><text x="60.5768%" y="591.50"></text></g><g><title>curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4::shuffle (1 samples, 0.03%)</title><rect x="60.3268%" y="565" width="0.0308%" height="15" fill="rgb(214,203,32)" fg:x="1957" fg:w="1"/><text x="60.5768%" y="575.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4 as curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4::shuffle::__Impl_shuffle__&gt;::_impl_shuffle (1 samples, 0.03%)</title><rect x="60.3268%" y="549" width="0.0308%" height="15" fill="rgb(207,58,43)" fg:x="1957" fg:w="1"/><text x="60.5768%" y="559.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4 as curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4::shuffle::__Impl_shuffle__&gt;::_impl_shuffle::shuffle_lanes (1 samples, 0.03%)</title><rect x="60.3268%" y="533" width="0.0308%" height="15" fill="rgb(215,193,15)" fg:x="1957" fg:w="1"/><text x="60.5768%" y="543.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.03%)</title><rect x="60.3268%" y="517" width="0.0308%" height="15" fill="rgb(232,15,44)" fg:x="1957" fg:w="1"/><text x="60.5768%" y="527.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::packed_simd::u64x4 as core::convert::From&lt;core::core_arch::x86::__m256i&gt;&gt;::from (1 samples, 0.03%)</title><rect x="60.3268%" y="501" width="0.0308%" height="15" fill="rgb(212,3,48)" fg:x="1957" fg:w="1"/><text x="60.5768%" y="511.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (4 samples, 0.12%)</title><rect x="60.3576%" y="565" width="0.1233%" height="15" fill="rgb(218,128,7)" fg:x="1958" fg:w="4"/><text x="60.6076%" y="575.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_blend_epi32 (1 samples, 0.03%)</title><rect x="60.4501%" y="549" width="0.0308%" height="15" fill="rgb(226,216,39)" fg:x="1961" fg:w="1"/><text x="60.7001%" y="559.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (3 samples, 0.09%)</title><rect x="60.4809%" y="565" width="0.0925%" height="15" fill="rgb(243,47,51)" fg:x="1962" fg:w="3"/><text x="60.7309%" y="575.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (8 samples, 0.25%)</title><rect x="60.3576%" y="581" width="0.2466%" height="15" fill="rgb(241,183,40)" fg:x="1958" fg:w="8"/><text x="60.6076%" y="591.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (1 samples, 0.03%)</title><rect x="60.5734%" y="565" width="0.0308%" height="15" fill="rgb(231,217,32)" fg:x="1965" fg:w="1"/><text x="60.8234%" y="575.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (1 samples, 0.03%)</title><rect x="60.5734%" y="549" width="0.0308%" height="15" fill="rgb(229,61,38)" fg:x="1965" fg:w="1"/><text x="60.8234%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.03%)</title><rect x="60.6042%" y="565" width="0.0308%" height="15" fill="rgb(225,210,5)" fg:x="1966" fg:w="1"/><text x="60.8542%" y="575.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.03%)</title><rect x="60.6350%" y="549" width="0.0308%" height="15" fill="rgb(231,79,45)" fg:x="1967" fg:w="1"/><text x="60.8850%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.03%)</title><rect x="60.6658%" y="549" width="0.0308%" height="15" fill="rgb(224,100,7)" fg:x="1968" fg:w="1"/><text x="60.9158%" y="559.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::authenticate_lengths (12 samples, 0.37%)</title><rect x="60.3576%" y="709" width="0.3699%" height="15" fill="rgb(241,198,18)" fg:x="1958" fg:w="12"/><text x="60.6076%" y="719.50"></text></g><g><title>universal_hash::UniversalHash::update (12 samples, 0.37%)</title><rect x="60.3576%" y="693" width="0.3699%" height="15" fill="rgb(252,97,53)" fg:x="1958" fg:w="12"/><text x="60.6076%" y="703.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (12 samples, 0.37%)</title><rect x="60.3576%" y="677" width="0.3699%" height="15" fill="rgb(220,88,7)" fg:x="1958" fg:w="12"/><text x="60.6076%" y="687.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (12 samples, 0.37%)</title><rect x="60.3576%" y="661" width="0.3699%" height="15" fill="rgb(213,176,14)" fg:x="1958" fg:w="12"/><text x="60.6076%" y="671.50"></text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (12 samples, 0.37%)</title><rect x="60.3576%" y="645" width="0.3699%" height="15" fill="rgb(246,73,7)" fg:x="1958" fg:w="12"/><text x="60.6076%" y="655.50"></text></g><g><title>&lt;poly1305::backend::avx2::State as universal_hash::UhfBackend&gt;::proc_block (12 samples, 0.37%)</title><rect x="60.3576%" y="629" width="0.3699%" height="15" fill="rgb(245,64,36)" fg:x="1958" fg:w="12"/><text x="60.6076%" y="639.50"></text></g><g><title>poly1305::backend::avx2::State::compute_block (12 samples, 0.37%)</title><rect x="60.3576%" y="613" width="0.3699%" height="15" fill="rgb(245,80,10)" fg:x="1958" fg:w="12"/><text x="60.6076%" y="623.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (12 samples, 0.37%)</title><rect x="60.3576%" y="597" width="0.3699%" height="15" fill="rgb(232,107,50)" fg:x="1958" fg:w="12"/><text x="60.6076%" y="607.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (4 samples, 0.12%)</title><rect x="60.6042%" y="581" width="0.1233%" height="15" fill="rgb(253,3,0)" fg:x="1966" fg:w="4"/><text x="60.8542%" y="591.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (3 samples, 0.09%)</title><rect x="60.6350%" y="565" width="0.0925%" height="15" fill="rgb(212,99,53)" fg:x="1967" fg:w="3"/><text x="60.8850%" y="575.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi64x (1 samples, 0.03%)</title><rect x="60.6967%" y="549" width="0.0308%" height="15" fill="rgb(249,111,54)" fg:x="1969" fg:w="1"/><text x="60.9467%" y="559.50"></text></g><g><title>&lt;core::ops::index_range::IndexRange as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="60.7275%" y="597" width="0.0308%" height="15" fill="rgb(249,55,30)" fg:x="1970" fg:w="1"/><text x="60.9775%" y="607.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.06%)</title><rect x="60.7275%" y="613" width="0.0617%" height="15" fill="rgb(237,47,42)" fg:x="1970" fg:w="2"/><text x="60.9775%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.03%)</title><rect x="60.7583%" y="597" width="0.0308%" height="15" fill="rgb(211,20,18)" fg:x="1971" fg:w="1"/><text x="61.0083%" y="607.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (1 samples, 0.03%)</title><rect x="60.7583%" y="581" width="0.0308%" height="15" fill="rgb(231,203,46)" fg:x="1971" fg:w="1"/><text x="61.0083%" y="591.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (1 samples, 0.03%)</title><rect x="60.7583%" y="565" width="0.0308%" height="15" fill="rgb(237,142,3)" fg:x="1971" fg:w="1"/><text x="61.0083%" y="575.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.03%)</title><rect x="60.7583%" y="549" width="0.0308%" height="15" fill="rgb(241,107,1)" fg:x="1971" fg:w="1"/><text x="61.0083%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.03%)</title><rect x="60.7583%" y="533" width="0.0308%" height="15" fill="rgb(229,83,13)" fg:x="1971" fg:w="1"/><text x="61.0083%" y="543.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (1 samples, 0.03%)</title><rect x="60.7891%" y="613" width="0.0308%" height="15" fill="rgb(241,91,40)" fg:x="1972" fg:w="1"/><text x="61.0391%" y="623.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (4 samples, 0.12%)</title><rect x="61.0358%" y="533" width="0.1233%" height="15" fill="rgb(225,3,45)" fg:x="1980" fg:w="4"/><text x="61.2858%" y="543.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="61.1591%" y="517" width="0.0308%" height="15" fill="rgb(244,223,14)" fg:x="1984" fg:w="1"/><text x="61.4091%" y="527.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="61.1899%" y="517" width="0.0308%" height="15" fill="rgb(224,124,37)" fg:x="1985" fg:w="1"/><text x="61.4399%" y="527.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (2 samples, 0.06%)</title><rect x="61.2207%" y="501" width="0.0617%" height="15" fill="rgb(251,171,30)" fg:x="1986" fg:w="2"/><text x="61.4707%" y="511.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="61.2824%" y="501" width="0.0308%" height="15" fill="rgb(236,46,54)" fg:x="1988" fg:w="1"/><text x="61.5324%" y="511.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (3 samples, 0.09%)</title><rect x="61.3132%" y="501" width="0.0925%" height="15" fill="rgb(245,213,5)" fg:x="1989" fg:w="3"/><text x="61.5632%" y="511.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="61.4057%" y="501" width="0.0308%" height="15" fill="rgb(230,144,27)" fg:x="1992" fg:w="1"/><text x="61.6557%" y="511.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="61.4057%" y="485" width="0.0308%" height="15" fill="rgb(220,86,6)" fg:x="1992" fg:w="1"/><text x="61.6557%" y="495.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (2 samples, 0.06%)</title><rect x="61.4365%" y="501" width="0.0617%" height="15" fill="rgb(240,20,13)" fg:x="1993" fg:w="2"/><text x="61.6865%" y="511.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (10 samples, 0.31%)</title><rect x="61.2207%" y="517" width="0.3083%" height="15" fill="rgb(217,89,34)" fg:x="1986" fg:w="10"/><text x="61.4707%" y="527.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="61.4982%" y="501" width="0.0308%" height="15" fill="rgb(229,13,5)" fg:x="1995" fg:w="1"/><text x="61.7482%" y="511.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.03%)</title><rect x="61.5290%" y="517" width="0.0308%" height="15" fill="rgb(244,67,35)" fg:x="1996" fg:w="1"/><text x="61.7790%" y="527.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.03%)</title><rect x="61.5598%" y="517" width="0.0308%" height="15" fill="rgb(221,40,2)" fg:x="1997" fg:w="1"/><text x="61.8098%" y="527.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.03%)</title><rect x="61.5598%" y="501" width="0.0308%" height="15" fill="rgb(237,157,21)" fg:x="1997" fg:w="1"/><text x="61.8098%" y="511.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (3 samples, 0.09%)</title><rect x="61.5906%" y="517" width="0.0925%" height="15" fill="rgb(222,94,11)" fg:x="1998" fg:w="3"/><text x="61.8406%" y="527.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="61.6831%" y="517" width="0.0308%" height="15" fill="rgb(249,113,6)" fg:x="2001" fg:w="1"/><text x="61.9331%" y="527.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="61.7139%" y="517" width="0.0308%" height="15" fill="rgb(238,137,36)" fg:x="2002" fg:w="1"/><text x="61.9639%" y="527.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (4 samples, 0.12%)</title><rect x="61.7448%" y="517" width="0.1233%" height="15" fill="rgb(210,102,26)" fg:x="2003" fg:w="4"/><text x="61.9948%" y="527.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (26 samples, 0.80%)</title><rect x="61.1591%" y="533" width="0.8015%" height="15" fill="rgb(218,30,30)" fg:x="1984" fg:w="26"/><text x="61.4091%" y="543.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (3 samples, 0.09%)</title><rect x="61.8681%" y="517" width="0.0925%" height="15" fill="rgb(214,67,26)" fg:x="2007" fg:w="3"/><text x="62.1181%" y="527.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="61.9605%" y="517" width="0.0308%" height="15" fill="rgb(251,9,53)" fg:x="2010" fg:w="1"/><text x="62.2105%" y="527.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (1 samples, 0.03%)</title><rect x="61.9605%" y="501" width="0.0308%" height="15" fill="rgb(228,204,25)" fg:x="2010" fg:w="1"/><text x="62.2105%" y="511.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (1 samples, 0.03%)</title><rect x="61.9605%" y="485" width="0.0308%" height="15" fill="rgb(207,153,8)" fg:x="2010" fg:w="1"/><text x="62.2105%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.03%)</title><rect x="61.9605%" y="469" width="0.0308%" height="15" fill="rgb(242,9,16)" fg:x="2010" fg:w="1"/><text x="62.2105%" y="479.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (2 samples, 0.06%)</title><rect x="61.9914%" y="517" width="0.0617%" height="15" fill="rgb(217,211,10)" fg:x="2011" fg:w="2"/><text x="62.2414%" y="527.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="62.0530%" y="517" width="0.0308%" height="15" fill="rgb(219,228,52)" fg:x="2013" fg:w="1"/><text x="62.3030%" y="527.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="62.0838%" y="501" width="0.0308%" height="15" fill="rgb(231,92,29)" fg:x="2014" fg:w="1"/><text x="62.3338%" y="511.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="62.1147%" y="501" width="0.0308%" height="15" fill="rgb(232,8,23)" fg:x="2015" fg:w="1"/><text x="62.3647%" y="511.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (2 samples, 0.06%)</title><rect x="62.1455%" y="501" width="0.0617%" height="15" fill="rgb(216,211,34)" fg:x="2016" fg:w="2"/><text x="62.3955%" y="511.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="62.2072%" y="501" width="0.0308%" height="15" fill="rgb(236,151,0)" fg:x="2018" fg:w="1"/><text x="62.4572%" y="511.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (6 samples, 0.18%)</title><rect x="62.0838%" y="517" width="0.1850%" height="15" fill="rgb(209,168,3)" fg:x="2014" fg:w="6"/><text x="62.3338%" y="527.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="62.2380%" y="501" width="0.0308%" height="15" fill="rgb(208,129,28)" fg:x="2019" fg:w="1"/><text x="62.4880%" y="511.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="62.2688%" y="517" width="0.0308%" height="15" fill="rgb(229,78,22)" fg:x="2020" fg:w="1"/><text x="62.5188%" y="527.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (5 samples, 0.15%)</title><rect x="62.2996%" y="517" width="0.1541%" height="15" fill="rgb(228,187,13)" fg:x="2021" fg:w="5"/><text x="62.5496%" y="527.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="62.4538%" y="517" width="0.0308%" height="15" fill="rgb(240,119,24)" fg:x="2026" fg:w="1"/><text x="62.7038%" y="527.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="62.4846%" y="517" width="0.0308%" height="15" fill="rgb(209,194,42)" fg:x="2027" fg:w="1"/><text x="62.7346%" y="527.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (20 samples, 0.62%)</title><rect x="61.9605%" y="533" width="0.6165%" height="15" fill="rgb(247,200,46)" fg:x="2010" fg:w="20"/><text x="62.2105%" y="543.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (2 samples, 0.06%)</title><rect x="62.5154%" y="517" width="0.0617%" height="15" fill="rgb(218,76,16)" fg:x="2028" fg:w="2"/><text x="62.7654%" y="527.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (2 samples, 0.06%)</title><rect x="62.5771%" y="533" width="0.0617%" height="15" fill="rgb(225,21,48)" fg:x="2030" fg:w="2"/><text x="62.8271%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (2 samples, 0.06%)</title><rect x="62.6387%" y="533" width="0.0617%" height="15" fill="rgb(239,223,50)" fg:x="2032" fg:w="2"/><text x="62.8887%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (2 samples, 0.06%)</title><rect x="62.7004%" y="533" width="0.0617%" height="15" fill="rgb(244,45,21)" fg:x="2034" fg:w="2"/><text x="62.9504%" y="543.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.03%)</title><rect x="62.7312%" y="517" width="0.0308%" height="15" fill="rgb(232,33,43)" fg:x="2035" fg:w="1"/><text x="62.9812%" y="527.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="62.7620%" y="533" width="0.0308%" height="15" fill="rgb(209,8,3)" fg:x="2036" fg:w="1"/><text x="63.0120%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (4 samples, 0.12%)</title><rect x="62.7928%" y="533" width="0.1233%" height="15" fill="rgb(214,25,53)" fg:x="2037" fg:w="4"/><text x="63.0428%" y="543.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="62.9162%" y="533" width="0.0308%" height="15" fill="rgb(254,186,54)" fg:x="2041" fg:w="1"/><text x="63.1662%" y="543.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (4 samples, 0.12%)</title><rect x="62.9470%" y="533" width="0.1233%" height="15" fill="rgb(208,174,49)" fg:x="2042" fg:w="4"/><text x="63.1970%" y="543.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (3 samples, 0.09%)</title><rect x="63.0703%" y="533" width="0.0925%" height="15" fill="rgb(233,191,51)" fg:x="2046" fg:w="3"/><text x="63.3203%" y="543.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (70 samples, 2.16%)</title><rect x="61.0358%" y="549" width="2.1578%" height="15" fill="rgb(222,134,10)" fg:x="1980" fg:w="70"/><text x="61.2858%" y="559.50">c..</text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="63.1628%" y="533" width="0.0308%" height="15" fill="rgb(230,226,20)" fg:x="2049" fg:w="1"/><text x="63.4128%" y="543.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="63.1936%" y="533" width="0.0308%" height="15" fill="rgb(251,111,25)" fg:x="2050" fg:w="1"/><text x="63.4436%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (2 samples, 0.06%)</title><rect x="63.1936%" y="549" width="0.0617%" height="15" fill="rgb(224,40,46)" fg:x="2050" fg:w="2"/><text x="63.4436%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="63.2244%" y="533" width="0.0308%" height="15" fill="rgb(236,108,47)" fg:x="2051" fg:w="1"/><text x="63.4744%" y="543.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.03%)</title><rect x="63.2244%" y="517" width="0.0308%" height="15" fill="rgb(234,93,0)" fg:x="2051" fg:w="1"/><text x="63.4744%" y="527.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="63.2552%" y="549" width="0.0308%" height="15" fill="rgb(224,213,32)" fg:x="2052" fg:w="1"/><text x="63.5052%" y="559.50"></text></g><g><title>chacha20::backends::avx2::rounds (74 samples, 2.28%)</title><rect x="61.0358%" y="565" width="2.2811%" height="15" fill="rgb(251,11,48)" fg:x="1980" fg:w="74"/><text x="61.2858%" y="575.50">c..</text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="63.2861%" y="549" width="0.0308%" height="15" fill="rgb(236,173,5)" fg:x="2053" fg:w="1"/><text x="63.5361%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="63.3169%" y="565" width="0.0308%" height="15" fill="rgb(230,95,12)" fg:x="2054" fg:w="1"/><text x="63.5669%" y="575.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (2 samples, 0.06%)</title><rect x="63.3477%" y="565" width="0.0617%" height="15" fill="rgb(232,209,1)" fg:x="2055" fg:w="2"/><text x="63.5977%" y="575.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="63.4094%" y="565" width="0.0308%" height="15" fill="rgb(232,6,1)" fg:x="2057" fg:w="1"/><text x="63.6594%" y="575.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="63.4402%" y="565" width="0.0308%" height="15" fill="rgb(210,224,50)" fg:x="2058" fg:w="1"/><text x="63.6902%" y="575.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_par_ks_blocks (84 samples, 2.59%)</title><rect x="60.9125%" y="581" width="2.5894%" height="15" fill="rgb(228,127,35)" fg:x="1976" fg:w="84"/><text x="61.1625%" y="591.50">&lt;c..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.03%)</title><rect x="63.4710%" y="565" width="0.0308%" height="15" fill="rgb(245,102,45)" fg:x="2059" fg:w="1"/><text x="63.7210%" y="575.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (2 samples, 0.06%)</title><rect x="63.5018%" y="501" width="0.0617%" height="15" fill="rgb(214,1,49)" fg:x="2060" fg:w="2"/><text x="63.7518%" y="511.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="63.5635%" y="485" width="0.0308%" height="15" fill="rgb(226,163,40)" fg:x="2062" fg:w="1"/><text x="63.8135%" y="495.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.03%)</title><rect x="63.5635%" y="469" width="0.0308%" height="15" fill="rgb(239,212,28)" fg:x="2062" fg:w="1"/><text x="63.8135%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (2 samples, 0.06%)</title><rect x="63.5635%" y="501" width="0.0617%" height="15" fill="rgb(220,20,13)" fg:x="2062" fg:w="2"/><text x="63.8135%" y="511.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="63.5943%" y="485" width="0.0308%" height="15" fill="rgb(210,164,35)" fg:x="2063" fg:w="1"/><text x="63.8443%" y="495.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="63.5943%" y="469" width="0.0308%" height="15" fill="rgb(248,109,41)" fg:x="2063" fg:w="1"/><text x="63.8443%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.03%)</title><rect x="63.6252%" y="501" width="0.0308%" height="15" fill="rgb(238,23,50)" fg:x="2064" fg:w="1"/><text x="63.8752%" y="511.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.03%)</title><rect x="63.6252%" y="485" width="0.0308%" height="15" fill="rgb(211,48,49)" fg:x="2064" fg:w="1"/><text x="63.8752%" y="495.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (7 samples, 0.22%)</title><rect x="63.5018%" y="517" width="0.2158%" height="15" fill="rgb(223,36,21)" fg:x="2060" fg:w="7"/><text x="63.7518%" y="527.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (2 samples, 0.06%)</title><rect x="63.6560%" y="501" width="0.0617%" height="15" fill="rgb(207,123,46)" fg:x="2065" fg:w="2"/><text x="63.9060%" y="511.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="63.7176%" y="501" width="0.0308%" height="15" fill="rgb(240,218,32)" fg:x="2067" fg:w="1"/><text x="63.9676%" y="511.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="63.7485%" y="501" width="0.0308%" height="15" fill="rgb(252,5,43)" fg:x="2068" fg:w="1"/><text x="63.9985%" y="511.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.03%)</title><rect x="63.7793%" y="501" width="0.0308%" height="15" fill="rgb(252,84,19)" fg:x="2069" fg:w="1"/><text x="64.0293%" y="511.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="63.7793%" y="485" width="0.0308%" height="15" fill="rgb(243,152,39)" fg:x="2069" fg:w="1"/><text x="64.0293%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (2 samples, 0.06%)</title><rect x="63.8101%" y="501" width="0.0617%" height="15" fill="rgb(234,160,15)" fg:x="2070" fg:w="2"/><text x="64.0601%" y="511.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (6 samples, 0.18%)</title><rect x="63.7176%" y="517" width="0.1850%" height="15" fill="rgb(237,34,20)" fg:x="2067" fg:w="6"/><text x="63.9676%" y="527.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="63.8718%" y="501" width="0.0308%" height="15" fill="rgb(229,97,13)" fg:x="2072" fg:w="1"/><text x="64.1218%" y="511.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="63.9026%" y="517" width="0.0308%" height="15" fill="rgb(234,71,50)" fg:x="2073" fg:w="1"/><text x="64.1526%" y="527.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="63.9334%" y="517" width="0.0308%" height="15" fill="rgb(253,155,4)" fg:x="2074" fg:w="1"/><text x="64.1834%" y="527.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (18 samples, 0.55%)</title><rect x="63.5018%" y="533" width="0.5549%" height="15" fill="rgb(222,185,37)" fg:x="2060" fg:w="18"/><text x="63.7518%" y="543.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (3 samples, 0.09%)</title><rect x="63.9642%" y="517" width="0.0925%" height="15" fill="rgb(251,177,13)" fg:x="2075" fg:w="3"/><text x="64.2142%" y="527.50"></text></g><g><title>cipher::stream_core::StreamBackend::gen_tail_blocks (19 samples, 0.59%)</title><rect x="63.5018%" y="581" width="0.5857%" height="15" fill="rgb(250,179,40)" fg:x="2060" fg:w="19"/><text x="63.7518%" y="591.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (19 samples, 0.59%)</title><rect x="63.5018%" y="565" width="0.5857%" height="15" fill="rgb(242,44,2)" fg:x="2060" fg:w="19"/><text x="63.7518%" y="575.50"></text></g><g><title>chacha20::backends::avx2::rounds (19 samples, 0.59%)</title><rect x="63.5018%" y="549" width="0.5857%" height="15" fill="rgb(216,177,13)" fg:x="2060" fg:w="19"/><text x="63.7518%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="64.0567%" y="533" width="0.0308%" height="15" fill="rgb(216,106,43)" fg:x="2078" fg:w="1"/><text x="64.3067%" y="543.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.03%)</title><rect x="64.0567%" y="517" width="0.0308%" height="15" fill="rgb(216,183,2)" fg:x="2078" fg:w="1"/><text x="64.3067%" y="527.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3 samples, 0.09%)</title><rect x="64.2725%" y="325" width="0.0925%" height="15" fill="rgb(249,75,3)" fg:x="2085" fg:w="3"/><text x="64.5225%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.03%)</title><rect x="64.3342%" y="309" width="0.0308%" height="15" fill="rgb(219,67,39)" fg:x="2087" fg:w="1"/><text x="64.5842%" y="319.50"></text></g><g><title>core::slice::raw::from_raw_parts (1 samples, 0.03%)</title><rect x="64.7041%" y="309" width="0.0308%" height="15" fill="rgb(253,228,2)" fg:x="2099" fg:w="1"/><text x="64.9541%" y="319.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.03%)</title><rect x="64.7041%" y="293" width="0.0308%" height="15" fill="rgb(235,138,27)" fg:x="2099" fg:w="1"/><text x="64.9541%" y="303.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (1 samples, 0.03%)</title><rect x="64.7041%" y="277" width="0.0308%" height="15" fill="rgb(236,97,51)" fg:x="2099" fg:w="1"/><text x="64.9541%" y="287.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (14 samples, 0.43%)</title><rect x="64.3650%" y="325" width="0.4316%" height="15" fill="rgb(240,80,30)" fg:x="2088" fg:w="14"/><text x="64.6150%" y="335.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (2 samples, 0.06%)</title><rect x="64.7349%" y="309" width="0.0617%" height="15" fill="rgb(230,178,19)" fg:x="2100" fg:w="2"/><text x="64.9849%" y="319.50"></text></g><g><title>core::slice::raw::from_raw_parts (1 samples, 0.03%)</title><rect x="64.7965%" y="325" width="0.0308%" height="15" fill="rgb(210,190,27)" fg:x="2102" fg:w="1"/><text x="65.0465%" y="335.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.03%)</title><rect x="64.7965%" y="309" width="0.0308%" height="15" fill="rgb(222,107,31)" fg:x="2102" fg:w="1"/><text x="65.0465%" y="319.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (1 samples, 0.03%)</title><rect x="64.7965%" y="293" width="0.0308%" height="15" fill="rgb(216,127,34)" fg:x="2102" fg:w="1"/><text x="65.0465%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (25 samples, 0.77%)</title><rect x="64.0875%" y="357" width="0.7707%" height="15" fill="rgb(234,116,52)" fg:x="2079" fg:w="25"/><text x="64.3375%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (19 samples, 0.59%)</title><rect x="64.2725%" y="341" width="0.5857%" height="15" fill="rgb(222,124,15)" fg:x="2085" fg:w="19"/><text x="64.5225%" y="351.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (1 samples, 0.03%)</title><rect x="64.8274%" y="325" width="0.0308%" height="15" fill="rgb(231,179,28)" fg:x="2103" fg:w="1"/><text x="65.0774%" y="335.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (26 samples, 0.80%)</title><rect x="64.0875%" y="581" width="0.8015%" height="15" fill="rgb(226,93,45)" fg:x="2079" fg:w="26"/><text x="64.3375%" y="591.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (26 samples, 0.80%)</title><rect x="64.0875%" y="565" width="0.8015%" height="15" fill="rgb(215,8,51)" fg:x="2079" fg:w="26"/><text x="64.3375%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (26 samples, 0.80%)</title><rect x="64.0875%" y="549" width="0.8015%" height="15" fill="rgb(223,106,5)" fg:x="2079" fg:w="26"/><text x="64.3375%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (26 samples, 0.80%)</title><rect x="64.0875%" y="533" width="0.8015%" height="15" fill="rgb(250,191,5)" fg:x="2079" fg:w="26"/><text x="64.3375%" y="543.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (26 samples, 0.80%)</title><rect x="64.0875%" y="517" width="0.8015%" height="15" fill="rgb(242,132,44)" fg:x="2079" fg:w="26"/><text x="64.3375%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (26 samples, 0.80%)</title><rect x="64.0875%" y="501" width="0.8015%" height="15" fill="rgb(251,152,29)" fg:x="2079" fg:w="26"/><text x="64.3375%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (26 samples, 0.80%)</title><rect x="64.0875%" y="485" width="0.8015%" height="15" fill="rgb(218,179,5)" fg:x="2079" fg:w="26"/><text x="64.3375%" y="495.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (26 samples, 0.80%)</title><rect x="64.0875%" y="469" width="0.8015%" height="15" fill="rgb(227,67,19)" fg:x="2079" fg:w="26"/><text x="64.3375%" y="479.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (26 samples, 0.80%)</title><rect x="64.0875%" y="453" width="0.8015%" height="15" fill="rgb(233,119,31)" fg:x="2079" fg:w="26"/><text x="64.3375%" y="463.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (26 samples, 0.80%)</title><rect x="64.0875%" y="437" width="0.8015%" height="15" fill="rgb(241,120,22)" fg:x="2079" fg:w="26"/><text x="64.3375%" y="447.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (26 samples, 0.80%)</title><rect x="64.0875%" y="421" width="0.8015%" height="15" fill="rgb(224,102,30)" fg:x="2079" fg:w="26"/><text x="64.3375%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (26 samples, 0.80%)</title><rect x="64.0875%" y="405" width="0.8015%" height="15" fill="rgb(210,164,37)" fg:x="2079" fg:w="26"/><text x="64.3375%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (26 samples, 0.80%)</title><rect x="64.0875%" y="389" width="0.8015%" height="15" fill="rgb(226,191,16)" fg:x="2079" fg:w="26"/><text x="64.3375%" y="399.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (26 samples, 0.80%)</title><rect x="64.0875%" y="373" width="0.8015%" height="15" fill="rgb(214,40,45)" fg:x="2079" fg:w="26"/><text x="64.3375%" y="383.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (1 samples, 0.03%)</title><rect x="64.8582%" y="357" width="0.0308%" height="15" fill="rgb(244,29,26)" fg:x="2104" fg:w="1"/><text x="65.1082%" y="367.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (1 samples, 0.03%)</title><rect x="64.8582%" y="341" width="0.0308%" height="15" fill="rgb(216,16,5)" fg:x="2104" fg:w="1"/><text x="65.1082%" y="351.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (1 samples, 0.03%)</title><rect x="64.8582%" y="325" width="0.0308%" height="15" fill="rgb(249,76,35)" fg:x="2104" fg:w="1"/><text x="65.1082%" y="335.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.15%)</title><rect x="65.0432%" y="565" width="0.1541%" height="15" fill="rgb(207,11,44)" fg:x="2110" fg:w="5"/><text x="65.2932%" y="575.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.03%)</title><rect x="65.1973%" y="565" width="0.0308%" height="15" fill="rgb(228,190,49)" fg:x="2115" fg:w="1"/><text x="65.4473%" y="575.50"></text></g><g><title>core::ptr::write (1 samples, 0.03%)</title><rect x="65.2589%" y="437" width="0.0308%" height="15" fill="rgb(214,173,12)" fg:x="2117" fg:w="1"/><text x="65.5089%" y="447.50"></text></g><g><title>_init (1 samples, 0.03%)</title><rect x="65.2589%" y="421" width="0.0308%" height="15" fill="rgb(218,26,35)" fg:x="2117" fg:w="1"/><text x="65.5089%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (16 samples, 0.49%)</title><rect x="65.3206%" y="389" width="0.4932%" height="15" fill="rgb(220,200,19)" fg:x="2119" fg:w="16"/><text x="65.5706%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (16 samples, 0.49%)</title><rect x="65.3206%" y="373" width="0.4932%" height="15" fill="rgb(239,95,49)" fg:x="2119" fg:w="16"/><text x="65.5706%" y="383.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (16 samples, 0.49%)</title><rect x="65.3206%" y="357" width="0.4932%" height="15" fill="rgb(235,85,53)" fg:x="2119" fg:w="16"/><text x="65.5706%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (15 samples, 0.46%)</title><rect x="65.3514%" y="341" width="0.4624%" height="15" fill="rgb(233,133,31)" fg:x="2120" fg:w="15"/><text x="65.6014%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (13 samples, 0.40%)</title><rect x="65.4131%" y="325" width="0.4007%" height="15" fill="rgb(218,25,20)" fg:x="2122" fg:w="13"/><text x="65.6631%" y="335.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (12 samples, 0.37%)</title><rect x="65.4439%" y="309" width="0.3699%" height="15" fill="rgb(252,210,38)" fg:x="2123" fg:w="12"/><text x="65.6939%" y="319.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (1 samples, 0.03%)</title><rect x="65.7830%" y="293" width="0.0308%" height="15" fill="rgb(242,134,21)" fg:x="2134" fg:w="1"/><text x="66.0330%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (19 samples, 0.59%)</title><rect x="65.2589%" y="533" width="0.5857%" height="15" fill="rgb(213,28,48)" fg:x="2117" fg:w="19"/><text x="65.5089%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (19 samples, 0.59%)</title><rect x="65.2589%" y="517" width="0.5857%" height="15" fill="rgb(250,196,2)" fg:x="2117" fg:w="19"/><text x="65.5089%" y="527.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (19 samples, 0.59%)</title><rect x="65.2589%" y="501" width="0.5857%" height="15" fill="rgb(227,5,17)" fg:x="2117" fg:w="19"/><text x="65.5089%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (19 samples, 0.59%)</title><rect x="65.2589%" y="485" width="0.5857%" height="15" fill="rgb(221,226,24)" fg:x="2117" fg:w="19"/><text x="65.5089%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (19 samples, 0.59%)</title><rect x="65.2589%" y="469" width="0.5857%" height="15" fill="rgb(211,5,48)" fg:x="2117" fg:w="19"/><text x="65.5089%" y="479.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (19 samples, 0.59%)</title><rect x="65.2589%" y="453" width="0.5857%" height="15" fill="rgb(219,150,6)" fg:x="2117" fg:w="19"/><text x="65.5089%" y="463.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (18 samples, 0.55%)</title><rect x="65.2898%" y="437" width="0.5549%" height="15" fill="rgb(251,46,16)" fg:x="2118" fg:w="18"/><text x="65.5398%" y="447.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (18 samples, 0.55%)</title><rect x="65.2898%" y="421" width="0.5549%" height="15" fill="rgb(220,204,40)" fg:x="2118" fg:w="18"/><text x="65.5398%" y="431.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (18 samples, 0.55%)</title><rect x="65.2898%" y="405" width="0.5549%" height="15" fill="rgb(211,85,2)" fg:x="2118" fg:w="18"/><text x="65.5398%" y="415.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (1 samples, 0.03%)</title><rect x="65.8138%" y="389" width="0.0308%" height="15" fill="rgb(229,17,7)" fg:x="2135" fg:w="1"/><text x="66.0638%" y="399.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (1 samples, 0.03%)</title><rect x="65.8138%" y="373" width="0.0308%" height="15" fill="rgb(239,72,28)" fg:x="2135" fg:w="1"/><text x="66.0638%" y="383.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (1 samples, 0.03%)</title><rect x="65.8138%" y="357" width="0.0308%" height="15" fill="rgb(230,47,54)" fg:x="2135" fg:w="1"/><text x="66.0638%" y="367.50"></text></g><g><title>_init (1 samples, 0.03%)</title><rect x="65.8138%" y="341" width="0.0308%" height="15" fill="rgb(214,50,8)" fg:x="2135" fg:w="1"/><text x="66.0638%" y="351.50"></text></g><g><title>chacha20::backends::avx2::inner (164 samples, 5.06%)</title><rect x="60.8200%" y="613" width="5.0555%" height="15" fill="rgb(216,198,43)" fg:x="1973" fg:w="164"/><text x="61.0700%" y="623.50">chacha..</text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (162 samples, 4.99%)</title><rect x="60.8816%" y="597" width="4.9938%" height="15" fill="rgb(234,20,35)" fg:x="1975" fg:w="162"/><text x="61.1316%" y="607.50">&lt;ciphe..</text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;generic_array::GenericArray&lt;u8,N&gt;,M&gt;&gt;::xor_in2out (32 samples, 0.99%)</title><rect x="64.8890%" y="581" width="0.9864%" height="15" fill="rgb(254,45,19)" fg:x="2105" fg:w="32"/><text x="65.1390%" y="591.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (21 samples, 0.65%)</title><rect x="65.2281%" y="565" width="0.6473%" height="15" fill="rgb(219,14,44)" fg:x="2116" fg:w="21"/><text x="65.4781%" y="575.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (20 samples, 0.62%)</title><rect x="65.2589%" y="549" width="0.6165%" height="15" fill="rgb(217,220,26)" fg:x="2117" fg:w="20"/><text x="65.5089%" y="559.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (1 samples, 0.03%)</title><rect x="65.8446%" y="533" width="0.0308%" height="15" fill="rgb(213,158,28)" fg:x="2136" fg:w="1"/><text x="66.0946%" y="543.50"></text></g><g><title>core::ptr::read (1 samples, 0.03%)</title><rect x="65.8446%" y="517" width="0.0308%" height="15" fill="rgb(252,51,52)" fg:x="2136" fg:w="1"/><text x="66.0946%" y="527.50"></text></g><g><title>__memcpy_avx_unaligned (1 samples, 0.03%)</title><rect x="65.8446%" y="501" width="0.0308%" height="15" fill="rgb(246,89,16)" fg:x="2136" fg:w="1"/><text x="66.0946%" y="511.50"></text></g><g><title>chacha20::backends::avx2::rounds (1 samples, 0.03%)</title><rect x="65.8755%" y="613" width="0.0308%" height="15" fill="rgb(216,158,49)" fg:x="2137" fg:w="1"/><text x="66.1255%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (4 samples, 0.12%)</title><rect x="65.9063%" y="613" width="0.1233%" height="15" fill="rgb(236,107,19)" fg:x="2138" fg:w="4"/><text x="66.1563%" y="623.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (180 samples, 5.55%)</title><rect x="60.7275%" y="709" width="5.5487%" height="15" fill="rgb(228,185,30)" fg:x="1970" fg:w="180"/><text x="60.9775%" y="719.50">cipher:..</text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (180 samples, 5.55%)</title><rect x="60.7275%" y="693" width="5.5487%" height="15" fill="rgb(246,134,8)" fg:x="1970" fg:w="180"/><text x="60.9775%" y="703.50">cipher:..</text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (180 samples, 5.55%)</title><rect x="60.7275%" y="677" width="5.5487%" height="15" fill="rgb(214,143,50)" fg:x="1970" fg:w="180"/><text x="60.9775%" y="687.50">&lt;cipher..</text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (180 samples, 5.55%)</title><rect x="60.7275%" y="661" width="5.5487%" height="15" fill="rgb(228,75,8)" fg:x="1970" fg:w="180"/><text x="60.9775%" y="671.50">cipher:..</text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (180 samples, 5.55%)</title><rect x="60.7275%" y="645" width="5.5487%" height="15" fill="rgb(207,175,4)" fg:x="1970" fg:w="180"/><text x="60.9775%" y="655.50">&lt;chacha..</text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (180 samples, 5.55%)</title><rect x="60.7275%" y="629" width="5.5487%" height="15" fill="rgb(205,108,24)" fg:x="1970" fg:w="180"/><text x="60.9775%" y="639.50">&lt;chacha..</text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (8 samples, 0.25%)</title><rect x="66.0296%" y="613" width="0.2466%" height="15" fill="rgb(244,120,49)" fg:x="2142" fg:w="8"/><text x="66.2796%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (4 samples, 0.12%)</title><rect x="66.2762%" y="597" width="0.1233%" height="15" fill="rgb(223,47,38)" fg:x="2150" fg:w="4"/><text x="66.5262%" y="607.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (4 samples, 0.12%)</title><rect x="66.3995%" y="597" width="0.1233%" height="15" fill="rgb(229,179,11)" fg:x="2154" fg:w="4"/><text x="66.6495%" y="607.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (1 samples, 0.03%)</title><rect x="66.5228%" y="597" width="0.0308%" height="15" fill="rgb(231,122,1)" fg:x="2158" fg:w="1"/><text x="66.7728%" y="607.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi64x (1 samples, 0.03%)</title><rect x="66.5536%" y="597" width="0.0308%" height="15" fill="rgb(245,119,9)" fg:x="2159" fg:w="1"/><text x="66.8036%" y="607.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi64x (1 samples, 0.03%)</title><rect x="66.5536%" y="581" width="0.0308%" height="15" fill="rgb(241,163,25)" fg:x="2159" fg:w="1"/><text x="66.8036%" y="591.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (2 samples, 0.06%)</title><rect x="66.5845%" y="597" width="0.0617%" height="15" fill="rgb(217,214,3)" fg:x="2160" fg:w="2"/><text x="66.8345%" y="607.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (2 samples, 0.06%)</title><rect x="66.5845%" y="581" width="0.0617%" height="15" fill="rgb(240,86,28)" fg:x="2160" fg:w="2"/><text x="66.8345%" y="591.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (2 samples, 0.06%)</title><rect x="66.5845%" y="565" width="0.0617%" height="15" fill="rgb(215,47,9)" fg:x="2160" fg:w="2"/><text x="66.8345%" y="575.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (4 samples, 0.12%)</title><rect x="66.6461%" y="597" width="0.1233%" height="15" fill="rgb(252,25,45)" fg:x="2162" fg:w="4"/><text x="66.8961%" y="607.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="66.7694%" y="597" width="0.0308%" height="15" fill="rgb(251,164,9)" fg:x="2166" fg:w="1"/><text x="67.0194%" y="607.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.03%)</title><rect x="66.8002%" y="597" width="0.0308%" height="15" fill="rgb(233,194,0)" fg:x="2167" fg:w="1"/><text x="67.0502%" y="607.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier as core::convert::From&lt;poly1305::backend::avx2::helpers::Aligned130&gt;&gt;::from (1 samples, 0.03%)</title><rect x="66.8927%" y="565" width="0.0308%" height="15" fill="rgb(249,111,24)" fg:x="2170" fg:w="1"/><text x="67.1427%" y="575.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (2 samples, 0.06%)</title><rect x="66.9236%" y="565" width="0.0617%" height="15" fill="rgb(250,223,3)" fg:x="2171" fg:w="2"/><text x="67.1736%" y="575.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.03%)</title><rect x="67.2010%" y="549" width="0.0308%" height="15" fill="rgb(236,178,37)" fg:x="2180" fg:w="1"/><text x="67.4510%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (2 samples, 0.06%)</title><rect x="67.2318%" y="549" width="0.0617%" height="15" fill="rgb(241,158,50)" fg:x="2181" fg:w="2"/><text x="67.4818%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (1 samples, 0.03%)</title><rect x="67.2935%" y="549" width="0.0308%" height="15" fill="rgb(213,121,41)" fg:x="2183" fg:w="1"/><text x="67.5435%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (12 samples, 0.37%)</title><rect x="66.9852%" y="565" width="0.3699%" height="15" fill="rgb(240,92,3)" fg:x="2173" fg:w="12"/><text x="67.2352%" y="575.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="67.3243%" y="549" width="0.0308%" height="15" fill="rgb(205,123,3)" fg:x="2184" fg:w="1"/><text x="67.5743%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (2 samples, 0.06%)</title><rect x="67.3551%" y="565" width="0.0617%" height="15" fill="rgb(205,97,47)" fg:x="2185" fg:w="2"/><text x="67.6051%" y="575.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_blend_epi32 (3 samples, 0.09%)</title><rect x="67.4168%" y="565" width="0.0925%" height="15" fill="rgb(247,152,14)" fg:x="2187" fg:w="3"/><text x="67.6668%" y="575.50"></text></g><g><title>core::core_arch::simd::u64x4::splat (3 samples, 0.09%)</title><rect x="68.4032%" y="549" width="0.0925%" height="15" fill="rgb(248,195,53)" fg:x="2219" fg:w="3"/><text x="68.6532%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.03%)</title><rect x="68.4957%" y="549" width="0.0308%" height="15" fill="rgb(226,201,16)" fg:x="2222" fg:w="1"/><text x="68.7457%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_blend_epi32 (1 samples, 0.03%)</title><rect x="68.5265%" y="549" width="0.0308%" height="15" fill="rgb(205,98,0)" fg:x="2223" fg:w="1"/><text x="68.7765%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.03%)</title><rect x="68.5573%" y="549" width="0.0308%" height="15" fill="rgb(214,191,48)" fg:x="2224" fg:w="1"/><text x="68.8073%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (1 samples, 0.03%)</title><rect x="68.5882%" y="549" width="0.0308%" height="15" fill="rgb(237,112,39)" fg:x="2225" fg:w="1"/><text x="68.8382%" y="559.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_loadu_si256 (1 samples, 0.03%)</title><rect x="68.6190%" y="549" width="0.0308%" height="15" fill="rgb(247,203,27)" fg:x="2226" fg:w="1"/><text x="68.8690%" y="559.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (8 samples, 0.25%)</title><rect x="68.6498%" y="549" width="0.2466%" height="15" fill="rgb(235,124,28)" fg:x="2227" fg:w="8"/><text x="68.8998%" y="559.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (8 samples, 0.25%)</title><rect x="68.6498%" y="533" width="0.2466%" height="15" fill="rgb(208,207,46)" fg:x="2227" fg:w="8"/><text x="68.8998%" y="543.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (8 samples, 0.25%)</title><rect x="68.6498%" y="517" width="0.2466%" height="15" fill="rgb(234,176,4)" fg:x="2227" fg:w="8"/><text x="68.8998%" y="527.50"></text></g><g><title>core::core_arch::simd::i8x32::new (1 samples, 0.03%)</title><rect x="68.8656%" y="501" width="0.0308%" height="15" fill="rgb(230,133,28)" fg:x="2234" fg:w="1"/><text x="69.1156%" y="511.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.03%)</title><rect x="68.8964%" y="549" width="0.0308%" height="15" fill="rgb(211,137,40)" fg:x="2235" fg:w="1"/><text x="69.1464%" y="559.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (1 samples, 0.03%)</title><rect x="68.9273%" y="549" width="0.0308%" height="15" fill="rgb(254,35,13)" fg:x="2236" fg:w="1"/><text x="69.1773%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (48 samples, 1.48%)</title><rect x="67.5092%" y="565" width="1.4797%" height="15" fill="rgb(225,49,51)" fg:x="2190" fg:w="48"/><text x="67.7592%" y="575.50"></text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_loaded_blocks (1 samples, 0.03%)</title><rect x="68.9581%" y="549" width="0.0308%" height="15" fill="rgb(251,10,15)" fg:x="2237" fg:w="1"/><text x="69.2081%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (2 samples, 0.06%)</title><rect x="68.9889%" y="565" width="0.0617%" height="15" fill="rgb(228,207,15)" fg:x="2238" fg:w="2"/><text x="69.2389%" y="575.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="69.2047%" y="549" width="0.0308%" height="15" fill="rgb(241,99,19)" fg:x="2245" fg:w="1"/><text x="69.4547%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (2 samples, 0.06%)</title><rect x="69.2355%" y="549" width="0.0617%" height="15" fill="rgb(207,104,49)" fg:x="2246" fg:w="2"/><text x="69.4855%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_blend_epi32 (4 samples, 0.12%)</title><rect x="69.2972%" y="549" width="0.1233%" height="15" fill="rgb(234,99,18)" fg:x="2248" fg:w="4"/><text x="69.5472%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (4 samples, 0.12%)</title><rect x="69.4205%" y="549" width="0.1233%" height="15" fill="rgb(213,191,49)" fg:x="2252" fg:w="4"/><text x="69.6705%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi64 (2 samples, 0.06%)</title><rect x="69.5438%" y="549" width="0.0617%" height="15" fill="rgb(210,226,19)" fg:x="2256" fg:w="2"/><text x="69.7938%" y="559.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (2 samples, 0.06%)</title><rect x="69.6054%" y="549" width="0.0617%" height="15" fill="rgb(229,97,18)" fg:x="2258" fg:w="2"/><text x="69.8554%" y="559.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (2 samples, 0.06%)</title><rect x="69.6054%" y="533" width="0.0617%" height="15" fill="rgb(211,167,15)" fg:x="2258" fg:w="2"/><text x="69.8554%" y="543.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (2 samples, 0.06%)</title><rect x="69.6054%" y="517" width="0.0617%" height="15" fill="rgb(210,169,34)" fg:x="2258" fg:w="2"/><text x="69.8554%" y="527.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (5 samples, 0.15%)</title><rect x="69.6671%" y="549" width="0.1541%" height="15" fill="rgb(241,121,31)" fg:x="2260" fg:w="5"/><text x="69.9171%" y="559.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.06%)</title><rect x="69.8212%" y="549" width="0.0617%" height="15" fill="rgb(232,40,11)" fg:x="2265" fg:w="2"/><text x="70.0712%" y="559.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (2 samples, 0.06%)</title><rect x="69.8829%" y="549" width="0.0617%" height="15" fill="rgb(205,86,26)" fg:x="2267" fg:w="2"/><text x="70.1329%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (30 samples, 0.92%)</title><rect x="69.0506%" y="565" width="0.9248%" height="15" fill="rgb(231,126,28)" fg:x="2240" fg:w="30"/><text x="69.3006%" y="575.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (1 samples, 0.03%)</title><rect x="69.9445%" y="549" width="0.0308%" height="15" fill="rgb(219,221,18)" fg:x="2269" fg:w="1"/><text x="70.1945%" y="559.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (1 samples, 0.03%)</title><rect x="69.9445%" y="533" width="0.0308%" height="15" fill="rgb(211,40,0)" fg:x="2269" fg:w="1"/><text x="70.1945%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.03%)</title><rect x="70.3453%" y="549" width="0.0308%" height="15" fill="rgb(239,85,43)" fg:x="2282" fg:w="1"/><text x="70.5953%" y="559.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="70.3761%" y="549" width="0.0308%" height="15" fill="rgb(231,55,21)" fg:x="2283" fg:w="1"/><text x="70.6261%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (15 samples, 0.46%)</title><rect x="69.9753%" y="565" width="0.4624%" height="15" fill="rgb(225,184,43)" fg:x="2270" fg:w="15"/><text x="70.2253%" y="575.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (1 samples, 0.03%)</title><rect x="70.4069%" y="549" width="0.0308%" height="15" fill="rgb(251,158,41)" fg:x="2284" fg:w="1"/><text x="70.6569%" y="559.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (1 samples, 0.03%)</title><rect x="70.4069%" y="533" width="0.0308%" height="15" fill="rgb(234,159,37)" fg:x="2284" fg:w="1"/><text x="70.6569%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi64 (2 samples, 0.06%)</title><rect x="70.4377%" y="565" width="0.0617%" height="15" fill="rgb(216,204,22)" fg:x="2285" fg:w="2"/><text x="70.6877%" y="575.50"></text></g><g><title>core::core_arch::simd::u64x4::splat (2 samples, 0.06%)</title><rect x="70.4377%" y="549" width="0.0617%" height="15" fill="rgb(214,17,3)" fg:x="2285" fg:w="2"/><text x="70.6877%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (2 samples, 0.06%)</title><rect x="70.4994%" y="565" width="0.0617%" height="15" fill="rgb(212,111,17)" fg:x="2287" fg:w="2"/><text x="70.7494%" y="575.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi32 (3 samples, 0.09%)</title><rect x="70.5610%" y="565" width="0.0925%" height="15" fill="rgb(221,157,24)" fg:x="2289" fg:w="3"/><text x="70.8110%" y="575.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi32 (2 samples, 0.06%)</title><rect x="70.5919%" y="549" width="0.0617%" height="15" fill="rgb(252,16,13)" fg:x="2290" fg:w="2"/><text x="70.8419%" y="559.50"></text></g><g><title>core::core_arch::simd::i32x8::new (2 samples, 0.06%)</title><rect x="70.5919%" y="533" width="0.0617%" height="15" fill="rgb(221,62,2)" fg:x="2290" fg:w="2"/><text x="70.8419%" y="543.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (18 samples, 0.55%)</title><rect x="70.6535%" y="565" width="0.5549%" height="15" fill="rgb(247,87,22)" fg:x="2292" fg:w="18"/><text x="70.9035%" y="575.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (18 samples, 0.55%)</title><rect x="70.6535%" y="549" width="0.5549%" height="15" fill="rgb(215,73,9)" fg:x="2292" fg:w="18"/><text x="70.9035%" y="559.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (18 samples, 0.55%)</title><rect x="70.6535%" y="533" width="0.5549%" height="15" fill="rgb(207,175,33)" fg:x="2292" fg:w="18"/><text x="70.9035%" y="543.50"></text></g><g><title>core::core_arch::simd::i8x32::new (6 samples, 0.18%)</title><rect x="71.0234%" y="517" width="0.1850%" height="15" fill="rgb(243,129,54)" fg:x="2304" fg:w="6"/><text x="71.2734%" y="527.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (12 samples, 0.37%)</title><rect x="71.2084%" y="565" width="0.3699%" height="15" fill="rgb(227,119,45)" fg:x="2310" fg:w="12"/><text x="71.4584%" y="575.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (8 samples, 0.25%)</title><rect x="71.5783%" y="565" width="0.2466%" height="15" fill="rgb(205,109,36)" fg:x="2322" fg:w="8"/><text x="71.8283%" y="575.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (12 samples, 0.37%)</title><rect x="71.8249%" y="565" width="0.3699%" height="15" fill="rgb(205,6,39)" fg:x="2330" fg:w="12"/><text x="72.0749%" y="575.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (16 samples, 0.49%)</title><rect x="72.1948%" y="565" width="0.4932%" height="15" fill="rgb(221,32,16)" fg:x="2342" fg:w="16"/><text x="72.4448%" y="575.50"></text></g><g><title>poly1305::backend::avx2::State::compute_par_blocks (1 samples, 0.03%)</title><rect x="72.6880%" y="565" width="0.0308%" height="15" fill="rgb(228,144,50)" fg:x="2358" fg:w="1"/><text x="72.9380%" y="575.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (3 samples, 0.09%)</title><rect x="72.8422%" y="549" width="0.0925%" height="15" fill="rgb(229,201,53)" fg:x="2363" fg:w="3"/><text x="73.0922%" y="559.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Add&gt;::add (1 samples, 0.03%)</title><rect x="72.9346%" y="549" width="0.0308%" height="15" fill="rgb(249,153,27)" fg:x="2366" fg:w="1"/><text x="73.1846%" y="559.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (9 samples, 0.28%)</title><rect x="72.7189%" y="565" width="0.2774%" height="15" fill="rgb(227,106,25)" fg:x="2359" fg:w="9"/><text x="72.9689%" y="575.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (1 samples, 0.03%)</title><rect x="72.9655%" y="549" width="0.0308%" height="15" fill="rgb(230,65,29)" fg:x="2367" fg:w="1"/><text x="73.2155%" y="559.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (203 samples, 6.26%)</title><rect x="66.8311%" y="581" width="6.2577%" height="15" fill="rgb(221,57,46)" fg:x="2168" fg:w="203"/><text x="67.0811%" y="591.50">&lt;&amp;poly13..</text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_loaded_blocks (3 samples, 0.09%)</title><rect x="72.9963%" y="565" width="0.0925%" height="15" fill="rgb(229,161,17)" fg:x="2368" fg:w="3"/><text x="73.2463%" y="575.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.03%)</title><rect x="73.0888%" y="549" width="0.0308%" height="15" fill="rgb(222,213,11)" fg:x="2371" fg:w="1"/><text x="73.3388%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (2 samples, 0.06%)</title><rect x="73.0888%" y="565" width="0.0617%" height="15" fill="rgb(235,35,13)" fg:x="2371" fg:w="2"/><text x="73.3388%" y="575.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="73.1196%" y="549" width="0.0308%" height="15" fill="rgb(233,158,34)" fg:x="2372" fg:w="1"/><text x="73.3696%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (1 samples, 0.03%)</title><rect x="73.1504%" y="565" width="0.0308%" height="15" fill="rgb(215,151,48)" fg:x="2373" fg:w="1"/><text x="73.4004%" y="575.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="73.1813%" y="565" width="0.0308%" height="15" fill="rgb(229,84,14)" fg:x="2374" fg:w="1"/><text x="73.4313%" y="575.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Add&gt;::add (5 samples, 0.15%)</title><rect x="73.0888%" y="581" width="0.1541%" height="15" fill="rgb(229,68,14)" fg:x="2371" fg:w="5"/><text x="73.3388%" y="591.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (1 samples, 0.03%)</title><rect x="73.2121%" y="565" width="0.0308%" height="15" fill="rgb(243,106,26)" fg:x="2375" fg:w="1"/><text x="73.4621%" y="575.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (3 samples, 0.09%)</title><rect x="73.2737%" y="565" width="0.0925%" height="15" fill="rgb(206,45,38)" fg:x="2377" fg:w="3"/><text x="73.5237%" y="575.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.03%)</title><rect x="73.3662%" y="565" width="0.0308%" height="15" fill="rgb(226,6,15)" fg:x="2380" fg:w="1"/><text x="73.6162%" y="575.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (4 samples, 0.12%)</title><rect x="73.7361%" y="533" width="0.1233%" height="15" fill="rgb(232,22,54)" fg:x="2392" fg:w="4"/><text x="73.9861%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (5 samples, 0.15%)</title><rect x="73.8594%" y="533" width="0.1541%" height="15" fill="rgb(229,222,32)" fg:x="2396" fg:w="5"/><text x="74.1094%" y="543.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (3 samples, 0.09%)</title><rect x="74.0136%" y="533" width="0.0925%" height="15" fill="rgb(228,62,29)" fg:x="2401" fg:w="3"/><text x="74.2636%" y="543.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="74.1060%" y="533" width="0.0308%" height="15" fill="rgb(251,103,34)" fg:x="2404" fg:w="1"/><text x="74.3560%" y="543.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (2 samples, 0.06%)</title><rect x="74.1369%" y="533" width="0.0617%" height="15" fill="rgb(233,12,30)" fg:x="2405" fg:w="2"/><text x="74.3869%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (27 samples, 0.83%)</title><rect x="73.3970%" y="549" width="0.8323%" height="15" fill="rgb(238,52,0)" fg:x="2381" fg:w="27"/><text x="73.6470%" y="559.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (1 samples, 0.03%)</title><rect x="74.1985%" y="533" width="0.0308%" height="15" fill="rgb(223,98,5)" fg:x="2407" fg:w="1"/><text x="74.4485%" y="543.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (1 samples, 0.03%)</title><rect x="74.1985%" y="517" width="0.0308%" height="15" fill="rgb(228,75,37)" fg:x="2407" fg:w="1"/><text x="74.4485%" y="527.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (4 samples, 0.12%)</title><rect x="74.2293%" y="533" width="0.1233%" height="15" fill="rgb(205,115,49)" fg:x="2408" fg:w="4"/><text x="74.4793%" y="543.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="74.3527%" y="533" width="0.0308%" height="15" fill="rgb(250,154,43)" fg:x="2412" fg:w="1"/><text x="74.6027%" y="543.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="74.3527%" y="517" width="0.0308%" height="15" fill="rgb(226,43,29)" fg:x="2412" fg:w="1"/><text x="74.6027%" y="527.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="74.3527%" y="501" width="0.0308%" height="15" fill="rgb(249,228,39)" fg:x="2412" fg:w="1"/><text x="74.6027%" y="511.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (9 samples, 0.28%)</title><rect x="74.2293%" y="549" width="0.2774%" height="15" fill="rgb(216,79,43)" fg:x="2408" fg:w="9"/><text x="74.4793%" y="559.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (4 samples, 0.12%)</title><rect x="74.3835%" y="533" width="0.1233%" height="15" fill="rgb(228,95,12)" fg:x="2413" fg:w="4"/><text x="74.6335%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (15 samples, 0.46%)</title><rect x="74.5068%" y="549" width="0.4624%" height="15" fill="rgb(249,221,15)" fg:x="2417" fg:w="15"/><text x="74.7568%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (1 samples, 0.03%)</title><rect x="74.9692%" y="549" width="0.0308%" height="15" fill="rgb(233,34,13)" fg:x="2432" fg:w="1"/><text x="75.2192%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (4 samples, 0.12%)</title><rect x="75.0000%" y="549" width="0.1233%" height="15" fill="rgb(214,103,39)" fg:x="2433" fg:w="4"/><text x="75.2500%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (3 samples, 0.09%)</title><rect x="75.1233%" y="533" width="0.0925%" height="15" fill="rgb(251,126,39)" fg:x="2437" fg:w="3"/><text x="75.3733%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (3 samples, 0.09%)</title><rect x="75.2158%" y="533" width="0.0925%" height="15" fill="rgb(214,216,36)" fg:x="2440" fg:w="3"/><text x="75.4658%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (1 samples, 0.03%)</title><rect x="75.3083%" y="533" width="0.0308%" height="15" fill="rgb(220,221,8)" fg:x="2443" fg:w="1"/><text x="75.5583%" y="543.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (2 samples, 0.06%)</title><rect x="75.3391%" y="533" width="0.0617%" height="15" fill="rgb(240,216,3)" fg:x="2444" fg:w="2"/><text x="75.5891%" y="543.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (2 samples, 0.06%)</title><rect x="75.3391%" y="517" width="0.0617%" height="15" fill="rgb(232,218,17)" fg:x="2444" fg:w="2"/><text x="75.5891%" y="527.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (2 samples, 0.06%)</title><rect x="75.3391%" y="501" width="0.0617%" height="15" fill="rgb(229,163,45)" fg:x="2444" fg:w="2"/><text x="75.5891%" y="511.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (10 samples, 0.31%)</title><rect x="75.1233%" y="549" width="0.3083%" height="15" fill="rgb(231,110,42)" fg:x="2437" fg:w="10"/><text x="75.3733%" y="559.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.03%)</title><rect x="75.4007%" y="533" width="0.0308%" height="15" fill="rgb(208,170,48)" fg:x="2446" fg:w="1"/><text x="75.6507%" y="543.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.03%)</title><rect x="75.4007%" y="517" width="0.0308%" height="15" fill="rgb(239,116,25)" fg:x="2446" fg:w="1"/><text x="75.6507%" y="527.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi64x (2 samples, 0.06%)</title><rect x="75.4316%" y="549" width="0.0617%" height="15" fill="rgb(219,200,50)" fg:x="2447" fg:w="2"/><text x="75.6816%" y="559.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi64x (1 samples, 0.03%)</title><rect x="75.4624%" y="533" width="0.0308%" height="15" fill="rgb(245,200,0)" fg:x="2448" fg:w="1"/><text x="75.7124%" y="543.50"></text></g><g><title>core::core_arch::simd::i64x4::new (1 samples, 0.03%)</title><rect x="75.4624%" y="517" width="0.0308%" height="15" fill="rgb(245,119,33)" fg:x="2448" fg:w="1"/><text x="75.7124%" y="527.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (7 samples, 0.22%)</title><rect x="75.4932%" y="549" width="0.2158%" height="15" fill="rgb(231,125,12)" fg:x="2449" fg:w="7"/><text x="75.7432%" y="559.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (7 samples, 0.22%)</title><rect x="75.4932%" y="533" width="0.2158%" height="15" fill="rgb(216,96,41)" fg:x="2449" fg:w="7"/><text x="75.7432%" y="543.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (7 samples, 0.22%)</title><rect x="75.4932%" y="517" width="0.2158%" height="15" fill="rgb(248,43,45)" fg:x="2449" fg:w="7"/><text x="75.7432%" y="527.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (10 samples, 0.31%)</title><rect x="75.7090%" y="549" width="0.3083%" height="15" fill="rgb(217,222,7)" fg:x="2456" fg:w="10"/><text x="75.9590%" y="559.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (5 samples, 0.15%)</title><rect x="76.0173%" y="549" width="0.1541%" height="15" fill="rgb(233,28,6)" fg:x="2466" fg:w="5"/><text x="76.2673%" y="559.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (4 samples, 0.12%)</title><rect x="76.1714%" y="549" width="0.1233%" height="15" fill="rgb(231,218,15)" fg:x="2471" fg:w="4"/><text x="76.4214%" y="559.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (2 samples, 0.06%)</title><rect x="76.2947%" y="533" width="0.0617%" height="15" fill="rgb(226,171,48)" fg:x="2475" fg:w="2"/><text x="76.5447%" y="543.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (3 samples, 0.09%)</title><rect x="76.2947%" y="549" width="0.0925%" height="15" fill="rgb(235,201,9)" fg:x="2475" fg:w="3"/><text x="76.5447%" y="559.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (1 samples, 0.03%)</title><rect x="76.3564%" y="533" width="0.0308%" height="15" fill="rgb(217,80,15)" fg:x="2477" fg:w="1"/><text x="76.6064%" y="543.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::decrypt_in_place_detached (523 samples, 16.12%)</title><rect x="60.3576%" y="725" width="16.1221%" height="15" fill="rgb(219,152,8)" fg:x="1958" fg:w="523"/><text x="60.6076%" y="735.50">chacha20poly1305::cipher:..</text></g><g><title>universal_hash::UniversalHash::update_padded (331 samples, 10.20%)</title><rect x="66.2762%" y="709" width="10.2035%" height="15" fill="rgb(243,107,38)" fg:x="2150" fg:w="331"/><text x="66.5262%" y="719.50">universal_hash:..</text></g><g><title>universal_hash::UniversalHash::update (331 samples, 10.20%)</title><rect x="66.2762%" y="693" width="10.2035%" height="15" fill="rgb(231,17,5)" fg:x="2150" fg:w="331"/><text x="66.5262%" y="703.50">universal_hash:..</text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (331 samples, 10.20%)</title><rect x="66.2762%" y="677" width="10.2035%" height="15" fill="rgb(209,25,54)" fg:x="2150" fg:w="331"/><text x="66.5262%" y="687.50">&lt;poly1305::Poly..</text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (331 samples, 10.20%)</title><rect x="66.2762%" y="661" width="10.2035%" height="15" fill="rgb(219,0,2)" fg:x="2150" fg:w="331"/><text x="66.5262%" y="671.50">&lt;poly1305::back..</text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (331 samples, 10.20%)</title><rect x="66.2762%" y="645" width="10.2035%" height="15" fill="rgb(246,9,5)" fg:x="2150" fg:w="331"/><text x="66.5262%" y="655.50">&lt;universal_hash..</text></g><g><title>&lt;poly1305::backend::avx2::State as universal_hash::UhfBackend&gt;::proc_par_blocks (331 samples, 10.20%)</title><rect x="66.2762%" y="629" width="10.2035%" height="15" fill="rgb(226,159,4)" fg:x="2150" fg:w="331"/><text x="66.5262%" y="639.50">&lt;poly1305::back..</text></g><g><title>poly1305::backend::avx2::State::compute_par_blocks (331 samples, 10.20%)</title><rect x="66.2762%" y="613" width="10.2035%" height="15" fill="rgb(219,175,34)" fg:x="2150" fg:w="331"/><text x="66.5262%" y="623.50">poly1305::backe..</text></g><g><title>poly1305::backend::avx2::State::process_blocks (313 samples, 9.65%)</title><rect x="66.8311%" y="597" width="9.6486%" height="15" fill="rgb(236,10,46)" fg:x="2168" fg:w="313"/><text x="67.0811%" y="607.50">poly1305::back..</text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (105 samples, 3.24%)</title><rect x="73.2429%" y="581" width="3.2367%" height="15" fill="rgb(240,211,16)" fg:x="2376" fg:w="105"/><text x="73.4929%" y="591.50">pol..</text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (100 samples, 3.08%)</title><rect x="73.3970%" y="565" width="3.0826%" height="15" fill="rgb(205,3,43)" fg:x="2381" fg:w="100"/><text x="73.6470%" y="575.50">pol..</text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (3 samples, 0.09%)</title><rect x="76.3872%" y="549" width="0.0925%" height="15" fill="rgb(245,7,22)" fg:x="2478" fg:w="3"/><text x="76.6372%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.03%)</title><rect x="76.4797%" y="629" width="0.0308%" height="15" fill="rgb(239,132,32)" fg:x="2481" fg:w="1"/><text x="76.7297%" y="639.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="76.4797%" y="613" width="0.0308%" height="15" fill="rgb(228,202,34)" fg:x="2481" fg:w="1"/><text x="76.7297%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.03%)</title><rect x="76.5105%" y="629" width="0.0308%" height="15" fill="rgb(254,200,22)" fg:x="2482" fg:w="1"/><text x="76.7605%" y="639.50"></text></g><g><title>poly1305::backend::avx2::State::new (1 samples, 0.03%)</title><rect x="76.5105%" y="613" width="0.0308%" height="15" fill="rgb(219,10,39)" fg:x="2482" fg:w="1"/><text x="76.7605%" y="623.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (2 samples, 0.06%)</title><rect x="76.5413%" y="629" width="0.0617%" height="15" fill="rgb(226,210,39)" fg:x="2483" fg:w="2"/><text x="76.7913%" y="639.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi32 (1 samples, 0.03%)</title><rect x="76.5721%" y="613" width="0.0308%" height="15" fill="rgb(208,219,16)" fg:x="2484" fg:w="1"/><text x="76.8221%" y="623.50"></text></g><g><title>core::core_arch::simd::i32x8::new (1 samples, 0.03%)</title><rect x="76.5721%" y="597" width="0.0308%" height="15" fill="rgb(216,158,51)" fg:x="2484" fg:w="1"/><text x="76.8221%" y="607.50"></text></g><g><title>&lt;poly1305::Poly1305 as crypto_common::KeyInit&gt;::new (5 samples, 0.15%)</title><rect x="76.4797%" y="709" width="0.1541%" height="15" fill="rgb(233,14,44)" fg:x="2481" fg:w="5"/><text x="76.7297%" y="719.50"></text></g><g><title>poly1305::backend::autodetect::State::new (5 samples, 0.15%)</title><rect x="76.4797%" y="693" width="0.1541%" height="15" fill="rgb(237,97,39)" fg:x="2481" fg:w="5"/><text x="76.7297%" y="703.50"></text></g><g><title>poly1305::backend::avx2::State::new (5 samples, 0.15%)</title><rect x="76.4797%" y="677" width="0.1541%" height="15" fill="rgb(218,198,43)" fg:x="2481" fg:w="5"/><text x="76.7297%" y="687.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier as core::ops::arith::Mul&gt;::mul (5 samples, 0.15%)</title><rect x="76.4797%" y="661" width="0.1541%" height="15" fill="rgb(231,104,20)" fg:x="2481" fg:w="5"/><text x="76.7297%" y="671.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (5 samples, 0.15%)</title><rect x="76.4797%" y="645" width="0.1541%" height="15" fill="rgb(254,36,13)" fg:x="2481" fg:w="5"/><text x="76.7297%" y="655.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="76.6030%" y="629" width="0.0308%" height="15" fill="rgb(248,14,50)" fg:x="2485" fg:w="1"/><text x="76.8530%" y="639.50"></text></g><g><title>chacha20::backends::avx2::inner (2 samples, 0.06%)</title><rect x="76.6338%" y="613" width="0.0617%" height="15" fill="rgb(217,107,29)" fg:x="2486" fg:w="2"/><text x="76.8838%" y="623.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (1 samples, 0.03%)</title><rect x="76.6646%" y="597" width="0.0308%" height="15" fill="rgb(251,169,33)" fg:x="2487" fg:w="1"/><text x="76.9146%" y="607.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.03%)</title><rect x="76.6646%" y="581" width="0.0308%" height="15" fill="rgb(217,108,32)" fg:x="2487" fg:w="1"/><text x="76.9146%" y="591.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.03%)</title><rect x="76.6646%" y="565" width="0.0308%" height="15" fill="rgb(219,66,42)" fg:x="2487" fg:w="1"/><text x="76.9146%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.03%)</title><rect x="76.6646%" y="549" width="0.0308%" height="15" fill="rgb(206,180,7)" fg:x="2487" fg:w="1"/><text x="76.9146%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="76.6646%" y="533" width="0.0308%" height="15" fill="rgb(208,226,31)" fg:x="2487" fg:w="1"/><text x="76.9146%" y="543.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="76.6646%" y="517" width="0.0308%" height="15" fill="rgb(218,26,49)" fg:x="2487" fg:w="1"/><text x="76.9146%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.03%)</title><rect x="76.6646%" y="501" width="0.0308%" height="15" fill="rgb(233,197,48)" fg:x="2487" fg:w="1"/><text x="76.9146%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.03%)</title><rect x="76.6646%" y="485" width="0.0308%" height="15" fill="rgb(252,181,51)" fg:x="2487" fg:w="1"/><text x="76.9146%" y="495.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (1 samples, 0.03%)</title><rect x="76.6646%" y="469" width="0.0308%" height="15" fill="rgb(253,90,19)" fg:x="2487" fg:w="1"/><text x="76.9146%" y="479.50"></text></g><g><title>core::ptr::write (1 samples, 0.03%)</title><rect x="76.6646%" y="453" width="0.0308%" height="15" fill="rgb(215,171,30)" fg:x="2487" fg:w="1"/><text x="76.9146%" y="463.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.03%)</title><rect x="76.6646%" y="437" width="0.0308%" height="15" fill="rgb(214,222,9)" fg:x="2487" fg:w="1"/><text x="76.9146%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="76.6954%" y="613" width="0.0308%" height="15" fill="rgb(223,3,22)" fg:x="2488" fg:w="1"/><text x="76.9454%" y="623.50"></text></g><g><title>tftp::server::connection::Connection&lt;B,Rng&gt;::decrypt_packet (532 samples, 16.40%)</title><rect x="60.3576%" y="789" width="16.3995%" height="15" fill="rgb(225,196,46)" fg:x="1958" fg:w="532"/><text x="60.6076%" y="799.50">tftp::server::connection:..</text></g><g><title>tftp::encrypted_packet::EncryptedPacket::decrypt (532 samples, 16.40%)</title><rect x="60.3576%" y="773" width="16.3995%" height="15" fill="rgb(209,110,37)" fg:x="1958" fg:w="532"/><text x="60.6076%" y="783.50">tftp::encrypted_packet::E..</text></g><g><title>tftp::encryption::Encryptor&lt;R&gt;::decrypt (532 samples, 16.40%)</title><rect x="60.3576%" y="757" width="16.3995%" height="15" fill="rgb(249,89,12)" fg:x="1958" fg:w="532"/><text x="60.6076%" y="767.50">tftp::encryption::Encrypt..</text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (532 samples, 16.40%)</title><rect x="60.3576%" y="741" width="16.3995%" height="15" fill="rgb(226,27,33)" fg:x="1958" fg:w="532"/><text x="60.6076%" y="751.50">&lt;chacha20poly1305::ChaCha..</text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (9 samples, 0.28%)</title><rect x="76.4797%" y="725" width="0.2774%" height="15" fill="rgb(213,82,22)" fg:x="2481" fg:w="9"/><text x="76.7297%" y="735.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (4 samples, 0.12%)</title><rect x="76.6338%" y="709" width="0.1233%" height="15" fill="rgb(248,140,0)" fg:x="2486" fg:w="4"/><text x="76.8838%" y="719.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (4 samples, 0.12%)</title><rect x="76.6338%" y="693" width="0.1233%" height="15" fill="rgb(228,106,3)" fg:x="2486" fg:w="4"/><text x="76.8838%" y="703.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (4 samples, 0.12%)</title><rect x="76.6338%" y="677" width="0.1233%" height="15" fill="rgb(209,23,37)" fg:x="2486" fg:w="4"/><text x="76.8838%" y="687.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (4 samples, 0.12%)</title><rect x="76.6338%" y="661" width="0.1233%" height="15" fill="rgb(241,93,50)" fg:x="2486" fg:w="4"/><text x="76.8838%" y="671.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (4 samples, 0.12%)</title><rect x="76.6338%" y="645" width="0.1233%" height="15" fill="rgb(253,46,43)" fg:x="2486" fg:w="4"/><text x="76.8838%" y="655.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (4 samples, 0.12%)</title><rect x="76.6338%" y="629" width="0.1233%" height="15" fill="rgb(226,206,43)" fg:x="2486" fg:w="4"/><text x="76.8838%" y="639.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="76.7263%" y="613" width="0.0308%" height="15" fill="rgb(217,54,7)" fg:x="2489" fg:w="1"/><text x="76.9763%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.03%)</title><rect x="76.7879%" y="517" width="0.0308%" height="15" fill="rgb(223,5,52)" fg:x="2491" fg:w="1"/><text x="77.0379%" y="527.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="76.7879%" y="501" width="0.0308%" height="15" fill="rgb(206,52,46)" fg:x="2491" fg:w="1"/><text x="77.0379%" y="511.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="76.8187%" y="517" width="0.0308%" height="15" fill="rgb(253,136,11)" fg:x="2492" fg:w="1"/><text x="77.0687%" y="527.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (2 samples, 0.06%)</title><rect x="76.8496%" y="517" width="0.0617%" height="15" fill="rgb(208,106,33)" fg:x="2493" fg:w="2"/><text x="77.0996%" y="527.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (5 samples, 0.15%)</title><rect x="76.7879%" y="533" width="0.1541%" height="15" fill="rgb(206,54,4)" fg:x="2491" fg:w="5"/><text x="77.0379%" y="543.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (1 samples, 0.03%)</title><rect x="76.9112%" y="517" width="0.0308%" height="15" fill="rgb(213,3,15)" fg:x="2495" fg:w="1"/><text x="77.1612%" y="527.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (1 samples, 0.03%)</title><rect x="76.9112%" y="501" width="0.0308%" height="15" fill="rgb(252,211,39)" fg:x="2495" fg:w="1"/><text x="77.1612%" y="511.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="76.9420%" y="517" width="0.0308%" height="15" fill="rgb(223,6,36)" fg:x="2496" fg:w="1"/><text x="77.1920%" y="527.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.03%)</title><rect x="76.9729%" y="517" width="0.0308%" height="15" fill="rgb(252,169,45)" fg:x="2497" fg:w="1"/><text x="77.2229%" y="527.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="76.9729%" y="501" width="0.0308%" height="15" fill="rgb(212,48,26)" fg:x="2497" fg:w="1"/><text x="77.2229%" y="511.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="77.0037%" y="517" width="0.0308%" height="15" fill="rgb(251,102,48)" fg:x="2498" fg:w="1"/><text x="77.2537%" y="527.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (9 samples, 0.28%)</title><rect x="76.7879%" y="549" width="0.2774%" height="15" fill="rgb(243,208,16)" fg:x="2491" fg:w="9"/><text x="77.0379%" y="559.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (4 samples, 0.12%)</title><rect x="76.9420%" y="533" width="0.1233%" height="15" fill="rgb(219,96,24)" fg:x="2496" fg:w="4"/><text x="77.1920%" y="543.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="77.0345%" y="517" width="0.0308%" height="15" fill="rgb(219,33,29)" fg:x="2499" fg:w="1"/><text x="77.2845%" y="527.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="77.0654%" y="549" width="0.0308%" height="15" fill="rgb(223,176,5)" fg:x="2500" fg:w="1"/><text x="77.3154%" y="559.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_par_ks_blocks (11 samples, 0.34%)</title><rect x="76.7879%" y="581" width="0.3391%" height="15" fill="rgb(228,140,14)" fg:x="2491" fg:w="11"/><text x="77.0379%" y="591.50"></text></g><g><title>chacha20::backends::avx2::rounds (11 samples, 0.34%)</title><rect x="76.7879%" y="565" width="0.3391%" height="15" fill="rgb(217,179,31)" fg:x="2491" fg:w="11"/><text x="77.0379%" y="575.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="77.0962%" y="549" width="0.0308%" height="15" fill="rgb(230,9,30)" fg:x="2501" fg:w="1"/><text x="77.3462%" y="559.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (5 samples, 0.15%)</title><rect x="77.1270%" y="581" width="0.1541%" height="15" fill="rgb(230,136,20)" fg:x="2502" fg:w="5"/><text x="77.3770%" y="591.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (5 samples, 0.15%)</title><rect x="77.1270%" y="565" width="0.1541%" height="15" fill="rgb(215,210,22)" fg:x="2502" fg:w="5"/><text x="77.3770%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5 samples, 0.15%)</title><rect x="77.1270%" y="549" width="0.1541%" height="15" fill="rgb(218,43,5)" fg:x="2502" fg:w="5"/><text x="77.3770%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.15%)</title><rect x="77.1270%" y="533" width="0.1541%" height="15" fill="rgb(216,11,5)" fg:x="2502" fg:w="5"/><text x="77.3770%" y="543.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.15%)</title><rect x="77.1270%" y="517" width="0.1541%" height="15" fill="rgb(209,82,29)" fg:x="2502" fg:w="5"/><text x="77.3770%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (5 samples, 0.15%)</title><rect x="77.1270%" y="501" width="0.1541%" height="15" fill="rgb(244,115,12)" fg:x="2502" fg:w="5"/><text x="77.3770%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (5 samples, 0.15%)</title><rect x="77.1270%" y="485" width="0.1541%" height="15" fill="rgb(222,82,18)" fg:x="2502" fg:w="5"/><text x="77.3770%" y="495.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (5 samples, 0.15%)</title><rect x="77.1270%" y="469" width="0.1541%" height="15" fill="rgb(249,227,8)" fg:x="2502" fg:w="5"/><text x="77.3770%" y="479.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (5 samples, 0.15%)</title><rect x="77.1270%" y="453" width="0.1541%" height="15" fill="rgb(253,141,45)" fg:x="2502" fg:w="5"/><text x="77.3770%" y="463.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (5 samples, 0.15%)</title><rect x="77.1270%" y="437" width="0.1541%" height="15" fill="rgb(234,184,4)" fg:x="2502" fg:w="5"/><text x="77.3770%" y="447.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (5 samples, 0.15%)</title><rect x="77.1270%" y="421" width="0.1541%" height="15" fill="rgb(218,194,23)" fg:x="2502" fg:w="5"/><text x="77.3770%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5 samples, 0.15%)</title><rect x="77.1270%" y="405" width="0.1541%" height="15" fill="rgb(235,66,41)" fg:x="2502" fg:w="5"/><text x="77.3770%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.15%)</title><rect x="77.1270%" y="389" width="0.1541%" height="15" fill="rgb(245,217,1)" fg:x="2502" fg:w="5"/><text x="77.3770%" y="399.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.15%)</title><rect x="77.1270%" y="373" width="0.1541%" height="15" fill="rgb(229,91,1)" fg:x="2502" fg:w="5"/><text x="77.3770%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (2 samples, 0.06%)</title><rect x="77.2195%" y="357" width="0.0617%" height="15" fill="rgb(207,101,30)" fg:x="2505" fg:w="2"/><text x="77.4695%" y="367.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.09%)</title><rect x="77.2811%" y="565" width="0.0925%" height="15" fill="rgb(223,82,49)" fg:x="2507" fg:w="3"/><text x="77.5311%" y="575.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.03%)</title><rect x="77.3736%" y="565" width="0.0308%" height="15" fill="rgb(218,167,17)" fg:x="2510" fg:w="1"/><text x="77.6236%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.09%)</title><rect x="77.4044%" y="389" width="0.0925%" height="15" fill="rgb(208,103,14)" fg:x="2511" fg:w="3"/><text x="77.6544%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.09%)</title><rect x="77.4044%" y="373" width="0.0925%" height="15" fill="rgb(238,20,8)" fg:x="2511" fg:w="3"/><text x="77.6544%" y="383.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.09%)</title><rect x="77.4044%" y="357" width="0.0925%" height="15" fill="rgb(218,80,54)" fg:x="2511" fg:w="3"/><text x="77.6544%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (3 samples, 0.09%)</title><rect x="77.4044%" y="341" width="0.0925%" height="15" fill="rgb(240,144,17)" fg:x="2511" fg:w="3"/><text x="77.6544%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.03%)</title><rect x="77.4661%" y="325" width="0.0308%" height="15" fill="rgb(245,27,50)" fg:x="2513" fg:w="1"/><text x="77.7161%" y="335.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (1 samples, 0.03%)</title><rect x="77.4661%" y="309" width="0.0308%" height="15" fill="rgb(251,51,7)" fg:x="2513" fg:w="1"/><text x="77.7161%" y="319.50"></text></g><g><title>chacha20::backends::avx2::inner (25 samples, 0.77%)</title><rect x="76.7571%" y="613" width="0.7707%" height="15" fill="rgb(245,217,29)" fg:x="2490" fg:w="25"/><text x="77.0071%" y="623.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (24 samples, 0.74%)</title><rect x="76.7879%" y="597" width="0.7398%" height="15" fill="rgb(221,176,29)" fg:x="2491" fg:w="24"/><text x="77.0379%" y="607.50"></text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;generic_array::GenericArray&lt;u8,N&gt;,M&gt;&gt;::xor_in2out (8 samples, 0.25%)</title><rect x="77.2811%" y="581" width="0.2466%" height="15" fill="rgb(212,180,24)" fg:x="2507" fg:w="8"/><text x="77.5311%" y="591.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (4 samples, 0.12%)</title><rect x="77.4044%" y="565" width="0.1233%" height="15" fill="rgb(254,24,2)" fg:x="2511" fg:w="4"/><text x="77.6544%" y="575.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (4 samples, 0.12%)</title><rect x="77.4044%" y="549" width="0.1233%" height="15" fill="rgb(230,100,2)" fg:x="2511" fg:w="4"/><text x="77.6544%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.12%)</title><rect x="77.4044%" y="533" width="0.1233%" height="15" fill="rgb(219,142,25)" fg:x="2511" fg:w="4"/><text x="77.6544%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.12%)</title><rect x="77.4044%" y="517" width="0.1233%" height="15" fill="rgb(240,73,43)" fg:x="2511" fg:w="4"/><text x="77.6544%" y="527.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.12%)</title><rect x="77.4044%" y="501" width="0.1233%" height="15" fill="rgb(214,114,15)" fg:x="2511" fg:w="4"/><text x="77.6544%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (4 samples, 0.12%)</title><rect x="77.4044%" y="485" width="0.1233%" height="15" fill="rgb(207,130,4)" fg:x="2511" fg:w="4"/><text x="77.6544%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (4 samples, 0.12%)</title><rect x="77.4044%" y="469" width="0.1233%" height="15" fill="rgb(221,25,40)" fg:x="2511" fg:w="4"/><text x="77.6544%" y="479.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (4 samples, 0.12%)</title><rect x="77.4044%" y="453" width="0.1233%" height="15" fill="rgb(241,184,7)" fg:x="2511" fg:w="4"/><text x="77.6544%" y="463.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (4 samples, 0.12%)</title><rect x="77.4044%" y="437" width="0.1233%" height="15" fill="rgb(235,159,4)" fg:x="2511" fg:w="4"/><text x="77.6544%" y="447.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (4 samples, 0.12%)</title><rect x="77.4044%" y="421" width="0.1233%" height="15" fill="rgb(214,87,48)" fg:x="2511" fg:w="4"/><text x="77.6544%" y="431.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (4 samples, 0.12%)</title><rect x="77.4044%" y="405" width="0.1233%" height="15" fill="rgb(246,198,24)" fg:x="2511" fg:w="4"/><text x="77.6544%" y="415.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (1 samples, 0.03%)</title><rect x="77.4969%" y="389" width="0.0308%" height="15" fill="rgb(209,66,40)" fg:x="2514" fg:w="1"/><text x="77.7469%" y="399.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (1 samples, 0.03%)</title><rect x="77.4969%" y="373" width="0.0308%" height="15" fill="rgb(233,147,39)" fg:x="2514" fg:w="1"/><text x="77.7469%" y="383.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (1 samples, 0.03%)</title><rect x="77.4969%" y="357" width="0.0308%" height="15" fill="rgb(231,145,52)" fg:x="2514" fg:w="1"/><text x="77.7469%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.03%)</title><rect x="77.4969%" y="341" width="0.0308%" height="15" fill="rgb(206,20,26)" fg:x="2514" fg:w="1"/><text x="77.7469%" y="351.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (27 samples, 0.83%)</title><rect x="76.7571%" y="709" width="0.8323%" height="15" fill="rgb(238,220,4)" fg:x="2490" fg:w="27"/><text x="77.0071%" y="719.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (27 samples, 0.83%)</title><rect x="76.7571%" y="693" width="0.8323%" height="15" fill="rgb(252,195,42)" fg:x="2490" fg:w="27"/><text x="77.0071%" y="703.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (27 samples, 0.83%)</title><rect x="76.7571%" y="677" width="0.8323%" height="15" fill="rgb(209,10,6)" fg:x="2490" fg:w="27"/><text x="77.0071%" y="687.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (27 samples, 0.83%)</title><rect x="76.7571%" y="661" width="0.8323%" height="15" fill="rgb(229,3,52)" fg:x="2490" fg:w="27"/><text x="77.0071%" y="671.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (27 samples, 0.83%)</title><rect x="76.7571%" y="645" width="0.8323%" height="15" fill="rgb(253,49,37)" fg:x="2490" fg:w="27"/><text x="77.0071%" y="655.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (27 samples, 0.83%)</title><rect x="76.7571%" y="629" width="0.8323%" height="15" fill="rgb(240,103,49)" fg:x="2490" fg:w="27"/><text x="77.0071%" y="639.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.06%)</title><rect x="77.5277%" y="613" width="0.0617%" height="15" fill="rgb(250,182,30)" fg:x="2515" fg:w="2"/><text x="77.7777%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_blend_epi32 (1 samples, 0.03%)</title><rect x="77.5894%" y="565" width="0.0308%" height="15" fill="rgb(248,8,30)" fg:x="2517" fg:w="1"/><text x="77.8394%" y="575.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (2 samples, 0.06%)</title><rect x="77.6819%" y="549" width="0.0617%" height="15" fill="rgb(237,120,30)" fg:x="2520" fg:w="2"/><text x="77.9319%" y="559.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="77.7435%" y="549" width="0.0308%" height="15" fill="rgb(221,146,34)" fg:x="2522" fg:w="1"/><text x="77.9935%" y="559.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="77.7435%" y="533" width="0.0308%" height="15" fill="rgb(242,55,13)" fg:x="2522" fg:w="1"/><text x="77.9935%" y="543.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="77.7435%" y="517" width="0.0308%" height="15" fill="rgb(242,112,31)" fg:x="2522" fg:w="1"/><text x="77.9935%" y="527.50"></text></g><g><title>core::core_arch::simd::i8x32::new (1 samples, 0.03%)</title><rect x="77.7435%" y="501" width="0.0308%" height="15" fill="rgb(249,192,27)" fg:x="2522" fg:w="1"/><text x="77.9935%" y="511.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (2 samples, 0.06%)</title><rect x="77.7744%" y="549" width="0.0617%" height="15" fill="rgb(208,204,44)" fg:x="2523" fg:w="2"/><text x="78.0244%" y="559.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (2 samples, 0.06%)</title><rect x="77.7744%" y="533" width="0.0617%" height="15" fill="rgb(208,93,54)" fg:x="2523" fg:w="2"/><text x="78.0244%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (8 samples, 0.25%)</title><rect x="77.6202%" y="565" width="0.2466%" height="15" fill="rgb(242,1,31)" fg:x="2518" fg:w="8"/><text x="77.8702%" y="575.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (1 samples, 0.03%)</title><rect x="77.8360%" y="549" width="0.0308%" height="15" fill="rgb(241,83,25)" fg:x="2525" fg:w="1"/><text x="78.0860%" y="559.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (1 samples, 0.03%)</title><rect x="77.8360%" y="533" width="0.0308%" height="15" fill="rgb(205,169,50)" fg:x="2525" fg:w="1"/><text x="78.0860%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi64 (1 samples, 0.03%)</title><rect x="77.8668%" y="549" width="0.0308%" height="15" fill="rgb(239,186,37)" fg:x="2526" fg:w="1"/><text x="78.1168%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (2 samples, 0.06%)</title><rect x="77.8668%" y="565" width="0.0617%" height="15" fill="rgb(205,221,10)" fg:x="2526" fg:w="2"/><text x="78.1168%" y="575.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="77.8977%" y="549" width="0.0308%" height="15" fill="rgb(218,196,15)" fg:x="2527" fg:w="1"/><text x="78.1477%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (3 samples, 0.09%)</title><rect x="77.9285%" y="565" width="0.0925%" height="15" fill="rgb(218,196,35)" fg:x="2528" fg:w="3"/><text x="78.1785%" y="575.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="77.9901%" y="549" width="0.0308%" height="15" fill="rgb(233,63,24)" fg:x="2530" fg:w="1"/><text x="78.2401%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi64 (1 samples, 0.03%)</title><rect x="78.0210%" y="565" width="0.0308%" height="15" fill="rgb(225,8,4)" fg:x="2531" fg:w="1"/><text x="78.2710%" y="575.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (5 samples, 0.15%)</title><rect x="78.0518%" y="565" width="0.1541%" height="15" fill="rgb(234,105,35)" fg:x="2532" fg:w="5"/><text x="78.3018%" y="575.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (5 samples, 0.15%)</title><rect x="78.0518%" y="549" width="0.1541%" height="15" fill="rgb(236,21,32)" fg:x="2532" fg:w="5"/><text x="78.3018%" y="559.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (5 samples, 0.15%)</title><rect x="78.0518%" y="533" width="0.1541%" height="15" fill="rgb(228,109,6)" fg:x="2532" fg:w="5"/><text x="78.3018%" y="543.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.06%)</title><rect x="78.2059%" y="565" width="0.0617%" height="15" fill="rgb(229,215,31)" fg:x="2537" fg:w="2"/><text x="78.4559%" y="575.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="78.2676%" y="565" width="0.0308%" height="15" fill="rgb(221,52,54)" fg:x="2539" fg:w="1"/><text x="78.5176%" y="575.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (2 samples, 0.06%)</title><rect x="78.2984%" y="565" width="0.0617%" height="15" fill="rgb(252,129,43)" fg:x="2540" fg:w="2"/><text x="78.5484%" y="575.50"></text></g><g><title>poly1305::backend::avx2::State::compute_par_blocks (2 samples, 0.06%)</title><rect x="78.3600%" y="565" width="0.0617%" height="15" fill="rgb(248,183,27)" fg:x="2542" fg:w="2"/><text x="78.6100%" y="575.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (1 samples, 0.03%)</title><rect x="78.4217%" y="565" width="0.0308%" height="15" fill="rgb(250,0,22)" fg:x="2544" fg:w="1"/><text x="78.6717%" y="575.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Add&gt;::add (1 samples, 0.03%)</title><rect x="78.4217%" y="549" width="0.0308%" height="15" fill="rgb(213,166,10)" fg:x="2544" fg:w="1"/><text x="78.6717%" y="559.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (29 samples, 0.89%)</title><rect x="77.5894%" y="581" width="0.8940%" height="15" fill="rgb(207,163,36)" fg:x="2517" fg:w="29"/><text x="77.8394%" y="591.50"></text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_loaded_blocks (1 samples, 0.03%)</title><rect x="78.4525%" y="565" width="0.0308%" height="15" fill="rgb(208,122,22)" fg:x="2545" fg:w="1"/><text x="78.7025%" y="575.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.03%)</title><rect x="78.4834%" y="565" width="0.0308%" height="15" fill="rgb(207,104,49)" fg:x="2546" fg:w="1"/><text x="78.7334%" y="575.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (1 samples, 0.03%)</title><rect x="78.5142%" y="565" width="0.0308%" height="15" fill="rgb(248,211,50)" fg:x="2547" fg:w="1"/><text x="78.7642%" y="575.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (2 samples, 0.06%)</title><rect x="78.6067%" y="533" width="0.0617%" height="15" fill="rgb(217,13,45)" fg:x="2550" fg:w="2"/><text x="78.8567%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (5 samples, 0.15%)</title><rect x="78.5450%" y="549" width="0.1541%" height="15" fill="rgb(211,216,49)" fg:x="2548" fg:w="5"/><text x="78.7950%" y="559.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="78.6683%" y="533" width="0.0308%" height="15" fill="rgb(221,58,53)" fg:x="2552" fg:w="1"/><text x="78.9183%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (2 samples, 0.06%)</title><rect x="78.6991%" y="549" width="0.0617%" height="15" fill="rgb(220,112,41)" fg:x="2553" fg:w="2"/><text x="78.9491%" y="559.50"></text></g><g><title>tftp::server::connection::Connection&lt;B,Rng&gt;::send_bytes (66 samples, 2.03%)</title><rect x="76.7571%" y="789" width="2.0345%" height="15" fill="rgb(236,38,28)" fg:x="2490" fg:w="66"/><text x="77.0071%" y="799.50">t..</text></g><g><title>tftp::encrypted_packet::EncryptedPacket::encrypt (66 samples, 2.03%)</title><rect x="76.7571%" y="773" width="2.0345%" height="15" fill="rgb(227,195,22)" fg:x="2490" fg:w="66"/><text x="77.0071%" y="783.50">t..</text></g><g><title>tftp::encryption::Encryptor&lt;R&gt;::encrypt (66 samples, 2.03%)</title><rect x="76.7571%" y="757" width="2.0345%" height="15" fill="rgb(214,55,33)" fg:x="2490" fg:w="66"/><text x="77.0071%" y="767.50">t..</text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::encrypt_in_place_detached (66 samples, 2.03%)</title><rect x="76.7571%" y="741" width="2.0345%" height="15" fill="rgb(248,80,13)" fg:x="2490" fg:w="66"/><text x="77.0071%" y="751.50">&lt;..</text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::encrypt_in_place_detached (66 samples, 2.03%)</title><rect x="76.7571%" y="725" width="2.0345%" height="15" fill="rgb(238,52,6)" fg:x="2490" fg:w="66"/><text x="77.0071%" y="735.50">c..</text></g><g><title>universal_hash::UniversalHash::update_padded (39 samples, 1.20%)</title><rect x="77.5894%" y="709" width="1.2022%" height="15" fill="rgb(224,198,47)" fg:x="2517" fg:w="39"/><text x="77.8394%" y="719.50"></text></g><g><title>universal_hash::UniversalHash::update (39 samples, 1.20%)</title><rect x="77.5894%" y="693" width="1.2022%" height="15" fill="rgb(233,171,20)" fg:x="2517" fg:w="39"/><text x="77.8394%" y="703.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (39 samples, 1.20%)</title><rect x="77.5894%" y="677" width="1.2022%" height="15" fill="rgb(241,30,25)" fg:x="2517" fg:w="39"/><text x="77.8394%" y="687.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (39 samples, 1.20%)</title><rect x="77.5894%" y="661" width="1.2022%" height="15" fill="rgb(207,171,38)" fg:x="2517" fg:w="39"/><text x="77.8394%" y="671.50"></text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (39 samples, 1.20%)</title><rect x="77.5894%" y="645" width="1.2022%" height="15" fill="rgb(234,70,1)" fg:x="2517" fg:w="39"/><text x="77.8394%" y="655.50"></text></g><g><title>&lt;poly1305::backend::avx2::State as universal_hash::UhfBackend&gt;::proc_par_blocks (39 samples, 1.20%)</title><rect x="77.5894%" y="629" width="1.2022%" height="15" fill="rgb(232,178,18)" fg:x="2517" fg:w="39"/><text x="77.8394%" y="639.50"></text></g><g><title>poly1305::backend::avx2::State::compute_par_blocks (39 samples, 1.20%)</title><rect x="77.5894%" y="613" width="1.2022%" height="15" fill="rgb(241,78,40)" fg:x="2517" fg:w="39"/><text x="77.8394%" y="623.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (39 samples, 1.20%)</title><rect x="77.5894%" y="597" width="1.2022%" height="15" fill="rgb(222,35,25)" fg:x="2517" fg:w="39"/><text x="77.8394%" y="607.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (10 samples, 0.31%)</title><rect x="78.4834%" y="581" width="0.3083%" height="15" fill="rgb(207,92,16)" fg:x="2546" fg:w="10"/><text x="78.7334%" y="591.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (8 samples, 0.25%)</title><rect x="78.5450%" y="565" width="0.2466%" height="15" fill="rgb(216,59,51)" fg:x="2548" fg:w="8"/><text x="78.7950%" y="575.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="78.7608%" y="549" width="0.0308%" height="15" fill="rgb(213,80,28)" fg:x="2555" fg:w="1"/><text x="79.0108%" y="559.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="78.7608%" y="533" width="0.0308%" height="15" fill="rgb(220,93,7)" fg:x="2555" fg:w="1"/><text x="79.0108%" y="543.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="78.7608%" y="517" width="0.0308%" height="15" fill="rgb(225,24,44)" fg:x="2555" fg:w="1"/><text x="79.0108%" y="527.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::authenticate_lengths (1 samples, 0.03%)</title><rect x="78.7916%" y="693" width="0.0308%" height="15" fill="rgb(243,74,40)" fg:x="2556" fg:w="1"/><text x="79.0416%" y="703.50"></text></g><g><title>universal_hash::UniversalHash::update (1 samples, 0.03%)</title><rect x="78.7916%" y="677" width="0.0308%" height="15" fill="rgb(228,39,7)" fg:x="2556" fg:w="1"/><text x="79.0416%" y="687.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (1 samples, 0.03%)</title><rect x="78.7916%" y="661" width="0.0308%" height="15" fill="rgb(227,79,8)" fg:x="2556" fg:w="1"/><text x="79.0416%" y="671.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (1 samples, 0.03%)</title><rect x="78.7916%" y="645" width="0.0308%" height="15" fill="rgb(236,58,11)" fg:x="2556" fg:w="1"/><text x="79.0416%" y="655.50"></text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (1 samples, 0.03%)</title><rect x="78.7916%" y="629" width="0.0308%" height="15" fill="rgb(249,63,35)" fg:x="2556" fg:w="1"/><text x="79.0416%" y="639.50"></text></g><g><title>&lt;poly1305::backend::avx2::State as universal_hash::UhfBackend&gt;::proc_block (1 samples, 0.03%)</title><rect x="78.7916%" y="613" width="0.0308%" height="15" fill="rgb(252,114,16)" fg:x="2556" fg:w="1"/><text x="79.0416%" y="623.50"></text></g><g><title>poly1305::backend::avx2::State::compute_block (1 samples, 0.03%)</title><rect x="78.7916%" y="597" width="0.0308%" height="15" fill="rgb(254,151,24)" fg:x="2556" fg:w="1"/><text x="79.0416%" y="607.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (1 samples, 0.03%)</title><rect x="78.7916%" y="581" width="0.0308%" height="15" fill="rgb(253,54,39)" fg:x="2556" fg:w="1"/><text x="79.0416%" y="591.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (1 samples, 0.03%)</title><rect x="78.7916%" y="565" width="0.0308%" height="15" fill="rgb(243,25,45)" fg:x="2556" fg:w="1"/><text x="79.0416%" y="575.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.03%)</title><rect x="78.7916%" y="549" width="0.0308%" height="15" fill="rgb(234,134,9)" fg:x="2556" fg:w="1"/><text x="79.0416%" y="559.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_par_ks_blocks (1 samples, 0.03%)</title><rect x="78.8224%" y="565" width="0.0308%" height="15" fill="rgb(227,166,31)" fg:x="2557" fg:w="1"/><text x="79.0724%" y="575.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="78.8224%" y="549" width="0.0308%" height="15" fill="rgb(245,143,41)" fg:x="2557" fg:w="1"/><text x="79.0724%" y="559.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (2 samples, 0.06%)</title><rect x="78.8224%" y="693" width="0.0617%" height="15" fill="rgb(238,181,32)" fg:x="2557" fg:w="2"/><text x="79.0724%" y="703.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (2 samples, 0.06%)</title><rect x="78.8224%" y="677" width="0.0617%" height="15" fill="rgb(224,113,18)" fg:x="2557" fg:w="2"/><text x="79.0724%" y="687.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (2 samples, 0.06%)</title><rect x="78.8224%" y="661" width="0.0617%" height="15" fill="rgb(240,229,28)" fg:x="2557" fg:w="2"/><text x="79.0724%" y="671.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (2 samples, 0.06%)</title><rect x="78.8224%" y="645" width="0.0617%" height="15" fill="rgb(250,185,3)" fg:x="2557" fg:w="2"/><text x="79.0724%" y="655.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (2 samples, 0.06%)</title><rect x="78.8224%" y="629" width="0.0617%" height="15" fill="rgb(212,59,25)" fg:x="2557" fg:w="2"/><text x="79.0724%" y="639.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (2 samples, 0.06%)</title><rect x="78.8224%" y="613" width="0.0617%" height="15" fill="rgb(221,87,20)" fg:x="2557" fg:w="2"/><text x="79.0724%" y="623.50"></text></g><g><title>chacha20::backends::avx2::inner (2 samples, 0.06%)</title><rect x="78.8224%" y="597" width="0.0617%" height="15" fill="rgb(213,74,28)" fg:x="2557" fg:w="2"/><text x="79.0724%" y="607.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (2 samples, 0.06%)</title><rect x="78.8224%" y="581" width="0.0617%" height="15" fill="rgb(224,132,34)" fg:x="2557" fg:w="2"/><text x="79.0724%" y="591.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.03%)</title><rect x="78.8533%" y="565" width="0.0308%" height="15" fill="rgb(222,101,24)" fg:x="2558" fg:w="1"/><text x="79.1033%" y="575.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.03%)</title><rect x="78.8533%" y="549" width="0.0308%" height="15" fill="rgb(254,142,4)" fg:x="2558" fg:w="1"/><text x="79.1033%" y="559.50"></text></g><g><title>core::ptr::write (1 samples, 0.03%)</title><rect x="78.8533%" y="533" width="0.0308%" height="15" fill="rgb(230,229,49)" fg:x="2558" fg:w="1"/><text x="79.1033%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (1 samples, 0.03%)</title><rect x="78.8841%" y="581" width="0.0308%" height="15" fill="rgb(238,70,47)" fg:x="2559" fg:w="1"/><text x="79.1341%" y="591.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::encrypt_in_place_detached (5 samples, 0.15%)</title><rect x="78.7916%" y="709" width="0.1541%" height="15" fill="rgb(231,160,17)" fg:x="2556" fg:w="5"/><text x="79.0416%" y="719.50"></text></g><g><title>universal_hash::UniversalHash::update_padded (2 samples, 0.06%)</title><rect x="78.8841%" y="693" width="0.0617%" height="15" fill="rgb(218,68,53)" fg:x="2559" fg:w="2"/><text x="79.1341%" y="703.50"></text></g><g><title>universal_hash::UniversalHash::update (2 samples, 0.06%)</title><rect x="78.8841%" y="677" width="0.0617%" height="15" fill="rgb(236,111,10)" fg:x="2559" fg:w="2"/><text x="79.1341%" y="687.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (2 samples, 0.06%)</title><rect x="78.8841%" y="661" width="0.0617%" height="15" fill="rgb(224,34,41)" fg:x="2559" fg:w="2"/><text x="79.1341%" y="671.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (2 samples, 0.06%)</title><rect x="78.8841%" y="645" width="0.0617%" height="15" fill="rgb(241,118,19)" fg:x="2559" fg:w="2"/><text x="79.1341%" y="655.50"></text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (2 samples, 0.06%)</title><rect x="78.8841%" y="629" width="0.0617%" height="15" fill="rgb(238,129,25)" fg:x="2559" fg:w="2"/><text x="79.1341%" y="639.50"></text></g><g><title>&lt;poly1305::backend::avx2::State as universal_hash::UhfBackend&gt;::proc_par_blocks (2 samples, 0.06%)</title><rect x="78.8841%" y="613" width="0.0617%" height="15" fill="rgb(238,22,31)" fg:x="2559" fg:w="2"/><text x="79.1341%" y="623.50"></text></g><g><title>poly1305::backend::avx2::State::compute_par_blocks (2 samples, 0.06%)</title><rect x="78.8841%" y="597" width="0.0617%" height="15" fill="rgb(222,174,48)" fg:x="2559" fg:w="2"/><text x="79.1341%" y="607.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (1 samples, 0.03%)</title><rect x="78.9149%" y="581" width="0.0308%" height="15" fill="rgb(206,152,40)" fg:x="2560" fg:w="1"/><text x="79.1649%" y="591.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (1 samples, 0.03%)</title><rect x="78.9149%" y="565" width="0.0308%" height="15" fill="rgb(218,99,54)" fg:x="2560" fg:w="1"/><text x="79.1649%" y="575.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="78.9149%" y="549" width="0.0308%" height="15" fill="rgb(220,174,26)" fg:x="2560" fg:w="1"/><text x="79.1649%" y="559.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="78.9149%" y="533" width="0.0308%" height="15" fill="rgb(245,116,9)" fg:x="2560" fg:w="1"/><text x="79.1649%" y="543.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="78.9149%" y="517" width="0.0308%" height="15" fill="rgb(209,72,35)" fg:x="2560" fg:w="1"/><text x="79.1649%" y="527.50"></text></g><g><title>core::core_arch::simd::i8x32::new (1 samples, 0.03%)</title><rect x="78.9149%" y="501" width="0.0308%" height="15" fill="rgb(226,126,21)" fg:x="2560" fg:w="1"/><text x="79.1649%" y="511.50"></text></g><g><title>tftp::server::connection::Connection&lt;B,Rng&gt;::send_packet (6 samples, 0.18%)</title><rect x="78.7916%" y="789" width="0.1850%" height="15" fill="rgb(227,192,1)" fg:x="2556" fg:w="6"/><text x="79.0416%" y="799.50"></text></g><g><title>tftp::server::connection::Connection&lt;B,Rng&gt;::send_bytes (6 samples, 0.18%)</title><rect x="78.7916%" y="773" width="0.1850%" height="15" fill="rgb(237,180,29)" fg:x="2556" fg:w="6"/><text x="79.0416%" y="783.50"></text></g><g><title>tftp::encrypted_packet::EncryptedPacket::encrypt (6 samples, 0.18%)</title><rect x="78.7916%" y="757" width="0.1850%" height="15" fill="rgb(230,197,35)" fg:x="2556" fg:w="6"/><text x="79.0416%" y="767.50"></text></g><g><title>tftp::encryption::Encryptor&lt;R&gt;::encrypt (6 samples, 0.18%)</title><rect x="78.7916%" y="741" width="0.1850%" height="15" fill="rgb(246,193,31)" fg:x="2556" fg:w="6"/><text x="79.0416%" y="751.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::encrypt_in_place_detached (6 samples, 0.18%)</title><rect x="78.7916%" y="725" width="0.1850%" height="15" fill="rgb(241,36,4)" fg:x="2556" fg:w="6"/><text x="79.0416%" y="735.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (1 samples, 0.03%)</title><rect x="78.9457%" y="709" width="0.0308%" height="15" fill="rgb(241,130,17)" fg:x="2561" fg:w="1"/><text x="79.1957%" y="719.50"></text></g><g><title>&lt;poly1305::Poly1305 as crypto_common::KeyInit&gt;::new (1 samples, 0.03%)</title><rect x="78.9457%" y="693" width="0.0308%" height="15" fill="rgb(206,137,32)" fg:x="2561" fg:w="1"/><text x="79.1957%" y="703.50"></text></g><g><title>poly1305::backend::autodetect::State::new (1 samples, 0.03%)</title><rect x="78.9457%" y="677" width="0.0308%" height="15" fill="rgb(237,228,51)" fg:x="2561" fg:w="1"/><text x="79.1957%" y="687.50"></text></g><g><title>poly1305::backend::avx2::State::new (1 samples, 0.03%)</title><rect x="78.9457%" y="661" width="0.0308%" height="15" fill="rgb(243,6,42)" fg:x="2561" fg:w="1"/><text x="79.1957%" y="671.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier as core::ops::arith::Mul&gt;::mul (1 samples, 0.03%)</title><rect x="78.9457%" y="645" width="0.0308%" height="15" fill="rgb(251,74,28)" fg:x="2561" fg:w="1"/><text x="79.1957%" y="655.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (1 samples, 0.03%)</title><rect x="78.9457%" y="629" width="0.0308%" height="15" fill="rgb(218,20,49)" fg:x="2561" fg:w="1"/><text x="79.1957%" y="639.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (1 samples, 0.03%)</title><rect x="78.9457%" y="613" width="0.0308%" height="15" fill="rgb(238,28,14)" fg:x="2561" fg:w="1"/><text x="79.1957%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.03%)</title><rect x="78.9766%" y="581" width="0.0308%" height="15" fill="rgb(229,40,46)" fg:x="2562" fg:w="1"/><text x="79.2266%" y="591.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::authenticate_lengths (2 samples, 0.06%)</title><rect x="78.9766%" y="693" width="0.0617%" height="15" fill="rgb(244,195,20)" fg:x="2562" fg:w="2"/><text x="79.2266%" y="703.50"></text></g><g><title>universal_hash::UniversalHash::update (2 samples, 0.06%)</title><rect x="78.9766%" y="677" width="0.0617%" height="15" fill="rgb(253,56,35)" fg:x="2562" fg:w="2"/><text x="79.2266%" y="687.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (2 samples, 0.06%)</title><rect x="78.9766%" y="661" width="0.0617%" height="15" fill="rgb(210,149,44)" fg:x="2562" fg:w="2"/><text x="79.2266%" y="671.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (2 samples, 0.06%)</title><rect x="78.9766%" y="645" width="0.0617%" height="15" fill="rgb(240,135,12)" fg:x="2562" fg:w="2"/><text x="79.2266%" y="655.50"></text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (2 samples, 0.06%)</title><rect x="78.9766%" y="629" width="0.0617%" height="15" fill="rgb(251,24,50)" fg:x="2562" fg:w="2"/><text x="79.2266%" y="639.50"></text></g><g><title>&lt;poly1305::backend::avx2::State as universal_hash::UhfBackend&gt;::proc_block (2 samples, 0.06%)</title><rect x="78.9766%" y="613" width="0.0617%" height="15" fill="rgb(243,200,47)" fg:x="2562" fg:w="2"/><text x="79.2266%" y="623.50"></text></g><g><title>poly1305::backend::avx2::State::compute_block (2 samples, 0.06%)</title><rect x="78.9766%" y="597" width="0.0617%" height="15" fill="rgb(224,166,26)" fg:x="2562" fg:w="2"/><text x="79.2266%" y="607.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.03%)</title><rect x="79.0074%" y="581" width="0.0308%" height="15" fill="rgb(233,0,47)" fg:x="2563" fg:w="1"/><text x="79.2574%" y="591.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="79.0382%" y="549" width="0.0308%" height="15" fill="rgb(253,80,5)" fg:x="2564" fg:w="1"/><text x="79.2882%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.03%)</title><rect x="79.0382%" y="533" width="0.0308%" height="15" fill="rgb(214,133,25)" fg:x="2564" fg:w="1"/><text x="79.2882%" y="543.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.03%)</title><rect x="79.0382%" y="517" width="0.0308%" height="15" fill="rgb(209,27,14)" fg:x="2564" fg:w="1"/><text x="79.2882%" y="527.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (2 samples, 0.06%)</title><rect x="79.0691%" y="549" width="0.0617%" height="15" fill="rgb(219,102,51)" fg:x="2565" fg:w="2"/><text x="79.3191%" y="559.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_par_ks_blocks (4 samples, 0.12%)</title><rect x="79.0382%" y="565" width="0.1233%" height="15" fill="rgb(237,18,16)" fg:x="2564" fg:w="4"/><text x="79.2882%" y="575.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="79.1307%" y="549" width="0.0308%" height="15" fill="rgb(241,85,17)" fg:x="2567" fg:w="1"/><text x="79.3807%" y="559.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.03%)</title><rect x="79.1615%" y="565" width="0.0308%" height="15" fill="rgb(236,90,42)" fg:x="2568" fg:w="1"/><text x="79.4115%" y="575.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.03%)</title><rect x="79.1615%" y="549" width="0.0308%" height="15" fill="rgb(249,57,21)" fg:x="2568" fg:w="1"/><text x="79.4115%" y="559.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::iter_position (1 samples, 0.03%)</title><rect x="79.1615%" y="533" width="0.0308%" height="15" fill="rgb(243,12,36)" fg:x="2568" fg:w="1"/><text x="79.4115%" y="543.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.03%)</title><rect x="79.1615%" y="517" width="0.0308%" height="15" fill="rgb(253,128,47)" fg:x="2568" fg:w="1"/><text x="79.4115%" y="527.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (1 samples, 0.03%)</title><rect x="79.1615%" y="501" width="0.0308%" height="15" fill="rgb(207,33,20)" fg:x="2568" fg:w="1"/><text x="79.4115%" y="511.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (1 samples, 0.03%)</title><rect x="79.1615%" y="485" width="0.0308%" height="15" fill="rgb(233,215,35)" fg:x="2568" fg:w="1"/><text x="79.4115%" y="495.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (1 samples, 0.03%)</title><rect x="79.1615%" y="469" width="0.0308%" height="15" fill="rgb(249,188,52)" fg:x="2568" fg:w="1"/><text x="79.4115%" y="479.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (1 samples, 0.03%)</title><rect x="81.9667%" y="533" width="0.0308%" height="15" fill="rgb(225,12,32)" fg:x="2659" fg:w="1"/><text x="82.2167%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::cast (2 samples, 0.06%)</title><rect x="82.0900%" y="501" width="0.0617%" height="15" fill="rgb(247,98,14)" fg:x="2663" fg:w="2"/><text x="82.3400%" y="511.50"></text></g><g><title>core::slice::raw::from_raw_parts (15 samples, 0.46%)</title><rect x="81.9975%" y="533" width="0.4624%" height="15" fill="rgb(247,219,48)" fg:x="2660" fg:w="15"/><text x="82.2475%" y="543.50"></text></g><g><title>core::ptr::slice_from_raw_parts (12 samples, 0.37%)</title><rect x="82.0900%" y="517" width="0.3699%" height="15" fill="rgb(253,60,48)" fg:x="2663" fg:w="12"/><text x="82.3400%" y="527.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (10 samples, 0.31%)</title><rect x="82.1517%" y="501" width="0.3083%" height="15" fill="rgb(245,15,52)" fg:x="2665" fg:w="10"/><text x="82.4017%" y="511.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (2 samples, 0.06%)</title><rect x="82.4599%" y="533" width="0.0617%" height="15" fill="rgb(220,133,28)" fg:x="2675" fg:w="2"/><text x="82.7099%" y="543.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (2 samples, 0.06%)</title><rect x="82.4599%" y="517" width="0.0617%" height="15" fill="rgb(217,180,4)" fg:x="2675" fg:w="2"/><text x="82.7099%" y="527.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (2 samples, 0.06%)</title><rect x="82.4599%" y="501" width="0.0617%" height="15" fill="rgb(251,24,1)" fg:x="2675" fg:w="2"/><text x="82.7099%" y="511.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::Deref&gt;::deref (55 samples, 1.70%)</title><rect x="80.8570%" y="549" width="1.6954%" height="15" fill="rgb(212,185,49)" fg:x="2623" fg:w="55"/><text x="81.1070%" y="559.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (1 samples, 0.03%)</title><rect x="82.5216%" y="533" width="0.0308%" height="15" fill="rgb(215,175,22)" fg:x="2677" fg:w="1"/><text x="82.7716%" y="543.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.03%)</title><rect x="83.0456%" y="533" width="0.0308%" height="15" fill="rgb(250,205,14)" fg:x="2694" fg:w="1"/><text x="83.2956%" y="543.50"></text></g><g><title>core::slice::raw::from_raw_parts (8 samples, 0.25%)</title><rect x="83.0764%" y="533" width="0.2466%" height="15" fill="rgb(225,211,22)" fg:x="2695" fg:w="8"/><text x="83.3264%" y="543.50"></text></g><g><title>core::ptr::slice_from_raw_parts (6 samples, 0.18%)</title><rect x="83.1381%" y="517" width="0.1850%" height="15" fill="rgb(251,179,42)" fg:x="2697" fg:w="6"/><text x="83.3881%" y="527.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (6 samples, 0.18%)</title><rect x="83.1381%" y="501" width="0.1850%" height="15" fill="rgb(208,216,51)" fg:x="2697" fg:w="6"/><text x="83.3881%" y="511.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (5 samples, 0.15%)</title><rect x="83.3539%" y="501" width="0.1541%" height="15" fill="rgb(235,36,11)" fg:x="2704" fg:w="5"/><text x="83.6039%" y="511.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (32 samples, 0.99%)</title><rect x="82.5524%" y="549" width="0.9864%" height="15" fill="rgb(213,189,28)" fg:x="2678" fg:w="32"/><text x="82.8024%" y="559.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (7 samples, 0.22%)</title><rect x="83.3231%" y="533" width="0.2158%" height="15" fill="rgb(227,203,42)" fg:x="2703" fg:w="7"/><text x="83.5731%" y="543.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (6 samples, 0.18%)</title><rect x="83.3539%" y="517" width="0.1850%" height="15" fill="rgb(244,72,36)" fg:x="2704" fg:w="6"/><text x="83.6039%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::cast (1 samples, 0.03%)</title><rect x="83.5080%" y="501" width="0.0308%" height="15" fill="rgb(213,53,17)" fg:x="2709" fg:w="1"/><text x="83.7580%" y="511.50"></text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;generic_array::GenericArray&lt;u8,N&gt;,M&gt;&gt;::xor_in2out (144 samples, 4.44%)</title><rect x="79.1924%" y="565" width="4.4390%" height="15" fill="rgb(207,167,3)" fg:x="2569" fg:w="144"/><text x="79.4424%" y="575.50">inout..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3 samples, 0.09%)</title><rect x="83.5388%" y="549" width="0.0925%" height="15" fill="rgb(216,98,30)" fg:x="2710" fg:w="3"/><text x="83.7888%" y="559.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3 samples, 0.09%)</title><rect x="83.5388%" y="533" width="0.0925%" height="15" fill="rgb(236,123,15)" fg:x="2710" fg:w="3"/><text x="83.7888%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.03%)</title><rect x="83.6005%" y="517" width="0.0308%" height="15" fill="rgb(248,81,50)" fg:x="2712" fg:w="1"/><text x="83.8505%" y="527.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.03%)</title><rect x="83.6930%" y="549" width="0.0308%" height="15" fill="rgb(214,120,4)" fg:x="2715" fg:w="1"/><text x="83.9430%" y="559.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (2 samples, 0.06%)</title><rect x="83.7238%" y="533" width="0.0617%" height="15" fill="rgb(208,179,34)" fg:x="2716" fg:w="2"/><text x="83.9738%" y="543.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3 samples, 0.09%)</title><rect x="83.7238%" y="549" width="0.0925%" height="15" fill="rgb(227,140,7)" fg:x="2716" fg:w="3"/><text x="83.9738%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.03%)</title><rect x="83.7855%" y="533" width="0.0308%" height="15" fill="rgb(214,22,6)" fg:x="2718" fg:w="1"/><text x="84.0355%" y="543.50"></text></g><g><title>chacha20::backends::avx2::inner (156 samples, 4.81%)</title><rect x="79.0382%" y="597" width="4.8089%" height="15" fill="rgb(207,137,27)" fg:x="2564" fg:w="156"/><text x="79.2882%" y="607.50">chacha..</text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (156 samples, 4.81%)</title><rect x="79.0382%" y="581" width="4.8089%" height="15" fill="rgb(210,8,46)" fg:x="2564" fg:w="156"/><text x="79.2882%" y="591.50">&lt;ciphe..</text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;u8,N&gt;&gt;::xor_in2out (7 samples, 0.22%)</title><rect x="83.6313%" y="565" width="0.2158%" height="15" fill="rgb(240,16,54)" fg:x="2713" fg:w="7"/><text x="83.8813%" y="575.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.03%)</title><rect x="83.8163%" y="549" width="0.0308%" height="15" fill="rgb(211,209,29)" fg:x="2719" fg:w="1"/><text x="84.0663%" y="559.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.03%)</title><rect x="83.8163%" y="533" width="0.0308%" height="15" fill="rgb(226,228,24)" fg:x="2719" fg:w="1"/><text x="84.0663%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.03%)</title><rect x="83.8163%" y="517" width="0.0308%" height="15" fill="rgb(222,84,9)" fg:x="2719" fg:w="1"/><text x="84.0663%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="83.8163%" y="501" width="0.0308%" height="15" fill="rgb(234,203,30)" fg:x="2719" fg:w="1"/><text x="84.0663%" y="511.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="83.8163%" y="485" width="0.0308%" height="15" fill="rgb(238,109,14)" fg:x="2719" fg:w="1"/><text x="84.0663%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.03%)</title><rect x="83.8163%" y="469" width="0.0308%" height="15" fill="rgb(233,206,34)" fg:x="2719" fg:w="1"/><text x="84.0663%" y="479.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="83.8163%" y="453" width="0.0308%" height="15" fill="rgb(220,167,47)" fg:x="2719" fg:w="1"/><text x="84.0663%" y="463.50"></text></g><g><title>chacha20::backends::avx2::rounds (3 samples, 0.09%)</title><rect x="83.8471%" y="597" width="0.0925%" height="15" fill="rgb(238,105,10)" fg:x="2720" fg:w="3"/><text x="84.0971%" y="607.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.03%)</title><rect x="83.9396%" y="597" width="0.0308%" height="15" fill="rgb(213,227,17)" fg:x="2723" fg:w="1"/><text x="84.1896%" y="607.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (2 samples, 0.06%)</title><rect x="83.9704%" y="597" width="0.0617%" height="15" fill="rgb(217,132,38)" fg:x="2724" fg:w="2"/><text x="84.2204%" y="607.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (4 samples, 0.12%)</title><rect x="84.0321%" y="597" width="0.1233%" height="15" fill="rgb(242,146,4)" fg:x="2726" fg:w="4"/><text x="84.2821%" y="607.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (167 samples, 5.15%)</title><rect x="79.0382%" y="645" width="5.1480%" height="15" fill="rgb(212,61,9)" fg:x="2564" fg:w="167"/><text x="79.2882%" y="655.50">cipher..</text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (167 samples, 5.15%)</title><rect x="79.0382%" y="629" width="5.1480%" height="15" fill="rgb(247,126,22)" fg:x="2564" fg:w="167"/><text x="79.2882%" y="639.50">&lt;chach..</text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (167 samples, 5.15%)</title><rect x="79.0382%" y="613" width="5.1480%" height="15" fill="rgb(220,196,2)" fg:x="2564" fg:w="167"/><text x="79.2882%" y="623.50">&lt;chach..</text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="84.1554%" y="597" width="0.0308%" height="15" fill="rgb(208,46,4)" fg:x="2730" fg:w="1"/><text x="84.4054%" y="607.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="84.2478%" y="501" width="0.0308%" height="15" fill="rgb(252,104,46)" fg:x="2733" fg:w="1"/><text x="84.4978%" y="511.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (8 samples, 0.25%)</title><rect x="84.2787%" y="501" width="0.2466%" height="15" fill="rgb(237,152,48)" fg:x="2734" fg:w="8"/><text x="84.5287%" y="511.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (1 samples, 0.03%)</title><rect x="84.5253%" y="501" width="0.0308%" height="15" fill="rgb(221,59,37)" fg:x="2742" fg:w="1"/><text x="84.7753%" y="511.50"></text></g><g><title>chacha20::backends::avx2::inner (3 samples, 0.09%)</title><rect x="84.5561%" y="501" width="0.0925%" height="15" fill="rgb(209,202,51)" fg:x="2743" fg:w="3"/><text x="84.8061%" y="511.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (3 samples, 0.09%)</title><rect x="84.5561%" y="485" width="0.0925%" height="15" fill="rgb(228,81,30)" fg:x="2743" fg:w="3"/><text x="84.8061%" y="495.50"></text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;u8,N&gt;&gt;::xor_in2out (3 samples, 0.09%)</title><rect x="84.5561%" y="469" width="0.0925%" height="15" fill="rgb(227,42,39)" fg:x="2743" fg:w="3"/><text x="84.8061%" y="479.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (3 samples, 0.09%)</title><rect x="84.6486%" y="501" width="0.0925%" height="15" fill="rgb(221,26,2)" fg:x="2746" fg:w="3"/><text x="84.8986%" y="511.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="84.8335%" y="485" width="0.0308%" height="15" fill="rgb(254,61,31)" fg:x="2752" fg:w="1"/><text x="85.0835%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="84.8644%" y="485" width="0.0308%" height="15" fill="rgb(222,173,38)" fg:x="2753" fg:w="1"/><text x="85.1144%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.03%)</title><rect x="84.8952%" y="485" width="0.0308%" height="15" fill="rgb(218,50,12)" fg:x="2754" fg:w="1"/><text x="85.1452%" y="495.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.06%)</title><rect x="84.9260%" y="485" width="0.0617%" height="15" fill="rgb(223,88,40)" fg:x="2755" fg:w="2"/><text x="85.1760%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (10 samples, 0.31%)</title><rect x="84.7411%" y="501" width="0.3083%" height="15" fill="rgb(237,54,19)" fg:x="2749" fg:w="10"/><text x="84.9911%" y="511.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.06%)</title><rect x="84.9877%" y="485" width="0.0617%" height="15" fill="rgb(251,129,25)" fg:x="2757" fg:w="2"/><text x="85.2377%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (4 samples, 0.12%)</title><rect x="85.0493%" y="501" width="0.1233%" height="15" fill="rgb(238,97,19)" fg:x="2759" fg:w="4"/><text x="85.2993%" y="511.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (2 samples, 0.06%)</title><rect x="85.2959%" y="485" width="0.0617%" height="15" fill="rgb(240,169,18)" fg:x="2767" fg:w="2"/><text x="85.5459%" y="495.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (1 samples, 0.03%)</title><rect x="85.3576%" y="485" width="0.0308%" height="15" fill="rgb(230,187,49)" fg:x="2769" fg:w="1"/><text x="85.6076%" y="495.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (1 samples, 0.03%)</title><rect x="85.3884%" y="485" width="0.0308%" height="15" fill="rgb(209,44,26)" fg:x="2770" fg:w="1"/><text x="85.6384%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (9 samples, 0.28%)</title><rect x="85.1726%" y="501" width="0.2774%" height="15" fill="rgb(244,0,6)" fg:x="2763" fg:w="9"/><text x="85.4226%" y="511.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.03%)</title><rect x="85.4192%" y="485" width="0.0308%" height="15" fill="rgb(248,18,21)" fg:x="2771" fg:w="1"/><text x="85.6692%" y="495.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (2 samples, 0.06%)</title><rect x="85.4809%" y="485" width="0.0617%" height="15" fill="rgb(245,180,19)" fg:x="2773" fg:w="2"/><text x="85.7309%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="85.5425%" y="485" width="0.0308%" height="15" fill="rgb(252,118,36)" fg:x="2775" fg:w="1"/><text x="85.7925%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.03%)</title><rect x="85.5734%" y="485" width="0.0308%" height="15" fill="rgb(210,224,19)" fg:x="2776" fg:w="1"/><text x="85.8234%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (6 samples, 0.18%)</title><rect x="85.4501%" y="501" width="0.1850%" height="15" fill="rgb(218,30,24)" fg:x="2772" fg:w="6"/><text x="85.7001%" y="511.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="85.6042%" y="485" width="0.0308%" height="15" fill="rgb(219,75,50)" fg:x="2777" fg:w="1"/><text x="85.8542%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (2 samples, 0.06%)</title><rect x="85.6350%" y="501" width="0.0617%" height="15" fill="rgb(234,72,50)" fg:x="2778" fg:w="2"/><text x="85.8850%" y="511.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.03%)</title><rect x="85.6658%" y="485" width="0.0308%" height="15" fill="rgb(219,100,48)" fg:x="2779" fg:w="1"/><text x="85.9158%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (10 samples, 0.31%)</title><rect x="85.6967%" y="501" width="0.3083%" height="15" fill="rgb(253,5,41)" fg:x="2780" fg:w="10"/><text x="85.9467%" y="511.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.03%)</title><rect x="85.9741%" y="485" width="0.0308%" height="15" fill="rgb(247,181,11)" fg:x="2789" fg:w="1"/><text x="86.2241%" y="495.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (2 samples, 0.06%)</title><rect x="86.0049%" y="501" width="0.0617%" height="15" fill="rgb(222,223,25)" fg:x="2790" fg:w="2"/><text x="86.2549%" y="511.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (5 samples, 0.15%)</title><rect x="86.0666%" y="501" width="0.1541%" height="15" fill="rgb(214,198,28)" fg:x="2792" fg:w="5"/><text x="86.3166%" y="511.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="86.2207%" y="501" width="0.0308%" height="15" fill="rgb(230,46,43)" fg:x="2797" fg:w="1"/><text x="86.4707%" y="511.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (6 samples, 0.18%)</title><rect x="86.2515%" y="501" width="0.1850%" height="15" fill="rgb(233,65,53)" fg:x="2798" fg:w="6"/><text x="86.5015%" y="511.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (80 samples, 2.47%)</title><rect x="84.1862%" y="517" width="2.4661%" height="15" fill="rgb(221,121,27)" fg:x="2731" fg:w="80"/><text x="84.4362%" y="527.50">ch..</text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (7 samples, 0.22%)</title><rect x="86.4365%" y="501" width="0.2158%" height="15" fill="rgb(247,70,47)" fg:x="2804" fg:w="7"/><text x="86.6865%" y="511.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (2 samples, 0.06%)</title><rect x="86.6523%" y="517" width="0.0617%" height="15" fill="rgb(228,85,35)" fg:x="2811" fg:w="2"/><text x="86.9023%" y="527.50"></text></g><g><title>chacha20::backends::avx2::inner (1 samples, 0.03%)</title><rect x="86.7139%" y="517" width="0.0308%" height="15" fill="rgb(209,50,18)" fg:x="2813" fg:w="1"/><text x="86.9639%" y="527.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (1 samples, 0.03%)</title><rect x="86.7139%" y="501" width="0.0308%" height="15" fill="rgb(250,19,35)" fg:x="2813" fg:w="1"/><text x="86.9639%" y="511.50"></text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;u8,N&gt;&gt;::xor_in2out (1 samples, 0.03%)</title><rect x="86.7139%" y="485" width="0.0308%" height="15" fill="rgb(253,107,29)" fg:x="2813" fg:w="1"/><text x="86.9639%" y="495.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.03%)</title><rect x="86.7139%" y="469" width="0.0308%" height="15" fill="rgb(252,179,29)" fg:x="2813" fg:w="1"/><text x="86.9639%" y="479.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (2 samples, 0.06%)</title><rect x="86.7448%" y="517" width="0.0617%" height="15" fill="rgb(238,194,6)" fg:x="2814" fg:w="2"/><text x="86.9948%" y="527.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (2 samples, 0.06%)</title><rect x="86.8064%" y="517" width="0.0617%" height="15" fill="rgb(238,164,29)" fg:x="2816" fg:w="2"/><text x="87.0564%" y="527.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (2 samples, 0.06%)</title><rect x="86.8681%" y="517" width="0.0617%" height="15" fill="rgb(224,25,9)" fg:x="2818" fg:w="2"/><text x="87.1181%" y="527.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.03%)</title><rect x="86.9297%" y="517" width="0.0308%" height="15" fill="rgb(244,153,23)" fg:x="2820" fg:w="1"/><text x="87.1797%" y="527.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (3 samples, 0.09%)</title><rect x="86.9605%" y="517" width="0.0925%" height="15" fill="rgb(212,203,14)" fg:x="2821" fg:w="3"/><text x="87.2105%" y="527.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.03%)</title><rect x="87.0530%" y="517" width="0.0308%" height="15" fill="rgb(220,164,20)" fg:x="2824" fg:w="1"/><text x="87.3030%" y="527.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (4 samples, 0.12%)</title><rect x="87.0838%" y="517" width="0.1233%" height="15" fill="rgb(222,203,48)" fg:x="2825" fg:w="4"/><text x="87.3338%" y="527.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (3 samples, 0.09%)</title><rect x="87.2072%" y="517" width="0.0925%" height="15" fill="rgb(215,159,22)" fg:x="2829" fg:w="3"/><text x="87.4572%" y="527.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (5 samples, 0.15%)</title><rect x="87.2996%" y="517" width="0.1541%" height="15" fill="rgb(216,183,47)" fg:x="2832" fg:w="5"/><text x="87.5496%" y="527.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::decrypt_in_place_detached (276 samples, 8.51%)</title><rect x="78.9766%" y="709" width="8.5080%" height="15" fill="rgb(229,195,25)" fg:x="2562" fg:w="276"/><text x="79.2266%" y="719.50">chacha20poly..</text></g><g><title>cipher::stream::StreamCipher::apply_keystream (274 samples, 8.45%)</title><rect x="79.0382%" y="693" width="8.4464%" height="15" fill="rgb(224,132,51)" fg:x="2564" fg:w="274"/><text x="79.2882%" y="703.50">cipher::stre..</text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (274 samples, 8.45%)</title><rect x="79.0382%" y="677" width="8.4464%" height="15" fill="rgb(240,63,7)" fg:x="2564" fg:w="274"/><text x="79.2882%" y="687.50">cipher::stre..</text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (274 samples, 8.45%)</title><rect x="79.0382%" y="661" width="8.4464%" height="15" fill="rgb(249,182,41)" fg:x="2564" fg:w="274"/><text x="79.2882%" y="671.50">&lt;cipher::str..</text></g><g><title>cipher::stream_core::StreamCipherCore::write_keystream_block (107 samples, 3.30%)</title><rect x="84.1862%" y="645" width="3.2984%" height="15" fill="rgb(243,47,26)" fg:x="2731" fg:w="107"/><text x="84.4362%" y="655.50">cip..</text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (107 samples, 3.30%)</title><rect x="84.1862%" y="629" width="3.2984%" height="15" fill="rgb(233,48,2)" fg:x="2731" fg:w="107"/><text x="84.4362%" y="639.50">&lt;ch..</text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (107 samples, 3.30%)</title><rect x="84.1862%" y="613" width="3.2984%" height="15" fill="rgb(244,165,34)" fg:x="2731" fg:w="107"/><text x="84.4362%" y="623.50">&lt;ch..</text></g><g><title>chacha20::backends::avx2::inner (107 samples, 3.30%)</title><rect x="84.1862%" y="597" width="3.2984%" height="15" fill="rgb(207,89,7)" fg:x="2731" fg:w="107"/><text x="84.4362%" y="607.50">cha..</text></g><g><title>&lt;cipher::stream_core::WriteBlockCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (107 samples, 3.30%)</title><rect x="84.1862%" y="581" width="3.2984%" height="15" fill="rgb(244,117,36)" fg:x="2731" fg:w="107"/><text x="84.4362%" y="591.50">&lt;ci..</text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (107 samples, 3.30%)</title><rect x="84.1862%" y="565" width="3.2984%" height="15" fill="rgb(226,144,34)" fg:x="2731" fg:w="107"/><text x="84.4362%" y="575.50">&lt;ch..</text></g><g><title>chacha20::backends::avx2::rounds (107 samples, 3.30%)</title><rect x="84.1862%" y="549" width="3.2984%" height="15" fill="rgb(213,23,19)" fg:x="2731" fg:w="107"/><text x="84.4362%" y="559.50">cha..</text></g><g><title>chacha20::backends::avx2::double_quarter_round (107 samples, 3.30%)</title><rect x="84.1862%" y="533" width="3.2984%" height="15" fill="rgb(217,75,12)" fg:x="2731" fg:w="107"/><text x="84.4362%" y="543.50">cha..</text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="87.4538%" y="517" width="0.0308%" height="15" fill="rgb(224,159,17)" fg:x="2837" fg:w="1"/><text x="87.7038%" y="527.50"></text></g><g><title>chacha20::backends::avx2::rounds (1 samples, 0.03%)</title><rect x="87.4846%" y="645" width="0.0308%" height="15" fill="rgb(217,118,1)" fg:x="2838" fg:w="1"/><text x="87.7346%" y="655.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="87.5154%" y="645" width="0.0308%" height="15" fill="rgb(232,180,48)" fg:x="2839" fg:w="1"/><text x="87.7654%" y="655.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srlv_epi64 (1 samples, 0.03%)</title><rect x="87.5771%" y="597" width="0.0308%" height="15" fill="rgb(230,27,33)" fg:x="2841" fg:w="1"/><text x="87.8271%" y="607.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced130::reduce (3 samples, 0.09%)</title><rect x="87.5462%" y="645" width="0.0925%" height="15" fill="rgb(205,31,21)" fg:x="2840" fg:w="3"/><text x="87.7962%" y="655.50"></text></g><g><title>poly1305::backend::avx2::helpers::adc (3 samples, 0.09%)</title><rect x="87.5462%" y="629" width="0.0925%" height="15" fill="rgb(253,59,4)" fg:x="2840" fg:w="3"/><text x="87.7962%" y="639.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (2 samples, 0.06%)</title><rect x="87.5771%" y="613" width="0.0617%" height="15" fill="rgb(224,201,9)" fg:x="2841" fg:w="2"/><text x="87.8271%" y="623.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="87.6079%" y="597" width="0.0308%" height="15" fill="rgb(229,206,30)" fg:x="2842" fg:w="1"/><text x="87.8579%" y="607.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="87.6079%" y="581" width="0.0308%" height="15" fill="rgb(212,67,47)" fg:x="2842" fg:w="1"/><text x="87.8579%" y="591.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="87.6079%" y="565" width="0.0308%" height="15" fill="rgb(211,96,50)" fg:x="2842" fg:w="1"/><text x="87.8579%" y="575.50"></text></g><g><title>core::core_arch::simd::i8x32::new (1 samples, 0.03%)</title><rect x="87.6079%" y="549" width="0.0308%" height="15" fill="rgb(252,114,18)" fg:x="2842" fg:w="1"/><text x="87.8579%" y="559.50"></text></g><g><title>&lt;poly1305::Poly1305 as crypto_common::KeyInit&gt;::new (6 samples, 0.18%)</title><rect x="87.4846%" y="693" width="0.1850%" height="15" fill="rgb(223,58,37)" fg:x="2838" fg:w="6"/><text x="87.7346%" y="703.50"></text></g><g><title>poly1305::backend::autodetect::State::new (6 samples, 0.18%)</title><rect x="87.4846%" y="677" width="0.1850%" height="15" fill="rgb(237,70,4)" fg:x="2838" fg:w="6"/><text x="87.7346%" y="687.50"></text></g><g><title>poly1305::backend::avx2::State::new (6 samples, 0.18%)</title><rect x="87.4846%" y="661" width="0.1850%" height="15" fill="rgb(244,85,46)" fg:x="2838" fg:w="6"/><text x="87.7346%" y="671.50"></text></g><g><title>poly1305::backend::avx2::helpers::prepare_keys (1 samples, 0.03%)</title><rect x="87.6387%" y="645" width="0.0308%" height="15" fill="rgb(223,39,52)" fg:x="2843" fg:w="1"/><text x="87.8887%" y="655.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="87.6387%" y="629" width="0.0308%" height="15" fill="rgb(218,200,14)" fg:x="2843" fg:w="1"/><text x="87.8887%" y="639.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (1 samples, 0.03%)</title><rect x="87.6695%" y="645" width="0.0308%" height="15" fill="rgb(208,171,16)" fg:x="2844" fg:w="1"/><text x="87.9195%" y="655.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (1 samples, 0.03%)</title><rect x="87.6695%" y="629" width="0.0308%" height="15" fill="rgb(234,200,18)" fg:x="2844" fg:w="1"/><text x="87.9195%" y="639.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (1 samples, 0.03%)</title><rect x="87.6695%" y="613" width="0.0308%" height="15" fill="rgb(228,45,11)" fg:x="2844" fg:w="1"/><text x="87.9195%" y="623.50"></text></g><g><title>chacha20::backends::avx2::inner (1 samples, 0.03%)</title><rect x="87.6695%" y="597" width="0.0308%" height="15" fill="rgb(237,182,11)" fg:x="2844" fg:w="1"/><text x="87.9195%" y="607.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="87.6695%" y="581" width="0.0308%" height="15" fill="rgb(241,175,49)" fg:x="2844" fg:w="1"/><text x="87.9195%" y="591.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (1 samples, 0.03%)</title><rect x="87.6695%" y="565" width="0.0308%" height="15" fill="rgb(247,38,35)" fg:x="2844" fg:w="1"/><text x="87.9195%" y="575.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (5 samples, 0.15%)</title><rect x="87.7312%" y="501" width="0.1541%" height="15" fill="rgb(228,39,49)" fg:x="2846" fg:w="5"/><text x="87.9812%" y="511.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (1 samples, 0.03%)</title><rect x="87.8853%" y="501" width="0.0308%" height="15" fill="rgb(226,101,26)" fg:x="2851" fg:w="1"/><text x="88.1353%" y="511.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="88.0703%" y="485" width="0.0308%" height="15" fill="rgb(206,141,19)" fg:x="2857" fg:w="1"/><text x="88.3203%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.03%)</title><rect x="88.1011%" y="485" width="0.0308%" height="15" fill="rgb(211,200,13)" fg:x="2858" fg:w="1"/><text x="88.3511%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="88.1319%" y="485" width="0.0308%" height="15" fill="rgb(241,121,6)" fg:x="2859" fg:w="1"/><text x="88.3819%" y="495.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (1 samples, 0.03%)</title><rect x="88.1628%" y="485" width="0.0308%" height="15" fill="rgb(234,221,29)" fg:x="2860" fg:w="1"/><text x="88.4128%" y="495.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="88.1936%" y="485" width="0.0308%" height="15" fill="rgb(229,136,5)" fg:x="2861" fg:w="1"/><text x="88.4436%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (11 samples, 0.34%)</title><rect x="87.9162%" y="501" width="0.3391%" height="15" fill="rgb(238,36,11)" fg:x="2852" fg:w="11"/><text x="88.1662%" y="511.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="88.2244%" y="485" width="0.0308%" height="15" fill="rgb(251,55,41)" fg:x="2862" fg:w="1"/><text x="88.4744%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (7 samples, 0.22%)</title><rect x="88.2552%" y="501" width="0.2158%" height="15" fill="rgb(242,34,40)" fg:x="2863" fg:w="7"/><text x="88.5052%" y="511.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.03%)</title><rect x="88.6252%" y="485" width="0.0308%" height="15" fill="rgb(215,42,17)" fg:x="2875" fg:w="1"/><text x="88.8752%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (7 samples, 0.22%)</title><rect x="88.4710%" y="501" width="0.2158%" height="15" fill="rgb(207,44,46)" fg:x="2870" fg:w="7"/><text x="88.7210%" y="511.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="88.6560%" y="485" width="0.0308%" height="15" fill="rgb(211,206,28)" fg:x="2876" fg:w="1"/><text x="88.9060%" y="495.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.03%)</title><rect x="88.6868%" y="485" width="0.0308%" height="15" fill="rgb(237,167,16)" fg:x="2877" fg:w="1"/><text x="88.9368%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (2 samples, 0.06%)</title><rect x="88.6868%" y="501" width="0.0617%" height="15" fill="rgb(233,66,6)" fg:x="2877" fg:w="2"/><text x="88.9368%" y="511.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.03%)</title><rect x="88.7176%" y="485" width="0.0308%" height="15" fill="rgb(246,123,29)" fg:x="2878" fg:w="1"/><text x="88.9676%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (6 samples, 0.18%)</title><rect x="88.7485%" y="501" width="0.1850%" height="15" fill="rgb(209,62,40)" fg:x="2879" fg:w="6"/><text x="88.9985%" y="511.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="88.9026%" y="485" width="0.0308%" height="15" fill="rgb(218,4,25)" fg:x="2884" fg:w="1"/><text x="89.1526%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (14 samples, 0.43%)</title><rect x="88.9334%" y="501" width="0.4316%" height="15" fill="rgb(253,91,49)" fg:x="2885" fg:w="14"/><text x="89.1834%" y="511.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="89.3342%" y="485" width="0.0308%" height="15" fill="rgb(228,155,29)" fg:x="2898" fg:w="1"/><text x="89.5842%" y="495.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.03%)</title><rect x="89.3650%" y="501" width="0.0308%" height="15" fill="rgb(243,57,37)" fg:x="2899" fg:w="1"/><text x="89.6150%" y="511.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (8 samples, 0.25%)</title><rect x="89.3958%" y="501" width="0.2466%" height="15" fill="rgb(244,167,17)" fg:x="2900" fg:w="8"/><text x="89.6458%" y="511.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (8 samples, 0.25%)</title><rect x="89.6424%" y="501" width="0.2466%" height="15" fill="rgb(207,181,38)" fg:x="2908" fg:w="8"/><text x="89.8924%" y="511.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (9 samples, 0.28%)</title><rect x="89.8890%" y="501" width="0.2774%" height="15" fill="rgb(211,8,23)" fg:x="2916" fg:w="9"/><text x="90.1390%" y="511.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (83 samples, 2.56%)</title><rect x="87.7004%" y="517" width="2.5586%" height="15" fill="rgb(235,11,44)" fg:x="2845" fg:w="83"/><text x="87.9504%" y="527.50">ch..</text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (3 samples, 0.09%)</title><rect x="90.1665%" y="501" width="0.0925%" height="15" fill="rgb(248,18,52)" fg:x="2925" fg:w="3"/><text x="90.4165%" y="511.50"></text></g><g><title>chacha20::backends::avx2::inner (1 samples, 0.03%)</title><rect x="90.2589%" y="517" width="0.0308%" height="15" fill="rgb(208,4,7)" fg:x="2928" fg:w="1"/><text x="90.5089%" y="527.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (1 samples, 0.03%)</title><rect x="90.2589%" y="501" width="0.0308%" height="15" fill="rgb(240,17,39)" fg:x="2928" fg:w="1"/><text x="90.5089%" y="511.50"></text></g><g><title>cipher::stream_core::StreamBackend::gen_tail_blocks (1 samples, 0.03%)</title><rect x="90.2589%" y="485" width="0.0308%" height="15" fill="rgb(207,170,3)" fg:x="2928" fg:w="1"/><text x="90.5089%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="90.2898%" y="517" width="0.0308%" height="15" fill="rgb(236,100,52)" fg:x="2929" fg:w="1"/><text x="90.5398%" y="527.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.03%)</title><rect x="90.3206%" y="517" width="0.0308%" height="15" fill="rgb(246,78,51)" fg:x="2930" fg:w="1"/><text x="90.5706%" y="527.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.03%)</title><rect x="90.3514%" y="517" width="0.0308%" height="15" fill="rgb(211,17,15)" fg:x="2931" fg:w="1"/><text x="90.6014%" y="527.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (5 samples, 0.15%)</title><rect x="90.3822%" y="517" width="0.1541%" height="15" fill="rgb(209,59,46)" fg:x="2932" fg:w="5"/><text x="90.6322%" y="527.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (3 samples, 0.09%)</title><rect x="90.5364%" y="517" width="0.0925%" height="15" fill="rgb(210,92,25)" fg:x="2937" fg:w="3"/><text x="90.7864%" y="527.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (5 samples, 0.15%)</title><rect x="90.6289%" y="517" width="0.1541%" height="15" fill="rgb(238,174,52)" fg:x="2940" fg:w="5"/><text x="90.8789%" y="527.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (2 samples, 0.06%)</title><rect x="90.7830%" y="517" width="0.0617%" height="15" fill="rgb(230,73,7)" fg:x="2945" fg:w="2"/><text x="91.0330%" y="527.50"></text></g><g><title>tftp::server::connection::Connection&lt;B,Rng&gt;::decrypt_packet (387 samples, 11.93%)</title><rect x="78.9766%" y="773" width="11.9297%" height="15" fill="rgb(243,124,40)" fg:x="2562" fg:w="387"/><text x="79.2266%" y="783.50">tftp::server::conn..</text></g><g><title>tftp::encrypted_packet::EncryptedPacket::decrypt (387 samples, 11.93%)</title><rect x="78.9766%" y="757" width="11.9297%" height="15" fill="rgb(244,170,11)" fg:x="2562" fg:w="387"/><text x="79.2266%" y="767.50">tftp::encrypted_pa..</text></g><g><title>tftp::encryption::Encryptor&lt;R&gt;::decrypt (387 samples, 11.93%)</title><rect x="78.9766%" y="741" width="11.9297%" height="15" fill="rgb(207,114,54)" fg:x="2562" fg:w="387"/><text x="79.2266%" y="751.50">tftp::encryption::..</text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (387 samples, 11.93%)</title><rect x="78.9766%" y="725" width="11.9297%" height="15" fill="rgb(205,42,20)" fg:x="2562" fg:w="387"/><text x="79.2266%" y="735.50">&lt;chacha20poly1305:..</text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (111 samples, 3.42%)</title><rect x="87.4846%" y="709" width="3.4217%" height="15" fill="rgb(230,30,28)" fg:x="2838" fg:w="111"/><text x="87.7346%" y="719.50">cha..</text></g><g><title>cipher::stream::StreamCipher::apply_keystream (105 samples, 3.24%)</title><rect x="87.6695%" y="693" width="3.2367%" height="15" fill="rgb(205,73,54)" fg:x="2844" fg:w="105"/><text x="87.9195%" y="703.50">cip..</text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (105 samples, 3.24%)</title><rect x="87.6695%" y="677" width="3.2367%" height="15" fill="rgb(254,227,23)" fg:x="2844" fg:w="105"/><text x="87.9195%" y="687.50">cip..</text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (105 samples, 3.24%)</title><rect x="87.6695%" y="661" width="3.2367%" height="15" fill="rgb(228,202,34)" fg:x="2844" fg:w="105"/><text x="87.9195%" y="671.50">&lt;ci..</text></g><g><title>cipher::stream_core::StreamCipherCore::write_keystream_block (104 samples, 3.21%)</title><rect x="87.7004%" y="645" width="3.2059%" height="15" fill="rgb(222,225,37)" fg:x="2845" fg:w="104"/><text x="87.9504%" y="655.50">cip..</text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (104 samples, 3.21%)</title><rect x="87.7004%" y="629" width="3.2059%" height="15" fill="rgb(221,14,54)" fg:x="2845" fg:w="104"/><text x="87.9504%" y="639.50">&lt;ch..</text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (104 samples, 3.21%)</title><rect x="87.7004%" y="613" width="3.2059%" height="15" fill="rgb(254,102,2)" fg:x="2845" fg:w="104"/><text x="87.9504%" y="623.50">&lt;ch..</text></g><g><title>chacha20::backends::avx2::inner (104 samples, 3.21%)</title><rect x="87.7004%" y="597" width="3.2059%" height="15" fill="rgb(232,104,17)" fg:x="2845" fg:w="104"/><text x="87.9504%" y="607.50">cha..</text></g><g><title>&lt;cipher::stream_core::WriteBlockCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (104 samples, 3.21%)</title><rect x="87.7004%" y="581" width="3.2059%" height="15" fill="rgb(250,220,14)" fg:x="2845" fg:w="104"/><text x="87.9504%" y="591.50">&lt;ci..</text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (104 samples, 3.21%)</title><rect x="87.7004%" y="565" width="3.2059%" height="15" fill="rgb(241,158,9)" fg:x="2845" fg:w="104"/><text x="87.9504%" y="575.50">&lt;ch..</text></g><g><title>chacha20::backends::avx2::rounds (104 samples, 3.21%)</title><rect x="87.7004%" y="549" width="3.2059%" height="15" fill="rgb(246,9,43)" fg:x="2845" fg:w="104"/><text x="87.9504%" y="559.50">cha..</text></g><g><title>chacha20::backends::avx2::double_quarter_round (104 samples, 3.21%)</title><rect x="87.7004%" y="533" width="3.2059%" height="15" fill="rgb(206,73,33)" fg:x="2845" fg:w="104"/><text x="87.9504%" y="543.50">cha..</text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (2 samples, 0.06%)</title><rect x="90.8446%" y="517" width="0.0617%" height="15" fill="rgb(222,79,8)" fg:x="2947" fg:w="2"/><text x="91.0946%" y="527.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_par_ks_blocks (1 samples, 0.03%)</title><rect x="90.9063%" y="549" width="0.0308%" height="15" fill="rgb(234,8,54)" fg:x="2949" fg:w="1"/><text x="91.1563%" y="559.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="90.9063%" y="533" width="0.0308%" height="15" fill="rgb(209,134,38)" fg:x="2949" fg:w="1"/><text x="91.1563%" y="543.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.03%)</title><rect x="91.3070%" y="517" width="0.0308%" height="15" fill="rgb(230,127,29)" fg:x="2962" fg:w="1"/><text x="91.5570%" y="527.50"></text></g><g><title>core::slice::raw::from_raw_parts (1 samples, 0.03%)</title><rect x="91.3379%" y="517" width="0.0308%" height="15" fill="rgb(242,44,41)" fg:x="2963" fg:w="1"/><text x="91.5879%" y="527.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.03%)</title><rect x="91.3379%" y="501" width="0.0308%" height="15" fill="rgb(222,56,43)" fg:x="2963" fg:w="1"/><text x="91.5879%" y="511.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (1 samples, 0.03%)</title><rect x="91.3379%" y="485" width="0.0308%" height="15" fill="rgb(238,39,47)" fg:x="2963" fg:w="1"/><text x="91.5879%" y="495.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::Deref&gt;::deref (7 samples, 0.22%)</title><rect x="91.1837%" y="533" width="0.2158%" height="15" fill="rgb(226,79,43)" fg:x="2958" fg:w="7"/><text x="91.4337%" y="543.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (1 samples, 0.03%)</title><rect x="91.3687%" y="517" width="0.0308%" height="15" fill="rgb(242,105,53)" fg:x="2964" fg:w="1"/><text x="91.6187%" y="527.50"></text></g><g><title>chacha20::backends::avx2::inner (17 samples, 0.52%)</title><rect x="90.9063%" y="581" width="0.5240%" height="15" fill="rgb(251,132,46)" fg:x="2949" fg:w="17"/><text x="91.1563%" y="591.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (17 samples, 0.52%)</title><rect x="90.9063%" y="565" width="0.5240%" height="15" fill="rgb(231,77,14)" fg:x="2949" fg:w="17"/><text x="91.1563%" y="575.50"></text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;generic_array::GenericArray&lt;u8,N&gt;,M&gt;&gt;::xor_in2out (16 samples, 0.49%)</title><rect x="90.9371%" y="549" width="0.4932%" height="15" fill="rgb(240,135,9)" fg:x="2950" fg:w="16"/><text x="91.1871%" y="559.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.03%)</title><rect x="91.3995%" y="533" width="0.0308%" height="15" fill="rgb(248,109,14)" fg:x="2965" fg:w="1"/><text x="91.6495%" y="543.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (19 samples, 0.59%)</title><rect x="90.9063%" y="629" width="0.5857%" height="15" fill="rgb(227,146,52)" fg:x="2949" fg:w="19"/><text x="91.1563%" y="639.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (19 samples, 0.59%)</title><rect x="90.9063%" y="613" width="0.5857%" height="15" fill="rgb(232,54,3)" fg:x="2949" fg:w="19"/><text x="91.1563%" y="623.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (19 samples, 0.59%)</title><rect x="90.9063%" y="597" width="0.5857%" height="15" fill="rgb(229,201,43)" fg:x="2949" fg:w="19"/><text x="91.1563%" y="607.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (2 samples, 0.06%)</title><rect x="91.4303%" y="581" width="0.0617%" height="15" fill="rgb(252,161,33)" fg:x="2966" fg:w="2"/><text x="91.6803%" y="591.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.03%)</title><rect x="91.5228%" y="485" width="0.0308%" height="15" fill="rgb(226,146,40)" fg:x="2969" fg:w="1"/><text x="91.7728%" y="495.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="91.5536%" y="469" width="0.0308%" height="15" fill="rgb(219,47,25)" fg:x="2970" fg:w="1"/><text x="91.8036%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (2 samples, 0.06%)</title><rect x="91.5536%" y="485" width="0.0617%" height="15" fill="rgb(250,135,13)" fg:x="2970" fg:w="2"/><text x="91.8036%" y="495.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="91.5845%" y="469" width="0.0308%" height="15" fill="rgb(219,229,18)" fg:x="2971" fg:w="1"/><text x="91.8345%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (2 samples, 0.06%)</title><rect x="91.6153%" y="485" width="0.0617%" height="15" fill="rgb(217,152,27)" fg:x="2972" fg:w="2"/><text x="91.8653%" y="495.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="91.6461%" y="469" width="0.0308%" height="15" fill="rgb(225,71,47)" fg:x="2973" fg:w="1"/><text x="91.8961%" y="479.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.03%)</title><rect x="91.6461%" y="453" width="0.0308%" height="15" fill="rgb(220,139,14)" fg:x="2973" fg:w="1"/><text x="91.8961%" y="463.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="91.6769%" y="485" width="0.0308%" height="15" fill="rgb(247,54,32)" fg:x="2974" fg:w="1"/><text x="91.9269%" y="495.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.06%)</title><rect x="91.7078%" y="485" width="0.0617%" height="15" fill="rgb(252,131,39)" fg:x="2975" fg:w="2"/><text x="91.9578%" y="495.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (10 samples, 0.31%)</title><rect x="91.4920%" y="501" width="0.3083%" height="15" fill="rgb(210,108,39)" fg:x="2968" fg:w="10"/><text x="91.7420%" y="511.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="91.7694%" y="485" width="0.0308%" height="15" fill="rgb(205,23,29)" fg:x="2977" fg:w="1"/><text x="92.0194%" y="495.50"></text></g><g><title>chacha20::backends::avx2::inner (1 samples, 0.03%)</title><rect x="91.8002%" y="501" width="0.0308%" height="15" fill="rgb(246,139,46)" fg:x="2978" fg:w="1"/><text x="92.0502%" y="511.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (1 samples, 0.03%)</title><rect x="91.8002%" y="485" width="0.0308%" height="15" fill="rgb(250,81,26)" fg:x="2978" fg:w="1"/><text x="92.0502%" y="495.50"></text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;u8,N&gt;&gt;::xor_in2out (1 samples, 0.03%)</title><rect x="91.8002%" y="469" width="0.0308%" height="15" fill="rgb(214,104,7)" fg:x="2978" fg:w="1"/><text x="92.0502%" y="479.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.03%)</title><rect x="91.8002%" y="453" width="0.0308%" height="15" fill="rgb(233,189,8)" fg:x="2978" fg:w="1"/><text x="92.0502%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.03%)</title><rect x="91.8311%" y="501" width="0.0308%" height="15" fill="rgb(228,141,17)" fg:x="2979" fg:w="1"/><text x="92.0811%" y="511.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::encrypt_in_place_detached (32 samples, 0.99%)</title><rect x="90.9063%" y="693" width="0.9864%" height="15" fill="rgb(247,157,1)" fg:x="2949" fg:w="32"/><text x="91.1563%" y="703.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (32 samples, 0.99%)</title><rect x="90.9063%" y="677" width="0.9864%" height="15" fill="rgb(249,225,5)" fg:x="2949" fg:w="32"/><text x="91.1563%" y="687.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (32 samples, 0.99%)</title><rect x="90.9063%" y="661" width="0.9864%" height="15" fill="rgb(242,55,13)" fg:x="2949" fg:w="32"/><text x="91.1563%" y="671.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (32 samples, 0.99%)</title><rect x="90.9063%" y="645" width="0.9864%" height="15" fill="rgb(230,49,50)" fg:x="2949" fg:w="32"/><text x="91.1563%" y="655.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::write_keystream_block (13 samples, 0.40%)</title><rect x="91.4920%" y="629" width="0.4007%" height="15" fill="rgb(241,111,38)" fg:x="2968" fg:w="13"/><text x="91.7420%" y="639.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (13 samples, 0.40%)</title><rect x="91.4920%" y="613" width="0.4007%" height="15" fill="rgb(252,155,4)" fg:x="2968" fg:w="13"/><text x="91.7420%" y="623.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (13 samples, 0.40%)</title><rect x="91.4920%" y="597" width="0.4007%" height="15" fill="rgb(212,69,32)" fg:x="2968" fg:w="13"/><text x="91.7420%" y="607.50"></text></g><g><title>chacha20::backends::avx2::inner (13 samples, 0.40%)</title><rect x="91.4920%" y="581" width="0.4007%" height="15" fill="rgb(243,107,47)" fg:x="2968" fg:w="13"/><text x="91.7420%" y="591.50"></text></g><g><title>&lt;cipher::stream_core::WriteBlockCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (13 samples, 0.40%)</title><rect x="91.4920%" y="565" width="0.4007%" height="15" fill="rgb(247,130,12)" fg:x="2968" fg:w="13"/><text x="91.7420%" y="575.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (13 samples, 0.40%)</title><rect x="91.4920%" y="549" width="0.4007%" height="15" fill="rgb(233,74,16)" fg:x="2968" fg:w="13"/><text x="91.7420%" y="559.50"></text></g><g><title>chacha20::backends::avx2::rounds (13 samples, 0.40%)</title><rect x="91.4920%" y="533" width="0.4007%" height="15" fill="rgb(208,58,18)" fg:x="2968" fg:w="13"/><text x="91.7420%" y="543.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (13 samples, 0.40%)</title><rect x="91.4920%" y="517" width="0.4007%" height="15" fill="rgb(242,225,1)" fg:x="2968" fg:w="13"/><text x="91.7420%" y="527.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="91.8619%" y="501" width="0.0308%" height="15" fill="rgb(249,39,40)" fg:x="2980" fg:w="1"/><text x="92.1119%" y="511.50"></text></g><g><title>&lt;poly1305::Poly1305 as crypto_common::KeyInit&gt;::new (1 samples, 0.03%)</title><rect x="91.8927%" y="677" width="0.0308%" height="15" fill="rgb(207,72,44)" fg:x="2981" fg:w="1"/><text x="92.1427%" y="687.50"></text></g><g><title>poly1305::backend::autodetect::State::new (1 samples, 0.03%)</title><rect x="91.8927%" y="661" width="0.0308%" height="15" fill="rgb(215,193,12)" fg:x="2981" fg:w="1"/><text x="92.1427%" y="671.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="91.8927%" y="645" width="0.0308%" height="15" fill="rgb(248,41,39)" fg:x="2981" fg:w="1"/><text x="92.1427%" y="655.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (3 samples, 0.09%)</title><rect x="91.9236%" y="485" width="0.0925%" height="15" fill="rgb(253,85,4)" fg:x="2982" fg:w="3"/><text x="92.1736%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (2 samples, 0.06%)</title><rect x="92.0160%" y="485" width="0.0617%" height="15" fill="rgb(243,70,31)" fg:x="2985" fg:w="2"/><text x="92.2660%" y="495.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="92.0469%" y="469" width="0.0308%" height="15" fill="rgb(253,195,26)" fg:x="2986" fg:w="1"/><text x="92.2969%" y="479.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="92.0469%" y="453" width="0.0308%" height="15" fill="rgb(243,42,11)" fg:x="2986" fg:w="1"/><text x="92.2969%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.03%)</title><rect x="92.0777%" y="485" width="0.0308%" height="15" fill="rgb(239,66,17)" fg:x="2987" fg:w="1"/><text x="92.3277%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.03%)</title><rect x="92.1085%" y="485" width="0.0308%" height="15" fill="rgb(217,132,21)" fg:x="2988" fg:w="1"/><text x="92.3585%" y="495.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="92.1085%" y="469" width="0.0308%" height="15" fill="rgb(252,202,21)" fg:x="2988" fg:w="1"/><text x="92.3585%" y="479.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="92.1702%" y="469" width="0.0308%" height="15" fill="rgb(233,98,36)" fg:x="2990" fg:w="1"/><text x="92.4202%" y="479.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="92.1702%" y="453" width="0.0308%" height="15" fill="rgb(216,153,54)" fg:x="2990" fg:w="1"/><text x="92.4202%" y="463.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.03%)</title><rect x="92.1702%" y="437" width="0.0308%" height="15" fill="rgb(250,99,7)" fg:x="2990" fg:w="1"/><text x="92.4202%" y="447.50"></text></g><g><title>__do_softirq (1 samples, 0.03%)</title><rect x="92.1702%" y="421" width="0.0308%" height="15" fill="rgb(207,56,50)" fg:x="2990" fg:w="1"/><text x="92.4202%" y="431.50"></text></g><g><title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="92.1702%" y="405" width="0.0308%" height="15" fill="rgb(244,61,34)" fg:x="2990" fg:w="1"/><text x="92.4202%" y="415.50"></text></g><g><title>update_blocked_averages (1 samples, 0.03%)</title><rect x="92.1702%" y="389" width="0.0308%" height="15" fill="rgb(241,50,38)" fg:x="2990" fg:w="1"/><text x="92.4202%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (3 samples, 0.09%)</title><rect x="92.1393%" y="485" width="0.0925%" height="15" fill="rgb(212,166,30)" fg:x="2989" fg:w="3"/><text x="92.3893%" y="495.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="92.2010%" y="469" width="0.0308%" height="15" fill="rgb(249,127,32)" fg:x="2991" fg:w="1"/><text x="92.4510%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="92.2318%" y="485" width="0.0308%" height="15" fill="rgb(209,103,0)" fg:x="2992" fg:w="1"/><text x="92.4818%" y="495.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (13 samples, 0.40%)</title><rect x="91.9236%" y="501" width="0.4007%" height="15" fill="rgb(238,209,51)" fg:x="2982" fg:w="13"/><text x="92.1736%" y="511.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (2 samples, 0.06%)</title><rect x="92.2626%" y="485" width="0.0617%" height="15" fill="rgb(237,56,23)" fg:x="2993" fg:w="2"/><text x="92.5126%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="92.3243%" y="501" width="0.0308%" height="15" fill="rgb(215,153,46)" fg:x="2995" fg:w="1"/><text x="92.5743%" y="511.50"></text></g><g><title>tftp::server::helpers::write::handle_write (435 samples, 13.41%)</title><rect x="78.9766%" y="789" width="13.4094%" height="15" fill="rgb(224,49,31)" fg:x="2562" fg:w="435"/><text x="79.2266%" y="799.50">tftp::server::helper..</text></g><g><title>tftp::server::connection::Connection&lt;B,Rng&gt;::send_packet (48 samples, 1.48%)</title><rect x="90.9063%" y="773" width="1.4797%" height="15" fill="rgb(250,18,42)" fg:x="2949" fg:w="48"/><text x="91.1563%" y="783.50"></text></g><g><title>tftp::server::connection::Connection&lt;B,Rng&gt;::send_bytes (48 samples, 1.48%)</title><rect x="90.9063%" y="757" width="1.4797%" height="15" fill="rgb(215,176,39)" fg:x="2949" fg:w="48"/><text x="91.1563%" y="767.50"></text></g><g><title>tftp::encrypted_packet::EncryptedPacket::encrypt (48 samples, 1.48%)</title><rect x="90.9063%" y="741" width="1.4797%" height="15" fill="rgb(223,77,29)" fg:x="2949" fg:w="48"/><text x="91.1563%" y="751.50"></text></g><g><title>tftp::encryption::Encryptor&lt;R&gt;::encrypt (48 samples, 1.48%)</title><rect x="90.9063%" y="725" width="1.4797%" height="15" fill="rgb(234,94,52)" fg:x="2949" fg:w="48"/><text x="91.1563%" y="735.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::encrypt_in_place_detached (48 samples, 1.48%)</title><rect x="90.9063%" y="709" width="1.4797%" height="15" fill="rgb(220,154,50)" fg:x="2949" fg:w="48"/><text x="91.1563%" y="719.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (16 samples, 0.49%)</title><rect x="91.8927%" y="693" width="0.4932%" height="15" fill="rgb(212,11,10)" fg:x="2981" fg:w="16"/><text x="92.1427%" y="703.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (15 samples, 0.46%)</title><rect x="91.9236%" y="677" width="0.4624%" height="15" fill="rgb(205,166,19)" fg:x="2982" fg:w="15"/><text x="92.1736%" y="687.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (15 samples, 0.46%)</title><rect x="91.9236%" y="661" width="0.4624%" height="15" fill="rgb(244,198,16)" fg:x="2982" fg:w="15"/><text x="92.1736%" y="671.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (15 samples, 0.46%)</title><rect x="91.9236%" y="645" width="0.4624%" height="15" fill="rgb(219,69,12)" fg:x="2982" fg:w="15"/><text x="92.1736%" y="655.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::write_keystream_block (15 samples, 0.46%)</title><rect x="91.9236%" y="629" width="0.4624%" height="15" fill="rgb(245,30,7)" fg:x="2982" fg:w="15"/><text x="92.1736%" y="639.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (15 samples, 0.46%)</title><rect x="91.9236%" y="613" width="0.4624%" height="15" fill="rgb(218,221,48)" fg:x="2982" fg:w="15"/><text x="92.1736%" y="623.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (15 samples, 0.46%)</title><rect x="91.9236%" y="597" width="0.4624%" height="15" fill="rgb(216,66,15)" fg:x="2982" fg:w="15"/><text x="92.1736%" y="607.50"></text></g><g><title>chacha20::backends::avx2::inner (15 samples, 0.46%)</title><rect x="91.9236%" y="581" width="0.4624%" height="15" fill="rgb(226,122,50)" fg:x="2982" fg:w="15"/><text x="92.1736%" y="591.50"></text></g><g><title>&lt;cipher::stream_core::WriteBlockCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (15 samples, 0.46%)</title><rect x="91.9236%" y="565" width="0.4624%" height="15" fill="rgb(239,156,16)" fg:x="2982" fg:w="15"/><text x="92.1736%" y="575.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (15 samples, 0.46%)</title><rect x="91.9236%" y="549" width="0.4624%" height="15" fill="rgb(224,27,38)" fg:x="2982" fg:w="15"/><text x="92.1736%" y="559.50"></text></g><g><title>chacha20::backends::avx2::rounds (15 samples, 0.46%)</title><rect x="91.9236%" y="533" width="0.4624%" height="15" fill="rgb(224,39,27)" fg:x="2982" fg:w="15"/><text x="92.1736%" y="543.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (15 samples, 0.46%)</title><rect x="91.9236%" y="517" width="0.4624%" height="15" fill="rgb(215,92,29)" fg:x="2982" fg:w="15"/><text x="92.1736%" y="527.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="92.3551%" y="501" width="0.0308%" height="15" fill="rgb(207,159,16)" fg:x="2996" fg:w="1"/><text x="92.6051%" y="511.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (1 samples, 0.03%)</title><rect x="92.3859%" y="613" width="0.0308%" height="15" fill="rgb(238,163,47)" fg:x="2997" fg:w="1"/><text x="92.6359%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.03%)</title><rect x="92.3859%" y="597" width="0.0308%" height="15" fill="rgb(219,91,49)" fg:x="2997" fg:w="1"/><text x="92.6359%" y="607.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.03%)</title><rect x="92.4168%" y="597" width="0.0308%" height="15" fill="rgb(227,167,31)" fg:x="2998" fg:w="1"/><text x="92.6668%" y="607.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="92.4168%" y="581" width="0.0308%" height="15" fill="rgb(234,80,54)" fg:x="2998" fg:w="1"/><text x="92.6668%" y="591.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="92.4168%" y="565" width="0.0308%" height="15" fill="rgb(212,114,2)" fg:x="2998" fg:w="1"/><text x="92.6668%" y="575.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="92.4168%" y="549" width="0.0308%" height="15" fill="rgb(234,50,24)" fg:x="2998" fg:w="1"/><text x="92.6668%" y="559.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="92.4476%" y="581" width="0.0308%" height="15" fill="rgb(221,68,8)" fg:x="2999" fg:w="1"/><text x="92.6976%" y="591.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (2 samples, 0.06%)</title><rect x="92.4476%" y="597" width="0.0617%" height="15" fill="rgb(254,180,31)" fg:x="2999" fg:w="2"/><text x="92.6976%" y="607.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="92.4784%" y="581" width="0.0308%" height="15" fill="rgb(247,130,50)" fg:x="3000" fg:w="1"/><text x="92.7284%" y="591.50"></text></g><g><title>poly1305::backend::avx2::helpers::adc (4 samples, 0.12%)</title><rect x="92.4168%" y="613" width="0.1233%" height="15" fill="rgb(211,109,4)" fg:x="2998" fg:w="4"/><text x="92.6668%" y="623.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="92.5092%" y="597" width="0.0308%" height="15" fill="rgb(238,50,21)" fg:x="3001" fg:w="1"/><text x="92.7592%" y="607.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="92.5092%" y="581" width="0.0308%" height="15" fill="rgb(225,57,45)" fg:x="3001" fg:w="1"/><text x="92.7592%" y="591.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="92.5092%" y="565" width="0.0308%" height="15" fill="rgb(209,196,50)" fg:x="3001" fg:w="1"/><text x="92.7592%" y="575.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srlv_epi64 (1 samples, 0.03%)</title><rect x="92.5401%" y="597" width="0.0308%" height="15" fill="rgb(242,140,13)" fg:x="3002" fg:w="1"/><text x="92.7901%" y="607.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="92.5401%" y="581" width="0.0308%" height="15" fill="rgb(217,111,7)" fg:x="3002" fg:w="1"/><text x="92.7901%" y="591.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="92.5401%" y="565" width="0.0308%" height="15" fill="rgb(253,193,51)" fg:x="3002" fg:w="1"/><text x="92.7901%" y="575.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="92.5401%" y="549" width="0.0308%" height="15" fill="rgb(252,70,29)" fg:x="3002" fg:w="1"/><text x="92.7901%" y="559.50"></text></g><g><title>tftp::server::connection::Connection&lt;B,Rng&gt;::decrypt_packet (7 samples, 0.22%)</title><rect x="92.3859%" y="757" width="0.2158%" height="15" fill="rgb(232,127,12)" fg:x="2997" fg:w="7"/><text x="92.6359%" y="767.50"></text></g><g><title>tftp::encrypted_packet::EncryptedPacket::decrypt (7 samples, 0.22%)</title><rect x="92.3859%" y="741" width="0.2158%" height="15" fill="rgb(211,180,21)" fg:x="2997" fg:w="7"/><text x="92.6359%" y="751.50"></text></g><g><title>tftp::encryption::Encryptor&lt;R&gt;::decrypt (7 samples, 0.22%)</title><rect x="92.3859%" y="725" width="0.2158%" height="15" fill="rgb(229,72,13)" fg:x="2997" fg:w="7"/><text x="92.6359%" y="735.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (7 samples, 0.22%)</title><rect x="92.3859%" y="709" width="0.2158%" height="15" fill="rgb(240,211,49)" fg:x="2997" fg:w="7"/><text x="92.6359%" y="719.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (7 samples, 0.22%)</title><rect x="92.3859%" y="693" width="0.2158%" height="15" fill="rgb(219,149,40)" fg:x="2997" fg:w="7"/><text x="92.6359%" y="703.50"></text></g><g><title>&lt;poly1305::Poly1305 as crypto_common::KeyInit&gt;::new (7 samples, 0.22%)</title><rect x="92.3859%" y="677" width="0.2158%" height="15" fill="rgb(210,127,46)" fg:x="2997" fg:w="7"/><text x="92.6359%" y="687.50"></text></g><g><title>poly1305::backend::autodetect::State::new (7 samples, 0.22%)</title><rect x="92.3859%" y="661" width="0.2158%" height="15" fill="rgb(220,106,7)" fg:x="2997" fg:w="7"/><text x="92.6359%" y="671.50"></text></g><g><title>poly1305::backend::avx2::State::new (7 samples, 0.22%)</title><rect x="92.3859%" y="645" width="0.2158%" height="15" fill="rgb(249,31,22)" fg:x="2997" fg:w="7"/><text x="92.6359%" y="655.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced130::reduce (7 samples, 0.22%)</title><rect x="92.3859%" y="629" width="0.2158%" height="15" fill="rgb(253,1,49)" fg:x="2997" fg:w="7"/><text x="92.6359%" y="639.50"></text></g><g><title>poly1305::backend::avx2::helpers::red (2 samples, 0.06%)</title><rect x="92.5401%" y="613" width="0.0617%" height="15" fill="rgb(227,144,33)" fg:x="3002" fg:w="2"/><text x="92.7901%" y="623.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="92.5709%" y="597" width="0.0308%" height="15" fill="rgb(249,163,44)" fg:x="3003" fg:w="1"/><text x="92.8209%" y="607.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.03%)</title><rect x="92.6017%" y="469" width="0.0308%" height="15" fill="rgb(234,15,39)" fg:x="3004" fg:w="1"/><text x="92.8517%" y="479.50"></text></g><g><title>[unknown] (2,593 samples, 79.93%)</title><rect x="12.7312%" y="805" width="79.9322%" height="15" fill="rgb(207,66,16)" fg:x="413" fg:w="2593"/><text x="12.9812%" y="815.50">[unknown]</text></g><g><title>tftp::server::multi_thread::spawn_writer::{{closure}} (9 samples, 0.28%)</title><rect x="92.3859%" y="789" width="0.2774%" height="15" fill="rgb(233,112,24)" fg:x="2997" fg:w="9"/><text x="92.6359%" y="799.50"></text></g><g><title>tftp::server::helpers::write::handle_write (9 samples, 0.28%)</title><rect x="92.3859%" y="773" width="0.2774%" height="15" fill="rgb(230,90,22)" fg:x="2997" fg:w="9"/><text x="92.6359%" y="783.50"></text></g><g><title>tftp::server::connection::Connection&lt;B,Rng&gt;::send_packet (2 samples, 0.06%)</title><rect x="92.6017%" y="757" width="0.0617%" height="15" fill="rgb(229,61,13)" fg:x="3004" fg:w="2"/><text x="92.8517%" y="767.50"></text></g><g><title>tftp::server::connection::Connection&lt;B,Rng&gt;::send_bytes (2 samples, 0.06%)</title><rect x="92.6017%" y="741" width="0.0617%" height="15" fill="rgb(225,57,24)" fg:x="3004" fg:w="2"/><text x="92.8517%" y="751.50"></text></g><g><title>tftp::encrypted_packet::EncryptedPacket::encrypt (2 samples, 0.06%)</title><rect x="92.6017%" y="725" width="0.0617%" height="15" fill="rgb(208,169,48)" fg:x="3004" fg:w="2"/><text x="92.8517%" y="735.50"></text></g><g><title>tftp::encryption::Encryptor&lt;R&gt;::encrypt (2 samples, 0.06%)</title><rect x="92.6017%" y="709" width="0.0617%" height="15" fill="rgb(244,218,51)" fg:x="3004" fg:w="2"/><text x="92.8517%" y="719.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::encrypt_in_place_detached (2 samples, 0.06%)</title><rect x="92.6017%" y="693" width="0.0617%" height="15" fill="rgb(214,148,10)" fg:x="3004" fg:w="2"/><text x="92.8517%" y="703.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (2 samples, 0.06%)</title><rect x="92.6017%" y="677" width="0.0617%" height="15" fill="rgb(225,174,27)" fg:x="3004" fg:w="2"/><text x="92.8517%" y="687.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (2 samples, 0.06%)</title><rect x="92.6017%" y="661" width="0.0617%" height="15" fill="rgb(230,96,26)" fg:x="3004" fg:w="2"/><text x="92.8517%" y="671.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (2 samples, 0.06%)</title><rect x="92.6017%" y="645" width="0.0617%" height="15" fill="rgb(232,10,30)" fg:x="3004" fg:w="2"/><text x="92.8517%" y="655.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (2 samples, 0.06%)</title><rect x="92.6017%" y="629" width="0.0617%" height="15" fill="rgb(222,8,50)" fg:x="3004" fg:w="2"/><text x="92.8517%" y="639.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::write_keystream_block (2 samples, 0.06%)</title><rect x="92.6017%" y="613" width="0.0617%" height="15" fill="rgb(213,81,27)" fg:x="3004" fg:w="2"/><text x="92.8517%" y="623.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (2 samples, 0.06%)</title><rect x="92.6017%" y="597" width="0.0617%" height="15" fill="rgb(245,50,10)" fg:x="3004" fg:w="2"/><text x="92.8517%" y="607.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (2 samples, 0.06%)</title><rect x="92.6017%" y="581" width="0.0617%" height="15" fill="rgb(216,100,18)" fg:x="3004" fg:w="2"/><text x="92.8517%" y="591.50"></text></g><g><title>chacha20::backends::avx2::inner (2 samples, 0.06%)</title><rect x="92.6017%" y="565" width="0.0617%" height="15" fill="rgb(236,147,54)" fg:x="3004" fg:w="2"/><text x="92.8517%" y="575.50"></text></g><g><title>&lt;cipher::stream_core::WriteBlockCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (2 samples, 0.06%)</title><rect x="92.6017%" y="549" width="0.0617%" height="15" fill="rgb(205,143,26)" fg:x="3004" fg:w="2"/><text x="92.8517%" y="559.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (2 samples, 0.06%)</title><rect x="92.6017%" y="533" width="0.0617%" height="15" fill="rgb(236,26,9)" fg:x="3004" fg:w="2"/><text x="92.8517%" y="543.50"></text></g><g><title>chacha20::backends::avx2::rounds (2 samples, 0.06%)</title><rect x="92.6017%" y="517" width="0.0617%" height="15" fill="rgb(221,165,53)" fg:x="3004" fg:w="2"/><text x="92.8517%" y="527.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (2 samples, 0.06%)</title><rect x="92.6017%" y="501" width="0.0617%" height="15" fill="rgb(214,110,17)" fg:x="3004" fg:w="2"/><text x="92.8517%" y="511.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (2 samples, 0.06%)</title><rect x="92.6017%" y="485" width="0.0617%" height="15" fill="rgb(237,197,12)" fg:x="3004" fg:w="2"/><text x="92.8517%" y="495.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="92.6326%" y="469" width="0.0308%" height="15" fill="rgb(205,84,17)" fg:x="3005" fg:w="1"/><text x="92.8826%" y="479.50"></text></g><g><title>__do_global_dtors_aux_fini_array_entry (1 samples, 0.03%)</title><rect x="92.6634%" y="805" width="0.0308%" height="15" fill="rgb(237,18,45)" fg:x="3006" fg:w="1"/><text x="92.9134%" y="815.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::packed_simd::u64x4 as &lt;curve25519_dalek::backend::vector::packed_simd::u64x4 as core::ops::arith::Add&gt;::add::__Impl_add__&gt;::_impl_add (1 samples, 0.03%)</title><rect x="92.6634%" y="789" width="0.0308%" height="15" fill="rgb(221,87,14)" fg:x="3006" fg:w="1"/><text x="92.9134%" y="799.50"></text></g><g><title>_start (1 samples, 0.03%)</title><rect x="92.6942%" y="805" width="0.0308%" height="15" fill="rgb(238,186,15)" fg:x="3007" fg:w="1"/><text x="92.9442%" y="815.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="92.6942%" y="789" width="0.0308%" height="15" fill="rgb(208,115,11)" fg:x="3007" fg:w="1"/><text x="92.9442%" y="799.50"></text></g><g><title>do_syscall_64 (1 samples, 0.03%)</title><rect x="92.6942%" y="773" width="0.0308%" height="15" fill="rgb(254,175,0)" fg:x="3007" fg:w="1"/><text x="92.9442%" y="783.50"></text></g><g><title>syscall_exit_to_user_mode (1 samples, 0.03%)</title><rect x="92.6942%" y="757" width="0.0308%" height="15" fill="rgb(227,24,42)" fg:x="3007" fg:w="1"/><text x="92.9442%" y="767.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.03%)</title><rect x="92.6942%" y="741" width="0.0308%" height="15" fill="rgb(223,211,37)" fg:x="3007" fg:w="1"/><text x="92.9442%" y="751.50"></text></g><g><title>task_work_run (1 samples, 0.03%)</title><rect x="92.6942%" y="725" width="0.0308%" height="15" fill="rgb(235,49,27)" fg:x="3007" fg:w="1"/><text x="92.9442%" y="735.50"></text></g><g><title>__fput (1 samples, 0.03%)</title><rect x="92.6942%" y="709" width="0.0308%" height="15" fill="rgb(254,97,51)" fg:x="3007" fg:w="1"/><text x="92.9442%" y="719.50"></text></g><g><title>pipe_release (1 samples, 0.03%)</title><rect x="92.6942%" y="693" width="0.0308%" height="15" fill="rgb(249,51,40)" fg:x="3007" fg:w="1"/><text x="92.9442%" y="703.50"></text></g><g><title>free_pipe_info (1 samples, 0.03%)</title><rect x="92.6942%" y="677" width="0.0308%" height="15" fill="rgb(210,128,45)" fg:x="3007" fg:w="1"/><text x="92.9442%" y="687.50"></text></g><g><title>__cond_resched (1 samples, 0.03%)</title><rect x="92.7250%" y="757" width="0.0308%" height="15" fill="rgb(224,137,50)" fg:x="3008" fg:w="1"/><text x="92.9750%" y="767.50"></text></g><g><title>asm_exc_page_fault (2 samples, 0.06%)</title><rect x="92.7250%" y="805" width="0.0617%" height="15" fill="rgb(242,15,9)" fg:x="3008" fg:w="2"/><text x="92.9750%" y="815.50"></text></g><g><title>exc_page_fault (2 samples, 0.06%)</title><rect x="92.7250%" y="789" width="0.0617%" height="15" fill="rgb(233,187,41)" fg:x="3008" fg:w="2"/><text x="92.9750%" y="799.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.06%)</title><rect x="92.7250%" y="773" width="0.0617%" height="15" fill="rgb(227,2,29)" fg:x="3008" fg:w="2"/><text x="92.9750%" y="783.50"></text></g><g><title>handle_mm_fault (1 samples, 0.03%)</title><rect x="92.7559%" y="757" width="0.0308%" height="15" fill="rgb(222,70,3)" fg:x="3009" fg:w="1"/><text x="93.0059%" y="767.50"></text></g><g><title>count_memcg_events.constprop.0 (1 samples, 0.03%)</title><rect x="92.7559%" y="741" width="0.0308%" height="15" fill="rgb(213,11,42)" fg:x="3009" fg:w="1"/><text x="93.0059%" y="751.50"></text></g><g><title>__count_memcg_events (1 samples, 0.03%)</title><rect x="92.7559%" y="725" width="0.0308%" height="15" fill="rgb(225,150,9)" fg:x="3009" fg:w="1"/><text x="93.0059%" y="735.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.03%)</title><rect x="92.7559%" y="709" width="0.0308%" height="15" fill="rgb(230,162,45)" fg:x="3009" fg:w="1"/><text x="93.0059%" y="719.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="92.7867%" y="789" width="0.0308%" height="15" fill="rgb(222,14,52)" fg:x="3010" fg:w="1"/><text x="93.0367%" y="799.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (2 samples, 0.06%)</title><rect x="92.7867%" y="805" width="0.0617%" height="15" fill="rgb(254,198,14)" fg:x="3010" fg:w="2"/><text x="93.0367%" y="815.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.03%)</title><rect x="92.8175%" y="789" width="0.0308%" height="15" fill="rgb(220,217,30)" fg:x="3011" fg:w="1"/><text x="93.0675%" y="799.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.03%)</title><rect x="92.8483%" y="485" width="0.0308%" height="15" fill="rgb(215,146,41)" fg:x="3012" fg:w="1"/><text x="93.0983%" y="495.50"></text></g><g><title>chacha20::backends::avx2::inner (2 samples, 0.06%)</title><rect x="92.8483%" y="805" width="0.0617%" height="15" fill="rgb(217,27,36)" fg:x="3012" fg:w="2"/><text x="93.0983%" y="815.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (2 samples, 0.06%)</title><rect x="92.8483%" y="789" width="0.0617%" height="15" fill="rgb(219,218,39)" fg:x="3012" fg:w="2"/><text x="93.0983%" y="799.50"></text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;generic_array::GenericArray&lt;u8,N&gt;,M&gt;&gt;::xor_in2out (2 samples, 0.06%)</title><rect x="92.8483%" y="773" width="0.0617%" height="15" fill="rgb(219,4,42)" fg:x="3012" fg:w="2"/><text x="93.0983%" y="783.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (2 samples, 0.06%)</title><rect x="92.8483%" y="757" width="0.0617%" height="15" fill="rgb(249,119,36)" fg:x="3012" fg:w="2"/><text x="93.0983%" y="767.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (2 samples, 0.06%)</title><rect x="92.8483%" y="741" width="0.0617%" height="15" fill="rgb(209,23,33)" fg:x="3012" fg:w="2"/><text x="93.0983%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.06%)</title><rect x="92.8483%" y="725" width="0.0617%" height="15" fill="rgb(211,10,0)" fg:x="3012" fg:w="2"/><text x="93.0983%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.06%)</title><rect x="92.8483%" y="709" width="0.0617%" height="15" fill="rgb(208,99,37)" fg:x="3012" fg:w="2"/><text x="93.0983%" y="719.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.06%)</title><rect x="92.8483%" y="693" width="0.0617%" height="15" fill="rgb(213,132,31)" fg:x="3012" fg:w="2"/><text x="93.0983%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (2 samples, 0.06%)</title><rect x="92.8483%" y="677" width="0.0617%" height="15" fill="rgb(243,129,40)" fg:x="3012" fg:w="2"/><text x="93.0983%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.06%)</title><rect x="92.8483%" y="661" width="0.0617%" height="15" fill="rgb(210,66,33)" fg:x="3012" fg:w="2"/><text x="93.0983%" y="671.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (2 samples, 0.06%)</title><rect x="92.8483%" y="645" width="0.0617%" height="15" fill="rgb(209,189,4)" fg:x="3012" fg:w="2"/><text x="93.0983%" y="655.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (2 samples, 0.06%)</title><rect x="92.8483%" y="629" width="0.0617%" height="15" fill="rgb(214,107,37)" fg:x="3012" fg:w="2"/><text x="93.0983%" y="639.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (2 samples, 0.06%)</title><rect x="92.8483%" y="613" width="0.0617%" height="15" fill="rgb(245,88,54)" fg:x="3012" fg:w="2"/><text x="93.0983%" y="623.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (2 samples, 0.06%)</title><rect x="92.8483%" y="597" width="0.0617%" height="15" fill="rgb(205,146,20)" fg:x="3012" fg:w="2"/><text x="93.0983%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.06%)</title><rect x="92.8483%" y="581" width="0.0617%" height="15" fill="rgb(220,161,25)" fg:x="3012" fg:w="2"/><text x="93.0983%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.06%)</title><rect x="92.8483%" y="565" width="0.0617%" height="15" fill="rgb(215,152,15)" fg:x="3012" fg:w="2"/><text x="93.0983%" y="575.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.06%)</title><rect x="92.8483%" y="549" width="0.0617%" height="15" fill="rgb(233,192,44)" fg:x="3012" fg:w="2"/><text x="93.0983%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (2 samples, 0.06%)</title><rect x="92.8483%" y="533" width="0.0617%" height="15" fill="rgb(240,170,46)" fg:x="3012" fg:w="2"/><text x="93.0983%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.06%)</title><rect x="92.8483%" y="517" width="0.0617%" height="15" fill="rgb(207,104,33)" fg:x="3012" fg:w="2"/><text x="93.0983%" y="527.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (2 samples, 0.06%)</title><rect x="92.8483%" y="501" width="0.0617%" height="15" fill="rgb(219,21,39)" fg:x="3012" fg:w="2"/><text x="93.0983%" y="511.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="92.8792%" y="485" width="0.0308%" height="15" fill="rgb(214,133,29)" fg:x="3013" fg:w="1"/><text x="93.1292%" y="495.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.03%)</title><rect x="93.0333%" y="517" width="0.0308%" height="15" fill="rgb(226,93,6)" fg:x="3018" fg:w="1"/><text x="93.2833%" y="527.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.03%)</title><rect x="93.0333%" y="501" width="0.0308%" height="15" fill="rgb(252,222,34)" fg:x="3018" fg:w="1"/><text x="93.2833%" y="511.50"></text></g><g><title>tftp::buffer::resize_buffer (4 samples, 0.12%)</title><rect x="92.9716%" y="565" width="0.1233%" height="15" fill="rgb(252,92,48)" fg:x="3016" fg:w="4"/><text x="93.2216%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (3 samples, 0.09%)</title><rect x="93.0025%" y="549" width="0.0925%" height="15" fill="rgb(245,223,24)" fg:x="3017" fg:w="3"/><text x="93.2525%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (3 samples, 0.09%)</title><rect x="93.0025%" y="533" width="0.0925%" height="15" fill="rgb(205,176,3)" fg:x="3017" fg:w="3"/><text x="93.2525%" y="543.50"></text></g><g><title>core::ptr::write (1 samples, 0.03%)</title><rect x="93.0641%" y="517" width="0.0308%" height="15" fill="rgb(235,151,15)" fg:x="3019" fg:w="1"/><text x="93.3141%" y="527.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.03%)</title><rect x="93.1258%" y="533" width="0.0308%" height="15" fill="rgb(237,209,11)" fg:x="3021" fg:w="1"/><text x="93.3758%" y="543.50"></text></g><g><title>rustix::backend::arch::asm::syscall4_readonly (1 samples, 0.03%)</title><rect x="93.1566%" y="437" width="0.0308%" height="15" fill="rgb(243,227,24)" fg:x="3022" fg:w="1"/><text x="93.4066%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (2 samples, 0.06%)</title><rect x="93.1566%" y="485" width="0.0617%" height="15" fill="rgb(239,193,16)" fg:x="3022" fg:w="2"/><text x="93.4066%" y="495.50"></text></g><g><title>&lt;tracing::span::Entered as core::ops::drop::Drop&gt;::drop (2 samples, 0.06%)</title><rect x="93.1566%" y="469" width="0.0617%" height="15" fill="rgb(231,27,9)" fg:x="3022" fg:w="2"/><text x="93.4066%" y="479.50"></text></g><g><title>tracing::span::Span::do_exit (2 samples, 0.06%)</title><rect x="93.1566%" y="453" width="0.0617%" height="15" fill="rgb(219,169,10)" fg:x="3022" fg:w="2"/><text x="93.4066%" y="463.50"></text></g><g><title>rustix::backend::conv::pass_usize (1 samples, 0.03%)</title><rect x="93.1874%" y="437" width="0.0308%" height="15" fill="rgb(244,229,43)" fg:x="3023" fg:w="1"/><text x="93.4374%" y="447.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.03%)</title><rect x="93.2182%" y="453" width="0.0308%" height="15" fill="rgb(254,38,20)" fg:x="3024" fg:w="1"/><text x="93.4682%" y="463.50"></text></g><g><title>rustix::backend::conv::&lt;impl core::convert::From&lt;std::os::fd::owned::BorrowedFd&gt; for rustix::backend::reg::ArgReg&lt;Num&gt;&gt;::from (1 samples, 0.03%)</title><rect x="93.2182%" y="437" width="0.0308%" height="15" fill="rgb(250,47,30)" fg:x="3024" fg:w="1"/><text x="93.4682%" y="447.50"></text></g><g><title>rustix::backend::conv::raw_fd (1 samples, 0.03%)</title><rect x="93.2182%" y="421" width="0.0308%" height="15" fill="rgb(224,124,36)" fg:x="3024" fg:w="1"/><text x="93.4682%" y="431.50"></text></g><g><title>core::cmp::PartialOrd::le (1 samples, 0.03%)</title><rect x="93.2182%" y="405" width="0.0308%" height="15" fill="rgb(246,68,51)" fg:x="3024" fg:w="1"/><text x="93.4682%" y="415.50"></text></g><g><title>polling::Poller::modify (4 samples, 0.12%)</title><rect x="93.1566%" y="533" width="0.1233%" height="15" fill="rgb(253,43,49)" fg:x="3022" fg:w="4"/><text x="93.4066%" y="543.50"></text></g><g><title>polling::Poller::modify_with_mode (4 samples, 0.12%)</title><rect x="93.1566%" y="517" width="0.1233%" height="15" fill="rgb(219,54,36)" fg:x="3022" fg:w="4"/><text x="93.4066%" y="527.50"></text></g><g><title>polling::epoll::Poller::modify (4 samples, 0.12%)</title><rect x="93.1566%" y="501" width="0.1233%" height="15" fill="rgb(227,133,34)" fg:x="3022" fg:w="4"/><text x="93.4066%" y="511.50"></text></g><g><title>rustix::backend::event::epoll::modify (2 samples, 0.06%)</title><rect x="93.2182%" y="485" width="0.0617%" height="15" fill="rgb(247,227,15)" fg:x="3024" fg:w="2"/><text x="93.4682%" y="495.50"></text></g><g><title>rustix::backend::event::syscalls::epoll_mod (2 samples, 0.06%)</title><rect x="93.2182%" y="469" width="0.0617%" height="15" fill="rgb(229,96,14)" fg:x="3024" fg:w="2"/><text x="93.4682%" y="479.50"></text></g><g><title>rustix::backend::arch::asm::syscall4_readonly (1 samples, 0.03%)</title><rect x="93.2491%" y="453" width="0.0308%" height="15" fill="rgb(220,79,17)" fg:x="3025" fg:w="1"/><text x="93.4991%" y="463.50"></text></g><g><title>rustix::backend::reg::raw_arg (1 samples, 0.03%)</title><rect x="93.2491%" y="437" width="0.0308%" height="15" fill="rgb(205,131,53)" fg:x="3025" fg:w="1"/><text x="93.4991%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.03%)</title><rect x="93.3107%" y="517" width="0.0308%" height="15" fill="rgb(209,50,29)" fg:x="3027" fg:w="1"/><text x="93.5607%" y="527.50"></text></g><g><title>polling::Poller::wait::{{closure}} (1 samples, 0.03%)</title><rect x="93.3107%" y="501" width="0.0308%" height="15" fill="rgb(245,86,46)" fg:x="3027" fg:w="1"/><text x="93.5607%" y="511.50"></text></g><g><title>std::sys::unix::time::Timespec::now (1 samples, 0.03%)</title><rect x="93.3107%" y="485" width="0.0308%" height="15" fill="rgb(235,66,46)" fg:x="3027" fg:w="1"/><text x="93.5607%" y="495.50"></text></g><g><title>__GI___clock_gettime (1 samples, 0.03%)</title><rect x="93.3107%" y="469" width="0.0308%" height="15" fill="rgb(232,148,31)" fg:x="3027" fg:w="1"/><text x="93.5607%" y="479.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.03%)</title><rect x="93.3107%" y="453" width="0.0308%" height="15" fill="rgb(217,149,8)" fg:x="3027" fg:w="1"/><text x="93.5607%" y="463.50"></text></g><g><title>[[vdso]] (1 samples, 0.03%)</title><rect x="93.3107%" y="437" width="0.0308%" height="15" fill="rgb(209,183,11)" fg:x="3027" fg:w="1"/><text x="93.5607%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (1 samples, 0.03%)</title><rect x="93.3416%" y="501" width="0.0308%" height="15" fill="rgb(208,55,20)" fg:x="3028" fg:w="1"/><text x="93.5916%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.03%)</title><rect x="93.3416%" y="485" width="0.0308%" height="15" fill="rgb(218,39,14)" fg:x="3028" fg:w="1"/><text x="93.5916%" y="495.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.03%)</title><rect x="93.3416%" y="469" width="0.0308%" height="15" fill="rgb(216,169,33)" fg:x="3028" fg:w="1"/><text x="93.5916%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="93.3416%" y="453" width="0.0308%" height="15" fill="rgb(233,80,24)" fg:x="3028" fg:w="1"/><text x="93.5916%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::map (1 samples, 0.03%)</title><rect x="93.3724%" y="469" width="0.0308%" height="15" fill="rgb(213,179,31)" fg:x="3029" fg:w="1"/><text x="93.6224%" y="479.50"></text></g><g><title>core::iter::adapters::map::Map&lt;I,F&gt;::new (1 samples, 0.03%)</title><rect x="93.3724%" y="453" width="0.0308%" height="15" fill="rgb(209,19,5)" fg:x="3029" fg:w="1"/><text x="93.6224%" y="463.50"></text></g><g><title>polling::Events::len (3 samples, 0.09%)</title><rect x="93.3416%" y="517" width="0.0925%" height="15" fill="rgb(219,18,35)" fg:x="3028" fg:w="3"/><text x="93.5916%" y="527.50"></text></g><g><title>polling::Events::iter (2 samples, 0.06%)</title><rect x="93.3724%" y="501" width="0.0617%" height="15" fill="rgb(209,169,16)" fg:x="3029" fg:w="2"/><text x="93.6224%" y="511.50"></text></g><g><title>polling::epoll::Events::iter (2 samples, 0.06%)</title><rect x="93.3724%" y="485" width="0.0617%" height="15" fill="rgb(245,90,51)" fg:x="3029" fg:w="2"/><text x="93.6224%" y="495.50"></text></g><g><title>rustix::backend::event::epoll::EventVec::iter (1 samples, 0.03%)</title><rect x="93.4032%" y="469" width="0.0308%" height="15" fill="rgb(220,99,45)" fg:x="3030" fg:w="1"/><text x="93.6532%" y="479.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.03%)</title><rect x="93.4032%" y="453" width="0.0308%" height="15" fill="rgb(249,89,25)" fg:x="3030" fg:w="1"/><text x="93.6532%" y="463.50"></text></g><g><title>polling::Event::readable (2 samples, 0.06%)</title><rect x="93.4340%" y="501" width="0.0617%" height="15" fill="rgb(239,193,0)" fg:x="3031" fg:w="2"/><text x="93.6840%" y="511.50"></text></g><g><title>polling::Event::new (2 samples, 0.06%)</title><rect x="93.4340%" y="485" width="0.0617%" height="15" fill="rgb(231,126,1)" fg:x="3031" fg:w="2"/><text x="93.6840%" y="495.50"></text></g><g><title>polling::epoll::EventExtra::empty (2 samples, 0.06%)</title><rect x="93.4340%" y="469" width="0.0617%" height="15" fill="rgb(243,166,3)" fg:x="3031" fg:w="2"/><text x="93.6840%" y="479.50"></text></g><g><title>rustix::backend::event::epoll::_::&lt;impl rustix::backend::event::epoll::EventFlags&gt;::empty (2 samples, 0.06%)</title><rect x="93.4340%" y="453" width="0.0617%" height="15" fill="rgb(223,22,34)" fg:x="3031" fg:w="2"/><text x="93.6840%" y="463.50"></text></g><g><title>rustix::backend::event::epoll::_::InternalBitFlags::empty (1 samples, 0.03%)</title><rect x="93.4649%" y="437" width="0.0308%" height="15" fill="rgb(251,52,51)" fg:x="3032" fg:w="1"/><text x="93.7149%" y="447.50"></text></g><g><title>&lt;rustix::backend::reg::ArgReg&lt;Num&gt; as rustix::backend::reg::ToAsm&gt;::to_asm (3 samples, 0.09%)</title><rect x="93.4957%" y="437" width="0.0925%" height="15" fill="rgb(221,165,28)" fg:x="3033" fg:w="3"/><text x="93.7457%" y="447.50"></text></g><g><title>polling::epoll::Notifier::clear (4 samples, 0.12%)</title><rect x="93.4957%" y="501" width="0.1233%" height="15" fill="rgb(218,121,47)" fg:x="3033" fg:w="4"/><text x="93.7457%" y="511.50"></text></g><g><title>rustix::io::read_write::read (4 samples, 0.12%)</title><rect x="93.4957%" y="485" width="0.1233%" height="15" fill="rgb(209,120,9)" fg:x="3033" fg:w="4"/><text x="93.7457%" y="495.50"></text></g><g><title>rustix::backend::io::syscalls::read (4 samples, 0.12%)</title><rect x="93.4957%" y="469" width="0.1233%" height="15" fill="rgb(236,68,12)" fg:x="3033" fg:w="4"/><text x="93.7457%" y="479.50"></text></g><g><title>rustix::backend::arch::asm::syscall3 (4 samples, 0.12%)</title><rect x="93.4957%" y="453" width="0.1233%" height="15" fill="rgb(225,194,26)" fg:x="3033" fg:w="4"/><text x="93.7457%" y="463.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="93.5882%" y="437" width="0.0308%" height="15" fill="rgb(231,84,39)" fg:x="3036" fg:w="1"/><text x="93.8382%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (1 samples, 0.03%)</title><rect x="93.6190%" y="485" width="0.0308%" height="15" fill="rgb(210,11,45)" fg:x="3037" fg:w="1"/><text x="93.8690%" y="495.50"></text></g><g><title>rustix::backend::event::epoll::_::&lt;impl core::ops::bit::BitOr for rustix::backend::event::epoll::EventFlags&gt;::bitor (1 samples, 0.03%)</title><rect x="93.6498%" y="485" width="0.0308%" height="15" fill="rgb(224,54,52)" fg:x="3038" fg:w="1"/><text x="93.8998%" y="495.50"></text></g><g><title>rustix::backend::event::epoll::_::&lt;impl rustix::backend::event::epoll::EventFlags&gt;::union (1 samples, 0.03%)</title><rect x="93.6498%" y="469" width="0.0308%" height="15" fill="rgb(238,102,14)" fg:x="3038" fg:w="1"/><text x="93.8998%" y="479.50"></text></g><g><title>rustix::backend::event::epoll::_::InternalBitFlags::union (1 samples, 0.03%)</title><rect x="93.6498%" y="453" width="0.0308%" height="15" fill="rgb(243,160,52)" fg:x="3038" fg:w="1"/><text x="93.8998%" y="463.50"></text></g><g><title>polling::epoll::Poller::modify (3 samples, 0.09%)</title><rect x="93.6190%" y="501" width="0.0925%" height="15" fill="rgb(216,114,19)" fg:x="3037" fg:w="3"/><text x="93.8690%" y="511.50"></text></g><g><title>rustix::backend::event::epoll::modify (1 samples, 0.03%)</title><rect x="93.6806%" y="485" width="0.0308%" height="15" fill="rgb(244,166,37)" fg:x="3039" fg:w="1"/><text x="93.9306%" y="495.50"></text></g><g><title>rustix::backend::event::syscalls::epoll_mod (1 samples, 0.03%)</title><rect x="93.6806%" y="469" width="0.0308%" height="15" fill="rgb(246,29,44)" fg:x="3039" fg:w="1"/><text x="93.9306%" y="479.50"></text></g><g><title>rustix::backend::arch::asm::syscall4_readonly (1 samples, 0.03%)</title><rect x="93.6806%" y="453" width="0.0308%" height="15" fill="rgb(215,56,53)" fg:x="3039" fg:w="1"/><text x="93.9306%" y="463.50"></text></g><g><title>&lt;rustix::backend::reg::ArgReg&lt;Num&gt; as rustix::backend::reg::ToAsm&gt;::to_asm (1 samples, 0.03%)</title><rect x="93.6806%" y="437" width="0.0308%" height="15" fill="rgb(217,60,2)" fg:x="3039" fg:w="1"/><text x="93.9306%" y="447.50"></text></g><g><title>ep_item_poll.isra.0 (1 samples, 0.03%)</title><rect x="93.7115%" y="389" width="0.0308%" height="15" fill="rgb(207,26,24)" fg:x="3040" fg:w="1"/><text x="93.9615%" y="399.50"></text></g><g><title>sock_poll (1 samples, 0.03%)</title><rect x="93.7115%" y="373" width="0.0308%" height="15" fill="rgb(252,210,15)" fg:x="3040" fg:w="1"/><text x="93.9615%" y="383.50"></text></g><g><title>__perf_event_task_sched_out (1 samples, 0.03%)</title><rect x="93.7423%" y="341" width="0.0308%" height="15" fill="rgb(253,209,26)" fg:x="3041" fg:w="1"/><text x="93.9923%" y="351.50"></text></g><g><title>perf_ctx_sched_task_cb (1 samples, 0.03%)</title><rect x="93.7423%" y="325" width="0.0308%" height="15" fill="rgb(238,170,14)" fg:x="3041" fg:w="1"/><text x="93.9923%" y="335.50"></text></g><g><title>dequeue_task_fair (1 samples, 0.03%)</title><rect x="93.7731%" y="341" width="0.0308%" height="15" fill="rgb(216,178,15)" fg:x="3042" fg:w="1"/><text x="94.0231%" y="351.50"></text></g><g><title>dequeue_entity (1 samples, 0.03%)</title><rect x="93.7731%" y="325" width="0.0308%" height="15" fill="rgb(250,197,2)" fg:x="3042" fg:w="1"/><text x="94.0231%" y="335.50"></text></g><g><title>pick_next_task_idle (1 samples, 0.03%)</title><rect x="93.8039%" y="341" width="0.0308%" height="15" fill="rgb(212,70,42)" fg:x="3043" fg:w="1"/><text x="94.0539%" y="351.50"></text></g><g><title>__update_idle_core (1 samples, 0.03%)</title><rect x="93.8039%" y="325" width="0.0308%" height="15" fill="rgb(227,213,9)" fg:x="3043" fg:w="1"/><text x="94.0539%" y="335.50"></text></g><g><title>rustix::backend::event::epoll::wait (5 samples, 0.15%)</title><rect x="93.7115%" y="501" width="0.1541%" height="15" fill="rgb(245,99,25)" fg:x="3040" fg:w="5"/><text x="93.9615%" y="511.50"></text></g><g><title>rustix::backend::event::syscalls::epoll_wait (5 samples, 0.15%)</title><rect x="93.7115%" y="485" width="0.1541%" height="15" fill="rgb(250,82,29)" fg:x="3040" fg:w="5"/><text x="93.9615%" y="495.50"></text></g><g><title>rustix::backend::arch::asm::syscall4 (5 samples, 0.15%)</title><rect x="93.7115%" y="469" width="0.1541%" height="15" fill="rgb(241,226,54)" fg:x="3040" fg:w="5"/><text x="93.9615%" y="479.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.15%)</title><rect x="93.7115%" y="453" width="0.1541%" height="15" fill="rgb(221,99,41)" fg:x="3040" fg:w="5"/><text x="93.9615%" y="463.50"></text></g><g><title>do_syscall_64 (5 samples, 0.15%)</title><rect x="93.7115%" y="437" width="0.1541%" height="15" fill="rgb(213,90,21)" fg:x="3040" fg:w="5"/><text x="93.9615%" y="447.50"></text></g><g><title>__x64_sys_epoll_wait (5 samples, 0.15%)</title><rect x="93.7115%" y="421" width="0.1541%" height="15" fill="rgb(205,208,24)" fg:x="3040" fg:w="5"/><text x="93.9615%" y="431.50"></text></g><g><title>do_epoll_wait (5 samples, 0.15%)</title><rect x="93.7115%" y="405" width="0.1541%" height="15" fill="rgb(246,31,12)" fg:x="3040" fg:w="5"/><text x="93.9615%" y="415.50"></text></g><g><title>schedule_hrtimeout_range_clock (4 samples, 0.12%)</title><rect x="93.7423%" y="389" width="0.1233%" height="15" fill="rgb(213,154,6)" fg:x="3041" fg:w="4"/><text x="93.9923%" y="399.50"></text></g><g><title>schedule (4 samples, 0.12%)</title><rect x="93.7423%" y="373" width="0.1233%" height="15" fill="rgb(222,163,29)" fg:x="3041" fg:w="4"/><text x="93.9923%" y="383.50"></text></g><g><title>__schedule (4 samples, 0.12%)</title><rect x="93.7423%" y="357" width="0.1233%" height="15" fill="rgb(227,201,8)" fg:x="3041" fg:w="4"/><text x="93.9923%" y="367.50"></text></g><g><title>psi_task_switch (1 samples, 0.03%)</title><rect x="93.8348%" y="341" width="0.0308%" height="15" fill="rgb(233,9,32)" fg:x="3044" fg:w="1"/><text x="94.0848%" y="351.50"></text></g><g><title>psi_group_change (1 samples, 0.03%)</title><rect x="93.8348%" y="325" width="0.0308%" height="15" fill="rgb(217,54,24)" fg:x="3044" fg:w="1"/><text x="94.0848%" y="335.50"></text></g><g><title>polling::epoll::Poller::wait (15 samples, 0.46%)</title><rect x="93.4340%" y="517" width="0.4624%" height="15" fill="rgb(235,192,0)" fg:x="3031" fg:w="15"/><text x="93.6840%" y="527.50"></text></g><g><title>rustix::time::timerfd::timerfd_settime (1 samples, 0.03%)</title><rect x="93.8656%" y="501" width="0.0308%" height="15" fill="rgb(235,45,9)" fg:x="3045" fg:w="1"/><text x="94.1156%" y="511.50"></text></g><g><title>rustix::backend::time::syscalls::timerfd_settime (1 samples, 0.03%)</title><rect x="93.8656%" y="485" width="0.0308%" height="15" fill="rgb(246,42,40)" fg:x="3045" fg:w="1"/><text x="94.1156%" y="495.50"></text></g><g><title>rustix::backend::arch::asm::syscall4 (1 samples, 0.03%)</title><rect x="93.8656%" y="469" width="0.0308%" height="15" fill="rgb(248,111,24)" fg:x="3045" fg:w="1"/><text x="94.1156%" y="479.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="93.8656%" y="453" width="0.0308%" height="15" fill="rgb(249,65,22)" fg:x="3045" fg:w="1"/><text x="94.1156%" y="463.50"></text></g><g><title>polling::Poller::wait (22 samples, 0.68%)</title><rect x="93.2799%" y="533" width="0.6782%" height="15" fill="rgb(238,111,51)" fg:x="3026" fg:w="22"/><text x="93.5299%" y="543.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (2 samples, 0.06%)</title><rect x="93.8964%" y="517" width="0.0617%" height="15" fill="rgb(250,118,22)" fg:x="3046" fg:w="2"/><text x="94.1464%" y="527.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::try_lock (2 samples, 0.06%)</title><rect x="93.8964%" y="501" width="0.0617%" height="15" fill="rgb(234,84,26)" fg:x="3046" fg:w="2"/><text x="94.1464%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (1 samples, 0.03%)</title><rect x="93.9273%" y="485" width="0.0308%" height="15" fill="rgb(243,172,12)" fg:x="3047" fg:w="1"/><text x="94.1773%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.03%)</title><rect x="93.9273%" y="469" width="0.0308%" height="15" fill="rgb(236,150,49)" fg:x="3047" fg:w="1"/><text x="94.1773%" y="479.50"></text></g><g><title>__consume_stateless_skb (1 samples, 0.03%)</title><rect x="93.9581%" y="325" width="0.0308%" height="15" fill="rgb(225,197,26)" fg:x="3048" fg:w="1"/><text x="94.2081%" y="335.50"></text></g><g><title>skb_release_data (1 samples, 0.03%)</title><rect x="93.9581%" y="309" width="0.0308%" height="15" fill="rgb(214,17,42)" fg:x="3048" fg:w="1"/><text x="94.2081%" y="319.50"></text></g><g><title>kfree (1 samples, 0.03%)</title><rect x="93.9581%" y="293" width="0.0308%" height="15" fill="rgb(224,165,40)" fg:x="3048" fg:w="1"/><text x="94.2081%" y="303.50"></text></g><g><title>tftp::server::connection::Connection&lt;B,Rng&gt;::recv (30 samples, 0.92%)</title><rect x="93.0949%" y="565" width="0.9248%" height="15" fill="rgb(246,100,4)" fg:x="3020" fg:w="30"/><text x="93.3449%" y="575.50"></text></g><g><title>&lt;tftp::socket::UdpBoundSocket as tftp::socket::BoundSocket&gt;::recv (30 samples, 0.92%)</title><rect x="93.0949%" y="549" width="0.9248%" height="15" fill="rgb(222,103,0)" fg:x="3020" fg:w="30"/><text x="93.3449%" y="559.50"></text></g><g><title>std::net::udp::UdpSocket::recv (2 samples, 0.06%)</title><rect x="93.9581%" y="533" width="0.0617%" height="15" fill="rgb(227,189,26)" fg:x="3048" fg:w="2"/><text x="94.2081%" y="543.50"></text></g><g><title>std::sys_common::net::UdpSocket::recv (2 samples, 0.06%)</title><rect x="93.9581%" y="517" width="0.0617%" height="15" fill="rgb(214,202,17)" fg:x="3048" fg:w="2"/><text x="94.2081%" y="527.50"></text></g><g><title>std::sys::unix::net::Socket::read (2 samples, 0.06%)</title><rect x="93.9581%" y="501" width="0.0617%" height="15" fill="rgb(229,111,3)" fg:x="3048" fg:w="2"/><text x="94.2081%" y="511.50"></text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (2 samples, 0.06%)</title><rect x="93.9581%" y="485" width="0.0617%" height="15" fill="rgb(229,172,15)" fg:x="3048" fg:w="2"/><text x="94.2081%" y="495.50"></text></g><g><title>__libc_recv (2 samples, 0.06%)</title><rect x="93.9581%" y="469" width="0.0617%" height="15" fill="rgb(230,224,35)" fg:x="3048" fg:w="2"/><text x="94.2081%" y="479.50"></text></g><g><title>__libc_recv (2 samples, 0.06%)</title><rect x="93.9581%" y="453" width="0.0617%" height="15" fill="rgb(251,141,6)" fg:x="3048" fg:w="2"/><text x="94.2081%" y="463.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.06%)</title><rect x="93.9581%" y="437" width="0.0617%" height="15" fill="rgb(225,208,6)" fg:x="3048" fg:w="2"/><text x="94.2081%" y="447.50"></text></g><g><title>do_syscall_64 (2 samples, 0.06%)</title><rect x="93.9581%" y="421" width="0.0617%" height="15" fill="rgb(246,181,16)" fg:x="3048" fg:w="2"/><text x="94.2081%" y="431.50"></text></g><g><title>__x64_sys_recvfrom (2 samples, 0.06%)</title><rect x="93.9581%" y="405" width="0.0617%" height="15" fill="rgb(227,129,36)" fg:x="3048" fg:w="2"/><text x="94.2081%" y="415.50"></text></g><g><title>__sys_recvfrom (2 samples, 0.06%)</title><rect x="93.9581%" y="389" width="0.0617%" height="15" fill="rgb(248,117,24)" fg:x="3048" fg:w="2"/><text x="94.2081%" y="399.50"></text></g><g><title>sock_recvmsg (2 samples, 0.06%)</title><rect x="93.9581%" y="373" width="0.0617%" height="15" fill="rgb(214,185,35)" fg:x="3048" fg:w="2"/><text x="94.2081%" y="383.50"></text></g><g><title>inet_recvmsg (2 samples, 0.06%)</title><rect x="93.9581%" y="357" width="0.0617%" height="15" fill="rgb(236,150,34)" fg:x="3048" fg:w="2"/><text x="94.2081%" y="367.50"></text></g><g><title>udp_recvmsg (2 samples, 0.06%)</title><rect x="93.9581%" y="341" width="0.0617%" height="15" fill="rgb(243,228,27)" fg:x="3048" fg:w="2"/><text x="94.2081%" y="351.50"></text></g><g><title>__slab_free (1 samples, 0.03%)</title><rect x="93.9889%" y="325" width="0.0308%" height="15" fill="rgb(245,77,44)" fg:x="3049" fg:w="1"/><text x="94.2389%" y="335.50"></text></g><g><title>tftp::server::helpers::connection::timeout_client (3 samples, 0.09%)</title><rect x="94.0197%" y="565" width="0.0925%" height="15" fill="rgb(235,214,42)" fg:x="3050" fg:w="3"/><text x="94.2697%" y="575.50"></text></g><g><title>std::time::Instant::elapsed (2 samples, 0.06%)</title><rect x="94.0506%" y="549" width="0.0617%" height="15" fill="rgb(221,74,3)" fg:x="3051" fg:w="2"/><text x="94.3006%" y="559.50"></text></g><g><title>std::time::Instant::now (2 samples, 0.06%)</title><rect x="94.0506%" y="533" width="0.0617%" height="15" fill="rgb(206,121,29)" fg:x="3051" fg:w="2"/><text x="94.3006%" y="543.50"></text></g><g><title>std::sys::unix::time::Instant::now (2 samples, 0.06%)</title><rect x="94.0506%" y="517" width="0.0617%" height="15" fill="rgb(249,131,53)" fg:x="3051" fg:w="2"/><text x="94.3006%" y="527.50"></text></g><g><title>std::sys::unix::time::Timespec::now (2 samples, 0.06%)</title><rect x="94.0506%" y="501" width="0.0617%" height="15" fill="rgb(236,170,29)" fg:x="3051" fg:w="2"/><text x="94.3006%" y="511.50"></text></g><g><title>__GI___clock_gettime (1 samples, 0.03%)</title><rect x="94.0814%" y="485" width="0.0308%" height="15" fill="rgb(247,96,15)" fg:x="3052" fg:w="1"/><text x="94.3314%" y="495.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.03%)</title><rect x="94.0814%" y="469" width="0.0308%" height="15" fill="rgb(211,210,7)" fg:x="3052" fg:w="1"/><text x="94.3314%" y="479.50"></text></g><g><title>[[vdso]] (1 samples, 0.03%)</title><rect x="94.0814%" y="453" width="0.0308%" height="15" fill="rgb(240,88,50)" fg:x="3052" fg:w="1"/><text x="94.3314%" y="463.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (1 samples, 0.03%)</title><rect x="94.1430%" y="437" width="0.0308%" height="15" fill="rgb(209,229,26)" fg:x="3054" fg:w="1"/><text x="94.3930%" y="447.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_le_bytes (1 samples, 0.03%)</title><rect x="94.1430%" y="421" width="0.0308%" height="15" fill="rgb(210,68,23)" fg:x="3054" fg:w="1"/><text x="94.3930%" y="431.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (2 samples, 0.06%)</title><rect x="94.1430%" y="453" width="0.0617%" height="15" fill="rgb(229,180,13)" fg:x="3054" fg:w="2"/><text x="94.3930%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.03%)</title><rect x="94.1739%" y="437" width="0.0308%" height="15" fill="rgb(236,53,44)" fg:x="3055" fg:w="1"/><text x="94.4239%" y="447.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.03%)</title><rect x="94.2355%" y="437" width="0.0308%" height="15" fill="rgb(244,214,29)" fg:x="3057" fg:w="1"/><text x="94.4855%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (1 samples, 0.03%)</title><rect x="94.2663%" y="437" width="0.0308%" height="15" fill="rgb(220,75,29)" fg:x="3058" fg:w="1"/><text x="94.5163%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="94.2972%" y="437" width="0.0308%" height="15" fill="rgb(214,183,37)" fg:x="3059" fg:w="1"/><text x="94.5472%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.03%)</title><rect x="94.2972%" y="421" width="0.0308%" height="15" fill="rgb(239,117,29)" fg:x="3059" fg:w="1"/><text x="94.5472%" y="431.50"></text></g><g><title>&lt;[u8] as tftp::buffer::SliceExt&gt;::rslice_to_array (1 samples, 0.03%)</title><rect x="94.2972%" y="405" width="0.0308%" height="15" fill="rgb(237,171,35)" fg:x="3059" fg:w="1"/><text x="94.5472%" y="415.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (2 samples, 0.06%)</title><rect x="94.7287%" y="421" width="0.0617%" height="15" fill="rgb(229,178,53)" fg:x="3073" fg:w="2"/><text x="94.9787%" y="431.50"></text></g><g><title>chacha20::xchacha::quarter_round (17 samples, 0.52%)</title><rect x="94.3280%" y="437" width="0.5240%" height="15" fill="rgb(210,102,19)" fg:x="3060" fg:w="17"/><text x="94.5780%" y="447.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (2 samples, 0.06%)</title><rect x="94.7904%" y="421" width="0.0617%" height="15" fill="rgb(235,127,22)" fg:x="3075" fg:w="2"/><text x="95.0404%" y="431.50"></text></g><g><title>chacha20::xchacha::hchacha (22 samples, 0.68%)</title><rect x="94.2047%" y="453" width="0.6782%" height="15" fill="rgb(244,31,31)" fg:x="3056" fg:w="22"/><text x="94.4547%" y="463.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::chunks_exact (1 samples, 0.03%)</title><rect x="94.8520%" y="437" width="0.0308%" height="15" fill="rgb(231,43,21)" fg:x="3077" fg:w="1"/><text x="95.1020%" y="447.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (25 samples, 0.77%)</title><rect x="94.1430%" y="469" width="0.7707%" height="15" fill="rgb(217,131,35)" fg:x="3054" fg:w="25"/><text x="94.3930%" y="479.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.03%)</title><rect x="94.8829%" y="453" width="0.0308%" height="15" fill="rgb(221,149,4)" fg:x="3078" fg:w="1"/><text x="95.1329%" y="463.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.03%)</title><rect x="94.8829%" y="437" width="0.0308%" height="15" fill="rgb(232,170,28)" fg:x="3078" fg:w="1"/><text x="95.1329%" y="447.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (1 samples, 0.03%)</title><rect x="94.8829%" y="421" width="0.0308%" height="15" fill="rgb(238,56,10)" fg:x="3078" fg:w="1"/><text x="95.1329%" y="431.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as crypto_common::KeyIvInit&gt;::new (26 samples, 0.80%)</title><rect x="94.1430%" y="485" width="0.8015%" height="15" fill="rgb(235,196,14)" fg:x="3054" fg:w="26"/><text x="94.3930%" y="495.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.03%)</title><rect x="94.9137%" y="469" width="0.0308%" height="15" fill="rgb(216,45,48)" fg:x="3079" fg:w="1"/><text x="95.1637%" y="479.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.03%)</title><rect x="94.9137%" y="453" width="0.0308%" height="15" fill="rgb(238,213,17)" fg:x="3079" fg:w="1"/><text x="95.1637%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.03%)</title><rect x="94.9137%" y="437" width="0.0308%" height="15" fill="rgb(212,13,2)" fg:x="3079" fg:w="1"/><text x="95.1637%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="94.9137%" y="421" width="0.0308%" height="15" fill="rgb(240,114,20)" fg:x="3079" fg:w="1"/><text x="95.1637%" y="431.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.03%)</title><rect x="94.9137%" y="405" width="0.0308%" height="15" fill="rgb(228,41,40)" fg:x="3079" fg:w="1"/><text x="95.1637%" y="415.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (1 samples, 0.03%)</title><rect x="94.9137%" y="389" width="0.0308%" height="15" fill="rgb(244,132,35)" fg:x="3079" fg:w="1"/><text x="95.1637%" y="399.50"></text></g><g><title>chacha20::backends::avx2::rounds (1 samples, 0.03%)</title><rect x="94.9445%" y="485" width="0.0308%" height="15" fill="rgb(253,189,4)" fg:x="3080" fg:w="1"/><text x="95.1945%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;chacha20poly1305::cipher::Cipher&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;chacha20::xchacha::XChaChaCore&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm,typenum::bit::B1&gt;,typenum::bit::B0&gt;,typenum::bit::B1&gt;,typenum::bit::B0&gt;&gt;&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="94.9753%" y="469" width="0.0308%" height="15" fill="rgb(224,37,19)" fg:x="3081" fg:w="1"/><text x="95.2253%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;chacha20::xchacha::XChaChaCore&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm,typenum::bit::B1&gt;,typenum::bit::B0&gt;,typenum::bit::B1&gt;,typenum::bit::B0&gt;&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="94.9753%" y="453" width="0.0308%" height="15" fill="rgb(235,223,18)" fg:x="3081" fg:w="1"/><text x="95.2253%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;chacha20::xchacha::XChaChaCore&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm,typenum::bit::B1&gt;,typenum::bit::B0&gt;,typenum::bit::B1&gt;,typenum::bit::B0&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="94.9753%" y="437" width="0.0308%" height="15" fill="rgb(235,163,25)" fg:x="3081" fg:w="1"/><text x="95.2253%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;chacha20::ChaChaCore&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm,typenum::bit::B1&gt;,typenum::bit::B0&gt;,typenum::bit::B1&gt;,typenum::bit::B0&gt;&gt;&gt; (1 samples, 0.03%)</title><rect x="94.9753%" y="421" width="0.0308%" height="15" fill="rgb(217,145,28)" fg:x="3081" fg:w="1"/><text x="95.2253%" y="431.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.03%)</title><rect x="94.9753%" y="405" width="0.0308%" height="15" fill="rgb(223,223,32)" fg:x="3081" fg:w="1"/><text x="95.2253%" y="415.50"></text></g><g><title>&lt;[Z: N] as zeroize::Zeroize&gt;::zeroize (1 samples, 0.03%)</title><rect x="94.9753%" y="389" width="0.0308%" height="15" fill="rgb(227,189,39)" fg:x="3081" fg:w="1"/><text x="95.2253%" y="399.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (1 samples, 0.03%)</title><rect x="94.9753%" y="373" width="0.0308%" height="15" fill="rgb(248,10,22)" fg:x="3081" fg:w="1"/><text x="95.2253%" y="383.50"></text></g><g><title>&lt;poly1305::backend::avx2::State as universal_hash::UhfBackend&gt;::proc_block (1 samples, 0.03%)</title><rect x="95.0062%" y="389" width="0.0308%" height="15" fill="rgb(248,46,39)" fg:x="3082" fg:w="1"/><text x="95.2562%" y="399.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (1 samples, 0.03%)</title><rect x="95.0062%" y="373" width="0.0308%" height="15" fill="rgb(248,113,48)" fg:x="3082" fg:w="1"/><text x="95.2562%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="95.0370%" y="357" width="0.0308%" height="15" fill="rgb(245,16,25)" fg:x="3083" fg:w="1"/><text x="95.2870%" y="367.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="95.0370%" y="341" width="0.0308%" height="15" fill="rgb(249,152,16)" fg:x="3083" fg:w="1"/><text x="95.2870%" y="351.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="95.0370%" y="325" width="0.0308%" height="15" fill="rgb(250,16,1)" fg:x="3083" fg:w="1"/><text x="95.2870%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="95.0678%" y="357" width="0.0308%" height="15" fill="rgb(249,138,3)" fg:x="3084" fg:w="1"/><text x="95.3178%" y="367.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (1 samples, 0.03%)</title><rect x="95.0986%" y="357" width="0.0308%" height="15" fill="rgb(227,71,41)" fg:x="3085" fg:w="1"/><text x="95.3486%" y="367.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (1 samples, 0.03%)</title><rect x="95.0986%" y="341" width="0.0308%" height="15" fill="rgb(209,184,23)" fg:x="3085" fg:w="1"/><text x="95.3486%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (1 samples, 0.03%)</title><rect x="95.1295%" y="341" width="0.0308%" height="15" fill="rgb(223,215,31)" fg:x="3086" fg:w="1"/><text x="95.3795%" y="351.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.06%)</title><rect x="95.1603%" y="341" width="0.0617%" height="15" fill="rgb(210,146,28)" fg:x="3087" fg:w="2"/><text x="95.4103%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (3 samples, 0.09%)</title><rect x="95.2219%" y="325" width="0.0925%" height="15" fill="rgb(209,183,41)" fg:x="3089" fg:w="3"/><text x="95.4719%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="95.4377%" y="309" width="0.0308%" height="15" fill="rgb(209,224,45)" fg:x="3096" fg:w="1"/><text x="95.6877%" y="319.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (4 samples, 0.12%)</title><rect x="95.4686%" y="309" width="0.1233%" height="15" fill="rgb(224,209,51)" fg:x="3097" fg:w="4"/><text x="95.7186%" y="319.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (4 samples, 0.12%)</title><rect x="95.4686%" y="293" width="0.1233%" height="15" fill="rgb(223,17,39)" fg:x="3097" fg:w="4"/><text x="95.7186%" y="303.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (11 samples, 0.34%)</title><rect x="95.3144%" y="325" width="0.3391%" height="15" fill="rgb(234,204,37)" fg:x="3092" fg:w="11"/><text x="95.5644%" y="335.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (2 samples, 0.06%)</title><rect x="95.5919%" y="309" width="0.0617%" height="15" fill="rgb(236,120,5)" fg:x="3101" fg:w="2"/><text x="95.8419%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (2 samples, 0.06%)</title><rect x="95.6535%" y="325" width="0.0617%" height="15" fill="rgb(248,97,27)" fg:x="3103" fg:w="2"/><text x="95.9035%" y="335.50"></text></g><g><title>core::core_arch::simd::u64x4::splat (1 samples, 0.03%)</title><rect x="95.6843%" y="309" width="0.0308%" height="15" fill="rgb(240,66,17)" fg:x="3104" fg:w="1"/><text x="95.9343%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi64 (1 samples, 0.03%)</title><rect x="95.7152%" y="325" width="0.0308%" height="15" fill="rgb(210,79,3)" fg:x="3105" fg:w="1"/><text x="95.9652%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.03%)</title><rect x="95.7152%" y="309" width="0.0308%" height="15" fill="rgb(214,176,27)" fg:x="3105" fg:w="1"/><text x="95.9652%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (3 samples, 0.09%)</title><rect x="95.7460%" y="325" width="0.0925%" height="15" fill="rgb(235,185,3)" fg:x="3106" fg:w="3"/><text x="95.9960%" y="335.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (2 samples, 0.06%)</title><rect x="95.8385%" y="325" width="0.0617%" height="15" fill="rgb(227,24,12)" fg:x="3109" fg:w="2"/><text x="96.0885%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (5 samples, 0.15%)</title><rect x="95.9001%" y="325" width="0.1541%" height="15" fill="rgb(252,169,48)" fg:x="3111" fg:w="5"/><text x="96.1501%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (2 samples, 0.06%)</title><rect x="96.0543%" y="325" width="0.0617%" height="15" fill="rgb(212,65,1)" fg:x="3116" fg:w="2"/><text x="96.3043%" y="335.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (4 samples, 0.12%)</title><rect x="96.1159%" y="325" width="0.1233%" height="15" fill="rgb(242,39,24)" fg:x="3118" fg:w="4"/><text x="96.3659%" y="335.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (4 samples, 0.12%)</title><rect x="96.1159%" y="309" width="0.1233%" height="15" fill="rgb(249,32,23)" fg:x="3118" fg:w="4"/><text x="96.3659%" y="319.50"></text></g><g><title>poly1305::backend::avx2::helpers::SpacedMultiplier4x130::new (1 samples, 0.03%)</title><rect x="96.2392%" y="325" width="0.0308%" height="15" fill="rgb(251,195,23)" fg:x="3122" fg:w="1"/><text x="96.4892%" y="335.50"></text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_par_blocks (42 samples, 1.29%)</title><rect x="95.1295%" y="357" width="1.2947%" height="15" fill="rgb(236,174,8)" fg:x="3086" fg:w="42"/><text x="95.3795%" y="367.50"></text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_loaded_blocks (39 samples, 1.20%)</title><rect x="95.2219%" y="341" width="1.2022%" height="15" fill="rgb(220,197,8)" fg:x="3089" fg:w="39"/><text x="95.4719%" y="351.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (5 samples, 0.15%)</title><rect x="96.2700%" y="325" width="0.1541%" height="15" fill="rgb(240,108,37)" fg:x="3123" fg:w="5"/><text x="96.5200%" y="335.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::decrypt_in_place_detached (48 samples, 1.48%)</title><rect x="94.9753%" y="485" width="1.4797%" height="15" fill="rgb(232,176,24)" fg:x="3081" fg:w="48"/><text x="95.2253%" y="495.50"></text></g><g><title>universal_hash::UniversalHash::update_padded (47 samples, 1.45%)</title><rect x="95.0062%" y="469" width="1.4488%" height="15" fill="rgb(243,35,29)" fg:x="3082" fg:w="47"/><text x="95.2562%" y="479.50"></text></g><g><title>universal_hash::UniversalHash::update (47 samples, 1.45%)</title><rect x="95.0062%" y="453" width="1.4488%" height="15" fill="rgb(210,37,18)" fg:x="3082" fg:w="47"/><text x="95.2562%" y="463.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (47 samples, 1.45%)</title><rect x="95.0062%" y="437" width="1.4488%" height="15" fill="rgb(224,184,40)" fg:x="3082" fg:w="47"/><text x="95.2562%" y="447.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (47 samples, 1.45%)</title><rect x="95.0062%" y="421" width="1.4488%" height="15" fill="rgb(236,39,29)" fg:x="3082" fg:w="47"/><text x="95.2562%" y="431.50"></text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (47 samples, 1.45%)</title><rect x="95.0062%" y="405" width="1.4488%" height="15" fill="rgb(232,48,39)" fg:x="3082" fg:w="47"/><text x="95.2562%" y="415.50"></text></g><g><title>&lt;poly1305::backend::avx2::State as universal_hash::UhfBackend&gt;::proc_par_blocks (46 samples, 1.42%)</title><rect x="95.0370%" y="389" width="1.4180%" height="15" fill="rgb(236,34,42)" fg:x="3083" fg:w="46"/><text x="95.2870%" y="399.50"></text></g><g><title>poly1305::backend::avx2::State::compute_par_blocks (46 samples, 1.42%)</title><rect x="95.0370%" y="373" width="1.4180%" height="15" fill="rgb(243,106,37)" fg:x="3083" fg:w="46"/><text x="95.2870%" y="383.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (1 samples, 0.03%)</title><rect x="96.4242%" y="357" width="0.0308%" height="15" fill="rgb(218,96,6)" fg:x="3128" fg:w="1"/><text x="96.6742%" y="367.50"></text></g><g><title>&lt;poly1305::Poly1305 as crypto_common::KeyInit&gt;::new (1 samples, 0.03%)</title><rect x="96.4550%" y="469" width="0.0308%" height="15" fill="rgb(235,130,12)" fg:x="3129" fg:w="1"/><text x="96.7050%" y="479.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="96.4550%" y="453" width="0.0308%" height="15" fill="rgb(231,95,0)" fg:x="3129" fg:w="1"/><text x="96.7050%" y="463.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="96.4550%" y="437" width="0.0308%" height="15" fill="rgb(228,12,23)" fg:x="3129" fg:w="1"/><text x="96.7050%" y="447.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="96.4550%" y="421" width="0.0308%" height="15" fill="rgb(216,12,1)" fg:x="3129" fg:w="1"/><text x="96.7050%" y="431.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (1 samples, 0.03%)</title><rect x="96.4858%" y="469" width="0.0308%" height="15" fill="rgb(219,59,3)" fg:x="3130" fg:w="1"/><text x="96.7358%" y="479.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (1 samples, 0.03%)</title><rect x="96.4858%" y="453" width="0.0308%" height="15" fill="rgb(215,208,46)" fg:x="3130" fg:w="1"/><text x="96.7358%" y="463.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (1 samples, 0.03%)</title><rect x="96.4858%" y="437" width="0.0308%" height="15" fill="rgb(254,224,29)" fg:x="3130" fg:w="1"/><text x="96.7358%" y="447.50"></text></g><g><title>inout::inout_buf::InOutBuf&lt;u8&gt;::xor_in2out (1 samples, 0.03%)</title><rect x="96.4858%" y="421" width="0.0308%" height="15" fill="rgb(232,14,29)" fg:x="3130" fg:w="1"/><text x="96.7358%" y="431.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.03%)</title><rect x="96.4858%" y="405" width="0.0308%" height="15" fill="rgb(208,45,52)" fg:x="3130" fg:w="1"/><text x="96.7358%" y="415.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (3 samples, 0.09%)</title><rect x="96.4550%" y="485" width="0.0925%" height="15" fill="rgb(234,191,28)" fg:x="3129" fg:w="3"/><text x="96.7050%" y="495.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="96.5166%" y="469" width="0.0308%" height="15" fill="rgb(244,67,43)" fg:x="3131" fg:w="1"/><text x="96.7666%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_blend_epi32 (1 samples, 0.03%)</title><rect x="96.5475%" y="485" width="0.0308%" height="15" fill="rgb(236,189,24)" fg:x="3132" fg:w="1"/><text x="96.7975%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.03%)</title><rect x="96.5783%" y="485" width="0.0308%" height="15" fill="rgb(239,214,33)" fg:x="3133" fg:w="1"/><text x="96.8283%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.03%)</title><rect x="96.6091%" y="485" width="0.0308%" height="15" fill="rgb(226,176,41)" fg:x="3134" fg:w="1"/><text x="96.8591%" y="495.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (1 samples, 0.03%)</title><rect x="96.6400%" y="485" width="0.0308%" height="15" fill="rgb(248,47,8)" fg:x="3135" fg:w="1"/><text x="96.8900%" y="495.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (2 samples, 0.06%)</title><rect x="96.6708%" y="485" width="0.0617%" height="15" fill="rgb(218,81,44)" fg:x="3136" fg:w="2"/><text x="96.9208%" y="495.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (2 samples, 0.06%)</title><rect x="96.6708%" y="469" width="0.0617%" height="15" fill="rgb(213,98,6)" fg:x="3136" fg:w="2"/><text x="96.9208%" y="479.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (2 samples, 0.06%)</title><rect x="96.6708%" y="453" width="0.0617%" height="15" fill="rgb(222,85,22)" fg:x="3136" fg:w="2"/><text x="96.9208%" y="463.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (3 samples, 0.09%)</title><rect x="96.7324%" y="485" width="0.0925%" height="15" fill="rgb(239,46,39)" fg:x="3138" fg:w="3"/><text x="96.9824%" y="495.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="96.8249%" y="485" width="0.0308%" height="15" fill="rgb(237,12,29)" fg:x="3141" fg:w="1"/><text x="97.0749%" y="495.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (89 samples, 2.74%)</title><rect x="94.1430%" y="501" width="2.7435%" height="15" fill="rgb(214,77,8)" fg:x="3054" fg:w="89"/><text x="94.3930%" y="511.50">&lt;c..</text></g><g><title>poly1305::backend::avx2::State::process_blocks (1 samples, 0.03%)</title><rect x="96.8557%" y="485" width="0.0308%" height="15" fill="rgb(217,168,37)" fg:x="3142" fg:w="1"/><text x="97.1057%" y="495.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Add&gt;::add (1 samples, 0.03%)</title><rect x="96.8557%" y="469" width="0.0308%" height="15" fill="rgb(221,217,23)" fg:x="3142" fg:w="1"/><text x="97.1057%" y="479.50"></text></g><g><title>tftp::encryption::Encryptor&lt;R&gt;::decrypt (90 samples, 2.77%)</title><rect x="94.1430%" y="517" width="2.7744%" height="15" fill="rgb(243,229,36)" fg:x="3054" fg:w="90"/><text x="94.3930%" y="527.50">tf..</text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.03%)</title><rect x="96.8866%" y="501" width="0.0308%" height="15" fill="rgb(251,163,40)" fg:x="3143" fg:w="1"/><text x="97.1366%" y="511.50"></text></g><g><title>tftp::server::connection::Connection&lt;B,Rng&gt;::decrypt_packet (91 samples, 2.81%)</title><rect x="94.1430%" y="549" width="2.8052%" height="15" fill="rgb(237,222,12)" fg:x="3054" fg:w="91"/><text x="94.3930%" y="559.50">tf..</text></g><g><title>tftp::encrypted_packet::EncryptedPacket::decrypt (91 samples, 2.81%)</title><rect x="94.1430%" y="533" width="2.8052%" height="15" fill="rgb(248,132,6)" fg:x="3054" fg:w="91"/><text x="94.3930%" y="543.50">tf..</text></g><g><title>tftp::encryption::remove_bit_padding (1 samples, 0.03%)</title><rect x="96.9174%" y="517" width="0.0308%" height="15" fill="rgb(227,167,50)" fg:x="3144" fg:w="1"/><text x="97.1674%" y="527.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.03%)</title><rect x="96.9174%" y="501" width="0.0308%" height="15" fill="rgb(242,84,37)" fg:x="3144" fg:w="1"/><text x="97.1674%" y="511.50"></text></g><g><title>__memset (1 samples, 0.03%)</title><rect x="96.9790%" y="213" width="0.0308%" height="15" fill="rgb(212,4,50)" fg:x="3146" fg:w="1"/><text x="97.2290%" y="223.50"></text></g><g><title>ip_make_skb (3 samples, 0.09%)</title><rect x="96.9482%" y="341" width="0.0925%" height="15" fill="rgb(230,228,32)" fg:x="3145" fg:w="3"/><text x="97.1982%" y="351.50"></text></g><g><title>__ip_append_data (3 samples, 0.09%)</title><rect x="96.9482%" y="325" width="0.0925%" height="15" fill="rgb(248,217,23)" fg:x="3145" fg:w="3"/><text x="97.1982%" y="335.50"></text></g><g><title>sock_alloc_send_pskb (3 samples, 0.09%)</title><rect x="96.9482%" y="309" width="0.0925%" height="15" fill="rgb(238,197,32)" fg:x="3145" fg:w="3"/><text x="97.1982%" y="319.50"></text></g><g><title>alloc_skb_with_frags (3 samples, 0.09%)</title><rect x="96.9482%" y="293" width="0.0925%" height="15" fill="rgb(236,106,1)" fg:x="3145" fg:w="3"/><text x="97.1982%" y="303.50"></text></g><g><title>__alloc_skb (3 samples, 0.09%)</title><rect x="96.9482%" y="277" width="0.0925%" height="15" fill="rgb(219,228,13)" fg:x="3145" fg:w="3"/><text x="97.1982%" y="287.50"></text></g><g><title>kmalloc_reserve (2 samples, 0.06%)</title><rect x="96.9790%" y="261" width="0.0617%" height="15" fill="rgb(238,30,35)" fg:x="3146" fg:w="2"/><text x="97.2290%" y="271.50"></text></g><g><title>__kmalloc_node_track_caller (2 samples, 0.06%)</title><rect x="96.9790%" y="245" width="0.0617%" height="15" fill="rgb(236,70,23)" fg:x="3146" fg:w="2"/><text x="97.2290%" y="255.50"></text></g><g><title>__kmem_cache_alloc_node (2 samples, 0.06%)</title><rect x="96.9790%" y="229" width="0.0617%" height="15" fill="rgb(249,104,48)" fg:x="3146" fg:w="2"/><text x="97.2290%" y="239.50"></text></g><g><title>__slab_alloc.constprop.0 (1 samples, 0.03%)</title><rect x="97.0099%" y="213" width="0.0308%" height="15" fill="rgb(254,117,50)" fg:x="3147" fg:w="1"/><text x="97.2599%" y="223.50"></text></g><g><title>___slab_alloc (1 samples, 0.03%)</title><rect x="97.0099%" y="197" width="0.0308%" height="15" fill="rgb(223,152,4)" fg:x="3147" fg:w="1"/><text x="97.2599%" y="207.50"></text></g><g><title>__netif_receive_skb_core.constprop.0 (1 samples, 0.03%)</title><rect x="97.0715%" y="181" width="0.0308%" height="15" fill="rgb(245,6,2)" fg:x="3149" fg:w="1"/><text x="97.3215%" y="191.50"></text></g><g><title>ip_local_deliver_finish (1 samples, 0.03%)</title><rect x="97.1023%" y="181" width="0.0308%" height="15" fill="rgb(249,150,24)" fg:x="3150" fg:w="1"/><text x="97.3523%" y="191.50"></text></g><g><title>ip_protocol_deliver_rcu (1 samples, 0.03%)</title><rect x="97.1023%" y="165" width="0.0308%" height="15" fill="rgb(228,185,42)" fg:x="3150" fg:w="1"/><text x="97.3523%" y="175.50"></text></g><g><title>__udp4_lib_rcv (1 samples, 0.03%)</title><rect x="97.1023%" y="149" width="0.0308%" height="15" fill="rgb(226,39,33)" fg:x="3150" fg:w="1"/><text x="97.3523%" y="159.50"></text></g><g><title>udp_unicast_rcv_skb (1 samples, 0.03%)</title><rect x="97.1023%" y="133" width="0.0308%" height="15" fill="rgb(221,166,19)" fg:x="3150" fg:w="1"/><text x="97.3523%" y="143.50"></text></g><g><title>udp_queue_rcv_one_skb (1 samples, 0.03%)</title><rect x="97.1023%" y="117" width="0.0308%" height="15" fill="rgb(209,109,2)" fg:x="3150" fg:w="1"/><text x="97.3523%" y="127.50"></text></g><g><title>__udp_enqueue_schedule_skb (1 samples, 0.03%)</title><rect x="97.1023%" y="101" width="0.0308%" height="15" fill="rgb(252,216,26)" fg:x="3150" fg:w="1"/><text x="97.3523%" y="111.50"></text></g><g><title>sock_def_readable (1 samples, 0.03%)</title><rect x="97.1023%" y="85" width="0.0308%" height="15" fill="rgb(227,173,36)" fg:x="3150" fg:w="1"/><text x="97.3523%" y="95.50"></text></g><g><title>__wake_up_common_lock (1 samples, 0.03%)</title><rect x="97.1023%" y="69" width="0.0308%" height="15" fill="rgb(209,90,7)" fg:x="3150" fg:w="1"/><text x="97.3523%" y="79.50"></text></g><g><title>__wake_up_common (1 samples, 0.03%)</title><rect x="97.1023%" y="53" width="0.0308%" height="15" fill="rgb(250,194,11)" fg:x="3150" fg:w="1"/><text x="97.3523%" y="63.50"></text></g><g><title>ep_poll_callback (1 samples, 0.03%)</title><rect x="97.1023%" y="37" width="0.0308%" height="15" fill="rgb(220,72,50)" fg:x="3150" fg:w="1"/><text x="97.3523%" y="47.50"></text></g><g><title>nf_conntrack_in (1 samples, 0.03%)</title><rect x="97.1332%" y="149" width="0.0308%" height="15" fill="rgb(222,106,48)" fg:x="3151" fg:w="1"/><text x="97.3832%" y="159.50"></text></g><g><title>&lt;tftp::socket::UdpBoundSocket as tftp::socket::BoundSocket&gt;::send (8 samples, 0.25%)</title><rect x="96.9482%" y="517" width="0.2466%" height="15" fill="rgb(216,220,45)" fg:x="3145" fg:w="8"/><text x="97.1982%" y="527.50"></text></g><g><title>std::net::udp::UdpSocket::send (8 samples, 0.25%)</title><rect x="96.9482%" y="501" width="0.2466%" height="15" fill="rgb(234,112,18)" fg:x="3145" fg:w="8"/><text x="97.1982%" y="511.50"></text></g><g><title>std::sys_common::net::UdpSocket::send (8 samples, 0.25%)</title><rect x="96.9482%" y="485" width="0.2466%" height="15" fill="rgb(206,179,9)" fg:x="3145" fg:w="8"/><text x="97.1982%" y="495.50"></text></g><g><title>__libc_send (8 samples, 0.25%)</title><rect x="96.9482%" y="469" width="0.2466%" height="15" fill="rgb(215,115,40)" fg:x="3145" fg:w="8"/><text x="97.1982%" y="479.50"></text></g><g><title>__libc_send (8 samples, 0.25%)</title><rect x="96.9482%" y="453" width="0.2466%" height="15" fill="rgb(222,69,34)" fg:x="3145" fg:w="8"/><text x="97.1982%" y="463.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (8 samples, 0.25%)</title><rect x="96.9482%" y="437" width="0.2466%" height="15" fill="rgb(209,161,10)" fg:x="3145" fg:w="8"/><text x="97.1982%" y="447.50"></text></g><g><title>do_syscall_64 (8 samples, 0.25%)</title><rect x="96.9482%" y="421" width="0.2466%" height="15" fill="rgb(217,6,38)" fg:x="3145" fg:w="8"/><text x="97.1982%" y="431.50"></text></g><g><title>__x64_sys_sendto (8 samples, 0.25%)</title><rect x="96.9482%" y="405" width="0.2466%" height="15" fill="rgb(229,229,48)" fg:x="3145" fg:w="8"/><text x="97.1982%" y="415.50"></text></g><g><title>__sys_sendto (8 samples, 0.25%)</title><rect x="96.9482%" y="389" width="0.2466%" height="15" fill="rgb(225,21,28)" fg:x="3145" fg:w="8"/><text x="97.1982%" y="399.50"></text></g><g><title>sock_sendmsg (8 samples, 0.25%)</title><rect x="96.9482%" y="373" width="0.2466%" height="15" fill="rgb(206,33,13)" fg:x="3145" fg:w="8"/><text x="97.1982%" y="383.50"></text></g><g><title>udp_sendmsg (8 samples, 0.25%)</title><rect x="96.9482%" y="357" width="0.2466%" height="15" fill="rgb(242,178,17)" fg:x="3145" fg:w="8"/><text x="97.1982%" y="367.50"></text></g><g><title>udp_send_skb (5 samples, 0.15%)</title><rect x="97.0407%" y="341" width="0.1541%" height="15" fill="rgb(220,162,5)" fg:x="3148" fg:w="5"/><text x="97.2907%" y="351.50"></text></g><g><title>ip_send_skb (5 samples, 0.15%)</title><rect x="97.0407%" y="325" width="0.1541%" height="15" fill="rgb(210,33,43)" fg:x="3148" fg:w="5"/><text x="97.2907%" y="335.50"></text></g><g><title>ip_finish_output2 (5 samples, 0.15%)</title><rect x="97.0407%" y="309" width="0.1541%" height="15" fill="rgb(216,116,54)" fg:x="3148" fg:w="5"/><text x="97.2907%" y="319.50"></text></g><g><title>__local_bh_enable_ip (5 samples, 0.15%)</title><rect x="97.0407%" y="293" width="0.1541%" height="15" fill="rgb(249,92,24)" fg:x="3148" fg:w="5"/><text x="97.2907%" y="303.50"></text></g><g><title>do_softirq.part.0 (5 samples, 0.15%)</title><rect x="97.0407%" y="277" width="0.1541%" height="15" fill="rgb(231,189,14)" fg:x="3148" fg:w="5"/><text x="97.2907%" y="287.50"></text></g><g><title>__do_softirq (5 samples, 0.15%)</title><rect x="97.0407%" y="261" width="0.1541%" height="15" fill="rgb(230,8,41)" fg:x="3148" fg:w="5"/><text x="97.2907%" y="271.50"></text></g><g><title>net_rx_action (5 samples, 0.15%)</title><rect x="97.0407%" y="245" width="0.1541%" height="15" fill="rgb(249,7,27)" fg:x="3148" fg:w="5"/><text x="97.2907%" y="255.50"></text></g><g><title>__napi_poll (4 samples, 0.12%)</title><rect x="97.0715%" y="229" width="0.1233%" height="15" fill="rgb(232,86,5)" fg:x="3149" fg:w="4"/><text x="97.3215%" y="239.50"></text></g><g><title>process_backlog (4 samples, 0.12%)</title><rect x="97.0715%" y="213" width="0.1233%" height="15" fill="rgb(224,175,18)" fg:x="3149" fg:w="4"/><text x="97.3215%" y="223.50"></text></g><g><title>__netif_receive_skb_one_core (4 samples, 0.12%)</title><rect x="97.0715%" y="197" width="0.1233%" height="15" fill="rgb(220,129,12)" fg:x="3149" fg:w="4"/><text x="97.3215%" y="207.50"></text></g><g><title>ip_rcv (2 samples, 0.06%)</title><rect x="97.1332%" y="181" width="0.0617%" height="15" fill="rgb(210,19,36)" fg:x="3151" fg:w="2"/><text x="97.3832%" y="191.50"></text></g><g><title>nf_hook_slow (2 samples, 0.06%)</title><rect x="97.1332%" y="165" width="0.0617%" height="15" fill="rgb(219,96,14)" fg:x="3151" fg:w="2"/><text x="97.3832%" y="175.50"></text></g><g><title>nf_nat_ipv4_pre_routing (1 samples, 0.03%)</title><rect x="97.1640%" y="149" width="0.0308%" height="15" fill="rgb(249,106,1)" fg:x="3152" fg:w="1"/><text x="97.4140%" y="159.50"></text></g><g><title>nf_nat_inet_fn (1 samples, 0.03%)</title><rect x="97.1640%" y="133" width="0.0308%" height="15" fill="rgb(249,155,20)" fg:x="3152" fg:w="1"/><text x="97.4140%" y="143.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as crypto_common::KeyIvInit&gt;::new (2 samples, 0.06%)</title><rect x="97.1948%" y="469" width="0.0617%" height="15" fill="rgb(244,168,9)" fg:x="3153" fg:w="2"/><text x="97.4448%" y="479.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (1 samples, 0.03%)</title><rect x="97.2256%" y="453" width="0.0308%" height="15" fill="rgb(216,23,50)" fg:x="3154" fg:w="1"/><text x="97.4756%" y="463.50"></text></g><g><title>chacha20::xchacha::hchacha (1 samples, 0.03%)</title><rect x="97.2256%" y="437" width="0.0308%" height="15" fill="rgb(224,219,20)" fg:x="3154" fg:w="1"/><text x="97.4756%" y="447.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::encrypt_in_place_detached (1 samples, 0.03%)</title><rect x="97.2565%" y="469" width="0.0308%" height="15" fill="rgb(222,156,15)" fg:x="3155" fg:w="1"/><text x="97.5065%" y="479.50"></text></g><g><title>universal_hash::UniversalHash::update_padded (1 samples, 0.03%)</title><rect x="97.2565%" y="453" width="0.0308%" height="15" fill="rgb(231,97,17)" fg:x="3155" fg:w="1"/><text x="97.5065%" y="463.50"></text></g><g><title>universal_hash::UniversalHash::update (1 samples, 0.03%)</title><rect x="97.2565%" y="437" width="0.0308%" height="15" fill="rgb(218,70,48)" fg:x="3155" fg:w="1"/><text x="97.5065%" y="447.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (1 samples, 0.03%)</title><rect x="97.2565%" y="421" width="0.0308%" height="15" fill="rgb(212,196,52)" fg:x="3155" fg:w="1"/><text x="97.5065%" y="431.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (1 samples, 0.03%)</title><rect x="97.2565%" y="405" width="0.0308%" height="15" fill="rgb(243,203,18)" fg:x="3155" fg:w="1"/><text x="97.5065%" y="415.50"></text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (1 samples, 0.03%)</title><rect x="97.2565%" y="389" width="0.0308%" height="15" fill="rgb(252,125,41)" fg:x="3155" fg:w="1"/><text x="97.5065%" y="399.50"></text></g><g><title>&lt;poly1305::backend::avx2::State as universal_hash::UhfBackend&gt;::proc_par_blocks (1 samples, 0.03%)</title><rect x="97.2565%" y="373" width="0.0308%" height="15" fill="rgb(223,180,33)" fg:x="3155" fg:w="1"/><text x="97.5065%" y="383.50"></text></g><g><title>poly1305::backend::avx2::State::compute_par_blocks (1 samples, 0.03%)</title><rect x="97.2565%" y="357" width="0.0308%" height="15" fill="rgb(254,159,46)" fg:x="3155" fg:w="1"/><text x="97.5065%" y="367.50"></text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_par_blocks (1 samples, 0.03%)</title><rect x="97.2565%" y="341" width="0.0308%" height="15" fill="rgb(254,38,10)" fg:x="3155" fg:w="1"/><text x="97.5065%" y="351.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (1 samples, 0.03%)</title><rect x="97.2565%" y="325" width="0.0308%" height="15" fill="rgb(208,217,32)" fg:x="3155" fg:w="1"/><text x="97.5065%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.03%)</title><rect x="97.2873%" y="469" width="0.0308%" height="15" fill="rgb(221,120,13)" fg:x="3156" fg:w="1"/><text x="97.5373%" y="479.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.03%)</title><rect x="97.3181%" y="469" width="0.0308%" height="15" fill="rgb(246,54,52)" fg:x="3157" fg:w="1"/><text x="97.5681%" y="479.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.03%)</title><rect x="97.3181%" y="453" width="0.0308%" height="15" fill="rgb(242,34,25)" fg:x="3157" fg:w="1"/><text x="97.5681%" y="463.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.03%)</title><rect x="97.3181%" y="437" width="0.0308%" height="15" fill="rgb(247,209,9)" fg:x="3157" fg:w="1"/><text x="97.5681%" y="447.50"></text></g><g><title>tftp::encryption::Encryptor&lt;R&gt;::encrypt (6 samples, 0.18%)</title><rect x="97.1948%" y="501" width="0.1850%" height="15" fill="rgb(228,71,26)" fg:x="3153" fg:w="6"/><text x="97.4448%" y="511.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::encrypt_in_place_detached (6 samples, 0.18%)</title><rect x="97.1948%" y="485" width="0.1850%" height="15" fill="rgb(222,145,49)" fg:x="3153" fg:w="6"/><text x="97.4448%" y="495.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="97.3490%" y="469" width="0.0308%" height="15" fill="rgb(218,121,17)" fg:x="3158" fg:w="1"/><text x="97.5990%" y="479.50"></text></g><g><title>tftp::server::connection::Connection&lt;B,Rng&gt;::send_packet (16 samples, 0.49%)</title><rect x="96.9482%" y="549" width="0.4932%" height="15" fill="rgb(244,50,7)" fg:x="3145" fg:w="16"/><text x="97.1982%" y="559.50"></text></g><g><title>tftp::server::connection::Connection&lt;B,Rng&gt;::send_bytes (16 samples, 0.49%)</title><rect x="96.9482%" y="533" width="0.4932%" height="15" fill="rgb(246,229,37)" fg:x="3145" fg:w="16"/><text x="97.1982%" y="543.50"></text></g><g><title>tftp::encrypted_packet::EncryptedPacket::encrypt (8 samples, 0.25%)</title><rect x="97.1948%" y="517" width="0.2466%" height="15" fill="rgb(225,18,5)" fg:x="3153" fg:w="8"/><text x="97.4448%" y="527.50"></text></g><g><title>tftp::encryption::apply_bit_padding (2 samples, 0.06%)</title><rect x="97.3798%" y="501" width="0.0617%" height="15" fill="rgb(213,204,8)" fg:x="3159" fg:w="2"/><text x="97.6298%" y="511.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.06%)</title><rect x="97.3798%" y="485" width="0.0617%" height="15" fill="rgb(238,103,6)" fg:x="3159" fg:w="2"/><text x="97.6298%" y="495.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.06%)</title><rect x="97.3798%" y="469" width="0.0617%" height="15" fill="rgb(222,25,35)" fg:x="3159" fg:w="2"/><text x="97.6298%" y="479.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.03%)</title><rect x="97.4414%" y="517" width="0.0308%" height="15" fill="rgb(213,203,35)" fg:x="3161" fg:w="1"/><text x="97.6914%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::truncate (1 samples, 0.03%)</title><rect x="97.4723%" y="421" width="0.0308%" height="15" fill="rgb(221,79,53)" fg:x="3162" fg:w="1"/><text x="97.7223%" y="431.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (1 samples, 0.03%)</title><rect x="97.4723%" y="405" width="0.0308%" height="15" fill="rgb(243,200,35)" fg:x="3162" fg:w="1"/><text x="97.7223%" y="415.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (1 samples, 0.03%)</title><rect x="97.4723%" y="389" width="0.0308%" height="15" fill="rgb(248,60,25)" fg:x="3162" fg:w="1"/><text x="97.7223%" y="399.50"></text></g><g><title>dput (1 samples, 0.03%)</title><rect x="97.5647%" y="341" width="0.0308%" height="15" fill="rgb(227,53,46)" fg:x="3165" fg:w="1"/><text x="97.8147%" y="351.50"></text></g><g><title>lockref_put_return (1 samples, 0.03%)</title><rect x="97.5647%" y="325" width="0.0308%" height="15" fill="rgb(216,120,32)" fg:x="3165" fg:w="1"/><text x="97.8147%" y="335.50"></text></g><g><title>__kmalloc (2 samples, 0.06%)</title><rect x="97.7497%" y="309" width="0.0617%" height="15" fill="rgb(220,134,1)" fg:x="3171" fg:w="2"/><text x="97.9997%" y="319.50"></text></g><g><title>kmalloc_slab (1 samples, 0.03%)</title><rect x="97.7805%" y="293" width="0.0308%" height="15" fill="rgb(237,168,5)" fg:x="3172" fg:w="1"/><text x="98.0305%" y="303.50"></text></g><g><title>__fsnotify_parent (16 samples, 0.49%)</title><rect x="97.5031%" y="357" width="0.4932%" height="15" fill="rgb(231,100,33)" fg:x="3163" fg:w="16"/><text x="97.7531%" y="367.50"></text></g><g><title>fsnotify (13 samples, 0.40%)</title><rect x="97.5956%" y="341" width="0.4007%" height="15" fill="rgb(236,177,47)" fg:x="3166" fg:w="13"/><text x="97.8456%" y="351.50"></text></g><g><title>inotify_handle_inode_event (9 samples, 0.28%)</title><rect x="97.7189%" y="325" width="0.2774%" height="15" fill="rgb(235,7,49)" fg:x="3170" fg:w="9"/><text x="97.9689%" y="335.50"></text></g><g><title>fsnotify_insert_event (6 samples, 0.18%)</title><rect x="97.8113%" y="309" width="0.1850%" height="15" fill="rgb(232,119,22)" fg:x="3173" fg:w="6"/><text x="98.0613%" y="319.50"></text></g><g><title>__wake_up_common_lock (6 samples, 0.18%)</title><rect x="97.8113%" y="293" width="0.1850%" height="15" fill="rgb(254,73,53)" fg:x="3173" fg:w="6"/><text x="98.0613%" y="303.50"></text></g><g><title>__wake_up_common (6 samples, 0.18%)</title><rect x="97.8113%" y="277" width="0.1850%" height="15" fill="rgb(251,35,20)" fg:x="3173" fg:w="6"/><text x="98.0613%" y="287.50"></text></g><g><title>pollwake (3 samples, 0.09%)</title><rect x="97.9038%" y="261" width="0.0925%" height="15" fill="rgb(241,119,20)" fg:x="3176" fg:w="3"/><text x="98.1538%" y="271.50"></text></g><g><title>try_to_wake_up (3 samples, 0.09%)</title><rect x="97.9038%" y="245" width="0.0925%" height="15" fill="rgb(207,102,14)" fg:x="3176" fg:w="3"/><text x="98.1538%" y="255.50"></text></g><g><title>ttwu_queue_wakelist (2 samples, 0.06%)</title><rect x="97.9346%" y="229" width="0.0617%" height="15" fill="rgb(248,201,50)" fg:x="3177" fg:w="2"/><text x="98.1846%" y="239.50"></text></g><g><title>default_send_IPI_single_phys (1 samples, 0.03%)</title><rect x="97.9655%" y="213" width="0.0308%" height="15" fill="rgb(222,185,44)" fg:x="3178" fg:w="1"/><text x="98.2155%" y="223.50"></text></g><g><title>__default_send_IPI_dest_field (1 samples, 0.03%)</title><rect x="97.9655%" y="197" width="0.0308%" height="15" fill="rgb(218,107,18)" fg:x="3178" fg:w="1"/><text x="98.2155%" y="207.50"></text></g><g><title>__ext4_journal_stop (1 samples, 0.03%)</title><rect x="98.0271%" y="293" width="0.0308%" height="15" fill="rgb(237,177,39)" fg:x="3180" fg:w="1"/><text x="98.2771%" y="303.50"></text></g><g><title>jbd2_journal_stop (1 samples, 0.03%)</title><rect x="98.0271%" y="277" width="0.0308%" height="15" fill="rgb(246,69,6)" fg:x="3180" fg:w="1"/><text x="98.2771%" y="287.50"></text></g><g><title>kmem_cache_free (1 samples, 0.03%)</title><rect x="98.0271%" y="261" width="0.0308%" height="15" fill="rgb(234,208,37)" fg:x="3180" fg:w="1"/><text x="98.2771%" y="271.50"></text></g><g><title>file_modified_flags (3 samples, 0.09%)</title><rect x="97.9963%" y="341" width="0.0925%" height="15" fill="rgb(225,4,6)" fg:x="3179" fg:w="3"/><text x="98.2463%" y="351.50"></text></g><g><title>generic_update_time (2 samples, 0.06%)</title><rect x="98.0271%" y="325" width="0.0617%" height="15" fill="rgb(233,45,0)" fg:x="3180" fg:w="2"/><text x="98.2771%" y="335.50"></text></g><g><title>__mark_inode_dirty (2 samples, 0.06%)</title><rect x="98.0271%" y="309" width="0.0617%" height="15" fill="rgb(226,136,5)" fg:x="3180" fg:w="2"/><text x="98.2771%" y="319.50"></text></g><g><title>ext4_dirty_inode (1 samples, 0.03%)</title><rect x="98.0580%" y="293" width="0.0308%" height="15" fill="rgb(211,91,47)" fg:x="3181" fg:w="1"/><text x="98.3080%" y="303.50"></text></g><g><title>__ext4_mark_inode_dirty (1 samples, 0.03%)</title><rect x="98.0580%" y="277" width="0.0308%" height="15" fill="rgb(242,88,51)" fg:x="3181" fg:w="1"/><text x="98.3080%" y="287.50"></text></g><g><title>ext4_reserve_inode_write (1 samples, 0.03%)</title><rect x="98.0580%" y="261" width="0.0308%" height="15" fill="rgb(230,91,28)" fg:x="3181" fg:w="1"/><text x="98.3080%" y="271.50"></text></g><g><title>ext4_get_inode_loc (1 samples, 0.03%)</title><rect x="98.0580%" y="245" width="0.0308%" height="15" fill="rgb(254,186,29)" fg:x="3181" fg:w="1"/><text x="98.3080%" y="255.50"></text></g><g><title>__ext4_get_inode_loc (1 samples, 0.03%)</title><rect x="98.0580%" y="229" width="0.0308%" height="15" fill="rgb(238,6,4)" fg:x="3181" fg:w="1"/><text x="98.3080%" y="239.50"></text></g><g><title>ext4_get_group_desc (1 samples, 0.03%)</title><rect x="98.0580%" y="213" width="0.0308%" height="15" fill="rgb(221,151,16)" fg:x="3181" fg:w="1"/><text x="98.3080%" y="223.50"></text></g><g><title>balance_dirty_pages_ratelimited_flags (3 samples, 0.09%)</title><rect x="98.0888%" y="325" width="0.0925%" height="15" fill="rgb(251,143,52)" fg:x="3182" fg:w="3"/><text x="98.3388%" y="335.50"></text></g><g><title>__radix_tree_lookup (1 samples, 0.03%)</title><rect x="98.1504%" y="309" width="0.0308%" height="15" fill="rgb(206,90,15)" fg:x="3184" fg:w="1"/><text x="98.4004%" y="319.50"></text></g><g><title>create_empty_buffers (1 samples, 0.03%)</title><rect x="98.2121%" y="293" width="0.0308%" height="15" fill="rgb(218,35,8)" fg:x="3186" fg:w="1"/><text x="98.4621%" y="303.50"></text></g><g><title>alloc_page_buffers (1 samples, 0.03%)</title><rect x="98.2121%" y="277" width="0.0308%" height="15" fill="rgb(239,215,6)" fg:x="3186" fg:w="1"/><text x="98.4621%" y="287.50"></text></g><g><title>alloc_buffer_head (1 samples, 0.03%)</title><rect x="98.2121%" y="261" width="0.0308%" height="15" fill="rgb(245,116,39)" fg:x="3186" fg:w="1"/><text x="98.4621%" y="271.50"></text></g><g><title>kmem_cache_alloc (1 samples, 0.03%)</title><rect x="98.2121%" y="245" width="0.0308%" height="15" fill="rgb(242,65,28)" fg:x="3186" fg:w="1"/><text x="98.4621%" y="255.50"></text></g><g><title>get_obj_cgroup_from_current (1 samples, 0.03%)</title><rect x="98.2121%" y="229" width="0.0308%" height="15" fill="rgb(252,132,53)" fg:x="3186" fg:w="1"/><text x="98.4621%" y="239.50"></text></g><g><title>__get_obj_cgroup_from_memcg (1 samples, 0.03%)</title><rect x="98.2121%" y="213" width="0.0308%" height="15" fill="rgb(224,159,50)" fg:x="3186" fg:w="1"/><text x="98.4621%" y="223.50"></text></g><g><title>ext4_block_write_begin (4 samples, 0.12%)</title><rect x="98.1813%" y="309" width="0.1233%" height="15" fill="rgb(224,93,4)" fg:x="3185" fg:w="4"/><text x="98.4313%" y="319.50"></text></g><g><title>ext4_da_get_block_prep (2 samples, 0.06%)</title><rect x="98.2429%" y="293" width="0.0617%" height="15" fill="rgb(208,81,34)" fg:x="3187" fg:w="2"/><text x="98.4929%" y="303.50"></text></g><g><title>ext4_es_insert_delayed_block (1 samples, 0.03%)</title><rect x="98.2737%" y="277" width="0.0308%" height="15" fill="rgb(233,92,54)" fg:x="3188" fg:w="1"/><text x="98.5237%" y="287.50"></text></g><g><title>_raw_write_lock (1 samples, 0.03%)</title><rect x="98.2737%" y="261" width="0.0308%" height="15" fill="rgb(237,21,14)" fg:x="3188" fg:w="1"/><text x="98.5237%" y="271.50"></text></g><g><title>preempt_count_add (1 samples, 0.03%)</title><rect x="98.2737%" y="245" width="0.0308%" height="15" fill="rgb(249,128,51)" fg:x="3188" fg:w="1"/><text x="98.5237%" y="255.50"></text></g><g><title>mem_cgroup_charge_statistics (1 samples, 0.03%)</title><rect x="98.3046%" y="213" width="0.0308%" height="15" fill="rgb(223,129,24)" fg:x="3189" fg:w="1"/><text x="98.5546%" y="223.50"></text></g><g><title>__count_memcg_events (1 samples, 0.03%)</title><rect x="98.3046%" y="197" width="0.0308%" height="15" fill="rgb(231,168,25)" fg:x="3189" fg:w="1"/><text x="98.5546%" y="207.50"></text></g><g><title>charge_memcg (2 samples, 0.06%)</title><rect x="98.3046%" y="229" width="0.0617%" height="15" fill="rgb(224,39,20)" fg:x="3189" fg:w="2"/><text x="98.5546%" y="239.50"></text></g><g><title>memcg_check_events (1 samples, 0.03%)</title><rect x="98.3354%" y="213" width="0.0308%" height="15" fill="rgb(225,152,53)" fg:x="3190" fg:w="1"/><text x="98.5854%" y="223.50"></text></g><g><title>check_preemption_disabled (1 samples, 0.03%)</title><rect x="98.3354%" y="197" width="0.0308%" height="15" fill="rgb(252,17,24)" fg:x="3190" fg:w="1"/><text x="98.5854%" y="207.50"></text></g><g><title>ext4_da_write_begin (7 samples, 0.22%)</title><rect x="98.1813%" y="325" width="0.2158%" height="15" fill="rgb(250,114,30)" fg:x="3185" fg:w="7"/><text x="98.4313%" y="335.50"></text></g><g><title>pagecache_get_page (3 samples, 0.09%)</title><rect x="98.3046%" y="309" width="0.0925%" height="15" fill="rgb(229,5,4)" fg:x="3189" fg:w="3"/><text x="98.5546%" y="319.50"></text></g><g><title>__filemap_get_folio (3 samples, 0.09%)</title><rect x="98.3046%" y="293" width="0.0925%" height="15" fill="rgb(225,176,49)" fg:x="3189" fg:w="3"/><text x="98.5546%" y="303.50"></text></g><g><title>filemap_add_folio (3 samples, 0.09%)</title><rect x="98.3046%" y="277" width="0.0925%" height="15" fill="rgb(224,221,49)" fg:x="3189" fg:w="3"/><text x="98.5546%" y="287.50"></text></g><g><title>__filemap_add_folio (3 samples, 0.09%)</title><rect x="98.3046%" y="261" width="0.0925%" height="15" fill="rgb(253,169,27)" fg:x="3189" fg:w="3"/><text x="98.5546%" y="271.50"></text></g><g><title>__mem_cgroup_charge (3 samples, 0.09%)</title><rect x="98.3046%" y="245" width="0.0925%" height="15" fill="rgb(211,206,16)" fg:x="3189" fg:w="3"/><text x="98.5546%" y="255.50"></text></g><g><title>get_mem_cgroup_from_mm (1 samples, 0.03%)</title><rect x="98.3662%" y="229" width="0.0308%" height="15" fill="rgb(244,87,35)" fg:x="3191" fg:w="1"/><text x="98.6162%" y="239.50"></text></g><g><title>__mod_node_page_state (1 samples, 0.03%)</title><rect x="98.4895%" y="261" width="0.0308%" height="15" fill="rgb(246,28,10)" fg:x="3195" fg:w="1"/><text x="98.7395%" y="271.50"></text></g><g><title>check_preemption_disabled (1 samples, 0.03%)</title><rect x="98.4895%" y="245" width="0.0308%" height="15" fill="rgb(229,12,44)" fg:x="3195" fg:w="1"/><text x="98.7395%" y="255.50"></text></g><g><title>__block_commit_write.constprop.0.isra.0 (3 samples, 0.09%)</title><rect x="98.4587%" y="309" width="0.0925%" height="15" fill="rgb(210,145,37)" fg:x="3194" fg:w="3"/><text x="98.7087%" y="319.50"></text></g><g><title>mark_buffer_dirty (2 samples, 0.06%)</title><rect x="98.4895%" y="293" width="0.0617%" height="15" fill="rgb(227,112,52)" fg:x="3195" fg:w="2"/><text x="98.7395%" y="303.50"></text></g><g><title>__folio_mark_dirty (2 samples, 0.06%)</title><rect x="98.4895%" y="277" width="0.0617%" height="15" fill="rgb(238,155,34)" fg:x="3195" fg:w="2"/><text x="98.7395%" y="287.50"></text></g><g><title>__mod_zone_page_state (1 samples, 0.03%)</title><rect x="98.5203%" y="261" width="0.0308%" height="15" fill="rgb(239,226,36)" fg:x="3196" fg:w="1"/><text x="98.7703%" y="271.50"></text></g><g><title>check_preemption_disabled (1 samples, 0.03%)</title><rect x="98.5203%" y="245" width="0.0308%" height="15" fill="rgb(230,16,23)" fg:x="3196" fg:w="1"/><text x="98.7703%" y="255.50"></text></g><g><title>__ext4_journal_stop (1 samples, 0.03%)</title><rect x="98.5512%" y="293" width="0.0308%" height="15" fill="rgb(236,171,36)" fg:x="3197" fg:w="1"/><text x="98.8012%" y="303.50"></text></g><g><title>jbd2_journal_stop (1 samples, 0.03%)</title><rect x="98.5512%" y="277" width="0.0308%" height="15" fill="rgb(221,22,14)" fg:x="3197" fg:w="1"/><text x="98.8012%" y="287.50"></text></g><g><title>stop_this_handle (1 samples, 0.03%)</title><rect x="98.5512%" y="261" width="0.0308%" height="15" fill="rgb(242,43,11)" fg:x="3197" fg:w="1"/><text x="98.8012%" y="271.50"></text></g><g><title>ext4_mark_iloc_dirty (2 samples, 0.06%)</title><rect x="98.5820%" y="261" width="0.0617%" height="15" fill="rgb(232,69,23)" fg:x="3198" fg:w="2"/><text x="98.8320%" y="271.50"></text></g><g><title>ext4_fill_raw_inode (1 samples, 0.03%)</title><rect x="98.6128%" y="245" width="0.0308%" height="15" fill="rgb(216,180,54)" fg:x="3199" fg:w="1"/><text x="98.8628%" y="255.50"></text></g><g><title>__ext4_mark_inode_dirty (6 samples, 0.18%)</title><rect x="98.5820%" y="277" width="0.1850%" height="15" fill="rgb(216,5,24)" fg:x="3198" fg:w="6"/><text x="98.8320%" y="287.50"></text></g><g><title>ext4_reserve_inode_write (4 samples, 0.12%)</title><rect x="98.6436%" y="261" width="0.1233%" height="15" fill="rgb(225,89,9)" fg:x="3200" fg:w="4"/><text x="98.8936%" y="271.50"></text></g><g><title>ext4_get_inode_loc (4 samples, 0.12%)</title><rect x="98.6436%" y="245" width="0.1233%" height="15" fill="rgb(243,75,33)" fg:x="3200" fg:w="4"/><text x="98.8936%" y="255.50"></text></g><g><title>__ext4_get_inode_loc (3 samples, 0.09%)</title><rect x="98.6745%" y="229" width="0.0925%" height="15" fill="rgb(247,141,45)" fg:x="3201" fg:w="3"/><text x="98.9245%" y="239.50"></text></g><g><title>ext4_get_group_desc (1 samples, 0.03%)</title><rect x="98.7361%" y="213" width="0.0308%" height="15" fill="rgb(232,177,36)" fg:x="3203" fg:w="1"/><text x="98.9861%" y="223.50"></text></g><g><title>kmem_cache_alloc (2 samples, 0.06%)</title><rect x="98.7670%" y="261" width="0.0617%" height="15" fill="rgb(219,125,36)" fg:x="3204" fg:w="2"/><text x="99.0170%" y="271.50"></text></g><g><title>memcg_slab_post_alloc_hook (1 samples, 0.03%)</title><rect x="98.7978%" y="245" width="0.0308%" height="15" fill="rgb(227,94,9)" fg:x="3205" fg:w="1"/><text x="99.0478%" y="255.50"></text></g><g><title>ext4_buffered_write_iter (28 samples, 0.86%)</title><rect x="97.9963%" y="357" width="0.8631%" height="15" fill="rgb(240,34,52)" fg:x="3179" fg:w="28"/><text x="98.2463%" y="367.50"></text></g><g><title>generic_perform_write (25 samples, 0.77%)</title><rect x="98.0888%" y="341" width="0.7707%" height="15" fill="rgb(216,45,12)" fg:x="3182" fg:w="25"/><text x="98.3388%" y="351.50"></text></g><g><title>generic_write_end (15 samples, 0.46%)</title><rect x="98.3970%" y="325" width="0.4624%" height="15" fill="rgb(246,21,19)" fg:x="3192" fg:w="15"/><text x="98.6470%" y="335.50"></text></g><g><title>__mark_inode_dirty (10 samples, 0.31%)</title><rect x="98.5512%" y="309" width="0.3083%" height="15" fill="rgb(213,98,42)" fg:x="3197" fg:w="10"/><text x="98.8012%" y="319.50"></text></g><g><title>ext4_dirty_inode (9 samples, 0.28%)</title><rect x="98.5820%" y="293" width="0.2774%" height="15" fill="rgb(250,136,47)" fg:x="3198" fg:w="9"/><text x="98.8320%" y="303.50"></text></g><g><title>jbd2__journal_start (3 samples, 0.09%)</title><rect x="98.7670%" y="277" width="0.0925%" height="15" fill="rgb(251,124,27)" fg:x="3204" fg:w="3"/><text x="99.0170%" y="287.50"></text></g><g><title>start_this_handle (1 samples, 0.03%)</title><rect x="98.8286%" y="261" width="0.0308%" height="15" fill="rgb(229,180,14)" fg:x="3206" fg:w="1"/><text x="99.0786%" y="271.50"></text></g><g><title>clone3 (194 samples, 5.98%)</title><rect x="92.9100%" y="805" width="5.9803%" height="15" fill="rgb(245,216,25)" fg:x="3014" fg:w="194"/><text x="93.1600%" y="815.50">clone3</text></g><g><title>start_thread (194 samples, 5.98%)</title><rect x="92.9100%" y="789" width="5.9803%" height="15" fill="rgb(251,43,5)" fg:x="3014" fg:w="194"/><text x="93.1600%" y="799.50">start_th..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (193 samples, 5.95%)</title><rect x="92.9408%" y="773" width="5.9494%" height="15" fill="rgb(250,128,24)" fg:x="3015" fg:w="193"/><text x="93.1908%" y="783.50">std::sys..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (193 samples, 5.95%)</title><rect x="92.9408%" y="757" width="5.9494%" height="15" fill="rgb(217,117,27)" fg:x="3015" fg:w="193"/><text x="93.1908%" y="767.50">&lt;alloc::..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (193 samples, 5.95%)</title><rect x="92.9408%" y="741" width="5.9494%" height="15" fill="rgb(245,147,4)" fg:x="3015" fg:w="193"/><text x="93.1908%" y="751.50">&lt;alloc::..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (193 samples, 5.95%)</title><rect x="92.9408%" y="725" width="5.9494%" height="15" fill="rgb(242,201,35)" fg:x="3015" fg:w="193"/><text x="93.1908%" y="735.50">core::op..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (193 samples, 5.95%)</title><rect x="92.9408%" y="709" width="5.9494%" height="15" fill="rgb(218,181,1)" fg:x="3015" fg:w="193"/><text x="93.1908%" y="719.50">std::thr..</text></g><g><title>std::panic::catch_unwind (193 samples, 5.95%)</title><rect x="92.9408%" y="693" width="5.9494%" height="15" fill="rgb(222,6,29)" fg:x="3015" fg:w="193"/><text x="93.1908%" y="703.50">std::pan..</text></g><g><title>std::panicking::try (193 samples, 5.95%)</title><rect x="92.9408%" y="677" width="5.9494%" height="15" fill="rgb(208,186,3)" fg:x="3015" fg:w="193"/><text x="93.1908%" y="687.50">std::pan..</text></g><g><title>__rust_try (193 samples, 5.95%)</title><rect x="92.9408%" y="661" width="5.9494%" height="15" fill="rgb(216,36,26)" fg:x="3015" fg:w="193"/><text x="93.1908%" y="671.50">__rust_t..</text></g><g><title>std::panicking::try::do_call (193 samples, 5.95%)</title><rect x="92.9408%" y="645" width="5.9494%" height="15" fill="rgb(248,201,23)" fg:x="3015" fg:w="193"/><text x="93.1908%" y="655.50">std::pan..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (193 samples, 5.95%)</title><rect x="92.9408%" y="629" width="5.9494%" height="15" fill="rgb(251,170,31)" fg:x="3015" fg:w="193"/><text x="93.1908%" y="639.50">&lt;core::p..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (193 samples, 5.95%)</title><rect x="92.9408%" y="613" width="5.9494%" height="15" fill="rgb(207,110,25)" fg:x="3015" fg:w="193"/><text x="93.1908%" y="623.50">std::thr..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (193 samples, 5.95%)</title><rect x="92.9408%" y="597" width="5.9494%" height="15" fill="rgb(250,54,15)" fg:x="3015" fg:w="193"/><text x="93.1908%" y="607.50">std::sys..</text></g><g><title>tftp::server::multi_thread::spawn_writer::{{closure}} (193 samples, 5.95%)</title><rect x="92.9408%" y="581" width="5.9494%" height="15" fill="rgb(227,68,33)" fg:x="3015" fg:w="193"/><text x="93.1908%" y="591.50">tftp::se..</text></g><g><title>tftp::server::helpers::write::handle_write (155 samples, 4.78%)</title><rect x="94.1122%" y="565" width="4.7781%" height="15" fill="rgb(238,34,41)" fg:x="3053" fg:w="155"/><text x="94.3622%" y="575.50">tftp::..</text></g><g><title>tftp::server::helpers::write::write_block (47 samples, 1.45%)</title><rect x="97.4414%" y="549" width="1.4488%" height="15" fill="rgb(220,11,15)" fg:x="3161" fg:w="47"/><text x="97.6914%" y="559.50"></text></g><g><title>&lt;tftp::writers::single_block_writer::SingleBlockWriter&lt;W&gt; as tftp::writers::block_writer::BlockWriter&gt;::write_block (47 samples, 1.45%)</title><rect x="97.4414%" y="533" width="1.4488%" height="15" fill="rgb(246,111,35)" fg:x="3161" fg:w="47"/><text x="97.6914%" y="543.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (46 samples, 1.42%)</title><rect x="97.4723%" y="517" width="1.4180%" height="15" fill="rgb(209,88,53)" fg:x="3162" fg:w="46"/><text x="97.7223%" y="527.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (46 samples, 1.42%)</title><rect x="97.4723%" y="501" width="1.4180%" height="15" fill="rgb(231,185,47)" fg:x="3162" fg:w="46"/><text x="97.7223%" y="511.50"></text></g><g><title>std::sys::unix::fs::File::write (46 samples, 1.42%)</title><rect x="97.4723%" y="485" width="1.4180%" height="15" fill="rgb(233,154,1)" fg:x="3162" fg:w="46"/><text x="97.7223%" y="495.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (46 samples, 1.42%)</title><rect x="97.4723%" y="469" width="1.4180%" height="15" fill="rgb(225,15,46)" fg:x="3162" fg:w="46"/><text x="97.7223%" y="479.50"></text></g><g><title>__GI___libc_write (46 samples, 1.42%)</title><rect x="97.4723%" y="453" width="1.4180%" height="15" fill="rgb(211,135,41)" fg:x="3162" fg:w="46"/><text x="97.7223%" y="463.50"></text></g><g><title>__GI___libc_write (46 samples, 1.42%)</title><rect x="97.4723%" y="437" width="1.4180%" height="15" fill="rgb(208,54,0)" fg:x="3162" fg:w="46"/><text x="97.7223%" y="447.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (45 samples, 1.39%)</title><rect x="97.5031%" y="421" width="1.3872%" height="15" fill="rgb(244,136,14)" fg:x="3163" fg:w="45"/><text x="97.7531%" y="431.50"></text></g><g><title>do_syscall_64 (45 samples, 1.39%)</title><rect x="97.5031%" y="405" width="1.3872%" height="15" fill="rgb(241,56,14)" fg:x="3163" fg:w="45"/><text x="97.7531%" y="415.50"></text></g><g><title>ksys_write (45 samples, 1.39%)</title><rect x="97.5031%" y="389" width="1.3872%" height="15" fill="rgb(205,80,24)" fg:x="3163" fg:w="45"/><text x="97.7531%" y="399.50"></text></g><g><title>vfs_write (45 samples, 1.39%)</title><rect x="97.5031%" y="373" width="1.3872%" height="15" fill="rgb(220,57,4)" fg:x="3163" fg:w="45"/><text x="97.7531%" y="383.50"></text></g><g><title>preempt_count_sub (1 samples, 0.03%)</title><rect x="98.8594%" y="357" width="0.0308%" height="15" fill="rgb(226,193,50)" fg:x="3207" fg:w="1"/><text x="99.1094%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.03%)</title><rect x="98.8903%" y="805" width="0.0308%" height="15" fill="rgb(231,168,22)" fg:x="3208" fg:w="1"/><text x="99.1403%" y="815.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (1 samples, 0.03%)</title><rect x="98.8903%" y="789" width="0.0308%" height="15" fill="rgb(254,215,14)" fg:x="3208" fg:w="1"/><text x="99.1403%" y="799.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="98.9211%" y="805" width="0.0308%" height="15" fill="rgb(211,115,16)" fg:x="3209" fg:w="1"/><text x="99.1711%" y="815.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.03%)</title><rect x="98.9211%" y="789" width="0.0308%" height="15" fill="rgb(236,210,16)" fg:x="3209" fg:w="1"/><text x="99.1711%" y="799.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.03%)</title><rect x="98.9519%" y="805" width="0.0308%" height="15" fill="rgb(221,94,12)" fg:x="3210" fg:w="1"/><text x="99.2019%" y="815.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (1 samples, 0.03%)</title><rect x="98.9519%" y="789" width="0.0308%" height="15" fill="rgb(235,218,49)" fg:x="3210" fg:w="1"/><text x="99.2019%" y="799.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.03%)</title><rect x="98.9827%" y="805" width="0.0308%" height="15" fill="rgb(217,114,14)" fg:x="3211" fg:w="1"/><text x="99.2327%" y="815.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.03%)</title><rect x="98.9827%" y="789" width="0.0308%" height="15" fill="rgb(216,145,22)" fg:x="3211" fg:w="1"/><text x="99.2327%" y="799.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.03%)</title><rect x="99.0136%" y="805" width="0.0308%" height="15" fill="rgb(217,112,39)" fg:x="3212" fg:w="1"/><text x="99.2636%" y="815.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.03%)</title><rect x="99.0136%" y="789" width="0.0308%" height="15" fill="rgb(225,85,32)" fg:x="3212" fg:w="1"/><text x="99.2636%" y="799.50"></text></g><g><title>core::slice::raw::from_raw_parts (2 samples, 0.06%)</title><rect x="99.0444%" y="805" width="0.0617%" height="15" fill="rgb(245,209,47)" fg:x="3213" fg:w="2"/><text x="99.2944%" y="815.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.03%)</title><rect x="99.0752%" y="789" width="0.0308%" height="15" fill="rgb(218,220,15)" fg:x="3214" fg:w="1"/><text x="99.3252%" y="799.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (1 samples, 0.03%)</title><rect x="99.0752%" y="773" width="0.0308%" height="15" fill="rgb(222,202,31)" fg:x="3214" fg:w="1"/><text x="99.3252%" y="783.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (1 samples, 0.03%)</title><rect x="99.1060%" y="805" width="0.0308%" height="15" fill="rgb(243,203,4)" fg:x="3215" fg:w="1"/><text x="99.3560%" y="815.50"></text></g><g><title>_copy_from_user (1 samples, 0.03%)</title><rect x="99.1369%" y="757" width="0.0308%" height="15" fill="rgb(237,92,17)" fg:x="3216" fg:w="1"/><text x="99.3869%" y="767.50"></text></g><g><title>copy_user_generic_string (1 samples, 0.03%)</title><rect x="99.1369%" y="741" width="0.0308%" height="15" fill="rgb(231,119,7)" fg:x="3216" fg:w="1"/><text x="99.3869%" y="751.50"></text></g><g><title>ep_item_poll.isra.0 (1 samples, 0.03%)</title><rect x="99.1677%" y="741" width="0.0308%" height="15" fill="rgb(237,82,41)" fg:x="3217" fg:w="1"/><text x="99.4177%" y="751.50"></text></g><g><title>sock_poll (1 samples, 0.03%)</title><rect x="99.1677%" y="725" width="0.0308%" height="15" fill="rgb(226,81,48)" fg:x="3217" fg:w="1"/><text x="99.4177%" y="735.50"></text></g><g><title>__x64_sys_epoll_ctl (4 samples, 0.12%)</title><rect x="99.1369%" y="773" width="0.1233%" height="15" fill="rgb(234,70,51)" fg:x="3216" fg:w="4"/><text x="99.3869%" y="783.50"></text></g><g><title>do_epoll_ctl (3 samples, 0.09%)</title><rect x="99.1677%" y="757" width="0.0925%" height="15" fill="rgb(251,86,4)" fg:x="3217" fg:w="3"/><text x="99.4177%" y="767.50"></text></g><g><title>fput (2 samples, 0.06%)</title><rect x="99.1985%" y="741" width="0.0617%" height="15" fill="rgb(244,144,28)" fg:x="3218" fg:w="2"/><text x="99.4485%" y="751.50"></text></g><g><title>__put_user_nocheck_4 (1 samples, 0.03%)</title><rect x="99.2602%" y="741" width="0.0308%" height="15" fill="rgb(232,161,39)" fg:x="3220" fg:w="1"/><text x="99.5102%" y="751.50"></text></g><g><title>_raw_write_lock_irq (1 samples, 0.03%)</title><rect x="99.2910%" y="741" width="0.0308%" height="15" fill="rgb(247,34,51)" fg:x="3221" fg:w="1"/><text x="99.5410%" y="751.50"></text></g><g><title>preempt_count_add (1 samples, 0.03%)</title><rect x="99.2910%" y="725" width="0.0308%" height="15" fill="rgb(225,132,2)" fg:x="3221" fg:w="1"/><text x="99.5410%" y="735.50"></text></g><g><title>in_lock_functions (1 samples, 0.03%)</title><rect x="99.2910%" y="709" width="0.0308%" height="15" fill="rgb(209,159,44)" fg:x="3221" fg:w="1"/><text x="99.5410%" y="719.50"></text></g><g><title>__x64_sys_epoll_wait (3 samples, 0.09%)</title><rect x="99.2602%" y="773" width="0.0925%" height="15" fill="rgb(251,214,1)" fg:x="3220" fg:w="3"/><text x="99.5102%" y="783.50"></text></g><g><title>do_epoll_wait (3 samples, 0.09%)</title><rect x="99.2602%" y="757" width="0.0925%" height="15" fill="rgb(247,84,47)" fg:x="3220" fg:w="3"/><text x="99.5102%" y="767.50"></text></g><g><title>schedule_hrtimeout_range_clock (1 samples, 0.03%)</title><rect x="99.3218%" y="741" width="0.0308%" height="15" fill="rgb(240,111,43)" fg:x="3222" fg:w="1"/><text x="99.5718%" y="751.50"></text></g><g><title>schedule (1 samples, 0.03%)</title><rect x="99.3218%" y="725" width="0.0308%" height="15" fill="rgb(215,214,35)" fg:x="3222" fg:w="1"/><text x="99.5718%" y="735.50"></text></g><g><title>__schedule (1 samples, 0.03%)</title><rect x="99.3218%" y="709" width="0.0308%" height="15" fill="rgb(248,207,23)" fg:x="3222" fg:w="1"/><text x="99.5718%" y="719.50"></text></g><g><title>rcu_note_context_switch (1 samples, 0.03%)</title><rect x="99.3218%" y="693" width="0.0308%" height="15" fill="rgb(214,186,4)" fg:x="3222" fg:w="1"/><text x="99.5718%" y="703.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.03%)</title><rect x="99.3527%" y="773" width="0.0308%" height="15" fill="rgb(220,133,22)" fg:x="3223" fg:w="1"/><text x="99.6027%" y="783.50"></text></g><g><title>do_execveat_common.isra.0 (1 samples, 0.03%)</title><rect x="99.3527%" y="757" width="0.0308%" height="15" fill="rgb(239,134,19)" fg:x="3223" fg:w="1"/><text x="99.6027%" y="767.50"></text></g><g><title>bprm_execve (1 samples, 0.03%)</title><rect x="99.3527%" y="741" width="0.0308%" height="15" fill="rgb(250,140,9)" fg:x="3223" fg:w="1"/><text x="99.6027%" y="751.50"></text></g><g><title>load_elf_binary (1 samples, 0.03%)</title><rect x="99.3527%" y="725" width="0.0308%" height="15" fill="rgb(225,59,14)" fg:x="3223" fg:w="1"/><text x="99.6027%" y="735.50"></text></g><g><title>randomize_stack_top (1 samples, 0.03%)</title><rect x="99.3527%" y="709" width="0.0308%" height="15" fill="rgb(214,152,51)" fg:x="3223" fg:w="1"/><text x="99.6027%" y="719.50"></text></g><g><title>get_random_u64 (1 samples, 0.03%)</title><rect x="99.3527%" y="693" width="0.0308%" height="15" fill="rgb(251,227,43)" fg:x="3223" fg:w="1"/><text x="99.6027%" y="703.50"></text></g><g><title>_get_random_bytes (1 samples, 0.03%)</title><rect x="99.3527%" y="677" width="0.0308%" height="15" fill="rgb(241,96,17)" fg:x="3223" fg:w="1"/><text x="99.6027%" y="687.50"></text></g><g><title>crng_make_state (1 samples, 0.03%)</title><rect x="99.3527%" y="661" width="0.0308%" height="15" fill="rgb(234,198,43)" fg:x="3223" fg:w="1"/><text x="99.6027%" y="671.50"></text></g><g><title>crng_fast_key_erasure (1 samples, 0.03%)</title><rect x="99.3527%" y="645" width="0.0308%" height="15" fill="rgb(220,108,29)" fg:x="3223" fg:w="1"/><text x="99.6027%" y="655.50"></text></g><g><title>chacha_block_generic (1 samples, 0.03%)</title><rect x="99.3527%" y="629" width="0.0308%" height="15" fill="rgb(226,163,33)" fg:x="3223" fg:w="1"/><text x="99.6027%" y="639.50"></text></g><g><title>chacha_permute (1 samples, 0.03%)</title><rect x="99.3527%" y="613" width="0.0308%" height="15" fill="rgb(205,194,45)" fg:x="3223" fg:w="1"/><text x="99.6027%" y="623.50"></text></g><g><title>__virt_addr_valid (1 samples, 0.03%)</title><rect x="99.3835%" y="677" width="0.0308%" height="15" fill="rgb(206,143,44)" fg:x="3224" fg:w="1"/><text x="99.6335%" y="687.50"></text></g><g><title>__check_object_size (2 samples, 0.06%)</title><rect x="99.3835%" y="693" width="0.0617%" height="15" fill="rgb(236,136,36)" fg:x="3224" fg:w="2"/><text x="99.6335%" y="703.50"></text></g><g><title>check_stack_object (1 samples, 0.03%)</title><rect x="99.4143%" y="677" width="0.0308%" height="15" fill="rgb(249,172,42)" fg:x="3225" fg:w="1"/><text x="99.6643%" y="687.50"></text></g><g><title>__skb_recv_udp (1 samples, 0.03%)</title><rect x="99.4451%" y="693" width="0.0308%" height="15" fill="rgb(216,139,23)" fg:x="3226" fg:w="1"/><text x="99.6951%" y="703.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="99.4451%" y="677" width="0.0308%" height="15" fill="rgb(207,166,20)" fg:x="3226" fg:w="1"/><text x="99.6951%" y="687.50"></text></g><g><title>inet_recvmsg (4 samples, 0.12%)</title><rect x="99.3835%" y="725" width="0.1233%" height="15" fill="rgb(210,209,22)" fg:x="3224" fg:w="4"/><text x="99.6335%" y="735.50"></text></g><g><title>udp_recvmsg (4 samples, 0.12%)</title><rect x="99.3835%" y="709" width="0.1233%" height="15" fill="rgb(232,118,20)" fg:x="3224" fg:w="4"/><text x="99.6335%" y="719.50"></text></g><g><title>_copy_to_iter (1 samples, 0.03%)</title><rect x="99.4760%" y="693" width="0.0308%" height="15" fill="rgb(238,113,42)" fg:x="3227" fg:w="1"/><text x="99.7260%" y="703.50"></text></g><g><title>copy_user_generic_string (1 samples, 0.03%)</title><rect x="99.4760%" y="677" width="0.0308%" height="15" fill="rgb(231,42,5)" fg:x="3227" fg:w="1"/><text x="99.7260%" y="687.50"></text></g><g><title>__x64_sys_recvfrom (5 samples, 0.15%)</title><rect x="99.3835%" y="773" width="0.1541%" height="15" fill="rgb(243,166,24)" fg:x="3224" fg:w="5"/><text x="99.6335%" y="783.50"></text></g><g><title>__sys_recvfrom (5 samples, 0.15%)</title><rect x="99.3835%" y="757" width="0.1541%" height="15" fill="rgb(237,226,12)" fg:x="3224" fg:w="5"/><text x="99.6335%" y="767.50"></text></g><g><title>sock_recvmsg (5 samples, 0.15%)</title><rect x="99.3835%" y="741" width="0.1541%" height="15" fill="rgb(229,133,24)" fg:x="3224" fg:w="5"/><text x="99.6335%" y="751.50"></text></g><g><title>security_socket_recvmsg (1 samples, 0.03%)</title><rect x="99.5068%" y="725" width="0.0308%" height="15" fill="rgb(238,33,43)" fg:x="3228" fg:w="1"/><text x="99.7568%" y="735.50"></text></g><g><title>aa_sk_perm (1 samples, 0.03%)</title><rect x="99.5068%" y="709" width="0.0308%" height="15" fill="rgb(227,59,38)" fg:x="3228" fg:w="1"/><text x="99.7568%" y="719.50"></text></g><g><title>__hrtimer_init (1 samples, 0.03%)</title><rect x="99.5684%" y="741" width="0.0308%" height="15" fill="rgb(230,97,0)" fg:x="3230" fg:w="1"/><text x="99.8184%" y="751.50"></text></g><g><title>hrtimer_start_range_ns (1 samples, 0.03%)</title><rect x="99.5993%" y="741" width="0.0308%" height="15" fill="rgb(250,173,50)" fg:x="3231" fg:w="1"/><text x="99.8493%" y="751.50"></text></g><g><title>check_preemption_disabled (1 samples, 0.03%)</title><rect x="99.5993%" y="725" width="0.0308%" height="15" fill="rgb(240,15,50)" fg:x="3231" fg:w="1"/><text x="99.8493%" y="735.50"></text></g><g><title>__x64_sys_timerfd_settime (4 samples, 0.12%)</title><rect x="99.5376%" y="773" width="0.1233%" height="15" fill="rgb(221,93,22)" fg:x="3229" fg:w="4"/><text x="99.7876%" y="783.50"></text></g><g><title>do_timerfd_settime (4 samples, 0.12%)</title><rect x="99.5376%" y="757" width="0.1233%" height="15" fill="rgb(245,180,53)" fg:x="3229" fg:w="4"/><text x="99.7876%" y="767.50"></text></g><g><title>hrtimer_try_to_cancel (1 samples, 0.03%)</title><rect x="99.6301%" y="741" width="0.0308%" height="15" fill="rgb(231,88,51)" fg:x="3232" fg:w="1"/><text x="99.8801%" y="751.50"></text></g><g><title>__remove_hrtimer (1 samples, 0.03%)</title><rect x="99.6301%" y="725" width="0.0308%" height="15" fill="rgb(240,58,21)" fg:x="3232" fg:w="1"/><text x="99.8801%" y="735.50"></text></g><g><title>timerqueue_del (1 samples, 0.03%)</title><rect x="99.6301%" y="709" width="0.0308%" height="15" fill="rgb(237,21,10)" fg:x="3232" fg:w="1"/><text x="99.8801%" y="719.50"></text></g><g><title>rb_erase (1 samples, 0.03%)</title><rect x="99.6301%" y="693" width="0.0308%" height="15" fill="rgb(218,43,11)" fg:x="3232" fg:w="1"/><text x="99.8801%" y="703.50"></text></g><g><title>ksys_read (2 samples, 0.06%)</title><rect x="99.6609%" y="773" width="0.0617%" height="15" fill="rgb(218,221,29)" fg:x="3233" fg:w="2"/><text x="99.9109%" y="783.50"></text></g><g><title>vfs_read (1 samples, 0.03%)</title><rect x="99.6917%" y="757" width="0.0308%" height="15" fill="rgb(214,118,42)" fg:x="3234" fg:w="1"/><text x="99.9417%" y="767.50"></text></g><g><title>eventfd_read (1 samples, 0.03%)</title><rect x="99.6917%" y="741" width="0.0308%" height="15" fill="rgb(251,200,26)" fg:x="3234" fg:w="1"/><text x="99.9417%" y="751.50"></text></g><g><title>_raw_spin_lock_irq (1 samples, 0.03%)</title><rect x="99.6917%" y="725" width="0.0308%" height="15" fill="rgb(237,101,39)" fg:x="3234" fg:w="1"/><text x="99.9417%" y="735.50"></text></g><g><title>preempt_count_add (1 samples, 0.03%)</title><rect x="99.6917%" y="709" width="0.0308%" height="15" fill="rgb(251,117,11)" fg:x="3234" fg:w="1"/><text x="99.9417%" y="719.50"></text></g><g><title>__fdget_pos (1 samples, 0.03%)</title><rect x="99.7226%" y="757" width="0.0308%" height="15" fill="rgb(216,223,23)" fg:x="3235" fg:w="1"/><text x="99.9726%" y="767.50"></text></g><g><title>__fget_light (1 samples, 0.03%)</title><rect x="99.7226%" y="741" width="0.0308%" height="15" fill="rgb(251,54,12)" fg:x="3235" fg:w="1"/><text x="99.9726%" y="751.50"></text></g><g><title>ext4_buffered_write_iter (1 samples, 0.03%)</title><rect x="99.7842%" y="741" width="0.0308%" height="15" fill="rgb(254,176,54)" fg:x="3237" fg:w="1"/><text x="100.0342%" y="751.50"></text></g><g><title>file_modified_flags (1 samples, 0.03%)</title><rect x="99.7842%" y="725" width="0.0308%" height="15" fill="rgb(210,32,8)" fg:x="3237" fg:w="1"/><text x="100.0342%" y="735.50"></text></g><g><title>ksys_write (4 samples, 0.12%)</title><rect x="99.7226%" y="773" width="0.1233%" height="15" fill="rgb(235,52,38)" fg:x="3235" fg:w="4"/><text x="99.9726%" y="783.50"></text></g><g><title>vfs_write (3 samples, 0.09%)</title><rect x="99.7534%" y="757" width="0.0925%" height="15" fill="rgb(231,4,44)" fg:x="3236" fg:w="3"/><text x="100.0034%" y="767.50"></text></g><g><title>security_file_permission (1 samples, 0.03%)</title><rect x="99.8150%" y="741" width="0.0308%" height="15" fill="rgb(249,2,32)" fg:x="3238" fg:w="1"/><text x="100.0650%" y="751.50"></text></g><g><title>syscall_enter_from_user_mode (1 samples, 0.03%)</title><rect x="99.8459%" y="773" width="0.0308%" height="15" fill="rgb(224,65,26)" fg:x="3239" fg:w="1"/><text x="100.0959%" y="783.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (25 samples, 0.77%)</title><rect x="99.1369%" y="805" width="0.7707%" height="15" fill="rgb(250,73,40)" fg:x="3216" fg:w="25"/><text x="99.3869%" y="815.50"></text></g><g><title>do_syscall_64 (25 samples, 0.77%)</title><rect x="99.1369%" y="789" width="0.7707%" height="15" fill="rgb(253,177,16)" fg:x="3216" fg:w="25"/><text x="99.3869%" y="799.50"></text></g><g><title>syscall_exit_to_user_mode (1 samples, 0.03%)</title><rect x="99.8767%" y="773" width="0.0308%" height="15" fill="rgb(217,32,34)" fg:x="3240" fg:w="1"/><text x="100.1267%" y="783.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.03%)</title><rect x="99.8767%" y="757" width="0.0308%" height="15" fill="rgb(212,7,10)" fg:x="3240" fg:w="1"/><text x="100.1267%" y="767.50"></text></g><g><title>arch_do_signal_or_restart (1 samples, 0.03%)</title><rect x="99.8767%" y="741" width="0.0308%" height="15" fill="rgb(245,89,8)" fg:x="3240" fg:w="1"/><text x="100.1267%" y="751.50"></text></g><g><title>get_signal (1 samples, 0.03%)</title><rect x="99.8767%" y="725" width="0.0308%" height="15" fill="rgb(237,16,53)" fg:x="3240" fg:w="1"/><text x="100.1267%" y="735.50"></text></g><g><title>do_group_exit (1 samples, 0.03%)</title><rect x="99.8767%" y="709" width="0.0308%" height="15" fill="rgb(250,204,30)" fg:x="3240" fg:w="1"/><text x="100.1267%" y="719.50"></text></g><g><title>do_exit (1 samples, 0.03%)</title><rect x="99.8767%" y="693" width="0.0308%" height="15" fill="rgb(208,77,27)" fg:x="3240" fg:w="1"/><text x="100.1267%" y="703.50"></text></g><g><title>__mmput (1 samples, 0.03%)</title><rect x="99.8767%" y="677" width="0.0308%" height="15" fill="rgb(250,204,28)" fg:x="3240" fg:w="1"/><text x="100.1267%" y="687.50"></text></g><g><title>exit_mmap (1 samples, 0.03%)</title><rect x="99.8767%" y="661" width="0.0308%" height="15" fill="rgb(244,63,21)" fg:x="3240" fg:w="1"/><text x="100.1267%" y="671.50"></text></g><g><title>unmap_vmas (1 samples, 0.03%)</title><rect x="99.8767%" y="645" width="0.0308%" height="15" fill="rgb(236,85,44)" fg:x="3240" fg:w="1"/><text x="100.1267%" y="655.50"></text></g><g><title>unmap_page_range (1 samples, 0.03%)</title><rect x="99.8767%" y="629" width="0.0308%" height="15" fill="rgb(215,98,4)" fg:x="3240" fg:w="1"/><text x="100.1267%" y="639.50"></text></g><g><title>ret_from_fork (2 samples, 0.06%)</title><rect x="99.9075%" y="805" width="0.0617%" height="15" fill="rgb(235,38,11)" fg:x="3241" fg:w="2"/><text x="100.1575%" y="815.50"></text></g><g><title>syscall_exit_to_user_mode (2 samples, 0.06%)</title><rect x="99.9075%" y="789" width="0.0617%" height="15" fill="rgb(254,186,25)" fg:x="3241" fg:w="2"/><text x="100.1575%" y="799.50"></text></g><g><title>exit_to_user_mode_prepare (2 samples, 0.06%)</title><rect x="99.9075%" y="773" width="0.0617%" height="15" fill="rgb(225,55,31)" fg:x="3241" fg:w="2"/><text x="100.1575%" y="783.50"></text></g><g><title>fpregs_restore_userregs (1 samples, 0.03%)</title><rect x="99.9383%" y="757" width="0.0308%" height="15" fill="rgb(211,15,21)" fg:x="3242" fg:w="1"/><text x="100.1883%" y="767.50"></text></g><g><title>check_preemption_disabled (1 samples, 0.03%)</title><rect x="99.9383%" y="741" width="0.0308%" height="15" fill="rgb(215,187,41)" fg:x="3242" fg:w="1"/><text x="100.1883%" y="751.50"></text></g><g><title>all (3,244 samples, 100%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(248,69,32)" fg:x="0" fg:w="3244"/><text x="0.2500%" y="847.50"></text></g><g><title>tftp (3,240 samples, 99.88%)</title><rect x="0.1233%" y="821" width="99.8767%" height="15" fill="rgb(252,102,52)" fg:x="4" fg:w="3240"/><text x="0.3733%" y="831.50">tftp</text></g><g><title>rustix::backend::event::epoll::modify (1 samples, 0.03%)</title><rect x="99.9692%" y="805" width="0.0308%" height="15" fill="rgb(253,140,32)" fg:x="3243" fg:w="1"/><text x="100.2192%" y="815.50"></text></g><g><title>rustix::backend::event::syscalls::epoll_mod (1 samples, 0.03%)</title><rect x="99.9692%" y="789" width="0.0308%" height="15" fill="rgb(216,56,42)" fg:x="3243" fg:w="1"/><text x="100.2192%" y="799.50"></text></g><g><title>rustix::backend::arch::asm::syscall4_readonly (1 samples, 0.03%)</title><rect x="99.9692%" y="773" width="0.0308%" height="15" fill="rgb(216,184,14)" fg:x="3243" fg:w="1"/><text x="100.2192%" y="783.50"></text></g><g><title>__entry_text_start (1 samples, 0.03%)</title><rect x="99.9692%" y="757" width="0.0308%" height="15" fill="rgb(237,187,27)" fg:x="3243" fg:w="1"/><text x="100.2192%" y="767.50"></text></g></svg></svg>