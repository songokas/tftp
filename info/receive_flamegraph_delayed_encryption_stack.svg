<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="742" onload="init(evt)" viewBox="0 0 1200 742" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="742" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="725.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="725.00"> </text><svg id="frames" x="10" width="1180" total_samples="4068"><g><title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="0.0000%" y="533" width="0.0246%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="543.50"></text></g><g><title>amd_pmu_enable_all (1 samples, 0.02%)</title><rect x="0.0246%" y="501" width="0.0246%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="1"/><text x="0.2746%" y="511.50"></text></g><g><title>x86_pmu_enable_event (1 samples, 0.02%)</title><rect x="0.0246%" y="485" width="0.0246%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="1"/><text x="0.2746%" y="495.50"></text></g><g><title>ctx_resched (2 samples, 0.05%)</title><rect x="0.0246%" y="533" width="0.0492%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="2"/><text x="0.2746%" y="543.50"></text></g><g><title>perf_ctx_enable (2 samples, 0.05%)</title><rect x="0.0246%" y="517" width="0.0492%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="2"/><text x="0.2746%" y="527.50"></text></g><g><title>x86_pmu_enable (1 samples, 0.02%)</title><rect x="0.0492%" y="501" width="0.0246%" height="15" fill="rgb(232,128,0)" fg:x="2" fg:w="1"/><text x="0.2992%" y="511.50"></text></g><g><title>debug_smp_processor_id (1 samples, 0.02%)</title><rect x="0.0492%" y="485" width="0.0246%" height="15" fill="rgb(207,160,47)" fg:x="2" fg:w="1"/><text x="0.2992%" y="495.50"></text></g><g><title>perf-exec (4 samples, 0.10%)</title><rect x="0.0000%" y="677" width="0.0983%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="4"/><text x="0.2500%" y="687.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4 samples, 0.10%)</title><rect x="0.0000%" y="661" width="0.0983%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="4"/><text x="0.2500%" y="671.50"></text></g><g><title>do_syscall_64 (4 samples, 0.10%)</title><rect x="0.0000%" y="645" width="0.0983%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="4"/><text x="0.2500%" y="655.50"></text></g><g><title>__x64_sys_execve (4 samples, 0.10%)</title><rect x="0.0000%" y="629" width="0.0983%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="4"/><text x="0.2500%" y="639.50"></text></g><g><title>do_execveat_common.isra.0 (4 samples, 0.10%)</title><rect x="0.0000%" y="613" width="0.0983%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="4"/><text x="0.2500%" y="623.50"></text></g><g><title>bprm_execve (4 samples, 0.10%)</title><rect x="0.0000%" y="597" width="0.0983%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="4"/><text x="0.2500%" y="607.50"></text></g><g><title>load_elf_binary (4 samples, 0.10%)</title><rect x="0.0000%" y="581" width="0.0983%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="4"/><text x="0.2500%" y="591.50"></text></g><g><title>begin_new_exec (4 samples, 0.10%)</title><rect x="0.0000%" y="565" width="0.0983%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="4"/><text x="0.2500%" y="575.50"></text></g><g><title>perf_event_exec (4 samples, 0.10%)</title><rect x="0.0000%" y="549" width="0.0983%" height="15" fill="rgb(231,73,38)" fg:x="0" fg:w="4"/><text x="0.2500%" y="559.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.02%)</title><rect x="0.0737%" y="533" width="0.0246%" height="15" fill="rgb(225,20,46)" fg:x="3" fg:w="1"/><text x="0.3237%" y="543.50"></text></g><g><title>perf_event_addr_filters_exec (1 samples, 0.02%)</title><rect x="0.0737%" y="517" width="0.0246%" height="15" fill="rgb(210,31,41)" fg:x="3" fg:w="1"/><text x="0.3237%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.02%)</title><rect x="0.0983%" y="661" width="0.0246%" height="15" fill="rgb(221,200,47)" fg:x="4" fg:w="1"/><text x="0.3483%" y="671.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="0.1229%" y="661" width="0.0492%" height="15" fill="rgb(226,26,5)" fg:x="5" fg:w="2"/><text x="0.3729%" y="671.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (1 samples, 0.02%)</title><rect x="0.1475%" y="645" width="0.0246%" height="15" fill="rgb(249,33,26)" fg:x="6" fg:w="1"/><text x="0.3975%" y="655.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (1 samples, 0.02%)</title><rect x="0.1721%" y="661" width="0.0246%" height="15" fill="rgb(235,183,28)" fg:x="7" fg:w="1"/><text x="0.4221%" y="671.50"></text></g><g><title>&lt;u8 as subtle::ConstantTimeEq&gt;::ct_eq (1 samples, 0.02%)</title><rect x="0.1967%" y="661" width="0.0246%" height="15" fill="rgb(221,5,38)" fg:x="8" fg:w="1"/><text x="0.4467%" y="671.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.05%)</title><rect x="0.2212%" y="645" width="0.0492%" height="15" fill="rgb(247,18,42)" fg:x="9" fg:w="2"/><text x="0.4712%" y="655.50"></text></g><g><title>&lt;[T] as subtle::ConstantTimeEq&gt;::ct_eq (1 samples, 0.02%)</title><rect x="0.2704%" y="645" width="0.0246%" height="15" fill="rgb(241,131,45)" fg:x="11" fg:w="1"/><text x="0.5204%" y="655.50"></text></g><g><title>&lt;[Z] as zeroize::Zeroize&gt;::zeroize (1 samples, 0.02%)</title><rect x="0.2950%" y="645" width="0.0246%" height="15" fill="rgb(249,31,29)" fg:x="12" fg:w="1"/><text x="0.5450%" y="655.50"></text></g><g><title>zeroize::volatile_set (1 samples, 0.02%)</title><rect x="0.2950%" y="629" width="0.0246%" height="15" fill="rgb(225,111,53)" fg:x="12" fg:w="1"/><text x="0.5450%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.02%)</title><rect x="0.2950%" y="613" width="0.0246%" height="15" fill="rgb(238,160,17)" fg:x="12" fg:w="1"/><text x="0.5450%" y="623.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (1 samples, 0.02%)</title><rect x="0.3196%" y="645" width="0.0246%" height="15" fill="rgb(214,148,48)" fg:x="13" fg:w="1"/><text x="0.5696%" y="655.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (1 samples, 0.02%)</title><rect x="0.3441%" y="645" width="0.0246%" height="15" fill="rgb(232,36,49)" fg:x="14" fg:w="1"/><text x="0.5941%" y="655.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (1 samples, 0.02%)</title><rect x="0.3687%" y="645" width="0.0246%" height="15" fill="rgb(209,103,24)" fg:x="15" fg:w="1"/><text x="0.6187%" y="655.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (12 samples, 0.29%)</title><rect x="0.3933%" y="645" width="0.2950%" height="15" fill="rgb(229,88,8)" fg:x="16" fg:w="12"/><text x="0.6433%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="0.6883%" y="645" width="0.0246%" height="15" fill="rgb(213,181,19)" fg:x="28" fg:w="1"/><text x="0.9383%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (38 samples, 0.93%)</title><rect x="0.7129%" y="645" width="0.9341%" height="15" fill="rgb(254,191,54)" fg:x="29" fg:w="38"/><text x="0.9629%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.02%)</title><rect x="1.6470%" y="645" width="0.0246%" height="15" fill="rgb(241,83,37)" fg:x="67" fg:w="1"/><text x="1.8970%" y="655.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (8 samples, 0.20%)</title><rect x="1.6716%" y="645" width="0.1967%" height="15" fill="rgb(233,36,39)" fg:x="68" fg:w="8"/><text x="1.9216%" y="655.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="1.8682%" y="645" width="0.0246%" height="15" fill="rgb(226,3,54)" fg:x="76" fg:w="1"/><text x="2.1182%" y="655.50"></text></g><g><title>&lt;core::slice::iter::ChunksExact&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (1 samples, 0.02%)</title><rect x="1.8928%" y="645" width="0.0246%" height="15" fill="rgb(245,192,40)" fg:x="77" fg:w="1"/><text x="2.1428%" y="655.50"></text></g><g><title>core::slice::raw::from_raw_parts (1 samples, 0.02%)</title><rect x="1.8928%" y="629" width="0.0246%" height="15" fill="rgb(238,167,29)" fg:x="77" fg:w="1"/><text x="2.1428%" y="639.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.02%)</title><rect x="1.8928%" y="613" width="0.0246%" height="15" fill="rgb(232,182,51)" fg:x="77" fg:w="1"/><text x="2.1428%" y="623.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (1 samples, 0.02%)</title><rect x="1.8928%" y="597" width="0.0246%" height="15" fill="rgb(231,60,39)" fg:x="77" fg:w="1"/><text x="2.1428%" y="607.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="2.9499%" y="629" width="0.0246%" height="15" fill="rgb(208,69,12)" fg:x="120" fg:w="1"/><text x="3.1999%" y="639.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (4 samples, 0.10%)</title><rect x="2.9744%" y="629" width="0.0983%" height="15" fill="rgb(235,93,37)" fg:x="121" fg:w="4"/><text x="3.2244%" y="639.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (14 samples, 0.34%)</title><rect x="3.0728%" y="629" width="0.3441%" height="15" fill="rgb(213,116,39)" fg:x="125" fg:w="14"/><text x="3.3228%" y="639.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (5 samples, 0.12%)</title><rect x="3.2940%" y="613" width="0.1229%" height="15" fill="rgb(222,207,29)" fg:x="134" fg:w="5"/><text x="3.5440%" y="623.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (65 samples, 1.60%)</title><rect x="1.9174%" y="645" width="1.5978%" height="15" fill="rgb(206,96,30)" fg:x="78" fg:w="65"/><text x="2.1674%" y="655.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (4 samples, 0.10%)</title><rect x="3.4169%" y="629" width="0.0983%" height="15" fill="rgb(218,138,4)" fg:x="139" fg:w="4"/><text x="3.6669%" y="639.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (98 samples, 2.41%)</title><rect x="5.7276%" y="629" width="2.4090%" height="15" fill="rgb(250,191,14)" fg:x="233" fg:w="98"/><text x="5.9776%" y="639.50">&lt;c..</text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_mut (8 samples, 0.20%)</title><rect x="8.1367%" y="629" width="0.1967%" height="15" fill="rgb(239,60,40)" fg:x="331" fg:w="8"/><text x="8.3867%" y="639.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_sub (5 samples, 0.12%)</title><rect x="9.6608%" y="613" width="0.1229%" height="15" fill="rgb(206,27,48)" fg:x="393" fg:w="5"/><text x="9.9108%" y="623.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::cast (9 samples, 0.22%)</title><rect x="9.7837%" y="613" width="0.2212%" height="15" fill="rgb(225,35,8)" fg:x="398" fg:w="9"/><text x="10.0337%" y="623.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (277 samples, 6.81%)</title><rect x="3.5152%" y="645" width="6.8092%" height="15" fill="rgb(250,213,24)" fg:x="143" fg:w="277"/><text x="3.7652%" y="655.50">&lt;core::sl..</text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (81 samples, 1.99%)</title><rect x="8.3333%" y="629" width="1.9912%" height="15" fill="rgb(247,123,22)" fg:x="339" fg:w="81"/><text x="8.5833%" y="639.50">c..</text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (13 samples, 0.32%)</title><rect x="10.0049%" y="613" width="0.3196%" height="15" fill="rgb(231,138,38)" fg:x="407" fg:w="13"/><text x="10.2549%" y="623.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (7 samples, 0.17%)</title><rect x="10.1524%" y="597" width="0.1721%" height="15" fill="rgb(231,145,46)" fg:x="413" fg:w="7"/><text x="10.4024%" y="607.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (5 samples, 0.12%)</title><rect x="10.3245%" y="645" width="0.1229%" height="15" fill="rgb(251,118,11)" fg:x="420" fg:w="5"/><text x="10.5745%" y="655.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (54 samples, 1.33%)</title><rect x="10.4474%" y="645" width="1.3274%" height="15" fill="rgb(217,147,25)" fg:x="425" fg:w="54"/><text x="10.6974%" y="655.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (1 samples, 0.02%)</title><rect x="11.7748%" y="645" width="0.0246%" height="15" fill="rgb(247,81,37)" fg:x="479" fg:w="1"/><text x="12.0248%" y="655.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (1 samples, 0.02%)</title><rect x="11.7748%" y="629" width="0.0246%" height="15" fill="rgb(209,12,38)" fg:x="479" fg:w="1"/><text x="12.0248%" y="639.50"></text></g><g><title>std::sys::unix::fs::File::write (1 samples, 0.02%)</title><rect x="11.7748%" y="613" width="0.0246%" height="15" fill="rgb(227,1,9)" fg:x="479" fg:w="1"/><text x="12.0248%" y="623.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.02%)</title><rect x="11.7748%" y="597" width="0.0246%" height="15" fill="rgb(248,47,43)" fg:x="479" fg:w="1"/><text x="12.0248%" y="607.50"></text></g><g><title>&lt;tftp::socket::UdpUnboundSocket as tftp::socket::Socket&gt;::recv_from::{{closure}} (1 samples, 0.02%)</title><rect x="11.7994%" y="645" width="0.0246%" height="15" fill="rgb(221,10,30)" fg:x="480" fg:w="1"/><text x="12.0494%" y="655.50"></text></g><g><title>__memcpy_avx_unaligned (2 samples, 0.05%)</title><rect x="11.8240%" y="645" width="0.0492%" height="15" fill="rgb(210,229,1)" fg:x="481" fg:w="2"/><text x="12.0740%" y="655.50"></text></g><g><title>__memcpy_avx_unaligned_erms (3 samples, 0.07%)</title><rect x="11.8732%" y="645" width="0.0737%" height="15" fill="rgb(222,148,37)" fg:x="483" fg:w="3"/><text x="12.1232%" y="655.50"></text></g><g><title>chacha20::xchacha::hchacha (1 samples, 0.02%)</title><rect x="11.9469%" y="645" width="0.0246%" height="15" fill="rgb(234,67,33)" fg:x="486" fg:w="1"/><text x="12.1969%" y="655.50"></text></g><g><title>chacha20::xchacha::quarter_round (2 samples, 0.05%)</title><rect x="11.9715%" y="645" width="0.0492%" height="15" fill="rgb(247,98,35)" fg:x="487" fg:w="2"/><text x="12.2215%" y="655.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (1 samples, 0.02%)</title><rect x="12.0206%" y="645" width="0.0246%" height="15" fill="rgb(247,138,52)" fg:x="489" fg:w="1"/><text x="12.2706%" y="655.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (1 samples, 0.02%)</title><rect x="12.0452%" y="645" width="0.0246%" height="15" fill="rgb(213,79,30)" fg:x="490" fg:w="1"/><text x="12.2952%" y="655.50"></text></g><g><title>cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt;::check_remaining (1 samples, 0.02%)</title><rect x="12.0698%" y="645" width="0.0246%" height="15" fill="rgb(246,177,23)" fg:x="491" fg:w="1"/><text x="12.3198%" y="655.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (2 samples, 0.05%)</title><rect x="12.0944%" y="645" width="0.0492%" height="15" fill="rgb(230,62,27)" fg:x="492" fg:w="2"/><text x="12.3444%" y="655.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.02%)</title><rect x="12.1436%" y="645" width="0.0246%" height="15" fill="rgb(216,154,8)" fg:x="494" fg:w="1"/><text x="12.3936%" y="655.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.02%)</title><rect x="12.1681%" y="645" width="0.0246%" height="15" fill="rgb(244,35,45)" fg:x="495" fg:w="1"/><text x="12.4181%" y="655.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i64x2 (1 samples, 0.02%)</title><rect x="12.1927%" y="645" width="0.0246%" height="15" fill="rgb(251,115,12)" fg:x="496" fg:w="1"/><text x="12.4427%" y="655.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.05%)</title><rect x="12.2173%" y="645" width="0.0492%" height="15" fill="rgb(240,54,50)" fg:x="497" fg:w="2"/><text x="12.4673%" y="655.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="12.2665%" y="645" width="0.0246%" height="15" fill="rgb(233,84,52)" fg:x="499" fg:w="1"/><text x="12.5165%" y="655.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (2 samples, 0.05%)</title><rect x="12.2911%" y="645" width="0.0492%" height="15" fill="rgb(207,117,47)" fg:x="500" fg:w="2"/><text x="12.5411%" y="655.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_setzero_si128 (2 samples, 0.05%)</title><rect x="12.3402%" y="645" width="0.0492%" height="15" fill="rgb(249,43,39)" fg:x="502" fg:w="2"/><text x="12.5902%" y="655.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi64x (2 samples, 0.05%)</title><rect x="12.3402%" y="629" width="0.0492%" height="15" fill="rgb(209,38,44)" fg:x="502" fg:w="2"/><text x="12.5902%" y="639.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi64x (2 samples, 0.05%)</title><rect x="12.3402%" y="613" width="0.0492%" height="15" fill="rgb(236,212,23)" fg:x="502" fg:w="2"/><text x="12.5902%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_storeu_si128 (1 samples, 0.02%)</title><rect x="12.3894%" y="645" width="0.0246%" height="15" fill="rgb(242,79,21)" fg:x="504" fg:w="1"/><text x="12.6394%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_unaligned (1 samples, 0.02%)</title><rect x="12.3894%" y="629" width="0.0246%" height="15" fill="rgb(211,96,35)" fg:x="504" fg:w="1"/><text x="12.6394%" y="639.50"></text></g><g><title>core::ptr::write_unaligned (1 samples, 0.02%)</title><rect x="12.3894%" y="613" width="0.0246%" height="15" fill="rgb(253,215,40)" fg:x="504" fg:w="1"/><text x="12.6394%" y="623.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (1 samples, 0.02%)</title><rect x="12.4140%" y="645" width="0.0246%" height="15" fill="rgb(211,81,21)" fg:x="505" fg:w="1"/><text x="12.6640%" y="655.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.02%)</title><rect x="12.4385%" y="645" width="0.0246%" height="15" fill="rgb(208,190,38)" fg:x="506" fg:w="1"/><text x="12.6885%" y="655.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.05%)</title><rect x="12.4631%" y="645" width="0.0492%" height="15" fill="rgb(235,213,38)" fg:x="507" fg:w="2"/><text x="12.7131%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::copied (1 samples, 0.02%)</title><rect x="12.5123%" y="645" width="0.0246%" height="15" fill="rgb(237,122,38)" fg:x="509" fg:w="1"/><text x="12.7623%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (23 samples, 0.57%)</title><rect x="12.5369%" y="645" width="0.5654%" height="15" fill="rgb(244,218,35)" fg:x="510" fg:w="23"/><text x="12.7869%" y="655.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.02%)</title><rect x="13.1023%" y="645" width="0.0246%" height="15" fill="rgb(240,68,47)" fg:x="533" fg:w="1"/><text x="13.3523%" y="655.50"></text></g><g><title>chacha20::xchacha::quarter_round (1 samples, 0.02%)</title><rect x="13.1023%" y="629" width="0.0246%" height="15" fill="rgb(210,16,53)" fg:x="533" fg:w="1"/><text x="13.3523%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::array::iter::IntoIter&lt;[core::core_arch::x86::__m256i: 4],2_usize&gt;&gt; (1 samples, 0.02%)</title><rect x="13.1268%" y="645" width="0.0246%" height="15" fill="rgb(235,124,12)" fg:x="534" fg:w="1"/><text x="13.3768%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;()&gt;&gt; (1 samples, 0.02%)</title><rect x="13.1514%" y="645" width="0.0246%" height="15" fill="rgb(224,169,11)" fg:x="535" fg:w="1"/><text x="13.4014%" y="655.50"></text></g><g><title>core::ptr::read (1 samples, 0.02%)</title><rect x="13.1760%" y="645" width="0.0246%" height="15" fill="rgb(250,166,2)" fg:x="536" fg:w="1"/><text x="13.4260%" y="655.50"></text></g><g><title>core::ptr::write (3 samples, 0.07%)</title><rect x="13.2006%" y="645" width="0.0737%" height="15" fill="rgb(242,216,29)" fg:x="537" fg:w="3"/><text x="13.4506%" y="655.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (2 samples, 0.05%)</title><rect x="13.2743%" y="645" width="0.0492%" height="15" fill="rgb(230,116,27)" fg:x="540" fg:w="2"/><text x="13.5243%" y="655.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.02%)</title><rect x="13.3235%" y="645" width="0.0246%" height="15" fill="rgb(228,99,48)" fg:x="542" fg:w="1"/><text x="13.5735%" y="655.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (1 samples, 0.02%)</title><rect x="13.3481%" y="645" width="0.0246%" height="15" fill="rgb(253,11,6)" fg:x="543" fg:w="1"/><text x="13.5981%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::chunks_exact (1 samples, 0.02%)</title><rect x="13.3727%" y="645" width="0.0246%" height="15" fill="rgb(247,143,39)" fg:x="544" fg:w="1"/><text x="13.6227%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.02%)</title><rect x="13.3972%" y="645" width="0.0246%" height="15" fill="rgb(236,97,10)" fg:x="545" fg:w="1"/><text x="13.6472%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (2 samples, 0.05%)</title><rect x="13.4218%" y="645" width="0.0492%" height="15" fill="rgb(233,208,19)" fg:x="546" fg:w="2"/><text x="13.6718%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (1 samples, 0.02%)</title><rect x="13.4710%" y="645" width="0.0246%" height="15" fill="rgb(216,164,2)" fg:x="548" fg:w="1"/><text x="13.7210%" y="655.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="13.4710%" y="629" width="0.0246%" height="15" fill="rgb(220,129,5)" fg:x="548" fg:w="1"/><text x="13.7210%" y="639.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::cast (1 samples, 0.02%)</title><rect x="13.5202%" y="613" width="0.0246%" height="15" fill="rgb(242,17,10)" fg:x="550" fg:w="1"/><text x="13.7702%" y="623.50"></text></g><g><title>core::slice::raw::from_raw_parts (9 samples, 0.22%)</title><rect x="13.4956%" y="645" width="0.2212%" height="15" fill="rgb(242,107,0)" fg:x="549" fg:w="9"/><text x="13.7456%" y="655.50"></text></g><g><title>core::ptr::slice_from_raw_parts (8 samples, 0.20%)</title><rect x="13.5202%" y="629" width="0.1967%" height="15" fill="rgb(251,28,31)" fg:x="550" fg:w="8"/><text x="13.7702%" y="639.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (7 samples, 0.17%)</title><rect x="13.5447%" y="613" width="0.1721%" height="15" fill="rgb(233,223,10)" fg:x="551" fg:w="7"/><text x="13.7947%" y="623.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (5 samples, 0.12%)</title><rect x="13.7168%" y="645" width="0.1229%" height="15" fill="rgb(215,21,27)" fg:x="558" fg:w="5"/><text x="13.9668%" y="655.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (5 samples, 0.12%)</title><rect x="13.7168%" y="629" width="0.1229%" height="15" fill="rgb(232,23,21)" fg:x="558" fg:w="5"/><text x="13.9668%" y="639.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (5 samples, 0.12%)</title><rect x="13.7168%" y="613" width="0.1229%" height="15" fill="rgb(244,5,23)" fg:x="558" fg:w="5"/><text x="13.9668%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.02%)</title><rect x="13.8397%" y="645" width="0.0246%" height="15" fill="rgb(226,81,46)" fg:x="563" fg:w="1"/><text x="14.0897%" y="655.50"></text></g><g><title>&lt;tftp::socket::UdpUnboundSocket as tftp::socket::Socket&gt;::recv_from (1 samples, 0.02%)</title><rect x="13.8397%" y="629" width="0.0246%" height="15" fill="rgb(247,70,30)" fg:x="563" fg:w="1"/><text x="14.0897%" y="639.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::iter_position (1 samples, 0.02%)</title><rect x="13.8643%" y="645" width="0.0246%" height="15" fill="rgb(212,68,19)" fg:x="564" fg:w="1"/><text x="14.1143%" y="655.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (5 samples, 0.12%)</title><rect x="13.8889%" y="645" width="0.1229%" height="15" fill="rgb(240,187,13)" fg:x="565" fg:w="5"/><text x="14.1389%" y="655.50"></text></g><g><title>generic_array::transmute (1 samples, 0.02%)</title><rect x="14.0118%" y="645" width="0.0246%" height="15" fill="rgb(223,113,26)" fg:x="570" fg:w="1"/><text x="14.2618%" y="655.50"></text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::as_slice (1 samples, 0.02%)</title><rect x="14.0364%" y="645" width="0.0246%" height="15" fill="rgb(206,192,2)" fg:x="571" fg:w="1"/><text x="14.2864%" y="655.50"></text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::push (1 samples, 0.02%)</title><rect x="14.0610%" y="645" width="0.0246%" height="15" fill="rgb(241,108,4)" fg:x="572" fg:w="1"/><text x="14.3110%" y="655.50"></text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::push_unchecked (2 samples, 0.05%)</title><rect x="14.0855%" y="645" width="0.0492%" height="15" fill="rgb(247,173,49)" fg:x="573" fg:w="2"/><text x="14.3355%" y="655.50"></text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::truncate (1 samples, 0.02%)</title><rect x="14.1347%" y="645" width="0.0246%" height="15" fill="rgb(224,114,35)" fg:x="575" fg:w="1"/><text x="14.3847%" y="655.50"></text></g><g><title>polling::Poller::modify_with_mode (1 samples, 0.02%)</title><rect x="14.1593%" y="645" width="0.0246%" height="15" fill="rgb(245,159,27)" fg:x="576" fg:w="1"/><text x="14.4093%" y="655.50"></text></g><g><title>polling::epoll::Poller::wait (1 samples, 0.02%)</title><rect x="14.1839%" y="645" width="0.0246%" height="15" fill="rgb(245,172,44)" fg:x="577" fg:w="1"/><text x="14.4339%" y="655.50"></text></g><g><title>rustix::backend::event::epoll::_::&lt;impl rustix::backend::event::epoll::EventFlags&gt;::union (1 samples, 0.02%)</title><rect x="14.2085%" y="645" width="0.0246%" height="15" fill="rgb(236,23,11)" fg:x="578" fg:w="1"/><text x="14.4585%" y="655.50"></text></g><g><title>rustix::backend::event::epoll::wait (1 samples, 0.02%)</title><rect x="14.2330%" y="645" width="0.0246%" height="15" fill="rgb(205,117,38)" fg:x="579" fg:w="1"/><text x="14.4830%" y="655.50"></text></g><g><title>rustix::backend::reg::RetReg&lt;Num&gt;::decode_usize (1 samples, 0.02%)</title><rect x="14.2576%" y="645" width="0.0246%" height="15" fill="rgb(237,72,25)" fg:x="580" fg:w="1"/><text x="14.5076%" y="655.50"></text></g><g><title>tftp::encrypted_packet::EncryptedPacket::decrypt (1 samples, 0.02%)</title><rect x="14.2822%" y="645" width="0.0246%" height="15" fill="rgb(244,70,9)" fg:x="581" fg:w="1"/><text x="14.5322%" y="655.50"></text></g><g><title>[[stack]] (576 samples, 14.16%)</title><rect x="0.2212%" y="661" width="14.1593%" height="15" fill="rgb(217,125,39)" fg:x="9" fg:w="576"/><text x="0.4712%" y="671.50">[[stack]]</text></g><g><title>tftp::encryption::apply_bit_padding (3 samples, 0.07%)</title><rect x="14.3068%" y="645" width="0.0737%" height="15" fill="rgb(235,36,10)" fg:x="582" fg:w="3"/><text x="14.5568%" y="655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="14.3805%" y="645" width="0.0246%" height="15" fill="rgb(251,123,47)" fg:x="585" fg:w="1"/><text x="14.6305%" y="655.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.02%)</title><rect x="14.3805%" y="629" width="0.0246%" height="15" fill="rgb(221,13,13)" fg:x="585" fg:w="1"/><text x="14.6305%" y="639.50"></text></g><g><title>[tftp] (2 samples, 0.05%)</title><rect x="14.3805%" y="661" width="0.0492%" height="15" fill="rgb(238,131,9)" fg:x="585" fg:w="2"/><text x="14.6305%" y="671.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.02%)</title><rect x="14.4051%" y="645" width="0.0246%" height="15" fill="rgb(211,50,8)" fg:x="586" fg:w="1"/><text x="14.6551%" y="655.50"></text></g><g><title>&lt;&amp;T as std::os::fd::owned::AsFd&gt;::as_fd (1 samples, 0.02%)</title><rect x="14.4297%" y="645" width="0.0246%" height="15" fill="rgb(245,182,24)" fg:x="587" fg:w="1"/><text x="14.6797%" y="655.50"></text></g><g><title>&lt;&amp;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4 as &lt;&amp;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4&gt;&gt;::mul::__Impl_mul__&gt;::_impl_mul (1 samples, 0.02%)</title><rect x="14.4543%" y="645" width="0.0246%" height="15" fill="rgb(242,14,37)" fg:x="588" fg:w="1"/><text x="14.7043%" y="655.50"></text></g><g><title>curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4::reduce64 (1 samples, 0.02%)</title><rect x="14.4543%" y="629" width="0.0246%" height="15" fill="rgb(246,228,12)" fg:x="588" fg:w="1"/><text x="14.7043%" y="639.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4 as curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4::reduce64::__Impl_reduce64__&gt;::_impl_reduce64 (1 samples, 0.02%)</title><rect x="14.4543%" y="613" width="0.0246%" height="15" fill="rgb(213,55,15)" fg:x="588" fg:w="1"/><text x="14.7043%" y="623.50"></text></g><g><title>curve25519_dalek::backend::vector::avx2::field::repack_pair (1 samples, 0.02%)</title><rect x="14.4543%" y="597" width="0.0246%" height="15" fill="rgb(209,9,3)" fg:x="588" fg:w="1"/><text x="14.7043%" y="607.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.02%)</title><rect x="14.4543%" y="581" width="0.0246%" height="15" fill="rgb(230,59,30)" fg:x="588" fg:w="1"/><text x="14.7043%" y="591.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="14.4789%" y="645" width="0.0246%" height="15" fill="rgb(209,121,21)" fg:x="589" fg:w="1"/><text x="14.7289%" y="655.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (7 samples, 0.17%)</title><rect x="14.5034%" y="645" width="0.1721%" height="15" fill="rgb(220,109,13)" fg:x="590" fg:w="7"/><text x="14.7534%" y="655.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3 samples, 0.07%)</title><rect x="14.6755%" y="645" width="0.0737%" height="15" fill="rgb(232,18,1)" fg:x="597" fg:w="3"/><text x="14.9255%" y="655.50"></text></g><g><title>&lt;[Z] as zeroize::Zeroize&gt;::zeroize (2 samples, 0.05%)</title><rect x="14.7493%" y="645" width="0.0492%" height="15" fill="rgb(215,41,42)" fg:x="600" fg:w="2"/><text x="14.9993%" y="655.50"></text></g><g><title>zeroize::volatile_set (2 samples, 0.05%)</title><rect x="14.7493%" y="629" width="0.0492%" height="15" fill="rgb(224,123,36)" fg:x="600" fg:w="2"/><text x="14.9993%" y="639.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (1 samples, 0.02%)</title><rect x="14.7984%" y="645" width="0.0246%" height="15" fill="rgb(240,125,3)" fg:x="602" fg:w="1"/><text x="15.0484%" y="655.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (1 samples, 0.02%)</title><rect x="14.8230%" y="645" width="0.0246%" height="15" fill="rgb(205,98,50)" fg:x="603" fg:w="1"/><text x="15.0730%" y="655.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.05%)</title><rect x="15.2409%" y="405" width="0.0492%" height="15" fill="rgb(205,185,37)" fg:x="620" fg:w="2"/><text x="15.4909%" y="415.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_mut (1 samples, 0.02%)</title><rect x="15.2901%" y="405" width="0.0246%" height="15" fill="rgb(238,207,15)" fg:x="622" fg:w="1"/><text x="15.5401%" y="415.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.17%)</title><rect x="15.1917%" y="421" width="0.1721%" height="15" fill="rgb(213,199,42)" fg:x="618" fg:w="7"/><text x="15.4417%" y="431.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (2 samples, 0.05%)</title><rect x="15.3147%" y="405" width="0.0492%" height="15" fill="rgb(235,201,11)" fg:x="623" fg:w="2"/><text x="15.5647%" y="415.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (57 samples, 1.40%)</title><rect x="15.3638%" y="421" width="1.4012%" height="15" fill="rgb(207,46,11)" fg:x="625" fg:w="57"/><text x="15.6138%" y="431.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (5 samples, 0.12%)</title><rect x="16.7650%" y="421" width="0.1229%" height="15" fill="rgb(241,35,35)" fg:x="682" fg:w="5"/><text x="17.0150%" y="431.50"></text></g><g><title>chacha20::backends::avx2::rounds (3 samples, 0.07%)</title><rect x="16.8879%" y="421" width="0.0737%" height="15" fill="rgb(243,32,47)" fg:x="687" fg:w="3"/><text x="17.1379%" y="431.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (5 samples, 0.12%)</title><rect x="16.9617%" y="421" width="0.1229%" height="15" fill="rgb(247,202,23)" fg:x="690" fg:w="5"/><text x="17.2117%" y="431.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="17.7237%" y="405" width="0.0246%" height="15" fill="rgb(219,102,11)" fg:x="721" fg:w="1"/><text x="17.9737%" y="415.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="17.7237%" y="389" width="0.0246%" height="15" fill="rgb(243,110,44)" fg:x="721" fg:w="1"/><text x="17.9737%" y="399.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="17.7237%" y="373" width="0.0246%" height="15" fill="rgb(222,74,54)" fg:x="721" fg:w="1"/><text x="17.9737%" y="383.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="17.7237%" y="357" width="0.0246%" height="15" fill="rgb(216,99,12)" fg:x="721" fg:w="1"/><text x="17.9737%" y="367.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="17.7237%" y="341" width="0.0246%" height="15" fill="rgb(226,22,26)" fg:x="721" fg:w="1"/><text x="17.9737%" y="351.50"></text></g><g><title>tick_sched_timer (1 samples, 0.02%)</title><rect x="17.7237%" y="325" width="0.0246%" height="15" fill="rgb(217,163,10)" fg:x="721" fg:w="1"/><text x="17.9737%" y="335.50"></text></g><g><title>tick_sched_handle (1 samples, 0.02%)</title><rect x="17.7237%" y="309" width="0.0246%" height="15" fill="rgb(213,25,53)" fg:x="721" fg:w="1"/><text x="17.9737%" y="319.50"></text></g><g><title>update_process_times (1 samples, 0.02%)</title><rect x="17.7237%" y="293" width="0.0246%" height="15" fill="rgb(252,105,26)" fg:x="721" fg:w="1"/><text x="17.9737%" y="303.50"></text></g><g><title>scheduler_tick (1 samples, 0.02%)</title><rect x="17.7237%" y="277" width="0.0246%" height="15" fill="rgb(220,39,43)" fg:x="721" fg:w="1"/><text x="17.9737%" y="287.50"></text></g><g><title>perf_event_task_tick (1 samples, 0.02%)</title><rect x="17.7237%" y="261" width="0.0246%" height="15" fill="rgb(229,68,48)" fg:x="721" fg:w="1"/><text x="17.9737%" y="271.50"></text></g><g><title>perf_adjust_freq_unthr_context (1 samples, 0.02%)</title><rect x="17.7237%" y="245" width="0.0246%" height="15" fill="rgb(252,8,32)" fg:x="721" fg:w="1"/><text x="17.9737%" y="255.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (4 samples, 0.10%)</title><rect x="17.7483%" y="405" width="0.0983%" height="15" fill="rgb(223,20,43)" fg:x="722" fg:w="4"/><text x="17.9983%" y="415.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (1 samples, 0.02%)</title><rect x="17.8466%" y="405" width="0.0246%" height="15" fill="rgb(229,81,49)" fg:x="726" fg:w="1"/><text x="18.0966%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.02%)</title><rect x="17.8712%" y="405" width="0.0246%" height="15" fill="rgb(236,28,36)" fg:x="727" fg:w="1"/><text x="18.1212%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect x="17.8958%" y="405" width="0.0246%" height="15" fill="rgb(249,185,26)" fg:x="728" fg:w="1"/><text x="18.1458%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.02%)</title><rect x="17.9204%" y="405" width="0.0246%" height="15" fill="rgb(249,174,33)" fg:x="729" fg:w="1"/><text x="18.1704%" y="415.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.02%)</title><rect x="17.9204%" y="389" width="0.0246%" height="15" fill="rgb(233,201,37)" fg:x="729" fg:w="1"/><text x="18.1704%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (3 samples, 0.07%)</title><rect x="17.9449%" y="405" width="0.0737%" height="15" fill="rgb(221,78,26)" fg:x="730" fg:w="3"/><text x="18.1949%" y="415.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.02%)</title><rect x="17.9941%" y="389" width="0.0246%" height="15" fill="rgb(250,127,30)" fg:x="732" fg:w="1"/><text x="18.2441%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (3 samples, 0.07%)</title><rect x="18.0187%" y="405" width="0.0737%" height="15" fill="rgb(230,49,44)" fg:x="733" fg:w="3"/><text x="18.2687%" y="415.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.02%)</title><rect x="18.0924%" y="405" width="0.0246%" height="15" fill="rgb(229,67,23)" fg:x="736" fg:w="1"/><text x="18.3424%" y="415.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.02%)</title><rect x="18.0924%" y="389" width="0.0246%" height="15" fill="rgb(249,83,47)" fg:x="736" fg:w="1"/><text x="18.3424%" y="399.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.02%)</title><rect x="18.0924%" y="373" width="0.0246%" height="15" fill="rgb(215,43,3)" fg:x="736" fg:w="1"/><text x="18.3424%" y="383.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="18.2399%" y="389" width="0.0246%" height="15" fill="rgb(238,154,13)" fg:x="742" fg:w="1"/><text x="18.4899%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (7 samples, 0.17%)</title><rect x="18.1170%" y="405" width="0.1721%" height="15" fill="rgb(219,56,2)" fg:x="737" fg:w="7"/><text x="18.3670%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.02%)</title><rect x="18.2645%" y="389" width="0.0246%" height="15" fill="rgb(233,0,4)" fg:x="743" fg:w="1"/><text x="18.5145%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (3 samples, 0.07%)</title><rect x="18.2891%" y="405" width="0.0737%" height="15" fill="rgb(235,30,7)" fg:x="744" fg:w="3"/><text x="18.5391%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (2 samples, 0.05%)</title><rect x="18.3628%" y="405" width="0.0492%" height="15" fill="rgb(250,79,13)" fg:x="747" fg:w="2"/><text x="18.6128%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (58 samples, 1.43%)</title><rect x="17.0846%" y="421" width="1.4258%" height="15" fill="rgb(211,146,34)" fg:x="695" fg:w="58"/><text x="17.3346%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (4 samples, 0.10%)</title><rect x="18.4120%" y="405" width="0.0983%" height="15" fill="rgb(228,22,38)" fg:x="749" fg:w="4"/><text x="18.6620%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (4 samples, 0.10%)</title><rect x="18.5103%" y="421" width="0.0983%" height="15" fill="rgb(235,168,5)" fg:x="753" fg:w="4"/><text x="18.7603%" y="431.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.02%)</title><rect x="18.9036%" y="405" width="0.0246%" height="15" fill="rgb(221,155,16)" fg:x="769" fg:w="1"/><text x="19.1536%" y="415.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (3 samples, 0.07%)</title><rect x="18.9282%" y="405" width="0.0737%" height="15" fill="rgb(215,215,53)" fg:x="770" fg:w="3"/><text x="19.1782%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.02%)</title><rect x="19.0020%" y="405" width="0.0246%" height="15" fill="rgb(223,4,10)" fg:x="773" fg:w="1"/><text x="19.2520%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.02%)</title><rect x="19.0265%" y="405" width="0.0246%" height="15" fill="rgb(234,103,6)" fg:x="774" fg:w="1"/><text x="19.2765%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (2 samples, 0.05%)</title><rect x="19.0511%" y="405" width="0.0492%" height="15" fill="rgb(227,97,0)" fg:x="775" fg:w="2"/><text x="19.3011%" y="415.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (2 samples, 0.05%)</title><rect x="19.0511%" y="389" width="0.0492%" height="15" fill="rgb(234,150,53)" fg:x="775" fg:w="2"/><text x="19.3011%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (4 samples, 0.10%)</title><rect x="19.1003%" y="405" width="0.0983%" height="15" fill="rgb(228,201,54)" fg:x="777" fg:w="4"/><text x="19.3503%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (6 samples, 0.15%)</title><rect x="19.1986%" y="405" width="0.1475%" height="15" fill="rgb(222,22,37)" fg:x="781" fg:w="6"/><text x="19.4486%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="19.3461%" y="405" width="0.0246%" height="15" fill="rgb(237,53,32)" fg:x="787" fg:w="1"/><text x="19.5961%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (6 samples, 0.15%)</title><rect x="19.3707%" y="405" width="0.1475%" height="15" fill="rgb(233,25,53)" fg:x="788" fg:w="6"/><text x="19.6207%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (39 samples, 0.96%)</title><rect x="18.6087%" y="421" width="0.9587%" height="15" fill="rgb(210,40,34)" fg:x="757" fg:w="39"/><text x="18.8587%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (2 samples, 0.05%)</title><rect x="19.5182%" y="405" width="0.0492%" height="15" fill="rgb(241,220,44)" fg:x="794" fg:w="2"/><text x="19.7682%" y="415.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.02%)</title><rect x="19.5428%" y="389" width="0.0246%" height="15" fill="rgb(235,28,35)" fg:x="795" fg:w="1"/><text x="19.7928%" y="399.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.02%)</title><rect x="19.7148%" y="405" width="0.0246%" height="15" fill="rgb(210,56,17)" fg:x="802" fg:w="1"/><text x="19.9648%" y="415.50"></text></g><g><title>chacha20::backends::avx2::rounds (1 samples, 0.02%)</title><rect x="19.7394%" y="405" width="0.0246%" height="15" fill="rgb(224,130,29)" fg:x="803" fg:w="1"/><text x="19.9894%" y="415.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (4 samples, 0.10%)</title><rect x="19.7640%" y="405" width="0.0983%" height="15" fill="rgb(235,212,8)" fg:x="804" fg:w="4"/><text x="20.0140%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.02%)</title><rect x="19.8623%" y="405" width="0.0246%" height="15" fill="rgb(223,33,50)" fg:x="808" fg:w="1"/><text x="20.1123%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect x="19.8869%" y="405" width="0.0246%" height="15" fill="rgb(219,149,13)" fg:x="809" fg:w="1"/><text x="20.1369%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (2 samples, 0.05%)</title><rect x="19.9115%" y="405" width="0.0492%" height="15" fill="rgb(250,156,29)" fg:x="810" fg:w="2"/><text x="20.1615%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.02%)</title><rect x="19.9607%" y="405" width="0.0246%" height="15" fill="rgb(216,193,19)" fg:x="812" fg:w="1"/><text x="20.2107%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="19.9853%" y="405" width="0.0246%" height="15" fill="rgb(216,135,14)" fg:x="813" fg:w="1"/><text x="20.2353%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.02%)</title><rect x="20.0098%" y="405" width="0.0246%" height="15" fill="rgb(241,47,5)" fg:x="814" fg:w="1"/><text x="20.2598%" y="415.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.02%)</title><rect x="20.0098%" y="389" width="0.0246%" height="15" fill="rgb(233,42,35)" fg:x="814" fg:w="1"/><text x="20.2598%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (20 samples, 0.49%)</title><rect x="19.5674%" y="421" width="0.4916%" height="15" fill="rgb(231,13,6)" fg:x="796" fg:w="20"/><text x="19.8174%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.02%)</title><rect x="20.0344%" y="405" width="0.0246%" height="15" fill="rgb(207,181,40)" fg:x="815" fg:w="1"/><text x="20.2844%" y="415.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.02%)</title><rect x="20.3540%" y="405" width="0.0246%" height="15" fill="rgb(254,173,49)" fg:x="828" fg:w="1"/><text x="20.6040%" y="415.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (5 samples, 0.12%)</title><rect x="20.3786%" y="405" width="0.1229%" height="15" fill="rgb(221,1,38)" fg:x="829" fg:w="5"/><text x="20.6286%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect x="20.5015%" y="405" width="0.0246%" height="15" fill="rgb(206,124,46)" fg:x="834" fg:w="1"/><text x="20.7515%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.02%)</title><rect x="20.5261%" y="405" width="0.0246%" height="15" fill="rgb(249,21,11)" fg:x="835" fg:w="1"/><text x="20.7761%" y="415.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.02%)</title><rect x="20.5506%" y="405" width="0.0246%" height="15" fill="rgb(222,201,40)" fg:x="836" fg:w="1"/><text x="20.8006%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.02%)</title><rect x="20.5752%" y="405" width="0.0246%" height="15" fill="rgb(235,61,29)" fg:x="837" fg:w="1"/><text x="20.8252%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (23 samples, 0.57%)</title><rect x="20.0590%" y="421" width="0.5654%" height="15" fill="rgb(219,207,3)" fg:x="816" fg:w="23"/><text x="20.3090%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.02%)</title><rect x="20.5998%" y="405" width="0.0246%" height="15" fill="rgb(222,56,46)" fg:x="838" fg:w="1"/><text x="20.8498%" y="415.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.02%)</title><rect x="21.8535%" y="405" width="0.0246%" height="15" fill="rgb(239,76,54)" fg:x="889" fg:w="1"/><text x="22.1035%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.02%)</title><rect x="21.8781%" y="405" width="0.0246%" height="15" fill="rgb(231,124,27)" fg:x="890" fg:w="1"/><text x="22.1281%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (5 samples, 0.12%)</title><rect x="21.9027%" y="405" width="0.1229%" height="15" fill="rgb(249,195,6)" fg:x="891" fg:w="5"/><text x="22.1527%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.05%)</title><rect x="22.0256%" y="405" width="0.0492%" height="15" fill="rgb(237,174,47)" fg:x="896" fg:w="2"/><text x="22.2756%" y="415.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.02%)</title><rect x="22.0747%" y="389" width="0.0246%" height="15" fill="rgb(206,201,31)" fg:x="898" fg:w="1"/><text x="22.3247%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.05%)</title><rect x="22.0747%" y="405" width="0.0492%" height="15" fill="rgb(231,57,52)" fg:x="898" fg:w="2"/><text x="22.3247%" y="415.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="22.0993%" y="389" width="0.0246%" height="15" fill="rgb(248,177,22)" fg:x="899" fg:w="1"/><text x="22.3493%" y="399.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="22.0993%" y="373" width="0.0246%" height="15" fill="rgb(215,211,37)" fg:x="899" fg:w="1"/><text x="22.3493%" y="383.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.02%)</title><rect x="22.0993%" y="357" width="0.0246%" height="15" fill="rgb(241,128,51)" fg:x="899" fg:w="1"/><text x="22.3493%" y="367.50"></text></g><g><title>__do_softirq (1 samples, 0.02%)</title><rect x="22.0993%" y="341" width="0.0246%" height="15" fill="rgb(227,165,31)" fg:x="899" fg:w="1"/><text x="22.3493%" y="351.50"></text></g><g><title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="22.0993%" y="325" width="0.0246%" height="15" fill="rgb(228,167,24)" fg:x="899" fg:w="1"/><text x="22.3493%" y="335.50"></text></g><g><title>update_blocked_averages (1 samples, 0.02%)</title><rect x="22.0993%" y="309" width="0.0246%" height="15" fill="rgb(228,143,12)" fg:x="899" fg:w="1"/><text x="22.3493%" y="319.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.02%)</title><rect x="22.0993%" y="293" width="0.0246%" height="15" fill="rgb(249,149,8)" fg:x="899" fg:w="1"/><text x="22.3493%" y="303.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (62 samples, 1.52%)</title><rect x="20.6244%" y="421" width="1.5241%" height="15" fill="rgb(243,35,44)" fg:x="839" fg:w="62"/><text x="20.8744%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.02%)</title><rect x="22.1239%" y="405" width="0.0246%" height="15" fill="rgb(246,89,9)" fg:x="900" fg:w="1"/><text x="22.3739%" y="415.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (9 samples, 0.22%)</title><rect x="22.1485%" y="421" width="0.2212%" height="15" fill="rgb(233,213,13)" fg:x="901" fg:w="9"/><text x="22.3985%" y="431.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi64x (5 samples, 0.12%)</title><rect x="22.2468%" y="405" width="0.1229%" height="15" fill="rgb(233,141,41)" fg:x="905" fg:w="5"/><text x="22.4968%" y="415.50"></text></g><g><title>core::core_arch::simd::i64x4::new (3 samples, 0.07%)</title><rect x="22.2960%" y="389" width="0.0737%" height="15" fill="rgb(239,167,4)" fg:x="907" fg:w="3"/><text x="22.5460%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (35 samples, 0.86%)</title><rect x="22.3697%" y="421" width="0.8604%" height="15" fill="rgb(209,217,16)" fg:x="910" fg:w="35"/><text x="22.6197%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (29 samples, 0.71%)</title><rect x="23.2301%" y="421" width="0.7129%" height="15" fill="rgb(219,88,35)" fg:x="945" fg:w="29"/><text x="23.4801%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (36 samples, 0.88%)</title><rect x="23.9430%" y="421" width="0.8850%" height="15" fill="rgb(220,193,23)" fg:x="974" fg:w="36"/><text x="24.1930%" y="431.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (434 samples, 10.67%)</title><rect x="14.8476%" y="437" width="10.6686%" height="15" fill="rgb(230,90,52)" fg:x="604" fg:w="434"/><text x="15.0976%" y="447.50">chacha20::backen..</text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (28 samples, 0.69%)</title><rect x="24.8279%" y="421" width="0.6883%" height="15" fill="rgb(252,106,19)" fg:x="1010" fg:w="28"/><text x="25.0779%" y="431.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (1 samples, 0.02%)</title><rect x="25.5162%" y="437" width="0.0246%" height="15" fill="rgb(206,74,20)" fg:x="1038" fg:w="1"/><text x="25.7662%" y="447.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (4 samples, 0.10%)</title><rect x="25.5408%" y="437" width="0.0983%" height="15" fill="rgb(230,138,44)" fg:x="1039" fg:w="4"/><text x="25.7908%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (13 samples, 0.32%)</title><rect x="25.6391%" y="437" width="0.3196%" height="15" fill="rgb(235,182,43)" fg:x="1043" fg:w="13"/><text x="25.8891%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (8 samples, 0.20%)</title><rect x="25.9587%" y="437" width="0.1967%" height="15" fill="rgb(242,16,51)" fg:x="1056" fg:w="8"/><text x="26.2087%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (3 samples, 0.07%)</title><rect x="26.1554%" y="437" width="0.0737%" height="15" fill="rgb(248,9,4)" fg:x="1064" fg:w="3"/><text x="26.4054%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.02%)</title><rect x="26.2291%" y="437" width="0.0246%" height="15" fill="rgb(210,31,22)" fg:x="1067" fg:w="1"/><text x="26.4791%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (21 samples, 0.52%)</title><rect x="26.2537%" y="437" width="0.5162%" height="15" fill="rgb(239,54,39)" fg:x="1068" fg:w="21"/><text x="26.5037%" y="447.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.02%)</title><rect x="26.7699%" y="437" width="0.0246%" height="15" fill="rgb(230,99,41)" fg:x="1089" fg:w="1"/><text x="27.0199%" y="447.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi64x (1 samples, 0.02%)</title><rect x="26.7699%" y="421" width="0.0246%" height="15" fill="rgb(253,106,12)" fg:x="1089" fg:w="1"/><text x="27.0199%" y="431.50"></text></g><g><title>core::core_arch::simd::i64x4::new (1 samples, 0.02%)</title><rect x="26.7699%" y="405" width="0.0246%" height="15" fill="rgb(213,46,41)" fg:x="1089" fg:w="1"/><text x="27.0199%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (11 samples, 0.27%)</title><rect x="26.7945%" y="437" width="0.2704%" height="15" fill="rgb(215,133,35)" fg:x="1090" fg:w="11"/><text x="27.0445%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (11 samples, 0.27%)</title><rect x="27.0649%" y="437" width="0.2704%" height="15" fill="rgb(213,28,5)" fg:x="1101" fg:w="11"/><text x="27.3149%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (9 samples, 0.22%)</title><rect x="27.3353%" y="437" width="0.2212%" height="15" fill="rgb(215,77,49)" fg:x="1112" fg:w="9"/><text x="27.5853%" y="447.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_par_ks_blocks (524 samples, 12.88%)</title><rect x="14.8476%" y="485" width="12.8810%" height="15" fill="rgb(248,100,22)" fg:x="604" fg:w="524"/><text x="15.0976%" y="495.50">&lt;chacha20::backends..</text></g><g><title>chacha20::backends::avx2::rounds (524 samples, 12.88%)</title><rect x="14.8476%" y="469" width="12.8810%" height="15" fill="rgb(208,67,9)" fg:x="604" fg:w="524"/><text x="15.0976%" y="479.50">chacha20::backends:..</text></g><g><title>chacha20::backends::avx2::double_quarter_round (524 samples, 12.88%)</title><rect x="14.8476%" y="453" width="12.8810%" height="15" fill="rgb(219,133,21)" fg:x="604" fg:w="524"/><text x="15.0976%" y="463.50">chacha20::backends:..</text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (7 samples, 0.17%)</title><rect x="27.5565%" y="437" width="0.1721%" height="15" fill="rgb(246,46,29)" fg:x="1121" fg:w="7"/><text x="27.8065%" y="447.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.02%)</title><rect x="27.8269%" y="405" width="0.0246%" height="15" fill="rgb(246,185,52)" fg:x="1132" fg:w="1"/><text x="28.0769%" y="415.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (18 samples, 0.44%)</title><rect x="27.8515%" y="405" width="0.4425%" height="15" fill="rgb(252,136,11)" fg:x="1133" fg:w="18"/><text x="28.1015%" y="415.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (1 samples, 0.02%)</title><rect x="28.2940%" y="405" width="0.0246%" height="15" fill="rgb(219,138,53)" fg:x="1151" fg:w="1"/><text x="28.5440%" y="415.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (2 samples, 0.05%)</title><rect x="28.3186%" y="405" width="0.0492%" height="15" fill="rgb(211,51,23)" fg:x="1152" fg:w="2"/><text x="28.5686%" y="415.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.02%)</title><rect x="28.5398%" y="389" width="0.0246%" height="15" fill="rgb(247,221,28)" fg:x="1161" fg:w="1"/><text x="28.7898%" y="399.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (1 samples, 0.02%)</title><rect x="28.5644%" y="389" width="0.0246%" height="15" fill="rgb(251,222,45)" fg:x="1162" fg:w="1"/><text x="28.8144%" y="399.50"></text></g><g><title>chacha20::backends::avx2::inner (1 samples, 0.02%)</title><rect x="28.5890%" y="389" width="0.0246%" height="15" fill="rgb(217,162,53)" fg:x="1163" fg:w="1"/><text x="28.8390%" y="399.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (1 samples, 0.02%)</title><rect x="28.5890%" y="373" width="0.0246%" height="15" fill="rgb(229,93,14)" fg:x="1163" fg:w="1"/><text x="28.8390%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.02%)</title><rect x="28.6136%" y="389" width="0.0246%" height="15" fill="rgb(209,67,49)" fg:x="1164" fg:w="1"/><text x="28.8636%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.02%)</title><rect x="28.6382%" y="389" width="0.0246%" height="15" fill="rgb(213,87,29)" fg:x="1165" fg:w="1"/><text x="28.8882%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.05%)</title><rect x="28.6627%" y="389" width="0.0492%" height="15" fill="rgb(205,151,52)" fg:x="1166" fg:w="2"/><text x="28.9127%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (17 samples, 0.42%)</title><rect x="28.3677%" y="405" width="0.4179%" height="15" fill="rgb(253,215,39)" fg:x="1154" fg:w="17"/><text x="28.6177%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (3 samples, 0.07%)</title><rect x="28.7119%" y="389" width="0.0737%" height="15" fill="rgb(221,220,41)" fg:x="1168" fg:w="3"/><text x="28.9619%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (2 samples, 0.05%)</title><rect x="28.7856%" y="405" width="0.0492%" height="15" fill="rgb(218,133,21)" fg:x="1171" fg:w="2"/><text x="29.0356%" y="415.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.02%)</title><rect x="29.0069%" y="389" width="0.0246%" height="15" fill="rgb(221,193,43)" fg:x="1180" fg:w="1"/><text x="29.2569%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (9 samples, 0.22%)</title><rect x="28.8348%" y="405" width="0.2212%" height="15" fill="rgb(240,128,52)" fg:x="1173" fg:w="9"/><text x="29.0848%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.02%)</title><rect x="29.0315%" y="389" width="0.0246%" height="15" fill="rgb(253,114,12)" fg:x="1181" fg:w="1"/><text x="29.2815%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (5 samples, 0.12%)</title><rect x="29.0560%" y="405" width="0.1229%" height="15" fill="rgb(215,223,47)" fg:x="1182" fg:w="5"/><text x="29.3060%" y="415.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.02%)</title><rect x="29.4494%" y="389" width="0.0246%" height="15" fill="rgb(248,225,23)" fg:x="1198" fg:w="1"/><text x="29.6994%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect x="29.4739%" y="389" width="0.0246%" height="15" fill="rgb(250,108,0)" fg:x="1199" fg:w="1"/><text x="29.7239%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.02%)</title><rect x="29.4985%" y="389" width="0.0246%" height="15" fill="rgb(228,208,7)" fg:x="1200" fg:w="1"/><text x="29.7485%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (15 samples, 0.37%)</title><rect x="29.1790%" y="405" width="0.3687%" height="15" fill="rgb(244,45,10)" fg:x="1187" fg:w="15"/><text x="29.4290%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="29.5231%" y="389" width="0.0246%" height="15" fill="rgb(207,125,25)" fg:x="1201" fg:w="1"/><text x="29.7731%" y="399.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="29.5231%" y="373" width="0.0246%" height="15" fill="rgb(210,195,18)" fg:x="1201" fg:w="1"/><text x="29.7731%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.02%)</title><rect x="29.5477%" y="405" width="0.0246%" height="15" fill="rgb(249,80,12)" fg:x="1202" fg:w="1"/><text x="29.7977%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (10 samples, 0.25%)</title><rect x="29.5723%" y="405" width="0.2458%" height="15" fill="rgb(221,65,9)" fg:x="1203" fg:w="10"/><text x="29.8223%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (6 samples, 0.15%)</title><rect x="29.8181%" y="405" width="0.1475%" height="15" fill="rgb(235,49,36)" fg:x="1213" fg:w="6"/><text x="30.0681%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (2 samples, 0.05%)</title><rect x="29.9656%" y="405" width="0.0492%" height="15" fill="rgb(225,32,20)" fg:x="1219" fg:w="2"/><text x="30.2156%" y="415.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (104 samples, 2.56%)</title><rect x="27.7286%" y="421" width="2.5565%" height="15" fill="rgb(215,141,46)" fg:x="1128" fg:w="104"/><text x="27.9786%" y="431.50">ch..</text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (11 samples, 0.27%)</title><rect x="30.0147%" y="405" width="0.2704%" height="15" fill="rgb(250,160,47)" fg:x="1221" fg:w="11"/><text x="30.2647%" y="415.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (2 samples, 0.05%)</title><rect x="30.2852%" y="421" width="0.0492%" height="15" fill="rgb(216,222,40)" fg:x="1232" fg:w="2"/><text x="30.5352%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.02%)</title><rect x="30.3343%" y="421" width="0.0246%" height="15" fill="rgb(234,217,39)" fg:x="1234" fg:w="1"/><text x="30.5843%" y="431.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.02%)</title><rect x="30.3343%" y="405" width="0.0246%" height="15" fill="rgb(207,178,40)" fg:x="1234" fg:w="1"/><text x="30.5843%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (4 samples, 0.10%)</title><rect x="30.3589%" y="421" width="0.0983%" height="15" fill="rgb(221,136,13)" fg:x="1235" fg:w="4"/><text x="30.6089%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.05%)</title><rect x="30.4572%" y="421" width="0.0492%" height="15" fill="rgb(249,199,10)" fg:x="1239" fg:w="2"/><text x="30.7072%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (3 samples, 0.07%)</title><rect x="30.5064%" y="421" width="0.0737%" height="15" fill="rgb(249,222,13)" fg:x="1241" fg:w="3"/><text x="30.7564%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (2 samples, 0.05%)</title><rect x="30.5801%" y="421" width="0.0492%" height="15" fill="rgb(244,185,38)" fg:x="1244" fg:w="2"/><text x="30.8301%" y="431.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (645 samples, 15.86%)</title><rect x="14.8476%" y="645" width="15.8555%" height="15" fill="rgb(236,202,9)" fg:x="604" fg:w="645"/><text x="15.0976%" y="655.50">&lt;chacha20poly1305::ChaCh..</text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::decrypt_in_place_detached (645 samples, 15.86%)</title><rect x="14.8476%" y="629" width="15.8555%" height="15" fill="rgb(250,229,37)" fg:x="604" fg:w="645"/><text x="15.0976%" y="639.50">chacha20poly1305::cipher..</text></g><g><title>cipher::stream::StreamCipher::apply_keystream (645 samples, 15.86%)</title><rect x="14.8476%" y="613" width="15.8555%" height="15" fill="rgb(206,174,23)" fg:x="604" fg:w="645"/><text x="15.0976%" y="623.50">cipher::stream::StreamCi..</text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (645 samples, 15.86%)</title><rect x="14.8476%" y="597" width="15.8555%" height="15" fill="rgb(211,33,43)" fg:x="604" fg:w="645"/><text x="15.0976%" y="607.50">cipher::stream::StreamCi..</text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (645 samples, 15.86%)</title><rect x="14.8476%" y="581" width="15.8555%" height="15" fill="rgb(245,58,50)" fg:x="604" fg:w="645"/><text x="15.0976%" y="591.50">&lt;cipher::stream_wrapper:..</text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (645 samples, 15.86%)</title><rect x="14.8476%" y="565" width="15.8555%" height="15" fill="rgb(244,68,36)" fg:x="604" fg:w="645"/><text x="15.0976%" y="575.50">cipher::stream_core::Str..</text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (645 samples, 15.86%)</title><rect x="14.8476%" y="549" width="15.8555%" height="15" fill="rgb(232,229,15)" fg:x="604" fg:w="645"/><text x="15.0976%" y="559.50">&lt;chacha20::xchacha::XCha..</text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (645 samples, 15.86%)</title><rect x="14.8476%" y="533" width="15.8555%" height="15" fill="rgb(254,30,23)" fg:x="604" fg:w="645"/><text x="15.0976%" y="543.50">&lt;chacha20::ChaChaCore&lt;R&gt;..</text></g><g><title>chacha20::backends::avx2::inner (645 samples, 15.86%)</title><rect x="14.8476%" y="517" width="15.8555%" height="15" fill="rgb(235,160,14)" fg:x="604" fg:w="645"/><text x="15.0976%" y="527.50">chacha20::backends::avx2..</text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (645 samples, 15.86%)</title><rect x="14.8476%" y="501" width="15.8555%" height="15" fill="rgb(212,155,44)" fg:x="604" fg:w="645"/><text x="15.0976%" y="511.50">&lt;cipher::stream_core::Ap..</text></g><g><title>cipher::stream_core::StreamBackend::gen_tail_blocks (121 samples, 2.97%)</title><rect x="27.7286%" y="485" width="2.9744%" height="15" fill="rgb(226,2,50)" fg:x="1128" fg:w="121"/><text x="27.9786%" y="495.50">cip..</text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (121 samples, 2.97%)</title><rect x="27.7286%" y="469" width="2.9744%" height="15" fill="rgb(234,177,6)" fg:x="1128" fg:w="121"/><text x="27.9786%" y="479.50">&lt;ch..</text></g><g><title>chacha20::backends::avx2::rounds (121 samples, 2.97%)</title><rect x="27.7286%" y="453" width="2.9744%" height="15" fill="rgb(217,24,9)" fg:x="1128" fg:w="121"/><text x="27.9786%" y="463.50">cha..</text></g><g><title>chacha20::backends::avx2::double_quarter_round (121 samples, 2.97%)</title><rect x="27.7286%" y="437" width="2.9744%" height="15" fill="rgb(220,13,46)" fg:x="1128" fg:w="121"/><text x="27.9786%" y="447.50">cha..</text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (3 samples, 0.07%)</title><rect x="30.6293%" y="421" width="0.0737%" height="15" fill="rgb(239,221,27)" fg:x="1246" fg:w="3"/><text x="30.8793%" y="431.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.02%)</title><rect x="30.7522%" y="421" width="0.0246%" height="15" fill="rgb(222,198,25)" fg:x="1251" fg:w="1"/><text x="31.0022%" y="431.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (13 samples, 0.32%)</title><rect x="30.7768%" y="421" width="0.3196%" height="15" fill="rgb(211,99,13)" fg:x="1252" fg:w="13"/><text x="31.0268%" y="431.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (4 samples, 0.10%)</title><rect x="31.0964%" y="421" width="0.0983%" height="15" fill="rgb(232,111,31)" fg:x="1265" fg:w="4"/><text x="31.3464%" y="431.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (2 samples, 0.05%)</title><rect x="31.1947%" y="421" width="0.0492%" height="15" fill="rgb(245,82,37)" fg:x="1269" fg:w="2"/><text x="31.4447%" y="431.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (1 samples, 0.02%)</title><rect x="31.4159%" y="405" width="0.0246%" height="15" fill="rgb(227,149,46)" fg:x="1278" fg:w="1"/><text x="31.6659%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.02%)</title><rect x="31.4405%" y="405" width="0.0246%" height="15" fill="rgb(218,36,50)" fg:x="1279" fg:w="1"/><text x="31.6905%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect x="31.4651%" y="405" width="0.0246%" height="15" fill="rgb(226,80,48)" fg:x="1280" fg:w="1"/><text x="31.7151%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (2 samples, 0.05%)</title><rect x="31.4897%" y="405" width="0.0492%" height="15" fill="rgb(238,224,15)" fg:x="1281" fg:w="2"/><text x="31.7397%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (13 samples, 0.32%)</title><rect x="31.2439%" y="421" width="0.3196%" height="15" fill="rgb(241,136,10)" fg:x="1271" fg:w="13"/><text x="31.4939%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="31.5388%" y="405" width="0.0246%" height="15" fill="rgb(208,32,45)" fg:x="1283" fg:w="1"/><text x="31.7888%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (6 samples, 0.15%)</title><rect x="31.5634%" y="421" width="0.1475%" height="15" fill="rgb(207,135,9)" fg:x="1284" fg:w="6"/><text x="31.8134%" y="431.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.02%)</title><rect x="31.7601%" y="405" width="0.0246%" height="15" fill="rgb(206,86,44)" fg:x="1292" fg:w="1"/><text x="32.0101%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (2 samples, 0.05%)</title><rect x="31.7847%" y="405" width="0.0492%" height="15" fill="rgb(245,177,15)" fg:x="1293" fg:w="2"/><text x="32.0347%" y="415.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.02%)</title><rect x="31.8092%" y="389" width="0.0246%" height="15" fill="rgb(206,64,50)" fg:x="1294" fg:w="1"/><text x="32.0592%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (2 samples, 0.05%)</title><rect x="31.8338%" y="405" width="0.0492%" height="15" fill="rgb(234,36,40)" fg:x="1295" fg:w="2"/><text x="32.0838%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.05%)</title><rect x="31.8830%" y="405" width="0.0492%" height="15" fill="rgb(213,64,8)" fg:x="1297" fg:w="2"/><text x="32.1330%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (10 samples, 0.25%)</title><rect x="31.7109%" y="421" width="0.2458%" height="15" fill="rgb(210,75,36)" fg:x="1290" fg:w="10"/><text x="31.9609%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.02%)</title><rect x="31.9322%" y="405" width="0.0246%" height="15" fill="rgb(229,88,21)" fg:x="1299" fg:w="1"/><text x="32.1822%" y="415.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.02%)</title><rect x="31.9567%" y="405" width="0.0246%" height="15" fill="rgb(252,204,47)" fg:x="1300" fg:w="1"/><text x="32.2067%" y="415.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.02%)</title><rect x="31.9813%" y="405" width="0.0246%" height="15" fill="rgb(208,77,27)" fg:x="1301" fg:w="1"/><text x="32.2313%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.02%)</title><rect x="32.0059%" y="405" width="0.0246%" height="15" fill="rgb(221,76,26)" fg:x="1302" fg:w="1"/><text x="32.2559%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect x="32.0305%" y="405" width="0.0246%" height="15" fill="rgb(225,139,18)" fg:x="1303" fg:w="1"/><text x="32.2805%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.02%)</title><rect x="32.0551%" y="405" width="0.0246%" height="15" fill="rgb(230,137,11)" fg:x="1304" fg:w="1"/><text x="32.3051%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (6 samples, 0.15%)</title><rect x="31.9567%" y="421" width="0.1475%" height="15" fill="rgb(212,28,1)" fg:x="1300" fg:w="6"/><text x="32.2067%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.02%)</title><rect x="32.0796%" y="405" width="0.0246%" height="15" fill="rgb(248,164,17)" fg:x="1305" fg:w="1"/><text x="32.3296%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (3 samples, 0.07%)</title><rect x="32.1042%" y="421" width="0.0737%" height="15" fill="rgb(222,171,42)" fg:x="1306" fg:w="3"/><text x="32.3542%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (2 samples, 0.05%)</title><rect x="32.5467%" y="405" width="0.0492%" height="15" fill="rgb(243,84,45)" fg:x="1324" fg:w="2"/><text x="32.7967%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.02%)</title><rect x="32.5959%" y="405" width="0.0246%" height="15" fill="rgb(252,49,23)" fg:x="1326" fg:w="1"/><text x="32.8459%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (19 samples, 0.47%)</title><rect x="32.1780%" y="421" width="0.4671%" height="15" fill="rgb(215,19,7)" fg:x="1309" fg:w="19"/><text x="32.4280%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.02%)</title><rect x="32.6205%" y="405" width="0.0246%" height="15" fill="rgb(238,81,41)" fg:x="1327" fg:w="1"/><text x="32.8705%" y="415.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (2 samples, 0.05%)</title><rect x="32.6450%" y="421" width="0.0492%" height="15" fill="rgb(210,199,37)" fg:x="1328" fg:w="2"/><text x="32.8950%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (9 samples, 0.22%)</title><rect x="32.6942%" y="421" width="0.2212%" height="15" fill="rgb(244,192,49)" fg:x="1330" fg:w="9"/><text x="32.9442%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (5 samples, 0.12%)</title><rect x="32.9154%" y="421" width="0.1229%" height="15" fill="rgb(226,211,11)" fg:x="1339" fg:w="5"/><text x="33.1654%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (5 samples, 0.12%)</title><rect x="33.0383%" y="421" width="0.1229%" height="15" fill="rgb(236,162,54)" fg:x="1344" fg:w="5"/><text x="33.2883%" y="431.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (106 samples, 2.61%)</title><rect x="30.7030%" y="437" width="2.6057%" height="15" fill="rgb(220,229,9)" fg:x="1249" fg:w="106"/><text x="30.9530%" y="447.50">ch..</text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (6 samples, 0.15%)</title><rect x="33.1613%" y="421" width="0.1475%" height="15" fill="rgb(250,87,22)" fg:x="1349" fg:w="6"/><text x="33.4113%" y="431.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (2 samples, 0.05%)</title><rect x="33.3088%" y="437" width="0.0492%" height="15" fill="rgb(239,43,17)" fg:x="1355" fg:w="2"/><text x="33.5588%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (2 samples, 0.05%)</title><rect x="33.3579%" y="437" width="0.0492%" height="15" fill="rgb(231,177,25)" fg:x="1357" fg:w="2"/><text x="33.6079%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (2 samples, 0.05%)</title><rect x="33.4071%" y="437" width="0.0492%" height="15" fill="rgb(219,179,1)" fg:x="1359" fg:w="2"/><text x="33.6571%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (2 samples, 0.05%)</title><rect x="33.4562%" y="437" width="0.0492%" height="15" fill="rgb(238,219,53)" fg:x="1361" fg:w="2"/><text x="33.7062%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (6 samples, 0.15%)</title><rect x="33.5054%" y="437" width="0.1475%" height="15" fill="rgb(232,167,36)" fg:x="1363" fg:w="6"/><text x="33.7554%" y="447.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (2 samples, 0.05%)</title><rect x="33.6037%" y="421" width="0.0492%" height="15" fill="rgb(244,19,51)" fg:x="1367" fg:w="2"/><text x="33.8537%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (7 samples, 0.17%)</title><rect x="33.6529%" y="437" width="0.1721%" height="15" fill="rgb(224,6,22)" fg:x="1369" fg:w="7"/><text x="33.9029%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (3 samples, 0.07%)</title><rect x="33.8250%" y="437" width="0.0737%" height="15" fill="rgb(224,145,5)" fg:x="1376" fg:w="3"/><text x="34.0750%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="33.8987%" y="437" width="0.0246%" height="15" fill="rgb(234,130,49)" fg:x="1379" fg:w="1"/><text x="34.1487%" y="447.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_par_ks_blocks (132 samples, 3.24%)</title><rect x="30.7030%" y="485" width="3.2448%" height="15" fill="rgb(254,6,2)" fg:x="1249" fg:w="132"/><text x="30.9530%" y="495.50">&lt;ch..</text></g><g><title>chacha20::backends::avx2::rounds (132 samples, 3.24%)</title><rect x="30.7030%" y="469" width="3.2448%" height="15" fill="rgb(208,96,46)" fg:x="1249" fg:w="132"/><text x="30.9530%" y="479.50">cha..</text></g><g><title>chacha20::backends::avx2::double_quarter_round (132 samples, 3.24%)</title><rect x="30.7030%" y="453" width="3.2448%" height="15" fill="rgb(239,3,39)" fg:x="1249" fg:w="132"/><text x="30.9530%" y="463.50">cha..</text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.02%)</title><rect x="33.9233%" y="437" width="0.0246%" height="15" fill="rgb(233,210,1)" fg:x="1380" fg:w="1"/><text x="34.1733%" y="447.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (2 samples, 0.05%)</title><rect x="33.9725%" y="405" width="0.0492%" height="15" fill="rgb(244,137,37)" fg:x="1382" fg:w="2"/><text x="34.2225%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.02%)</title><rect x="34.1200%" y="389" width="0.0246%" height="15" fill="rgb(240,136,2)" fg:x="1388" fg:w="1"/><text x="34.3700%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.02%)</title><rect x="34.1445%" y="389" width="0.0246%" height="15" fill="rgb(239,18,37)" fg:x="1389" fg:w="1"/><text x="34.3945%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (7 samples, 0.17%)</title><rect x="34.0216%" y="405" width="0.1721%" height="15" fill="rgb(218,185,22)" fg:x="1384" fg:w="7"/><text x="34.2716%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.02%)</title><rect x="34.1691%" y="389" width="0.0246%" height="15" fill="rgb(225,218,4)" fg:x="1390" fg:w="1"/><text x="34.4191%" y="399.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.02%)</title><rect x="34.1937%" y="389" width="0.0246%" height="15" fill="rgb(230,182,32)" fg:x="1391" fg:w="1"/><text x="34.4437%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (2 samples, 0.05%)</title><rect x="34.1937%" y="405" width="0.0492%" height="15" fill="rgb(242,56,43)" fg:x="1391" fg:w="2"/><text x="34.4437%" y="415.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (1 samples, 0.02%)</title><rect x="34.2183%" y="389" width="0.0246%" height="15" fill="rgb(233,99,24)" fg:x="1392" fg:w="1"/><text x="34.4683%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.02%)</title><rect x="34.2429%" y="405" width="0.0246%" height="15" fill="rgb(234,209,42)" fg:x="1393" fg:w="1"/><text x="34.4929%" y="415.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.02%)</title><rect x="34.2429%" y="389" width="0.0246%" height="15" fill="rgb(227,7,12)" fg:x="1393" fg:w="1"/><text x="34.4929%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (4 samples, 0.10%)</title><rect x="34.2675%" y="405" width="0.0983%" height="15" fill="rgb(245,203,43)" fg:x="1394" fg:w="4"/><text x="34.5175%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.02%)</title><rect x="34.3412%" y="389" width="0.0246%" height="15" fill="rgb(238,205,33)" fg:x="1397" fg:w="1"/><text x="34.5912%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.02%)</title><rect x="34.3658%" y="405" width="0.0246%" height="15" fill="rgb(231,56,7)" fg:x="1398" fg:w="1"/><text x="34.6158%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (4 samples, 0.10%)</title><rect x="34.3904%" y="405" width="0.0983%" height="15" fill="rgb(244,186,29)" fg:x="1399" fg:w="4"/><text x="34.6404%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (4 samples, 0.10%)</title><rect x="34.4887%" y="405" width="0.0983%" height="15" fill="rgb(234,111,31)" fg:x="1403" fg:w="4"/><text x="34.7387%" y="415.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (30 samples, 0.74%)</title><rect x="33.9479%" y="421" width="0.7375%" height="15" fill="rgb(241,149,10)" fg:x="1381" fg:w="30"/><text x="34.1979%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (4 samples, 0.10%)</title><rect x="34.5870%" y="405" width="0.0983%" height="15" fill="rgb(249,206,44)" fg:x="1407" fg:w="4"/><text x="34.8370%" y="415.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::encrypt_in_place_detached (163 samples, 4.01%)</title><rect x="30.7030%" y="645" width="4.0069%" height="15" fill="rgb(251,153,30)" fg:x="1249" fg:w="163"/><text x="30.9530%" y="655.50">&lt;cha..</text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::encrypt_in_place_detached (163 samples, 4.01%)</title><rect x="30.7030%" y="629" width="4.0069%" height="15" fill="rgb(239,152,38)" fg:x="1249" fg:w="163"/><text x="30.9530%" y="639.50">chac..</text></g><g><title>cipher::stream::StreamCipher::apply_keystream (163 samples, 4.01%)</title><rect x="30.7030%" y="613" width="4.0069%" height="15" fill="rgb(249,139,47)" fg:x="1249" fg:w="163"/><text x="30.9530%" y="623.50">ciph..</text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (163 samples, 4.01%)</title><rect x="30.7030%" y="597" width="4.0069%" height="15" fill="rgb(244,64,35)" fg:x="1249" fg:w="163"/><text x="30.9530%" y="607.50">ciph..</text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (163 samples, 4.01%)</title><rect x="30.7030%" y="581" width="4.0069%" height="15" fill="rgb(216,46,15)" fg:x="1249" fg:w="163"/><text x="30.9530%" y="591.50">&lt;cip..</text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (163 samples, 4.01%)</title><rect x="30.7030%" y="565" width="4.0069%" height="15" fill="rgb(250,74,19)" fg:x="1249" fg:w="163"/><text x="30.9530%" y="575.50">ciph..</text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (163 samples, 4.01%)</title><rect x="30.7030%" y="549" width="4.0069%" height="15" fill="rgb(249,42,33)" fg:x="1249" fg:w="163"/><text x="30.9530%" y="559.50">&lt;cha..</text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (163 samples, 4.01%)</title><rect x="30.7030%" y="533" width="4.0069%" height="15" fill="rgb(242,149,17)" fg:x="1249" fg:w="163"/><text x="30.9530%" y="543.50">&lt;cha..</text></g><g><title>chacha20::backends::avx2::inner (163 samples, 4.01%)</title><rect x="30.7030%" y="517" width="4.0069%" height="15" fill="rgb(244,29,21)" fg:x="1249" fg:w="163"/><text x="30.9530%" y="527.50">chac..</text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (163 samples, 4.01%)</title><rect x="30.7030%" y="501" width="4.0069%" height="15" fill="rgb(220,130,37)" fg:x="1249" fg:w="163"/><text x="30.9530%" y="511.50">&lt;cip..</text></g><g><title>cipher::stream_core::StreamBackend::gen_tail_blocks (31 samples, 0.76%)</title><rect x="33.9479%" y="485" width="0.7620%" height="15" fill="rgb(211,67,2)" fg:x="1381" fg:w="31"/><text x="34.1979%" y="495.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (31 samples, 0.76%)</title><rect x="33.9479%" y="469" width="0.7620%" height="15" fill="rgb(235,68,52)" fg:x="1381" fg:w="31"/><text x="34.1979%" y="479.50"></text></g><g><title>chacha20::backends::avx2::rounds (31 samples, 0.76%)</title><rect x="33.9479%" y="453" width="0.7620%" height="15" fill="rgb(246,142,3)" fg:x="1381" fg:w="31"/><text x="34.1979%" y="463.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (31 samples, 0.76%)</title><rect x="33.9479%" y="437" width="0.7620%" height="15" fill="rgb(241,25,7)" fg:x="1381" fg:w="31"/><text x="34.1979%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.02%)</title><rect x="34.6853%" y="421" width="0.0246%" height="15" fill="rgb(242,119,39)" fg:x="1411" fg:w="1"/><text x="34.9353%" y="431.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (2 samples, 0.05%)</title><rect x="34.7099%" y="645" width="0.0492%" height="15" fill="rgb(241,98,45)" fg:x="1412" fg:w="2"/><text x="34.9599%" y="655.50"></text></g><g><title>inout::inout_buf::InOutBuf&lt;u8&gt;::xor_in2out (2 samples, 0.05%)</title><rect x="34.7099%" y="629" width="0.0492%" height="15" fill="rgb(254,28,30)" fg:x="1412" fg:w="2"/><text x="34.9599%" y="639.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipherSeek&gt;::try_seek (1 samples, 0.02%)</title><rect x="34.7591%" y="645" width="0.0246%" height="15" fill="rgb(241,142,54)" fg:x="1414" fg:w="1"/><text x="35.0091%" y="655.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (197 samples, 4.84%)</title><rect x="34.7837%" y="645" width="4.8427%" height="15" fill="rgb(222,85,15)" fg:x="1415" fg:w="197"/><text x="35.0337%" y="655.50">&lt;core:..</text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.02%)</title><rect x="39.6264%" y="645" width="0.0246%" height="15" fill="rgb(210,85,47)" fg:x="1612" fg:w="1"/><text x="39.8764%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="39.6509%" y="645" width="0.0246%" height="15" fill="rgb(224,206,25)" fg:x="1613" fg:w="1"/><text x="39.9009%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (54 samples, 1.33%)</title><rect x="39.6755%" y="645" width="1.3274%" height="15" fill="rgb(243,201,19)" fg:x="1614" fg:w="54"/><text x="39.9255%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (2 samples, 0.05%)</title><rect x="41.0029%" y="645" width="0.0492%" height="15" fill="rgb(236,59,4)" fg:x="1668" fg:w="2"/><text x="41.2529%" y="655.50"></text></g><g><title>core::cmp::min (1 samples, 0.02%)</title><rect x="41.0275%" y="629" width="0.0246%" height="15" fill="rgb(254,179,45)" fg:x="1669" fg:w="1"/><text x="41.2775%" y="639.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.02%)</title><rect x="41.0275%" y="613" width="0.0246%" height="15" fill="rgb(226,14,10)" fg:x="1669" fg:w="1"/><text x="41.2775%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (3 samples, 0.07%)</title><rect x="41.0521%" y="645" width="0.0737%" height="15" fill="rgb(244,27,41)" fg:x="1670" fg:w="3"/><text x="41.3021%" y="655.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (41 samples, 1.01%)</title><rect x="41.1259%" y="645" width="1.0079%" height="15" fill="rgb(235,35,32)" fg:x="1673" fg:w="41"/><text x="41.3759%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (5 samples, 0.12%)</title><rect x="42.0108%" y="629" width="0.1229%" height="15" fill="rgb(218,68,31)" fg:x="1709" fg:w="5"/><text x="42.2608%" y="639.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect x="42.1337%" y="645" width="0.0246%" height="15" fill="rgb(207,120,37)" fg:x="1714" fg:w="1"/><text x="42.3837%" y="655.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.07%)</title><rect x="42.1583%" y="645" width="0.0737%" height="15" fill="rgb(227,98,0)" fg:x="1715" fg:w="3"/><text x="42.4083%" y="655.50"></text></g><g><title>&lt;core::slice::iter::ChunksExactMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.02%)</title><rect x="42.2321%" y="645" width="0.0246%" height="15" fill="rgb(207,7,3)" fg:x="1718" fg:w="1"/><text x="42.4821%" y="655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (1 samples, 0.02%)</title><rect x="42.2566%" y="645" width="0.0246%" height="15" fill="rgb(206,98,19)" fg:x="1719" fg:w="1"/><text x="42.5066%" y="655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.20%)</title><rect x="42.2812%" y="645" width="0.1967%" height="15" fill="rgb(217,5,26)" fg:x="1720" fg:w="8"/><text x="42.5312%" y="655.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (3 samples, 0.07%)</title><rect x="42.4041%" y="629" width="0.0737%" height="15" fill="rgb(235,190,38)" fg:x="1725" fg:w="3"/><text x="42.6541%" y="639.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (2 samples, 0.05%)</title><rect x="42.4287%" y="613" width="0.0492%" height="15" fill="rgb(247,86,24)" fg:x="1726" fg:w="2"/><text x="42.6787%" y="623.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.02%)</title><rect x="42.4533%" y="597" width="0.0246%" height="15" fill="rgb(205,101,16)" fg:x="1727" fg:w="1"/><text x="42.7033%" y="607.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (2 samples, 0.05%)</title><rect x="42.4779%" y="645" width="0.0492%" height="15" fill="rgb(246,168,33)" fg:x="1728" fg:w="2"/><text x="42.7279%" y="655.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (6 samples, 0.15%)</title><rect x="43.2399%" y="629" width="0.1475%" height="15" fill="rgb(231,114,1)" fg:x="1759" fg:w="6"/><text x="43.4899%" y="639.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.02%)</title><rect x="43.3628%" y="613" width="0.0246%" height="15" fill="rgb(207,184,53)" fg:x="1764" fg:w="1"/><text x="43.6128%" y="623.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (36 samples, 0.88%)</title><rect x="42.5270%" y="645" width="0.8850%" height="15" fill="rgb(224,95,51)" fg:x="1730" fg:w="36"/><text x="42.7770%" y="655.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.02%)</title><rect x="43.3874%" y="629" width="0.0246%" height="15" fill="rgb(212,188,45)" fg:x="1765" fg:w="1"/><text x="43.6374%" y="639.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (52 samples, 1.28%)</title><rect x="44.4690%" y="629" width="1.2783%" height="15" fill="rgb(223,154,38)" fg:x="1809" fg:w="52"/><text x="44.7190%" y="639.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_mut (1 samples, 0.02%)</title><rect x="45.7473%" y="629" width="0.0246%" height="15" fill="rgb(251,22,52)" fg:x="1861" fg:w="1"/><text x="45.9973%" y="639.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_sub (2 samples, 0.05%)</title><rect x="46.3373%" y="613" width="0.0492%" height="15" fill="rgb(229,209,22)" fg:x="1885" fg:w="2"/><text x="46.5873%" y="623.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::cast (2 samples, 0.05%)</title><rect x="46.3864%" y="613" width="0.0492%" height="15" fill="rgb(234,138,34)" fg:x="1887" fg:w="2"/><text x="46.6364%" y="623.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (129 samples, 3.17%)</title><rect x="43.4120%" y="645" width="3.1711%" height="15" fill="rgb(212,95,11)" fg:x="1766" fg:w="129"/><text x="43.6620%" y="655.50">&lt;co..</text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (33 samples, 0.81%)</title><rect x="45.7719%" y="629" width="0.8112%" height="15" fill="rgb(240,179,47)" fg:x="1862" fg:w="33"/><text x="46.0219%" y="639.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (6 samples, 0.15%)</title><rect x="46.4356%" y="613" width="0.1475%" height="15" fill="rgb(240,163,11)" fg:x="1889" fg:w="6"/><text x="46.6856%" y="623.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (4 samples, 0.10%)</title><rect x="46.4848%" y="597" width="0.0983%" height="15" fill="rgb(236,37,12)" fg:x="1891" fg:w="4"/><text x="46.7348%" y="607.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (55 samples, 1.35%)</title><rect x="46.5831%" y="645" width="1.3520%" height="15" fill="rgb(232,164,16)" fg:x="1895" fg:w="55"/><text x="46.8331%" y="655.50"></text></g><g><title>&lt;i32 as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.02%)</title><rect x="47.9351%" y="645" width="0.0246%" height="15" fill="rgb(244,205,15)" fg:x="1950" fg:w="1"/><text x="48.1851%" y="655.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (2 samples, 0.05%)</title><rect x="47.9597%" y="645" width="0.0492%" height="15" fill="rgb(223,117,47)" fg:x="1951" fg:w="2"/><text x="48.2097%" y="655.50"></text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (2 samples, 0.05%)</title><rect x="47.9597%" y="629" width="0.0492%" height="15" fill="rgb(244,107,35)" fg:x="1951" fg:w="2"/><text x="48.2097%" y="639.50"></text></g><g><title>universal_hash::to_blocks (1 samples, 0.02%)</title><rect x="47.9843%" y="613" width="0.0246%" height="15" fill="rgb(205,140,8)" fg:x="1952" fg:w="1"/><text x="48.2343%" y="623.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="48.0088%" y="645" width="0.0246%" height="15" fill="rgb(228,84,46)" fg:x="1953" fg:w="1"/><text x="48.2588%" y="655.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (1 samples, 0.02%)</title><rect x="48.0088%" y="629" width="0.0246%" height="15" fill="rgb(254,188,9)" fg:x="1953" fg:w="1"/><text x="48.2588%" y="639.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.02%)</title><rect x="48.0334%" y="405" width="0.0246%" height="15" fill="rgb(206,112,54)" fg:x="1954" fg:w="1"/><text x="48.2834%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.02%)</title><rect x="48.0334%" y="389" width="0.0246%" height="15" fill="rgb(216,84,49)" fg:x="1954" fg:w="1"/><text x="48.2834%" y="399.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::authenticate_lengths (2 samples, 0.05%)</title><rect x="48.0334%" y="565" width="0.0492%" height="15" fill="rgb(214,194,35)" fg:x="1954" fg:w="2"/><text x="48.2834%" y="575.50"></text></g><g><title>universal_hash::UniversalHash::update (2 samples, 0.05%)</title><rect x="48.0334%" y="549" width="0.0492%" height="15" fill="rgb(249,28,3)" fg:x="1954" fg:w="2"/><text x="48.2834%" y="559.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (2 samples, 0.05%)</title><rect x="48.0334%" y="533" width="0.0492%" height="15" fill="rgb(222,56,52)" fg:x="1954" fg:w="2"/><text x="48.2834%" y="543.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (2 samples, 0.05%)</title><rect x="48.0334%" y="517" width="0.0492%" height="15" fill="rgb(245,217,50)" fg:x="1954" fg:w="2"/><text x="48.2834%" y="527.50"></text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (2 samples, 0.05%)</title><rect x="48.0334%" y="501" width="0.0492%" height="15" fill="rgb(213,201,24)" fg:x="1954" fg:w="2"/><text x="48.2834%" y="511.50"></text></g><g><title>&lt;poly1305::backend::avx2::State as universal_hash::UhfBackend&gt;::proc_block (2 samples, 0.05%)</title><rect x="48.0334%" y="485" width="0.0492%" height="15" fill="rgb(248,116,28)" fg:x="1954" fg:w="2"/><text x="48.2834%" y="495.50"></text></g><g><title>poly1305::backend::avx2::State::compute_block (2 samples, 0.05%)</title><rect x="48.0334%" y="469" width="0.0492%" height="15" fill="rgb(219,72,43)" fg:x="1954" fg:w="2"/><text x="48.2834%" y="479.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (2 samples, 0.05%)</title><rect x="48.0334%" y="453" width="0.0492%" height="15" fill="rgb(209,138,14)" fg:x="1954" fg:w="2"/><text x="48.2834%" y="463.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (2 samples, 0.05%)</title><rect x="48.0334%" y="437" width="0.0492%" height="15" fill="rgb(222,18,33)" fg:x="1954" fg:w="2"/><text x="48.2834%" y="447.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (2 samples, 0.05%)</title><rect x="48.0334%" y="421" width="0.0492%" height="15" fill="rgb(213,199,7)" fg:x="1954" fg:w="2"/><text x="48.2834%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.02%)</title><rect x="48.0580%" y="405" width="0.0246%" height="15" fill="rgb(250,110,10)" fg:x="1955" fg:w="1"/><text x="48.3080%" y="415.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="48.0826%" y="469" width="0.0246%" height="15" fill="rgb(248,123,6)" fg:x="1956" fg:w="1"/><text x="48.3326%" y="479.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (1 samples, 0.02%)</title><rect x="48.1072%" y="469" width="0.0246%" height="15" fill="rgb(206,91,31)" fg:x="1957" fg:w="1"/><text x="48.3572%" y="479.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (8 samples, 0.20%)</title><rect x="48.2547%" y="373" width="0.1967%" height="15" fill="rgb(211,154,13)" fg:x="1963" fg:w="8"/><text x="48.5047%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.02%)</title><rect x="48.4513%" y="373" width="0.0246%" height="15" fill="rgb(225,148,7)" fg:x="1971" fg:w="1"/><text x="48.7013%" y="383.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (4 samples, 0.10%)</title><rect x="48.4759%" y="357" width="0.0983%" height="15" fill="rgb(220,160,43)" fg:x="1972" fg:w="4"/><text x="48.7259%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.02%)</title><rect x="48.5742%" y="357" width="0.0246%" height="15" fill="rgb(213,52,39)" fg:x="1976" fg:w="1"/><text x="48.8242%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (7 samples, 0.17%)</title><rect x="48.4759%" y="373" width="0.1721%" height="15" fill="rgb(243,137,7)" fg:x="1972" fg:w="7"/><text x="48.7259%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (2 samples, 0.05%)</title><rect x="48.5988%" y="357" width="0.0492%" height="15" fill="rgb(230,79,13)" fg:x="1977" fg:w="2"/><text x="48.8488%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (3 samples, 0.07%)</title><rect x="48.6480%" y="373" width="0.0737%" height="15" fill="rgb(247,105,23)" fg:x="1979" fg:w="3"/><text x="48.8980%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (3 samples, 0.07%)</title><rect x="48.7217%" y="373" width="0.0737%" height="15" fill="rgb(223,179,41)" fg:x="1982" fg:w="3"/><text x="48.9717%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (3 samples, 0.07%)</title><rect x="48.7955%" y="373" width="0.0737%" height="15" fill="rgb(218,9,34)" fg:x="1985" fg:w="3"/><text x="49.0455%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.02%)</title><rect x="48.8692%" y="373" width="0.0246%" height="15" fill="rgb(222,106,8)" fg:x="1988" fg:w="1"/><text x="49.1192%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (5 samples, 0.12%)</title><rect x="48.8938%" y="373" width="0.1229%" height="15" fill="rgb(211,220,0)" fg:x="1989" fg:w="5"/><text x="49.1438%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (5 samples, 0.12%)</title><rect x="49.0167%" y="373" width="0.1229%" height="15" fill="rgb(229,52,16)" fg:x="1994" fg:w="5"/><text x="49.2667%" y="383.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (38 samples, 0.93%)</title><rect x="48.2547%" y="389" width="0.9341%" height="15" fill="rgb(212,155,18)" fg:x="1963" fg:w="38"/><text x="48.5047%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (2 samples, 0.05%)</title><rect x="49.1396%" y="373" width="0.0492%" height="15" fill="rgb(242,21,14)" fg:x="1999" fg:w="2"/><text x="49.3896%" y="383.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (4 samples, 0.10%)</title><rect x="49.1888%" y="373" width="0.0983%" height="15" fill="rgb(222,19,48)" fg:x="2001" fg:w="4"/><text x="49.4388%" y="383.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (1 samples, 0.02%)</title><rect x="49.2871%" y="373" width="0.0246%" height="15" fill="rgb(232,45,27)" fg:x="2005" fg:w="1"/><text x="49.5371%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (3 samples, 0.07%)</title><rect x="49.3117%" y="373" width="0.0737%" height="15" fill="rgb(249,103,42)" fg:x="2006" fg:w="3"/><text x="49.5617%" y="383.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (2 samples, 0.05%)</title><rect x="49.3854%" y="357" width="0.0492%" height="15" fill="rgb(246,81,33)" fg:x="2009" fg:w="2"/><text x="49.6354%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect x="49.4346%" y="357" width="0.0246%" height="15" fill="rgb(252,33,42)" fg:x="2011" fg:w="1"/><text x="49.6846%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.02%)</title><rect x="49.4592%" y="357" width="0.0246%" height="15" fill="rgb(209,212,41)" fg:x="2012" fg:w="1"/><text x="49.7092%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (5 samples, 0.12%)</title><rect x="49.3854%" y="373" width="0.1229%" height="15" fill="rgb(207,154,6)" fg:x="2009" fg:w="5"/><text x="49.6354%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.02%)</title><rect x="49.4838%" y="357" width="0.0246%" height="15" fill="rgb(223,64,47)" fg:x="2013" fg:w="1"/><text x="49.7338%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (3 samples, 0.07%)</title><rect x="49.5084%" y="373" width="0.0737%" height="15" fill="rgb(211,161,38)" fg:x="2014" fg:w="3"/><text x="49.7584%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.02%)</title><rect x="49.5821%" y="373" width="0.0246%" height="15" fill="rgb(219,138,40)" fg:x="2017" fg:w="1"/><text x="49.8321%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (7 samples, 0.17%)</title><rect x="49.6067%" y="373" width="0.1721%" height="15" fill="rgb(241,228,46)" fg:x="2018" fg:w="7"/><text x="49.8567%" y="383.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_par_ks_blocks (71 samples, 1.75%)</title><rect x="48.1318%" y="437" width="1.7453%" height="15" fill="rgb(223,209,38)" fg:x="1958" fg:w="71"/><text x="48.3818%" y="447.50"></text></g><g><title>chacha20::backends::avx2::rounds (66 samples, 1.62%)</title><rect x="48.2547%" y="421" width="1.6224%" height="15" fill="rgb(236,164,45)" fg:x="1963" fg:w="66"/><text x="48.5047%" y="431.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (66 samples, 1.62%)</title><rect x="48.2547%" y="405" width="1.6224%" height="15" fill="rgb(231,15,5)" fg:x="1963" fg:w="66"/><text x="48.5047%" y="415.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (28 samples, 0.69%)</title><rect x="49.1888%" y="389" width="0.6883%" height="15" fill="rgb(252,35,15)" fg:x="2001" fg:w="28"/><text x="49.4388%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (4 samples, 0.10%)</title><rect x="49.7788%" y="373" width="0.0983%" height="15" fill="rgb(248,181,18)" fg:x="2025" fg:w="4"/><text x="50.0288%" y="383.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.02%)</title><rect x="49.8771%" y="357" width="0.0246%" height="15" fill="rgb(233,39,42)" fg:x="2029" fg:w="1"/><text x="50.1271%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.02%)</title><rect x="49.9017%" y="357" width="0.0246%" height="15" fill="rgb(238,110,33)" fg:x="2030" fg:w="1"/><text x="50.1517%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.02%)</title><rect x="49.9263%" y="357" width="0.0246%" height="15" fill="rgb(233,195,10)" fg:x="2031" fg:w="1"/><text x="50.1763%" y="367.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.02%)</title><rect x="49.9263%" y="341" width="0.0246%" height="15" fill="rgb(254,105,3)" fg:x="2031" fg:w="1"/><text x="50.1763%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (2 samples, 0.05%)</title><rect x="49.9508%" y="357" width="0.0492%" height="15" fill="rgb(221,225,9)" fg:x="2032" fg:w="2"/><text x="50.2008%" y="367.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (6 samples, 0.15%)</title><rect x="49.8771%" y="373" width="0.1475%" height="15" fill="rgb(224,227,45)" fg:x="2029" fg:w="6"/><text x="50.1271%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.02%)</title><rect x="50.0000%" y="357" width="0.0246%" height="15" fill="rgb(229,198,43)" fg:x="2034" fg:w="1"/><text x="50.2500%" y="367.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.02%)</title><rect x="50.0246%" y="341" width="0.0246%" height="15" fill="rgb(206,209,35)" fg:x="2035" fg:w="1"/><text x="50.2746%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (2 samples, 0.05%)</title><rect x="50.0492%" y="341" width="0.0492%" height="15" fill="rgb(245,195,53)" fg:x="2036" fg:w="2"/><text x="50.2992%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (4 samples, 0.10%)</title><rect x="50.0246%" y="357" width="0.0983%" height="15" fill="rgb(240,92,26)" fg:x="2035" fg:w="4"/><text x="50.2746%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.02%)</title><rect x="50.0983%" y="341" width="0.0246%" height="15" fill="rgb(207,40,23)" fg:x="2038" fg:w="1"/><text x="50.3483%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.02%)</title><rect x="50.1229%" y="357" width="0.0246%" height="15" fill="rgb(223,111,35)" fg:x="2039" fg:w="1"/><text x="50.3729%" y="367.50"></text></g><g><title>cipher::stream_core::StreamBackend::gen_tail_blocks (13 samples, 0.32%)</title><rect x="49.8771%" y="437" width="0.3196%" height="15" fill="rgb(229,147,28)" fg:x="2029" fg:w="13"/><text x="50.1271%" y="447.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (13 samples, 0.32%)</title><rect x="49.8771%" y="421" width="0.3196%" height="15" fill="rgb(211,29,28)" fg:x="2029" fg:w="13"/><text x="50.1271%" y="431.50"></text></g><g><title>chacha20::backends::avx2::rounds (13 samples, 0.32%)</title><rect x="49.8771%" y="405" width="0.3196%" height="15" fill="rgb(228,72,33)" fg:x="2029" fg:w="13"/><text x="50.1271%" y="415.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (13 samples, 0.32%)</title><rect x="49.8771%" y="389" width="0.3196%" height="15" fill="rgb(205,214,31)" fg:x="2029" fg:w="13"/><text x="50.1271%" y="399.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (7 samples, 0.17%)</title><rect x="50.0246%" y="373" width="0.1721%" height="15" fill="rgb(224,111,15)" fg:x="2035" fg:w="7"/><text x="50.2746%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (2 samples, 0.05%)</title><rect x="50.1475%" y="357" width="0.0492%" height="15" fill="rgb(253,21,26)" fg:x="2040" fg:w="2"/><text x="50.3975%" y="367.50"></text></g><g><title>&lt;core::core_arch::x86::__m128i as core::core_arch::x86::m128iExt&gt;::as_m128i (1 samples, 0.02%)</title><rect x="50.3687%" y="181" width="0.0246%" height="15" fill="rgb(245,139,43)" fg:x="2049" fg:w="1"/><text x="50.6187%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.02%)</title><rect x="50.3933%" y="181" width="0.0246%" height="15" fill="rgb(252,170,7)" fg:x="2050" fg:w="1"/><text x="50.6433%" y="191.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (13 samples, 0.32%)</title><rect x="50.4179%" y="181" width="0.3196%" height="15" fill="rgb(231,118,14)" fg:x="2051" fg:w="13"/><text x="50.6679%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (17 samples, 0.42%)</title><rect x="50.3441%" y="197" width="0.4179%" height="15" fill="rgb(238,83,0)" fg:x="2048" fg:w="17"/><text x="50.5941%" y="207.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (1 samples, 0.02%)</title><rect x="50.7375%" y="181" width="0.0246%" height="15" fill="rgb(221,39,39)" fg:x="2064" fg:w="1"/><text x="50.9875%" y="191.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (24 samples, 0.59%)</title><rect x="50.1967%" y="437" width="0.5900%" height="15" fill="rgb(222,119,46)" fg:x="2042" fg:w="24"/><text x="50.4467%" y="447.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (24 samples, 0.59%)</title><rect x="50.1967%" y="421" width="0.5900%" height="15" fill="rgb(222,165,49)" fg:x="2042" fg:w="24"/><text x="50.4467%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (24 samples, 0.59%)</title><rect x="50.1967%" y="405" width="0.5900%" height="15" fill="rgb(219,113,52)" fg:x="2042" fg:w="24"/><text x="50.4467%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (24 samples, 0.59%)</title><rect x="50.1967%" y="389" width="0.5900%" height="15" fill="rgb(214,7,15)" fg:x="2042" fg:w="24"/><text x="50.4467%" y="399.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (24 samples, 0.59%)</title><rect x="50.1967%" y="373" width="0.5900%" height="15" fill="rgb(235,32,4)" fg:x="2042" fg:w="24"/><text x="50.4467%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (24 samples, 0.59%)</title><rect x="50.1967%" y="357" width="0.5900%" height="15" fill="rgb(238,90,54)" fg:x="2042" fg:w="24"/><text x="50.4467%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (24 samples, 0.59%)</title><rect x="50.1967%" y="341" width="0.5900%" height="15" fill="rgb(213,208,19)" fg:x="2042" fg:w="24"/><text x="50.4467%" y="351.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (24 samples, 0.59%)</title><rect x="50.1967%" y="325" width="0.5900%" height="15" fill="rgb(233,156,4)" fg:x="2042" fg:w="24"/><text x="50.4467%" y="335.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (24 samples, 0.59%)</title><rect x="50.1967%" y="309" width="0.5900%" height="15" fill="rgb(207,194,5)" fg:x="2042" fg:w="24"/><text x="50.4467%" y="319.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (24 samples, 0.59%)</title><rect x="50.1967%" y="293" width="0.5900%" height="15" fill="rgb(206,111,30)" fg:x="2042" fg:w="24"/><text x="50.4467%" y="303.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (24 samples, 0.59%)</title><rect x="50.1967%" y="277" width="0.5900%" height="15" fill="rgb(243,70,54)" fg:x="2042" fg:w="24"/><text x="50.4467%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (24 samples, 0.59%)</title><rect x="50.1967%" y="261" width="0.5900%" height="15" fill="rgb(242,28,8)" fg:x="2042" fg:w="24"/><text x="50.4467%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (24 samples, 0.59%)</title><rect x="50.1967%" y="245" width="0.5900%" height="15" fill="rgb(219,106,18)" fg:x="2042" fg:w="24"/><text x="50.4467%" y="255.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (24 samples, 0.59%)</title><rect x="50.1967%" y="229" width="0.5900%" height="15" fill="rgb(244,222,10)" fg:x="2042" fg:w="24"/><text x="50.4467%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (23 samples, 0.57%)</title><rect x="50.2212%" y="213" width="0.5654%" height="15" fill="rgb(236,179,52)" fg:x="2043" fg:w="23"/><text x="50.4712%" y="223.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="50.7620%" y="197" width="0.0246%" height="15" fill="rgb(213,23,39)" fg:x="2065" fg:w="1"/><text x="51.0120%" y="207.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.07%)</title><rect x="50.9341%" y="421" width="0.0737%" height="15" fill="rgb(238,48,10)" fg:x="2072" fg:w="3"/><text x="51.1841%" y="431.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (7 samples, 0.17%)</title><rect x="51.0079%" y="421" width="0.1721%" height="15" fill="rgb(251,196,23)" fg:x="2075" fg:w="7"/><text x="51.2579%" y="431.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (15 samples, 0.37%)</title><rect x="51.3520%" y="165" width="0.3687%" height="15" fill="rgb(250,152,24)" fg:x="2089" fg:w="15"/><text x="51.6020%" y="175.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (2 samples, 0.05%)</title><rect x="51.6716%" y="149" width="0.0492%" height="15" fill="rgb(209,150,17)" fg:x="2102" fg:w="2"/><text x="51.9216%" y="159.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (17 samples, 0.42%)</title><rect x="51.3274%" y="181" width="0.4179%" height="15" fill="rgb(234,202,34)" fg:x="2088" fg:w="17"/><text x="51.5774%" y="191.50"></text></g><g><title>core::ptr::read (1 samples, 0.02%)</title><rect x="51.7207%" y="165" width="0.0246%" height="15" fill="rgb(253,148,53)" fg:x="2104" fg:w="1"/><text x="51.9707%" y="175.50"></text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;generic_array::GenericArray&lt;u8,N&gt;,M&gt;&gt;::xor_in2out (40 samples, 0.98%)</title><rect x="50.7866%" y="437" width="0.9833%" height="15" fill="rgb(218,129,16)" fg:x="2066" fg:w="40"/><text x="51.0366%" y="447.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (24 samples, 0.59%)</title><rect x="51.1799%" y="421" width="0.5900%" height="15" fill="rgb(216,85,19)" fg:x="2082" fg:w="24"/><text x="51.4299%" y="431.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (24 samples, 0.59%)</title><rect x="51.1799%" y="405" width="0.5900%" height="15" fill="rgb(235,228,7)" fg:x="2082" fg:w="24"/><text x="51.4299%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (24 samples, 0.59%)</title><rect x="51.1799%" y="389" width="0.5900%" height="15" fill="rgb(245,175,0)" fg:x="2082" fg:w="24"/><text x="51.4299%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (24 samples, 0.59%)</title><rect x="51.1799%" y="373" width="0.5900%" height="15" fill="rgb(208,168,36)" fg:x="2082" fg:w="24"/><text x="51.4299%" y="383.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (24 samples, 0.59%)</title><rect x="51.1799%" y="357" width="0.5900%" height="15" fill="rgb(246,171,24)" fg:x="2082" fg:w="24"/><text x="51.4299%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (24 samples, 0.59%)</title><rect x="51.1799%" y="341" width="0.5900%" height="15" fill="rgb(215,142,24)" fg:x="2082" fg:w="24"/><text x="51.4299%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (24 samples, 0.59%)</title><rect x="51.1799%" y="325" width="0.5900%" height="15" fill="rgb(250,187,7)" fg:x="2082" fg:w="24"/><text x="51.4299%" y="335.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (24 samples, 0.59%)</title><rect x="51.1799%" y="309" width="0.5900%" height="15" fill="rgb(228,66,33)" fg:x="2082" fg:w="24"/><text x="51.4299%" y="319.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (24 samples, 0.59%)</title><rect x="51.1799%" y="293" width="0.5900%" height="15" fill="rgb(234,215,21)" fg:x="2082" fg:w="24"/><text x="51.4299%" y="303.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (24 samples, 0.59%)</title><rect x="51.1799%" y="277" width="0.5900%" height="15" fill="rgb(222,191,20)" fg:x="2082" fg:w="24"/><text x="51.4299%" y="287.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (24 samples, 0.59%)</title><rect x="51.1799%" y="261" width="0.5900%" height="15" fill="rgb(245,79,54)" fg:x="2082" fg:w="24"/><text x="51.4299%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (24 samples, 0.59%)</title><rect x="51.1799%" y="245" width="0.5900%" height="15" fill="rgb(240,10,37)" fg:x="2082" fg:w="24"/><text x="51.4299%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (24 samples, 0.59%)</title><rect x="51.1799%" y="229" width="0.5900%" height="15" fill="rgb(214,192,32)" fg:x="2082" fg:w="24"/><text x="51.4299%" y="239.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (24 samples, 0.59%)</title><rect x="51.1799%" y="213" width="0.5900%" height="15" fill="rgb(209,36,54)" fg:x="2082" fg:w="24"/><text x="51.4299%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (21 samples, 0.52%)</title><rect x="51.2537%" y="197" width="0.5162%" height="15" fill="rgb(220,10,11)" fg:x="2085" fg:w="21"/><text x="51.5037%" y="207.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::iter_position (1 samples, 0.02%)</title><rect x="51.7453%" y="181" width="0.0246%" height="15" fill="rgb(221,106,17)" fg:x="2105" fg:w="1"/><text x="51.9953%" y="191.50"></text></g><g><title>chacha20::backends::avx2::inner (149 samples, 3.66%)</title><rect x="48.1318%" y="469" width="3.6627%" height="15" fill="rgb(251,142,44)" fg:x="1958" fg:w="149"/><text x="48.3818%" y="479.50">chac..</text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (149 samples, 3.66%)</title><rect x="48.1318%" y="453" width="3.6627%" height="15" fill="rgb(238,13,15)" fg:x="1958" fg:w="149"/><text x="48.3818%" y="463.50">&lt;cip..</text></g><g><title>inout::inout_buf::InOutBuf&lt;T&gt;::into_chunks (1 samples, 0.02%)</title><rect x="51.7699%" y="437" width="0.0246%" height="15" fill="rgb(208,107,27)" fg:x="2106" fg:w="1"/><text x="52.0199%" y="447.50"></text></g><g><title>inout::inout_buf::InOutBuf&lt;T&gt;::len (1 samples, 0.02%)</title><rect x="51.7699%" y="421" width="0.0246%" height="15" fill="rgb(205,136,37)" fg:x="2106" fg:w="1"/><text x="52.0199%" y="431.50"></text></g><g><title>chacha20::backends::avx2::rounds (3 samples, 0.07%)</title><rect x="51.7945%" y="469" width="0.0737%" height="15" fill="rgb(250,205,27)" fg:x="2107" fg:w="3"/><text x="52.0445%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (3 samples, 0.07%)</title><rect x="51.8682%" y="469" width="0.0737%" height="15" fill="rgb(210,80,43)" fg:x="2110" fg:w="3"/><text x="52.1182%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_broadcastsi128_si256 (2 samples, 0.05%)</title><rect x="51.9420%" y="469" width="0.0492%" height="15" fill="rgb(247,160,36)" fg:x="2113" fg:w="2"/><text x="52.1920%" y="479.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (2 samples, 0.05%)</title><rect x="51.9912%" y="469" width="0.0492%" height="15" fill="rgb(234,13,49)" fg:x="2115" fg:w="2"/><text x="52.2412%" y="479.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi32 (1 samples, 0.02%)</title><rect x="52.0157%" y="453" width="0.0246%" height="15" fill="rgb(234,122,0)" fg:x="2116" fg:w="1"/><text x="52.2657%" y="463.50"></text></g><g><title>core::core_arch::simd::i32x8::new (1 samples, 0.02%)</title><rect x="52.0157%" y="437" width="0.0246%" height="15" fill="rgb(207,146,38)" fg:x="2116" fg:w="1"/><text x="52.2657%" y="447.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (164 samples, 4.03%)</title><rect x="48.0826%" y="565" width="4.0315%" height="15" fill="rgb(207,177,25)" fg:x="1956" fg:w="164"/><text x="48.3326%" y="575.50">ciph..</text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (164 samples, 4.03%)</title><rect x="48.0826%" y="549" width="4.0315%" height="15" fill="rgb(211,178,42)" fg:x="1956" fg:w="164"/><text x="48.3326%" y="559.50">ciph..</text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (164 samples, 4.03%)</title><rect x="48.0826%" y="533" width="4.0315%" height="15" fill="rgb(230,69,54)" fg:x="1956" fg:w="164"/><text x="48.3326%" y="543.50">&lt;cip..</text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (164 samples, 4.03%)</title><rect x="48.0826%" y="517" width="4.0315%" height="15" fill="rgb(214,135,41)" fg:x="1956" fg:w="164"/><text x="48.3326%" y="527.50">ciph..</text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (164 samples, 4.03%)</title><rect x="48.0826%" y="501" width="4.0315%" height="15" fill="rgb(237,67,25)" fg:x="1956" fg:w="164"/><text x="48.3326%" y="511.50">&lt;cha..</text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (164 samples, 4.03%)</title><rect x="48.0826%" y="485" width="4.0315%" height="15" fill="rgb(222,189,50)" fg:x="1956" fg:w="164"/><text x="48.3326%" y="495.50">&lt;cha..</text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (3 samples, 0.07%)</title><rect x="52.0403%" y="469" width="0.0737%" height="15" fill="rgb(245,148,34)" fg:x="2117" fg:w="3"/><text x="52.2903%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.02%)</title><rect x="52.1632%" y="389" width="0.0246%" height="15" fill="rgb(222,29,6)" fg:x="2122" fg:w="1"/><text x="52.4132%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (2 samples, 0.05%)</title><rect x="52.1878%" y="389" width="0.0492%" height="15" fill="rgb(221,189,43)" fg:x="2123" fg:w="2"/><text x="52.4378%" y="399.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi64x (1 samples, 0.02%)</title><rect x="52.2370%" y="389" width="0.0246%" height="15" fill="rgb(207,36,27)" fg:x="2125" fg:w="1"/><text x="52.4870%" y="399.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi64x (1 samples, 0.02%)</title><rect x="52.2370%" y="373" width="0.0246%" height="15" fill="rgb(217,90,24)" fg:x="2125" fg:w="1"/><text x="52.4870%" y="383.50"></text></g><g><title>core::core_arch::simd::i64x4::new (1 samples, 0.02%)</title><rect x="52.2370%" y="357" width="0.0246%" height="15" fill="rgb(224,66,35)" fg:x="2125" fg:w="1"/><text x="52.4870%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="52.2616%" y="389" width="0.0246%" height="15" fill="rgb(221,13,50)" fg:x="2126" fg:w="1"/><text x="52.5116%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.02%)</title><rect x="52.2861%" y="389" width="0.0246%" height="15" fill="rgb(236,68,49)" fg:x="2127" fg:w="1"/><text x="52.5361%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (12 samples, 0.29%)</title><rect x="52.1141%" y="405" width="0.2950%" height="15" fill="rgb(229,146,28)" fg:x="2120" fg:w="12"/><text x="52.3641%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (4 samples, 0.10%)</title><rect x="52.3107%" y="389" width="0.0983%" height="15" fill="rgb(225,31,38)" fg:x="2128" fg:w="4"/><text x="52.5607%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (3 samples, 0.07%)</title><rect x="52.4090%" y="389" width="0.0737%" height="15" fill="rgb(250,208,3)" fg:x="2132" fg:w="3"/><text x="52.6590%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (3 samples, 0.07%)</title><rect x="52.4828%" y="389" width="0.0737%" height="15" fill="rgb(246,54,23)" fg:x="2135" fg:w="3"/><text x="52.7328%" y="399.50"></text></g><g><title>core::core_arch::simd::u64x4::splat (1 samples, 0.02%)</title><rect x="52.5320%" y="373" width="0.0246%" height="15" fill="rgb(243,76,11)" fg:x="2137" fg:w="1"/><text x="52.7820%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (2 samples, 0.05%)</title><rect x="52.5565%" y="389" width="0.0492%" height="15" fill="rgb(245,21,50)" fg:x="2138" fg:w="2"/><text x="52.8065%" y="399.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (2 samples, 0.05%)</title><rect x="52.5565%" y="373" width="0.0492%" height="15" fill="rgb(228,9,43)" fg:x="2138" fg:w="2"/><text x="52.8065%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (2 samples, 0.05%)</title><rect x="52.5565%" y="357" width="0.0492%" height="15" fill="rgb(208,100,47)" fg:x="2138" fg:w="2"/><text x="52.8065%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.05%)</title><rect x="52.6057%" y="389" width="0.0492%" height="15" fill="rgb(232,26,8)" fg:x="2140" fg:w="2"/><text x="52.8557%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (12 samples, 0.29%)</title><rect x="52.4090%" y="405" width="0.2950%" height="15" fill="rgb(216,166,38)" fg:x="2132" fg:w="12"/><text x="52.6590%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (2 samples, 0.05%)</title><rect x="52.6549%" y="389" width="0.0492%" height="15" fill="rgb(251,202,51)" fg:x="2142" fg:w="2"/><text x="52.9049%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (3 samples, 0.07%)</title><rect x="52.7040%" y="405" width="0.0737%" height="15" fill="rgb(254,216,34)" fg:x="2144" fg:w="3"/><text x="52.9540%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.02%)</title><rect x="52.7778%" y="389" width="0.0246%" height="15" fill="rgb(251,32,27)" fg:x="2147" fg:w="1"/><text x="53.0278%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.02%)</title><rect x="52.8024%" y="389" width="0.0246%" height="15" fill="rgb(208,127,28)" fg:x="2148" fg:w="1"/><text x="53.0524%" y="399.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (3 samples, 0.07%)</title><rect x="52.8269%" y="389" width="0.0737%" height="15" fill="rgb(224,137,22)" fg:x="2149" fg:w="3"/><text x="53.0769%" y="399.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (3 samples, 0.07%)</title><rect x="52.8269%" y="373" width="0.0737%" height="15" fill="rgb(254,70,32)" fg:x="2149" fg:w="3"/><text x="53.0769%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (3 samples, 0.07%)</title><rect x="52.8269%" y="357" width="0.0737%" height="15" fill="rgb(229,75,37)" fg:x="2149" fg:w="3"/><text x="53.0769%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (9 samples, 0.22%)</title><rect x="52.7778%" y="405" width="0.2212%" height="15" fill="rgb(252,64,23)" fg:x="2147" fg:w="9"/><text x="53.0278%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (4 samples, 0.10%)</title><rect x="52.9007%" y="389" width="0.0983%" height="15" fill="rgb(232,162,48)" fg:x="2152" fg:w="4"/><text x="53.1507%" y="399.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="52.9744%" y="373" width="0.0246%" height="15" fill="rgb(246,160,12)" fg:x="2155" fg:w="1"/><text x="53.2244%" y="383.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="52.9744%" y="357" width="0.0246%" height="15" fill="rgb(247,166,0)" fg:x="2155" fg:w="1"/><text x="53.2244%" y="367.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="52.9744%" y="341" width="0.0246%" height="15" fill="rgb(249,219,21)" fg:x="2155" fg:w="1"/><text x="53.2244%" y="351.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="52.9744%" y="325" width="0.0246%" height="15" fill="rgb(205,209,3)" fg:x="2155" fg:w="1"/><text x="53.2244%" y="335.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="52.9744%" y="309" width="0.0246%" height="15" fill="rgb(243,44,1)" fg:x="2155" fg:w="1"/><text x="53.2244%" y="319.50"></text></g><g><title>tick_sched_timer (1 samples, 0.02%)</title><rect x="52.9744%" y="293" width="0.0246%" height="15" fill="rgb(206,159,16)" fg:x="2155" fg:w="1"/><text x="53.2244%" y="303.50"></text></g><g><title>tick_sched_handle (1 samples, 0.02%)</title><rect x="52.9744%" y="277" width="0.0246%" height="15" fill="rgb(244,77,30)" fg:x="2155" fg:w="1"/><text x="53.2244%" y="287.50"></text></g><g><title>update_process_times (1 samples, 0.02%)</title><rect x="52.9744%" y="261" width="0.0246%" height="15" fill="rgb(218,69,12)" fg:x="2155" fg:w="1"/><text x="53.2244%" y="271.50"></text></g><g><title>scheduler_tick (1 samples, 0.02%)</title><rect x="52.9744%" y="245" width="0.0246%" height="15" fill="rgb(212,87,7)" fg:x="2155" fg:w="1"/><text x="53.2244%" y="255.50"></text></g><g><title>task_tick_fair (1 samples, 0.02%)</title><rect x="52.9744%" y="229" width="0.0246%" height="15" fill="rgb(245,114,25)" fg:x="2155" fg:w="1"/><text x="53.2244%" y="239.50"></text></g><g><title>update_curr (1 samples, 0.02%)</title><rect x="52.9744%" y="213" width="0.0246%" height="15" fill="rgb(210,61,42)" fg:x="2155" fg:w="1"/><text x="53.2244%" y="223.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.02%)</title><rect x="52.9990%" y="405" width="0.0246%" height="15" fill="rgb(211,52,33)" fg:x="2156" fg:w="1"/><text x="53.2490%" y="415.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::decrypt_in_place_detached (204 samples, 5.01%)</title><rect x="48.0334%" y="581" width="5.0147%" height="15" fill="rgb(234,58,33)" fg:x="1954" fg:w="204"/><text x="48.2834%" y="591.50">chacha..</text></g><g><title>universal_hash::UniversalHash::update_padded (38 samples, 0.93%)</title><rect x="52.1141%" y="565" width="0.9341%" height="15" fill="rgb(220,115,36)" fg:x="2120" fg:w="38"/><text x="52.3641%" y="575.50"></text></g><g><title>universal_hash::UniversalHash::update (38 samples, 0.93%)</title><rect x="52.1141%" y="549" width="0.9341%" height="15" fill="rgb(243,153,54)" fg:x="2120" fg:w="38"/><text x="52.3641%" y="559.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (38 samples, 0.93%)</title><rect x="52.1141%" y="533" width="0.9341%" height="15" fill="rgb(251,47,18)" fg:x="2120" fg:w="38"/><text x="52.3641%" y="543.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (38 samples, 0.93%)</title><rect x="52.1141%" y="517" width="0.9341%" height="15" fill="rgb(242,102,42)" fg:x="2120" fg:w="38"/><text x="52.3641%" y="527.50"></text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (38 samples, 0.93%)</title><rect x="52.1141%" y="501" width="0.9341%" height="15" fill="rgb(234,31,38)" fg:x="2120" fg:w="38"/><text x="52.3641%" y="511.50"></text></g><g><title>&lt;poly1305::backend::avx2::State as universal_hash::UhfBackend&gt;::proc_par_blocks (38 samples, 0.93%)</title><rect x="52.1141%" y="485" width="0.9341%" height="15" fill="rgb(221,117,51)" fg:x="2120" fg:w="38"/><text x="52.3641%" y="495.50"></text></g><g><title>poly1305::backend::avx2::State::compute_par_blocks (38 samples, 0.93%)</title><rect x="52.1141%" y="469" width="0.9341%" height="15" fill="rgb(212,20,18)" fg:x="2120" fg:w="38"/><text x="52.3641%" y="479.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (38 samples, 0.93%)</title><rect x="52.1141%" y="453" width="0.9341%" height="15" fill="rgb(245,133,36)" fg:x="2120" fg:w="38"/><text x="52.3641%" y="463.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (38 samples, 0.93%)</title><rect x="52.1141%" y="437" width="0.9341%" height="15" fill="rgb(212,6,19)" fg:x="2120" fg:w="38"/><text x="52.3641%" y="447.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (38 samples, 0.93%)</title><rect x="52.1141%" y="421" width="0.9341%" height="15" fill="rgb(218,1,36)" fg:x="2120" fg:w="38"/><text x="52.3641%" y="431.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (1 samples, 0.02%)</title><rect x="53.0236%" y="405" width="0.0246%" height="15" fill="rgb(246,84,54)" fg:x="2157" fg:w="1"/><text x="53.2736%" y="415.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (1 samples, 0.02%)</title><rect x="53.0236%" y="389" width="0.0246%" height="15" fill="rgb(242,110,6)" fg:x="2157" fg:w="1"/><text x="53.2736%" y="399.50"></text></g><g><title>&lt;tftp::client::encryption_socket::EncryptionBoundSocket&lt;S,Rng&gt; as tftp::socket::Socket&gt;::recv_from (206 samples, 5.06%)</title><rect x="48.0334%" y="645" width="5.0639%" height="15" fill="rgb(214,47,5)" fg:x="1954" fg:w="206"/><text x="48.2834%" y="655.50">&lt;tftp:..</text></g><g><title>tftp::encrypted_packet::EncryptedPacket::decrypt (206 samples, 5.06%)</title><rect x="48.0334%" y="629" width="5.0639%" height="15" fill="rgb(218,159,25)" fg:x="1954" fg:w="206"/><text x="48.2834%" y="639.50">tftp::..</text></g><g><title>tftp::encryption::Encryptor&lt;R&gt;::decrypt (206 samples, 5.06%)</title><rect x="48.0334%" y="613" width="5.0639%" height="15" fill="rgb(215,211,28)" fg:x="1954" fg:w="206"/><text x="48.2834%" y="623.50">tftp::..</text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (206 samples, 5.06%)</title><rect x="48.0334%" y="597" width="5.0639%" height="15" fill="rgb(238,59,32)" fg:x="1954" fg:w="206"/><text x="48.2834%" y="607.50">&lt;chach..</text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (2 samples, 0.05%)</title><rect x="53.0482%" y="581" width="0.0492%" height="15" fill="rgb(226,82,3)" fg:x="2158" fg:w="2"/><text x="53.2982%" y="591.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (2 samples, 0.05%)</title><rect x="53.0482%" y="565" width="0.0492%" height="15" fill="rgb(240,164,32)" fg:x="2158" fg:w="2"/><text x="53.2982%" y="575.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (2 samples, 0.05%)</title><rect x="53.0482%" y="549" width="0.0492%" height="15" fill="rgb(232,46,7)" fg:x="2158" fg:w="2"/><text x="53.2982%" y="559.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (2 samples, 0.05%)</title><rect x="53.0482%" y="533" width="0.0492%" height="15" fill="rgb(229,129,53)" fg:x="2158" fg:w="2"/><text x="53.2982%" y="543.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (2 samples, 0.05%)</title><rect x="53.0482%" y="517" width="0.0492%" height="15" fill="rgb(234,188,29)" fg:x="2158" fg:w="2"/><text x="53.2982%" y="527.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (2 samples, 0.05%)</title><rect x="53.0482%" y="501" width="0.0492%" height="15" fill="rgb(246,141,4)" fg:x="2158" fg:w="2"/><text x="53.2982%" y="511.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (2 samples, 0.05%)</title><rect x="53.0482%" y="485" width="0.0492%" height="15" fill="rgb(229,23,39)" fg:x="2158" fg:w="2"/><text x="53.2982%" y="495.50"></text></g><g><title>chacha20::backends::avx2::inner (2 samples, 0.05%)</title><rect x="53.0482%" y="469" width="0.0492%" height="15" fill="rgb(206,12,3)" fg:x="2158" fg:w="2"/><text x="53.2982%" y="479.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (2 samples, 0.05%)</title><rect x="53.0482%" y="453" width="0.0492%" height="15" fill="rgb(252,226,20)" fg:x="2158" fg:w="2"/><text x="53.2982%" y="463.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (2 samples, 0.05%)</title><rect x="53.0482%" y="437" width="0.0492%" height="15" fill="rgb(216,123,35)" fg:x="2158" fg:w="2"/><text x="53.2982%" y="447.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (2 samples, 0.05%)</title><rect x="53.0482%" y="421" width="0.0492%" height="15" fill="rgb(212,68,40)" fg:x="2158" fg:w="2"/><text x="53.2982%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.05%)</title><rect x="53.0482%" y="405" width="0.0492%" height="15" fill="rgb(254,125,32)" fg:x="2158" fg:w="2"/><text x="53.2982%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.05%)</title><rect x="53.0482%" y="389" width="0.0492%" height="15" fill="rgb(253,97,22)" fg:x="2158" fg:w="2"/><text x="53.2982%" y="399.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.05%)</title><rect x="53.0482%" y="373" width="0.0492%" height="15" fill="rgb(241,101,14)" fg:x="2158" fg:w="2"/><text x="53.2982%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (2 samples, 0.05%)</title><rect x="53.0482%" y="357" width="0.0492%" height="15" fill="rgb(238,103,29)" fg:x="2158" fg:w="2"/><text x="53.2982%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.05%)</title><rect x="53.0482%" y="341" width="0.0492%" height="15" fill="rgb(233,195,47)" fg:x="2158" fg:w="2"/><text x="53.2982%" y="351.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (2 samples, 0.05%)</title><rect x="53.0482%" y="325" width="0.0492%" height="15" fill="rgb(246,218,30)" fg:x="2158" fg:w="2"/><text x="53.2982%" y="335.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (2 samples, 0.05%)</title><rect x="53.0482%" y="309" width="0.0492%" height="15" fill="rgb(219,145,47)" fg:x="2158" fg:w="2"/><text x="53.2982%" y="319.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (2 samples, 0.05%)</title><rect x="53.0482%" y="293" width="0.0492%" height="15" fill="rgb(243,12,26)" fg:x="2158" fg:w="2"/><text x="53.2982%" y="303.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (2 samples, 0.05%)</title><rect x="53.0482%" y="277" width="0.0492%" height="15" fill="rgb(214,87,16)" fg:x="2158" fg:w="2"/><text x="53.2982%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.05%)</title><rect x="53.0482%" y="261" width="0.0492%" height="15" fill="rgb(208,99,42)" fg:x="2158" fg:w="2"/><text x="53.2982%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.05%)</title><rect x="53.0482%" y="245" width="0.0492%" height="15" fill="rgb(253,99,2)" fg:x="2158" fg:w="2"/><text x="53.2982%" y="255.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.05%)</title><rect x="53.0482%" y="229" width="0.0492%" height="15" fill="rgb(220,168,23)" fg:x="2158" fg:w="2"/><text x="53.2982%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.02%)</title><rect x="53.0728%" y="213" width="0.0246%" height="15" fill="rgb(242,38,24)" fg:x="2159" fg:w="1"/><text x="53.3228%" y="223.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect x="53.1219%" y="357" width="0.0246%" height="15" fill="rgb(225,182,9)" fg:x="2161" fg:w="1"/><text x="53.3719%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.02%)</title><rect x="53.1465%" y="357" width="0.0246%" height="15" fill="rgb(243,178,37)" fg:x="2162" fg:w="1"/><text x="53.3965%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.02%)</title><rect x="53.1711%" y="357" width="0.0246%" height="15" fill="rgb(232,139,19)" fg:x="2163" fg:w="1"/><text x="53.4211%" y="367.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (5 samples, 0.12%)</title><rect x="53.1219%" y="389" width="0.1229%" height="15" fill="rgb(225,201,24)" fg:x="2161" fg:w="5"/><text x="53.3719%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (5 samples, 0.12%)</title><rect x="53.1219%" y="373" width="0.1229%" height="15" fill="rgb(221,47,46)" fg:x="2161" fg:w="5"/><text x="53.3719%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (2 samples, 0.05%)</title><rect x="53.1957%" y="357" width="0.0492%" height="15" fill="rgb(249,23,13)" fg:x="2164" fg:w="2"/><text x="53.4457%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.02%)</title><rect x="53.2448%" y="357" width="0.0246%" height="15" fill="rgb(219,9,5)" fg:x="2166" fg:w="1"/><text x="53.4948%" y="367.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_par_ks_blocks (8 samples, 0.20%)</title><rect x="53.0973%" y="437" width="0.1967%" height="15" fill="rgb(254,171,16)" fg:x="2160" fg:w="8"/><text x="53.3473%" y="447.50"></text></g><g><title>chacha20::backends::avx2::rounds (7 samples, 0.17%)</title><rect x="53.1219%" y="421" width="0.1721%" height="15" fill="rgb(230,171,20)" fg:x="2161" fg:w="7"/><text x="53.3719%" y="431.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (7 samples, 0.17%)</title><rect x="53.1219%" y="405" width="0.1721%" height="15" fill="rgb(210,71,41)" fg:x="2161" fg:w="7"/><text x="53.3719%" y="415.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (2 samples, 0.05%)</title><rect x="53.2448%" y="389" width="0.0492%" height="15" fill="rgb(206,173,20)" fg:x="2166" fg:w="2"/><text x="53.4948%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (2 samples, 0.05%)</title><rect x="53.2448%" y="373" width="0.0492%" height="15" fill="rgb(233,88,34)" fg:x="2166" fg:w="2"/><text x="53.4948%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.02%)</title><rect x="53.2694%" y="357" width="0.0246%" height="15" fill="rgb(223,209,46)" fg:x="2167" fg:w="1"/><text x="53.5194%" y="367.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.02%)</title><rect x="53.3186%" y="181" width="0.0246%" height="15" fill="rgb(250,43,18)" fg:x="2169" fg:w="1"/><text x="53.5686%" y="191.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (8 samples, 0.20%)</title><rect x="53.2940%" y="437" width="0.1967%" height="15" fill="rgb(208,13,10)" fg:x="2168" fg:w="8"/><text x="53.5440%" y="447.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (8 samples, 0.20%)</title><rect x="53.2940%" y="421" width="0.1967%" height="15" fill="rgb(212,200,36)" fg:x="2168" fg:w="8"/><text x="53.5440%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (8 samples, 0.20%)</title><rect x="53.2940%" y="405" width="0.1967%" height="15" fill="rgb(225,90,30)" fg:x="2168" fg:w="8"/><text x="53.5440%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.20%)</title><rect x="53.2940%" y="389" width="0.1967%" height="15" fill="rgb(236,182,39)" fg:x="2168" fg:w="8"/><text x="53.5440%" y="399.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.20%)</title><rect x="53.2940%" y="373" width="0.1967%" height="15" fill="rgb(212,144,35)" fg:x="2168" fg:w="8"/><text x="53.5440%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (8 samples, 0.20%)</title><rect x="53.2940%" y="357" width="0.1967%" height="15" fill="rgb(228,63,44)" fg:x="2168" fg:w="8"/><text x="53.5440%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (8 samples, 0.20%)</title><rect x="53.2940%" y="341" width="0.1967%" height="15" fill="rgb(228,109,6)" fg:x="2168" fg:w="8"/><text x="53.5440%" y="351.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (8 samples, 0.20%)</title><rect x="53.2940%" y="325" width="0.1967%" height="15" fill="rgb(238,117,24)" fg:x="2168" fg:w="8"/><text x="53.5440%" y="335.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (8 samples, 0.20%)</title><rect x="53.2940%" y="309" width="0.1967%" height="15" fill="rgb(242,26,26)" fg:x="2168" fg:w="8"/><text x="53.5440%" y="319.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (8 samples, 0.20%)</title><rect x="53.2940%" y="293" width="0.1967%" height="15" fill="rgb(221,92,48)" fg:x="2168" fg:w="8"/><text x="53.5440%" y="303.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (8 samples, 0.20%)</title><rect x="53.2940%" y="277" width="0.1967%" height="15" fill="rgb(209,209,32)" fg:x="2168" fg:w="8"/><text x="53.5440%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (8 samples, 0.20%)</title><rect x="53.2940%" y="261" width="0.1967%" height="15" fill="rgb(221,70,22)" fg:x="2168" fg:w="8"/><text x="53.5440%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.20%)</title><rect x="53.2940%" y="245" width="0.1967%" height="15" fill="rgb(248,145,5)" fg:x="2168" fg:w="8"/><text x="53.5440%" y="255.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.20%)</title><rect x="53.2940%" y="229" width="0.1967%" height="15" fill="rgb(226,116,26)" fg:x="2168" fg:w="8"/><text x="53.5440%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (8 samples, 0.20%)</title><rect x="53.2940%" y="213" width="0.1967%" height="15" fill="rgb(244,5,17)" fg:x="2168" fg:w="8"/><text x="53.5440%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (7 samples, 0.17%)</title><rect x="53.3186%" y="197" width="0.1721%" height="15" fill="rgb(252,159,33)" fg:x="2169" fg:w="7"/><text x="53.5686%" y="207.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (6 samples, 0.15%)</title><rect x="53.3432%" y="181" width="0.1475%" height="15" fill="rgb(206,71,0)" fg:x="2170" fg:w="6"/><text x="53.5932%" y="191.50"></text></g><g><title>core::slice::raw::from_raw_parts (2 samples, 0.05%)</title><rect x="53.4415%" y="165" width="0.0492%" height="15" fill="rgb(233,118,54)" fg:x="2174" fg:w="2"/><text x="53.6915%" y="175.50"></text></g><g><title>core::ptr::slice_from_raw_parts (2 samples, 0.05%)</title><rect x="53.4415%" y="149" width="0.0492%" height="15" fill="rgb(234,83,48)" fg:x="2174" fg:w="2"/><text x="53.6915%" y="159.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (2 samples, 0.05%)</title><rect x="53.4415%" y="133" width="0.0492%" height="15" fill="rgb(228,3,54)" fg:x="2174" fg:w="2"/><text x="53.6915%" y="143.50"></text></g><g><title>chacha20::backends::avx2::inner (26 samples, 0.64%)</title><rect x="53.0973%" y="469" width="0.6391%" height="15" fill="rgb(226,155,13)" fg:x="2160" fg:w="26"/><text x="53.3473%" y="479.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (26 samples, 0.64%)</title><rect x="53.0973%" y="453" width="0.6391%" height="15" fill="rgb(241,28,37)" fg:x="2160" fg:w="26"/><text x="53.3473%" y="463.50"></text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;generic_array::GenericArray&lt;u8,N&gt;,M&gt;&gt;::xor_in2out (10 samples, 0.25%)</title><rect x="53.4907%" y="437" width="0.2458%" height="15" fill="rgb(233,93,10)" fg:x="2176" fg:w="10"/><text x="53.7407%" y="447.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (4 samples, 0.10%)</title><rect x="53.6382%" y="421" width="0.0983%" height="15" fill="rgb(225,113,19)" fg:x="2182" fg:w="4"/><text x="53.8882%" y="431.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (4 samples, 0.10%)</title><rect x="53.6382%" y="405" width="0.0983%" height="15" fill="rgb(241,2,18)" fg:x="2182" fg:w="4"/><text x="53.8882%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.10%)</title><rect x="53.6382%" y="389" width="0.0983%" height="15" fill="rgb(228,207,21)" fg:x="2182" fg:w="4"/><text x="53.8882%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.10%)</title><rect x="53.6382%" y="373" width="0.0983%" height="15" fill="rgb(213,211,35)" fg:x="2182" fg:w="4"/><text x="53.8882%" y="383.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.10%)</title><rect x="53.6382%" y="357" width="0.0983%" height="15" fill="rgb(209,83,10)" fg:x="2182" fg:w="4"/><text x="53.8882%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (4 samples, 0.10%)</title><rect x="53.6382%" y="341" width="0.0983%" height="15" fill="rgb(209,164,1)" fg:x="2182" fg:w="4"/><text x="53.8882%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (4 samples, 0.10%)</title><rect x="53.6382%" y="325" width="0.0983%" height="15" fill="rgb(213,184,43)" fg:x="2182" fg:w="4"/><text x="53.8882%" y="335.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (4 samples, 0.10%)</title><rect x="53.6382%" y="309" width="0.0983%" height="15" fill="rgb(231,61,34)" fg:x="2182" fg:w="4"/><text x="53.8882%" y="319.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (4 samples, 0.10%)</title><rect x="53.6382%" y="293" width="0.0983%" height="15" fill="rgb(235,75,3)" fg:x="2182" fg:w="4"/><text x="53.8882%" y="303.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (4 samples, 0.10%)</title><rect x="53.6382%" y="277" width="0.0983%" height="15" fill="rgb(220,106,47)" fg:x="2182" fg:w="4"/><text x="53.8882%" y="287.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (4 samples, 0.10%)</title><rect x="53.6382%" y="261" width="0.0983%" height="15" fill="rgb(210,196,33)" fg:x="2182" fg:w="4"/><text x="53.8882%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.10%)</title><rect x="53.6382%" y="245" width="0.0983%" height="15" fill="rgb(229,154,42)" fg:x="2182" fg:w="4"/><text x="53.8882%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.10%)</title><rect x="53.6382%" y="229" width="0.0983%" height="15" fill="rgb(228,114,26)" fg:x="2182" fg:w="4"/><text x="53.8882%" y="239.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.10%)</title><rect x="53.6382%" y="213" width="0.0983%" height="15" fill="rgb(208,144,1)" fg:x="2182" fg:w="4"/><text x="53.8882%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (4 samples, 0.10%)</title><rect x="53.6382%" y="197" width="0.0983%" height="15" fill="rgb(239,112,37)" fg:x="2182" fg:w="4"/><text x="53.8882%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.05%)</title><rect x="53.6873%" y="181" width="0.0492%" height="15" fill="rgb(210,96,50)" fg:x="2184" fg:w="2"/><text x="53.9373%" y="191.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (2 samples, 0.05%)</title><rect x="53.6873%" y="165" width="0.0492%" height="15" fill="rgb(222,178,2)" fg:x="2184" fg:w="2"/><text x="53.9373%" y="175.50"></text></g><g><title>chacha20::backends::avx2::rounds (1 samples, 0.02%)</title><rect x="53.7365%" y="469" width="0.0246%" height="15" fill="rgb(226,74,18)" fg:x="2186" fg:w="1"/><text x="53.9865%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.02%)</title><rect x="53.7611%" y="469" width="0.0246%" height="15" fill="rgb(225,67,54)" fg:x="2187" fg:w="1"/><text x="54.0111%" y="479.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (1 samples, 0.02%)</title><rect x="53.7856%" y="469" width="0.0246%" height="15" fill="rgb(251,92,32)" fg:x="2188" fg:w="1"/><text x="54.0356%" y="479.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (32 samples, 0.79%)</title><rect x="53.0973%" y="565" width="0.7866%" height="15" fill="rgb(228,149,22)" fg:x="2160" fg:w="32"/><text x="53.3473%" y="575.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (32 samples, 0.79%)</title><rect x="53.0973%" y="549" width="0.7866%" height="15" fill="rgb(243,54,13)" fg:x="2160" fg:w="32"/><text x="53.3473%" y="559.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (32 samples, 0.79%)</title><rect x="53.0973%" y="533" width="0.7866%" height="15" fill="rgb(243,180,28)" fg:x="2160" fg:w="32"/><text x="53.3473%" y="543.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (32 samples, 0.79%)</title><rect x="53.0973%" y="517" width="0.7866%" height="15" fill="rgb(208,167,24)" fg:x="2160" fg:w="32"/><text x="53.3473%" y="527.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (32 samples, 0.79%)</title><rect x="53.0973%" y="501" width="0.7866%" height="15" fill="rgb(245,73,45)" fg:x="2160" fg:w="32"/><text x="53.3473%" y="511.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (32 samples, 0.79%)</title><rect x="53.0973%" y="485" width="0.7866%" height="15" fill="rgb(237,203,48)" fg:x="2160" fg:w="32"/><text x="53.3473%" y="495.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (3 samples, 0.07%)</title><rect x="53.8102%" y="469" width="0.0737%" height="15" fill="rgb(211,197,16)" fg:x="2189" fg:w="3"/><text x="54.0602%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.02%)</title><rect x="53.8840%" y="405" width="0.0246%" height="15" fill="rgb(243,99,51)" fg:x="2192" fg:w="1"/><text x="54.1340%" y="415.50"></text></g><g><title>&lt;tftp::client::encryption_socket::EncryptionBoundSocket&lt;S,Rng&gt; as tftp::socket::Socket&gt;::send_to (34 samples, 0.84%)</title><rect x="53.0973%" y="645" width="0.8358%" height="15" fill="rgb(215,123,29)" fg:x="2160" fg:w="34"/><text x="53.3473%" y="655.50"></text></g><g><title>tftp::encrypted_packet::EncryptedPacket::encrypt (34 samples, 0.84%)</title><rect x="53.0973%" y="629" width="0.8358%" height="15" fill="rgb(239,186,37)" fg:x="2160" fg:w="34"/><text x="53.3473%" y="639.50"></text></g><g><title>tftp::encryption::Encryptor&lt;R&gt;::encrypt (34 samples, 0.84%)</title><rect x="53.0973%" y="613" width="0.8358%" height="15" fill="rgb(252,136,39)" fg:x="2160" fg:w="34"/><text x="53.3473%" y="623.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::encrypt_in_place_detached (34 samples, 0.84%)</title><rect x="53.0973%" y="597" width="0.8358%" height="15" fill="rgb(223,213,32)" fg:x="2160" fg:w="34"/><text x="53.3473%" y="607.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::encrypt_in_place_detached (34 samples, 0.84%)</title><rect x="53.0973%" y="581" width="0.8358%" height="15" fill="rgb(233,115,5)" fg:x="2160" fg:w="34"/><text x="53.3473%" y="591.50"></text></g><g><title>universal_hash::UniversalHash::update_padded (2 samples, 0.05%)</title><rect x="53.8840%" y="565" width="0.0492%" height="15" fill="rgb(207,226,44)" fg:x="2192" fg:w="2"/><text x="54.1340%" y="575.50"></text></g><g><title>universal_hash::UniversalHash::update (2 samples, 0.05%)</title><rect x="53.8840%" y="549" width="0.0492%" height="15" fill="rgb(208,126,0)" fg:x="2192" fg:w="2"/><text x="54.1340%" y="559.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (2 samples, 0.05%)</title><rect x="53.8840%" y="533" width="0.0492%" height="15" fill="rgb(244,66,21)" fg:x="2192" fg:w="2"/><text x="54.1340%" y="543.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (2 samples, 0.05%)</title><rect x="53.8840%" y="517" width="0.0492%" height="15" fill="rgb(222,97,12)" fg:x="2192" fg:w="2"/><text x="54.1340%" y="527.50"></text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (2 samples, 0.05%)</title><rect x="53.8840%" y="501" width="0.0492%" height="15" fill="rgb(219,213,19)" fg:x="2192" fg:w="2"/><text x="54.1340%" y="511.50"></text></g><g><title>&lt;poly1305::backend::avx2::State as universal_hash::UhfBackend&gt;::proc_par_blocks (2 samples, 0.05%)</title><rect x="53.8840%" y="485" width="0.0492%" height="15" fill="rgb(252,169,30)" fg:x="2192" fg:w="2"/><text x="54.1340%" y="495.50"></text></g><g><title>poly1305::backend::avx2::State::compute_par_blocks (2 samples, 0.05%)</title><rect x="53.8840%" y="469" width="0.0492%" height="15" fill="rgb(206,32,51)" fg:x="2192" fg:w="2"/><text x="54.1340%" y="479.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (2 samples, 0.05%)</title><rect x="53.8840%" y="453" width="0.0492%" height="15" fill="rgb(250,172,42)" fg:x="2192" fg:w="2"/><text x="54.1340%" y="463.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (2 samples, 0.05%)</title><rect x="53.8840%" y="437" width="0.0492%" height="15" fill="rgb(209,34,43)" fg:x="2192" fg:w="2"/><text x="54.1340%" y="447.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (2 samples, 0.05%)</title><rect x="53.8840%" y="421" width="0.0492%" height="15" fill="rgb(223,11,35)" fg:x="2192" fg:w="2"/><text x="54.1340%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (1 samples, 0.02%)</title><rect x="53.9086%" y="405" width="0.0246%" height="15" fill="rgb(251,219,26)" fg:x="2193" fg:w="1"/><text x="54.1586%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (1 samples, 0.02%)</title><rect x="53.9086%" y="389" width="0.0246%" height="15" fill="rgb(231,119,3)" fg:x="2193" fg:w="1"/><text x="54.1586%" y="399.50"></text></g><g><title>&lt;u8 as subtle::ConstantTimeEq&gt;::ct_eq (3 samples, 0.07%)</title><rect x="53.9331%" y="645" width="0.0737%" height="15" fill="rgb(216,97,11)" fg:x="2194" fg:w="3"/><text x="54.1831%" y="655.50"></text></g><g><title>core::num::&lt;impl u8&gt;::wrapping_neg (1 samples, 0.02%)</title><rect x="53.9823%" y="629" width="0.0246%" height="15" fill="rgb(223,59,9)" fg:x="2196" fg:w="1"/><text x="54.2323%" y="639.50"></text></g><g><title>core::num::&lt;impl u8&gt;::wrapping_sub (1 samples, 0.02%)</title><rect x="53.9823%" y="613" width="0.0246%" height="15" fill="rgb(233,93,31)" fg:x="2196" fg:w="1"/><text x="54.2323%" y="623.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (8 samples, 0.20%)</title><rect x="54.0069%" y="645" width="0.1967%" height="15" fill="rgb(239,81,33)" fg:x="2197" fg:w="8"/><text x="54.2569%" y="655.50"></text></g><g><title>&lt;x25519_dalek::x25519::PublicKey as core::convert::From&lt;&amp;x25519_dalek::x25519::EphemeralSecret&gt;&gt;::from (1 samples, 0.02%)</title><rect x="54.2035%" y="645" width="0.0246%" height="15" fill="rgb(213,120,34)" fg:x="2205" fg:w="1"/><text x="54.4535%" y="655.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::mul_base_clamped (1 samples, 0.02%)</title><rect x="54.2035%" y="629" width="0.0246%" height="15" fill="rgb(243,49,53)" fg:x="2205" fg:w="1"/><text x="54.4535%" y="639.50"></text></g><g><title>curve25519_dalek::edwards::EdwardsPoint::mul_base (1 samples, 0.02%)</title><rect x="54.2035%" y="613" width="0.0246%" height="15" fill="rgb(247,216,33)" fg:x="2205" fg:w="1"/><text x="54.4535%" y="623.50"></text></g><g><title>curve25519_dalek::edwards::&lt;impl core::ops::arith::Mul&lt;curve25519_dalek::edwards::EdwardsPoint&gt; for &amp;curve25519_dalek::scalar::Scalar&gt;::mul (1 samples, 0.02%)</title><rect x="54.2035%" y="597" width="0.0246%" height="15" fill="rgb(226,26,14)" fg:x="2205" fg:w="1"/><text x="54.4535%" y="607.50"></text></g><g><title>curve25519_dalek::edwards::&lt;impl core::ops::arith::Mul&lt;&amp;curve25519_dalek::edwards::EdwardsPoint&gt; for &amp;curve25519_dalek::scalar::Scalar&gt;::mul (1 samples, 0.02%)</title><rect x="54.2035%" y="581" width="0.0246%" height="15" fill="rgb(215,49,53)" fg:x="2205" fg:w="1"/><text x="54.4535%" y="591.50"></text></g><g><title>&lt;&amp;curve25519_dalek::edwards::EdwardsPoint as core::ops::arith::Mul&lt;&amp;curve25519_dalek::scalar::Scalar&gt;&gt;::mul (1 samples, 0.02%)</title><rect x="54.2035%" y="565" width="0.0246%" height="15" fill="rgb(245,162,40)" fg:x="2205" fg:w="1"/><text x="54.4535%" y="575.50"></text></g><g><title>curve25519_dalek::backend::variable_base_mul (1 samples, 0.02%)</title><rect x="54.2035%" y="549" width="0.0246%" height="15" fill="rgb(229,68,17)" fg:x="2205" fg:w="1"/><text x="54.4535%" y="559.50"></text></g><g><title>curve25519_dalek::backend::vector::scalar_mul::variable_base::spec_avx2::mul (1 samples, 0.02%)</title><rect x="54.2035%" y="533" width="0.0246%" height="15" fill="rgb(213,182,10)" fg:x="2205" fg:w="1"/><text x="54.4535%" y="543.50"></text></g><g><title>curve25519_dalek::backend::vector::scalar_mul::variable_base::spec_avx2::mul::_impl_mul (1 samples, 0.02%)</title><rect x="54.2035%" y="517" width="0.0246%" height="15" fill="rgb(245,125,30)" fg:x="2205" fg:w="1"/><text x="54.4535%" y="527.50"></text></g><g><title>curve25519_dalek::backend::vector::avx2::edwards::ExtendedPoint::mul_by_pow_2 (1 samples, 0.02%)</title><rect x="54.2035%" y="501" width="0.0246%" height="15" fill="rgb(232,202,2)" fg:x="2205" fg:w="1"/><text x="54.4535%" y="511.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::avx2::edwards::ExtendedPoint as curve25519_dalek::backend::vector::avx2::edwards::ExtendedPoint::mul_by_pow_2::__Impl_mul_by_pow_2__&gt;::_impl_mul_by_pow_2 (1 samples, 0.02%)</title><rect x="54.2035%" y="485" width="0.0246%" height="15" fill="rgb(237,140,51)" fg:x="2205" fg:w="1"/><text x="54.4535%" y="495.50"></text></g><g><title>curve25519_dalek::backend::vector::avx2::edwards::ExtendedPoint::double (1 samples, 0.02%)</title><rect x="54.2035%" y="469" width="0.0246%" height="15" fill="rgb(236,157,25)" fg:x="2205" fg:w="1"/><text x="54.4535%" y="479.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::avx2::edwards::ExtendedPoint as curve25519_dalek::backend::vector::avx2::edwards::ExtendedPoint::double::__Impl_double__&gt;::_impl_double (1 samples, 0.02%)</title><rect x="54.2035%" y="453" width="0.0246%" height="15" fill="rgb(219,209,0)" fg:x="2205" fg:w="1"/><text x="54.4535%" y="463.50"></text></g><g><title>curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4::shuffle (1 samples, 0.02%)</title><rect x="54.2035%" y="437" width="0.0246%" height="15" fill="rgb(240,116,54)" fg:x="2205" fg:w="1"/><text x="54.4535%" y="447.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4 as curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4::shuffle::__Impl_shuffle__&gt;::_impl_shuffle (1 samples, 0.02%)</title><rect x="54.2035%" y="421" width="0.0246%" height="15" fill="rgb(216,10,36)" fg:x="2205" fg:w="1"/><text x="54.4535%" y="431.50"></text></g><g><title>&lt;curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4 as curve25519_dalek::backend::vector::avx2::field::FieldElement2625x4::shuffle::__Impl_shuffle__&gt;::_impl_shuffle::shuffle_lanes (1 samples, 0.02%)</title><rect x="54.2035%" y="405" width="0.0246%" height="15" fill="rgb(222,72,44)" fg:x="2205" fg:w="1"/><text x="54.4535%" y="415.50"></text></g><g><title>curve25519_dalek::backend::vector::packed_simd::u32x8::new (1 samples, 0.02%)</title><rect x="54.2035%" y="389" width="0.0246%" height="15" fill="rgb(232,159,9)" fg:x="2205" fg:w="1"/><text x="54.4535%" y="399.50"></text></g><g><title>curve25519_dalek::backend::vector::packed_simd::u32x8::new::_impl_new (1 samples, 0.02%)</title><rect x="54.2035%" y="373" width="0.0246%" height="15" fill="rgb(210,39,32)" fg:x="2205" fg:w="1"/><text x="54.4535%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.02%)</title><rect x="54.2035%" y="357" width="0.0246%" height="15" fill="rgb(216,194,45)" fg:x="2205" fg:w="1"/><text x="54.4535%" y="367.50"></text></g><g><title>__memcpy_avx_unaligned (6 samples, 0.15%)</title><rect x="54.2281%" y="645" width="0.1475%" height="15" fill="rgb(218,18,35)" fg:x="2206" fg:w="6"/><text x="54.4781%" y="655.50"></text></g><g><title>__memcpy_avx_unaligned_erms (7 samples, 0.17%)</title><rect x="54.3756%" y="645" width="0.1721%" height="15" fill="rgb(207,83,51)" fg:x="2212" fg:w="7"/><text x="54.6256%" y="655.50"></text></g><g><title>_init (2 samples, 0.05%)</title><rect x="54.5477%" y="645" width="0.0492%" height="15" fill="rgb(225,63,43)" fg:x="2219" fg:w="2"/><text x="54.7977%" y="655.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.02%)</title><rect x="54.5969%" y="645" width="0.0246%" height="15" fill="rgb(207,57,36)" fg:x="2221" fg:w="1"/><text x="54.8469%" y="655.50"></text></g><g><title>chacha20::xchacha::hchacha (2 samples, 0.05%)</title><rect x="54.6214%" y="645" width="0.0492%" height="15" fill="rgb(216,99,33)" fg:x="2222" fg:w="2"/><text x="54.8714%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="54.6460%" y="629" width="0.0246%" height="15" fill="rgb(225,42,16)" fg:x="2223" fg:w="1"/><text x="54.8960%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.02%)</title><rect x="54.6460%" y="613" width="0.0246%" height="15" fill="rgb(220,201,45)" fg:x="2223" fg:w="1"/><text x="54.8960%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (1 samples, 0.02%)</title><rect x="54.6460%" y="597" width="0.0246%" height="15" fill="rgb(225,33,4)" fg:x="2223" fg:w="1"/><text x="54.8960%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.02%)</title><rect x="54.6460%" y="581" width="0.0246%" height="15" fill="rgb(224,33,50)" fg:x="2223" fg:w="1"/><text x="54.8960%" y="591.50"></text></g><g><title>chacha20::xchacha::quarter_round (4 samples, 0.10%)</title><rect x="54.6706%" y="645" width="0.0983%" height="15" fill="rgb(246,198,51)" fg:x="2224" fg:w="4"/><text x="54.9206%" y="655.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_left (1 samples, 0.02%)</title><rect x="54.7443%" y="629" width="0.0246%" height="15" fill="rgb(205,22,4)" fg:x="2227" fg:w="1"/><text x="54.9943%" y="639.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::authenticate_lengths (1 samples, 0.02%)</title><rect x="54.7689%" y="645" width="0.0246%" height="15" fill="rgb(206,3,8)" fg:x="2228" fg:w="1"/><text x="55.0189%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.02%)</title><rect x="54.8427%" y="597" width="0.0246%" height="15" fill="rgb(251,23,15)" fg:x="2231" fg:w="1"/><text x="55.0927%" y="607.50"></text></g><g><title>core::array::&lt;impl core::iter::traits::collect::IntoIterator for &amp;mut [T: N]&gt;::into_iter (5 samples, 0.12%)</title><rect x="54.7935%" y="645" width="0.1229%" height="15" fill="rgb(252,88,28)" fg:x="2229" fg:w="5"/><text x="55.0435%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (3 samples, 0.07%)</title><rect x="54.8427%" y="629" width="0.0737%" height="15" fill="rgb(212,127,14)" fg:x="2231" fg:w="3"/><text x="55.0927%" y="639.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (3 samples, 0.07%)</title><rect x="54.8427%" y="613" width="0.0737%" height="15" fill="rgb(247,145,37)" fg:x="2231" fg:w="3"/><text x="55.0927%" y="623.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (2 samples, 0.05%)</title><rect x="54.8673%" y="597" width="0.0492%" height="15" fill="rgb(209,117,53)" fg:x="2232" fg:w="2"/><text x="55.1173%" y="607.50"></text></g><g><title>core::array::&lt;impl core::ops::index::Index&lt;I&gt; for [T: N]&gt;::index (1 samples, 0.02%)</title><rect x="54.9164%" y="645" width="0.0246%" height="15" fill="rgb(212,90,42)" fg:x="2234" fg:w="1"/><text x="55.1664%" y="655.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.02%)</title><rect x="54.9410%" y="645" width="0.0246%" height="15" fill="rgb(218,164,37)" fg:x="2235" fg:w="1"/><text x="55.1910%" y="655.50"></text></g><g><title>core::convert::num::ptr_try_from_impls::&lt;impl core::convert::TryFrom&lt;usize&gt; for u64&gt;::try_from (1 samples, 0.02%)</title><rect x="54.9656%" y="645" width="0.0246%" height="15" fill="rgb(246,65,34)" fg:x="2236" fg:w="1"/><text x="55.2156%" y="655.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (11 samples, 0.27%)</title><rect x="54.9902%" y="645" width="0.2704%" height="15" fill="rgb(231,100,33)" fg:x="2237" fg:w="11"/><text x="55.2402%" y="655.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (10 samples, 0.25%)</title><rect x="55.2606%" y="645" width="0.2458%" height="15" fill="rgb(228,126,14)" fg:x="2248" fg:w="10"/><text x="55.5106%" y="655.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (3 samples, 0.07%)</title><rect x="55.5064%" y="645" width="0.0737%" height="15" fill="rgb(215,173,21)" fg:x="2258" fg:w="3"/><text x="55.7564%" y="655.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (1 samples, 0.02%)</title><rect x="55.5801%" y="645" width="0.0246%" height="15" fill="rgb(210,6,40)" fg:x="2261" fg:w="1"/><text x="55.8301%" y="655.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (4 samples, 0.10%)</title><rect x="55.6047%" y="645" width="0.0983%" height="15" fill="rgb(212,48,18)" fg:x="2262" fg:w="4"/><text x="55.8547%" y="655.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (2 samples, 0.05%)</title><rect x="55.7030%" y="645" width="0.0492%" height="15" fill="rgb(230,214,11)" fg:x="2266" fg:w="2"/><text x="55.9530%" y="655.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (2 samples, 0.05%)</title><rect x="55.7522%" y="645" width="0.0492%" height="15" fill="rgb(254,105,39)" fg:x="2268" fg:w="2"/><text x="56.0022%" y="655.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (13 samples, 0.32%)</title><rect x="55.8014%" y="645" width="0.3196%" height="15" fill="rgb(245,158,5)" fg:x="2270" fg:w="13"/><text x="56.0514%" y="655.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (2 samples, 0.05%)</title><rect x="56.1209%" y="645" width="0.0492%" height="15" fill="rgb(249,208,11)" fg:x="2283" fg:w="2"/><text x="56.3709%" y="655.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srlv_epi32 (1 samples, 0.02%)</title><rect x="56.1701%" y="645" width="0.0246%" height="15" fill="rgb(210,39,28)" fg:x="2285" fg:w="1"/><text x="56.4201%" y="655.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (8 samples, 0.20%)</title><rect x="56.1947%" y="645" width="0.1967%" height="15" fill="rgb(211,56,53)" fg:x="2286" fg:w="8"/><text x="56.4447%" y="655.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (3 samples, 0.07%)</title><rect x="56.3913%" y="645" width="0.0737%" height="15" fill="rgb(226,201,30)" fg:x="2294" fg:w="3"/><text x="56.6413%" y="655.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi32 (1 samples, 0.02%)</title><rect x="56.4405%" y="629" width="0.0246%" height="15" fill="rgb(239,101,34)" fg:x="2296" fg:w="1"/><text x="56.6905%" y="639.50"></text></g><g><title>core::core_arch::simd::i32x8::new (1 samples, 0.02%)</title><rect x="56.4405%" y="613" width="0.0246%" height="15" fill="rgb(226,209,5)" fg:x="2296" fg:w="1"/><text x="56.6905%" y="623.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.02%)</title><rect x="56.4651%" y="645" width="0.0246%" height="15" fill="rgb(250,105,47)" fg:x="2297" fg:w="1"/><text x="56.7151%" y="655.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.02%)</title><rect x="56.4897%" y="645" width="0.0246%" height="15" fill="rgb(230,72,3)" fg:x="2298" fg:w="1"/><text x="56.7397%" y="655.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (1 samples, 0.02%)</title><rect x="56.5143%" y="645" width="0.0246%" height="15" fill="rgb(232,218,39)" fg:x="2299" fg:w="1"/><text x="56.7643%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="56.5143%" y="629" width="0.0246%" height="15" fill="rgb(248,166,6)" fg:x="2299" fg:w="1"/><text x="56.7643%" y="639.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (10 samples, 0.25%)</title><rect x="56.5388%" y="645" width="0.2458%" height="15" fill="rgb(247,89,20)" fg:x="2300" fg:w="10"/><text x="56.7888%" y="655.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (16 samples, 0.39%)</title><rect x="56.7847%" y="645" width="0.3933%" height="15" fill="rgb(248,130,54)" fg:x="2310" fg:w="16"/><text x="57.0347%" y="655.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (11 samples, 0.27%)</title><rect x="57.1780%" y="645" width="0.2704%" height="15" fill="rgb(234,196,4)" fg:x="2326" fg:w="11"/><text x="57.4280%" y="655.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (5 samples, 0.12%)</title><rect x="57.4484%" y="645" width="0.1229%" height="15" fill="rgb(250,143,31)" fg:x="2337" fg:w="5"/><text x="57.6984%" y="655.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (3 samples, 0.07%)</title><rect x="57.5713%" y="645" width="0.0737%" height="15" fill="rgb(211,110,34)" fg:x="2342" fg:w="3"/><text x="57.8213%" y="655.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4 samples, 0.10%)</title><rect x="57.6450%" y="645" width="0.0983%" height="15" fill="rgb(215,124,48)" fg:x="2345" fg:w="4"/><text x="57.8950%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (38 samples, 0.93%)</title><rect x="57.7434%" y="645" width="0.9341%" height="15" fill="rgb(216,46,13)" fg:x="2349" fg:w="38"/><text x="57.9934%" y="655.50"></text></g><g><title>core::mem::forget (2 samples, 0.05%)</title><rect x="58.6775%" y="645" width="0.0492%" height="15" fill="rgb(205,184,25)" fg:x="2387" fg:w="2"/><text x="58.9275%" y="655.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_le_bytes (1 samples, 0.02%)</title><rect x="58.7266%" y="645" width="0.0246%" height="15" fill="rgb(228,1,10)" fg:x="2389" fg:w="1"/><text x="58.9766%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (1 samples, 0.02%)</title><rect x="58.7512%" y="645" width="0.0246%" height="15" fill="rgb(213,116,27)" fg:x="2390" fg:w="1"/><text x="59.0012%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.02%)</title><rect x="58.7512%" y="629" width="0.0246%" height="15" fill="rgb(241,95,50)" fg:x="2390" fg:w="1"/><text x="59.0012%" y="639.50"></text></g><g><title>core::ptr::write (3 samples, 0.07%)</title><rect x="58.7758%" y="645" width="0.0737%" height="15" fill="rgb(238,48,32)" fg:x="2391" fg:w="3"/><text x="59.0258%" y="655.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (8 samples, 0.20%)</title><rect x="58.8496%" y="645" width="0.1967%" height="15" fill="rgb(235,113,49)" fg:x="2394" fg:w="8"/><text x="59.0996%" y="655.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (1 samples, 0.02%)</title><rect x="59.0462%" y="645" width="0.0246%" height="15" fill="rgb(205,127,43)" fg:x="2402" fg:w="1"/><text x="59.2962%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.02%)</title><rect x="59.0708%" y="645" width="0.0246%" height="15" fill="rgb(250,162,2)" fg:x="2403" fg:w="1"/><text x="59.3208%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (7 samples, 0.17%)</title><rect x="59.0954%" y="645" width="0.1721%" height="15" fill="rgb(220,13,41)" fg:x="2404" fg:w="7"/><text x="59.3454%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (13 samples, 0.32%)</title><rect x="59.2675%" y="645" width="0.3196%" height="15" fill="rgb(249,221,25)" fg:x="2411" fg:w="13"/><text x="59.5175%" y="655.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (5 samples, 0.12%)</title><rect x="59.4641%" y="629" width="0.1229%" height="15" fill="rgb(215,208,19)" fg:x="2419" fg:w="5"/><text x="59.7141%" y="639.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::as_mut_ptr (1 samples, 0.02%)</title><rect x="59.5624%" y="613" width="0.0246%" height="15" fill="rgb(236,175,2)" fg:x="2423" fg:w="1"/><text x="59.8124%" y="623.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::cast (2 samples, 0.05%)</title><rect x="59.6608%" y="613" width="0.0492%" height="15" fill="rgb(241,52,2)" fg:x="2427" fg:w="2"/><text x="59.9108%" y="623.50"></text></g><g><title>core::slice::raw::from_raw_parts (42 samples, 1.03%)</title><rect x="59.5870%" y="645" width="1.0324%" height="15" fill="rgb(248,140,14)" fg:x="2424" fg:w="42"/><text x="59.8370%" y="655.50"></text></g><g><title>core::ptr::slice_from_raw_parts (39 samples, 0.96%)</title><rect x="59.6608%" y="629" width="0.9587%" height="15" fill="rgb(253,22,42)" fg:x="2427" fg:w="39"/><text x="59.9108%" y="639.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (37 samples, 0.91%)</title><rect x="59.7099%" y="613" width="0.9095%" height="15" fill="rgb(234,61,47)" fg:x="2429" fg:w="37"/><text x="59.9599%" y="623.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (22 samples, 0.54%)</title><rect x="60.6441%" y="613" width="0.5408%" height="15" fill="rgb(208,226,15)" fg:x="2467" fg:w="22"/><text x="60.8941%" y="623.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (24 samples, 0.59%)</title><rect x="60.6195%" y="645" width="0.5900%" height="15" fill="rgb(217,221,4)" fg:x="2466" fg:w="24"/><text x="60.8695%" y="655.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (23 samples, 0.57%)</title><rect x="60.6441%" y="629" width="0.5654%" height="15" fill="rgb(212,174,34)" fg:x="2467" fg:w="23"/><text x="60.8941%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::cast (1 samples, 0.02%)</title><rect x="61.1849%" y="613" width="0.0246%" height="15" fill="rgb(253,83,4)" fg:x="2489" fg:w="1"/><text x="61.4349%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicU8::load (1 samples, 0.02%)</title><rect x="61.2094%" y="645" width="0.0246%" height="15" fill="rgb(250,195,49)" fg:x="2490" fg:w="1"/><text x="61.4594%" y="655.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (3 samples, 0.07%)</title><rect x="61.2340%" y="645" width="0.0737%" height="15" fill="rgb(241,192,25)" fg:x="2491" fg:w="3"/><text x="61.4840%" y="655.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (1 samples, 0.02%)</title><rect x="61.2832%" y="629" width="0.0246%" height="15" fill="rgb(208,124,10)" fg:x="2493" fg:w="1"/><text x="61.5332%" y="639.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::iter_position (2 samples, 0.05%)</title><rect x="61.3078%" y="645" width="0.0492%" height="15" fill="rgb(222,33,0)" fg:x="2494" fg:w="2"/><text x="61.5578%" y="655.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.02%)</title><rect x="61.3324%" y="629" width="0.0246%" height="15" fill="rgb(234,209,28)" fg:x="2495" fg:w="1"/><text x="61.5824%" y="639.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (8 samples, 0.20%)</title><rect x="61.3569%" y="645" width="0.1967%" height="15" fill="rgb(224,11,23)" fg:x="2496" fg:w="8"/><text x="61.6069%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.02%)</title><rect x="61.5536%" y="645" width="0.0246%" height="15" fill="rgb(232,99,1)" fg:x="2504" fg:w="1"/><text x="61.8036%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (1 samples, 0.02%)</title><rect x="61.5536%" y="629" width="0.0246%" height="15" fill="rgb(237,95,45)" fg:x="2504" fg:w="1"/><text x="61.8036%" y="639.50"></text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::as_mut_slice (1 samples, 0.02%)</title><rect x="61.5782%" y="645" width="0.0246%" height="15" fill="rgb(208,109,11)" fg:x="2505" fg:w="1"/><text x="61.8282%" y="655.50"></text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::capacity (1 samples, 0.02%)</title><rect x="61.6028%" y="645" width="0.0246%" height="15" fill="rgb(216,190,48)" fg:x="2506" fg:w="1"/><text x="61.8528%" y="655.50"></text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::is_full (5 samples, 0.12%)</title><rect x="61.6273%" y="645" width="0.1229%" height="15" fill="rgb(251,171,36)" fg:x="2507" fg:w="5"/><text x="61.8773%" y="655.50"></text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::push (4 samples, 0.10%)</title><rect x="61.7502%" y="645" width="0.0983%" height="15" fill="rgb(230,62,22)" fg:x="2512" fg:w="4"/><text x="62.0002%" y="655.50"></text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::push_unchecked (9 samples, 0.22%)</title><rect x="61.8486%" y="645" width="0.2212%" height="15" fill="rgb(225,114,35)" fg:x="2516" fg:w="9"/><text x="62.0986%" y="655.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::new (3 samples, 0.07%)</title><rect x="61.9961%" y="629" width="0.0737%" height="15" fill="rgb(215,118,42)" fg:x="2522" fg:w="3"/><text x="62.2461%" y="639.50"></text></g><g><title>polling::epoll::Events::clear (1 samples, 0.02%)</title><rect x="62.0698%" y="645" width="0.0246%" height="15" fill="rgb(243,119,21)" fg:x="2525" fg:w="1"/><text x="62.3198%" y="655.50"></text></g><g><title>polling::epoll::Poller::modify (1 samples, 0.02%)</title><rect x="62.0944%" y="645" width="0.0246%" height="15" fill="rgb(252,177,53)" fg:x="2526" fg:w="1"/><text x="62.3444%" y="655.50"></text></g><g><title>&lt;tracing_core::metadata::Level as core::cmp::PartialOrd&lt;tracing_core::metadata::LevelFilter&gt;&gt;::le (1 samples, 0.02%)</title><rect x="62.0944%" y="629" width="0.0246%" height="15" fill="rgb(237,209,29)" fg:x="2526" fg:w="1"/><text x="62.3444%" y="639.50"></text></g><g><title>tracing_core::metadata::filter_as_usize (1 samples, 0.02%)</title><rect x="62.0944%" y="613" width="0.0246%" height="15" fill="rgb(212,65,23)" fg:x="2526" fg:w="1"/><text x="62.3444%" y="623.50"></text></g><g><title>__entry_text_start (1 samples, 0.02%)</title><rect x="62.0944%" y="597" width="0.0246%" height="15" fill="rgb(230,222,46)" fg:x="2526" fg:w="1"/><text x="62.3444%" y="607.50"></text></g><g><title>polling::epoll::epoll_flags (1 samples, 0.02%)</title><rect x="62.1190%" y="645" width="0.0246%" height="15" fill="rgb(215,135,32)" fg:x="2527" fg:w="1"/><text x="62.3690%" y="655.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::AdditionKey as core::ops::arith::Add&lt;poly1305::backend::avx2::helpers::Aligned130&gt;&gt;::add::propagate_carry (1 samples, 0.02%)</title><rect x="62.1681%" y="597" width="0.0246%" height="15" fill="rgb(246,101,22)" fg:x="2529" fg:w="1"/><text x="62.4181%" y="607.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.02%)</title><rect x="62.2173%" y="581" width="0.0246%" height="15" fill="rgb(206,107,13)" fg:x="2531" fg:w="1"/><text x="62.4673%" y="591.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (3 samples, 0.07%)</title><rect x="62.1927%" y="597" width="0.0737%" height="15" fill="rgb(250,100,44)" fg:x="2530" fg:w="3"/><text x="62.4427%" y="607.50"></text></g><g><title>poly1305::backend::avx2::State::finalize (1 samples, 0.02%)</title><rect x="62.2419%" y="581" width="0.0246%" height="15" fill="rgb(231,147,38)" fg:x="2532" fg:w="1"/><text x="62.4919%" y="591.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::AdditionKey as core::ops::arith::Add&lt;poly1305::backend::avx2::helpers::Aligned130&gt;&gt;::add (1 samples, 0.02%)</title><rect x="62.2419%" y="565" width="0.0246%" height="15" fill="rgb(229,8,40)" fg:x="2532" fg:w="1"/><text x="62.4919%" y="575.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (1 samples, 0.02%)</title><rect x="62.2665%" y="581" width="0.0246%" height="15" fill="rgb(221,135,30)" fg:x="2533" fg:w="1"/><text x="62.5165%" y="591.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi32 (1 samples, 0.02%)</title><rect x="62.2665%" y="565" width="0.0246%" height="15" fill="rgb(249,193,18)" fg:x="2533" fg:w="1"/><text x="62.5165%" y="575.50"></text></g><g><title>core::core_arch::simd::i32x8::new (1 samples, 0.02%)</title><rect x="62.2665%" y="549" width="0.0246%" height="15" fill="rgb(209,133,39)" fg:x="2533" fg:w="1"/><text x="62.5165%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (2 samples, 0.05%)</title><rect x="62.2665%" y="597" width="0.0492%" height="15" fill="rgb(232,100,14)" fg:x="2533" fg:w="2"/><text x="62.5165%" y="607.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.02%)</title><rect x="62.2911%" y="581" width="0.0246%" height="15" fill="rgb(224,185,1)" fg:x="2534" fg:w="1"/><text x="62.5411%" y="591.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.02%)</title><rect x="62.2911%" y="565" width="0.0246%" height="15" fill="rgb(223,139,8)" fg:x="2534" fg:w="1"/><text x="62.5411%" y="575.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.02%)</title><rect x="62.2911%" y="549" width="0.0246%" height="15" fill="rgb(232,213,38)" fg:x="2534" fg:w="1"/><text x="62.5411%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (1 samples, 0.02%)</title><rect x="62.3156%" y="597" width="0.0246%" height="15" fill="rgb(207,94,22)" fg:x="2535" fg:w="1"/><text x="62.5656%" y="607.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (4 samples, 0.10%)</title><rect x="62.3402%" y="597" width="0.0983%" height="15" fill="rgb(219,183,54)" fg:x="2536" fg:w="4"/><text x="62.5902%" y="607.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi32 (3 samples, 0.07%)</title><rect x="62.3648%" y="581" width="0.0737%" height="15" fill="rgb(216,185,54)" fg:x="2537" fg:w="3"/><text x="62.6148%" y="591.50"></text></g><g><title>core::core_arch::simd::i32x8::new (3 samples, 0.07%)</title><rect x="62.3648%" y="565" width="0.0737%" height="15" fill="rgb(254,217,39)" fg:x="2537" fg:w="3"/><text x="62.6148%" y="575.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (3 samples, 0.07%)</title><rect x="62.4385%" y="597" width="0.0737%" height="15" fill="rgb(240,178,23)" fg:x="2540" fg:w="3"/><text x="62.6885%" y="607.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="62.5123%" y="597" width="0.0246%" height="15" fill="rgb(218,11,47)" fg:x="2543" fg:w="1"/><text x="62.7623%" y="607.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::AdditionKey as core::ops::arith::Add&lt;poly1305::backend::avx2::helpers::Aligned130&gt;&gt;::add::propagate_carry (18 samples, 0.44%)</title><rect x="62.1436%" y="613" width="0.4425%" height="15" fill="rgb(218,51,51)" fg:x="2528" fg:w="18"/><text x="62.3936%" y="623.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (2 samples, 0.05%)</title><rect x="62.5369%" y="597" width="0.0492%" height="15" fill="rgb(238,126,27)" fg:x="2544" fg:w="2"/><text x="62.7869%" y="607.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.02%)</title><rect x="62.5860%" y="597" width="0.0246%" height="15" fill="rgb(249,202,22)" fg:x="2546" fg:w="1"/><text x="62.8360%" y="607.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.02%)</title><rect x="62.5860%" y="581" width="0.0246%" height="15" fill="rgb(254,195,49)" fg:x="2546" fg:w="1"/><text x="62.8360%" y="591.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (1 samples, 0.02%)</title><rect x="62.6106%" y="597" width="0.0246%" height="15" fill="rgb(208,123,14)" fg:x="2547" fg:w="1"/><text x="62.8606%" y="607.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (1 samples, 0.02%)</title><rect x="62.6106%" y="581" width="0.0246%" height="15" fill="rgb(224,200,8)" fg:x="2547" fg:w="1"/><text x="62.8606%" y="591.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::AdditionKey as core::ops::arith::Add&lt;poly1305::backend::avx2::helpers::Aligned130&gt;&gt;::add::propagate_carry_32 (3 samples, 0.07%)</title><rect x="62.5860%" y="613" width="0.0737%" height="15" fill="rgb(217,61,36)" fg:x="2546" fg:w="3"/><text x="62.8360%" y="623.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.02%)</title><rect x="62.6352%" y="597" width="0.0246%" height="15" fill="rgb(206,35,45)" fg:x="2548" fg:w="1"/><text x="62.8852%" y="607.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.02%)</title><rect x="62.6598%" y="613" width="0.0246%" height="15" fill="rgb(217,65,33)" fg:x="2549" fg:w="1"/><text x="62.9098%" y="623.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="62.6598%" y="597" width="0.0246%" height="15" fill="rgb(222,158,48)" fg:x="2549" fg:w="1"/><text x="62.9098%" y="607.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (1 samples, 0.02%)</title><rect x="62.6844%" y="613" width="0.0246%" height="15" fill="rgb(254,2,54)" fg:x="2550" fg:w="1"/><text x="62.9344%" y="623.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::AdditionKey as core::ops::arith::Add&lt;poly1305::backend::avx2::helpers::Aligned130&gt;&gt;::add (24 samples, 0.59%)</title><rect x="62.1436%" y="629" width="0.5900%" height="15" fill="rgb(250,143,38)" fg:x="2528" fg:w="24"/><text x="62.3936%" y="639.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.02%)</title><rect x="62.7089%" y="613" width="0.0246%" height="15" fill="rgb(248,25,0)" fg:x="2551" fg:w="1"/><text x="62.9589%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_inserti128_si256 (1 samples, 0.02%)</title><rect x="62.7335%" y="613" width="0.0246%" height="15" fill="rgb(206,152,27)" fg:x="2552" fg:w="1"/><text x="62.9835%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (2 samples, 0.05%)</title><rect x="62.7581%" y="613" width="0.0492%" height="15" fill="rgb(240,77,30)" fg:x="2553" fg:w="2"/><text x="63.0081%" y="623.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (3 samples, 0.07%)</title><rect x="62.8073%" y="613" width="0.0737%" height="15" fill="rgb(231,5,3)" fg:x="2555" fg:w="3"/><text x="63.0573%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.02%)</title><rect x="62.8810%" y="581" width="0.0246%" height="15" fill="rgb(207,226,32)" fg:x="2558" fg:w="1"/><text x="63.1310%" y="591.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_blend_epi32 (2 samples, 0.05%)</title><rect x="62.9056%" y="581" width="0.0492%" height="15" fill="rgb(222,207,47)" fg:x="2559" fg:w="2"/><text x="63.1556%" y="591.50"></text></g><g><title>core::core_arch::simd::u64x4::splat (1 samples, 0.02%)</title><rect x="62.9794%" y="565" width="0.0246%" height="15" fill="rgb(229,115,45)" fg:x="2562" fg:w="1"/><text x="63.2294%" y="575.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.02%)</title><rect x="63.0039%" y="565" width="0.0246%" height="15" fill="rgb(224,191,6)" fg:x="2563" fg:w="1"/><text x="63.2539%" y="575.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (5 samples, 0.12%)</title><rect x="62.9548%" y="581" width="0.1229%" height="15" fill="rgb(230,227,24)" fg:x="2561" fg:w="5"/><text x="63.2048%" y="591.50"></text></g><g><title>poly1305::backend::avx2::State::finalize (2 samples, 0.05%)</title><rect x="63.0285%" y="565" width="0.0492%" height="15" fill="rgb(228,80,19)" fg:x="2564" fg:w="2"/><text x="63.2785%" y="575.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (2 samples, 0.05%)</title><rect x="63.0777%" y="581" width="0.0492%" height="15" fill="rgb(247,229,0)" fg:x="2566" fg:w="2"/><text x="63.3277%" y="591.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.02%)</title><rect x="63.1023%" y="565" width="0.0246%" height="15" fill="rgb(237,194,15)" fg:x="2567" fg:w="1"/><text x="63.3523%" y="575.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_unpacklo_epi32 (1 samples, 0.02%)</title><rect x="63.1268%" y="581" width="0.0246%" height="15" fill="rgb(219,203,20)" fg:x="2568" fg:w="1"/><text x="63.3768%" y="591.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.02%)</title><rect x="63.1514%" y="581" width="0.0246%" height="15" fill="rgb(234,128,8)" fg:x="2569" fg:w="1"/><text x="63.4014%" y="591.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="63.1760%" y="581" width="0.0246%" height="15" fill="rgb(248,202,8)" fg:x="2570" fg:w="1"/><text x="63.4260%" y="591.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::SpacedMultiplier4x130&gt;&gt;::mul (14 samples, 0.34%)</title><rect x="62.8810%" y="597" width="0.3441%" height="15" fill="rgb(206,104,37)" fg:x="2558" fg:w="14"/><text x="63.1310%" y="607.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.02%)</title><rect x="63.2006%" y="581" width="0.0246%" height="15" fill="rgb(223,8,27)" fg:x="2571" fg:w="1"/><text x="63.4506%" y="591.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.02%)</title><rect x="63.2252%" y="565" width="0.0246%" height="15" fill="rgb(216,217,28)" fg:x="2572" fg:w="1"/><text x="63.4752%" y="575.50"></text></g><g><title>poly1305::backend::avx2::State::finalize::{{closure}} (1 samples, 0.02%)</title><rect x="63.2252%" y="549" width="0.0246%" height="15" fill="rgb(249,199,1)" fg:x="2572" fg:w="1"/><text x="63.4752%" y="559.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::sum (1 samples, 0.02%)</title><rect x="63.2252%" y="533" width="0.0246%" height="15" fill="rgb(240,85,17)" fg:x="2572" fg:w="1"/><text x="63.4752%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (1 samples, 0.02%)</title><rect x="63.2498%" y="565" width="0.0246%" height="15" fill="rgb(206,108,45)" fg:x="2573" fg:w="1"/><text x="63.4998%" y="575.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="63.2498%" y="549" width="0.0246%" height="15" fill="rgb(245,210,41)" fg:x="2573" fg:w="1"/><text x="63.4998%" y="559.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (1 samples, 0.02%)</title><rect x="63.2743%" y="565" width="0.0246%" height="15" fill="rgb(206,13,37)" fg:x="2574" fg:w="1"/><text x="63.5243%" y="575.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="63.2743%" y="549" width="0.0246%" height="15" fill="rgb(250,61,18)" fg:x="2574" fg:w="1"/><text x="63.5243%" y="559.50"></text></g><g><title>poly1305::backend::avx2::helpers::adc (7 samples, 0.17%)</title><rect x="63.2252%" y="581" width="0.1721%" height="15" fill="rgb(235,172,48)" fg:x="2572" fg:w="7"/><text x="63.4752%" y="591.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (4 samples, 0.10%)</title><rect x="63.2989%" y="565" width="0.0983%" height="15" fill="rgb(249,201,17)" fg:x="2575" fg:w="4"/><text x="63.5489%" y="575.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced130::reduce (8 samples, 0.20%)</title><rect x="63.2252%" y="597" width="0.1967%" height="15" fill="rgb(219,208,6)" fg:x="2572" fg:w="8"/><text x="63.4752%" y="607.50"></text></g><g><title>poly1305::backend::avx2::helpers::red (1 samples, 0.02%)</title><rect x="63.3972%" y="581" width="0.0246%" height="15" fill="rgb(248,31,23)" fg:x="2579" fg:w="1"/><text x="63.6472%" y="591.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.02%)</title><rect x="63.3972%" y="565" width="0.0246%" height="15" fill="rgb(245,15,42)" fg:x="2579" fg:w="1"/><text x="63.6472%" y="575.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.02%)</title><rect x="63.3972%" y="549" width="0.0246%" height="15" fill="rgb(222,217,39)" fg:x="2579" fg:w="1"/><text x="63.6472%" y="559.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.02%)</title><rect x="63.3972%" y="533" width="0.0246%" height="15" fill="rgb(210,219,27)" fg:x="2579" fg:w="1"/><text x="63.6472%" y="543.50"></text></g><g><title>poly1305::backend::avx2::State::finalize (53 samples, 1.30%)</title><rect x="62.1436%" y="645" width="1.3029%" height="15" fill="rgb(252,166,36)" fg:x="2528" fg:w="53"/><text x="62.3936%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (29 samples, 0.71%)</title><rect x="62.7335%" y="629" width="0.7129%" height="15" fill="rgb(245,132,34)" fg:x="2552" fg:w="29"/><text x="62.9835%" y="639.50"></text></g><g><title>poly1305::backend::avx2::State::finalize::{{closure}} (23 samples, 0.57%)</title><rect x="62.8810%" y="613" width="0.5654%" height="15" fill="rgb(236,54,3)" fg:x="2558" fg:w="23"/><text x="63.1310%" y="623.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::sum (1 samples, 0.02%)</title><rect x="63.4218%" y="597" width="0.0246%" height="15" fill="rgb(241,173,43)" fg:x="2580" fg:w="1"/><text x="63.6718%" y="607.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (1 samples, 0.02%)</title><rect x="63.4218%" y="581" width="0.0246%" height="15" fill="rgb(215,190,9)" fg:x="2580" fg:w="1"/><text x="63.6718%" y="591.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="63.4218%" y="565" width="0.0246%" height="15" fill="rgb(242,101,16)" fg:x="2580" fg:w="1"/><text x="63.6718%" y="575.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (1 samples, 0.02%)</title><rect x="63.4710%" y="629" width="0.0246%" height="15" fill="rgb(223,190,21)" fg:x="2582" fg:w="1"/><text x="63.7210%" y="639.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.02%)</title><rect x="63.4956%" y="629" width="0.0246%" height="15" fill="rgb(215,228,25)" fg:x="2583" fg:w="1"/><text x="63.7456%" y="639.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (2 samples, 0.05%)</title><rect x="63.5202%" y="629" width="0.0492%" height="15" fill="rgb(225,36,22)" fg:x="2584" fg:w="2"/><text x="63.7702%" y="639.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (2 samples, 0.05%)</title><rect x="63.5202%" y="613" width="0.0492%" height="15" fill="rgb(251,106,46)" fg:x="2584" fg:w="2"/><text x="63.7702%" y="623.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (2 samples, 0.05%)</title><rect x="63.5202%" y="597" width="0.0492%" height="15" fill="rgb(208,90,1)" fg:x="2584" fg:w="2"/><text x="63.7702%" y="607.50"></text></g><g><title>core::core_arch::simd::i8x32::new (1 samples, 0.02%)</title><rect x="63.5447%" y="581" width="0.0246%" height="15" fill="rgb(243,10,4)" fg:x="2585" fg:w="1"/><text x="63.7947%" y="591.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.02%)</title><rect x="63.5693%" y="581" width="0.0246%" height="15" fill="rgb(212,137,27)" fg:x="2586" fg:w="1"/><text x="63.8193%" y="591.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.02%)</title><rect x="63.5693%" y="565" width="0.0246%" height="15" fill="rgb(231,220,49)" fg:x="2586" fg:w="1"/><text x="63.8193%" y="575.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.05%)</title><rect x="63.5693%" y="613" width="0.0492%" height="15" fill="rgb(237,96,20)" fg:x="2586" fg:w="2"/><text x="63.8193%" y="623.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier as core::convert::From&lt;poly1305::backend::avx2::helpers::Aligned130&gt;&gt;::from (2 samples, 0.05%)</title><rect x="63.5693%" y="597" width="0.0492%" height="15" fill="rgb(239,229,30)" fg:x="2586" fg:w="2"/><text x="63.8193%" y="607.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (1 samples, 0.02%)</title><rect x="63.5939%" y="581" width="0.0246%" height="15" fill="rgb(219,65,33)" fg:x="2587" fg:w="1"/><text x="63.8439%" y="591.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.02%)</title><rect x="63.5939%" y="565" width="0.0246%" height="15" fill="rgb(243,134,7)" fg:x="2587" fg:w="1"/><text x="63.8439%" y="575.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier as core::ops::arith::Mul&gt;::mul (2 samples, 0.05%)</title><rect x="63.6185%" y="581" width="0.0492%" height="15" fill="rgb(216,177,54)" fg:x="2588" fg:w="2"/><text x="63.8685%" y="591.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (2 samples, 0.05%)</title><rect x="63.6185%" y="565" width="0.0492%" height="15" fill="rgb(211,160,20)" fg:x="2588" fg:w="2"/><text x="63.8685%" y="575.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.02%)</title><rect x="63.6676%" y="581" width="0.0246%" height="15" fill="rgb(239,85,39)" fg:x="2590" fg:w="1"/><text x="63.9176%" y="591.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.02%)</title><rect x="63.6676%" y="565" width="0.0246%" height="15" fill="rgb(232,125,22)" fg:x="2590" fg:w="1"/><text x="63.9176%" y="575.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.02%)</title><rect x="63.6676%" y="549" width="0.0246%" height="15" fill="rgb(244,57,34)" fg:x="2590" fg:w="1"/><text x="63.9176%" y="559.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.02%)</title><rect x="63.6676%" y="533" width="0.0246%" height="15" fill="rgb(214,203,32)" fg:x="2590" fg:w="1"/><text x="63.9176%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (2 samples, 0.05%)</title><rect x="63.6922%" y="581" width="0.0492%" height="15" fill="rgb(207,58,43)" fg:x="2591" fg:w="2"/><text x="63.9422%" y="591.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.02%)</title><rect x="63.7168%" y="565" width="0.0246%" height="15" fill="rgb(215,193,15)" fg:x="2592" fg:w="1"/><text x="63.9668%" y="575.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.02%)</title><rect x="63.7414%" y="565" width="0.0246%" height="15" fill="rgb(232,15,44)" fg:x="2593" fg:w="1"/><text x="63.9914%" y="575.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.02%)</title><rect x="63.7660%" y="565" width="0.0246%" height="15" fill="rgb(212,3,48)" fg:x="2594" fg:w="1"/><text x="64.0160%" y="575.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.02%)</title><rect x="63.7660%" y="549" width="0.0246%" height="15" fill="rgb(218,128,7)" fg:x="2594" fg:w="1"/><text x="64.0160%" y="559.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.02%)</title><rect x="63.7660%" y="533" width="0.0246%" height="15" fill="rgb(226,216,39)" fg:x="2594" fg:w="1"/><text x="64.0160%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (3 samples, 0.07%)</title><rect x="63.7414%" y="581" width="0.0737%" height="15" fill="rgb(243,47,51)" fg:x="2593" fg:w="3"/><text x="63.9914%" y="591.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.02%)</title><rect x="63.7906%" y="565" width="0.0246%" height="15" fill="rgb(241,183,40)" fg:x="2595" fg:w="1"/><text x="64.0406%" y="575.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (2 samples, 0.05%)</title><rect x="63.8151%" y="581" width="0.0492%" height="15" fill="rgb(231,217,32)" fg:x="2596" fg:w="2"/><text x="64.0651%" y="591.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.02%)</title><rect x="63.8397%" y="565" width="0.0246%" height="15" fill="rgb(229,61,38)" fg:x="2597" fg:w="1"/><text x="64.0897%" y="575.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (1 samples, 0.02%)</title><rect x="63.8643%" y="581" width="0.0246%" height="15" fill="rgb(225,210,5)" fg:x="2598" fg:w="1"/><text x="64.1143%" y="591.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.02%)</title><rect x="63.8889%" y="581" width="0.0246%" height="15" fill="rgb(231,79,45)" fg:x="2599" fg:w="1"/><text x="64.1389%" y="591.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi64x (1 samples, 0.02%)</title><rect x="63.8889%" y="565" width="0.0246%" height="15" fill="rgb(224,100,7)" fg:x="2599" fg:w="1"/><text x="64.1389%" y="575.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.02%)</title><rect x="63.9135%" y="581" width="0.0246%" height="15" fill="rgb(241,198,18)" fg:x="2600" fg:w="1"/><text x="64.1635%" y="591.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.02%)</title><rect x="63.9135%" y="565" width="0.0246%" height="15" fill="rgb(252,97,53)" fg:x="2600" fg:w="1"/><text x="64.1635%" y="575.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.02%)</title><rect x="63.9135%" y="549" width="0.0246%" height="15" fill="rgb(220,88,7)" fg:x="2600" fg:w="1"/><text x="64.1635%" y="559.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.02%)</title><rect x="63.9381%" y="581" width="0.0246%" height="15" fill="rgb(213,176,14)" fg:x="2601" fg:w="1"/><text x="64.1881%" y="591.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.05%)</title><rect x="63.9626%" y="581" width="0.0492%" height="15" fill="rgb(246,73,7)" fg:x="2602" fg:w="2"/><text x="64.2126%" y="591.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.02%)</title><rect x="64.0118%" y="581" width="0.0246%" height="15" fill="rgb(245,64,36)" fg:x="2604" fg:w="1"/><text x="64.2618%" y="591.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (2 samples, 0.05%)</title><rect x="64.0364%" y="581" width="0.0492%" height="15" fill="rgb(245,80,10)" fg:x="2605" fg:w="2"/><text x="64.2864%" y="591.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier as core::ops::arith::Mul&gt;::mul (20 samples, 0.49%)</title><rect x="63.6185%" y="613" width="0.4916%" height="15" fill="rgb(232,107,50)" fg:x="2588" fg:w="20"/><text x="63.8685%" y="623.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (20 samples, 0.49%)</title><rect x="63.6185%" y="597" width="0.4916%" height="15" fill="rgb(253,3,0)" fg:x="2588" fg:w="20"/><text x="63.8685%" y="607.50"></text></g><g><title>poly1305::backend::avx2::helpers::SpacedMultiplier4x130::new (1 samples, 0.02%)</title><rect x="64.0855%" y="581" width="0.0246%" height="15" fill="rgb(212,99,53)" fg:x="2607" fg:w="1"/><text x="64.3355%" y="591.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.02%)</title><rect x="64.1101%" y="613" width="0.0246%" height="15" fill="rgb(249,111,54)" fg:x="2608" fg:w="1"/><text x="64.3601%" y="623.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_blend_epi32 (1 samples, 0.02%)</title><rect x="64.1347%" y="613" width="0.0246%" height="15" fill="rgb(249,55,30)" fg:x="2609" fg:w="1"/><text x="64.3847%" y="623.50"></text></g><g><title>poly1305::backend::avx2::helpers::SpacedMultiplier4x130::new (1 samples, 0.02%)</title><rect x="64.1347%" y="597" width="0.0246%" height="15" fill="rgb(237,47,42)" fg:x="2609" fg:w="1"/><text x="64.3847%" y="607.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced130::reduce (1 samples, 0.02%)</title><rect x="64.1347%" y="581" width="0.0246%" height="15" fill="rgb(211,20,18)" fg:x="2609" fg:w="1"/><text x="64.3847%" y="591.50"></text></g><g><title>poly1305::backend::avx2::helpers::adc (1 samples, 0.02%)</title><rect x="64.1347%" y="565" width="0.0246%" height="15" fill="rgb(231,203,46)" fg:x="2609" fg:w="1"/><text x="64.3847%" y="575.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_castsi256_si128 (1 samples, 0.02%)</title><rect x="64.1593%" y="613" width="0.0246%" height="15" fill="rgb(237,142,3)" fg:x="2610" fg:w="1"/><text x="64.4093%" y="623.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (2 samples, 0.05%)</title><rect x="64.1839%" y="613" width="0.0492%" height="15" fill="rgb(241,107,1)" fg:x="2611" fg:w="2"/><text x="64.4339%" y="623.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (2 samples, 0.05%)</title><rect x="64.1839%" y="597" width="0.0492%" height="15" fill="rgb(229,83,13)" fg:x="2611" fg:w="2"/><text x="64.4339%" y="607.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (2 samples, 0.05%)</title><rect x="64.1839%" y="581" width="0.0492%" height="15" fill="rgb(241,91,40)" fg:x="2611" fg:w="2"/><text x="64.4339%" y="591.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::is_empty (1 samples, 0.02%)</title><rect x="64.2330%" y="613" width="0.0246%" height="15" fill="rgb(225,3,45)" fg:x="2613" fg:w="1"/><text x="64.4830%" y="623.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier as core::ops::arith::Mul&gt;::mul (1 samples, 0.02%)</title><rect x="64.2576%" y="581" width="0.0246%" height="15" fill="rgb(244,223,14)" fg:x="2614" fg:w="1"/><text x="64.5076%" y="591.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (1 samples, 0.02%)</title><rect x="64.2576%" y="565" width="0.0246%" height="15" fill="rgb(224,124,37)" fg:x="2614" fg:w="1"/><text x="64.5076%" y="575.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.02%)</title><rect x="64.2822%" y="581" width="0.0246%" height="15" fill="rgb(251,171,30)" fg:x="2615" fg:w="1"/><text x="64.5322%" y="591.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (1 samples, 0.02%)</title><rect x="64.2822%" y="565" width="0.0246%" height="15" fill="rgb(236,46,54)" fg:x="2615" fg:w="1"/><text x="64.5322%" y="575.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.05%)</title><rect x="64.3068%" y="565" width="0.0492%" height="15" fill="rgb(245,213,5)" fg:x="2616" fg:w="2"/><text x="64.5568%" y="575.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (4 samples, 0.10%)</title><rect x="64.3068%" y="581" width="0.0983%" height="15" fill="rgb(230,144,27)" fg:x="2616" fg:w="4"/><text x="64.5568%" y="591.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (2 samples, 0.05%)</title><rect x="64.3559%" y="565" width="0.0492%" height="15" fill="rgb(220,86,6)" fg:x="2618" fg:w="2"/><text x="64.6059%" y="575.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (1 samples, 0.02%)</title><rect x="64.4051%" y="581" width="0.0246%" height="15" fill="rgb(240,20,13)" fg:x="2620" fg:w="1"/><text x="64.6551%" y="591.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (3 samples, 0.07%)</title><rect x="64.4297%" y="581" width="0.0737%" height="15" fill="rgb(217,89,34)" fg:x="2621" fg:w="3"/><text x="64.6797%" y="591.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (3 samples, 0.07%)</title><rect x="64.4297%" y="565" width="0.0737%" height="15" fill="rgb(229,13,5)" fg:x="2621" fg:w="3"/><text x="64.6797%" y="575.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (3 samples, 0.07%)</title><rect x="64.4297%" y="549" width="0.0737%" height="15" fill="rgb(244,67,35)" fg:x="2621" fg:w="3"/><text x="64.6797%" y="559.50"></text></g><g><title>core::core_arch::simd::i8x32::new (1 samples, 0.02%)</title><rect x="64.4789%" y="533" width="0.0246%" height="15" fill="rgb(221,40,2)" fg:x="2623" fg:w="1"/><text x="64.7289%" y="543.50"></text></g><g><title>poly1305::backend::avx2::helpers::adc (11 samples, 0.27%)</title><rect x="64.2576%" y="597" width="0.2704%" height="15" fill="rgb(237,157,21)" fg:x="2614" fg:w="11"/><text x="64.5076%" y="607.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="64.5034%" y="581" width="0.0246%" height="15" fill="rgb(222,94,11)" fg:x="2624" fg:w="1"/><text x="64.7534%" y="591.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.02%)</title><rect x="64.5280%" y="581" width="0.0246%" height="15" fill="rgb(249,113,6)" fg:x="2625" fg:w="1"/><text x="64.7780%" y="591.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.02%)</title><rect x="64.5280%" y="565" width="0.0246%" height="15" fill="rgb(238,137,36)" fg:x="2625" fg:w="1"/><text x="64.7780%" y="575.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.02%)</title><rect x="64.5280%" y="549" width="0.0246%" height="15" fill="rgb(210,102,26)" fg:x="2625" fg:w="1"/><text x="64.7780%" y="559.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.02%)</title><rect x="64.5280%" y="533" width="0.0246%" height="15" fill="rgb(218,30,30)" fg:x="2625" fg:w="1"/><text x="64.7780%" y="543.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (1 samples, 0.02%)</title><rect x="64.5526%" y="581" width="0.0246%" height="15" fill="rgb(214,67,26)" fg:x="2626" fg:w="1"/><text x="64.8026%" y="591.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (47 samples, 1.16%)</title><rect x="63.4464%" y="645" width="1.1554%" height="15" fill="rgb(251,9,53)" fg:x="2581" fg:w="47"/><text x="63.6964%" y="655.50"></text></g><g><title>poly1305::backend::avx2::helpers::SpacedMultiplier4x130::new (42 samples, 1.03%)</title><rect x="63.5693%" y="629" width="1.0324%" height="15" fill="rgb(228,204,25)" fg:x="2586" fg:w="42"/><text x="63.8193%" y="639.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced130::reduce (14 samples, 0.34%)</title><rect x="64.2576%" y="613" width="0.3441%" height="15" fill="rgb(207,153,8)" fg:x="2614" fg:w="14"/><text x="64.5076%" y="623.50"></text></g><g><title>poly1305::backend::avx2::helpers::red (3 samples, 0.07%)</title><rect x="64.5280%" y="597" width="0.0737%" height="15" fill="rgb(242,9,16)" fg:x="2625" fg:w="3"/><text x="64.7780%" y="607.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.02%)</title><rect x="64.5772%" y="581" width="0.0246%" height="15" fill="rgb(217,211,10)" fg:x="2627" fg:w="1"/><text x="64.8272%" y="591.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (1 samples, 0.02%)</title><rect x="64.6018%" y="645" width="0.0246%" height="15" fill="rgb(219,228,52)" fg:x="2628" fg:w="1"/><text x="64.8518%" y="655.50"></text></g><g><title>rustix::backend::arch::asm::syscall4_readonly (1 samples, 0.02%)</title><rect x="64.6264%" y="645" width="0.0246%" height="15" fill="rgb(231,92,29)" fg:x="2629" fg:w="1"/><text x="64.8764%" y="655.50"></text></g><g><title>rustix::backend::conv::c_uint (1 samples, 0.02%)</title><rect x="64.6509%" y="645" width="0.0246%" height="15" fill="rgb(232,8,23)" fg:x="2630" fg:w="1"/><text x="64.9009%" y="655.50"></text></g><g><title>rustix::backend::reg::RetReg&lt;Num&gt;::decode_usize (2 samples, 0.05%)</title><rect x="64.6755%" y="645" width="0.0492%" height="15" fill="rgb(216,211,34)" fg:x="2631" fg:w="2"/><text x="64.9255%" y="655.50"></text></g><g><title>std::sys::unix::net::Socket::recv_from_with_flags (1 samples, 0.02%)</title><rect x="64.7247%" y="645" width="0.0246%" height="15" fill="rgb(236,151,0)" fg:x="2633" fg:w="1"/><text x="64.9747%" y="655.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="64.8476%" y="629" width="0.0246%" height="15" fill="rgb(209,168,3)" fg:x="2638" fg:w="1"/><text x="65.0976%" y="639.50"></text></g><g><title>&lt;heapless::vec::Vec&lt;T,_&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.02%)</title><rect x="64.8968%" y="597" width="0.0246%" height="15" fill="rgb(208,129,28)" fg:x="2640" fg:w="1"/><text x="65.1468%" y="607.50"></text></g><g><title>rustix::backend::event::epoll::_::InternalBitFlags::intersects (1 samples, 0.02%)</title><rect x="64.8968%" y="581" width="0.0246%" height="15" fill="rgb(229,78,22)" fg:x="2640" fg:w="1"/><text x="65.1468%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.02%)</title><rect x="64.9213%" y="549" width="0.0246%" height="15" fill="rgb(228,187,13)" fg:x="2641" fg:w="1"/><text x="65.1713%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.02%)</title><rect x="64.9213%" y="533" width="0.0246%" height="15" fill="rgb(240,119,24)" fg:x="2641" fg:w="1"/><text x="65.1713%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.02%)</title><rect x="64.9213%" y="517" width="0.0246%" height="15" fill="rgb(209,194,42)" fg:x="2641" fg:w="1"/><text x="65.1713%" y="527.50"></text></g><g><title>&lt;rustix::backend::event::epoll::Iter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="64.9459%" y="453" width="0.0246%" height="15" fill="rgb(247,200,46)" fg:x="2642" fg:w="1"/><text x="65.1959%" y="463.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (3 samples, 0.07%)</title><rect x="64.9213%" y="597" width="0.0737%" height="15" fill="rgb(218,76,16)" fg:x="2641" fg:w="3"/><text x="65.1713%" y="607.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (3 samples, 0.07%)</title><rect x="64.9213%" y="581" width="0.0737%" height="15" fill="rgb(225,21,48)" fg:x="2641" fg:w="3"/><text x="65.1713%" y="591.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (3 samples, 0.07%)</title><rect x="64.9213%" y="565" width="0.0737%" height="15" fill="rgb(239,223,50)" fg:x="2641" fg:w="3"/><text x="65.1713%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.05%)</title><rect x="64.9459%" y="549" width="0.0492%" height="15" fill="rgb(244,45,21)" fg:x="2642" fg:w="2"/><text x="65.1959%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.05%)</title><rect x="64.9459%" y="533" width="0.0492%" height="15" fill="rgb(232,33,43)" fg:x="2642" fg:w="2"/><text x="65.1959%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.05%)</title><rect x="64.9459%" y="517" width="0.0492%" height="15" fill="rgb(209,8,3)" fg:x="2642" fg:w="2"/><text x="65.1959%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.05%)</title><rect x="64.9459%" y="501" width="0.0492%" height="15" fill="rgb(214,25,53)" fg:x="2642" fg:w="2"/><text x="65.1959%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.05%)</title><rect x="64.9459%" y="485" width="0.0492%" height="15" fill="rgb(254,186,54)" fg:x="2642" fg:w="2"/><text x="65.1959%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.05%)</title><rect x="64.9459%" y="469" width="0.0492%" height="15" fill="rgb(208,174,49)" fg:x="2642" fg:w="2"/><text x="65.1959%" y="479.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.02%)</title><rect x="64.9705%" y="453" width="0.0246%" height="15" fill="rgb(233,191,51)" fg:x="2643" fg:w="1"/><text x="65.2205%" y="463.50"></text></g><g><title>polling::epoll::Events::iter::{{closure}} (1 samples, 0.02%)</title><rect x="64.9705%" y="437" width="0.0246%" height="15" fill="rgb(222,134,10)" fg:x="2643" fg:w="1"/><text x="65.2205%" y="447.50"></text></g><g><title>polling::epoll::write_flags (1 samples, 0.02%)</title><rect x="64.9705%" y="421" width="0.0246%" height="15" fill="rgb(230,226,20)" fg:x="2643" fg:w="1"/><text x="65.2205%" y="431.50"></text></g><g><title>rustix::backend::event::epoll::_::&lt;impl core::ops::bit::BitOr for rustix::backend::event::epoll::EventFlags&gt;::bitor (1 samples, 0.02%)</title><rect x="64.9705%" y="405" width="0.0246%" height="15" fill="rgb(251,111,25)" fg:x="2643" fg:w="1"/><text x="65.2205%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;(),std::io::error::Error&gt;&gt; (1 samples, 0.02%)</title><rect x="64.9705%" y="389" width="0.0246%" height="15" fill="rgb(224,40,46)" fg:x="2643" fg:w="1"/><text x="65.2205%" y="399.50"></text></g><g><title>&lt;tftp::socket::UdpUnboundSocket as tftp::socket::Socket&gt;::modify_interest (1 samples, 0.02%)</title><rect x="64.9951%" y="597" width="0.0246%" height="15" fill="rgb(236,108,47)" fg:x="2644" fg:w="1"/><text x="65.2451%" y="607.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::remove (1 samples, 0.02%)</title><rect x="64.9951%" y="581" width="0.0246%" height="15" fill="rgb(234,93,0)" fg:x="2644" fg:w="1"/><text x="65.2451%" y="591.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::remove (1 samples, 0.02%)</title><rect x="64.9951%" y="565" width="0.0246%" height="15" fill="rgb(224,213,32)" fg:x="2644" fg:w="1"/><text x="65.2451%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (1 samples, 0.02%)</title><rect x="64.9951%" y="549" width="0.0246%" height="15" fill="rgb(251,11,48)" fg:x="2644" fg:w="1"/><text x="65.2451%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (1 samples, 0.02%)</title><rect x="64.9951%" y="533" width="0.0246%" height="15" fill="rgb(236,173,5)" fg:x="2644" fg:w="1"/><text x="65.2451%" y="543.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="64.9951%" y="517" width="0.0246%" height="15" fill="rgb(230,95,12)" fg:x="2644" fg:w="1"/><text x="65.2451%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="64.9951%" y="501" width="0.0246%" height="15" fill="rgb(232,209,1)" fg:x="2644" fg:w="1"/><text x="65.2451%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.02%)</title><rect x="64.9951%" y="485" width="0.0246%" height="15" fill="rgb(232,6,1)" fg:x="2644" fg:w="1"/><text x="65.2451%" y="495.50"></text></g><g><title>polling::Events::clear (1 samples, 0.02%)</title><rect x="65.0197%" y="597" width="0.0246%" height="15" fill="rgb(210,224,50)" fg:x="2645" fg:w="1"/><text x="65.2697%" y="607.50"></text></g><g><title>polling::epoll::Events::clear (1 samples, 0.02%)</title><rect x="65.0197%" y="581" width="0.0246%" height="15" fill="rgb(228,127,35)" fg:x="2645" fg:w="1"/><text x="65.2697%" y="591.50"></text></g><g><title>rustix::backend::event::epoll::EventVec::clear (1 samples, 0.02%)</title><rect x="65.0197%" y="565" width="0.0246%" height="15" fill="rgb(245,102,45)" fg:x="2645" fg:w="1"/><text x="65.2697%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.02%)</title><rect x="65.0442%" y="581" width="0.0246%" height="15" fill="rgb(214,1,49)" fg:x="2646" fg:w="1"/><text x="65.2942%" y="591.50"></text></g><g><title>polling::Poller::wait::{{closure}} (1 samples, 0.02%)</title><rect x="65.0442%" y="565" width="0.0246%" height="15" fill="rgb(226,163,40)" fg:x="2646" fg:w="1"/><text x="65.2942%" y="575.50"></text></g><g><title>std::sys::unix::time::Timespec::now (1 samples, 0.02%)</title><rect x="65.0442%" y="549" width="0.0246%" height="15" fill="rgb(239,212,28)" fg:x="2646" fg:w="1"/><text x="65.2942%" y="559.50"></text></g><g><title>__GI___clock_gettime (1 samples, 0.02%)</title><rect x="65.0442%" y="533" width="0.0246%" height="15" fill="rgb(220,20,13)" fg:x="2646" fg:w="1"/><text x="65.2942%" y="543.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="65.0442%" y="517" width="0.0246%" height="15" fill="rgb(210,164,35)" fg:x="2646" fg:w="1"/><text x="65.2942%" y="527.50"></text></g><g><title>[[vdso]] (1 samples, 0.02%)</title><rect x="65.0442%" y="501" width="0.0246%" height="15" fill="rgb(248,109,41)" fg:x="2646" fg:w="1"/><text x="65.2942%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;()&gt;&gt; (1 samples, 0.02%)</title><rect x="65.0688%" y="581" width="0.0246%" height="15" fill="rgb(238,23,50)" fg:x="2647" fg:w="1"/><text x="65.3188%" y="591.50"></text></g><g><title>polling::Events::len (1 samples, 0.02%)</title><rect x="65.0934%" y="581" width="0.0246%" height="15" fill="rgb(211,48,49)" fg:x="2648" fg:w="1"/><text x="65.3434%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (1 samples, 0.02%)</title><rect x="65.0934%" y="565" width="0.0246%" height="15" fill="rgb(223,36,21)" fg:x="2648" fg:w="1"/><text x="65.3434%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.02%)</title><rect x="65.0934%" y="549" width="0.0246%" height="15" fill="rgb(207,123,46)" fg:x="2648" fg:w="1"/><text x="65.3434%" y="559.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.02%)</title><rect x="65.0934%" y="533" width="0.0246%" height="15" fill="rgb(240,218,32)" fg:x="2648" fg:w="1"/><text x="65.3434%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="65.0934%" y="517" width="0.0246%" height="15" fill="rgb(252,5,43)" fg:x="2648" fg:w="1"/><text x="65.3434%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="65.0934%" y="501" width="0.0246%" height="15" fill="rgb(252,84,19)" fg:x="2648" fg:w="1"/><text x="65.3434%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.02%)</title><rect x="65.0934%" y="485" width="0.0246%" height="15" fill="rgb(243,152,39)" fg:x="2648" fg:w="1"/><text x="65.3434%" y="495.50"></text></g><g><title>&lt;rustix::backend::event::epoll::Iter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="65.0934%" y="469" width="0.0246%" height="15" fill="rgb(234,160,15)" fg:x="2648" fg:w="1"/><text x="65.3434%" y="479.50"></text></g><g><title>__fdget_pos (1 samples, 0.02%)</title><rect x="65.1426%" y="453" width="0.0246%" height="15" fill="rgb(237,34,20)" fg:x="2650" fg:w="1"/><text x="65.3926%" y="463.50"></text></g><g><title>__fget_light (1 samples, 0.02%)</title><rect x="65.1426%" y="437" width="0.0246%" height="15" fill="rgb(229,97,13)" fg:x="2650" fg:w="1"/><text x="65.3926%" y="447.50"></text></g><g><title>eventfd_read (2 samples, 0.05%)</title><rect x="65.1672%" y="437" width="0.0492%" height="15" fill="rgb(234,71,50)" fg:x="2651" fg:w="2"/><text x="65.4172%" y="447.50"></text></g><g><title>_raw_spin_lock_irq (1 samples, 0.02%)</title><rect x="65.1917%" y="421" width="0.0246%" height="15" fill="rgb(253,155,4)" fg:x="2652" fg:w="1"/><text x="65.4417%" y="431.50"></text></g><g><title>rustix::backend::arch::asm::syscall3 (4 samples, 0.10%)</title><rect x="65.1426%" y="517" width="0.0983%" height="15" fill="rgb(222,185,37)" fg:x="2650" fg:w="4"/><text x="65.3926%" y="527.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4 samples, 0.10%)</title><rect x="65.1426%" y="501" width="0.0983%" height="15" fill="rgb(251,177,13)" fg:x="2650" fg:w="4"/><text x="65.3926%" y="511.50"></text></g><g><title>do_syscall_64 (4 samples, 0.10%)</title><rect x="65.1426%" y="485" width="0.0983%" height="15" fill="rgb(250,179,40)" fg:x="2650" fg:w="4"/><text x="65.3926%" y="495.50"></text></g><g><title>ksys_read (4 samples, 0.10%)</title><rect x="65.1426%" y="469" width="0.0983%" height="15" fill="rgb(242,44,2)" fg:x="2650" fg:w="4"/><text x="65.3926%" y="479.50"></text></g><g><title>vfs_read (3 samples, 0.07%)</title><rect x="65.1672%" y="453" width="0.0737%" height="15" fill="rgb(216,177,13)" fg:x="2651" fg:w="3"/><text x="65.4172%" y="463.50"></text></g><g><title>security_file_permission (1 samples, 0.02%)</title><rect x="65.2163%" y="437" width="0.0246%" height="15" fill="rgb(216,106,43)" fg:x="2653" fg:w="1"/><text x="65.4663%" y="447.50"></text></g><g><title>apparmor_file_permission (1 samples, 0.02%)</title><rect x="65.2163%" y="421" width="0.0246%" height="15" fill="rgb(216,183,2)" fg:x="2653" fg:w="1"/><text x="65.4663%" y="431.50"></text></g><g><title>polling::epoll::Notifier::clear (5 samples, 0.12%)</title><rect x="65.1426%" y="565" width="0.1229%" height="15" fill="rgb(249,75,3)" fg:x="2650" fg:w="5"/><text x="65.3926%" y="575.50"></text></g><g><title>rustix::io::read_write::read (5 samples, 0.12%)</title><rect x="65.1426%" y="549" width="0.1229%" height="15" fill="rgb(219,67,39)" fg:x="2650" fg:w="5"/><text x="65.3926%" y="559.50"></text></g><g><title>rustix::backend::io::syscalls::read (5 samples, 0.12%)</title><rect x="65.1426%" y="533" width="0.1229%" height="15" fill="rgb(253,228,2)" fg:x="2650" fg:w="5"/><text x="65.3926%" y="543.50"></text></g><g><title>rustix::backend::conv::ret_usize (1 samples, 0.02%)</title><rect x="65.2409%" y="517" width="0.0246%" height="15" fill="rgb(235,138,27)" fg:x="2654" fg:w="1"/><text x="65.4909%" y="527.50"></text></g><g><title>rustix::backend::io::errno::try_decode_usize (1 samples, 0.02%)</title><rect x="65.2409%" y="501" width="0.0246%" height="15" fill="rgb(236,97,51)" fg:x="2654" fg:w="1"/><text x="65.4909%" y="511.50"></text></g><g><title>polling::epoll::Poller::modify (1 samples, 0.02%)</title><rect x="65.2655%" y="565" width="0.0246%" height="15" fill="rgb(240,80,30)" fg:x="2655" fg:w="1"/><text x="65.5155%" y="575.50"></text></g><g><title>ep_done_scan (1 samples, 0.02%)</title><rect x="65.3147%" y="453" width="0.0246%" height="15" fill="rgb(230,178,19)" fg:x="2657" fg:w="1"/><text x="65.5647%" y="463.50"></text></g><g><title>_raw_write_lock_irq (1 samples, 0.02%)</title><rect x="65.3147%" y="437" width="0.0246%" height="15" fill="rgb(210,190,27)" fg:x="2657" fg:w="1"/><text x="65.5647%" y="447.50"></text></g><g><title>ctx_sched_out (1 samples, 0.02%)</title><rect x="65.3392%" y="389" width="0.0246%" height="15" fill="rgb(222,107,31)" fg:x="2658" fg:w="1"/><text x="65.5892%" y="399.50"></text></g><g><title>__pmu_ctx_sched_out (1 samples, 0.02%)</title><rect x="65.3392%" y="373" width="0.0246%" height="15" fill="rgb(216,127,34)" fg:x="2658" fg:w="1"/><text x="65.5892%" y="383.50"></text></g><g><title>group_sched_out (1 samples, 0.02%)</title><rect x="65.3392%" y="357" width="0.0246%" height="15" fill="rgb(234,116,52)" fg:x="2658" fg:w="1"/><text x="65.5892%" y="367.50"></text></g><g><title>event_sched_out (1 samples, 0.02%)</title><rect x="65.3392%" y="341" width="0.0246%" height="15" fill="rgb(222,124,15)" fg:x="2658" fg:w="1"/><text x="65.5892%" y="351.50"></text></g><g><title>__perf_event_task_sched_out (2 samples, 0.05%)</title><rect x="65.3392%" y="405" width="0.0492%" height="15" fill="rgb(231,179,28)" fg:x="2658" fg:w="2"/><text x="65.5892%" y="415.50"></text></g><g><title>task_ctx_sched_out (1 samples, 0.02%)</title><rect x="65.3638%" y="389" width="0.0246%" height="15" fill="rgb(226,93,45)" fg:x="2659" fg:w="1"/><text x="65.6138%" y="399.50"></text></g><g><title>check_preemption_disabled (1 samples, 0.02%)</title><rect x="65.3638%" y="373" width="0.0246%" height="15" fill="rgb(215,8,51)" fg:x="2659" fg:w="1"/><text x="65.6138%" y="383.50"></text></g><g><title>dequeue_task_fair (1 samples, 0.02%)</title><rect x="65.3884%" y="405" width="0.0246%" height="15" fill="rgb(223,106,5)" fg:x="2660" fg:w="1"/><text x="65.6384%" y="415.50"></text></g><g><title>dequeue_entity (1 samples, 0.02%)</title><rect x="65.3884%" y="389" width="0.0246%" height="15" fill="rgb(250,191,5)" fg:x="2660" fg:w="1"/><text x="65.6384%" y="399.50"></text></g><g><title>update_curr (1 samples, 0.02%)</title><rect x="65.3884%" y="373" width="0.0246%" height="15" fill="rgb(242,132,44)" fg:x="2660" fg:w="1"/><text x="65.6384%" y="383.50"></text></g><g><title>__calc_delta (1 samples, 0.02%)</title><rect x="65.3884%" y="357" width="0.0246%" height="15" fill="rgb(251,152,29)" fg:x="2660" fg:w="1"/><text x="65.6384%" y="367.50"></text></g><g><title>finish_task_switch.isra.0 (1 samples, 0.02%)</title><rect x="65.4130%" y="405" width="0.0246%" height="15" fill="rgb(218,179,5)" fg:x="2661" fg:w="1"/><text x="65.6630%" y="415.50"></text></g><g><title>pick_next_task_fair (2 samples, 0.05%)</title><rect x="65.4376%" y="405" width="0.0492%" height="15" fill="rgb(227,67,19)" fg:x="2662" fg:w="2"/><text x="65.6876%" y="415.50"></text></g><g><title>newidle_balance (2 samples, 0.05%)</title><rect x="65.4376%" y="389" width="0.0492%" height="15" fill="rgb(233,119,31)" fg:x="2662" fg:w="2"/><text x="65.6876%" y="399.50"></text></g><g><title>__x64_sys_epoll_wait (10 samples, 0.25%)</title><rect x="65.2901%" y="485" width="0.2458%" height="15" fill="rgb(241,120,22)" fg:x="2656" fg:w="10"/><text x="65.5401%" y="495.50"></text></g><g><title>do_epoll_wait (10 samples, 0.25%)</title><rect x="65.2901%" y="469" width="0.2458%" height="15" fill="rgb(224,102,30)" fg:x="2656" fg:w="10"/><text x="65.5401%" y="479.50"></text></g><g><title>schedule_hrtimeout_range_clock (8 samples, 0.20%)</title><rect x="65.3392%" y="453" width="0.1967%" height="15" fill="rgb(210,164,37)" fg:x="2658" fg:w="8"/><text x="65.5892%" y="463.50"></text></g><g><title>schedule (8 samples, 0.20%)</title><rect x="65.3392%" y="437" width="0.1967%" height="15" fill="rgb(226,191,16)" fg:x="2658" fg:w="8"/><text x="65.5892%" y="447.50"></text></g><g><title>__schedule (8 samples, 0.20%)</title><rect x="65.3392%" y="421" width="0.1967%" height="15" fill="rgb(214,40,45)" fg:x="2658" fg:w="8"/><text x="65.5892%" y="431.50"></text></g><g><title>psi_task_switch (2 samples, 0.05%)</title><rect x="65.4867%" y="405" width="0.0492%" height="15" fill="rgb(244,29,26)" fg:x="2664" fg:w="2"/><text x="65.7367%" y="415.50"></text></g><g><title>psi_group_change (2 samples, 0.05%)</title><rect x="65.4867%" y="389" width="0.0492%" height="15" fill="rgb(216,16,5)" fg:x="2664" fg:w="2"/><text x="65.7367%" y="399.50"></text></g><g><title>record_times (1 samples, 0.02%)</title><rect x="65.5113%" y="373" width="0.0246%" height="15" fill="rgb(249,76,35)" fg:x="2665" fg:w="1"/><text x="65.7613%" y="383.50"></text></g><g><title>rustix::backend::event::epoll::wait (11 samples, 0.27%)</title><rect x="65.2901%" y="565" width="0.2704%" height="15" fill="rgb(207,11,44)" fg:x="2656" fg:w="11"/><text x="65.5401%" y="575.50"></text></g><g><title>rustix::backend::event::syscalls::epoll_wait (11 samples, 0.27%)</title><rect x="65.2901%" y="549" width="0.2704%" height="15" fill="rgb(228,190,49)" fg:x="2656" fg:w="11"/><text x="65.5401%" y="559.50"></text></g><g><title>rustix::backend::arch::asm::syscall4 (11 samples, 0.27%)</title><rect x="65.2901%" y="533" width="0.2704%" height="15" fill="rgb(214,173,12)" fg:x="2656" fg:w="11"/><text x="65.5401%" y="543.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (11 samples, 0.27%)</title><rect x="65.2901%" y="517" width="0.2704%" height="15" fill="rgb(218,26,35)" fg:x="2656" fg:w="11"/><text x="65.5401%" y="527.50"></text></g><g><title>do_syscall_64 (11 samples, 0.27%)</title><rect x="65.2901%" y="501" width="0.2704%" height="15" fill="rgb(220,200,19)" fg:x="2656" fg:w="11"/><text x="65.5401%" y="511.50"></text></g><g><title>syscall_exit_to_user_mode (1 samples, 0.02%)</title><rect x="65.5359%" y="485" width="0.0246%" height="15" fill="rgb(239,95,49)" fg:x="2666" fg:w="1"/><text x="65.7859%" y="495.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.02%)</title><rect x="65.5359%" y="469" width="0.0246%" height="15" fill="rgb(235,85,53)" fg:x="2666" fg:w="1"/><text x="65.7859%" y="479.50"></text></g><g><title>fpregs_restore_userregs (1 samples, 0.02%)</title><rect x="65.5359%" y="453" width="0.0246%" height="15" fill="rgb(233,133,31)" fg:x="2666" fg:w="1"/><text x="65.7859%" y="463.50"></text></g><g><title>polling::epoll::Poller::wait (19 samples, 0.47%)</title><rect x="65.1180%" y="581" width="0.4671%" height="15" fill="rgb(218,25,20)" fg:x="2649" fg:w="19"/><text x="65.3680%" y="591.50"></text></g><g><title>rustix::backend::io::errno::try_decode_void (1 samples, 0.02%)</title><rect x="65.5605%" y="565" width="0.0246%" height="15" fill="rgb(252,210,38)" fg:x="2667" fg:w="1"/><text x="65.8105%" y="575.50"></text></g><g><title>polling::Poller::wait (23 samples, 0.57%)</title><rect x="65.0442%" y="597" width="0.5654%" height="15" fill="rgb(242,134,21)" fg:x="2646" fg:w="23"/><text x="65.2942%" y="607.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (1 samples, 0.02%)</title><rect x="65.5851%" y="581" width="0.0246%" height="15" fill="rgb(213,28,48)" fg:x="2668" fg:w="1"/><text x="65.8351%" y="591.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="65.5851%" y="565" width="0.0246%" height="15" fill="rgb(250,196,2)" fg:x="2668" fg:w="1"/><text x="65.8351%" y="575.50"></text></g><g><title>std::sync::poison::Flag::guard (1 samples, 0.02%)</title><rect x="65.5851%" y="549" width="0.0246%" height="15" fill="rgb(227,5,17)" fg:x="2668" fg:w="1"/><text x="65.8351%" y="559.50"></text></g><g><title>std::thread::panicking (1 samples, 0.02%)</title><rect x="65.5851%" y="533" width="0.0246%" height="15" fill="rgb(221,226,24)" fg:x="2668" fg:w="1"/><text x="65.8351%" y="543.50"></text></g><g><title>std::panicking::panicking (1 samples, 0.02%)</title><rect x="65.5851%" y="517" width="0.0246%" height="15" fill="rgb(211,5,48)" fg:x="2668" fg:w="1"/><text x="65.8351%" y="527.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (1 samples, 0.02%)</title><rect x="65.5851%" y="501" width="0.0246%" height="15" fill="rgb(219,150,6)" fg:x="2668" fg:w="1"/><text x="65.8351%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.02%)</title><rect x="65.5851%" y="485" width="0.0246%" height="15" fill="rgb(251,46,16)" fg:x="2668" fg:w="1"/><text x="65.8351%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="65.5851%" y="469" width="0.0246%" height="15" fill="rgb(220,204,40)" fg:x="2668" fg:w="1"/><text x="65.8351%" y="479.50"></text></g><g><title>__libc_recvfrom (1 samples, 0.02%)</title><rect x="65.6096%" y="533" width="0.0246%" height="15" fill="rgb(211,85,2)" fg:x="2669" fg:w="1"/><text x="65.8596%" y="543.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="65.6096%" y="517" width="0.0246%" height="15" fill="rgb(229,17,7)" fg:x="2669" fg:w="1"/><text x="65.8596%" y="527.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="65.6096%" y="501" width="0.0246%" height="15" fill="rgb(239,72,28)" fg:x="2669" fg:w="1"/><text x="65.8596%" y="511.50"></text></g><g><title>syscall_exit_to_user_mode (1 samples, 0.02%)</title><rect x="65.6096%" y="485" width="0.0246%" height="15" fill="rgb(230,47,54)" fg:x="2669" fg:w="1"/><text x="65.8596%" y="495.50"></text></g><g><title>syscall_exit_to_user_mode_prepare (1 samples, 0.02%)</title><rect x="65.6096%" y="469" width="0.0246%" height="15" fill="rgb(214,50,8)" fg:x="2669" fg:w="1"/><text x="65.8596%" y="479.50"></text></g><g><title>&lt;tftp::socket::UdpUnboundSocket as tftp::socket::Socket&gt;::recv_from (32 samples, 0.79%)</title><rect x="64.8722%" y="613" width="0.7866%" height="15" fill="rgb(216,198,43)" fg:x="2639" fg:w="32"/><text x="65.1222%" y="623.50"></text></g><g><title>std::net::udp::UdpSocket::recv_from (2 samples, 0.05%)</title><rect x="65.6096%" y="597" width="0.0492%" height="15" fill="rgb(234,20,35)" fg:x="2669" fg:w="2"/><text x="65.8596%" y="607.50"></text></g><g><title>std::sys_common::net::UdpSocket::recv_from (2 samples, 0.05%)</title><rect x="65.6096%" y="581" width="0.0492%" height="15" fill="rgb(254,45,19)" fg:x="2669" fg:w="2"/><text x="65.8596%" y="591.50"></text></g><g><title>std::sys::unix::net::Socket::recv_from (2 samples, 0.05%)</title><rect x="65.6096%" y="565" width="0.0492%" height="15" fill="rgb(219,14,44)" fg:x="2669" fg:w="2"/><text x="65.8596%" y="575.50"></text></g><g><title>std::sys::unix::net::Socket::recv_from_with_flags (2 samples, 0.05%)</title><rect x="65.6096%" y="549" width="0.0492%" height="15" fill="rgb(217,220,26)" fg:x="2669" fg:w="2"/><text x="65.8596%" y="559.50"></text></g><g><title>rustix::backend::event::epoll::_::InternalBitFlags::bits (1 samples, 0.02%)</title><rect x="65.6342%" y="533" width="0.0246%" height="15" fill="rgb(213,158,28)" fg:x="2670" fg:w="1"/><text x="65.8842%" y="543.50"></text></g><g><title>__entry_text_start (1 samples, 0.02%)</title><rect x="65.6342%" y="517" width="0.0246%" height="15" fill="rgb(252,51,52)" fg:x="2670" fg:w="1"/><text x="65.8842%" y="527.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_sub (1 samples, 0.02%)</title><rect x="65.6834%" y="565" width="0.0246%" height="15" fill="rgb(246,89,16)" fg:x="2672" fg:w="1"/><text x="65.9334%" y="575.50"></text></g><g><title>&lt;[u8] as tftp::buffer::SliceExt&gt;::rslice_to_array (4 samples, 0.10%)</title><rect x="65.6588%" y="581" width="0.0983%" height="15" fill="rgb(216,158,49)" fg:x="2671" fg:w="4"/><text x="65.9088%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (2 samples, 0.05%)</title><rect x="65.7080%" y="565" width="0.0492%" height="15" fill="rgb(236,107,19)" fg:x="2673" fg:w="2"/><text x="65.9580%" y="575.50"></text></g><g><title>&lt;[u8] as tftp::buffer::SliceExt&gt;::rslice_to_array::{{closure}} (2 samples, 0.05%)</title><rect x="65.7080%" y="549" width="0.0492%" height="15" fill="rgb(228,185,30)" fg:x="2673" fg:w="2"/><text x="65.9580%" y="559.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (2 samples, 0.05%)</title><rect x="65.7080%" y="533" width="0.0492%" height="15" fill="rgb(246,134,8)" fg:x="2673" fg:w="2"/><text x="65.9580%" y="543.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (1 samples, 0.02%)</title><rect x="65.7325%" y="517" width="0.0246%" height="15" fill="rgb(214,143,50)" fg:x="2674" fg:w="1"/><text x="65.9825%" y="527.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (1 samples, 0.02%)</title><rect x="65.7817%" y="533" width="0.0246%" height="15" fill="rgb(228,75,8)" fg:x="2676" fg:w="1"/><text x="66.0317%" y="543.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.02%)</title><rect x="65.7817%" y="517" width="0.0246%" height="15" fill="rgb(207,175,4)" fg:x="2676" fg:w="1"/><text x="66.0317%" y="527.50"></text></g><g><title>&lt;[u8] as tftp::buffer::SliceExt&gt;::rslice_to_array::{{closure}} (1 samples, 0.02%)</title><rect x="65.8063%" y="517" width="0.0246%" height="15" fill="rgb(205,108,24)" fg:x="2677" fg:w="1"/><text x="66.0563%" y="527.50"></text></g><g><title>chacha20::xchacha::quarter_round (17 samples, 0.42%)</title><rect x="65.8309%" y="517" width="0.4179%" height="15" fill="rgb(244,120,49)" fg:x="2678" fg:w="17"/><text x="66.0809%" y="527.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="66.2242%" y="501" width="0.0246%" height="15" fill="rgb(223,47,38)" fg:x="2694" fg:w="1"/><text x="66.4742%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (1 samples, 0.02%)</title><rect x="66.2488%" y="517" width="0.0246%" height="15" fill="rgb(229,179,11)" fg:x="2695" fg:w="1"/><text x="66.4988%" y="527.50"></text></g><g><title>core::iter::adapters::zip::Zip&lt;A,B&gt;::new (1 samples, 0.02%)</title><rect x="66.2488%" y="501" width="0.0246%" height="15" fill="rgb(231,122,1)" fg:x="2695" fg:w="1"/><text x="66.4988%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (1 samples, 0.02%)</title><rect x="66.2488%" y="485" width="0.0246%" height="15" fill="rgb(245,119,9)" fg:x="2695" fg:w="1"/><text x="66.4988%" y="495.50"></text></g><g><title>core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size (1 samples, 0.02%)</title><rect x="66.2488%" y="469" width="0.0246%" height="15" fill="rgb(241,163,25)" fg:x="2695" fg:w="1"/><text x="66.4988%" y="479.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (1 samples, 0.02%)</title><rect x="66.2488%" y="453" width="0.0246%" height="15" fill="rgb(217,214,3)" fg:x="2695" fg:w="1"/><text x="66.4988%" y="463.50"></text></g><g><title>chacha20::xchacha::hchacha (20 samples, 0.49%)</title><rect x="65.8063%" y="533" width="0.4916%" height="15" fill="rgb(240,86,28)" fg:x="2677" fg:w="20"/><text x="66.0563%" y="543.50"></text></g><g><title>tftp::encrypted_packet::EncryptedPacket::decrypt (1 samples, 0.02%)</title><rect x="66.2734%" y="517" width="0.0246%" height="15" fill="rgb(215,47,9)" fg:x="2696" fg:w="1"/><text x="66.5234%" y="527.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (1 samples, 0.02%)</title><rect x="66.2979%" y="501" width="0.0246%" height="15" fill="rgb(252,25,45)" fg:x="2697" fg:w="1"/><text x="66.5479%" y="511.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as crypto_common::KeyIvInit&gt;::new (24 samples, 0.59%)</title><rect x="65.7571%" y="565" width="0.5900%" height="15" fill="rgb(251,164,9)" fg:x="2675" fg:w="24"/><text x="66.0071%" y="575.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (23 samples, 0.57%)</title><rect x="65.7817%" y="549" width="0.5654%" height="15" fill="rgb(233,194,0)" fg:x="2676" fg:w="23"/><text x="66.0317%" y="559.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (2 samples, 0.05%)</title><rect x="66.2979%" y="533" width="0.0492%" height="15" fill="rgb(249,111,24)" fg:x="2697" fg:w="2"/><text x="66.5479%" y="543.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (2 samples, 0.05%)</title><rect x="66.2979%" y="517" width="0.0492%" height="15" fill="rgb(250,223,3)" fg:x="2697" fg:w="2"/><text x="66.5479%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.02%)</title><rect x="66.3225%" y="501" width="0.0246%" height="15" fill="rgb(236,178,37)" fg:x="2698" fg:w="1"/><text x="66.5725%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="66.3225%" y="485" width="0.0246%" height="15" fill="rgb(241,158,50)" fg:x="2698" fg:w="1"/><text x="66.5725%" y="495.50"></text></g><g><title>core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size (1 samples, 0.02%)</title><rect x="66.3225%" y="469" width="0.0246%" height="15" fill="rgb(213,121,41)" fg:x="2698" fg:w="1"/><text x="66.5725%" y="479.50"></text></g><g><title>chacha20::backends::avx2::inner (1 samples, 0.02%)</title><rect x="66.3471%" y="565" width="0.0246%" height="15" fill="rgb(240,92,3)" fg:x="2699" fg:w="1"/><text x="66.5971%" y="575.50"></text></g><g><title>&lt;cipher::stream_core::WriteBlockCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (1 samples, 0.02%)</title><rect x="66.3471%" y="549" width="0.0246%" height="15" fill="rgb(205,123,3)" fg:x="2699" fg:w="1"/><text x="66.5971%" y="559.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (1 samples, 0.02%)</title><rect x="66.3471%" y="533" width="0.0246%" height="15" fill="rgb(205,97,47)" fg:x="2699" fg:w="1"/><text x="66.5971%" y="543.50"></text></g><g><title>chacha20::backends::avx2::rounds (1 samples, 0.02%)</title><rect x="66.3717%" y="565" width="0.0246%" height="15" fill="rgb(247,152,14)" fg:x="2700" fg:w="1"/><text x="66.6217%" y="575.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (1 samples, 0.02%)</title><rect x="66.3963%" y="437" width="0.0246%" height="15" fill="rgb(248,195,53)" fg:x="2701" fg:w="1"/><text x="66.6463%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (2 samples, 0.05%)</title><rect x="66.4208%" y="405" width="0.0492%" height="15" fill="rgb(226,201,16)" fg:x="2702" fg:w="2"/><text x="66.6708%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (2 samples, 0.05%)</title><rect x="66.4700%" y="405" width="0.0492%" height="15" fill="rgb(205,98,0)" fg:x="2704" fg:w="2"/><text x="66.7200%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.02%)</title><rect x="66.4946%" y="389" width="0.0246%" height="15" fill="rgb(214,191,48)" fg:x="2705" fg:w="1"/><text x="66.7446%" y="399.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (5 samples, 0.12%)</title><rect x="66.4208%" y="421" width="0.1229%" height="15" fill="rgb(237,112,39)" fg:x="2702" fg:w="5"/><text x="66.6708%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (1 samples, 0.02%)</title><rect x="66.5192%" y="405" width="0.0246%" height="15" fill="rgb(247,203,27)" fg:x="2706" fg:w="1"/><text x="66.7692%" y="415.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.02%)</title><rect x="66.5192%" y="389" width="0.0246%" height="15" fill="rgb(235,124,28)" fg:x="2706" fg:w="1"/><text x="66.7692%" y="399.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.02%)</title><rect x="66.5192%" y="373" width="0.0246%" height="15" fill="rgb(208,207,46)" fg:x="2706" fg:w="1"/><text x="66.7692%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.02%)</title><rect x="66.5192%" y="357" width="0.0246%" height="15" fill="rgb(234,176,4)" fg:x="2706" fg:w="1"/><text x="66.7692%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="66.5438%" y="405" width="0.0246%" height="15" fill="rgb(230,133,28)" fg:x="2707" fg:w="1"/><text x="66.7938%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.02%)</title><rect x="66.5683%" y="389" width="0.0246%" height="15" fill="rgb(211,137,40)" fg:x="2708" fg:w="1"/><text x="66.8183%" y="399.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.02%)</title><rect x="66.5683%" y="373" width="0.0246%" height="15" fill="rgb(254,35,13)" fg:x="2708" fg:w="1"/><text x="66.8183%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.02%)</title><rect x="66.5683%" y="357" width="0.0246%" height="15" fill="rgb(225,49,51)" fg:x="2708" fg:w="1"/><text x="66.8183%" y="367.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.02%)</title><rect x="66.5683%" y="341" width="0.0246%" height="15" fill="rgb(251,10,15)" fg:x="2708" fg:w="1"/><text x="66.8183%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.02%)</title><rect x="66.5929%" y="389" width="0.0246%" height="15" fill="rgb(228,207,15)" fg:x="2709" fg:w="1"/><text x="66.8429%" y="399.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.02%)</title><rect x="66.6175%" y="389" width="0.0246%" height="15" fill="rgb(241,99,19)" fg:x="2710" fg:w="1"/><text x="66.8675%" y="399.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.02%)</title><rect x="66.6175%" y="373" width="0.0246%" height="15" fill="rgb(207,104,49)" fg:x="2710" fg:w="1"/><text x="66.8675%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.02%)</title><rect x="66.6175%" y="357" width="0.0246%" height="15" fill="rgb(234,99,18)" fg:x="2710" fg:w="1"/><text x="66.8675%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.02%)</title><rect x="66.6421%" y="389" width="0.0246%" height="15" fill="rgb(213,191,49)" fg:x="2711" fg:w="1"/><text x="66.8921%" y="399.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::authenticate_lengths (12 samples, 0.29%)</title><rect x="66.3963%" y="549" width="0.2950%" height="15" fill="rgb(210,226,19)" fg:x="2701" fg:w="12"/><text x="66.6463%" y="559.50"></text></g><g><title>universal_hash::UniversalHash::update (12 samples, 0.29%)</title><rect x="66.3963%" y="533" width="0.2950%" height="15" fill="rgb(229,97,18)" fg:x="2701" fg:w="12"/><text x="66.6463%" y="543.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (12 samples, 0.29%)</title><rect x="66.3963%" y="517" width="0.2950%" height="15" fill="rgb(211,167,15)" fg:x="2701" fg:w="12"/><text x="66.6463%" y="527.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (12 samples, 0.29%)</title><rect x="66.3963%" y="501" width="0.2950%" height="15" fill="rgb(210,169,34)" fg:x="2701" fg:w="12"/><text x="66.6463%" y="511.50"></text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (12 samples, 0.29%)</title><rect x="66.3963%" y="485" width="0.2950%" height="15" fill="rgb(241,121,31)" fg:x="2701" fg:w="12"/><text x="66.6463%" y="495.50"></text></g><g><title>&lt;poly1305::backend::avx2::State as universal_hash::UhfBackend&gt;::proc_block (12 samples, 0.29%)</title><rect x="66.3963%" y="469" width="0.2950%" height="15" fill="rgb(232,40,11)" fg:x="2701" fg:w="12"/><text x="66.6463%" y="479.50"></text></g><g><title>poly1305::backend::avx2::State::compute_block (12 samples, 0.29%)</title><rect x="66.3963%" y="453" width="0.2950%" height="15" fill="rgb(205,86,26)" fg:x="2701" fg:w="12"/><text x="66.6463%" y="463.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (11 samples, 0.27%)</title><rect x="66.4208%" y="437" width="0.2704%" height="15" fill="rgb(231,126,28)" fg:x="2702" fg:w="11"/><text x="66.6708%" y="447.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (6 samples, 0.15%)</title><rect x="66.5438%" y="421" width="0.1475%" height="15" fill="rgb(219,221,18)" fg:x="2707" fg:w="6"/><text x="66.7938%" y="431.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (5 samples, 0.12%)</title><rect x="66.5683%" y="405" width="0.1229%" height="15" fill="rgb(211,40,0)" fg:x="2708" fg:w="5"/><text x="66.8183%" y="415.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (1 samples, 0.02%)</title><rect x="66.6667%" y="389" width="0.0246%" height="15" fill="rgb(239,85,43)" fg:x="2712" fg:w="1"/><text x="66.9167%" y="399.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.02%)</title><rect x="66.6912%" y="453" width="0.0246%" height="15" fill="rgb(231,55,21)" fg:x="2713" fg:w="1"/><text x="66.9412%" y="463.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (1 samples, 0.02%)</title><rect x="66.7158%" y="453" width="0.0246%" height="15" fill="rgb(225,184,43)" fg:x="2714" fg:w="1"/><text x="66.9658%" y="463.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (2 samples, 0.05%)</title><rect x="66.7404%" y="389" width="0.0492%" height="15" fill="rgb(251,158,41)" fg:x="2715" fg:w="2"/><text x="66.9904%" y="399.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.02%)</title><rect x="66.7896%" y="373" width="0.0246%" height="15" fill="rgb(234,159,37)" fg:x="2717" fg:w="1"/><text x="67.0396%" y="383.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="66.8142%" y="357" width="0.0246%" height="15" fill="rgb(216,204,22)" fg:x="2718" fg:w="1"/><text x="67.0642%" y="367.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (1 samples, 0.02%)</title><rect x="66.8142%" y="341" width="0.0246%" height="15" fill="rgb(214,17,3)" fg:x="2718" fg:w="1"/><text x="67.0642%" y="351.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (2 samples, 0.05%)</title><rect x="66.8142%" y="373" width="0.0492%" height="15" fill="rgb(212,111,17)" fg:x="2718" fg:w="2"/><text x="67.0642%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.02%)</title><rect x="66.8387%" y="357" width="0.0246%" height="15" fill="rgb(221,157,24)" fg:x="2719" fg:w="1"/><text x="67.0887%" y="367.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (2 samples, 0.05%)</title><rect x="66.8633%" y="373" width="0.0492%" height="15" fill="rgb(252,16,13)" fg:x="2720" fg:w="2"/><text x="67.1133%" y="383.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.05%)</title><rect x="66.8633%" y="357" width="0.0492%" height="15" fill="rgb(221,62,2)" fg:x="2720" fg:w="2"/><text x="67.1133%" y="367.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="66.8879%" y="341" width="0.0246%" height="15" fill="rgb(247,87,22)" fg:x="2721" fg:w="1"/><text x="67.1379%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.02%)</title><rect x="66.9125%" y="373" width="0.0246%" height="15" fill="rgb(215,73,9)" fg:x="2722" fg:w="1"/><text x="67.1625%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect x="66.9371%" y="373" width="0.0246%" height="15" fill="rgb(207,175,33)" fg:x="2723" fg:w="1"/><text x="67.1871%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (2 samples, 0.05%)</title><rect x="66.9617%" y="373" width="0.0492%" height="15" fill="rgb(243,129,54)" fg:x="2724" fg:w="2"/><text x="67.2117%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.02%)</title><rect x="67.0108%" y="373" width="0.0246%" height="15" fill="rgb(227,119,45)" fg:x="2726" fg:w="1"/><text x="67.2608%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (4 samples, 0.10%)</title><rect x="67.0354%" y="373" width="0.0983%" height="15" fill="rgb(205,109,36)" fg:x="2727" fg:w="4"/><text x="67.2854%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.05%)</title><rect x="67.1337%" y="373" width="0.0492%" height="15" fill="rgb(205,6,39)" fg:x="2731" fg:w="2"/><text x="67.3837%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.02%)</title><rect x="67.1829%" y="373" width="0.0246%" height="15" fill="rgb(221,32,16)" fg:x="2733" fg:w="1"/><text x="67.4329%" y="383.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (19 samples, 0.47%)</title><rect x="66.7896%" y="389" width="0.4671%" height="15" fill="rgb(228,144,50)" fg:x="2717" fg:w="19"/><text x="67.0396%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (2 samples, 0.05%)</title><rect x="67.2075%" y="373" width="0.0492%" height="15" fill="rgb(229,201,53)" fg:x="2734" fg:w="2"/><text x="67.4575%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect x="67.2812%" y="373" width="0.0246%" height="15" fill="rgb(249,153,27)" fg:x="2737" fg:w="1"/><text x="67.5312%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (3 samples, 0.07%)</title><rect x="67.2566%" y="389" width="0.0737%" height="15" fill="rgb(227,106,25)" fg:x="2736" fg:w="3"/><text x="67.5066%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.02%)</title><rect x="67.3058%" y="373" width="0.0246%" height="15" fill="rgb(230,65,29)" fg:x="2738" fg:w="1"/><text x="67.5558%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect x="67.3304%" y="389" width="0.0246%" height="15" fill="rgb(221,57,46)" fg:x="2739" fg:w="1"/><text x="67.5804%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.02%)</title><rect x="67.3550%" y="389" width="0.0246%" height="15" fill="rgb(229,161,17)" fg:x="2740" fg:w="1"/><text x="67.6050%" y="399.50"></text></g><g><title>chacha20::backends::avx2::rounds (27 samples, 0.66%)</title><rect x="66.7404%" y="405" width="0.6637%" height="15" fill="rgb(222,213,11)" fg:x="2715" fg:w="27"/><text x="66.9904%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.02%)</title><rect x="67.3795%" y="389" width="0.0246%" height="15" fill="rgb(235,35,13)" fg:x="2741" fg:w="1"/><text x="67.6295%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.02%)</title><rect x="67.4041%" y="405" width="0.0246%" height="15" fill="rgb(233,158,34)" fg:x="2742" fg:w="1"/><text x="67.6541%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect x="67.4041%" y="389" width="0.0246%" height="15" fill="rgb(215,151,48)" fg:x="2742" fg:w="1"/><text x="67.6541%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect x="67.4287%" y="405" width="0.0246%" height="15" fill="rgb(229,84,14)" fg:x="2743" fg:w="1"/><text x="67.6787%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.02%)</title><rect x="67.4533%" y="405" width="0.0246%" height="15" fill="rgb(229,68,14)" fg:x="2744" fg:w="1"/><text x="67.7033%" y="415.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_par_ks_blocks (33 samples, 0.81%)</title><rect x="66.7404%" y="421" width="0.8112%" height="15" fill="rgb(243,106,26)" fg:x="2715" fg:w="33"/><text x="66.9904%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (3 samples, 0.07%)</title><rect x="67.4779%" y="405" width="0.0737%" height="15" fill="rgb(206,45,38)" fg:x="2745" fg:w="3"/><text x="67.7279%" y="415.50"></text></g><g><title>&lt;inout::inout_buf::InOutBufIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="67.5516%" y="421" width="0.0246%" height="15" fill="rgb(226,6,15)" fg:x="2748" fg:w="1"/><text x="67.8016%" y="431.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.02%)</title><rect x="67.6008%" y="357" width="0.0246%" height="15" fill="rgb(232,22,54)" fg:x="2750" fg:w="1"/><text x="67.8508%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.02%)</title><rect x="67.6254%" y="357" width="0.0246%" height="15" fill="rgb(229,222,32)" fg:x="2751" fg:w="1"/><text x="67.8754%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.02%)</title><rect x="67.6500%" y="357" width="0.0246%" height="15" fill="rgb(228,62,29)" fg:x="2752" fg:w="1"/><text x="67.9000%" y="367.50"></text></g><g><title>chacha20::backends::avx2::rounds (5 samples, 0.12%)</title><rect x="67.6008%" y="389" width="0.1229%" height="15" fill="rgb(251,103,34)" fg:x="2750" fg:w="5"/><text x="67.8508%" y="399.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (5 samples, 0.12%)</title><rect x="67.6008%" y="373" width="0.1229%" height="15" fill="rgb(233,12,30)" fg:x="2750" fg:w="5"/><text x="67.8508%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (2 samples, 0.05%)</title><rect x="67.6745%" y="357" width="0.0492%" height="15" fill="rgb(238,52,0)" fg:x="2753" fg:w="2"/><text x="67.9245%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.02%)</title><rect x="67.7237%" y="389" width="0.0246%" height="15" fill="rgb(223,98,5)" fg:x="2755" fg:w="1"/><text x="67.9737%" y="399.50"></text></g><g><title>cipher::stream_core::StreamBackend::gen_tail_blocks (8 samples, 0.20%)</title><rect x="67.5762%" y="421" width="0.1967%" height="15" fill="rgb(228,75,37)" fg:x="2749" fg:w="8"/><text x="67.8262%" y="431.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (8 samples, 0.20%)</title><rect x="67.5762%" y="405" width="0.1967%" height="15" fill="rgb(205,115,49)" fg:x="2749" fg:w="8"/><text x="67.8262%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.02%)</title><rect x="67.7483%" y="389" width="0.0246%" height="15" fill="rgb(250,154,43)" fg:x="2756" fg:w="1"/><text x="67.9983%" y="399.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.02%)</title><rect x="67.7729%" y="421" width="0.0246%" height="15" fill="rgb(226,43,29)" fg:x="2757" fg:w="1"/><text x="68.0229%" y="431.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.02%)</title><rect x="67.7729%" y="405" width="0.0246%" height="15" fill="rgb(249,228,39)" fg:x="2757" fg:w="1"/><text x="68.0229%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.02%)</title><rect x="67.7729%" y="389" width="0.0246%" height="15" fill="rgb(216,79,43)" fg:x="2757" fg:w="1"/><text x="68.0229%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="67.7729%" y="373" width="0.0246%" height="15" fill="rgb(228,95,12)" fg:x="2757" fg:w="1"/><text x="68.0229%" y="383.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="67.7729%" y="357" width="0.0246%" height="15" fill="rgb(249,221,15)" fg:x="2757" fg:w="1"/><text x="68.0229%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.02%)</title><rect x="67.7729%" y="341" width="0.0246%" height="15" fill="rgb(233,34,13)" fg:x="2757" fg:w="1"/><text x="68.0229%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.02%)</title><rect x="67.7729%" y="325" width="0.0246%" height="15" fill="rgb(214,103,39)" fg:x="2757" fg:w="1"/><text x="68.0229%" y="335.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (1 samples, 0.02%)</title><rect x="67.7729%" y="309" width="0.0246%" height="15" fill="rgb(251,126,39)" fg:x="2757" fg:w="1"/><text x="68.0229%" y="319.50"></text></g><g><title>_init (1 samples, 0.02%)</title><rect x="67.7729%" y="293" width="0.0246%" height="15" fill="rgb(214,216,36)" fg:x="2757" fg:w="1"/><text x="68.0229%" y="303.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (2 samples, 0.05%)</title><rect x="70.5506%" y="389" width="0.0492%" height="15" fill="rgb(220,221,8)" fg:x="2870" fg:w="2"/><text x="70.8006%" y="399.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (1 samples, 0.02%)</title><rect x="70.5752%" y="373" width="0.0246%" height="15" fill="rgb(240,216,3)" fg:x="2871" fg:w="1"/><text x="70.8252%" y="383.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="70.5998%" y="389" width="0.0246%" height="15" fill="rgb(232,218,17)" fg:x="2872" fg:w="1"/><text x="70.8498%" y="399.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.02%)</title><rect x="70.6244%" y="389" width="0.0246%" height="15" fill="rgb(229,163,45)" fg:x="2873" fg:w="1"/><text x="70.8744%" y="399.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="70.6490%" y="389" width="0.0246%" height="15" fill="rgb(231,110,42)" fg:x="2874" fg:w="1"/><text x="70.8990%" y="399.50"></text></g><g><title>core::slice::raw::from_raw_parts (11 samples, 0.27%)</title><rect x="70.6735%" y="389" width="0.2704%" height="15" fill="rgb(208,170,48)" fg:x="2875" fg:w="11"/><text x="70.9235%" y="399.50"></text></g><g><title>core::ptr::slice_from_raw_parts (10 samples, 0.25%)</title><rect x="70.6981%" y="373" width="0.2458%" height="15" fill="rgb(239,116,25)" fg:x="2876" fg:w="10"/><text x="70.9481%" y="383.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (10 samples, 0.25%)</title><rect x="70.6981%" y="357" width="0.2458%" height="15" fill="rgb(219,200,50)" fg:x="2876" fg:w="10"/><text x="70.9481%" y="367.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::Deref&gt;::deref (59 samples, 1.45%)</title><rect x="69.5674%" y="405" width="1.4503%" height="15" fill="rgb(245,200,0)" fg:x="2830" fg:w="59"/><text x="69.8174%" y="415.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (3 samples, 0.07%)</title><rect x="70.9440%" y="389" width="0.0737%" height="15" fill="rgb(245,119,33)" fg:x="2886" fg:w="3"/><text x="71.1940%" y="399.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (3 samples, 0.07%)</title><rect x="70.9440%" y="373" width="0.0737%" height="15" fill="rgb(231,125,12)" fg:x="2886" fg:w="3"/><text x="71.1940%" y="383.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (3 samples, 0.07%)</title><rect x="70.9440%" y="357" width="0.0737%" height="15" fill="rgb(216,96,41)" fg:x="2886" fg:w="3"/><text x="71.1940%" y="367.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.02%)</title><rect x="71.3127%" y="389" width="0.0246%" height="15" fill="rgb(248,43,45)" fg:x="2901" fg:w="1"/><text x="71.5627%" y="399.50"></text></g><g><title>core::slice::raw::from_raw_parts (5 samples, 0.12%)</title><rect x="71.3373%" y="389" width="0.1229%" height="15" fill="rgb(217,222,7)" fg:x="2902" fg:w="5"/><text x="71.5873%" y="399.50"></text></g><g><title>core::ptr::slice_from_raw_parts (4 samples, 0.10%)</title><rect x="71.3618%" y="373" width="0.0983%" height="15" fill="rgb(233,28,6)" fg:x="2903" fg:w="4"/><text x="71.6118%" y="383.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (4 samples, 0.10%)</title><rect x="71.3618%" y="357" width="0.0983%" height="15" fill="rgb(231,218,15)" fg:x="2903" fg:w="4"/><text x="71.6118%" y="367.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (3 samples, 0.07%)</title><rect x="71.4602%" y="357" width="0.0737%" height="15" fill="rgb(226,171,48)" fg:x="2907" fg:w="3"/><text x="71.7102%" y="367.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (22 samples, 0.54%)</title><rect x="71.0177%" y="405" width="0.5408%" height="15" fill="rgb(235,201,9)" fg:x="2889" fg:w="22"/><text x="71.2677%" y="415.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (4 samples, 0.10%)</title><rect x="71.4602%" y="389" width="0.0983%" height="15" fill="rgb(217,80,15)" fg:x="2907" fg:w="4"/><text x="71.7102%" y="399.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (4 samples, 0.10%)</title><rect x="71.4602%" y="373" width="0.0983%" height="15" fill="rgb(219,152,8)" fg:x="2907" fg:w="4"/><text x="71.7102%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::cast (1 samples, 0.02%)</title><rect x="71.5339%" y="357" width="0.0246%" height="15" fill="rgb(243,107,38)" fg:x="2910" fg:w="1"/><text x="71.7839%" y="367.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (8 samples, 0.20%)</title><rect x="71.5585%" y="389" width="0.1967%" height="15" fill="rgb(231,17,5)" fg:x="2911" fg:w="8"/><text x="71.8085%" y="399.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.02%)</title><rect x="71.7306%" y="373" width="0.0246%" height="15" fill="rgb(209,25,54)" fg:x="2918" fg:w="1"/><text x="71.9806%" y="383.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (9 samples, 0.22%)</title><rect x="71.5585%" y="405" width="0.2212%" height="15" fill="rgb(219,0,2)" fg:x="2911" fg:w="9"/><text x="71.8085%" y="415.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (1 samples, 0.02%)</title><rect x="71.7552%" y="389" width="0.0246%" height="15" fill="rgb(246,9,5)" fg:x="2919" fg:w="1"/><text x="72.0052%" y="399.50"></text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;generic_array::GenericArray&lt;u8,N&gt;,M&gt;&gt;::xor_in2out (163 samples, 4.01%)</title><rect x="67.7974%" y="421" width="4.0069%" height="15" fill="rgb(226,159,4)" fg:x="2758" fg:w="163"/><text x="68.0474%" y="431.50">inou..</text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.02%)</title><rect x="71.7797%" y="405" width="0.0246%" height="15" fill="rgb(219,175,34)" fg:x="2920" fg:w="1"/><text x="72.0297%" y="415.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.02%)</title><rect x="71.7797%" y="389" width="0.0246%" height="15" fill="rgb(236,10,46)" fg:x="2920" fg:w="1"/><text x="72.0297%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.02%)</title><rect x="71.7797%" y="373" width="0.0246%" height="15" fill="rgb(240,211,16)" fg:x="2920" fg:w="1"/><text x="72.0297%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="71.7797%" y="357" width="0.0246%" height="15" fill="rgb(205,3,43)" fg:x="2920" fg:w="1"/><text x="72.0297%" y="367.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="71.7797%" y="341" width="0.0246%" height="15" fill="rgb(245,7,22)" fg:x="2920" fg:w="1"/><text x="72.0297%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.02%)</title><rect x="71.7797%" y="325" width="0.0246%" height="15" fill="rgb(239,132,32)" fg:x="2920" fg:w="1"/><text x="72.0297%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.02%)</title><rect x="71.7797%" y="309" width="0.0246%" height="15" fill="rgb(228,202,34)" fg:x="2920" fg:w="1"/><text x="72.0297%" y="319.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (1 samples, 0.02%)</title><rect x="71.7797%" y="293" width="0.0246%" height="15" fill="rgb(254,200,22)" fg:x="2920" fg:w="1"/><text x="72.0297%" y="303.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (1 samples, 0.02%)</title><rect x="71.7797%" y="277" width="0.0246%" height="15" fill="rgb(219,10,39)" fg:x="2920" fg:w="1"/><text x="72.0297%" y="287.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.02%)</title><rect x="71.7797%" y="261" width="0.0246%" height="15" fill="rgb(226,210,39)" fg:x="2920" fg:w="1"/><text x="72.0297%" y="271.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.02%)</title><rect x="71.7797%" y="245" width="0.0246%" height="15" fill="rgb(208,219,16)" fg:x="2920" fg:w="1"/><text x="72.0297%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.02%)</title><rect x="71.7797%" y="229" width="0.0246%" height="15" fill="rgb(216,158,51)" fg:x="2920" fg:w="1"/><text x="72.0297%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="71.7797%" y="213" width="0.0246%" height="15" fill="rgb(233,14,44)" fg:x="2920" fg:w="1"/><text x="72.0297%" y="223.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (1 samples, 0.02%)</title><rect x="71.7797%" y="197" width="0.0246%" height="15" fill="rgb(237,97,39)" fg:x="2920" fg:w="1"/><text x="72.0297%" y="207.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (207 samples, 5.09%)</title><rect x="66.7404%" y="437" width="5.0885%" height="15" fill="rgb(218,198,43)" fg:x="2715" fg:w="207"/><text x="66.9904%" y="447.50">&lt;ciphe..</text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;u8,N&gt;&gt;::xor_in2out (1 samples, 0.02%)</title><rect x="71.8043%" y="421" width="0.0246%" height="15" fill="rgb(231,104,20)" fg:x="2921" fg:w="1"/><text x="72.0543%" y="431.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.02%)</title><rect x="71.8043%" y="405" width="0.0246%" height="15" fill="rgb(254,36,13)" fg:x="2921" fg:w="1"/><text x="72.0543%" y="415.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (1 samples, 0.02%)</title><rect x="71.8043%" y="389" width="0.0246%" height="15" fill="rgb(248,14,50)" fg:x="2921" fg:w="1"/><text x="72.0543%" y="399.50"></text></g><g><title>chacha20::backends::avx2::inner (208 samples, 5.11%)</title><rect x="66.7404%" y="453" width="5.1131%" height="15" fill="rgb(217,107,29)" fg:x="2715" fg:w="208"/><text x="66.9904%" y="463.50">chacha..</text></g><g><title>core::core_arch::x86::avx2::_mm256_extract_epi32 (1 samples, 0.02%)</title><rect x="71.8289%" y="437" width="0.0246%" height="15" fill="rgb(251,169,33)" fg:x="2922" fg:w="1"/><text x="72.0789%" y="447.50"></text></g><g><title>chacha20::backends::avx2::inner (1 samples, 0.02%)</title><rect x="71.8289%" y="421" width="0.0246%" height="15" fill="rgb(217,108,32)" fg:x="2922" fg:w="1"/><text x="72.0789%" y="431.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (1 samples, 0.02%)</title><rect x="71.8289%" y="405" width="0.0246%" height="15" fill="rgb(219,66,42)" fg:x="2922" fg:w="1"/><text x="72.0789%" y="415.50"></text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;u8,N&gt;&gt;::xor_in2out (1 samples, 0.02%)</title><rect x="71.8289%" y="389" width="0.0246%" height="15" fill="rgb(206,180,7)" fg:x="2922" fg:w="1"/><text x="72.0789%" y="399.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="71.8289%" y="373" width="0.0246%" height="15" fill="rgb(208,226,31)" fg:x="2922" fg:w="1"/><text x="72.0789%" y="383.50"></text></g><g><title>chacha20::backends::avx2::rounds (1 samples, 0.02%)</title><rect x="71.8535%" y="453" width="0.0246%" height="15" fill="rgb(218,26,49)" fg:x="2923" fg:w="1"/><text x="72.1035%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (2 samples, 0.05%)</title><rect x="71.8781%" y="453" width="0.0492%" height="15" fill="rgb(233,197,48)" fg:x="2924" fg:w="2"/><text x="72.1281%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.02%)</title><rect x="71.9272%" y="453" width="0.0246%" height="15" fill="rgb(252,181,51)" fg:x="2926" fg:w="1"/><text x="72.1772%" y="463.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.02%)</title><rect x="71.9272%" y="437" width="0.0246%" height="15" fill="rgb(253,90,19)" fg:x="2926" fg:w="1"/><text x="72.1772%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (4 samples, 0.10%)</title><rect x="71.9518%" y="453" width="0.0983%" height="15" fill="rgb(215,171,30)" fg:x="2927" fg:w="4"/><text x="72.2018%" y="463.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.02%)</title><rect x="72.0501%" y="453" width="0.0246%" height="15" fill="rgb(214,222,9)" fg:x="2931" fg:w="1"/><text x="72.3001%" y="463.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="72.0747%" y="453" width="0.0246%" height="15" fill="rgb(223,3,22)" fg:x="2932" fg:w="1"/><text x="72.3247%" y="463.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (223 samples, 5.48%)</title><rect x="66.6912%" y="501" width="5.4818%" height="15" fill="rgb(225,196,46)" fg:x="2713" fg:w="223"/><text x="66.9412%" y="511.50">cipher:..</text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (223 samples, 5.48%)</title><rect x="66.6912%" y="485" width="5.4818%" height="15" fill="rgb(209,110,37)" fg:x="2713" fg:w="223"/><text x="66.9412%" y="495.50">&lt;chacha..</text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (223 samples, 5.48%)</title><rect x="66.6912%" y="469" width="5.4818%" height="15" fill="rgb(249,89,12)" fg:x="2713" fg:w="223"/><text x="66.9412%" y="479.50">&lt;chacha..</text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (3 samples, 0.07%)</title><rect x="72.0993%" y="453" width="0.0737%" height="15" fill="rgb(226,27,33)" fg:x="2933" fg:w="3"/><text x="72.3493%" y="463.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.02%)</title><rect x="72.1731%" y="405" width="0.0246%" height="15" fill="rgb(213,82,22)" fg:x="2936" fg:w="1"/><text x="72.4231%" y="415.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (13 samples, 0.32%)</title><rect x="72.2960%" y="357" width="0.3196%" height="15" fill="rgb(248,140,0)" fg:x="2941" fg:w="13"/><text x="72.5460%" y="367.50"></text></g><g><title>chacha20::backends::avx2::inner (4 samples, 0.10%)</title><rect x="72.6155%" y="357" width="0.0983%" height="15" fill="rgb(228,106,3)" fg:x="2954" fg:w="4"/><text x="72.8655%" y="367.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (3 samples, 0.07%)</title><rect x="72.6401%" y="341" width="0.0737%" height="15" fill="rgb(209,23,37)" fg:x="2955" fg:w="3"/><text x="72.8901%" y="351.50"></text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;u8,N&gt;&gt;::xor_in2out (3 samples, 0.07%)</title><rect x="72.6401%" y="325" width="0.0737%" height="15" fill="rgb(241,93,50)" fg:x="2955" fg:w="3"/><text x="72.8901%" y="335.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="72.6893%" y="309" width="0.0246%" height="15" fill="rgb(253,46,43)" fg:x="2957" fg:w="1"/><text x="72.9393%" y="319.50"></text></g><g><title>chacha20::backends::avx2::rounds (1 samples, 0.02%)</title><rect x="72.7139%" y="357" width="0.0246%" height="15" fill="rgb(226,206,43)" fg:x="2958" fg:w="1"/><text x="72.9639%" y="367.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (1 samples, 0.02%)</title><rect x="72.7384%" y="357" width="0.0246%" height="15" fill="rgb(217,54,7)" fg:x="2959" fg:w="1"/><text x="72.9884%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.02%)</title><rect x="72.7876%" y="341" width="0.0246%" height="15" fill="rgb(223,5,52)" fg:x="2961" fg:w="1"/><text x="73.0376%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_extract_epi32 (1 samples, 0.02%)</title><rect x="72.8122%" y="341" width="0.0246%" height="15" fill="rgb(206,52,46)" fg:x="2962" fg:w="1"/><text x="73.0622%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect x="72.8368%" y="341" width="0.0246%" height="15" fill="rgb(253,136,11)" fg:x="2963" fg:w="1"/><text x="73.0868%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.02%)</title><rect x="72.8614%" y="341" width="0.0246%" height="15" fill="rgb(208,106,33)" fg:x="2964" fg:w="1"/><text x="73.1114%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (6 samples, 0.15%)</title><rect x="72.7630%" y="357" width="0.1475%" height="15" fill="rgb(206,54,4)" fg:x="2960" fg:w="6"/><text x="73.0130%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.02%)</title><rect x="72.8859%" y="341" width="0.0246%" height="15" fill="rgb(213,3,15)" fg:x="2965" fg:w="1"/><text x="73.1359%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (3 samples, 0.07%)</title><rect x="72.9105%" y="357" width="0.0737%" height="15" fill="rgb(252,211,39)" fg:x="2966" fg:w="3"/><text x="73.1605%" y="367.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.02%)</title><rect x="73.0580%" y="341" width="0.0246%" height="15" fill="rgb(223,6,36)" fg:x="2972" fg:w="1"/><text x="73.3080%" y="351.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.02%)</title><rect x="73.0826%" y="341" width="0.0246%" height="15" fill="rgb(252,169,45)" fg:x="2973" fg:w="1"/><text x="73.3326%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.02%)</title><rect x="73.1072%" y="341" width="0.0246%" height="15" fill="rgb(212,48,26)" fg:x="2974" fg:w="1"/><text x="73.3572%" y="351.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.02%)</title><rect x="73.1072%" y="325" width="0.0246%" height="15" fill="rgb(251,102,48)" fg:x="2974" fg:w="1"/><text x="73.3572%" y="335.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i64x2 (1 samples, 0.02%)</title><rect x="73.1318%" y="341" width="0.0246%" height="15" fill="rgb(243,208,16)" fg:x="2975" fg:w="1"/><text x="73.3818%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (8 samples, 0.20%)</title><rect x="72.9843%" y="357" width="0.1967%" height="15" fill="rgb(219,96,24)" fg:x="2969" fg:w="8"/><text x="73.2343%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.02%)</title><rect x="73.1563%" y="341" width="0.0246%" height="15" fill="rgb(219,33,29)" fg:x="2976" fg:w="1"/><text x="73.4063%" y="351.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.02%)</title><rect x="73.2301%" y="341" width="0.0246%" height="15" fill="rgb(223,176,5)" fg:x="2979" fg:w="1"/><text x="73.4801%" y="351.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.02%)</title><rect x="73.2547%" y="341" width="0.0246%" height="15" fill="rgb(228,140,14)" fg:x="2980" fg:w="1"/><text x="73.5047%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (5 samples, 0.12%)</title><rect x="73.1809%" y="357" width="0.1229%" height="15" fill="rgb(217,179,31)" fg:x="2977" fg:w="5"/><text x="73.4309%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.02%)</title><rect x="73.2793%" y="341" width="0.0246%" height="15" fill="rgb(230,9,30)" fg:x="2981" fg:w="1"/><text x="73.5293%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (3 samples, 0.07%)</title><rect x="73.3038%" y="357" width="0.0737%" height="15" fill="rgb(230,136,20)" fg:x="2982" fg:w="3"/><text x="73.5538%" y="367.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.02%)</title><rect x="73.3530%" y="341" width="0.0246%" height="15" fill="rgb(215,210,22)" fg:x="2984" fg:w="1"/><text x="73.6030%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (12 samples, 0.29%)</title><rect x="73.3776%" y="357" width="0.2950%" height="15" fill="rgb(218,43,5)" fg:x="2985" fg:w="12"/><text x="73.6276%" y="367.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="73.6480%" y="341" width="0.0246%" height="15" fill="rgb(216,11,5)" fg:x="2996" fg:w="1"/><text x="73.8980%" y="351.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="73.6480%" y="325" width="0.0246%" height="15" fill="rgb(209,82,29)" fg:x="2996" fg:w="1"/><text x="73.8980%" y="335.50"></text></g><g><title>__irq_exit_rcu (1 samples, 0.02%)</title><rect x="73.6480%" y="309" width="0.0246%" height="15" fill="rgb(244,115,12)" fg:x="2996" fg:w="1"/><text x="73.8980%" y="319.50"></text></g><g><title>__do_softirq (1 samples, 0.02%)</title><rect x="73.6480%" y="293" width="0.0246%" height="15" fill="rgb(222,82,18)" fg:x="2996" fg:w="1"/><text x="73.8980%" y="303.50"></text></g><g><title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="73.6480%" y="277" width="0.0246%" height="15" fill="rgb(249,227,8)" fg:x="2996" fg:w="1"/><text x="73.8980%" y="287.50"></text></g><g><title>update_blocked_averages (1 samples, 0.02%)</title><rect x="73.6480%" y="261" width="0.0246%" height="15" fill="rgb(253,141,45)" fg:x="2996" fg:w="1"/><text x="73.8980%" y="271.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (5 samples, 0.12%)</title><rect x="73.6726%" y="357" width="0.1229%" height="15" fill="rgb(234,184,4)" fg:x="2997" fg:w="5"/><text x="73.9226%" y="367.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi64x (1 samples, 0.02%)</title><rect x="73.7709%" y="341" width="0.0246%" height="15" fill="rgb(218,194,23)" fg:x="3001" fg:w="1"/><text x="74.0209%" y="351.50"></text></g><g><title>core::core_arch::simd::i64x4::new (1 samples, 0.02%)</title><rect x="73.7709%" y="325" width="0.0246%" height="15" fill="rgb(235,66,41)" fg:x="3001" fg:w="1"/><text x="74.0209%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (5 samples, 0.12%)</title><rect x="73.7955%" y="357" width="0.1229%" height="15" fill="rgb(245,217,1)" fg:x="3002" fg:w="5"/><text x="74.0455%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (5 samples, 0.12%)</title><rect x="73.9184%" y="357" width="0.1229%" height="15" fill="rgb(229,91,1)" fg:x="3007" fg:w="5"/><text x="74.1684%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (6 samples, 0.15%)</title><rect x="74.0413%" y="357" width="0.1475%" height="15" fill="rgb(207,101,30)" fg:x="3012" fg:w="6"/><text x="74.2913%" y="367.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (88 samples, 2.16%)</title><rect x="72.1976%" y="373" width="2.1632%" height="15" fill="rgb(223,82,49)" fg:x="2937" fg:w="88"/><text x="72.4476%" y="383.50">c..</text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (7 samples, 0.17%)</title><rect x="74.1888%" y="357" width="0.1721%" height="15" fill="rgb(218,167,17)" fg:x="3018" fg:w="7"/><text x="74.4388%" y="367.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.02%)</title><rect x="74.3609%" y="357" width="0.0246%" height="15" fill="rgb(208,103,14)" fg:x="3025" fg:w="1"/><text x="74.6109%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.02%)</title><rect x="74.3854%" y="357" width="0.0246%" height="15" fill="rgb(238,20,8)" fg:x="3026" fg:w="1"/><text x="74.6354%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.02%)</title><rect x="74.3854%" y="341" width="0.0246%" height="15" fill="rgb(218,80,54)" fg:x="3026" fg:w="1"/><text x="74.6354%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (2 samples, 0.05%)</title><rect x="74.4100%" y="357" width="0.0492%" height="15" fill="rgb(240,144,17)" fg:x="3027" fg:w="2"/><text x="74.6600%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (2 samples, 0.05%)</title><rect x="74.4592%" y="357" width="0.0492%" height="15" fill="rgb(245,27,50)" fg:x="3029" fg:w="2"/><text x="74.7092%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (2 samples, 0.05%)</title><rect x="74.5084%" y="357" width="0.0492%" height="15" fill="rgb(251,51,7)" fg:x="3031" fg:w="2"/><text x="74.7584%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (2 samples, 0.05%)</title><rect x="74.5575%" y="357" width="0.0492%" height="15" fill="rgb(245,217,29)" fg:x="3033" fg:w="2"/><text x="74.8075%" y="367.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (11 samples, 0.27%)</title><rect x="74.3609%" y="373" width="0.2704%" height="15" fill="rgb(221,176,29)" fg:x="3025" fg:w="11"/><text x="74.6109%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.02%)</title><rect x="74.6067%" y="357" width="0.0246%" height="15" fill="rgb(212,180,24)" fg:x="3035" fg:w="1"/><text x="74.8567%" y="367.50"></text></g><g><title>chacha20::backends::avx2::inner (1 samples, 0.02%)</title><rect x="74.6313%" y="373" width="0.0246%" height="15" fill="rgb(254,24,2)" fg:x="3036" fg:w="1"/><text x="74.8813%" y="383.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (2 samples, 0.05%)</title><rect x="74.6559%" y="357" width="0.0492%" height="15" fill="rgb(230,100,2)" fg:x="3037" fg:w="2"/><text x="74.9059%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (2 samples, 0.05%)</title><rect x="74.7050%" y="341" width="0.0492%" height="15" fill="rgb(219,142,25)" fg:x="3039" fg:w="2"/><text x="74.9550%" y="351.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.02%)</title><rect x="74.7542%" y="341" width="0.0246%" height="15" fill="rgb(240,73,43)" fg:x="3041" fg:w="1"/><text x="75.0042%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (4 samples, 0.10%)</title><rect x="74.7050%" y="357" width="0.0983%" height="15" fill="rgb(214,114,15)" fg:x="3039" fg:w="4"/><text x="74.9550%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.02%)</title><rect x="74.7788%" y="341" width="0.0246%" height="15" fill="rgb(207,130,4)" fg:x="3042" fg:w="1"/><text x="75.0288%" y="351.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (7 samples, 0.17%)</title><rect x="74.6559%" y="373" width="0.1721%" height="15" fill="rgb(221,25,40)" fg:x="3037" fg:w="7"/><text x="74.9059%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.02%)</title><rect x="74.8033%" y="357" width="0.0246%" height="15" fill="rgb(241,184,7)" fg:x="3043" fg:w="1"/><text x="75.0533%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (2 samples, 0.05%)</title><rect x="74.8279%" y="373" width="0.0492%" height="15" fill="rgb(235,159,4)" fg:x="3044" fg:w="2"/><text x="75.0779%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.02%)</title><rect x="74.8771%" y="373" width="0.0246%" height="15" fill="rgb(214,87,48)" fg:x="3046" fg:w="1"/><text x="75.1271%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect x="74.9017%" y="373" width="0.0246%" height="15" fill="rgb(246,198,24)" fg:x="3047" fg:w="1"/><text x="75.1517%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (2 samples, 0.05%)</title><rect x="74.9263%" y="373" width="0.0492%" height="15" fill="rgb(209,66,40)" fg:x="3048" fg:w="2"/><text x="75.1763%" y="383.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (2 samples, 0.05%)</title><rect x="74.9263%" y="357" width="0.0492%" height="15" fill="rgb(233,147,39)" fg:x="3048" fg:w="2"/><text x="75.1763%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (5 samples, 0.12%)</title><rect x="74.9754%" y="373" width="0.1229%" height="15" fill="rgb(231,145,52)" fg:x="3050" fg:w="5"/><text x="75.2254%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (4 samples, 0.10%)</title><rect x="75.0983%" y="373" width="0.0983%" height="15" fill="rgb(206,20,26)" fg:x="3055" fg:w="4"/><text x="75.3483%" y="383.50"></text></g><g><title>chacha20::backends::avx2::inner (124 samples, 3.05%)</title><rect x="72.1731%" y="453" width="3.0482%" height="15" fill="rgb(238,220,4)" fg:x="2936" fg:w="124"/><text x="72.4231%" y="463.50">cha..</text></g><g><title>&lt;cipher::stream_core::WriteBlockCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (124 samples, 3.05%)</title><rect x="72.1731%" y="437" width="3.0482%" height="15" fill="rgb(252,195,42)" fg:x="2936" fg:w="124"/><text x="72.4231%" y="447.50">&lt;ci..</text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (124 samples, 3.05%)</title><rect x="72.1731%" y="421" width="3.0482%" height="15" fill="rgb(209,10,6)" fg:x="2936" fg:w="124"/><text x="72.4231%" y="431.50">&lt;ch..</text></g><g><title>chacha20::backends::avx2::rounds (123 samples, 3.02%)</title><rect x="72.1976%" y="405" width="3.0236%" height="15" fill="rgb(229,3,52)" fg:x="2937" fg:w="123"/><text x="72.4476%" y="415.50">cha..</text></g><g><title>chacha20::backends::avx2::double_quarter_round (123 samples, 3.02%)</title><rect x="72.1976%" y="389" width="3.0236%" height="15" fill="rgb(253,49,37)" fg:x="2937" fg:w="123"/><text x="72.4476%" y="399.50">cha..</text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="75.1967%" y="373" width="0.0246%" height="15" fill="rgb(240,103,49)" fg:x="3059" fg:w="1"/><text x="75.4467%" y="383.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (348 samples, 8.55%)</title><rect x="66.6912%" y="549" width="8.5546%" height="15" fill="rgb(250,182,30)" fg:x="2713" fg:w="348"/><text x="66.9412%" y="559.50">cipher::stre..</text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (348 samples, 8.55%)</title><rect x="66.6912%" y="533" width="8.5546%" height="15" fill="rgb(248,8,30)" fg:x="2713" fg:w="348"/><text x="66.9412%" y="543.50">cipher::stre..</text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (348 samples, 8.55%)</title><rect x="66.6912%" y="517" width="8.5546%" height="15" fill="rgb(237,120,30)" fg:x="2713" fg:w="348"/><text x="66.9412%" y="527.50">&lt;cipher::str..</text></g><g><title>cipher::stream_core::StreamCipherCore::write_keystream_block (125 samples, 3.07%)</title><rect x="72.1731%" y="501" width="3.0728%" height="15" fill="rgb(221,146,34)" fg:x="2936" fg:w="125"/><text x="72.4231%" y="511.50">cip..</text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (125 samples, 3.07%)</title><rect x="72.1731%" y="485" width="3.0728%" height="15" fill="rgb(242,55,13)" fg:x="2936" fg:w="125"/><text x="72.4231%" y="495.50">&lt;ch..</text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (125 samples, 3.07%)</title><rect x="72.1731%" y="469" width="3.0728%" height="15" fill="rgb(242,112,31)" fg:x="2936" fg:w="125"/><text x="72.4231%" y="479.50">&lt;ch..</text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.02%)</title><rect x="75.2212%" y="453" width="0.0246%" height="15" fill="rgb(249,192,27)" fg:x="3060" fg:w="1"/><text x="75.4712%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;chacha20poly1305::cipher::Cipher&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;chacha20::xchacha::XChaChaCore&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm,typenum::bit::B1&gt;,typenum::bit::B0&gt;,typenum::bit::B1&gt;,typenum::bit::B0&gt;&gt;&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="75.2458%" y="549" width="0.0246%" height="15" fill="rgb(208,204,44)" fg:x="3061" fg:w="1"/><text x="75.4958%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;chacha20::xchacha::XChaChaCore&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm,typenum::bit::B1&gt;,typenum::bit::B0&gt;,typenum::bit::B1&gt;,typenum::bit::B0&gt;&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="75.2458%" y="533" width="0.0246%" height="15" fill="rgb(208,93,54)" fg:x="3061" fg:w="1"/><text x="75.4958%" y="543.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="75.2458%" y="517" width="0.0246%" height="15" fill="rgb(242,1,31)" fg:x="3061" fg:w="1"/><text x="75.4958%" y="527.50"></text></g><g><title>&lt;[Z] as zeroize::Zeroize&gt;::zeroize (1 samples, 0.02%)</title><rect x="75.2458%" y="501" width="0.0246%" height="15" fill="rgb(241,83,25)" fg:x="3061" fg:w="1"/><text x="75.4958%" y="511.50"></text></g><g><title>zeroize::volatile_set (1 samples, 0.02%)</title><rect x="75.2458%" y="485" width="0.0246%" height="15" fill="rgb(205,169,50)" fg:x="3061" fg:w="1"/><text x="75.4958%" y="495.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.02%)</title><rect x="75.2458%" y="469" width="0.0246%" height="15" fill="rgb(239,186,37)" fg:x="3061" fg:w="1"/><text x="75.4958%" y="479.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.02%)</title><rect x="75.2458%" y="453" width="0.0246%" height="15" fill="rgb(205,221,10)" fg:x="3061" fg:w="1"/><text x="75.4958%" y="463.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.02%)</title><rect x="75.2704%" y="469" width="0.0246%" height="15" fill="rgb(218,196,15)" fg:x="3062" fg:w="1"/><text x="75.5204%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (3 samples, 0.07%)</title><rect x="75.2950%" y="437" width="0.0737%" height="15" fill="rgb(218,196,35)" fg:x="3063" fg:w="3"/><text x="75.5450%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.02%)</title><rect x="75.3687%" y="437" width="0.0246%" height="15" fill="rgb(233,63,24)" fg:x="3066" fg:w="1"/><text x="75.6187%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (11 samples, 0.27%)</title><rect x="75.3933%" y="437" width="0.2704%" height="15" fill="rgb(225,8,4)" fg:x="3067" fg:w="11"/><text x="75.6433%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (1 samples, 0.02%)</title><rect x="75.6637%" y="437" width="0.0246%" height="15" fill="rgb(234,105,35)" fg:x="3078" fg:w="1"/><text x="75.9137%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi64 (1 samples, 0.02%)</title><rect x="75.6883%" y="437" width="0.0246%" height="15" fill="rgb(236,21,32)" fg:x="3079" fg:w="1"/><text x="75.9383%" y="447.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (8 samples, 0.20%)</title><rect x="75.7129%" y="437" width="0.1967%" height="15" fill="rgb(228,109,6)" fg:x="3080" fg:w="8"/><text x="75.9629%" y="447.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (8 samples, 0.20%)</title><rect x="75.7129%" y="421" width="0.1967%" height="15" fill="rgb(229,215,31)" fg:x="3080" fg:w="8"/><text x="75.9629%" y="431.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (8 samples, 0.20%)</title><rect x="75.7129%" y="405" width="0.1967%" height="15" fill="rgb(221,52,54)" fg:x="3080" fg:w="8"/><text x="75.9629%" y="415.50"></text></g><g><title>core::core_arch::simd::i8x32::new (1 samples, 0.02%)</title><rect x="75.8850%" y="389" width="0.0246%" height="15" fill="rgb(252,129,43)" fg:x="3087" fg:w="1"/><text x="76.1350%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.02%)</title><rect x="75.9095%" y="437" width="0.0246%" height="15" fill="rgb(248,183,27)" fg:x="3088" fg:w="1"/><text x="76.1595%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.05%)</title><rect x="75.9341%" y="437" width="0.0492%" height="15" fill="rgb(250,0,22)" fg:x="3089" fg:w="2"/><text x="76.1841%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (2 samples, 0.05%)</title><rect x="75.9833%" y="437" width="0.0492%" height="15" fill="rgb(213,166,10)" fg:x="3091" fg:w="2"/><text x="76.2333%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.02%)</title><rect x="76.0324%" y="437" width="0.0246%" height="15" fill="rgb(207,163,36)" fg:x="3093" fg:w="1"/><text x="76.2824%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (5 samples, 0.12%)</title><rect x="76.1062%" y="405" width="0.1229%" height="15" fill="rgb(208,122,22)" fg:x="3096" fg:w="5"/><text x="76.3562%" y="415.50"></text></g><g><title>__rseq_handle_notify_resume (1 samples, 0.02%)</title><rect x="76.4503%" y="341" width="0.0246%" height="15" fill="rgb(207,104,49)" fg:x="3110" fg:w="1"/><text x="76.7003%" y="351.50"></text></g><g><title>__put_user_8 (1 samples, 0.02%)</title><rect x="76.4503%" y="325" width="0.0246%" height="15" fill="rgb(248,211,50)" fg:x="3110" fg:w="1"/><text x="76.7003%" y="335.50"></text></g><g><title>fpregs_restore_userregs (1 samples, 0.02%)</title><rect x="76.4749%" y="341" width="0.0246%" height="15" fill="rgb(217,13,45)" fg:x="3111" fg:w="1"/><text x="76.7249%" y="351.50"></text></g><g><title>restore_fpregs_from_fpstate (1 samples, 0.02%)</title><rect x="76.4749%" y="325" width="0.0246%" height="15" fill="rgb(211,216,49)" fg:x="3111" fg:w="1"/><text x="76.7249%" y="335.50"></text></g><g><title>asm_sysvec_call_function_single (4 samples, 0.10%)</title><rect x="76.4258%" y="389" width="0.0983%" height="15" fill="rgb(221,58,53)" fg:x="3109" fg:w="4"/><text x="76.6758%" y="399.50"></text></g><g><title>irqentry_exit_to_user_mode (4 samples, 0.10%)</title><rect x="76.4258%" y="373" width="0.0983%" height="15" fill="rgb(220,112,41)" fg:x="3109" fg:w="4"/><text x="76.6758%" y="383.50"></text></g><g><title>exit_to_user_mode_prepare (4 samples, 0.10%)</title><rect x="76.4258%" y="357" width="0.0983%" height="15" fill="rgb(236,38,28)" fg:x="3109" fg:w="4"/><text x="76.6758%" y="367.50"></text></g><g><title>schedule (1 samples, 0.02%)</title><rect x="76.4995%" y="341" width="0.0246%" height="15" fill="rgb(227,195,22)" fg:x="3112" fg:w="1"/><text x="76.7495%" y="351.50"></text></g><g><title>__schedule (1 samples, 0.02%)</title><rect x="76.4995%" y="325" width="0.0246%" height="15" fill="rgb(214,55,33)" fg:x="3112" fg:w="1"/><text x="76.7495%" y="335.50"></text></g><g><title>finish_task_switch.isra.0 (1 samples, 0.02%)</title><rect x="76.4995%" y="309" width="0.0246%" height="15" fill="rgb(248,80,13)" fg:x="3112" fg:w="1"/><text x="76.7495%" y="319.50"></text></g><g><title>__perf_event_task_sched_in (1 samples, 0.02%)</title><rect x="76.4995%" y="293" width="0.0246%" height="15" fill="rgb(238,52,6)" fg:x="3112" fg:w="1"/><text x="76.7495%" y="303.50"></text></g><g><title>ctx_flexible_sched_in (1 samples, 0.02%)</title><rect x="76.4995%" y="277" width="0.0246%" height="15" fill="rgb(224,198,47)" fg:x="3112" fg:w="1"/><text x="76.7495%" y="287.50"></text></g><g><title>visit_groups_merge.constprop.0.isra.0 (1 samples, 0.02%)</title><rect x="76.4995%" y="261" width="0.0246%" height="15" fill="rgb(233,171,20)" fg:x="3112" fg:w="1"/><text x="76.7495%" y="271.50"></text></g><g><title>merge_sched_in (1 samples, 0.02%)</title><rect x="76.4995%" y="245" width="0.0246%" height="15" fill="rgb(241,30,25)" fg:x="3112" fg:w="1"/><text x="76.7495%" y="255.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.02%)</title><rect x="76.5241%" y="389" width="0.0246%" height="15" fill="rgb(207,171,38)" fg:x="3113" fg:w="1"/><text x="76.7741%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.02%)</title><rect x="76.5487%" y="389" width="0.0246%" height="15" fill="rgb(234,70,1)" fg:x="3114" fg:w="1"/><text x="76.7987%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (15 samples, 0.37%)</title><rect x="76.2291%" y="405" width="0.3687%" height="15" fill="rgb(232,178,18)" fg:x="3101" fg:w="15"/><text x="76.4791%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.02%)</title><rect x="76.5733%" y="389" width="0.0246%" height="15" fill="rgb(241,78,40)" fg:x="3115" fg:w="1"/><text x="76.8233%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_blend_epi32 (6 samples, 0.15%)</title><rect x="76.5978%" y="405" width="0.1475%" height="15" fill="rgb(222,35,25)" fg:x="3116" fg:w="6"/><text x="76.8478%" y="415.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.02%)</title><rect x="77.5811%" y="389" width="0.0246%" height="15" fill="rgb(207,92,16)" fg:x="3156" fg:w="1"/><text x="77.8311%" y="399.50"></text></g><g><title>core::core_arch::simd::u64x4::splat (2 samples, 0.05%)</title><rect x="77.6057%" y="389" width="0.0492%" height="15" fill="rgb(216,59,51)" fg:x="3157" fg:w="2"/><text x="77.8557%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.02%)</title><rect x="77.6549%" y="389" width="0.0246%" height="15" fill="rgb(213,80,28)" fg:x="3159" fg:w="1"/><text x="77.9049%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (2 samples, 0.05%)</title><rect x="77.6794%" y="389" width="0.0492%" height="15" fill="rgb(220,93,7)" fg:x="3160" fg:w="2"/><text x="77.9294%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (2 samples, 0.05%)</title><rect x="77.7286%" y="389" width="0.0492%" height="15" fill="rgb(225,24,44)" fg:x="3162" fg:w="2"/><text x="77.9786%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_unpacklo_epi64 (1 samples, 0.02%)</title><rect x="77.7778%" y="389" width="0.0246%" height="15" fill="rgb(243,74,40)" fg:x="3164" fg:w="1"/><text x="78.0278%" y="399.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi32 (3 samples, 0.07%)</title><rect x="77.8024%" y="389" width="0.0737%" height="15" fill="rgb(228,39,7)" fg:x="3165" fg:w="3"/><text x="78.0524%" y="399.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi32 (2 samples, 0.05%)</title><rect x="77.8269%" y="373" width="0.0492%" height="15" fill="rgb(227,79,8)" fg:x="3166" fg:w="2"/><text x="78.0769%" y="383.50"></text></g><g><title>core::core_arch::simd::i32x8::new (2 samples, 0.05%)</title><rect x="77.8269%" y="357" width="0.0492%" height="15" fill="rgb(236,58,11)" fg:x="3166" fg:w="2"/><text x="78.0769%" y="367.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (2 samples, 0.05%)</title><rect x="77.8761%" y="389" width="0.0492%" height="15" fill="rgb(249,63,35)" fg:x="3168" fg:w="2"/><text x="78.1261%" y="399.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi32 (1 samples, 0.02%)</title><rect x="77.9007%" y="373" width="0.0246%" height="15" fill="rgb(252,114,16)" fg:x="3169" fg:w="1"/><text x="78.1507%" y="383.50"></text></g><g><title>core::core_arch::simd::i32x8::new (1 samples, 0.02%)</title><rect x="77.9007%" y="357" width="0.0246%" height="15" fill="rgb(254,151,24)" fg:x="3169" fg:w="1"/><text x="78.1507%" y="367.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (3 samples, 0.07%)</title><rect x="77.9253%" y="389" width="0.0737%" height="15" fill="rgb(253,54,39)" fg:x="3170" fg:w="3"/><text x="78.1753%" y="399.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (3 samples, 0.07%)</title><rect x="77.9253%" y="373" width="0.0737%" height="15" fill="rgb(243,25,45)" fg:x="3170" fg:w="3"/><text x="78.1753%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (3 samples, 0.07%)</title><rect x="77.9253%" y="357" width="0.0737%" height="15" fill="rgb(234,134,9)" fg:x="3170" fg:w="3"/><text x="78.1753%" y="367.50"></text></g><g><title>core::core_arch::simd::i8x32::new (1 samples, 0.02%)</title><rect x="77.9744%" y="341" width="0.0246%" height="15" fill="rgb(227,166,31)" fg:x="3172" fg:w="1"/><text x="78.2244%" y="351.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.05%)</title><rect x="77.9990%" y="389" width="0.0492%" height="15" fill="rgb(245,143,41)" fg:x="3173" fg:w="2"/><text x="78.2490%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.02%)</title><rect x="78.0482%" y="389" width="0.0246%" height="15" fill="rgb(238,181,32)" fg:x="3175" fg:w="1"/><text x="78.2982%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (4 samples, 0.10%)</title><rect x="78.0728%" y="389" width="0.0983%" height="15" fill="rgb(224,113,18)" fg:x="3176" fg:w="4"/><text x="78.3228%" y="399.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.02%)</title><rect x="78.1465%" y="373" width="0.0246%" height="15" fill="rgb(240,229,28)" fg:x="3179" fg:w="1"/><text x="78.3965%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (60 samples, 1.47%)</title><rect x="76.7453%" y="405" width="1.4749%" height="15" fill="rgb(250,185,3)" fg:x="3122" fg:w="60"/><text x="76.9953%" y="415.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (2 samples, 0.05%)</title><rect x="78.1711%" y="389" width="0.0492%" height="15" fill="rgb(212,59,25)" fg:x="3180" fg:w="2"/><text x="78.4211%" y="399.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (1 samples, 0.02%)</title><rect x="78.1957%" y="373" width="0.0246%" height="15" fill="rgb(221,87,20)" fg:x="3181" fg:w="1"/><text x="78.4457%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (3 samples, 0.07%)</title><rect x="78.2203%" y="405" width="0.0737%" height="15" fill="rgb(213,74,28)" fg:x="3182" fg:w="3"/><text x="78.4703%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (2 samples, 0.05%)</title><rect x="78.3432%" y="389" width="0.0492%" height="15" fill="rgb(224,132,34)" fg:x="3187" fg:w="2"/><text x="78.5932%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.02%)</title><rect x="78.3923%" y="389" width="0.0246%" height="15" fill="rgb(222,101,24)" fg:x="3189" fg:w="1"/><text x="78.6423%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_blend_epi32 (6 samples, 0.15%)</title><rect x="78.4169%" y="389" width="0.1475%" height="15" fill="rgb(254,142,4)" fg:x="3190" fg:w="6"/><text x="78.6669%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.02%)</title><rect x="78.5644%" y="389" width="0.0246%" height="15" fill="rgb(230,229,49)" fg:x="3196" fg:w="1"/><text x="78.8144%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (1 samples, 0.02%)</title><rect x="78.5890%" y="389" width="0.0246%" height="15" fill="rgb(238,70,47)" fg:x="3197" fg:w="1"/><text x="78.8390%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi64 (2 samples, 0.05%)</title><rect x="78.6136%" y="389" width="0.0492%" height="15" fill="rgb(231,160,17)" fg:x="3198" fg:w="2"/><text x="78.8636%" y="399.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (9 samples, 0.22%)</title><rect x="78.6627%" y="389" width="0.2212%" height="15" fill="rgb(218,68,53)" fg:x="3200" fg:w="9"/><text x="78.9127%" y="399.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (9 samples, 0.22%)</title><rect x="78.6627%" y="373" width="0.2212%" height="15" fill="rgb(236,111,10)" fg:x="3200" fg:w="9"/><text x="78.9127%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (8 samples, 0.20%)</title><rect x="78.6873%" y="357" width="0.1967%" height="15" fill="rgb(224,34,41)" fg:x="3201" fg:w="8"/><text x="78.9373%" y="367.50"></text></g><g><title>core::core_arch::simd::i8x32::new (1 samples, 0.02%)</title><rect x="78.8594%" y="341" width="0.0246%" height="15" fill="rgb(241,118,19)" fg:x="3208" fg:w="1"/><text x="79.1094%" y="351.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (3 samples, 0.07%)</title><rect x="78.8840%" y="389" width="0.0737%" height="15" fill="rgb(238,129,25)" fg:x="3209" fg:w="3"/><text x="79.1340%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.02%)</title><rect x="78.9577%" y="389" width="0.0246%" height="15" fill="rgb(238,22,31)" fg:x="3212" fg:w="1"/><text x="79.2077%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (2 samples, 0.05%)</title><rect x="78.9823%" y="389" width="0.0492%" height="15" fill="rgb(222,174,48)" fg:x="3213" fg:w="2"/><text x="79.2323%" y="399.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (1 samples, 0.02%)</title><rect x="79.0315%" y="389" width="0.0246%" height="15" fill="rgb(206,152,40)" fg:x="3215" fg:w="1"/><text x="79.2815%" y="399.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (1 samples, 0.02%)</title><rect x="79.0315%" y="373" width="0.0246%" height="15" fill="rgb(218,99,54)" fg:x="3215" fg:w="1"/><text x="79.2815%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (32 samples, 0.79%)</title><rect x="78.2940%" y="405" width="0.7866%" height="15" fill="rgb(220,174,26)" fg:x="3185" fg:w="32"/><text x="78.5440%" y="415.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (1 samples, 0.02%)</title><rect x="79.0560%" y="389" width="0.0246%" height="15" fill="rgb(245,116,9)" fg:x="3216" fg:w="1"/><text x="79.3060%" y="399.50"></text></g><g><title>__irqentry_text_end (1 samples, 0.02%)</title><rect x="79.3510%" y="389" width="0.0246%" height="15" fill="rgb(209,72,35)" fg:x="3228" fg:w="1"/><text x="79.6010%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.02%)</title><rect x="79.3756%" y="389" width="0.0246%" height="15" fill="rgb(226,126,21)" fg:x="3229" fg:w="1"/><text x="79.6256%" y="399.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.02%)</title><rect x="79.3756%" y="373" width="0.0246%" height="15" fill="rgb(227,192,1)" fg:x="3229" fg:w="1"/><text x="79.6256%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (14 samples, 0.34%)</title><rect x="79.0806%" y="405" width="0.3441%" height="15" fill="rgb(237,180,29)" fg:x="3217" fg:w="14"/><text x="79.3306%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.02%)</title><rect x="79.4002%" y="389" width="0.0246%" height="15" fill="rgb(230,197,35)" fg:x="3230" fg:w="1"/><text x="79.6502%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi64 (3 samples, 0.07%)</title><rect x="79.4248%" y="405" width="0.0737%" height="15" fill="rgb(246,193,31)" fg:x="3231" fg:w="3"/><text x="79.6748%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (2 samples, 0.05%)</title><rect x="79.4985%" y="405" width="0.0492%" height="15" fill="rgb(241,36,4)" fg:x="3234" fg:w="2"/><text x="79.7485%" y="415.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_loadu_si256 (2 samples, 0.05%)</title><rect x="79.5477%" y="405" width="0.0492%" height="15" fill="rgb(241,130,17)" fg:x="3236" fg:w="2"/><text x="79.7977%" y="415.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi32 (2 samples, 0.05%)</title><rect x="79.5969%" y="405" width="0.0492%" height="15" fill="rgb(206,137,32)" fg:x="3238" fg:w="2"/><text x="79.8469%" y="415.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi32 (1 samples, 0.02%)</title><rect x="79.6214%" y="389" width="0.0246%" height="15" fill="rgb(237,228,51)" fg:x="3239" fg:w="1"/><text x="79.8714%" y="399.50"></text></g><g><title>core::core_arch::simd::i32x8::new (1 samples, 0.02%)</title><rect x="79.6214%" y="373" width="0.0246%" height="15" fill="rgb(243,6,42)" fg:x="3239" fg:w="1"/><text x="79.8714%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (5 samples, 0.12%)</title><rect x="79.6460%" y="405" width="0.1229%" height="15" fill="rgb(251,74,28)" fg:x="3240" fg:w="5"/><text x="79.8960%" y="415.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi32 (3 samples, 0.07%)</title><rect x="79.6952%" y="389" width="0.0737%" height="15" fill="rgb(218,20,49)" fg:x="3242" fg:w="3"/><text x="79.9452%" y="399.50"></text></g><g><title>core::core_arch::simd::i32x8::new (3 samples, 0.07%)</title><rect x="79.6952%" y="373" width="0.0737%" height="15" fill="rgb(238,28,14)" fg:x="3242" fg:w="3"/><text x="79.9452%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (19 samples, 0.47%)</title><rect x="79.7689%" y="405" width="0.4671%" height="15" fill="rgb(229,40,46)" fg:x="3245" fg:w="19"/><text x="80.0189%" y="415.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (19 samples, 0.47%)</title><rect x="79.7689%" y="389" width="0.4671%" height="15" fill="rgb(244,195,20)" fg:x="3245" fg:w="19"/><text x="80.0189%" y="399.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (19 samples, 0.47%)</title><rect x="79.7689%" y="373" width="0.4671%" height="15" fill="rgb(253,56,35)" fg:x="3245" fg:w="19"/><text x="80.0189%" y="383.50"></text></g><g><title>core::core_arch::simd::i8x32::new (7 samples, 0.17%)</title><rect x="80.0639%" y="357" width="0.1721%" height="15" fill="rgb(210,149,44)" fg:x="3257" fg:w="7"/><text x="80.3139%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (6 samples, 0.15%)</title><rect x="80.2360%" y="405" width="0.1475%" height="15" fill="rgb(240,135,12)" fg:x="3264" fg:w="6"/><text x="80.4860%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (11 samples, 0.27%)</title><rect x="80.3835%" y="405" width="0.2704%" height="15" fill="rgb(251,24,50)" fg:x="3270" fg:w="11"/><text x="80.6335%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (11 samples, 0.27%)</title><rect x="80.6539%" y="405" width="0.2704%" height="15" fill="rgb(243,200,47)" fg:x="3281" fg:w="11"/><text x="80.9039%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (14 samples, 0.34%)</title><rect x="80.9243%" y="405" width="0.3441%" height="15" fill="rgb(224,166,26)" fg:x="3292" fg:w="14"/><text x="81.1743%" y="415.50"></text></g><g><title>poly1305::backend::avx2::State::compute_par_blocks (3 samples, 0.07%)</title><rect x="81.2684%" y="405" width="0.0737%" height="15" fill="rgb(233,0,47)" fg:x="3306" fg:w="3"/><text x="81.5184%" y="415.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (11 samples, 0.27%)</title><rect x="81.3913%" y="389" width="0.2704%" height="15" fill="rgb(253,80,5)" fg:x="3311" fg:w="11"/><text x="81.6413%" y="399.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (14 samples, 0.34%)</title><rect x="81.3422%" y="405" width="0.3441%" height="15" fill="rgb(214,133,25)" fg:x="3309" fg:w="14"/><text x="81.5922%" y="415.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (1 samples, 0.02%)</title><rect x="81.6618%" y="389" width="0.0246%" height="15" fill="rgb(209,27,14)" fg:x="3322" fg:w="1"/><text x="81.9118%" y="399.50"></text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_loaded_blocks (4 samples, 0.10%)</title><rect x="81.6863%" y="405" width="0.0983%" height="15" fill="rgb(219,102,51)" fg:x="3323" fg:w="4"/><text x="81.9363%" y="415.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (234 samples, 5.75%)</title><rect x="76.0570%" y="421" width="5.7522%" height="15" fill="rgb(237,18,16)" fg:x="3094" fg:w="234"/><text x="76.3070%" y="431.50">&lt;&amp;poly1..</text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_par_blocks (1 samples, 0.02%)</title><rect x="81.7847%" y="405" width="0.0246%" height="15" fill="rgb(241,85,17)" fg:x="3327" fg:w="1"/><text x="82.0347%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.02%)</title><rect x="81.8092%" y="405" width="0.0246%" height="15" fill="rgb(236,90,42)" fg:x="3328" fg:w="1"/><text x="82.0592%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (1 samples, 0.02%)</title><rect x="81.8092%" y="389" width="0.0246%" height="15" fill="rgb(249,57,21)" fg:x="3328" fg:w="1"/><text x="82.0592%" y="399.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Add&gt;::add (3 samples, 0.07%)</title><rect x="81.8092%" y="421" width="0.0737%" height="15" fill="rgb(243,12,36)" fg:x="3328" fg:w="3"/><text x="82.0592%" y="431.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (2 samples, 0.05%)</title><rect x="81.8338%" y="405" width="0.0492%" height="15" fill="rgb(253,128,47)" fg:x="3329" fg:w="2"/><text x="82.0838%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (4 samples, 0.10%)</title><rect x="81.9076%" y="405" width="0.0983%" height="15" fill="rgb(207,33,20)" fg:x="3332" fg:w="4"/><text x="82.1576%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.02%)</title><rect x="82.0059%" y="405" width="0.0246%" height="15" fill="rgb(233,215,35)" fg:x="3336" fg:w="1"/><text x="82.2559%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_blend_epi32 (1 samples, 0.02%)</title><rect x="82.0305%" y="405" width="0.0246%" height="15" fill="rgb(249,188,52)" fg:x="3337" fg:w="1"/><text x="82.2805%" y="415.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (1 samples, 0.02%)</title><rect x="82.0305%" y="389" width="0.0246%" height="15" fill="rgb(225,12,32)" fg:x="3337" fg:w="1"/><text x="82.2805%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (6 samples, 0.15%)</title><rect x="82.0551%" y="405" width="0.1475%" height="15" fill="rgb(247,98,14)" fg:x="3338" fg:w="6"/><text x="82.3051%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (1 samples, 0.02%)</title><rect x="82.2026%" y="405" width="0.0246%" height="15" fill="rgb(247,219,48)" fg:x="3344" fg:w="1"/><text x="82.4526%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi64 (1 samples, 0.02%)</title><rect x="82.2271%" y="405" width="0.0246%" height="15" fill="rgb(253,60,48)" fg:x="3345" fg:w="1"/><text x="82.4771%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="82.2271%" y="389" width="0.0246%" height="15" fill="rgb(245,15,52)" fg:x="3345" fg:w="1"/><text x="82.4771%" y="399.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.02%)</title><rect x="82.2517%" y="405" width="0.0246%" height="15" fill="rgb(220,133,28)" fg:x="3346" fg:w="1"/><text x="82.5017%" y="415.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.02%)</title><rect x="82.2517%" y="389" width="0.0246%" height="15" fill="rgb(217,180,4)" fg:x="3346" fg:w="1"/><text x="82.5017%" y="399.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.02%)</title><rect x="82.2517%" y="373" width="0.0246%" height="15" fill="rgb(251,24,1)" fg:x="3346" fg:w="1"/><text x="82.5017%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (3 samples, 0.07%)</title><rect x="82.2763%" y="405" width="0.0737%" height="15" fill="rgb(212,185,49)" fg:x="3347" fg:w="3"/><text x="82.5263%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.02%)</title><rect x="82.3500%" y="405" width="0.0246%" height="15" fill="rgb(215,175,22)" fg:x="3350" fg:w="1"/><text x="82.6000%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (6 samples, 0.15%)</title><rect x="82.3992%" y="389" width="0.1475%" height="15" fill="rgb(250,205,14)" fg:x="3352" fg:w="6"/><text x="82.6492%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (8 samples, 0.20%)</title><rect x="82.5467%" y="389" width="0.1967%" height="15" fill="rgb(225,211,22)" fg:x="3358" fg:w="8"/><text x="82.7967%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (2 samples, 0.05%)</title><rect x="82.7434%" y="389" width="0.0492%" height="15" fill="rgb(251,179,42)" fg:x="3366" fg:w="2"/><text x="82.9934%" y="399.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (4 samples, 0.10%)</title><rect x="82.7925%" y="389" width="0.0983%" height="15" fill="rgb(208,216,51)" fg:x="3368" fg:w="4"/><text x="83.0425%" y="399.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (4 samples, 0.10%)</title><rect x="82.7925%" y="373" width="0.0983%" height="15" fill="rgb(235,36,11)" fg:x="3368" fg:w="4"/><text x="83.0425%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (4 samples, 0.10%)</title><rect x="82.7925%" y="357" width="0.0983%" height="15" fill="rgb(213,189,28)" fg:x="3368" fg:w="4"/><text x="83.0425%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (6 samples, 0.15%)</title><rect x="82.8909%" y="389" width="0.1475%" height="15" fill="rgb(227,203,42)" fg:x="3372" fg:w="6"/><text x="83.1409%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (8 samples, 0.20%)</title><rect x="83.0383%" y="389" width="0.1967%" height="15" fill="rgb(244,72,36)" fg:x="3378" fg:w="8"/><text x="83.2883%" y="399.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (3 samples, 0.07%)</title><rect x="83.2350%" y="373" width="0.0737%" height="15" fill="rgb(213,53,17)" fg:x="3386" fg:w="3"/><text x="83.4850%" y="383.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (4 samples, 0.10%)</title><rect x="83.2350%" y="389" width="0.0983%" height="15" fill="rgb(207,167,3)" fg:x="3386" fg:w="4"/><text x="83.4850%" y="399.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (1 samples, 0.02%)</title><rect x="83.3088%" y="373" width="0.0246%" height="15" fill="rgb(216,98,30)" fg:x="3389" fg:w="1"/><text x="83.5588%" y="383.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (298 samples, 7.33%)</title><rect x="76.0570%" y="437" width="7.3255%" height="15" fill="rgb(236,123,15)" fg:x="3094" fg:w="298"/><text x="76.3070%" y="447.50">poly1305::..</text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (61 samples, 1.50%)</title><rect x="81.8830%" y="421" width="1.4995%" height="15" fill="rgb(248,81,50)" fg:x="3331" fg:w="61"/><text x="82.1330%" y="431.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (41 samples, 1.01%)</title><rect x="82.3746%" y="405" width="1.0079%" height="15" fill="rgb(214,120,4)" fg:x="3351" fg:w="41"/><text x="82.6246%" y="415.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (2 samples, 0.05%)</title><rect x="83.3333%" y="389" width="0.0492%" height="15" fill="rgb(208,179,34)" fg:x="3390" fg:w="2"/><text x="83.5833%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (5 samples, 0.12%)</title><rect x="83.3825%" y="405" width="0.1229%" height="15" fill="rgb(227,140,7)" fg:x="3392" fg:w="5"/><text x="83.6325%" y="415.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.02%)</title><rect x="83.6283%" y="389" width="0.0246%" height="15" fill="rgb(214,22,6)" fg:x="3402" fg:w="1"/><text x="83.8783%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.02%)</title><rect x="83.6529%" y="389" width="0.0246%" height="15" fill="rgb(207,137,27)" fg:x="3403" fg:w="1"/><text x="83.9029%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.02%)</title><rect x="83.6775%" y="389" width="0.0246%" height="15" fill="rgb(210,8,46)" fg:x="3404" fg:w="1"/><text x="83.9275%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.02%)</title><rect x="83.7021%" y="389" width="0.0246%" height="15" fill="rgb(240,16,54)" fg:x="3405" fg:w="1"/><text x="83.9521%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (2 samples, 0.05%)</title><rect x="83.7266%" y="389" width="0.0492%" height="15" fill="rgb(211,209,29)" fg:x="3406" fg:w="2"/><text x="83.9766%" y="399.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (1 samples, 0.02%)</title><rect x="83.7758%" y="389" width="0.0246%" height="15" fill="rgb(226,228,24)" fg:x="3408" fg:w="1"/><text x="84.0258%" y="399.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (1 samples, 0.02%)</title><rect x="83.7758%" y="373" width="0.0246%" height="15" fill="rgb(222,84,9)" fg:x="3408" fg:w="1"/><text x="84.0258%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (13 samples, 0.32%)</title><rect x="83.5054%" y="405" width="0.3196%" height="15" fill="rgb(234,203,30)" fg:x="3397" fg:w="13"/><text x="83.7554%" y="415.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (1 samples, 0.02%)</title><rect x="83.8004%" y="389" width="0.0246%" height="15" fill="rgb(238,109,14)" fg:x="3409" fg:w="1"/><text x="84.0504%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (2 samples, 0.05%)</title><rect x="83.8250%" y="389" width="0.0492%" height="15" fill="rgb(233,206,34)" fg:x="3410" fg:w="2"/><text x="84.0750%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_blend_epi32 (3 samples, 0.07%)</title><rect x="83.8250%" y="405" width="0.0737%" height="15" fill="rgb(220,167,47)" fg:x="3410" fg:w="3"/><text x="84.0750%" y="415.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (1 samples, 0.02%)</title><rect x="83.8741%" y="389" width="0.0246%" height="15" fill="rgb(238,105,10)" fg:x="3412" fg:w="1"/><text x="84.1241%" y="399.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (1 samples, 0.02%)</title><rect x="83.8741%" y="373" width="0.0246%" height="15" fill="rgb(213,227,17)" fg:x="3412" fg:w="1"/><text x="84.1241%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (2 samples, 0.05%)</title><rect x="83.8987%" y="405" width="0.0492%" height="15" fill="rgb(217,132,38)" fg:x="3413" fg:w="2"/><text x="84.1487%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_blend_epi32 (1 samples, 0.02%)</title><rect x="83.9479%" y="389" width="0.0246%" height="15" fill="rgb(242,146,4)" fg:x="3415" fg:w="1"/><text x="84.1979%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.02%)</title><rect x="83.9725%" y="389" width="0.0246%" height="15" fill="rgb(212,61,9)" fg:x="3416" fg:w="1"/><text x="84.2225%" y="399.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.02%)</title><rect x="83.9725%" y="373" width="0.0246%" height="15" fill="rgb(247,126,22)" fg:x="3416" fg:w="1"/><text x="84.2225%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_or_si256 (3 samples, 0.07%)</title><rect x="83.9479%" y="405" width="0.0737%" height="15" fill="rgb(220,196,2)" fg:x="3415" fg:w="3"/><text x="84.1979%" y="415.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (1 samples, 0.02%)</title><rect x="83.9971%" y="389" width="0.0246%" height="15" fill="rgb(208,46,4)" fg:x="3417" fg:w="1"/><text x="84.2471%" y="399.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (1 samples, 0.02%)</title><rect x="83.9971%" y="373" width="0.0246%" height="15" fill="rgb(252,104,46)" fg:x="3417" fg:w="1"/><text x="84.2471%" y="383.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (1 samples, 0.02%)</title><rect x="84.0216%" y="389" width="0.0246%" height="15" fill="rgb(237,152,48)" fg:x="3418" fg:w="1"/><text x="84.2716%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.02%)</title><rect x="84.0462%" y="389" width="0.0246%" height="15" fill="rgb(221,59,37)" fg:x="3419" fg:w="1"/><text x="84.2962%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.02%)</title><rect x="84.0708%" y="389" width="0.0246%" height="15" fill="rgb(209,202,51)" fg:x="3420" fg:w="1"/><text x="84.3208%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (1 samples, 0.02%)</title><rect x="84.0954%" y="389" width="0.0246%" height="15" fill="rgb(228,81,30)" fg:x="3421" fg:w="1"/><text x="84.3454%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="84.1200%" y="389" width="0.0246%" height="15" fill="rgb(227,42,39)" fg:x="3422" fg:w="1"/><text x="84.3700%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (3 samples, 0.07%)</title><rect x="84.1445%" y="389" width="0.0737%" height="15" fill="rgb(221,26,2)" fg:x="3423" fg:w="3"/><text x="84.3945%" y="399.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (2 samples, 0.05%)</title><rect x="84.2183%" y="389" width="0.0492%" height="15" fill="rgb(254,61,31)" fg:x="3426" fg:w="2"/><text x="84.4683%" y="399.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (2 samples, 0.05%)</title><rect x="84.2183%" y="373" width="0.0492%" height="15" fill="rgb(222,173,38)" fg:x="3426" fg:w="2"/><text x="84.4683%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (11 samples, 0.27%)</title><rect x="84.0216%" y="405" width="0.2704%" height="15" fill="rgb(218,50,12)" fg:x="3418" fg:w="11"/><text x="84.2716%" y="415.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (1 samples, 0.02%)</title><rect x="84.2675%" y="389" width="0.0246%" height="15" fill="rgb(223,88,40)" fg:x="3428" fg:w="1"/><text x="84.5175%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi64 (1 samples, 0.02%)</title><rect x="84.2920%" y="405" width="0.0246%" height="15" fill="rgb(237,54,19)" fg:x="3429" fg:w="1"/><text x="84.5420%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (8 samples, 0.20%)</title><rect x="84.3166%" y="405" width="0.1967%" height="15" fill="rgb(251,129,25)" fg:x="3430" fg:w="8"/><text x="84.5666%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.02%)</title><rect x="84.4887%" y="389" width="0.0246%" height="15" fill="rgb(238,97,19)" fg:x="3437" fg:w="1"/><text x="84.7387%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.02%)</title><rect x="84.5133%" y="389" width="0.0246%" height="15" fill="rgb(240,169,18)" fg:x="3438" fg:w="1"/><text x="84.7633%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (2 samples, 0.05%)</title><rect x="84.5379%" y="389" width="0.0492%" height="15" fill="rgb(230,187,49)" fg:x="3439" fg:w="2"/><text x="84.7879%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="84.5870%" y="389" width="0.0246%" height="15" fill="rgb(209,44,26)" fg:x="3441" fg:w="1"/><text x="84.8370%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_unpackhi_epi64 (6 samples, 0.15%)</title><rect x="84.5133%" y="405" width="0.1475%" height="15" fill="rgb(244,0,6)" fg:x="3438" fg:w="6"/><text x="84.7633%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (2 samples, 0.05%)</title><rect x="84.6116%" y="389" width="0.0492%" height="15" fill="rgb(248,18,21)" fg:x="3442" fg:w="2"/><text x="84.8616%" y="399.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi64x (2 samples, 0.05%)</title><rect x="84.6608%" y="405" width="0.0492%" height="15" fill="rgb(245,180,19)" fg:x="3444" fg:w="2"/><text x="84.9108%" y="415.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi64x (1 samples, 0.02%)</title><rect x="84.6853%" y="389" width="0.0246%" height="15" fill="rgb(252,118,36)" fg:x="3445" fg:w="1"/><text x="84.9353%" y="399.50"></text></g><g><title>core::core_arch::simd::i64x4::new (1 samples, 0.02%)</title><rect x="84.6853%" y="373" width="0.0246%" height="15" fill="rgb(210,224,19)" fg:x="3445" fg:w="1"/><text x="84.9353%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (1 samples, 0.02%)</title><rect x="84.7099%" y="405" width="0.0246%" height="15" fill="rgb(218,30,24)" fg:x="3446" fg:w="1"/><text x="84.9599%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.02%)</title><rect x="84.7345%" y="405" width="0.0246%" height="15" fill="rgb(219,75,50)" fg:x="3447" fg:w="1"/><text x="84.9845%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (5 samples, 0.12%)</title><rect x="84.7591%" y="405" width="0.1229%" height="15" fill="rgb(234,72,50)" fg:x="3448" fg:w="5"/><text x="85.0091%" y="415.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (5 samples, 0.12%)</title><rect x="84.8820%" y="405" width="0.1229%" height="15" fill="rgb(219,100,48)" fg:x="3453" fg:w="5"/><text x="85.1320%" y="415.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (5 samples, 0.12%)</title><rect x="84.8820%" y="389" width="0.1229%" height="15" fill="rgb(253,5,41)" fg:x="3453" fg:w="5"/><text x="85.1320%" y="399.50"></text></g><g><title>poly1305::backend::avx2::helpers::SpacedMultiplier4x130::new (1 samples, 0.02%)</title><rect x="85.0049%" y="405" width="0.0246%" height="15" fill="rgb(247,181,11)" fg:x="3458" fg:w="1"/><text x="85.2549%" y="415.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::decrypt_in_place_detached (767 samples, 18.85%)</title><rect x="66.3963%" y="565" width="18.8545%" height="15" fill="rgb(222,223,25)" fg:x="2701" fg:w="767"/><text x="66.6463%" y="575.50">chacha20poly1305::cipher::Cip..</text></g><g><title>universal_hash::UniversalHash::update_padded (406 samples, 9.98%)</title><rect x="75.2704%" y="549" width="9.9803%" height="15" fill="rgb(214,198,28)" fg:x="3062" fg:w="406"/><text x="75.5204%" y="559.50">universal_hash..</text></g><g><title>universal_hash::UniversalHash::update (406 samples, 9.98%)</title><rect x="75.2704%" y="533" width="9.9803%" height="15" fill="rgb(230,46,43)" fg:x="3062" fg:w="406"/><text x="75.5204%" y="543.50">universal_hash..</text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (406 samples, 9.98%)</title><rect x="75.2704%" y="517" width="9.9803%" height="15" fill="rgb(233,65,53)" fg:x="3062" fg:w="406"/><text x="75.5204%" y="527.50">&lt;poly1305::Pol..</text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (406 samples, 9.98%)</title><rect x="75.2704%" y="501" width="9.9803%" height="15" fill="rgb(221,121,27)" fg:x="3062" fg:w="406"/><text x="75.5204%" y="511.50">&lt;poly1305::bac..</text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (406 samples, 9.98%)</title><rect x="75.2704%" y="485" width="9.9803%" height="15" fill="rgb(247,70,47)" fg:x="3062" fg:w="406"/><text x="75.5204%" y="495.50">&lt;universal_has..</text></g><g><title>&lt;poly1305::backend::avx2::State as universal_hash::UhfBackend&gt;::proc_par_blocks (405 samples, 9.96%)</title><rect x="75.2950%" y="469" width="9.9558%" height="15" fill="rgb(228,85,35)" fg:x="3063" fg:w="405"/><text x="75.5450%" y="479.50">&lt;poly1305::bac..</text></g><g><title>poly1305::backend::avx2::State::compute_par_blocks (405 samples, 9.96%)</title><rect x="75.2950%" y="453" width="9.9558%" height="15" fill="rgb(209,50,18)" fg:x="3063" fg:w="405"/><text x="75.5450%" y="463.50">poly1305::back..</text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_par_blocks (76 samples, 1.87%)</title><rect x="83.3825%" y="437" width="1.8682%" height="15" fill="rgb(250,19,35)" fg:x="3392" fg:w="76"/><text x="83.6325%" y="447.50">p..</text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_loaded_blocks (76 samples, 1.87%)</title><rect x="83.3825%" y="421" width="1.8682%" height="15" fill="rgb(253,107,29)" fg:x="3392" fg:w="76"/><text x="83.6325%" y="431.50">p..</text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (9 samples, 0.22%)</title><rect x="85.0295%" y="405" width="0.2212%" height="15" fill="rgb(252,179,29)" fg:x="3459" fg:w="9"/><text x="85.2795%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (1 samples, 0.02%)</title><rect x="85.2507%" y="517" width="0.0246%" height="15" fill="rgb(238,194,6)" fg:x="3468" fg:w="1"/><text x="85.5007%" y="527.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (2 samples, 0.05%)</title><rect x="85.2753%" y="517" width="0.0492%" height="15" fill="rgb(238,164,29)" fg:x="3469" fg:w="2"/><text x="85.5253%" y="527.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (2 samples, 0.05%)</title><rect x="85.2753%" y="501" width="0.0492%" height="15" fill="rgb(224,25,9)" fg:x="3469" fg:w="2"/><text x="85.5253%" y="511.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (2 samples, 0.05%)</title><rect x="85.2753%" y="485" width="0.0492%" height="15" fill="rgb(244,153,23)" fg:x="3469" fg:w="2"/><text x="85.5253%" y="495.50"></text></g><g><title>core::core_arch::simd::i8x32::new (1 samples, 0.02%)</title><rect x="85.2999%" y="469" width="0.0246%" height="15" fill="rgb(212,203,14)" fg:x="3470" fg:w="1"/><text x="85.5499%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.02%)</title><rect x="85.3245%" y="469" width="0.0246%" height="15" fill="rgb(220,164,20)" fg:x="3471" fg:w="1"/><text x="85.5745%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="85.3245%" y="453" width="0.0246%" height="15" fill="rgb(222,203,48)" fg:x="3471" fg:w="1"/><text x="85.5745%" y="463.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier as core::convert::From&lt;poly1305::backend::avx2::helpers::Aligned130&gt;&gt;::from (2 samples, 0.05%)</title><rect x="85.3245%" y="485" width="0.0492%" height="15" fill="rgb(215,159,22)" fg:x="3471" fg:w="2"/><text x="85.5745%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.02%)</title><rect x="85.3491%" y="469" width="0.0246%" height="15" fill="rgb(216,183,47)" fg:x="3472" fg:w="1"/><text x="85.5991%" y="479.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3 samples, 0.07%)</title><rect x="85.3245%" y="501" width="0.0737%" height="15" fill="rgb(229,195,25)" fg:x="3471" fg:w="3"/><text x="85.5745%" y="511.50"></text></g><g><title>poly1305::backend::avx2::State::new (1 samples, 0.02%)</title><rect x="85.3736%" y="485" width="0.0246%" height="15" fill="rgb(224,132,51)" fg:x="3473" fg:w="1"/><text x="85.6236%" y="495.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced130::reduce (1 samples, 0.02%)</title><rect x="85.3736%" y="469" width="0.0246%" height="15" fill="rgb(240,63,7)" fg:x="3473" fg:w="1"/><text x="85.6236%" y="479.50"></text></g><g><title>&lt;poly1305::Poly1305 as crypto_common::KeyInit&gt;::new (1 samples, 0.02%)</title><rect x="85.3982%" y="469" width="0.0246%" height="15" fill="rgb(249,182,41)" fg:x="3474" fg:w="1"/><text x="85.6482%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.02%)</title><rect x="85.4228%" y="469" width="0.0246%" height="15" fill="rgb(243,47,26)" fg:x="3475" fg:w="1"/><text x="85.6728%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.02%)</title><rect x="85.4228%" y="453" width="0.0246%" height="15" fill="rgb(233,48,2)" fg:x="3475" fg:w="1"/><text x="85.6728%" y="463.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_setzero_si128 (1 samples, 0.02%)</title><rect x="85.4228%" y="437" width="0.0246%" height="15" fill="rgb(244,165,34)" fg:x="3475" fg:w="1"/><text x="85.6728%" y="447.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi64x (1 samples, 0.02%)</title><rect x="85.4228%" y="421" width="0.0246%" height="15" fill="rgb(207,89,7)" fg:x="3475" fg:w="1"/><text x="85.6728%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi64x (1 samples, 0.02%)</title><rect x="85.4228%" y="405" width="0.0246%" height="15" fill="rgb(244,117,36)" fg:x="3475" fg:w="1"/><text x="85.6728%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (2 samples, 0.05%)</title><rect x="85.4474%" y="469" width="0.0492%" height="15" fill="rgb(226,144,34)" fg:x="3476" fg:w="2"/><text x="85.6974%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.02%)</title><rect x="85.4720%" y="453" width="0.0246%" height="15" fill="rgb(213,23,19)" fg:x="3477" fg:w="1"/><text x="85.7220%" y="463.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier as core::ops::arith::Mul&gt;::mul (5 samples, 0.12%)</title><rect x="85.3982%" y="501" width="0.1229%" height="15" fill="rgb(217,75,12)" fg:x="3474" fg:w="5"/><text x="85.6482%" y="511.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (5 samples, 0.12%)</title><rect x="85.3982%" y="485" width="0.1229%" height="15" fill="rgb(224,159,17)" fg:x="3474" fg:w="5"/><text x="85.6482%" y="495.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="85.4966%" y="469" width="0.0246%" height="15" fill="rgb(217,118,1)" fg:x="3478" fg:w="1"/><text x="85.7466%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="85.5211%" y="453" width="0.0246%" height="15" fill="rgb(232,180,48)" fg:x="3479" fg:w="1"/><text x="85.7711%" y="463.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.02%)</title><rect x="85.5457%" y="453" width="0.0246%" height="15" fill="rgb(230,27,33)" fg:x="3480" fg:w="1"/><text x="85.7957%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (3 samples, 0.07%)</title><rect x="85.5211%" y="469" width="0.0737%" height="15" fill="rgb(205,31,21)" fg:x="3479" fg:w="3"/><text x="85.7711%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.02%)</title><rect x="85.5703%" y="453" width="0.0246%" height="15" fill="rgb(253,59,4)" fg:x="3481" fg:w="1"/><text x="85.8203%" y="463.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.02%)</title><rect x="85.5949%" y="469" width="0.0246%" height="15" fill="rgb(224,201,9)" fg:x="3482" fg:w="1"/><text x="85.8449%" y="479.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.02%)</title><rect x="85.5949%" y="453" width="0.0246%" height="15" fill="rgb(229,206,30)" fg:x="3482" fg:w="1"/><text x="85.8449%" y="463.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.02%)</title><rect x="85.5949%" y="437" width="0.0246%" height="15" fill="rgb(212,67,47)" fg:x="3482" fg:w="1"/><text x="85.8449%" y="447.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced130::reduce (5 samples, 0.12%)</title><rect x="85.5211%" y="501" width="0.1229%" height="15" fill="rgb(211,96,50)" fg:x="3479" fg:w="5"/><text x="85.7711%" y="511.50"></text></g><g><title>poly1305::backend::avx2::helpers::adc (5 samples, 0.12%)</title><rect x="85.5211%" y="485" width="0.1229%" height="15" fill="rgb(252,114,18)" fg:x="3479" fg:w="5"/><text x="85.7711%" y="495.50"></text></g><g><title>poly1305::backend::avx2::State::new (1 samples, 0.02%)</title><rect x="85.6195%" y="469" width="0.0246%" height="15" fill="rgb(223,58,37)" fg:x="3483" fg:w="1"/><text x="85.8695%" y="479.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced130::reduce (1 samples, 0.02%)</title><rect x="85.6195%" y="453" width="0.0246%" height="15" fill="rgb(237,70,4)" fg:x="3483" fg:w="1"/><text x="85.8695%" y="463.50"></text></g><g><title>poly1305::backend::avx2::helpers::adc (1 samples, 0.02%)</title><rect x="85.6195%" y="437" width="0.0246%" height="15" fill="rgb(244,85,46)" fg:x="3483" fg:w="1"/><text x="85.8695%" y="447.50"></text></g><g><title>chacha20::backends::avx2::rounds (1 samples, 0.02%)</title><rect x="85.6441%" y="485" width="0.0246%" height="15" fill="rgb(223,39,52)" fg:x="3484" fg:w="1"/><text x="85.8941%" y="495.50"></text></g><g><title>&lt;poly1305::Poly1305 as crypto_common::KeyInit&gt;::new (18 samples, 0.44%)</title><rect x="85.2507%" y="549" width="0.4425%" height="15" fill="rgb(218,200,14)" fg:x="3468" fg:w="18"/><text x="85.5007%" y="559.50"></text></g><g><title>poly1305::backend::autodetect::State::new (18 samples, 0.44%)</title><rect x="85.2507%" y="533" width="0.4425%" height="15" fill="rgb(208,171,16)" fg:x="3468" fg:w="18"/><text x="85.5007%" y="543.50"></text></g><g><title>poly1305::backend::avx2::State::new (15 samples, 0.37%)</title><rect x="85.3245%" y="517" width="0.3687%" height="15" fill="rgb(234,200,18)" fg:x="3471" fg:w="15"/><text x="85.5745%" y="527.50"></text></g><g><title>poly1305::backend::avx2::helpers::prepare_keys (2 samples, 0.05%)</title><rect x="85.6441%" y="501" width="0.0492%" height="15" fill="rgb(228,45,11)" fg:x="3484" fg:w="2"/><text x="85.8941%" y="511.50"></text></g><g><title>poly1305::backend::avx2::helpers::Aligned130::new (1 samples, 0.02%)</title><rect x="85.6686%" y="485" width="0.0246%" height="15" fill="rgb(237,182,11)" fg:x="3485" fg:w="1"/><text x="85.9186%" y="495.50"></text></g><g><title>chacha20::backends::avx2::inner (1 samples, 0.02%)</title><rect x="85.6686%" y="469" width="0.0246%" height="15" fill="rgb(241,175,49)" fg:x="3485" fg:w="1"/><text x="85.9186%" y="479.50"></text></g><g><title>&lt;cipher::stream_core::WriteBlockCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (1 samples, 0.02%)</title><rect x="85.6686%" y="453" width="0.0246%" height="15" fill="rgb(247,38,35)" fg:x="3485" fg:w="1"/><text x="85.9186%" y="463.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (1 samples, 0.02%)</title><rect x="85.6686%" y="437" width="0.0246%" height="15" fill="rgb(228,39,49)" fg:x="3485" fg:w="1"/><text x="85.9186%" y="447.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.02%)</title><rect x="85.6932%" y="389" width="0.0246%" height="15" fill="rgb(226,101,26)" fg:x="3486" fg:w="1"/><text x="85.9432%" y="399.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.07%)</title><rect x="85.8161%" y="357" width="0.0737%" height="15" fill="rgb(206,141,19)" fg:x="3491" fg:w="3"/><text x="86.0661%" y="367.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.07%)</title><rect x="85.8161%" y="341" width="0.0737%" height="15" fill="rgb(211,200,13)" fg:x="3491" fg:w="3"/><text x="86.0661%" y="351.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (11 samples, 0.27%)</title><rect x="85.8899%" y="357" width="0.2704%" height="15" fill="rgb(241,121,6)" fg:x="3494" fg:w="11"/><text x="86.1399%" y="367.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (2 samples, 0.05%)</title><rect x="86.1603%" y="357" width="0.0492%" height="15" fill="rgb(234,221,29)" fg:x="3505" fg:w="2"/><text x="86.4103%" y="367.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (1 samples, 0.02%)</title><rect x="86.2586%" y="341" width="0.0246%" height="15" fill="rgb(229,136,5)" fg:x="3509" fg:w="1"/><text x="86.5086%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.02%)</title><rect x="86.2832%" y="341" width="0.0246%" height="15" fill="rgb(238,36,11)" fg:x="3510" fg:w="1"/><text x="86.5332%" y="351.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.02%)</title><rect x="86.3078%" y="341" width="0.0246%" height="15" fill="rgb(251,55,41)" fg:x="3511" fg:w="1"/><text x="86.5578%" y="351.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (2 samples, 0.05%)</title><rect x="86.3324%" y="341" width="0.0492%" height="15" fill="rgb(242,34,40)" fg:x="3512" fg:w="2"/><text x="86.5824%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (8 samples, 0.20%)</title><rect x="86.2094%" y="357" width="0.1967%" height="15" fill="rgb(215,42,17)" fg:x="3507" fg:w="8"/><text x="86.4594%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.02%)</title><rect x="86.3815%" y="341" width="0.0246%" height="15" fill="rgb(207,44,46)" fg:x="3514" fg:w="1"/><text x="86.6315%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (2 samples, 0.05%)</title><rect x="86.4061%" y="357" width="0.0492%" height="15" fill="rgb(211,206,28)" fg:x="3515" fg:w="2"/><text x="86.6561%" y="367.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.02%)</title><rect x="86.5536%" y="341" width="0.0246%" height="15" fill="rgb(237,167,16)" fg:x="3521" fg:w="1"/><text x="86.8036%" y="351.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (1 samples, 0.02%)</title><rect x="86.5782%" y="341" width="0.0246%" height="15" fill="rgb(233,66,6)" fg:x="3522" fg:w="1"/><text x="86.8282%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.02%)</title><rect x="86.6028%" y="341" width="0.0246%" height="15" fill="rgb(246,123,29)" fg:x="3523" fg:w="1"/><text x="86.8528%" y="351.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.02%)</title><rect x="86.6028%" y="325" width="0.0246%" height="15" fill="rgb(209,62,40)" fg:x="3523" fg:w="1"/><text x="86.8528%" y="335.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (8 samples, 0.20%)</title><rect x="86.4553%" y="357" width="0.1967%" height="15" fill="rgb(218,4,25)" fg:x="3517" fg:w="8"/><text x="86.7053%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.02%)</title><rect x="86.6273%" y="341" width="0.0246%" height="15" fill="rgb(253,91,49)" fg:x="3524" fg:w="1"/><text x="86.8773%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect x="86.6765%" y="341" width="0.0246%" height="15" fill="rgb(228,155,29)" fg:x="3526" fg:w="1"/><text x="86.9265%" y="351.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.02%)</title><rect x="86.7011%" y="341" width="0.0246%" height="15" fill="rgb(243,57,37)" fg:x="3527" fg:w="1"/><text x="86.9511%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (5 samples, 0.12%)</title><rect x="86.6519%" y="357" width="0.1229%" height="15" fill="rgb(244,167,17)" fg:x="3525" fg:w="5"/><text x="86.9019%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (2 samples, 0.05%)</title><rect x="86.7257%" y="341" width="0.0492%" height="15" fill="rgb(207,181,38)" fg:x="3528" fg:w="2"/><text x="86.9757%" y="351.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.02%)</title><rect x="86.7994%" y="341" width="0.0246%" height="15" fill="rgb(211,8,23)" fg:x="3531" fg:w="1"/><text x="87.0494%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (3 samples, 0.07%)</title><rect x="86.7748%" y="357" width="0.0737%" height="15" fill="rgb(235,11,44)" fg:x="3530" fg:w="3"/><text x="87.0248%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.02%)</title><rect x="86.8240%" y="341" width="0.0246%" height="15" fill="rgb(248,18,52)" fg:x="3532" fg:w="1"/><text x="87.0740%" y="351.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.02%)</title><rect x="87.0206%" y="341" width="0.0246%" height="15" fill="rgb(208,4,7)" fg:x="3540" fg:w="1"/><text x="87.2706%" y="351.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi64x (1 samples, 0.02%)</title><rect x="87.0206%" y="325" width="0.0246%" height="15" fill="rgb(240,17,39)" fg:x="3540" fg:w="1"/><text x="87.2706%" y="335.50"></text></g><g><title>core::core_arch::simd::i64x4::new (1 samples, 0.02%)</title><rect x="87.0206%" y="309" width="0.0246%" height="15" fill="rgb(207,170,3)" fg:x="3540" fg:w="1"/><text x="87.2706%" y="319.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.02%)</title><rect x="87.0452%" y="341" width="0.0246%" height="15" fill="rgb(236,100,52)" fg:x="3541" fg:w="1"/><text x="87.2952%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (10 samples, 0.25%)</title><rect x="86.8486%" y="357" width="0.2458%" height="15" fill="rgb(246,78,51)" fg:x="3533" fg:w="10"/><text x="87.0986%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.02%)</title><rect x="87.0698%" y="341" width="0.0246%" height="15" fill="rgb(211,17,15)" fg:x="3542" fg:w="1"/><text x="87.3198%" y="351.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.02%)</title><rect x="87.0944%" y="357" width="0.0246%" height="15" fill="rgb(209,59,46)" fg:x="3543" fg:w="1"/><text x="87.3444%" y="367.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi64x (1 samples, 0.02%)</title><rect x="87.0944%" y="341" width="0.0246%" height="15" fill="rgb(210,92,25)" fg:x="3543" fg:w="1"/><text x="87.3444%" y="351.50"></text></g><g><title>core::core_arch::simd::i64x4::new (1 samples, 0.02%)</title><rect x="87.0944%" y="325" width="0.0246%" height="15" fill="rgb(238,174,52)" fg:x="3543" fg:w="1"/><text x="87.3444%" y="335.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.02%)</title><rect x="87.1190%" y="357" width="0.0246%" height="15" fill="rgb(230,73,7)" fg:x="3544" fg:w="1"/><text x="87.3690%" y="367.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.02%)</title><rect x="87.1190%" y="341" width="0.0246%" height="15" fill="rgb(243,124,40)" fg:x="3544" fg:w="1"/><text x="87.3690%" y="351.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.02%)</title><rect x="87.1190%" y="325" width="0.0246%" height="15" fill="rgb(244,170,11)" fg:x="3544" fg:w="1"/><text x="87.3690%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (5 samples, 0.12%)</title><rect x="87.1436%" y="357" width="0.1229%" height="15" fill="rgb(207,114,54)" fg:x="3545" fg:w="5"/><text x="87.3936%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (5 samples, 0.12%)</title><rect x="87.2665%" y="357" width="0.1229%" height="15" fill="rgb(205,42,20)" fg:x="3550" fg:w="5"/><text x="87.5165%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.02%)</title><rect x="87.3894%" y="357" width="0.0246%" height="15" fill="rgb(230,30,28)" fg:x="3555" fg:w="1"/><text x="87.6394%" y="367.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (82 samples, 2.02%)</title><rect x="85.7178%" y="373" width="2.0157%" height="15" fill="rgb(205,73,54)" fg:x="3487" fg:w="82"/><text x="85.9678%" y="383.50">c..</text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (13 samples, 0.32%)</title><rect x="87.4140%" y="357" width="0.3196%" height="15" fill="rgb(254,227,23)" fg:x="3556" fg:w="13"/><text x="87.6640%" y="367.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.02%)</title><rect x="87.7581%" y="357" width="0.0246%" height="15" fill="rgb(228,202,34)" fg:x="3570" fg:w="1"/><text x="88.0081%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (2 samples, 0.05%)</title><rect x="87.7827%" y="357" width="0.0492%" height="15" fill="rgb(222,225,37)" fg:x="3571" fg:w="2"/><text x="88.0327%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.02%)</title><rect x="87.8319%" y="357" width="0.0246%" height="15" fill="rgb(221,14,54)" fg:x="3573" fg:w="1"/><text x="88.0819%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.02%)</title><rect x="87.8319%" y="341" width="0.0246%" height="15" fill="rgb(254,102,2)" fg:x="3573" fg:w="1"/><text x="88.0819%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect x="87.8564%" y="357" width="0.0246%" height="15" fill="rgb(232,104,17)" fg:x="3574" fg:w="1"/><text x="88.1064%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.02%)</title><rect x="87.8810%" y="357" width="0.0246%" height="15" fill="rgb(250,220,14)" fg:x="3575" fg:w="1"/><text x="88.1310%" y="367.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.02%)</title><rect x="87.8810%" y="341" width="0.0246%" height="15" fill="rgb(241,158,9)" fg:x="3575" fg:w="1"/><text x="88.1310%" y="351.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (9 samples, 0.22%)</title><rect x="87.7335%" y="373" width="0.2212%" height="15" fill="rgb(246,9,43)" fg:x="3569" fg:w="9"/><text x="87.9835%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (2 samples, 0.05%)</title><rect x="87.9056%" y="357" width="0.0492%" height="15" fill="rgb(206,73,33)" fg:x="3576" fg:w="2"/><text x="88.1556%" y="367.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.02%)</title><rect x="87.9794%" y="357" width="0.0246%" height="15" fill="rgb(222,79,8)" fg:x="3579" fg:w="1"/><text x="88.2294%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.02%)</title><rect x="88.0039%" y="357" width="0.0246%" height="15" fill="rgb(234,8,54)" fg:x="3580" fg:w="1"/><text x="88.2539%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect x="88.0285%" y="341" width="0.0246%" height="15" fill="rgb(209,134,38)" fg:x="3581" fg:w="1"/><text x="88.2785%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (2 samples, 0.05%)</title><rect x="88.0285%" y="357" width="0.0492%" height="15" fill="rgb(230,127,29)" fg:x="3581" fg:w="2"/><text x="88.2785%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.02%)</title><rect x="88.0531%" y="341" width="0.0246%" height="15" fill="rgb(242,44,41)" fg:x="3582" fg:w="1"/><text x="88.3031%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.02%)</title><rect x="88.0777%" y="357" width="0.0246%" height="15" fill="rgb(222,56,43)" fg:x="3583" fg:w="1"/><text x="88.3277%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (2 samples, 0.05%)</title><rect x="88.1023%" y="357" width="0.0492%" height="15" fill="rgb(238,39,47)" fg:x="3584" fg:w="2"/><text x="88.3523%" y="367.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (9 samples, 0.22%)</title><rect x="87.9548%" y="373" width="0.2212%" height="15" fill="rgb(226,79,43)" fg:x="3578" fg:w="9"/><text x="88.2048%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.02%)</title><rect x="88.1514%" y="357" width="0.0246%" height="15" fill="rgb(242,105,53)" fg:x="3586" fg:w="1"/><text x="88.4014%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (2 samples, 0.05%)</title><rect x="88.1760%" y="373" width="0.0492%" height="15" fill="rgb(251,132,46)" fg:x="3587" fg:w="2"/><text x="88.4260%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect x="88.2252%" y="373" width="0.0246%" height="15" fill="rgb(231,77,14)" fg:x="3589" fg:w="1"/><text x="88.4752%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (6 samples, 0.15%)</title><rect x="88.2498%" y="373" width="0.1475%" height="15" fill="rgb(240,135,9)" fg:x="3590" fg:w="6"/><text x="88.4998%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.02%)</title><rect x="88.3972%" y="373" width="0.0246%" height="15" fill="rgb(248,109,14)" fg:x="3596" fg:w="1"/><text x="88.6472%" y="383.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (111 samples, 2.73%)</title><rect x="85.7178%" y="389" width="2.7286%" height="15" fill="rgb(227,146,52)" fg:x="3487" fg:w="111"/><text x="85.9678%" y="399.50">ch..</text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.02%)</title><rect x="88.4218%" y="373" width="0.0246%" height="15" fill="rgb(232,54,3)" fg:x="3597" fg:w="1"/><text x="88.6718%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect x="88.4464%" y="389" width="0.0246%" height="15" fill="rgb(229,201,43)" fg:x="3598" fg:w="1"/><text x="88.6964%" y="399.50"></text></g><g><title>chacha20::backends::avx2::inner (114 samples, 2.80%)</title><rect x="85.6932%" y="453" width="2.8024%" height="15" fill="rgb(252,161,33)" fg:x="3486" fg:w="114"/><text x="85.9432%" y="463.50">ch..</text></g><g><title>&lt;cipher::stream_core::WriteBlockCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (114 samples, 2.80%)</title><rect x="85.6932%" y="437" width="2.8024%" height="15" fill="rgb(226,146,40)" fg:x="3486" fg:w="114"/><text x="85.9432%" y="447.50">&lt;c..</text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (114 samples, 2.80%)</title><rect x="85.6932%" y="421" width="2.8024%" height="15" fill="rgb(219,47,25)" fg:x="3486" fg:w="114"/><text x="85.9432%" y="431.50">&lt;c..</text></g><g><title>chacha20::backends::avx2::rounds (114 samples, 2.80%)</title><rect x="85.6932%" y="405" width="2.8024%" height="15" fill="rgb(250,135,13)" fg:x="3486" fg:w="114"/><text x="85.9432%" y="415.50">ch..</text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.02%)</title><rect x="88.4710%" y="389" width="0.0246%" height="15" fill="rgb(219,229,18)" fg:x="3599" fg:w="1"/><text x="88.7210%" y="399.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (133 samples, 3.27%)</title><rect x="85.2507%" y="565" width="3.2694%" height="15" fill="rgb(217,152,27)" fg:x="3468" fg:w="133"/><text x="85.5007%" y="575.50">cha..</text></g><g><title>cipher::stream::StreamCipher::apply_keystream (115 samples, 2.83%)</title><rect x="85.6932%" y="549" width="2.8269%" height="15" fill="rgb(225,71,47)" fg:x="3486" fg:w="115"/><text x="85.9432%" y="559.50">ci..</text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (115 samples, 2.83%)</title><rect x="85.6932%" y="533" width="2.8269%" height="15" fill="rgb(220,139,14)" fg:x="3486" fg:w="115"/><text x="85.9432%" y="543.50">ci..</text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (115 samples, 2.83%)</title><rect x="85.6932%" y="517" width="2.8269%" height="15" fill="rgb(247,54,32)" fg:x="3486" fg:w="115"/><text x="85.9432%" y="527.50">&lt;c..</text></g><g><title>cipher::stream_core::StreamCipherCore::write_keystream_block (115 samples, 2.83%)</title><rect x="85.6932%" y="501" width="2.8269%" height="15" fill="rgb(252,131,39)" fg:x="3486" fg:w="115"/><text x="85.9432%" y="511.50">ci..</text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (115 samples, 2.83%)</title><rect x="85.6932%" y="485" width="2.8269%" height="15" fill="rgb(210,108,39)" fg:x="3486" fg:w="115"/><text x="85.9432%" y="495.50">&lt;c..</text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (115 samples, 2.83%)</title><rect x="85.6932%" y="469" width="2.8269%" height="15" fill="rgb(205,23,29)" fg:x="3486" fg:w="115"/><text x="85.9432%" y="479.50">&lt;c..</text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.02%)</title><rect x="88.4956%" y="453" width="0.0246%" height="15" fill="rgb(246,139,46)" fg:x="3600" fg:w="1"/><text x="88.7456%" y="463.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (2 samples, 0.05%)</title><rect x="88.5202%" y="565" width="0.0492%" height="15" fill="rgb(250,81,26)" fg:x="3601" fg:w="2"/><text x="88.7702%" y="575.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (1 samples, 0.02%)</title><rect x="88.5693%" y="565" width="0.0246%" height="15" fill="rgb(214,104,7)" fg:x="3603" fg:w="1"/><text x="88.8193%" y="575.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (2 samples, 0.05%)</title><rect x="88.5939%" y="565" width="0.0492%" height="15" fill="rgb(233,189,8)" fg:x="3604" fg:w="2"/><text x="88.8439%" y="575.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (1 samples, 0.02%)</title><rect x="88.6431%" y="565" width="0.0246%" height="15" fill="rgb(228,141,17)" fg:x="3606" fg:w="1"/><text x="88.8931%" y="575.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi32 (1 samples, 0.02%)</title><rect x="88.6676%" y="565" width="0.0246%" height="15" fill="rgb(247,157,1)" fg:x="3607" fg:w="1"/><text x="88.9176%" y="575.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (1 samples, 0.02%)</title><rect x="88.6922%" y="565" width="0.0246%" height="15" fill="rgb(249,225,5)" fg:x="3608" fg:w="1"/><text x="88.9422%" y="575.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi64x (1 samples, 0.02%)</title><rect x="88.6922%" y="549" width="0.0246%" height="15" fill="rgb(242,55,13)" fg:x="3608" fg:w="1"/><text x="88.9422%" y="559.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (2 samples, 0.05%)</title><rect x="88.7168%" y="565" width="0.0492%" height="15" fill="rgb(230,49,50)" fg:x="3609" fg:w="2"/><text x="88.9668%" y="575.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (2 samples, 0.05%)</title><rect x="88.7168%" y="549" width="0.0492%" height="15" fill="rgb(241,111,38)" fg:x="3609" fg:w="2"/><text x="88.9668%" y="559.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (2 samples, 0.05%)</title><rect x="88.7168%" y="533" width="0.0492%" height="15" fill="rgb(252,155,4)" fg:x="3609" fg:w="2"/><text x="88.9668%" y="543.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.05%)</title><rect x="88.7660%" y="565" width="0.0492%" height="15" fill="rgb(212,69,32)" fg:x="3611" fg:w="2"/><text x="89.0160%" y="575.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="88.8151%" y="565" width="0.0246%" height="15" fill="rgb(243,107,47)" fg:x="3613" fg:w="1"/><text x="89.0651%" y="575.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (940 samples, 23.11%)</title><rect x="65.7571%" y="581" width="23.1072%" height="15" fill="rgb(247,130,12)" fg:x="2675" fg:w="940"/><text x="66.0071%" y="591.50">&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N..</text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (1 samples, 0.02%)</title><rect x="88.8397%" y="565" width="0.0246%" height="15" fill="rgb(233,74,16)" fg:x="3614" fg:w="1"/><text x="89.0897%" y="575.50"></text></g><g><title>tftp::encryption::Encryptor&lt;R&gt;::decrypt (945 samples, 23.23%)</title><rect x="65.6588%" y="597" width="23.2301%" height="15" fill="rgb(208,58,18)" fg:x="2671" fg:w="945"/><text x="65.9088%" y="607.50">tftp::encryption::Encryptor&lt;R&gt;::decry..</text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="88.8643%" y="581" width="0.0246%" height="15" fill="rgb(242,225,1)" fg:x="3615" fg:w="1"/><text x="89.1143%" y="591.50"></text></g><g><title>&lt;tftp::client::encryption_socket::EncryptionBoundSocket&lt;S,Rng&gt; as tftp::socket::Socket&gt;::recv_from (978 samples, 24.04%)</title><rect x="64.8722%" y="629" width="24.0413%" height="15" fill="rgb(249,39,40)" fg:x="2639" fg:w="978"/><text x="65.1222%" y="639.50">&lt;tftp::client::encryption_socket::Encr..</text></g><g><title>tftp::encrypted_packet::EncryptedPacket::decrypt (946 samples, 23.25%)</title><rect x="65.6588%" y="613" width="23.2547%" height="15" fill="rgb(207,72,44)" fg:x="2671" fg:w="946"/><text x="65.9088%" y="623.50">tftp::encrypted_packet::EncryptedPack..</text></g><g><title>tftp::encryption::remove_bit_padding (1 samples, 0.02%)</title><rect x="88.8889%" y="597" width="0.0246%" height="15" fill="rgb(215,193,12)" fg:x="3616" fg:w="1"/><text x="89.1389%" y="607.50"></text></g><g><title>core::ptr::write_volatile (1 samples, 0.02%)</title><rect x="88.8889%" y="581" width="0.0246%" height="15" fill="rgb(248,41,39)" fg:x="3616" fg:w="1"/><text x="89.1389%" y="591.50"></text></g><g><title>ip_route_output_flow (2 samples, 0.05%)</title><rect x="88.9135%" y="453" width="0.0492%" height="15" fill="rgb(253,85,4)" fg:x="3617" fg:w="2"/><text x="89.1635%" y="463.50"></text></g><g><title>ip_route_output_key_hash_rcu (2 samples, 0.05%)</title><rect x="88.9135%" y="437" width="0.0492%" height="15" fill="rgb(243,70,31)" fg:x="3617" fg:w="2"/><text x="89.1635%" y="447.50"></text></g><g><title>fib_table_lookup (2 samples, 0.05%)</title><rect x="88.9135%" y="421" width="0.0492%" height="15" fill="rgb(253,195,26)" fg:x="3617" fg:w="2"/><text x="89.1635%" y="431.50"></text></g><g><title>fib_lookup_good_nhc (2 samples, 0.05%)</title><rect x="88.9135%" y="405" width="0.0492%" height="15" fill="rgb(243,42,11)" fg:x="3617" fg:w="2"/><text x="89.1635%" y="415.50"></text></g><g><title>__ip_finish_output (1 samples, 0.02%)</title><rect x="88.9626%" y="421" width="0.0246%" height="15" fill="rgb(239,66,17)" fg:x="3619" fg:w="1"/><text x="89.2126%" y="431.50"></text></g><g><title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="88.9872%" y="389" width="0.0246%" height="15" fill="rgb(217,132,21)" fg:x="3620" fg:w="1"/><text x="89.2372%" y="399.50"></text></g><g><title>loopback_xmit (1 samples, 0.02%)</title><rect x="88.9872%" y="373" width="0.0246%" height="15" fill="rgb(252,202,21)" fg:x="3620" fg:w="1"/><text x="89.2372%" y="383.50"></text></g><g><title>sock_wfree (1 samples, 0.02%)</title><rect x="88.9872%" y="357" width="0.0246%" height="15" fill="rgb(233,98,36)" fg:x="3620" fg:w="1"/><text x="89.2372%" y="367.50"></text></g><g><title>__dev_queue_xmit (2 samples, 0.05%)</title><rect x="88.9872%" y="405" width="0.0492%" height="15" fill="rgb(216,153,54)" fg:x="3620" fg:w="2"/><text x="89.2372%" y="415.50"></text></g><g><title>validate_xmit_skb (1 samples, 0.02%)</title><rect x="89.0118%" y="389" width="0.0246%" height="15" fill="rgb(250,99,7)" fg:x="3621" fg:w="1"/><text x="89.2618%" y="399.50"></text></g><g><title>__netif_receive_skb_core.constprop.0 (1 samples, 0.02%)</title><rect x="89.0364%" y="293" width="0.0246%" height="15" fill="rgb(207,56,50)" fg:x="3622" fg:w="1"/><text x="89.2864%" y="303.50"></text></g><g><title>ip_local_deliver (1 samples, 0.02%)</title><rect x="89.0610%" y="293" width="0.0246%" height="15" fill="rgb(244,61,34)" fg:x="3623" fg:w="1"/><text x="89.3110%" y="303.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.02%)</title><rect x="89.0610%" y="277" width="0.0246%" height="15" fill="rgb(241,50,38)" fg:x="3623" fg:w="1"/><text x="89.3110%" y="287.50"></text></g><g><title>__wake_up_common_lock (3 samples, 0.07%)</title><rect x="89.0855%" y="133" width="0.0737%" height="15" fill="rgb(212,166,30)" fg:x="3624" fg:w="3"/><text x="89.3355%" y="143.50"></text></g><g><title>__wake_up_common (3 samples, 0.07%)</title><rect x="89.0855%" y="117" width="0.0737%" height="15" fill="rgb(249,127,32)" fg:x="3624" fg:w="3"/><text x="89.3355%" y="127.50"></text></g><g><title>ep_autoremove_wake_function (1 samples, 0.02%)</title><rect x="89.1347%" y="101" width="0.0246%" height="15" fill="rgb(209,103,0)" fg:x="3626" fg:w="1"/><text x="89.3847%" y="111.50"></text></g><g><title>try_to_wake_up (1 samples, 0.02%)</title><rect x="89.1347%" y="85" width="0.0246%" height="15" fill="rgb(238,209,51)" fg:x="3626" fg:w="1"/><text x="89.3847%" y="95.50"></text></g><g><title>ttwu_queue_wakelist (1 samples, 0.02%)</title><rect x="89.1347%" y="69" width="0.0246%" height="15" fill="rgb(237,56,23)" fg:x="3626" fg:w="1"/><text x="89.3847%" y="79.50"></text></g><g><title>default_send_IPI_single_phys (1 samples, 0.02%)</title><rect x="89.1347%" y="53" width="0.0246%" height="15" fill="rgb(215,153,46)" fg:x="3626" fg:w="1"/><text x="89.3847%" y="63.50"></text></g><g><title>__default_send_IPI_dest_field (1 samples, 0.02%)</title><rect x="89.1347%" y="37" width="0.0246%" height="15" fill="rgb(224,49,31)" fg:x="3626" fg:w="1"/><text x="89.3847%" y="47.50"></text></g><g><title>_raw_read_lock_irqsave (1 samples, 0.02%)</title><rect x="89.1593%" y="133" width="0.0246%" height="15" fill="rgb(250,18,42)" fg:x="3627" fg:w="1"/><text x="89.4093%" y="143.50"></text></g><g><title>&lt;tftp::socket::UdpUnboundSocket as tftp::socket::Socket&gt;::send_to (12 samples, 0.29%)</title><rect x="88.9135%" y="613" width="0.2950%" height="15" fill="rgb(215,176,39)" fg:x="3617" fg:w="12"/><text x="89.1635%" y="623.50"></text></g><g><title>std::net::udp::UdpSocket::send_to (12 samples, 0.29%)</title><rect x="88.9135%" y="597" width="0.2950%" height="15" fill="rgb(223,77,29)" fg:x="3617" fg:w="12"/><text x="89.1635%" y="607.50"></text></g><g><title>std::sys_common::net::UdpSocket::send_to (12 samples, 0.29%)</title><rect x="88.9135%" y="581" width="0.2950%" height="15" fill="rgb(234,94,52)" fg:x="3617" fg:w="12"/><text x="89.1635%" y="591.50"></text></g><g><title>__libc_sendto (12 samples, 0.29%)</title><rect x="88.9135%" y="565" width="0.2950%" height="15" fill="rgb(220,154,50)" fg:x="3617" fg:w="12"/><text x="89.1635%" y="575.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (12 samples, 0.29%)</title><rect x="88.9135%" y="549" width="0.2950%" height="15" fill="rgb(212,11,10)" fg:x="3617" fg:w="12"/><text x="89.1635%" y="559.50"></text></g><g><title>do_syscall_64 (12 samples, 0.29%)</title><rect x="88.9135%" y="533" width="0.2950%" height="15" fill="rgb(205,166,19)" fg:x="3617" fg:w="12"/><text x="89.1635%" y="543.50"></text></g><g><title>__x64_sys_sendto (12 samples, 0.29%)</title><rect x="88.9135%" y="517" width="0.2950%" height="15" fill="rgb(244,198,16)" fg:x="3617" fg:w="12"/><text x="89.1635%" y="527.50"></text></g><g><title>__sys_sendto (12 samples, 0.29%)</title><rect x="88.9135%" y="501" width="0.2950%" height="15" fill="rgb(219,69,12)" fg:x="3617" fg:w="12"/><text x="89.1635%" y="511.50"></text></g><g><title>sock_sendmsg (12 samples, 0.29%)</title><rect x="88.9135%" y="485" width="0.2950%" height="15" fill="rgb(245,30,7)" fg:x="3617" fg:w="12"/><text x="89.1635%" y="495.50"></text></g><g><title>udp_sendmsg (12 samples, 0.29%)</title><rect x="88.9135%" y="469" width="0.2950%" height="15" fill="rgb(218,221,48)" fg:x="3617" fg:w="12"/><text x="89.1635%" y="479.50"></text></g><g><title>udp_send_skb (10 samples, 0.25%)</title><rect x="88.9626%" y="453" width="0.2458%" height="15" fill="rgb(216,66,15)" fg:x="3619" fg:w="10"/><text x="89.2126%" y="463.50"></text></g><g><title>ip_send_skb (10 samples, 0.25%)</title><rect x="88.9626%" y="437" width="0.2458%" height="15" fill="rgb(226,122,50)" fg:x="3619" fg:w="10"/><text x="89.2126%" y="447.50"></text></g><g><title>ip_finish_output2 (9 samples, 0.22%)</title><rect x="88.9872%" y="421" width="0.2212%" height="15" fill="rgb(239,156,16)" fg:x="3620" fg:w="9"/><text x="89.2372%" y="431.50"></text></g><g><title>__local_bh_enable_ip (7 samples, 0.17%)</title><rect x="89.0364%" y="405" width="0.1721%" height="15" fill="rgb(224,27,38)" fg:x="3622" fg:w="7"/><text x="89.2864%" y="415.50"></text></g><g><title>do_softirq.part.0 (7 samples, 0.17%)</title><rect x="89.0364%" y="389" width="0.1721%" height="15" fill="rgb(224,39,27)" fg:x="3622" fg:w="7"/><text x="89.2864%" y="399.50"></text></g><g><title>__do_softirq (7 samples, 0.17%)</title><rect x="89.0364%" y="373" width="0.1721%" height="15" fill="rgb(215,92,29)" fg:x="3622" fg:w="7"/><text x="89.2864%" y="383.50"></text></g><g><title>net_rx_action (7 samples, 0.17%)</title><rect x="89.0364%" y="357" width="0.1721%" height="15" fill="rgb(207,159,16)" fg:x="3622" fg:w="7"/><text x="89.2864%" y="367.50"></text></g><g><title>__napi_poll (7 samples, 0.17%)</title><rect x="89.0364%" y="341" width="0.1721%" height="15" fill="rgb(238,163,47)" fg:x="3622" fg:w="7"/><text x="89.2864%" y="351.50"></text></g><g><title>process_backlog (7 samples, 0.17%)</title><rect x="89.0364%" y="325" width="0.1721%" height="15" fill="rgb(219,91,49)" fg:x="3622" fg:w="7"/><text x="89.2864%" y="335.50"></text></g><g><title>__netif_receive_skb_one_core (7 samples, 0.17%)</title><rect x="89.0364%" y="309" width="0.1721%" height="15" fill="rgb(227,167,31)" fg:x="3622" fg:w="7"/><text x="89.2864%" y="319.50"></text></g><g><title>ip_local_deliver_finish (5 samples, 0.12%)</title><rect x="89.0855%" y="293" width="0.1229%" height="15" fill="rgb(234,80,54)" fg:x="3624" fg:w="5"/><text x="89.3355%" y="303.50"></text></g><g><title>ip_protocol_deliver_rcu (5 samples, 0.12%)</title><rect x="89.0855%" y="277" width="0.1229%" height="15" fill="rgb(212,114,2)" fg:x="3624" fg:w="5"/><text x="89.3355%" y="287.50"></text></g><g><title>__udp4_lib_rcv (5 samples, 0.12%)</title><rect x="89.0855%" y="261" width="0.1229%" height="15" fill="rgb(234,50,24)" fg:x="3624" fg:w="5"/><text x="89.3355%" y="271.50"></text></g><g><title>udp_unicast_rcv_skb (5 samples, 0.12%)</title><rect x="89.0855%" y="245" width="0.1229%" height="15" fill="rgb(221,68,8)" fg:x="3624" fg:w="5"/><text x="89.3355%" y="255.50"></text></g><g><title>udp_queue_rcv_one_skb (5 samples, 0.12%)</title><rect x="89.0855%" y="229" width="0.1229%" height="15" fill="rgb(254,180,31)" fg:x="3624" fg:w="5"/><text x="89.3355%" y="239.50"></text></g><g><title>__udp_enqueue_schedule_skb (5 samples, 0.12%)</title><rect x="89.0855%" y="213" width="0.1229%" height="15" fill="rgb(247,130,50)" fg:x="3624" fg:w="5"/><text x="89.3355%" y="223.50"></text></g><g><title>sock_def_readable (5 samples, 0.12%)</title><rect x="89.0855%" y="197" width="0.1229%" height="15" fill="rgb(211,109,4)" fg:x="3624" fg:w="5"/><text x="89.3355%" y="207.50"></text></g><g><title>__wake_up_common_lock (5 samples, 0.12%)</title><rect x="89.0855%" y="181" width="0.1229%" height="15" fill="rgb(238,50,21)" fg:x="3624" fg:w="5"/><text x="89.3355%" y="191.50"></text></g><g><title>__wake_up_common (5 samples, 0.12%)</title><rect x="89.0855%" y="165" width="0.1229%" height="15" fill="rgb(225,57,45)" fg:x="3624" fg:w="5"/><text x="89.3355%" y="175.50"></text></g><g><title>ep_poll_callback (5 samples, 0.12%)</title><rect x="89.0855%" y="149" width="0.1229%" height="15" fill="rgb(209,196,50)" fg:x="3624" fg:w="5"/><text x="89.3355%" y="159.50"></text></g><g><title>_raw_read_unlock_irqrestore (1 samples, 0.02%)</title><rect x="89.1839%" y="133" width="0.0246%" height="15" fill="rgb(242,140,13)" fg:x="3628" fg:w="1"/><text x="89.4339%" y="143.50"></text></g><g><title>chacha20::xchacha::quarter_round (3 samples, 0.07%)</title><rect x="89.2085%" y="517" width="0.0737%" height="15" fill="rgb(217,111,7)" fg:x="3629" fg:w="3"/><text x="89.4585%" y="527.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as crypto_common::KeyIvInit&gt;::new (4 samples, 0.10%)</title><rect x="89.2085%" y="565" width="0.0983%" height="15" fill="rgb(253,193,51)" fg:x="3629" fg:w="4"/><text x="89.4585%" y="575.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as crypto_common::KeyIvInit&gt;::new (4 samples, 0.10%)</title><rect x="89.2085%" y="549" width="0.0983%" height="15" fill="rgb(252,70,29)" fg:x="3629" fg:w="4"/><text x="89.4585%" y="559.50"></text></g><g><title>chacha20::xchacha::hchacha (4 samples, 0.10%)</title><rect x="89.2085%" y="533" width="0.0983%" height="15" fill="rgb(232,127,12)" fg:x="3629" fg:w="4"/><text x="89.4585%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (1 samples, 0.02%)</title><rect x="89.2822%" y="517" width="0.0246%" height="15" fill="rgb(211,180,21)" fg:x="3632" fg:w="1"/><text x="89.5322%" y="527.50"></text></g><g><title>core::iter::adapters::zip::Zip&lt;A,B&gt;::new (1 samples, 0.02%)</title><rect x="89.2822%" y="501" width="0.0246%" height="15" fill="rgb(229,72,13)" fg:x="3632" fg:w="1"/><text x="89.5322%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (1 samples, 0.02%)</title><rect x="89.2822%" y="485" width="0.0246%" height="15" fill="rgb(240,211,49)" fg:x="3632" fg:w="1"/><text x="89.5322%" y="495.50"></text></g><g><title>core::cmp::min (1 samples, 0.02%)</title><rect x="89.2822%" y="469" width="0.0246%" height="15" fill="rgb(219,149,40)" fg:x="3632" fg:w="1"/><text x="89.5322%" y="479.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.02%)</title><rect x="89.2822%" y="453" width="0.0246%" height="15" fill="rgb(210,127,46)" fg:x="3632" fg:w="1"/><text x="89.5322%" y="463.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.02%)</title><rect x="89.2822%" y="437" width="0.0246%" height="15" fill="rgb(220,106,7)" fg:x="3632" fg:w="1"/><text x="89.5322%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.02%)</title><rect x="89.3068%" y="437" width="0.0246%" height="15" fill="rgb(249,31,22)" fg:x="3633" fg:w="1"/><text x="89.5568%" y="447.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::authenticate_lengths (2 samples, 0.05%)</title><rect x="89.3068%" y="549" width="0.0492%" height="15" fill="rgb(253,1,49)" fg:x="3633" fg:w="2"/><text x="89.5568%" y="559.50"></text></g><g><title>universal_hash::UniversalHash::update (2 samples, 0.05%)</title><rect x="89.3068%" y="533" width="0.0492%" height="15" fill="rgb(227,144,33)" fg:x="3633" fg:w="2"/><text x="89.5568%" y="543.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (2 samples, 0.05%)</title><rect x="89.3068%" y="517" width="0.0492%" height="15" fill="rgb(249,163,44)" fg:x="3633" fg:w="2"/><text x="89.5568%" y="527.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (2 samples, 0.05%)</title><rect x="89.3068%" y="501" width="0.0492%" height="15" fill="rgb(234,15,39)" fg:x="3633" fg:w="2"/><text x="89.5568%" y="511.50"></text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (2 samples, 0.05%)</title><rect x="89.3068%" y="485" width="0.0492%" height="15" fill="rgb(207,66,16)" fg:x="3633" fg:w="2"/><text x="89.5568%" y="495.50"></text></g><g><title>&lt;poly1305::backend::avx2::State as universal_hash::UhfBackend&gt;::proc_block (2 samples, 0.05%)</title><rect x="89.3068%" y="469" width="0.0492%" height="15" fill="rgb(233,112,24)" fg:x="3633" fg:w="2"/><text x="89.5568%" y="479.50"></text></g><g><title>poly1305::backend::avx2::State::compute_block (2 samples, 0.05%)</title><rect x="89.3068%" y="453" width="0.0492%" height="15" fill="rgb(230,90,22)" fg:x="3633" fg:w="2"/><text x="89.5568%" y="463.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (1 samples, 0.02%)</title><rect x="89.3314%" y="437" width="0.0246%" height="15" fill="rgb(229,61,13)" fg:x="3634" fg:w="1"/><text x="89.5814%" y="447.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (1 samples, 0.02%)</title><rect x="89.3314%" y="421" width="0.0246%" height="15" fill="rgb(225,57,24)" fg:x="3634" fg:w="1"/><text x="89.5814%" y="431.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (1 samples, 0.02%)</title><rect x="89.3314%" y="405" width="0.0246%" height="15" fill="rgb(208,169,48)" fg:x="3634" fg:w="1"/><text x="89.5814%" y="415.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (1 samples, 0.02%)</title><rect x="89.3314%" y="389" width="0.0246%" height="15" fill="rgb(244,218,51)" fg:x="3634" fg:w="1"/><text x="89.5814%" y="399.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.02%)</title><rect x="89.3559%" y="453" width="0.0246%" height="15" fill="rgb(214,148,10)" fg:x="3635" fg:w="1"/><text x="89.6059%" y="463.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.02%)</title><rect x="89.4051%" y="357" width="0.0246%" height="15" fill="rgb(225,174,27)" fg:x="3637" fg:w="1"/><text x="89.6551%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.02%)</title><rect x="89.4297%" y="357" width="0.0246%" height="15" fill="rgb(230,96,26)" fg:x="3638" fg:w="1"/><text x="89.6797%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.02%)</title><rect x="89.4543%" y="357" width="0.0246%" height="15" fill="rgb(232,10,30)" fg:x="3639" fg:w="1"/><text x="89.7043%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (4 samples, 0.10%)</title><rect x="89.4789%" y="357" width="0.0983%" height="15" fill="rgb(222,8,50)" fg:x="3640" fg:w="4"/><text x="89.7289%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="89.5772%" y="357" width="0.0246%" height="15" fill="rgb(213,81,27)" fg:x="3644" fg:w="1"/><text x="89.8272%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (3 samples, 0.07%)</title><rect x="89.6018%" y="357" width="0.0737%" height="15" fill="rgb(245,50,10)" fg:x="3645" fg:w="3"/><text x="89.8518%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.02%)</title><rect x="89.6755%" y="357" width="0.0246%" height="15" fill="rgb(216,100,18)" fg:x="3648" fg:w="1"/><text x="89.9255%" y="367.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (13 samples, 0.32%)</title><rect x="89.4051%" y="373" width="0.3196%" height="15" fill="rgb(236,147,54)" fg:x="3637" fg:w="13"/><text x="89.6551%" y="383.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (1 samples, 0.02%)</title><rect x="89.7001%" y="357" width="0.0246%" height="15" fill="rgb(205,143,26)" fg:x="3649" fg:w="1"/><text x="89.9501%" y="367.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="89.7001%" y="341" width="0.0246%" height="15" fill="rgb(236,26,9)" fg:x="3649" fg:w="1"/><text x="89.9501%" y="351.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (3 samples, 0.07%)</title><rect x="89.7247%" y="357" width="0.0737%" height="15" fill="rgb(221,165,53)" fg:x="3650" fg:w="3"/><text x="89.9747%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (2 samples, 0.05%)</title><rect x="89.7984%" y="357" width="0.0492%" height="15" fill="rgb(214,110,17)" fg:x="3653" fg:w="2"/><text x="90.0484%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (2 samples, 0.05%)</title><rect x="89.8476%" y="357" width="0.0492%" height="15" fill="rgb(237,197,12)" fg:x="3655" fg:w="2"/><text x="90.0976%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (3 samples, 0.07%)</title><rect x="89.8968%" y="357" width="0.0737%" height="15" fill="rgb(205,84,17)" fg:x="3657" fg:w="3"/><text x="90.1468%" y="367.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (12 samples, 0.29%)</title><rect x="89.7247%" y="373" width="0.2950%" height="15" fill="rgb(237,18,45)" fg:x="3650" fg:w="12"/><text x="89.9747%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (2 samples, 0.05%)</title><rect x="89.9705%" y="357" width="0.0492%" height="15" fill="rgb(221,87,14)" fg:x="3660" fg:w="2"/><text x="90.2205%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.02%)</title><rect x="90.0197%" y="373" width="0.0246%" height="15" fill="rgb(238,186,15)" fg:x="3662" fg:w="1"/><text x="90.2697%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (3 samples, 0.07%)</title><rect x="90.0442%" y="373" width="0.0737%" height="15" fill="rgb(208,115,11)" fg:x="3663" fg:w="3"/><text x="90.2942%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="90.1180%" y="373" width="0.0246%" height="15" fill="rgb(254,175,0)" fg:x="3666" fg:w="1"/><text x="90.3680%" y="383.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (33 samples, 0.81%)</title><rect x="89.4051%" y="389" width="0.8112%" height="15" fill="rgb(227,24,42)" fg:x="3637" fg:w="33"/><text x="89.6551%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (3 samples, 0.07%)</title><rect x="90.1426%" y="373" width="0.0737%" height="15" fill="rgb(223,211,37)" fg:x="3667" fg:w="3"/><text x="90.3926%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="90.2163%" y="389" width="0.0246%" height="15" fill="rgb(235,49,27)" fg:x="3670" fg:w="1"/><text x="90.4663%" y="399.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_par_ks_blocks (35 samples, 0.86%)</title><rect x="89.4051%" y="421" width="0.8604%" height="15" fill="rgb(254,97,51)" fg:x="3637" fg:w="35"/><text x="89.6551%" y="431.50"></text></g><g><title>chacha20::backends::avx2::rounds (35 samples, 0.86%)</title><rect x="89.4051%" y="405" width="0.8604%" height="15" fill="rgb(249,51,40)" fg:x="3637" fg:w="35"/><text x="89.6551%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.02%)</title><rect x="90.2409%" y="389" width="0.0246%" height="15" fill="rgb(210,128,45)" fg:x="3671" fg:w="1"/><text x="90.4909%" y="399.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (1 samples, 0.02%)</title><rect x="90.2655%" y="357" width="0.0246%" height="15" fill="rgb(224,137,50)" fg:x="3672" fg:w="1"/><text x="90.5155%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.02%)</title><rect x="90.2655%" y="341" width="0.0246%" height="15" fill="rgb(242,15,9)" fg:x="3672" fg:w="1"/><text x="90.5155%" y="351.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (2 samples, 0.05%)</title><rect x="90.2901%" y="357" width="0.0492%" height="15" fill="rgb(233,187,41)" fg:x="3673" fg:w="2"/><text x="90.5401%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (2 samples, 0.05%)</title><rect x="90.2901%" y="341" width="0.0492%" height="15" fill="rgb(227,2,29)" fg:x="3673" fg:w="2"/><text x="90.5401%" y="351.50"></text></g><g><title>chacha20::backends::avx2::rounds (4 samples, 0.10%)</title><rect x="90.2655%" y="389" width="0.0983%" height="15" fill="rgb(222,70,3)" fg:x="3672" fg:w="4"/><text x="90.5155%" y="399.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (4 samples, 0.10%)</title><rect x="90.2655%" y="373" width="0.0983%" height="15" fill="rgb(213,11,42)" fg:x="3672" fg:w="4"/><text x="90.5155%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.02%)</title><rect x="90.3392%" y="357" width="0.0246%" height="15" fill="rgb(225,150,9)" fg:x="3675" fg:w="1"/><text x="90.5892%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.02%)</title><rect x="90.3638%" y="389" width="0.0246%" height="15" fill="rgb(230,162,45)" fg:x="3676" fg:w="1"/><text x="90.6138%" y="399.50"></text></g><g><title>cipher::stream_core::StreamBackend::gen_tail_blocks (6 samples, 0.15%)</title><rect x="90.2655%" y="421" width="0.1475%" height="15" fill="rgb(222,14,52)" fg:x="3672" fg:w="6"/><text x="90.5155%" y="431.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (6 samples, 0.15%)</title><rect x="90.2655%" y="405" width="0.1475%" height="15" fill="rgb(254,198,14)" fg:x="3672" fg:w="6"/><text x="90.5155%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.02%)</title><rect x="90.3884%" y="389" width="0.0246%" height="15" fill="rgb(220,217,30)" fg:x="3677" fg:w="1"/><text x="90.6384%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.02%)</title><rect x="90.4130%" y="245" width="0.0246%" height="15" fill="rgb(215,146,41)" fg:x="3678" fg:w="1"/><text x="90.6630%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="90.4130%" y="229" width="0.0246%" height="15" fill="rgb(217,27,36)" fg:x="3678" fg:w="1"/><text x="90.6630%" y="239.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="90.4130%" y="213" width="0.0246%" height="15" fill="rgb(219,218,39)" fg:x="3678" fg:w="1"/><text x="90.6630%" y="223.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (2 samples, 0.05%)</title><rect x="90.4130%" y="421" width="0.0492%" height="15" fill="rgb(219,4,42)" fg:x="3678" fg:w="2"/><text x="90.6630%" y="431.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (2 samples, 0.05%)</title><rect x="90.4130%" y="405" width="0.0492%" height="15" fill="rgb(249,119,36)" fg:x="3678" fg:w="2"/><text x="90.6630%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.05%)</title><rect x="90.4130%" y="389" width="0.0492%" height="15" fill="rgb(209,23,33)" fg:x="3678" fg:w="2"/><text x="90.6630%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.05%)</title><rect x="90.4130%" y="373" width="0.0492%" height="15" fill="rgb(211,10,0)" fg:x="3678" fg:w="2"/><text x="90.6630%" y="383.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.05%)</title><rect x="90.4130%" y="357" width="0.0492%" height="15" fill="rgb(208,99,37)" fg:x="3678" fg:w="2"/><text x="90.6630%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (2 samples, 0.05%)</title><rect x="90.4130%" y="341" width="0.0492%" height="15" fill="rgb(213,132,31)" fg:x="3678" fg:w="2"/><text x="90.6630%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.05%)</title><rect x="90.4130%" y="325" width="0.0492%" height="15" fill="rgb(243,129,40)" fg:x="3678" fg:w="2"/><text x="90.6630%" y="335.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (2 samples, 0.05%)</title><rect x="90.4130%" y="309" width="0.0492%" height="15" fill="rgb(210,66,33)" fg:x="3678" fg:w="2"/><text x="90.6630%" y="319.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (2 samples, 0.05%)</title><rect x="90.4130%" y="293" width="0.0492%" height="15" fill="rgb(209,189,4)" fg:x="3678" fg:w="2"/><text x="90.6630%" y="303.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (2 samples, 0.05%)</title><rect x="90.4130%" y="277" width="0.0492%" height="15" fill="rgb(214,107,37)" fg:x="3678" fg:w="2"/><text x="90.6630%" y="287.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (2 samples, 0.05%)</title><rect x="90.4130%" y="261" width="0.0492%" height="15" fill="rgb(245,88,54)" fg:x="3678" fg:w="2"/><text x="90.6630%" y="271.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (1 samples, 0.02%)</title><rect x="90.4376%" y="245" width="0.0246%" height="15" fill="rgb(205,146,20)" fg:x="3679" fg:w="1"/><text x="90.6876%" y="255.50"></text></g><g><title>core::ptr::read (1 samples, 0.02%)</title><rect x="90.4376%" y="229" width="0.0246%" height="15" fill="rgb(220,161,25)" fg:x="3679" fg:w="1"/><text x="90.6876%" y="239.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="90.4376%" y="213" width="0.0246%" height="15" fill="rgb(215,152,15)" fg:x="3679" fg:w="1"/><text x="90.6876%" y="223.50"></text></g><g><title>core::slice::raw::from_raw_parts (5 samples, 0.12%)</title><rect x="91.2242%" y="389" width="0.1229%" height="15" fill="rgb(233,192,44)" fg:x="3711" fg:w="5"/><text x="91.4742%" y="399.50"></text></g><g><title>core::ptr::slice_from_raw_parts (4 samples, 0.10%)</title><rect x="91.2488%" y="373" width="0.0983%" height="15" fill="rgb(240,170,46)" fg:x="3712" fg:w="4"/><text x="91.4988%" y="383.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (4 samples, 0.10%)</title><rect x="91.2488%" y="357" width="0.0983%" height="15" fill="rgb(207,104,33)" fg:x="3712" fg:w="4"/><text x="91.4988%" y="367.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::Deref&gt;::deref (16 samples, 0.39%)</title><rect x="91.0029%" y="405" width="0.3933%" height="15" fill="rgb(219,21,39)" fg:x="3702" fg:w="16"/><text x="91.2529%" y="415.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (2 samples, 0.05%)</title><rect x="91.3471%" y="389" width="0.0492%" height="15" fill="rgb(214,133,29)" fg:x="3716" fg:w="2"/><text x="91.5971%" y="399.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (1 samples, 0.02%)</title><rect x="91.3717%" y="373" width="0.0246%" height="15" fill="rgb(226,93,6)" fg:x="3717" fg:w="1"/><text x="91.6217%" y="383.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (1 samples, 0.02%)</title><rect x="91.3717%" y="357" width="0.0246%" height="15" fill="rgb(252,222,34)" fg:x="3717" fg:w="1"/><text x="91.6217%" y="367.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="91.5438%" y="389" width="0.0246%" height="15" fill="rgb(252,92,48)" fg:x="3724" fg:w="1"/><text x="91.7938%" y="399.50"></text></g><g><title>core::slice::raw::from_raw_parts (1 samples, 0.02%)</title><rect x="91.5683%" y="389" width="0.0246%" height="15" fill="rgb(245,223,24)" fg:x="3725" fg:w="1"/><text x="91.8183%" y="399.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.02%)</title><rect x="91.5683%" y="373" width="0.0246%" height="15" fill="rgb(205,176,3)" fg:x="3725" fg:w="1"/><text x="91.8183%" y="383.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (1 samples, 0.02%)</title><rect x="91.5683%" y="357" width="0.0246%" height="15" fill="rgb(235,151,15)" fg:x="3725" fg:w="1"/><text x="91.8183%" y="367.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (9 samples, 0.22%)</title><rect x="91.3963%" y="405" width="0.2212%" height="15" fill="rgb(237,209,11)" fg:x="3718" fg:w="9"/><text x="91.6463%" y="415.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (1 samples, 0.02%)</title><rect x="91.5929%" y="389" width="0.0246%" height="15" fill="rgb(243,227,24)" fg:x="3726" fg:w="1"/><text x="91.8429%" y="399.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.05%)</title><rect x="91.6175%" y="405" width="0.0492%" height="15" fill="rgb(239,193,16)" fg:x="3727" fg:w="2"/><text x="91.8675%" y="415.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (2 samples, 0.05%)</title><rect x="91.6175%" y="389" width="0.0492%" height="15" fill="rgb(231,27,9)" fg:x="3727" fg:w="2"/><text x="91.8675%" y="399.50"></text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;generic_array::GenericArray&lt;u8,N&gt;,M&gt;&gt;::xor_in2out (51 samples, 1.25%)</title><rect x="90.4621%" y="421" width="1.2537%" height="15" fill="rgb(219,169,10)" fg:x="3680" fg:w="51"/><text x="90.7121%" y="431.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (2 samples, 0.05%)</title><rect x="91.6667%" y="405" width="0.0492%" height="15" fill="rgb(244,229,43)" fg:x="3729" fg:w="2"/><text x="91.9167%" y="415.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (2 samples, 0.05%)</title><rect x="91.6667%" y="389" width="0.0492%" height="15" fill="rgb(254,38,20)" fg:x="3729" fg:w="2"/><text x="91.9167%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.05%)</title><rect x="91.6667%" y="373" width="0.0492%" height="15" fill="rgb(250,47,30)" fg:x="3729" fg:w="2"/><text x="91.9167%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.05%)</title><rect x="91.6667%" y="357" width="0.0492%" height="15" fill="rgb(224,124,36)" fg:x="3729" fg:w="2"/><text x="91.9167%" y="367.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.05%)</title><rect x="91.6667%" y="341" width="0.0492%" height="15" fill="rgb(246,68,51)" fg:x="3729" fg:w="2"/><text x="91.9167%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (2 samples, 0.05%)</title><rect x="91.6667%" y="325" width="0.0492%" height="15" fill="rgb(253,43,49)" fg:x="3729" fg:w="2"/><text x="91.9167%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.05%)</title><rect x="91.6667%" y="309" width="0.0492%" height="15" fill="rgb(219,54,36)" fg:x="3729" fg:w="2"/><text x="91.9167%" y="319.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (2 samples, 0.05%)</title><rect x="91.6667%" y="293" width="0.0492%" height="15" fill="rgb(227,133,34)" fg:x="3729" fg:w="2"/><text x="91.9167%" y="303.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (2 samples, 0.05%)</title><rect x="91.6667%" y="277" width="0.0492%" height="15" fill="rgb(247,227,15)" fg:x="3729" fg:w="2"/><text x="91.9167%" y="287.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (2 samples, 0.05%)</title><rect x="91.6667%" y="261" width="0.0492%" height="15" fill="rgb(229,96,14)" fg:x="3729" fg:w="2"/><text x="91.9167%" y="271.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (2 samples, 0.05%)</title><rect x="91.6667%" y="245" width="0.0492%" height="15" fill="rgb(220,79,17)" fg:x="3729" fg:w="2"/><text x="91.9167%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.05%)</title><rect x="91.6667%" y="229" width="0.0492%" height="15" fill="rgb(205,131,53)" fg:x="3729" fg:w="2"/><text x="91.9167%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.05%)</title><rect x="91.6667%" y="213" width="0.0492%" height="15" fill="rgb(209,50,29)" fg:x="3729" fg:w="2"/><text x="91.9167%" y="223.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.05%)</title><rect x="91.6667%" y="197" width="0.0492%" height="15" fill="rgb(245,86,46)" fg:x="3729" fg:w="2"/><text x="91.9167%" y="207.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.02%)</title><rect x="91.6912%" y="181" width="0.0246%" height="15" fill="rgb(235,66,46)" fg:x="3730" fg:w="1"/><text x="91.9412%" y="191.50"></text></g><g><title>chacha20::backends::avx2::inner (96 samples, 2.36%)</title><rect x="89.3805%" y="453" width="2.3599%" height="15" fill="rgb(232,148,31)" fg:x="3636" fg:w="96"/><text x="89.6305%" y="463.50">c..</text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (96 samples, 2.36%)</title><rect x="89.3805%" y="437" width="2.3599%" height="15" fill="rgb(217,149,8)" fg:x="3636" fg:w="96"/><text x="89.6305%" y="447.50">&lt;..</text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;u8,N&gt;&gt;::xor_in2out (1 samples, 0.02%)</title><rect x="91.7158%" y="421" width="0.0246%" height="15" fill="rgb(209,183,11)" fg:x="3731" fg:w="1"/><text x="91.9658%" y="431.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.02%)</title><rect x="91.7158%" y="405" width="0.0246%" height="15" fill="rgb(208,55,20)" fg:x="3731" fg:w="1"/><text x="91.9658%" y="415.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.02%)</title><rect x="91.7158%" y="389" width="0.0246%" height="15" fill="rgb(218,39,14)" fg:x="3731" fg:w="1"/><text x="91.9658%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.02%)</title><rect x="91.7158%" y="373" width="0.0246%" height="15" fill="rgb(216,169,33)" fg:x="3731" fg:w="1"/><text x="91.9658%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="91.7158%" y="357" width="0.0246%" height="15" fill="rgb(233,80,24)" fg:x="3731" fg:w="1"/><text x="91.9658%" y="367.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="91.7158%" y="341" width="0.0246%" height="15" fill="rgb(213,179,31)" fg:x="3731" fg:w="1"/><text x="91.9658%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.02%)</title><rect x="91.7158%" y="325" width="0.0246%" height="15" fill="rgb(209,19,5)" fg:x="3731" fg:w="1"/><text x="91.9658%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.02%)</title><rect x="91.7158%" y="309" width="0.0246%" height="15" fill="rgb(219,18,35)" fg:x="3731" fg:w="1"/><text x="91.9658%" y="319.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.02%)</title><rect x="91.7158%" y="293" width="0.0246%" height="15" fill="rgb(209,169,16)" fg:x="3731" fg:w="1"/><text x="91.9658%" y="303.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (99 samples, 2.43%)</title><rect x="89.3559%" y="501" width="2.4336%" height="15" fill="rgb(245,90,51)" fg:x="3635" fg:w="99"/><text x="89.6059%" y="511.50">ci..</text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (99 samples, 2.43%)</title><rect x="89.3559%" y="485" width="2.4336%" height="15" fill="rgb(220,99,45)" fg:x="3635" fg:w="99"/><text x="89.6059%" y="495.50">&lt;c..</text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (99 samples, 2.43%)</title><rect x="89.3559%" y="469" width="2.4336%" height="15" fill="rgb(249,89,25)" fg:x="3635" fg:w="99"/><text x="89.6059%" y="479.50">&lt;c..</text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (2 samples, 0.05%)</title><rect x="91.7404%" y="453" width="0.0492%" height="15" fill="rgb(239,193,0)" fg:x="3732" fg:w="2"/><text x="91.9904%" y="463.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (1 samples, 0.02%)</title><rect x="91.7896%" y="437" width="0.0246%" height="15" fill="rgb(231,126,1)" fg:x="3734" fg:w="1"/><text x="92.0396%" y="447.50"></text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;u8,N&gt;&gt;::xor_in2out (1 samples, 0.02%)</title><rect x="91.7896%" y="421" width="0.0246%" height="15" fill="rgb(243,166,3)" fg:x="3734" fg:w="1"/><text x="92.0396%" y="431.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.02%)</title><rect x="91.7896%" y="405" width="0.0246%" height="15" fill="rgb(223,22,34)" fg:x="3734" fg:w="1"/><text x="92.0396%" y="415.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (3 samples, 0.07%)</title><rect x="91.8633%" y="357" width="0.0737%" height="15" fill="rgb(251,52,51)" fg:x="3737" fg:w="3"/><text x="92.1133%" y="367.50"></text></g><g><title>chacha20::backends::avx2::inner (1 samples, 0.02%)</title><rect x="91.9371%" y="357" width="0.0246%" height="15" fill="rgb(221,165,28)" fg:x="3740" fg:w="1"/><text x="92.1871%" y="367.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (1 samples, 0.02%)</title><rect x="91.9371%" y="341" width="0.0246%" height="15" fill="rgb(218,121,47)" fg:x="3740" fg:w="1"/><text x="92.1871%" y="351.50"></text></g><g><title>inout::inout::InOut&lt;generic_array::GenericArray&lt;u8,N&gt;&gt;::xor_in2out (1 samples, 0.02%)</title><rect x="91.9371%" y="325" width="0.0246%" height="15" fill="rgb(209,120,9)" fg:x="3740" fg:w="1"/><text x="92.1871%" y="335.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.02%)</title><rect x="91.9371%" y="309" width="0.0246%" height="15" fill="rgb(236,68,12)" fg:x="3740" fg:w="1"/><text x="92.1871%" y="319.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.02%)</title><rect x="92.0108%" y="341" width="0.0246%" height="15" fill="rgb(225,194,26)" fg:x="3743" fg:w="1"/><text x="92.2608%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (4 samples, 0.10%)</title><rect x="91.9617%" y="357" width="0.0983%" height="15" fill="rgb(231,84,39)" fg:x="3741" fg:w="4"/><text x="92.2117%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.02%)</title><rect x="92.0354%" y="341" width="0.0246%" height="15" fill="rgb(210,11,45)" fg:x="3744" fg:w="1"/><text x="92.2854%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_broadcastsi128_si256 (1 samples, 0.02%)</title><rect x="92.0600%" y="357" width="0.0246%" height="15" fill="rgb(224,54,52)" fg:x="3745" fg:w="1"/><text x="92.3100%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect x="92.0846%" y="357" width="0.0246%" height="15" fill="rgb(238,102,14)" fg:x="3746" fg:w="1"/><text x="92.3346%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (2 samples, 0.05%)</title><rect x="92.1091%" y="357" width="0.0492%" height="15" fill="rgb(243,160,52)" fg:x="3747" fg:w="2"/><text x="92.3591%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.02%)</title><rect x="92.1337%" y="341" width="0.0246%" height="15" fill="rgb(216,114,19)" fg:x="3748" fg:w="1"/><text x="92.3837%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (1 samples, 0.02%)</title><rect x="92.1583%" y="357" width="0.0246%" height="15" fill="rgb(244,166,37)" fg:x="3749" fg:w="1"/><text x="92.4083%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.02%)</title><rect x="92.1583%" y="341" width="0.0246%" height="15" fill="rgb(246,29,44)" fg:x="3749" fg:w="1"/><text x="92.4083%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (3 samples, 0.07%)</title><rect x="92.1829%" y="357" width="0.0737%" height="15" fill="rgb(215,56,53)" fg:x="3750" fg:w="3"/><text x="92.4329%" y="367.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_epi64x (3 samples, 0.07%)</title><rect x="92.2566%" y="357" width="0.0737%" height="15" fill="rgb(217,60,2)" fg:x="3753" fg:w="3"/><text x="92.5066%" y="367.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi64x (1 samples, 0.02%)</title><rect x="92.3058%" y="341" width="0.0246%" height="15" fill="rgb(207,26,24)" fg:x="3755" fg:w="1"/><text x="92.5558%" y="351.50"></text></g><g><title>core::core_arch::simd::i64x4::new (1 samples, 0.02%)</title><rect x="92.3058%" y="325" width="0.0246%" height="15" fill="rgb(252,210,15)" fg:x="3755" fg:w="1"/><text x="92.5558%" y="335.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.05%)</title><rect x="92.3304%" y="357" width="0.0492%" height="15" fill="rgb(253,209,26)" fg:x="3756" fg:w="2"/><text x="92.5804%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (3 samples, 0.07%)</title><rect x="92.3795%" y="357" width="0.0737%" height="15" fill="rgb(238,170,14)" fg:x="3758" fg:w="3"/><text x="92.6295%" y="367.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (27 samples, 0.66%)</title><rect x="91.8142%" y="373" width="0.6637%" height="15" fill="rgb(216,178,15)" fg:x="3735" fg:w="27"/><text x="92.0642%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.02%)</title><rect x="92.4533%" y="357" width="0.0246%" height="15" fill="rgb(250,197,2)" fg:x="3761" fg:w="1"/><text x="92.7033%" y="367.50"></text></g><g><title>chacha20::backends::avx2::cols_to_rows (1 samples, 0.02%)</title><rect x="92.4779%" y="373" width="0.0246%" height="15" fill="rgb(212,70,42)" fg:x="3762" fg:w="1"/><text x="92.7279%" y="383.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (1 samples, 0.02%)</title><rect x="92.4779%" y="357" width="0.0246%" height="15" fill="rgb(227,213,9)" fg:x="3762" fg:w="1"/><text x="92.7279%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (1 samples, 0.02%)</title><rect x="92.5025%" y="357" width="0.0246%" height="15" fill="rgb(245,99,25)" fg:x="3763" fg:w="1"/><text x="92.7525%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.02%)</title><rect x="92.5025%" y="341" width="0.0246%" height="15" fill="rgb(250,82,29)" fg:x="3763" fg:w="1"/><text x="92.7525%" y="351.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (2 samples, 0.05%)</title><rect x="92.5025%" y="373" width="0.0492%" height="15" fill="rgb(241,226,54)" fg:x="3763" fg:w="2"/><text x="92.7525%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect x="92.5270%" y="357" width="0.0246%" height="15" fill="rgb(221,99,41)" fg:x="3764" fg:w="1"/><text x="92.7770%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (3 samples, 0.07%)</title><rect x="92.5516%" y="373" width="0.0737%" height="15" fill="rgb(213,90,21)" fg:x="3765" fg:w="3"/><text x="92.8016%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (2 samples, 0.05%)</title><rect x="92.6254%" y="373" width="0.0492%" height="15" fill="rgb(205,208,24)" fg:x="3768" fg:w="2"/><text x="92.8754%" y="383.50"></text></g><g><title>chacha20::backends::avx2::rounds (37 samples, 0.91%)</title><rect x="91.8142%" y="405" width="0.9095%" height="15" fill="rgb(246,31,12)" fg:x="3735" fg:w="37"/><text x="92.0642%" y="415.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (37 samples, 0.91%)</title><rect x="91.8142%" y="389" width="0.9095%" height="15" fill="rgb(213,154,6)" fg:x="3735" fg:w="37"/><text x="92.0642%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.05%)</title><rect x="92.6745%" y="373" width="0.0492%" height="15" fill="rgb(222,163,29)" fg:x="3770" fg:w="2"/><text x="92.9245%" y="383.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (138 samples, 3.39%)</title><rect x="89.3559%" y="549" width="3.3923%" height="15" fill="rgb(227,201,8)" fg:x="3635" fg:w="138"/><text x="89.6059%" y="559.50">cip..</text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (138 samples, 3.39%)</title><rect x="89.3559%" y="533" width="3.3923%" height="15" fill="rgb(233,9,32)" fg:x="3635" fg:w="138"/><text x="89.6059%" y="543.50">cip..</text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (138 samples, 3.39%)</title><rect x="89.3559%" y="517" width="3.3923%" height="15" fill="rgb(217,54,24)" fg:x="3635" fg:w="138"/><text x="89.6059%" y="527.50">&lt;ci..</text></g><g><title>cipher::stream_core::StreamCipherCore::write_keystream_block (39 samples, 0.96%)</title><rect x="91.7896%" y="501" width="0.9587%" height="15" fill="rgb(235,192,0)" fg:x="3734" fg:w="39"/><text x="92.0396%" y="511.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (39 samples, 0.96%)</title><rect x="91.7896%" y="485" width="0.9587%" height="15" fill="rgb(235,45,9)" fg:x="3734" fg:w="39"/><text x="92.0396%" y="495.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (39 samples, 0.96%)</title><rect x="91.7896%" y="469" width="0.9587%" height="15" fill="rgb(246,42,40)" fg:x="3734" fg:w="39"/><text x="92.0396%" y="479.50"></text></g><g><title>chacha20::backends::avx2::inner (39 samples, 0.96%)</title><rect x="91.7896%" y="453" width="0.9587%" height="15" fill="rgb(248,111,24)" fg:x="3734" fg:w="39"/><text x="92.0396%" y="463.50"></text></g><g><title>&lt;cipher::stream_core::WriteBlockCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (38 samples, 0.93%)</title><rect x="91.8142%" y="437" width="0.9341%" height="15" fill="rgb(249,65,22)" fg:x="3735" fg:w="38"/><text x="92.0642%" y="447.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (38 samples, 0.93%)</title><rect x="91.8142%" y="421" width="0.9341%" height="15" fill="rgb(238,111,51)" fg:x="3735" fg:w="38"/><text x="92.0642%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.02%)</title><rect x="92.7237%" y="405" width="0.0246%" height="15" fill="rgb(250,118,22)" fg:x="3772" fg:w="1"/><text x="92.9737%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (3 samples, 0.07%)</title><rect x="92.7483%" y="437" width="0.0737%" height="15" fill="rgb(234,84,26)" fg:x="3773" fg:w="3"/><text x="92.9983%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="92.8220%" y="437" width="0.0246%" height="15" fill="rgb(243,172,12)" fg:x="3776" fg:w="1"/><text x="93.0720%" y="447.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.02%)</title><rect x="92.8466%" y="437" width="0.0246%" height="15" fill="rgb(236,150,49)" fg:x="3777" fg:w="1"/><text x="93.0966%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (2 samples, 0.05%)</title><rect x="92.8958%" y="405" width="0.0492%" height="15" fill="rgb(225,197,26)" fg:x="3779" fg:w="2"/><text x="93.1458%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (4 samples, 0.10%)</title><rect x="92.9449%" y="405" width="0.0983%" height="15" fill="rgb(214,17,42)" fg:x="3781" fg:w="4"/><text x="93.1949%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_blend_epi32 (2 samples, 0.05%)</title><rect x="93.0433%" y="405" width="0.0492%" height="15" fill="rgb(224,165,40)" fg:x="3785" fg:w="2"/><text x="93.2933%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.02%)</title><rect x="93.5103%" y="389" width="0.0246%" height="15" fill="rgb(246,100,4)" fg:x="3804" fg:w="1"/><text x="93.7603%" y="399.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi32 (1 samples, 0.02%)</title><rect x="93.5349%" y="389" width="0.0246%" height="15" fill="rgb(222,103,0)" fg:x="3805" fg:w="1"/><text x="93.7849%" y="399.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi32 (1 samples, 0.02%)</title><rect x="93.5349%" y="373" width="0.0246%" height="15" fill="rgb(227,189,26)" fg:x="3805" fg:w="1"/><text x="93.7849%" y="383.50"></text></g><g><title>core::core_arch::simd::i32x8::new (1 samples, 0.02%)</title><rect x="93.5349%" y="357" width="0.0246%" height="15" fill="rgb(214,202,17)" fg:x="3805" fg:w="1"/><text x="93.7849%" y="367.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (3 samples, 0.07%)</title><rect x="93.5595%" y="389" width="0.0737%" height="15" fill="rgb(229,111,3)" fg:x="3806" fg:w="3"/><text x="93.8095%" y="399.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (3 samples, 0.07%)</title><rect x="93.5595%" y="373" width="0.0737%" height="15" fill="rgb(229,172,15)" fg:x="3806" fg:w="3"/><text x="93.8095%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (3 samples, 0.07%)</title><rect x="93.5595%" y="357" width="0.0737%" height="15" fill="rgb(230,224,35)" fg:x="3806" fg:w="3"/><text x="93.8095%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="93.6332%" y="389" width="0.0246%" height="15" fill="rgb(251,141,6)" fg:x="3809" fg:w="1"/><text x="93.8832%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (24 samples, 0.59%)</title><rect x="93.0924%" y="405" width="0.5900%" height="15" fill="rgb(225,208,6)" fg:x="3787" fg:w="24"/><text x="93.3424%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.02%)</title><rect x="93.6578%" y="389" width="0.0246%" height="15" fill="rgb(246,181,16)" fg:x="3810" fg:w="1"/><text x="93.9078%" y="399.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.02%)</title><rect x="93.6578%" y="373" width="0.0246%" height="15" fill="rgb(227,129,36)" fg:x="3810" fg:w="1"/><text x="93.9078%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.02%)</title><rect x="93.6824%" y="389" width="0.0246%" height="15" fill="rgb(248,117,24)" fg:x="3811" fg:w="1"/><text x="93.9324%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_blend_epi32 (1 samples, 0.02%)</title><rect x="93.7070%" y="389" width="0.0246%" height="15" fill="rgb(214,185,35)" fg:x="3812" fg:w="1"/><text x="93.9570%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.02%)</title><rect x="93.7316%" y="389" width="0.0246%" height="15" fill="rgb(236,150,34)" fg:x="3813" fg:w="1"/><text x="93.9816%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="93.7561%" y="389" width="0.0246%" height="15" fill="rgb(243,228,27)" fg:x="3814" fg:w="1"/><text x="94.0061%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.02%)</title><rect x="93.7807%" y="389" width="0.0246%" height="15" fill="rgb(245,77,44)" fg:x="3815" fg:w="1"/><text x="94.0307%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (6 samples, 0.15%)</title><rect x="93.6824%" y="405" width="0.1475%" height="15" fill="rgb(235,214,42)" fg:x="3811" fg:w="6"/><text x="93.9324%" y="415.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (1 samples, 0.02%)</title><rect x="93.8053%" y="389" width="0.0246%" height="15" fill="rgb(221,74,3)" fg:x="3816" fg:w="1"/><text x="94.0553%" y="399.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (1 samples, 0.02%)</title><rect x="93.8053%" y="373" width="0.0246%" height="15" fill="rgb(206,121,29)" fg:x="3816" fg:w="1"/><text x="94.0553%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (4 samples, 0.10%)</title><rect x="93.8299%" y="405" width="0.0983%" height="15" fill="rgb(249,131,53)" fg:x="3817" fg:w="4"/><text x="94.0799%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.02%)</title><rect x="93.9036%" y="389" width="0.0246%" height="15" fill="rgb(236,170,29)" fg:x="3820" fg:w="1"/><text x="94.1536%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.02%)</title><rect x="93.9036%" y="373" width="0.0246%" height="15" fill="rgb(247,96,15)" fg:x="3820" fg:w="1"/><text x="94.1536%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (1 samples, 0.02%)</title><rect x="93.9282%" y="405" width="0.0246%" height="15" fill="rgb(211,210,7)" fg:x="3821" fg:w="1"/><text x="94.1782%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_unpackhi_epi64 (1 samples, 0.02%)</title><rect x="93.9528%" y="405" width="0.0246%" height="15" fill="rgb(240,88,50)" fg:x="3822" fg:w="1"/><text x="94.2028%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_unpacklo_epi64 (1 samples, 0.02%)</title><rect x="93.9774%" y="405" width="0.0246%" height="15" fill="rgb(209,229,26)" fg:x="3823" fg:w="1"/><text x="94.2274%" y="415.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi32 (1 samples, 0.02%)</title><rect x="94.0020%" y="405" width="0.0246%" height="15" fill="rgb(210,68,23)" fg:x="3824" fg:w="1"/><text x="94.2520%" y="415.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (6 samples, 0.15%)</title><rect x="94.0265%" y="405" width="0.1475%" height="15" fill="rgb(229,180,13)" fg:x="3825" fg:w="6"/><text x="94.2765%" y="415.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (6 samples, 0.15%)</title><rect x="94.0265%" y="389" width="0.1475%" height="15" fill="rgb(236,53,44)" fg:x="3825" fg:w="6"/><text x="94.2765%" y="399.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (5 samples, 0.12%)</title><rect x="94.0511%" y="373" width="0.1229%" height="15" fill="rgb(244,214,29)" fg:x="3826" fg:w="5"/><text x="94.3011%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (2 samples, 0.05%)</title><rect x="94.1740%" y="405" width="0.0492%" height="15" fill="rgb(220,75,29)" fg:x="3831" fg:w="2"/><text x="94.4240%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (4 samples, 0.10%)</title><rect x="94.2232%" y="405" width="0.0983%" height="15" fill="rgb(214,183,37)" fg:x="3833" fg:w="4"/><text x="94.4732%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (2 samples, 0.05%)</title><rect x="94.3215%" y="405" width="0.0492%" height="15" fill="rgb(239,117,29)" fg:x="3837" fg:w="2"/><text x="94.5715%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (6 samples, 0.15%)</title><rect x="94.3707%" y="405" width="0.1475%" height="15" fill="rgb(237,171,35)" fg:x="3839" fg:w="6"/><text x="94.6207%" y="415.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (3 samples, 0.07%)</title><rect x="94.5182%" y="405" width="0.0737%" height="15" fill="rgb(229,178,53)" fg:x="3845" fg:w="3"/><text x="94.7682%" y="415.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (3 samples, 0.07%)</title><rect x="94.5182%" y="389" width="0.0737%" height="15" fill="rgb(210,102,19)" fg:x="3845" fg:w="3"/><text x="94.7682%" y="399.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (72 samples, 1.77%)</title><rect x="92.8712%" y="421" width="1.7699%" height="15" fill="rgb(235,127,22)" fg:x="3778" fg:w="72"/><text x="93.1212%" y="431.50"></text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_loaded_blocks (2 samples, 0.05%)</title><rect x="94.5919%" y="405" width="0.0492%" height="15" fill="rgb(244,31,31)" fg:x="3848" fg:w="2"/><text x="94.8419%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_blend_epi32 (1 samples, 0.02%)</title><rect x="94.6411%" y="405" width="0.0246%" height="15" fill="rgb(231,43,21)" fg:x="3850" fg:w="1"/><text x="94.8911%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.02%)</title><rect x="94.6411%" y="389" width="0.0246%" height="15" fill="rgb(217,131,35)" fg:x="3850" fg:w="1"/><text x="94.8911%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.02%)</title><rect x="94.6657%" y="405" width="0.0246%" height="15" fill="rgb(221,149,4)" fg:x="3851" fg:w="1"/><text x="94.9157%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="94.6903%" y="405" width="0.0246%" height="15" fill="rgb(232,170,28)" fg:x="3852" fg:w="1"/><text x="94.9403%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.02%)</title><rect x="94.8378%" y="373" width="0.0246%" height="15" fill="rgb(238,56,10)" fg:x="3858" fg:w="1"/><text x="95.0878%" y="383.50"></text></g><g><title>core::core_arch::simd::u64x4::splat (1 samples, 0.02%)</title><rect x="94.8378%" y="357" width="0.0246%" height="15" fill="rgb(235,196,14)" fg:x="3858" fg:w="1"/><text x="95.0878%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (7 samples, 0.17%)</title><rect x="94.7148%" y="389" width="0.1721%" height="15" fill="rgb(216,45,48)" fg:x="3853" fg:w="7"/><text x="94.9648%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="94.8623%" y="373" width="0.0246%" height="15" fill="rgb(238,213,17)" fg:x="3859" fg:w="1"/><text x="95.1123%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.02%)</title><rect x="94.8869%" y="373" width="0.0246%" height="15" fill="rgb(212,13,2)" fg:x="3860" fg:w="1"/><text x="95.1369%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.02%)</title><rect x="94.9115%" y="373" width="0.0246%" height="15" fill="rgb(240,114,20)" fg:x="3861" fg:w="1"/><text x="95.1615%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.02%)</title><rect x="94.9361%" y="373" width="0.0246%" height="15" fill="rgb(228,41,40)" fg:x="3862" fg:w="1"/><text x="95.1861%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.02%)</title><rect x="94.9361%" y="357" width="0.0246%" height="15" fill="rgb(244,132,35)" fg:x="3862" fg:w="1"/><text x="95.1861%" y="367.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.02%)</title><rect x="94.9361%" y="341" width="0.0246%" height="15" fill="rgb(253,189,4)" fg:x="3862" fg:w="1"/><text x="95.1861%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (4 samples, 0.10%)</title><rect x="94.8869%" y="389" width="0.0983%" height="15" fill="rgb(224,37,19)" fg:x="3860" fg:w="4"/><text x="95.1369%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.02%)</title><rect x="94.9607%" y="373" width="0.0246%" height="15" fill="rgb(235,223,18)" fg:x="3863" fg:w="1"/><text x="95.2107%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (3 samples, 0.07%)</title><rect x="94.9853%" y="389" width="0.0737%" height="15" fill="rgb(235,163,25)" fg:x="3864" fg:w="3"/><text x="95.2353%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (1 samples, 0.02%)</title><rect x="95.0590%" y="389" width="0.0246%" height="15" fill="rgb(217,145,28)" fg:x="3867" fg:w="1"/><text x="95.3090%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="95.0836%" y="373" width="0.0246%" height="15" fill="rgb(223,223,32)" fg:x="3868" fg:w="1"/><text x="95.3336%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (2 samples, 0.05%)</title><rect x="95.0836%" y="389" width="0.0492%" height="15" fill="rgb(227,189,39)" fg:x="3868" fg:w="2"/><text x="95.3336%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.02%)</title><rect x="95.1082%" y="373" width="0.0246%" height="15" fill="rgb(248,10,22)" fg:x="3869" fg:w="1"/><text x="95.3582%" y="383.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.02%)</title><rect x="95.1082%" y="357" width="0.0246%" height="15" fill="rgb(248,46,39)" fg:x="3869" fg:w="1"/><text x="95.3582%" y="367.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setzero_si256 (1 samples, 0.02%)</title><rect x="95.1327%" y="389" width="0.0246%" height="15" fill="rgb(248,113,48)" fg:x="3870" fg:w="1"/><text x="95.3827%" y="399.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set1_epi8 (1 samples, 0.02%)</title><rect x="95.1327%" y="373" width="0.0246%" height="15" fill="rgb(245,16,25)" fg:x="3870" fg:w="1"/><text x="95.3827%" y="383.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_epi8 (1 samples, 0.02%)</title><rect x="95.1327%" y="357" width="0.0246%" height="15" fill="rgb(249,152,16)" fg:x="3870" fg:w="1"/><text x="95.3827%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="95.1573%" y="389" width="0.0246%" height="15" fill="rgb(250,16,1)" fg:x="3871" fg:w="1"/><text x="95.4073%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (3 samples, 0.07%)</title><rect x="95.1819%" y="389" width="0.0737%" height="15" fill="rgb(249,138,3)" fg:x="3872" fg:w="3"/><text x="95.4319%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (3 samples, 0.07%)</title><rect x="95.2557%" y="389" width="0.0737%" height="15" fill="rgb(227,71,41)" fg:x="3875" fg:w="3"/><text x="95.5057%" y="399.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (101 samples, 2.48%)</title><rect x="92.8712%" y="437" width="2.4828%" height="15" fill="rgb(209,184,23)" fg:x="3778" fg:w="101"/><text x="93.1212%" y="447.50">po..</text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (29 samples, 0.71%)</title><rect x="94.6411%" y="421" width="0.7129%" height="15" fill="rgb(223,215,31)" fg:x="3850" fg:w="29"/><text x="94.8911%" y="431.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (26 samples, 0.64%)</title><rect x="94.7148%" y="405" width="0.6391%" height="15" fill="rgb(210,146,28)" fg:x="3853" fg:w="26"/><text x="94.9648%" y="415.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (1 samples, 0.02%)</title><rect x="95.3294%" y="389" width="0.0246%" height="15" fill="rgb(209,183,41)" fg:x="3878" fg:w="1"/><text x="95.5794%" y="399.50"></text></g><g><title>&lt;&amp;poly1305::backend::avx2::helpers::Aligned4x130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (1 samples, 0.02%)</title><rect x="95.3294%" y="373" width="0.0246%" height="15" fill="rgb(209,224,45)" fg:x="3878" fg:w="1"/><text x="95.5794%" y="383.50"></text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_loaded_blocks (1 samples, 0.02%)</title><rect x="95.3540%" y="437" width="0.0246%" height="15" fill="rgb(224,209,51)" fg:x="3879" fg:w="1"/><text x="95.6040%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.02%)</title><rect x="95.3786%" y="405" width="0.0246%" height="15" fill="rgb(223,17,39)" fg:x="3880" fg:w="1"/><text x="95.6286%" y="415.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (1 samples, 0.02%)</title><rect x="95.4523%" y="389" width="0.0246%" height="15" fill="rgb(234,204,37)" fg:x="3883" fg:w="1"/><text x="95.7023%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="95.4769%" y="389" width="0.0246%" height="15" fill="rgb(236,120,5)" fg:x="3884" fg:w="1"/><text x="95.7269%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_and_si256 (5 samples, 0.12%)</title><rect x="95.4031%" y="405" width="0.1229%" height="15" fill="rgb(248,97,27)" fg:x="3881" fg:w="5"/><text x="95.6531%" y="415.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (1 samples, 0.02%)</title><rect x="95.5015%" y="389" width="0.0246%" height="15" fill="rgb(240,66,17)" fg:x="3885" fg:w="1"/><text x="95.7515%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (2 samples, 0.05%)</title><rect x="95.5261%" y="389" width="0.0492%" height="15" fill="rgb(210,79,3)" fg:x="3886" fg:w="2"/><text x="95.7761%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permute4x64_epi64 (3 samples, 0.07%)</title><rect x="95.5261%" y="405" width="0.0737%" height="15" fill="rgb(214,176,27)" fg:x="3886" fg:w="3"/><text x="95.7761%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="95.5752%" y="389" width="0.0246%" height="15" fill="rgb(235,185,3)" fg:x="3888" fg:w="1"/><text x="95.8252%" y="399.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi64 (5 samples, 0.12%)</title><rect x="95.5998%" y="405" width="0.1229%" height="15" fill="rgb(227,24,12)" fg:x="3889" fg:w="5"/><text x="95.8498%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.02%)</title><rect x="95.7227%" y="405" width="0.0246%" height="15" fill="rgb(252,169,48)" fg:x="3894" fg:w="1"/><text x="95.9727%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.02%)</title><rect x="95.7473%" y="405" width="0.0246%" height="15" fill="rgb(212,65,1)" fg:x="3895" fg:w="1"/><text x="95.9973%" y="415.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (1 samples, 0.02%)</title><rect x="95.7719%" y="405" width="0.0246%" height="15" fill="rgb(242,39,24)" fg:x="3896" fg:w="1"/><text x="96.0219%" y="415.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (1 samples, 0.02%)</title><rect x="95.7719%" y="389" width="0.0246%" height="15" fill="rgb(249,32,23)" fg:x="3896" fg:w="1"/><text x="96.0219%" y="399.50"></text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_loaded_blocks (19 samples, 0.47%)</title><rect x="95.3786%" y="421" width="0.4671%" height="15" fill="rgb(251,195,23)" fg:x="3880" fg:w="19"/><text x="95.6286%" y="431.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (2 samples, 0.05%)</title><rect x="95.7965%" y="405" width="0.0492%" height="15" fill="rgb(236,174,8)" fg:x="3897" fg:w="2"/><text x="96.0465%" y="415.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::encrypt_in_place_detached (267 samples, 6.56%)</title><rect x="89.3068%" y="565" width="6.5634%" height="15" fill="rgb(220,197,8)" fg:x="3633" fg:w="267"/><text x="89.5568%" y="575.50">chacha20p..</text></g><g><title>universal_hash::UniversalHash::update_padded (127 samples, 3.12%)</title><rect x="92.7483%" y="549" width="3.1219%" height="15" fill="rgb(240,108,37)" fg:x="3773" fg:w="127"/><text x="92.9983%" y="559.50">uni..</text></g><g><title>universal_hash::UniversalHash::update (127 samples, 3.12%)</title><rect x="92.7483%" y="533" width="3.1219%" height="15" fill="rgb(232,176,24)" fg:x="3773" fg:w="127"/><text x="92.9983%" y="543.50">uni..</text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (127 samples, 3.12%)</title><rect x="92.7483%" y="517" width="3.1219%" height="15" fill="rgb(243,35,29)" fg:x="3773" fg:w="127"/><text x="92.9983%" y="527.50">&lt;po..</text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (127 samples, 3.12%)</title><rect x="92.7483%" y="501" width="3.1219%" height="15" fill="rgb(210,37,18)" fg:x="3773" fg:w="127"/><text x="92.9983%" y="511.50">&lt;po..</text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (127 samples, 3.12%)</title><rect x="92.7483%" y="485" width="3.1219%" height="15" fill="rgb(224,184,40)" fg:x="3773" fg:w="127"/><text x="92.9983%" y="495.50">&lt;un..</text></g><g><title>&lt;poly1305::backend::avx2::State as universal_hash::UhfBackend&gt;::proc_par_blocks (127 samples, 3.12%)</title><rect x="92.7483%" y="469" width="3.1219%" height="15" fill="rgb(236,39,29)" fg:x="3773" fg:w="127"/><text x="92.9983%" y="479.50">&lt;po..</text></g><g><title>poly1305::backend::avx2::State::compute_par_blocks (127 samples, 3.12%)</title><rect x="92.7483%" y="453" width="3.1219%" height="15" fill="rgb(232,48,39)" fg:x="3773" fg:w="127"/><text x="92.9983%" y="463.50">pol..</text></g><g><title>poly1305::backend::avx2::helpers::Aligned4x130::from_par_blocks (20 samples, 0.49%)</title><rect x="95.3786%" y="437" width="0.4916%" height="15" fill="rgb(236,34,42)" fg:x="3880" fg:w="20"/><text x="95.6286%" y="447.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (1 samples, 0.02%)</title><rect x="95.8456%" y="421" width="0.0246%" height="15" fill="rgb(243,106,37)" fg:x="3899" fg:w="1"/><text x="96.0956%" y="431.50"></text></g><g><title>&lt;[Z] as zeroize::Zeroize&gt;::zeroize (1 samples, 0.02%)</title><rect x="95.8702%" y="549" width="0.0246%" height="15" fill="rgb(218,96,6)" fg:x="3900" fg:w="1"/><text x="96.1202%" y="559.50"></text></g><g><title>zeroize::volatile_set (1 samples, 0.02%)</title><rect x="95.8702%" y="533" width="0.0246%" height="15" fill="rgb(235,130,12)" fg:x="3900" fg:w="1"/><text x="96.1202%" y="543.50"></text></g><g><title>&lt;core::core_arch::x86::__m256i as core::core_arch::x86::m256iExt&gt;::as_m256i (1 samples, 0.02%)</title><rect x="95.8702%" y="517" width="0.0246%" height="15" fill="rgb(231,95,0)" fg:x="3900" fg:w="1"/><text x="96.1202%" y="527.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier as core::ops::arith::Mul&gt;::mul (1 samples, 0.02%)</title><rect x="95.8948%" y="501" width="0.0246%" height="15" fill="rgb(228,12,23)" fg:x="3901" fg:w="1"/><text x="96.1448%" y="511.50"></text></g><g><title>&lt;poly1305::backend::avx2::helpers::Aligned130 as core::ops::arith::Mul&lt;poly1305::backend::avx2::helpers::PrecomputedMultiplier&gt;&gt;::mul (1 samples, 0.02%)</title><rect x="95.8948%" y="485" width="0.0246%" height="15" fill="rgb(216,12,1)" fg:x="3901" fg:w="1"/><text x="96.1448%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_permutevar8x32_epi32 (1 samples, 0.02%)</title><rect x="95.8948%" y="469" width="0.0246%" height="15" fill="rgb(219,59,3)" fg:x="3901" fg:w="1"/><text x="96.1448%" y="479.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srlv_epi32 (1 samples, 0.02%)</title><rect x="95.8948%" y="453" width="0.0246%" height="15" fill="rgb(215,208,46)" fg:x="3901" fg:w="1"/><text x="96.1448%" y="463.50"></text></g><g><title>&lt;poly1305::Poly1305 as crypto_common::KeyInit&gt;::new (2 samples, 0.05%)</title><rect x="95.8948%" y="549" width="0.0492%" height="15" fill="rgb(254,224,29)" fg:x="3901" fg:w="2"/><text x="96.1448%" y="559.50"></text></g><g><title>poly1305::backend::autodetect::State::new (2 samples, 0.05%)</title><rect x="95.8948%" y="533" width="0.0492%" height="15" fill="rgb(232,14,29)" fg:x="3901" fg:w="2"/><text x="96.1448%" y="543.50"></text></g><g><title>poly1305::backend::avx2::State::new (2 samples, 0.05%)</title><rect x="95.8948%" y="517" width="0.0492%" height="15" fill="rgb(208,45,52)" fg:x="3901" fg:w="2"/><text x="96.1448%" y="527.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced130::reduce (1 samples, 0.02%)</title><rect x="95.9194%" y="501" width="0.0246%" height="15" fill="rgb(234,191,28)" fg:x="3902" fg:w="1"/><text x="96.1694%" y="511.50"></text></g><g><title>poly1305::backend::avx2::helpers::adc (1 samples, 0.02%)</title><rect x="95.9194%" y="485" width="0.0246%" height="15" fill="rgb(244,67,43)" fg:x="3902" fg:w="1"/><text x="96.1694%" y="495.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.02%)</title><rect x="95.9194%" y="469" width="0.0246%" height="15" fill="rgb(236,189,24)" fg:x="3902" fg:w="1"/><text x="96.1694%" y="479.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="95.9194%" y="453" width="0.0246%" height="15" fill="rgb(239,214,33)" fg:x="3902" fg:w="1"/><text x="96.1694%" y="463.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="95.9440%" y="357" width="0.0246%" height="15" fill="rgb(226,176,41)" fg:x="3903" fg:w="1"/><text x="96.1940%" y="367.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (1 samples, 0.02%)</title><rect x="95.9440%" y="341" width="0.0246%" height="15" fill="rgb(248,47,8)" fg:x="3903" fg:w="1"/><text x="96.1940%" y="351.50"></text></g><g><title>chacha20::backends::avx2::inner (1 samples, 0.02%)</title><rect x="95.9685%" y="357" width="0.0246%" height="15" fill="rgb(218,81,44)" fg:x="3904" fg:w="1"/><text x="96.2185%" y="367.50"></text></g><g><title>chacha20::backends::avx2::rows_to_cols (1 samples, 0.02%)</title><rect x="95.9931%" y="357" width="0.0246%" height="15" fill="rgb(213,98,6)" fg:x="3905" fg:w="1"/><text x="96.2431%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (3 samples, 0.07%)</title><rect x="96.0177%" y="357" width="0.0737%" height="15" fill="rgb(222,85,22)" fg:x="3906" fg:w="3"/><text x="96.2677%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (1 samples, 0.02%)</title><rect x="96.0669%" y="341" width="0.0246%" height="15" fill="rgb(239,46,39)" fg:x="3908" fg:w="1"/><text x="96.3169%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi32 (3 samples, 0.07%)</title><rect x="96.0914%" y="357" width="0.0737%" height="15" fill="rgb(237,12,29)" fg:x="3909" fg:w="3"/><text x="96.3414%" y="367.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (2 samples, 0.05%)</title><rect x="96.1898%" y="341" width="0.0492%" height="15" fill="rgb(214,77,8)" fg:x="3913" fg:w="2"/><text x="96.4398%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (4 samples, 0.10%)</title><rect x="96.1652%" y="357" width="0.0983%" height="15" fill="rgb(217,168,37)" fg:x="3912" fg:w="4"/><text x="96.4152%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.02%)</title><rect x="96.2389%" y="341" width="0.0246%" height="15" fill="rgb(221,217,23)" fg:x="3915" fg:w="1"/><text x="96.4889%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_slli_epi32 (1 samples, 0.02%)</title><rect x="96.2635%" y="357" width="0.0246%" height="15" fill="rgb(243,229,36)" fg:x="3916" fg:w="1"/><text x="96.5135%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.02%)</title><rect x="96.2635%" y="341" width="0.0246%" height="15" fill="rgb(251,163,40)" fg:x="3916" fg:w="1"/><text x="96.5135%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_srli_epi32 (2 samples, 0.05%)</title><rect x="96.2881%" y="357" width="0.0492%" height="15" fill="rgb(237,222,12)" fg:x="3917" fg:w="2"/><text x="96.5381%" y="367.50"></text></g><g><title>core::core_arch::simd::u32x8::splat (1 samples, 0.02%)</title><rect x="96.3127%" y="341" width="0.0246%" height="15" fill="rgb(248,132,6)" fg:x="3918" fg:w="1"/><text x="96.5627%" y="351.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (2 samples, 0.05%)</title><rect x="96.3373%" y="357" width="0.0492%" height="15" fill="rgb(227,167,50)" fg:x="3919" fg:w="2"/><text x="96.5873%" y="367.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (3 samples, 0.07%)</title><rect x="96.3864%" y="357" width="0.0737%" height="15" fill="rgb(242,84,37)" fg:x="3921" fg:w="3"/><text x="96.6364%" y="367.50"></text></g><g><title>chacha20::backends::avx2::add_xor_rot (22 samples, 0.54%)</title><rect x="95.9440%" y="373" width="0.5408%" height="15" fill="rgb(212,4,50)" fg:x="3903" fg:w="22"/><text x="96.1940%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.02%)</title><rect x="96.4602%" y="357" width="0.0246%" height="15" fill="rgb(230,228,32)" fg:x="3924" fg:w="1"/><text x="96.7102%" y="367.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (1 samples, 0.02%)</title><rect x="96.4848%" y="373" width="0.0246%" height="15" fill="rgb(248,217,23)" fg:x="3925" fg:w="1"/><text x="96.7348%" y="383.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_xor_si256 (1 samples, 0.02%)</title><rect x="96.5093%" y="373" width="0.0246%" height="15" fill="rgb(238,197,32)" fg:x="3926" fg:w="1"/><text x="96.7593%" y="383.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.02%)</title><rect x="96.5339%" y="373" width="0.0246%" height="15" fill="rgb(236,106,1)" fg:x="3927" fg:w="1"/><text x="96.7839%" y="383.50"></text></g><g><title>chacha20::backends::avx2::rounds (26 samples, 0.64%)</title><rect x="95.9440%" y="405" width="0.6391%" height="15" fill="rgb(219,228,13)" fg:x="3903" fg:w="26"/><text x="96.1940%" y="415.50"></text></g><g><title>chacha20::backends::avx2::double_quarter_round (26 samples, 0.64%)</title><rect x="95.9440%" y="389" width="0.6391%" height="15" fill="rgb(238,30,35)" fg:x="3903" fg:w="26"/><text x="96.1940%" y="399.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.02%)</title><rect x="96.5585%" y="373" width="0.0246%" height="15" fill="rgb(236,70,23)" fg:x="3928" fg:w="1"/><text x="96.8085%" y="383.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (30 samples, 0.74%)</title><rect x="95.8702%" y="565" width="0.7375%" height="15" fill="rgb(249,104,48)" fg:x="3900" fg:w="30"/><text x="96.1202%" y="575.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (27 samples, 0.66%)</title><rect x="95.9440%" y="549" width="0.6637%" height="15" fill="rgb(254,117,50)" fg:x="3903" fg:w="27"/><text x="96.1940%" y="559.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (27 samples, 0.66%)</title><rect x="95.9440%" y="533" width="0.6637%" height="15" fill="rgb(223,152,4)" fg:x="3903" fg:w="27"/><text x="96.1940%" y="543.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (27 samples, 0.66%)</title><rect x="95.9440%" y="517" width="0.6637%" height="15" fill="rgb(245,6,2)" fg:x="3903" fg:w="27"/><text x="96.1940%" y="527.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::write_keystream_block (27 samples, 0.66%)</title><rect x="95.9440%" y="501" width="0.6637%" height="15" fill="rgb(249,150,24)" fg:x="3903" fg:w="27"/><text x="96.1940%" y="511.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (27 samples, 0.66%)</title><rect x="95.9440%" y="485" width="0.6637%" height="15" fill="rgb(228,185,42)" fg:x="3903" fg:w="27"/><text x="96.1940%" y="495.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (27 samples, 0.66%)</title><rect x="95.9440%" y="469" width="0.6637%" height="15" fill="rgb(226,39,33)" fg:x="3903" fg:w="27"/><text x="96.1940%" y="479.50"></text></g><g><title>chacha20::backends::avx2::inner (27 samples, 0.66%)</title><rect x="95.9440%" y="453" width="0.6637%" height="15" fill="rgb(221,166,19)" fg:x="3903" fg:w="27"/><text x="96.1940%" y="463.50"></text></g><g><title>&lt;cipher::stream_core::WriteBlockCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (27 samples, 0.66%)</title><rect x="95.9440%" y="437" width="0.6637%" height="15" fill="rgb(209,109,2)" fg:x="3903" fg:w="27"/><text x="96.1940%" y="447.50"></text></g><g><title>&lt;chacha20::backends::avx2::Backend&lt;R&gt; as cipher::stream_core::StreamBackend&gt;::gen_ks_block (27 samples, 0.66%)</title><rect x="95.9440%" y="421" width="0.6637%" height="15" fill="rgb(252,216,26)" fg:x="3903" fg:w="27"/><text x="96.1940%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (1 samples, 0.02%)</title><rect x="96.5831%" y="405" width="0.0246%" height="15" fill="rgb(227,173,36)" fg:x="3929" fg:w="1"/><text x="96.8331%" y="415.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.02%)</title><rect x="96.6077%" y="565" width="0.0246%" height="15" fill="rgb(209,90,7)" fg:x="3930" fg:w="1"/><text x="96.8577%" y="575.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="96.6323%" y="565" width="0.0246%" height="15" fill="rgb(250,194,11)" fg:x="3931" fg:w="1"/><text x="96.8823%" y="575.50"></text></g><g><title>tftp::encryption::Encryptor&lt;R&gt;::encrypt (304 samples, 7.47%)</title><rect x="89.2085%" y="597" width="7.4730%" height="15" fill="rgb(220,72,50)" fg:x="3629" fg:w="304"/><text x="89.4585%" y="607.50">tftp::encr..</text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::encrypt_in_place_detached (304 samples, 7.47%)</title><rect x="89.2085%" y="581" width="7.4730%" height="15" fill="rgb(222,106,48)" fg:x="3629" fg:w="304"/><text x="89.4585%" y="591.50">&lt;chacha20p..</text></g><g><title>core::core_arch::x86::m256iExt::as_u64x4 (1 samples, 0.02%)</title><rect x="96.6568%" y="565" width="0.0246%" height="15" fill="rgb(216,220,45)" fg:x="3932" fg:w="1"/><text x="96.9068%" y="575.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (5 samples, 0.12%)</title><rect x="96.7060%" y="549" width="0.1229%" height="15" fill="rgb(234,112,18)" fg:x="3934" fg:w="5"/><text x="96.9560%" y="559.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.02%)</title><rect x="96.8043%" y="533" width="0.0246%" height="15" fill="rgb(206,179,9)" fg:x="3938" fg:w="1"/><text x="97.0543%" y="543.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (10 samples, 0.25%)</title><rect x="96.6814%" y="581" width="0.2458%" height="15" fill="rgb(215,115,40)" fg:x="3933" fg:w="10"/><text x="96.9314%" y="591.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (9 samples, 0.22%)</title><rect x="96.7060%" y="565" width="0.2212%" height="15" fill="rgb(222,69,34)" fg:x="3934" fg:w="9"/><text x="96.9560%" y="575.50"></text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::push (4 samples, 0.10%)</title><rect x="96.8289%" y="549" width="0.0983%" height="15" fill="rgb(209,161,10)" fg:x="3939" fg:w="4"/><text x="97.0789%" y="559.50"></text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::capacity (1 samples, 0.02%)</title><rect x="96.9272%" y="581" width="0.0246%" height="15" fill="rgb(217,6,38)" fg:x="3943" fg:w="1"/><text x="97.1772%" y="591.50"></text></g><g><title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="97.1731%" y="533" width="0.0246%" height="15" fill="rgb(229,229,48)" fg:x="3953" fg:w="1"/><text x="97.4231%" y="543.50"></text></g><g><title>mem_cgroup_handle_over_high (1 samples, 0.02%)</title><rect x="97.2222%" y="485" width="0.0246%" height="15" fill="rgb(225,21,28)" fg:x="3955" fg:w="1"/><text x="97.4722%" y="495.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::new (4 samples, 0.10%)</title><rect x="97.1731%" y="549" width="0.0983%" height="15" fill="rgb(206,33,13)" fg:x="3953" fg:w="4"/><text x="97.4231%" y="559.50"></text></g><g><title>asm_sysvec_reschedule_ipi (3 samples, 0.07%)</title><rect x="97.1976%" y="533" width="0.0737%" height="15" fill="rgb(242,178,17)" fg:x="3954" fg:w="3"/><text x="97.4476%" y="543.50"></text></g><g><title>irqentry_exit_to_user_mode (3 samples, 0.07%)</title><rect x="97.1976%" y="517" width="0.0737%" height="15" fill="rgb(220,162,5)" fg:x="3954" fg:w="3"/><text x="97.4476%" y="527.50"></text></g><g><title>exit_to_user_mode_prepare (3 samples, 0.07%)</title><rect x="97.1976%" y="501" width="0.0737%" height="15" fill="rgb(210,33,43)" fg:x="3954" fg:w="3"/><text x="97.4476%" y="511.50"></text></g><g><title>schedule (1 samples, 0.02%)</title><rect x="97.2468%" y="485" width="0.0246%" height="15" fill="rgb(216,116,54)" fg:x="3956" fg:w="1"/><text x="97.4968%" y="495.50"></text></g><g><title>__schedule (1 samples, 0.02%)</title><rect x="97.2468%" y="469" width="0.0246%" height="15" fill="rgb(249,92,24)" fg:x="3956" fg:w="1"/><text x="97.4968%" y="479.50"></text></g><g><title>finish_task_switch.isra.0 (1 samples, 0.02%)</title><rect x="97.2468%" y="453" width="0.0246%" height="15" fill="rgb(231,189,14)" fg:x="3956" fg:w="1"/><text x="97.4968%" y="463.50"></text></g><g><title>__perf_event_task_sched_in (1 samples, 0.02%)</title><rect x="97.2468%" y="437" width="0.0246%" height="15" fill="rgb(230,8,41)" fg:x="3956" fg:w="1"/><text x="97.4968%" y="447.50"></text></g><g><title>ctx_flexible_sched_in (1 samples, 0.02%)</title><rect x="97.2468%" y="421" width="0.0246%" height="15" fill="rgb(249,7,27)" fg:x="3956" fg:w="1"/><text x="97.4968%" y="431.50"></text></g><g><title>visit_groups_merge.constprop.0.isra.0 (1 samples, 0.02%)</title><rect x="97.2468%" y="405" width="0.0246%" height="15" fill="rgb(232,86,5)" fg:x="3956" fg:w="1"/><text x="97.4968%" y="415.50"></text></g><g><title>merge_sched_in (1 samples, 0.02%)</title><rect x="97.2468%" y="389" width="0.0246%" height="15" fill="rgb(224,175,18)" fg:x="3956" fg:w="1"/><text x="97.4968%" y="399.50"></text></g><g><title>event_sched_in (1 samples, 0.02%)</title><rect x="97.2468%" y="373" width="0.0246%" height="15" fill="rgb(220,129,12)" fg:x="3956" fg:w="1"/><text x="97.4968%" y="383.50"></text></g><g><title>perf_ibs_add (1 samples, 0.02%)</title><rect x="97.2468%" y="357" width="0.0246%" height="15" fill="rgb(210,19,36)" fg:x="3956" fg:w="1"/><text x="97.4968%" y="367.50"></text></g><g><title>perf_event_update_userpage (1 samples, 0.02%)</title><rect x="97.2468%" y="341" width="0.0246%" height="15" fill="rgb(219,96,14)" fg:x="3956" fg:w="1"/><text x="97.4968%" y="351.50"></text></g><g><title>arch_perf_update_userpage (1 samples, 0.02%)</title><rect x="97.2468%" y="325" width="0.0246%" height="15" fill="rgb(249,106,1)" fg:x="3956" fg:w="1"/><text x="97.4968%" y="335.50"></text></g><g><title>sched_clock_stable (1 samples, 0.02%)</title><rect x="97.2468%" y="309" width="0.0246%" height="15" fill="rgb(249,155,20)" fg:x="3956" fg:w="1"/><text x="97.4968%" y="319.50"></text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::push (14 samples, 0.34%)</title><rect x="96.9518%" y="581" width="0.3441%" height="15" fill="rgb(244,168,9)" fg:x="3944" fg:w="14"/><text x="97.2018%" y="591.50"></text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::push_unchecked (14 samples, 0.34%)</title><rect x="96.9518%" y="565" width="0.3441%" height="15" fill="rgb(216,23,50)" fg:x="3944" fg:w="14"/><text x="97.2018%" y="575.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (1 samples, 0.02%)</title><rect x="97.2714%" y="549" width="0.0246%" height="15" fill="rgb(224,219,20)" fg:x="3957" fg:w="1"/><text x="97.5214%" y="559.50"></text></g><g><title>tftp::encryption::apply_bit_padding (28 samples, 0.69%)</title><rect x="96.6814%" y="597" width="0.6883%" height="15" fill="rgb(222,156,15)" fg:x="3933" fg:w="28"/><text x="96.9314%" y="607.50"></text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::push_unchecked (3 samples, 0.07%)</title><rect x="97.2960%" y="581" width="0.0737%" height="15" fill="rgb(231,97,17)" fg:x="3958" fg:w="3"/><text x="97.5460%" y="591.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="97.3451%" y="565" width="0.0246%" height="15" fill="rgb(218,70,48)" fg:x="3960" fg:w="1"/><text x="97.5951%" y="575.50"></text></g><g><title>tftp::encrypted_packet::EncryptedPacket::encrypt (335 samples, 8.24%)</title><rect x="89.2085%" y="613" width="8.2350%" height="15" fill="rgb(212,196,52)" fg:x="3629" fg:w="335"/><text x="89.4585%" y="623.50">tftp::encry..</text></g><g><title>tftp::encryption::remove_bit_padding (3 samples, 0.07%)</title><rect x="97.3697%" y="597" width="0.0737%" height="15" fill="rgb(243,203,18)" fg:x="3961" fg:w="3"/><text x="97.6197%" y="607.50"></text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::push_unchecked (3 samples, 0.07%)</title><rect x="97.3697%" y="581" width="0.0737%" height="15" fill="rgb(252,125,41)" fg:x="3961" fg:w="3"/><text x="97.6197%" y="591.50"></text></g><g><title>&lt;tftp::client::encryption_socket::EncryptionBoundSocket&lt;S,Rng&gt; as tftp::socket::Socket&gt;::send_to (348 samples, 8.55%)</title><rect x="88.9135%" y="629" width="8.5546%" height="15" fill="rgb(223,180,33)" fg:x="3617" fg:w="348"/><text x="89.1635%" y="639.50">&lt;tftp::clien..</text></g><g><title>tftp::packet::PacketType::from_bytes (1 samples, 0.02%)</title><rect x="97.4435%" y="613" width="0.0246%" height="15" fill="rgb(254,159,46)" fg:x="3964" fg:w="1"/><text x="97.6935%" y="623.50"></text></g><g><title>tftp::packet::try_from (1 samples, 0.02%)</title><rect x="97.4435%" y="597" width="0.0246%" height="15" fill="rgb(254,38,10)" fg:x="3964" fg:w="1"/><text x="97.6935%" y="607.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.02%)</title><rect x="97.4680%" y="629" width="0.0246%" height="15" fill="rgb(208,217,32)" fg:x="3965" fg:w="1"/><text x="97.7180%" y="639.50"></text></g><g><title>tftp::io::create_writer (1 samples, 0.02%)</title><rect x="97.4680%" y="613" width="0.0246%" height="15" fill="rgb(221,120,13)" fg:x="3965" fg:w="1"/><text x="97.7180%" y="623.50"></text></g><g><title>std::fs::File::create (1 samples, 0.02%)</title><rect x="97.4680%" y="597" width="0.0246%" height="15" fill="rgb(246,54,52)" fg:x="3965" fg:w="1"/><text x="97.7180%" y="607.50"></text></g><g><title>std::fs::OpenOptions::open (1 samples, 0.02%)</title><rect x="97.4680%" y="581" width="0.0246%" height="15" fill="rgb(242,34,25)" fg:x="3965" fg:w="1"/><text x="97.7180%" y="591.50"></text></g><g><title>std::fs::OpenOptions::_open (1 samples, 0.02%)</title><rect x="97.4680%" y="565" width="0.0246%" height="15" fill="rgb(247,209,9)" fg:x="3965" fg:w="1"/><text x="97.7180%" y="575.50"></text></g><g><title>std::sys::unix::fs::File::open (1 samples, 0.02%)</title><rect x="97.4680%" y="549" width="0.0246%" height="15" fill="rgb(228,71,26)" fg:x="3965" fg:w="1"/><text x="97.7180%" y="559.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (1 samples, 0.02%)</title><rect x="97.4680%" y="533" width="0.0246%" height="15" fill="rgb(222,145,49)" fg:x="3965" fg:w="1"/><text x="97.7180%" y="543.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.02%)</title><rect x="97.4680%" y="517" width="0.0246%" height="15" fill="rgb(218,121,17)" fg:x="3965" fg:w="1"/><text x="97.7180%" y="527.50"></text></g><g><title>std::sys::unix::fs::File::open::{{closure}} (1 samples, 0.02%)</title><rect x="97.4680%" y="501" width="0.0246%" height="15" fill="rgb(244,50,7)" fg:x="3965" fg:w="1"/><text x="97.7180%" y="511.50"></text></g><g><title>std::sys::unix::fs::File::open_c (1 samples, 0.02%)</title><rect x="97.4680%" y="485" width="0.0246%" height="15" fill="rgb(246,229,37)" fg:x="3965" fg:w="1"/><text x="97.7180%" y="495.50"></text></g><g><title>std::sys::unix::cvt_r (1 samples, 0.02%)</title><rect x="97.4680%" y="469" width="0.0246%" height="15" fill="rgb(225,18,5)" fg:x="3965" fg:w="1"/><text x="97.7180%" y="479.50"></text></g><g><title>std::sys::unix::fs::File::open_c::{{closure}} (1 samples, 0.02%)</title><rect x="97.4680%" y="453" width="0.0246%" height="15" fill="rgb(213,204,8)" fg:x="3965" fg:w="1"/><text x="97.7180%" y="463.50"></text></g><g><title>__libc_open64 (1 samples, 0.02%)</title><rect x="97.4680%" y="437" width="0.0246%" height="15" fill="rgb(238,103,6)" fg:x="3965" fg:w="1"/><text x="97.7180%" y="447.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="97.4680%" y="421" width="0.0246%" height="15" fill="rgb(222,25,35)" fg:x="3965" fg:w="1"/><text x="97.7180%" y="431.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="97.4680%" y="405" width="0.0246%" height="15" fill="rgb(213,203,35)" fg:x="3965" fg:w="1"/><text x="97.7180%" y="415.50"></text></g><g><title>__x64_sys_openat (1 samples, 0.02%)</title><rect x="97.4680%" y="389" width="0.0246%" height="15" fill="rgb(221,79,53)" fg:x="3965" fg:w="1"/><text x="97.7180%" y="399.50"></text></g><g><title>do_sys_openat2 (1 samples, 0.02%)</title><rect x="97.4680%" y="373" width="0.0246%" height="15" fill="rgb(243,200,35)" fg:x="3965" fg:w="1"/><text x="97.7180%" y="383.50"></text></g><g><title>do_filp_open (1 samples, 0.02%)</title><rect x="97.4680%" y="357" width="0.0246%" height="15" fill="rgb(248,60,25)" fg:x="3965" fg:w="1"/><text x="97.7180%" y="367.50"></text></g><g><title>path_openat (1 samples, 0.02%)</title><rect x="97.4680%" y="341" width="0.0246%" height="15" fill="rgb(227,53,46)" fg:x="3965" fg:w="1"/><text x="97.7180%" y="351.50"></text></g><g><title>do_truncate (1 samples, 0.02%)</title><rect x="97.4680%" y="325" width="0.0246%" height="15" fill="rgb(216,120,32)" fg:x="3965" fg:w="1"/><text x="97.7180%" y="335.50"></text></g><g><title>notify_change (1 samples, 0.02%)</title><rect x="97.4680%" y="309" width="0.0246%" height="15" fill="rgb(220,134,1)" fg:x="3965" fg:w="1"/><text x="97.7180%" y="319.50"></text></g><g><title>ext4_setattr (1 samples, 0.02%)</title><rect x="97.4680%" y="293" width="0.0246%" height="15" fill="rgb(237,168,5)" fg:x="3965" fg:w="1"/><text x="97.7180%" y="303.50"></text></g><g><title>truncate_pagecache (1 samples, 0.02%)</title><rect x="97.4680%" y="277" width="0.0246%" height="15" fill="rgb(231,100,33)" fg:x="3965" fg:w="1"/><text x="97.7180%" y="287.50"></text></g><g><title>truncate_inode_pages_range (1 samples, 0.02%)</title><rect x="97.4680%" y="261" width="0.0246%" height="15" fill="rgb(236,177,47)" fg:x="3965" fg:w="1"/><text x="97.7180%" y="271.50"></text></g><g><title>delete_from_page_cache_batch (1 samples, 0.02%)</title><rect x="97.4680%" y="245" width="0.0246%" height="15" fill="rgb(235,7,49)" fg:x="3965" fg:w="1"/><text x="97.7180%" y="255.50"></text></g><g><title>filemap_unaccount_folio (1 samples, 0.02%)</title><rect x="97.4680%" y="229" width="0.0246%" height="15" fill="rgb(232,119,22)" fg:x="3965" fg:w="1"/><text x="97.7180%" y="239.50"></text></g><g><title>__mod_lruvec_page_state (1 samples, 0.02%)</title><rect x="97.4680%" y="213" width="0.0246%" height="15" fill="rgb(254,73,53)" fg:x="3965" fg:w="1"/><text x="97.7180%" y="223.50"></text></g><g><title>log::__private_api::log (1 samples, 0.02%)</title><rect x="97.4926%" y="629" width="0.0246%" height="15" fill="rgb(251,35,20)" fg:x="3966" fg:w="1"/><text x="97.7426%" y="639.50"></text></g><g><title>&lt;env_logger::logger::Logger as log::Log&gt;::log (1 samples, 0.02%)</title><rect x="97.4926%" y="613" width="0.0246%" height="15" fill="rgb(241,119,20)" fg:x="3966" fg:w="1"/><text x="97.7426%" y="623.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.02%)</title><rect x="97.4926%" y="597" width="0.0246%" height="15" fill="rgb(207,102,14)" fg:x="3966" fg:w="1"/><text x="97.7426%" y="607.50"></text></g><g><title>&lt;env_logger::logger::Logger as log::Log&gt;::log::{{closure}} (1 samples, 0.02%)</title><rect x="97.4926%" y="581" width="0.0246%" height="15" fill="rgb(248,201,50)" fg:x="3966" fg:w="1"/><text x="97.7426%" y="591.50"></text></g><g><title>&lt;env_logger::logger::Logger as log::Log&gt;::log::{{closure}} (1 samples, 0.02%)</title><rect x="97.4926%" y="565" width="0.0246%" height="15" fill="rgb(222,185,44)" fg:x="3966" fg:w="1"/><text x="97.7426%" y="575.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.02%)</title><rect x="97.4926%" y="549" width="0.0246%" height="15" fill="rgb(218,107,18)" fg:x="3966" fg:w="1"/><text x="97.7426%" y="559.50"></text></g><g><title>&lt;env_logger::logger::Logger as log::Log&gt;::log::{{closure}}::{{closure}} (1 samples, 0.02%)</title><rect x="97.4926%" y="533" width="0.0246%" height="15" fill="rgb(237,177,39)" fg:x="3966" fg:w="1"/><text x="97.7426%" y="543.50"></text></g><g><title>env_logger::fmt::Formatter::print (1 samples, 0.02%)</title><rect x="97.4926%" y="517" width="0.0246%" height="15" fill="rgb(246,69,6)" fg:x="3966" fg:w="1"/><text x="97.7426%" y="527.50"></text></g><g><title>env_logger::fmt::writer::Writer::print (1 samples, 0.02%)</title><rect x="97.4926%" y="501" width="0.0246%" height="15" fill="rgb(234,208,37)" fg:x="3966" fg:w="1"/><text x="97.7426%" y="511.50"></text></g><g><title>env_logger::fmt::writer::buffer::termcolor::BufferWriter::print (1 samples, 0.02%)</title><rect x="97.4926%" y="485" width="0.0246%" height="15" fill="rgb(225,4,6)" fg:x="3966" fg:w="1"/><text x="97.7426%" y="495.50"></text></g><g><title>termcolor::BufferWriter::print (1 samples, 0.02%)</title><rect x="97.4926%" y="469" width="0.0246%" height="15" fill="rgb(233,45,0)" fg:x="3966" fg:w="1"/><text x="97.7426%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;termcolor::LossyStandardStream&lt;termcolor::IoStandardStreamLock&gt;&gt; (1 samples, 0.02%)</title><rect x="97.4926%" y="453" width="0.0246%" height="15" fill="rgb(226,136,5)" fg:x="3966" fg:w="1"/><text x="97.7426%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;termcolor::IoStandardStreamLock&gt; (1 samples, 0.02%)</title><rect x="97.4926%" y="437" width="0.0246%" height="15" fill="rgb(211,91,47)" fg:x="3966" fg:w="1"/><text x="97.7426%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::stdio::StderrLock&gt; (1 samples, 0.02%)</title><rect x="97.4926%" y="421" width="0.0246%" height="15" fill="rgb(242,88,51)" fg:x="3966" fg:w="1"/><text x="97.7426%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::remutex::ReentrantMutexGuard&lt;core::cell::RefCell&lt;std::io::stdio::StderrRaw&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="97.4926%" y="405" width="0.0246%" height="15" fill="rgb(230,91,28)" fg:x="3966" fg:w="1"/><text x="97.7426%" y="415.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.02%)</title><rect x="97.5172%" y="613" width="0.0246%" height="15" fill="rgb(254,186,29)" fg:x="3967" fg:w="1"/><text x="97.7672%" y="623.50"></text></g><g><title>tftp::buffer::resize_buffer (2 samples, 0.05%)</title><rect x="97.5172%" y="629" width="0.0492%" height="15" fill="rgb(238,6,4)" fg:x="3967" fg:w="2"/><text x="97.7672%" y="639.50"></text></g><g><title>heapless::vec::Vec&lt;T,_&gt;::set_len (1 samples, 0.02%)</title><rect x="97.5418%" y="613" width="0.0246%" height="15" fill="rgb(221,151,16)" fg:x="3968" fg:w="1"/><text x="97.7918%" y="623.50"></text></g><g><title>__srcu_read_lock (1 samples, 0.02%)</title><rect x="97.6401%" y="405" width="0.0246%" height="15" fill="rgb(251,143,52)" fg:x="3972" fg:w="1"/><text x="97.8901%" y="415.50"></text></g><g><title>get_obj_cgroup_from_current (1 samples, 0.02%)</title><rect x="97.7139%" y="357" width="0.0246%" height="15" fill="rgb(206,90,15)" fg:x="3975" fg:w="1"/><text x="97.9639%" y="367.50"></text></g><g><title>__get_obj_cgroup_from_memcg (1 samples, 0.02%)</title><rect x="97.7139%" y="341" width="0.0246%" height="15" fill="rgb(218,35,8)" fg:x="3975" fg:w="1"/><text x="97.9639%" y="351.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.02%)</title><rect x="97.7139%" y="325" width="0.0246%" height="15" fill="rgb(239,215,6)" fg:x="3975" fg:w="1"/><text x="97.9639%" y="335.50"></text></g><g><title>memcg_slab_post_alloc_hook (1 samples, 0.02%)</title><rect x="97.7384%" y="357" width="0.0246%" height="15" fill="rgb(245,116,39)" fg:x="3976" fg:w="1"/><text x="97.9884%" y="367.50"></text></g><g><title>__kmalloc (4 samples, 0.10%)</title><rect x="97.6893%" y="389" width="0.0983%" height="15" fill="rgb(242,65,28)" fg:x="3974" fg:w="4"/><text x="97.9393%" y="399.50"></text></g><g><title>__kmem_cache_alloc_node (4 samples, 0.10%)</title><rect x="97.6893%" y="373" width="0.0983%" height="15" fill="rgb(252,132,53)" fg:x="3974" fg:w="4"/><text x="97.9393%" y="383.50"></text></g><g><title>obj_cgroup_charge (1 samples, 0.02%)</title><rect x="97.7630%" y="357" width="0.0246%" height="15" fill="rgb(224,159,50)" fg:x="3977" fg:w="1"/><text x="98.0130%" y="367.50"></text></g><g><title>check_preemption_disabled (1 samples, 0.02%)</title><rect x="97.7630%" y="341" width="0.0246%" height="15" fill="rgb(224,93,4)" fg:x="3977" fg:w="1"/><text x="98.0130%" y="351.50"></text></g><g><title>default_send_IPI_single_phys (1 samples, 0.02%)</title><rect x="97.7876%" y="293" width="0.0246%" height="15" fill="rgb(208,81,34)" fg:x="3978" fg:w="1"/><text x="98.0376%" y="303.50"></text></g><g><title>__default_send_IPI_dest_field (1 samples, 0.02%)</title><rect x="97.7876%" y="277" width="0.0246%" height="15" fill="rgb(233,92,54)" fg:x="3978" fg:w="1"/><text x="98.0376%" y="287.50"></text></g><g><title>__fsnotify_parent (11 samples, 0.27%)</title><rect x="97.5664%" y="437" width="0.2704%" height="15" fill="rgb(237,21,14)" fg:x="3969" fg:w="11"/><text x="97.8164%" y="447.50"></text></g><g><title>fsnotify (10 samples, 0.25%)</title><rect x="97.5910%" y="421" width="0.2458%" height="15" fill="rgb(249,128,51)" fg:x="3970" fg:w="10"/><text x="97.8410%" y="431.50"></text></g><g><title>inotify_handle_inode_event (7 samples, 0.17%)</title><rect x="97.6647%" y="405" width="0.1721%" height="15" fill="rgb(223,129,24)" fg:x="3973" fg:w="7"/><text x="97.9147%" y="415.50"></text></g><g><title>fsnotify_insert_event (2 samples, 0.05%)</title><rect x="97.7876%" y="389" width="0.0492%" height="15" fill="rgb(231,168,25)" fg:x="3978" fg:w="2"/><text x="98.0376%" y="399.50"></text></g><g><title>__wake_up_common_lock (2 samples, 0.05%)</title><rect x="97.7876%" y="373" width="0.0492%" height="15" fill="rgb(224,39,20)" fg:x="3978" fg:w="2"/><text x="98.0376%" y="383.50"></text></g><g><title>__wake_up_common (2 samples, 0.05%)</title><rect x="97.7876%" y="357" width="0.0492%" height="15" fill="rgb(225,152,53)" fg:x="3978" fg:w="2"/><text x="98.0376%" y="367.50"></text></g><g><title>pollwake (2 samples, 0.05%)</title><rect x="97.7876%" y="341" width="0.0492%" height="15" fill="rgb(252,17,24)" fg:x="3978" fg:w="2"/><text x="98.0376%" y="351.50"></text></g><g><title>try_to_wake_up (2 samples, 0.05%)</title><rect x="97.7876%" y="325" width="0.0492%" height="15" fill="rgb(250,114,30)" fg:x="3978" fg:w="2"/><text x="98.0376%" y="335.50"></text></g><g><title>ttwu_queue_wakelist (2 samples, 0.05%)</title><rect x="97.7876%" y="309" width="0.0492%" height="15" fill="rgb(229,5,4)" fg:x="3978" fg:w="2"/><text x="98.0376%" y="319.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.02%)</title><rect x="97.8122%" y="293" width="0.0246%" height="15" fill="rgb(225,176,49)" fg:x="3979" fg:w="1"/><text x="98.0622%" y="303.50"></text></g><g><title>__ext4_journal_stop (1 samples, 0.02%)</title><rect x="97.8368%" y="373" width="0.0246%" height="15" fill="rgb(224,221,49)" fg:x="3980" fg:w="1"/><text x="98.0868%" y="383.50"></text></g><g><title>jbd2_journal_stop (1 samples, 0.02%)</title><rect x="97.8368%" y="357" width="0.0246%" height="15" fill="rgb(253,169,27)" fg:x="3980" fg:w="1"/><text x="98.0868%" y="367.50"></text></g><g><title>ext4_mark_iloc_dirty (1 samples, 0.02%)</title><rect x="97.8614%" y="341" width="0.0246%" height="15" fill="rgb(211,206,16)" fg:x="3981" fg:w="1"/><text x="98.1114%" y="351.50"></text></g><g><title>ext4_fill_raw_inode (1 samples, 0.02%)</title><rect x="97.8614%" y="325" width="0.0246%" height="15" fill="rgb(244,87,35)" fg:x="3981" fg:w="1"/><text x="98.1114%" y="335.50"></text></g><g><title>ext4_inode_csum_set (1 samples, 0.02%)</title><rect x="97.8614%" y="309" width="0.0246%" height="15" fill="rgb(246,28,10)" fg:x="3981" fg:w="1"/><text x="98.1114%" y="319.50"></text></g><g><title>ext4_inode_csum (1 samples, 0.02%)</title><rect x="97.8614%" y="293" width="0.0246%" height="15" fill="rgb(229,12,44)" fg:x="3981" fg:w="1"/><text x="98.1114%" y="303.50"></text></g><g><title>crc32c_pcl_intel_update (1 samples, 0.02%)</title><rect x="97.8614%" y="277" width="0.0246%" height="15" fill="rgb(210,145,37)" fg:x="3981" fg:w="1"/><text x="98.1114%" y="287.50"></text></g><g><title>file_modified_flags (3 samples, 0.07%)</title><rect x="97.8368%" y="421" width="0.0737%" height="15" fill="rgb(227,112,52)" fg:x="3980" fg:w="3"/><text x="98.0868%" y="431.50"></text></g><g><title>generic_update_time (3 samples, 0.07%)</title><rect x="97.8368%" y="405" width="0.0737%" height="15" fill="rgb(238,155,34)" fg:x="3980" fg:w="3"/><text x="98.0868%" y="415.50"></text></g><g><title>__mark_inode_dirty (3 samples, 0.07%)</title><rect x="97.8368%" y="389" width="0.0737%" height="15" fill="rgb(239,226,36)" fg:x="3980" fg:w="3"/><text x="98.0868%" y="399.50"></text></g><g><title>ext4_dirty_inode (2 samples, 0.05%)</title><rect x="97.8614%" y="373" width="0.0492%" height="15" fill="rgb(230,16,23)" fg:x="3981" fg:w="2"/><text x="98.1114%" y="383.50"></text></g><g><title>__ext4_mark_inode_dirty (2 samples, 0.05%)</title><rect x="97.8614%" y="357" width="0.0492%" height="15" fill="rgb(236,171,36)" fg:x="3981" fg:w="2"/><text x="98.1114%" y="367.50"></text></g><g><title>ext4_reserve_inode_write (1 samples, 0.02%)</title><rect x="97.8859%" y="341" width="0.0246%" height="15" fill="rgb(221,22,14)" fg:x="3982" fg:w="1"/><text x="98.1359%" y="351.50"></text></g><g><title>__ext4_journal_get_write_access (1 samples, 0.02%)</title><rect x="97.8859%" y="325" width="0.0246%" height="15" fill="rgb(242,43,11)" fg:x="3982" fg:w="1"/><text x="98.1359%" y="335.50"></text></g><g><title>__cond_resched (1 samples, 0.02%)</title><rect x="97.8859%" y="309" width="0.0246%" height="15" fill="rgb(232,69,23)" fg:x="3982" fg:w="1"/><text x="98.1359%" y="319.50"></text></g><g><title>balance_dirty_pages_ratelimited_flags (1 samples, 0.02%)</title><rect x="97.9351%" y="405" width="0.0246%" height="15" fill="rgb(216,180,54)" fg:x="3984" fg:w="1"/><text x="98.1851%" y="415.50"></text></g><g><title>copy_page_from_iter_atomic (1 samples, 0.02%)</title><rect x="97.9597%" y="405" width="0.0246%" height="15" fill="rgb(216,5,24)" fg:x="3985" fg:w="1"/><text x="98.2097%" y="415.50"></text></g><g><title>copy_user_generic_string (1 samples, 0.02%)</title><rect x="97.9597%" y="389" width="0.0246%" height="15" fill="rgb(225,89,9)" fg:x="3985" fg:w="1"/><text x="98.2097%" y="399.50"></text></g><g><title>ext4_block_write_begin (2 samples, 0.05%)</title><rect x="97.9843%" y="389" width="0.0492%" height="15" fill="rgb(243,75,33)" fg:x="3986" fg:w="2"/><text x="98.2343%" y="399.50"></text></g><g><title>create_empty_buffers (2 samples, 0.05%)</title><rect x="97.9843%" y="373" width="0.0492%" height="15" fill="rgb(247,141,45)" fg:x="3986" fg:w="2"/><text x="98.2343%" y="383.50"></text></g><g><title>alloc_page_buffers (2 samples, 0.05%)</title><rect x="97.9843%" y="357" width="0.0492%" height="15" fill="rgb(232,177,36)" fg:x="3986" fg:w="2"/><text x="98.2343%" y="367.50"></text></g><g><title>alloc_buffer_head (1 samples, 0.02%)</title><rect x="98.0088%" y="341" width="0.0246%" height="15" fill="rgb(219,125,36)" fg:x="3987" fg:w="1"/><text x="98.2588%" y="351.50"></text></g><g><title>kmem_cache_alloc (1 samples, 0.02%)</title><rect x="98.0088%" y="325" width="0.0246%" height="15" fill="rgb(227,94,9)" fg:x="3987" fg:w="1"/><text x="98.2588%" y="335.50"></text></g><g><title>obj_cgroup_charge (1 samples, 0.02%)</title><rect x="98.0088%" y="309" width="0.0246%" height="15" fill="rgb(240,34,52)" fg:x="3987" fg:w="1"/><text x="98.2588%" y="319.50"></text></g><g><title>ext4_nonda_switch (1 samples, 0.02%)</title><rect x="98.0334%" y="389" width="0.0246%" height="15" fill="rgb(216,45,12)" fg:x="3988" fg:w="1"/><text x="98.2834%" y="399.50"></text></g><g><title>__mem_cgroup_charge (1 samples, 0.02%)</title><rect x="98.0580%" y="325" width="0.0246%" height="15" fill="rgb(246,21,19)" fg:x="3989" fg:w="1"/><text x="98.3080%" y="335.50"></text></g><g><title>charge_memcg (1 samples, 0.02%)</title><rect x="98.0580%" y="309" width="0.0246%" height="15" fill="rgb(213,98,42)" fg:x="3989" fg:w="1"/><text x="98.3080%" y="319.50"></text></g><g><title>mem_cgroup_charge_statistics (1 samples, 0.02%)</title><rect x="98.0580%" y="293" width="0.0246%" height="15" fill="rgb(250,136,47)" fg:x="3989" fg:w="1"/><text x="98.3080%" y="303.50"></text></g><g><title>__count_memcg_events (1 samples, 0.02%)</title><rect x="98.0580%" y="277" width="0.0246%" height="15" fill="rgb(251,124,27)" fg:x="3989" fg:w="1"/><text x="98.3080%" y="287.50"></text></g><g><title>filemap_add_folio (2 samples, 0.05%)</title><rect x="98.0580%" y="357" width="0.0492%" height="15" fill="rgb(229,180,14)" fg:x="3989" fg:w="2"/><text x="98.3080%" y="367.50"></text></g><g><title>__filemap_add_folio (2 samples, 0.05%)</title><rect x="98.0580%" y="341" width="0.0492%" height="15" fill="rgb(245,216,25)" fg:x="3989" fg:w="2"/><text x="98.3080%" y="351.50"></text></g><g><title>xas_nomem (1 samples, 0.02%)</title><rect x="98.0826%" y="325" width="0.0246%" height="15" fill="rgb(251,43,5)" fg:x="3990" fg:w="1"/><text x="98.3326%" y="335.50"></text></g><g><title>folio_alloc (1 samples, 0.02%)</title><rect x="98.1072%" y="357" width="0.0246%" height="15" fill="rgb(250,128,24)" fg:x="3991" fg:w="1"/><text x="98.3572%" y="367.50"></text></g><g><title>__alloc_pages (1 samples, 0.02%)</title><rect x="98.1072%" y="341" width="0.0246%" height="15" fill="rgb(217,117,27)" fg:x="3991" fg:w="1"/><text x="98.3572%" y="351.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="98.1072%" y="325" width="0.0246%" height="15" fill="rgb(245,147,4)" fg:x="3991" fg:w="1"/><text x="98.3572%" y="335.50"></text></g><g><title>clear_page_rep (1 samples, 0.02%)</title><rect x="98.1072%" y="309" width="0.0246%" height="15" fill="rgb(242,201,35)" fg:x="3991" fg:w="1"/><text x="98.3572%" y="319.50"></text></g><g><title>ext4_da_write_begin (7 samples, 0.17%)</title><rect x="97.9843%" y="405" width="0.1721%" height="15" fill="rgb(218,181,1)" fg:x="3986" fg:w="7"/><text x="98.2343%" y="415.50"></text></g><g><title>pagecache_get_page (4 samples, 0.10%)</title><rect x="98.0580%" y="389" width="0.0983%" height="15" fill="rgb(222,6,29)" fg:x="3989" fg:w="4"/><text x="98.3080%" y="399.50"></text></g><g><title>__filemap_get_folio (4 samples, 0.10%)</title><rect x="98.0580%" y="373" width="0.0983%" height="15" fill="rgb(208,186,3)" fg:x="3989" fg:w="4"/><text x="98.3080%" y="383.50"></text></g><g><title>inode_to_bdi (1 samples, 0.02%)</title><rect x="98.1318%" y="357" width="0.0246%" height="15" fill="rgb(216,36,26)" fg:x="3992" fg:w="1"/><text x="98.3818%" y="367.50"></text></g><g><title>ext4_da_write_end (1 samples, 0.02%)</title><rect x="98.1563%" y="405" width="0.0246%" height="15" fill="rgb(248,201,23)" fg:x="3993" fg:w="1"/><text x="98.4063%" y="415.50"></text></g><g><title>__ext4_journal_stop (1 samples, 0.02%)</title><rect x="98.2055%" y="373" width="0.0246%" height="15" fill="rgb(251,170,31)" fg:x="3995" fg:w="1"/><text x="98.4555%" y="383.50"></text></g><g><title>jbd2_journal_stop (1 samples, 0.02%)</title><rect x="98.2055%" y="357" width="0.0246%" height="15" fill="rgb(207,110,25)" fg:x="3995" fg:w="1"/><text x="98.4555%" y="367.50"></text></g><g><title>stop_this_handle (1 samples, 0.02%)</title><rect x="98.2055%" y="341" width="0.0246%" height="15" fill="rgb(250,54,15)" fg:x="3995" fg:w="1"/><text x="98.4555%" y="351.50"></text></g><g><title>__wake_up_common_lock (1 samples, 0.02%)</title><rect x="98.2055%" y="325" width="0.0246%" height="15" fill="rgb(227,68,33)" fg:x="3995" fg:w="1"/><text x="98.4555%" y="335.50"></text></g><g><title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="98.2055%" y="309" width="0.0246%" height="15" fill="rgb(238,34,41)" fg:x="3995" fg:w="1"/><text x="98.4555%" y="319.50"></text></g><g><title>ext4_mark_iloc_dirty (2 samples, 0.05%)</title><rect x="98.2301%" y="341" width="0.0492%" height="15" fill="rgb(220,11,15)" fg:x="3996" fg:w="2"/><text x="98.4801%" y="351.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="98.2547%" y="325" width="0.0246%" height="15" fill="rgb(246,111,35)" fg:x="3997" fg:w="1"/><text x="98.5047%" y="335.50"></text></g><g><title>__ext4_journal_get_write_access (1 samples, 0.02%)</title><rect x="98.2793%" y="325" width="0.0246%" height="15" fill="rgb(209,88,53)" fg:x="3998" fg:w="1"/><text x="98.5293%" y="335.50"></text></g><g><title>jbd2_journal_get_write_access (1 samples, 0.02%)</title><rect x="98.2793%" y="309" width="0.0246%" height="15" fill="rgb(231,185,47)" fg:x="3998" fg:w="1"/><text x="98.5293%" y="319.50"></text></g><g><title>jbd2_write_access_granted (1 samples, 0.02%)</title><rect x="98.2793%" y="293" width="0.0246%" height="15" fill="rgb(233,154,1)" fg:x="3998" fg:w="1"/><text x="98.5293%" y="303.50"></text></g><g><title>__getblk_gfp (2 samples, 0.05%)</title><rect x="98.3038%" y="293" width="0.0492%" height="15" fill="rgb(225,15,46)" fg:x="3999" fg:w="2"/><text x="98.5538%" y="303.50"></text></g><g><title>__find_get_block (2 samples, 0.05%)</title><rect x="98.3038%" y="277" width="0.0492%" height="15" fill="rgb(211,135,41)" fg:x="3999" fg:w="2"/><text x="98.5538%" y="287.50"></text></g><g><title>check_preemption_disabled (2 samples, 0.05%)</title><rect x="98.3038%" y="261" width="0.0492%" height="15" fill="rgb(208,54,0)" fg:x="3999" fg:w="2"/><text x="98.5538%" y="271.50"></text></g><g><title>ext4_get_group_desc (1 samples, 0.02%)</title><rect x="98.3530%" y="293" width="0.0246%" height="15" fill="rgb(244,136,14)" fg:x="4001" fg:w="1"/><text x="98.6030%" y="303.50"></text></g><g><title>tftp::client::receiver::write_block (34 samples, 0.84%)</title><rect x="97.5664%" y="629" width="0.8358%" height="15" fill="rgb(241,56,14)" fg:x="3969" fg:w="34"/><text x="97.8164%" y="639.50"></text></g><g><title>&lt;tftp::writers::single_block_writer::SingleBlockWriter&lt;W&gt; as tftp::writers::block_writer::BlockWriter&gt;::write_block (34 samples, 0.84%)</title><rect x="97.5664%" y="613" width="0.8358%" height="15" fill="rgb(205,80,24)" fg:x="3969" fg:w="34"/><text x="97.8164%" y="623.50"></text></g><g><title>&lt;tftp::std_compat::fs::File as tftp::std_compat::io::Write&gt;::write (34 samples, 0.84%)</title><rect x="97.5664%" y="597" width="0.8358%" height="15" fill="rgb(220,57,4)" fg:x="3969" fg:w="34"/><text x="97.8164%" y="607.50"></text></g><g><title>&lt;std::fs::File as std::io::Write&gt;::write (34 samples, 0.84%)</title><rect x="97.5664%" y="581" width="0.8358%" height="15" fill="rgb(226,193,50)" fg:x="3969" fg:w="34"/><text x="97.8164%" y="591.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (34 samples, 0.84%)</title><rect x="97.5664%" y="565" width="0.8358%" height="15" fill="rgb(231,168,22)" fg:x="3969" fg:w="34"/><text x="97.8164%" y="575.50"></text></g><g><title>std::sys::unix::fs::File::write (34 samples, 0.84%)</title><rect x="97.5664%" y="549" width="0.8358%" height="15" fill="rgb(254,215,14)" fg:x="3969" fg:w="34"/><text x="97.8164%" y="559.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (34 samples, 0.84%)</title><rect x="97.5664%" y="533" width="0.8358%" height="15" fill="rgb(211,115,16)" fg:x="3969" fg:w="34"/><text x="97.8164%" y="543.50"></text></g><g><title>__GI___libc_write (34 samples, 0.84%)</title><rect x="97.5664%" y="517" width="0.8358%" height="15" fill="rgb(236,210,16)" fg:x="3969" fg:w="34"/><text x="97.8164%" y="527.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (34 samples, 0.84%)</title><rect x="97.5664%" y="501" width="0.8358%" height="15" fill="rgb(221,94,12)" fg:x="3969" fg:w="34"/><text x="97.8164%" y="511.50"></text></g><g><title>do_syscall_64 (34 samples, 0.84%)</title><rect x="97.5664%" y="485" width="0.8358%" height="15" fill="rgb(235,218,49)" fg:x="3969" fg:w="34"/><text x="97.8164%" y="495.50"></text></g><g><title>ksys_write (34 samples, 0.84%)</title><rect x="97.5664%" y="469" width="0.8358%" height="15" fill="rgb(217,114,14)" fg:x="3969" fg:w="34"/><text x="97.8164%" y="479.50"></text></g><g><title>vfs_write (34 samples, 0.84%)</title><rect x="97.5664%" y="453" width="0.8358%" height="15" fill="rgb(216,145,22)" fg:x="3969" fg:w="34"/><text x="97.8164%" y="463.50"></text></g><g><title>ext4_buffered_write_iter (23 samples, 0.57%)</title><rect x="97.8368%" y="437" width="0.5654%" height="15" fill="rgb(217,112,39)" fg:x="3980" fg:w="23"/><text x="98.0868%" y="447.50"></text></g><g><title>generic_perform_write (20 samples, 0.49%)</title><rect x="97.9105%" y="421" width="0.4916%" height="15" fill="rgb(225,85,32)" fg:x="3983" fg:w="20"/><text x="98.1605%" y="431.50"></text></g><g><title>generic_write_end (9 samples, 0.22%)</title><rect x="98.1809%" y="405" width="0.2212%" height="15" fill="rgb(245,209,47)" fg:x="3994" fg:w="9"/><text x="98.4309%" y="415.50"></text></g><g><title>__mark_inode_dirty (8 samples, 0.20%)</title><rect x="98.2055%" y="389" width="0.1967%" height="15" fill="rgb(218,220,15)" fg:x="3995" fg:w="8"/><text x="98.4555%" y="399.50"></text></g><g><title>ext4_dirty_inode (7 samples, 0.17%)</title><rect x="98.2301%" y="373" width="0.1721%" height="15" fill="rgb(222,202,31)" fg:x="3996" fg:w="7"/><text x="98.4801%" y="383.50"></text></g><g><title>__ext4_mark_inode_dirty (7 samples, 0.17%)</title><rect x="98.2301%" y="357" width="0.1721%" height="15" fill="rgb(243,203,4)" fg:x="3996" fg:w="7"/><text x="98.4801%" y="367.50"></text></g><g><title>ext4_reserve_inode_write (5 samples, 0.12%)</title><rect x="98.2793%" y="341" width="0.1229%" height="15" fill="rgb(237,92,17)" fg:x="3998" fg:w="5"/><text x="98.5293%" y="351.50"></text></g><g><title>ext4_get_inode_loc (4 samples, 0.10%)</title><rect x="98.3038%" y="325" width="0.0983%" height="15" fill="rgb(231,119,7)" fg:x="3999" fg:w="4"/><text x="98.5538%" y="335.50"></text></g><g><title>__ext4_get_inode_loc (4 samples, 0.10%)</title><rect x="98.3038%" y="309" width="0.0983%" height="15" fill="rgb(237,82,41)" fg:x="3999" fg:w="4"/><text x="98.5538%" y="319.50"></text></g><g><title>ext4_inode_table (1 samples, 0.02%)</title><rect x="98.3776%" y="293" width="0.0246%" height="15" fill="rgb(226,81,48)" fg:x="4002" fg:w="1"/><text x="98.6276%" y="303.50"></text></g><g><title>tftp::client::receiver::receive_file (1,370 samples, 33.68%)</title><rect x="64.7493%" y="645" width="33.6775%" height="15" fill="rgb(234,70,51)" fg:x="2634" fg:w="1370"/><text x="64.9993%" y="655.50">tftp::client::receiver::receive_file</text></g><g><title>tftp::io::instant_callback (1 samples, 0.02%)</title><rect x="98.4022%" y="629" width="0.0246%" height="15" fill="rgb(251,86,4)" fg:x="4003" fg:w="1"/><text x="98.6522%" y="639.50"></text></g><g><title>tftp::std_compat::time::Instant::from_time (1 samples, 0.02%)</title><rect x="98.4022%" y="613" width="0.0246%" height="15" fill="rgb(244,144,28)" fg:x="4003" fg:w="1"/><text x="98.6522%" y="623.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.02%)</title><rect x="98.4022%" y="597" width="0.0246%" height="15" fill="rgb(232,161,39)" fg:x="4003" fg:w="1"/><text x="98.6522%" y="607.50"></text></g><g><title>tftp::io::instant_callback::{{closure}} (1 samples, 0.02%)</title><rect x="98.4022%" y="581" width="0.0246%" height="15" fill="rgb(247,34,51)" fg:x="4003" fg:w="1"/><text x="98.6522%" y="591.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (1 samples, 0.02%)</title><rect x="98.4022%" y="565" width="0.0246%" height="15" fill="rgb(225,132,2)" fg:x="4003" fg:w="1"/><text x="98.6522%" y="575.50"></text></g><g><title>tftp::client::receiver::write_block (1 samples, 0.02%)</title><rect x="98.4267%" y="645" width="0.0246%" height="15" fill="rgb(209,159,44)" fg:x="4004" fg:w="1"/><text x="98.6767%" y="655.50"></text></g><g><title>tftp::config::ConnectionOptions::is_encrypting (1 samples, 0.02%)</title><rect x="98.4513%" y="645" width="0.0246%" height="15" fill="rgb(251,214,1)" fg:x="4005" fg:w="1"/><text x="98.7013%" y="655.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (1 samples, 0.02%)</title><rect x="98.4759%" y="405" width="0.0246%" height="15" fill="rgb(247,84,47)" fg:x="4006" fg:w="1"/><text x="98.7259%" y="415.50"></text></g><g><title>tftp::encrypted_packet::EncryptedPacket::decrypt (2 samples, 0.05%)</title><rect x="98.4759%" y="645" width="0.0492%" height="15" fill="rgb(240,111,43)" fg:x="4006" fg:w="2"/><text x="98.7259%" y="655.50"></text></g><g><title>tftp::encryption::Encryptor&lt;R&gt;::decrypt (2 samples, 0.05%)</title><rect x="98.4759%" y="629" width="0.0492%" height="15" fill="rgb(215,214,35)" fg:x="4006" fg:w="2"/><text x="98.7259%" y="639.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (2 samples, 0.05%)</title><rect x="98.4759%" y="613" width="0.0492%" height="15" fill="rgb(248,207,23)" fg:x="4006" fg:w="2"/><text x="98.7259%" y="623.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::decrypt_in_place_detached (2 samples, 0.05%)</title><rect x="98.4759%" y="597" width="0.0492%" height="15" fill="rgb(214,186,4)" fg:x="4006" fg:w="2"/><text x="98.7259%" y="607.50"></text></g><g><title>universal_hash::UniversalHash::update_padded (2 samples, 0.05%)</title><rect x="98.4759%" y="581" width="0.0492%" height="15" fill="rgb(220,133,22)" fg:x="4006" fg:w="2"/><text x="98.7259%" y="591.50"></text></g><g><title>universal_hash::UniversalHash::update (2 samples, 0.05%)</title><rect x="98.4759%" y="565" width="0.0492%" height="15" fill="rgb(239,134,19)" fg:x="4006" fg:w="2"/><text x="98.7259%" y="575.50"></text></g><g><title>&lt;poly1305::Poly1305 as universal_hash::UniversalHash&gt;::update_with_backend (2 samples, 0.05%)</title><rect x="98.4759%" y="549" width="0.0492%" height="15" fill="rgb(250,140,9)" fg:x="4006" fg:w="2"/><text x="98.7259%" y="559.50"></text></g><g><title>&lt;poly1305::backend::autodetect::State as universal_hash::UniversalHash&gt;::update_with_backend (2 samples, 0.05%)</title><rect x="98.4759%" y="533" width="0.0492%" height="15" fill="rgb(225,59,14)" fg:x="4006" fg:w="2"/><text x="98.7259%" y="543.50"></text></g><g><title>&lt;universal_hash::UniversalHash::update::Ctx&lt;BS&gt; as universal_hash::UhfClosure&gt;::call (2 samples, 0.05%)</title><rect x="98.4759%" y="517" width="0.0492%" height="15" fill="rgb(214,152,51)" fg:x="4006" fg:w="2"/><text x="98.7259%" y="527.50"></text></g><g><title>&lt;poly1305::backend::avx2::State as universal_hash::UhfBackend&gt;::proc_par_blocks (2 samples, 0.05%)</title><rect x="98.4759%" y="501" width="0.0492%" height="15" fill="rgb(251,227,43)" fg:x="4006" fg:w="2"/><text x="98.7259%" y="511.50"></text></g><g><title>poly1305::backend::avx2::State::compute_par_blocks (2 samples, 0.05%)</title><rect x="98.4759%" y="485" width="0.0492%" height="15" fill="rgb(241,96,17)" fg:x="4006" fg:w="2"/><text x="98.7259%" y="495.50"></text></g><g><title>poly1305::backend::avx2::State::process_blocks (2 samples, 0.05%)</title><rect x="98.4759%" y="469" width="0.0492%" height="15" fill="rgb(234,198,43)" fg:x="4006" fg:w="2"/><text x="98.7259%" y="479.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce (2 samples, 0.05%)</title><rect x="98.4759%" y="453" width="0.0492%" height="15" fill="rgb(220,108,29)" fg:x="4006" fg:w="2"/><text x="98.7259%" y="463.50"></text></g><g><title>poly1305::backend::avx2::helpers::Unreduced4x130::reduce::{{closure}} (2 samples, 0.05%)</title><rect x="98.4759%" y="437" width="0.0492%" height="15" fill="rgb(226,163,33)" fg:x="4006" fg:w="2"/><text x="98.7259%" y="447.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_mul_epu32 (2 samples, 0.05%)</title><rect x="98.4759%" y="421" width="0.0492%" height="15" fill="rgb(205,194,45)" fg:x="4006" fg:w="2"/><text x="98.7259%" y="431.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i64x4 (1 samples, 0.02%)</title><rect x="98.5005%" y="405" width="0.0246%" height="15" fill="rgb(206,143,44)" fg:x="4007" fg:w="1"/><text x="98.7505%" y="415.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (1 samples, 0.02%)</title><rect x="98.5251%" y="229" width="0.0246%" height="15" fill="rgb(236,136,36)" fg:x="4008" fg:w="1"/><text x="98.7751%" y="239.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (4 samples, 0.10%)</title><rect x="98.5497%" y="213" width="0.0983%" height="15" fill="rgb(249,172,42)" fg:x="4009" fg:w="4"/><text x="98.7997%" y="223.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (1 samples, 0.02%)</title><rect x="98.6234%" y="197" width="0.0246%" height="15" fill="rgb(216,139,23)" fg:x="4012" fg:w="1"/><text x="98.8734%" y="207.50"></text></g><g><title>tftp::encryption::Encryptor&lt;R&gt;::decrypt (6 samples, 0.15%)</title><rect x="98.5251%" y="645" width="0.1475%" height="15" fill="rgb(207,166,20)" fg:x="4008" fg:w="6"/><text x="98.7751%" y="655.50"></text></g><g><title>&lt;chacha20poly1305::ChaChaPoly1305&lt;C,N&gt; as aead::AeadInPlace&gt;::decrypt_in_place_detached (6 samples, 0.15%)</title><rect x="98.5251%" y="629" width="0.1475%" height="15" fill="rgb(210,209,22)" fg:x="4008" fg:w="6"/><text x="98.7751%" y="639.50"></text></g><g><title>chacha20poly1305::cipher::Cipher&lt;C&gt;::new (6 samples, 0.15%)</title><rect x="98.5251%" y="613" width="0.1475%" height="15" fill="rgb(232,118,20)" fg:x="4008" fg:w="6"/><text x="98.7751%" y="623.50"></text></g><g><title>cipher::stream::StreamCipher::apply_keystream (6 samples, 0.15%)</title><rect x="98.5251%" y="597" width="0.1475%" height="15" fill="rgb(238,113,42)" fg:x="4008" fg:w="6"/><text x="98.7751%" y="607.50"></text></g><g><title>cipher::stream::StreamCipher::try_apply_keystream (6 samples, 0.15%)</title><rect x="98.5251%" y="581" width="0.1475%" height="15" fill="rgb(231,42,5)" fg:x="4008" fg:w="6"/><text x="98.7751%" y="591.50"></text></g><g><title>&lt;cipher::stream_wrapper::StreamCipherCoreWrapper&lt;T&gt; as cipher::stream::StreamCipher&gt;::try_apply_keystream_inout (6 samples, 0.15%)</title><rect x="98.5251%" y="565" width="0.1475%" height="15" fill="rgb(243,166,24)" fg:x="4008" fg:w="6"/><text x="98.7751%" y="575.50"></text></g><g><title>cipher::stream_core::StreamCipherCore::apply_keystream_blocks_inout (6 samples, 0.15%)</title><rect x="98.5251%" y="549" width="0.1475%" height="15" fill="rgb(237,226,12)" fg:x="4008" fg:w="6"/><text x="98.7751%" y="559.50"></text></g><g><title>&lt;chacha20::xchacha::XChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (6 samples, 0.15%)</title><rect x="98.5251%" y="533" width="0.1475%" height="15" fill="rgb(229,133,24)" fg:x="4008" fg:w="6"/><text x="98.7751%" y="543.50"></text></g><g><title>&lt;chacha20::ChaChaCore&lt;R&gt; as cipher::stream_core::StreamCipherCore&gt;::process_with_backend (6 samples, 0.15%)</title><rect x="98.5251%" y="517" width="0.1475%" height="15" fill="rgb(238,33,43)" fg:x="4008" fg:w="6"/><text x="98.7751%" y="527.50"></text></g><g><title>chacha20::backends::avx2::inner (6 samples, 0.15%)</title><rect x="98.5251%" y="501" width="0.1475%" height="15" fill="rgb(227,59,38)" fg:x="4008" fg:w="6"/><text x="98.7751%" y="511.50"></text></g><g><title>&lt;cipher::stream_core::ApplyBlocksCtx&lt;BS&gt; as cipher::stream_core::StreamClosure&gt;::call (6 samples, 0.15%)</title><rect x="98.5251%" y="485" width="0.1475%" height="15" fill="rgb(230,97,0)" fg:x="4008" fg:w="6"/><text x="98.7751%" y="495.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (6 samples, 0.15%)</title><rect x="98.5251%" y="469" width="0.1475%" height="15" fill="rgb(250,173,50)" fg:x="4008" fg:w="6"/><text x="98.7751%" y="479.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (6 samples, 0.15%)</title><rect x="98.5251%" y="453" width="0.1475%" height="15" fill="rgb(240,15,50)" fg:x="4008" fg:w="6"/><text x="98.7751%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (6 samples, 0.15%)</title><rect x="98.5251%" y="437" width="0.1475%" height="15" fill="rgb(221,93,22)" fg:x="4008" fg:w="6"/><text x="98.7751%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.15%)</title><rect x="98.5251%" y="421" width="0.1475%" height="15" fill="rgb(245,180,53)" fg:x="4008" fg:w="6"/><text x="98.7751%" y="431.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.15%)</title><rect x="98.5251%" y="405" width="0.1475%" height="15" fill="rgb(231,88,51)" fg:x="4008" fg:w="6"/><text x="98.7751%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (6 samples, 0.15%)</title><rect x="98.5251%" y="389" width="0.1475%" height="15" fill="rgb(240,58,21)" fg:x="4008" fg:w="6"/><text x="98.7751%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (6 samples, 0.15%)</title><rect x="98.5251%" y="373" width="0.1475%" height="15" fill="rgb(237,21,10)" fg:x="4008" fg:w="6"/><text x="98.7751%" y="383.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate::{{closure}} (6 samples, 0.15%)</title><rect x="98.5251%" y="357" width="0.1475%" height="15" fill="rgb(218,43,11)" fg:x="4008" fg:w="6"/><text x="98.7751%" y="367.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default::{{closure}} (6 samples, 0.15%)</title><rect x="98.5251%" y="341" width="0.1475%" height="15" fill="rgb(218,221,29)" fg:x="4008" fg:w="6"/><text x="98.7751%" y="351.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (6 samples, 0.15%)</title><rect x="98.5251%" y="325" width="0.1475%" height="15" fill="rgb(214,118,42)" fg:x="4008" fg:w="6"/><text x="98.7751%" y="335.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (6 samples, 0.15%)</title><rect x="98.5251%" y="309" width="0.1475%" height="15" fill="rgb(251,200,26)" fg:x="4008" fg:w="6"/><text x="98.7751%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (6 samples, 0.15%)</title><rect x="98.5251%" y="293" width="0.1475%" height="15" fill="rgb(237,101,39)" fg:x="4008" fg:w="6"/><text x="98.7751%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.15%)</title><rect x="98.5251%" y="277" width="0.1475%" height="15" fill="rgb(251,117,11)" fg:x="4008" fg:w="6"/><text x="98.7751%" y="287.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.15%)</title><rect x="98.5251%" y="261" width="0.1475%" height="15" fill="rgb(216,223,23)" fg:x="4008" fg:w="6"/><text x="98.7751%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (6 samples, 0.15%)</title><rect x="98.5251%" y="245" width="0.1475%" height="15" fill="rgb(251,54,12)" fg:x="4008" fg:w="6"/><text x="98.7751%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (5 samples, 0.12%)</title><rect x="98.5497%" y="229" width="0.1229%" height="15" fill="rgb(254,176,54)" fg:x="4009" fg:w="5"/><text x="98.7997%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.02%)</title><rect x="98.6480%" y="213" width="0.0246%" height="15" fill="rgb(210,32,8)" fg:x="4013" fg:w="1"/><text x="98.8980%" y="223.50"></text></g><g><title>tftp::encryption::apply_bit_padding (11 samples, 0.27%)</title><rect x="98.6726%" y="645" width="0.2704%" height="15" fill="rgb(235,52,38)" fg:x="4014" fg:w="11"/><text x="98.9226%" y="655.50"></text></g><g><title>[unknown] (3,439 samples, 84.54%)</title><rect x="14.4297%" y="661" width="84.5379%" height="15" fill="rgb(231,4,44)" fg:x="587" fg:w="3439"/><text x="14.6797%" y="671.50">[unknown]</text></g><g><title>universal_hash::UniversalHash::update_padded (1 samples, 0.02%)</title><rect x="98.9430%" y="645" width="0.0246%" height="15" fill="rgb(249,2,32)" fg:x="4025" fg:w="1"/><text x="99.1930%" y="655.50"></text></g><g><title>_start (1 samples, 0.02%)</title><rect x="98.9676%" y="661" width="0.0246%" height="15" fill="rgb(224,65,26)" fg:x="4026" fg:w="1"/><text x="99.2176%" y="671.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="98.9676%" y="645" width="0.0246%" height="15" fill="rgb(250,73,40)" fg:x="4026" fg:w="1"/><text x="99.2176%" y="655.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="98.9676%" y="629" width="0.0246%" height="15" fill="rgb(253,177,16)" fg:x="4026" fg:w="1"/><text x="99.2176%" y="639.50"></text></g><g><title>syscall_exit_to_user_mode (1 samples, 0.02%)</title><rect x="98.9676%" y="613" width="0.0246%" height="15" fill="rgb(217,32,34)" fg:x="4026" fg:w="1"/><text x="99.2176%" y="623.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.02%)</title><rect x="98.9676%" y="597" width="0.0246%" height="15" fill="rgb(212,7,10)" fg:x="4026" fg:w="1"/><text x="99.2176%" y="607.50"></text></g><g><title>task_work_run (1 samples, 0.02%)</title><rect x="98.9676%" y="581" width="0.0246%" height="15" fill="rgb(245,89,8)" fg:x="4026" fg:w="1"/><text x="99.2176%" y="591.50"></text></g><g><title>__fput (1 samples, 0.02%)</title><rect x="98.9676%" y="565" width="0.0246%" height="15" fill="rgb(237,16,53)" fg:x="4026" fg:w="1"/><text x="99.2176%" y="575.50"></text></g><g><title>__dentry_kill (1 samples, 0.02%)</title><rect x="98.9676%" y="549" width="0.0246%" height="15" fill="rgb(250,204,30)" fg:x="4026" fg:w="1"/><text x="99.2176%" y="559.50"></text></g><g><title>evict (1 samples, 0.02%)</title><rect x="98.9676%" y="533" width="0.0246%" height="15" fill="rgb(208,77,27)" fg:x="4026" fg:w="1"/><text x="99.2176%" y="543.50"></text></g><g><title>chacha20::backends::avx2::inner (1 samples, 0.02%)</title><rect x="98.9921%" y="661" width="0.0246%" height="15" fill="rgb(250,204,28)" fg:x="4027" fg:w="1"/><text x="99.2421%" y="671.50"></text></g><g><title>&lt;[T] as subtle::ConstantTimeEq&gt;::ct_eq (1 samples, 0.02%)</title><rect x="98.9921%" y="645" width="0.0246%" height="15" fill="rgb(244,63,21)" fg:x="4027" fg:w="1"/><text x="99.2421%" y="655.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_i32x8 (1 samples, 0.02%)</title><rect x="99.0167%" y="645" width="0.0246%" height="15" fill="rgb(236,85,44)" fg:x="4028" fg:w="1"/><text x="99.2667%" y="655.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u8x32 (2 samples, 0.05%)</title><rect x="99.0167%" y="661" width="0.0492%" height="15" fill="rgb(215,98,4)" fg:x="4028" fg:w="2"/><text x="99.2667%" y="671.50"></text></g><g><title>core::core_arch::x86::m256iExt::as_u32x8 (1 samples, 0.02%)</title><rect x="99.0413%" y="645" width="0.0246%" height="15" fill="rgb(235,38,11)" fg:x="4029" fg:w="1"/><text x="99.2913%" y="655.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.02%)</title><rect x="99.0659%" y="661" width="0.0246%" height="15" fill="rgb(254,186,25)" fg:x="4030" fg:w="1"/><text x="99.3159%" y="671.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="99.0905%" y="661" width="0.0246%" height="15" fill="rgb(225,55,31)" fg:x="4031" fg:w="1"/><text x="99.3405%" y="671.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.02%)</title><rect x="99.1150%" y="661" width="0.0246%" height="15" fill="rgb(211,15,21)" fg:x="4032" fg:w="1"/><text x="99.3650%" y="671.50"></text></g><g><title>__x64_sys_epoll_ctl (5 samples, 0.12%)</title><rect x="99.1396%" y="629" width="0.1229%" height="15" fill="rgb(215,187,41)" fg:x="4033" fg:w="5"/><text x="99.3896%" y="639.50"></text></g><g><title>do_epoll_ctl (4 samples, 0.10%)</title><rect x="99.1642%" y="613" width="0.0983%" height="15" fill="rgb(248,69,32)" fg:x="4034" fg:w="4"/><text x="99.4142%" y="623.50"></text></g><g><title>ep_item_poll.isra.0 (3 samples, 0.07%)</title><rect x="99.1888%" y="597" width="0.0737%" height="15" fill="rgb(252,102,52)" fg:x="4035" fg:w="3"/><text x="99.4388%" y="607.50"></text></g><g><title>sock_poll (3 samples, 0.07%)</title><rect x="99.1888%" y="581" width="0.0737%" height="15" fill="rgb(253,140,32)" fg:x="4035" fg:w="3"/><text x="99.4388%" y="591.50"></text></g><g><title>udp_poll (1 samples, 0.02%)</title><rect x="99.2380%" y="565" width="0.0246%" height="15" fill="rgb(216,56,42)" fg:x="4037" fg:w="1"/><text x="99.4880%" y="575.50"></text></g><g><title>datagram_poll (1 samples, 0.02%)</title><rect x="99.2380%" y="549" width="0.0246%" height="15" fill="rgb(216,184,14)" fg:x="4037" fg:w="1"/><text x="99.4880%" y="559.50"></text></g><g><title>ep_done_scan (1 samples, 0.02%)</title><rect x="99.2625%" y="597" width="0.0246%" height="15" fill="rgb(237,187,27)" fg:x="4038" fg:w="1"/><text x="99.5125%" y="607.50"></text></g><g><title>__x64_sys_epoll_wait (3 samples, 0.07%)</title><rect x="99.2625%" y="629" width="0.0737%" height="15" fill="rgb(219,65,3)" fg:x="4038" fg:w="3"/><text x="99.5125%" y="639.50"></text></g><g><title>do_epoll_wait (3 samples, 0.07%)</title><rect x="99.2625%" y="613" width="0.0737%" height="15" fill="rgb(245,83,25)" fg:x="4038" fg:w="3"/><text x="99.5125%" y="623.50"></text></g><g><title>schedule_hrtimeout_range_clock (2 samples, 0.05%)</title><rect x="99.2871%" y="597" width="0.0492%" height="15" fill="rgb(214,205,45)" fg:x="4039" fg:w="2"/><text x="99.5371%" y="607.50"></text></g><g><title>schedule (2 samples, 0.05%)</title><rect x="99.2871%" y="581" width="0.0492%" height="15" fill="rgb(241,20,18)" fg:x="4039" fg:w="2"/><text x="99.5371%" y="591.50"></text></g><g><title>__schedule (2 samples, 0.05%)</title><rect x="99.2871%" y="565" width="0.0492%" height="15" fill="rgb(232,163,23)" fg:x="4039" fg:w="2"/><text x="99.5371%" y="575.50"></text></g><g><title>dequeue_task_fair (1 samples, 0.02%)</title><rect x="99.3117%" y="549" width="0.0246%" height="15" fill="rgb(214,5,46)" fg:x="4040" fg:w="1"/><text x="99.5617%" y="559.50"></text></g><g><title>dequeue_entity (1 samples, 0.02%)</title><rect x="99.3117%" y="533" width="0.0246%" height="15" fill="rgb(229,78,17)" fg:x="4040" fg:w="1"/><text x="99.5617%" y="543.50"></text></g><g><title>update_curr (1 samples, 0.02%)</title><rect x="99.3117%" y="517" width="0.0246%" height="15" fill="rgb(248,89,10)" fg:x="4040" fg:w="1"/><text x="99.5617%" y="527.50"></text></g><g><title>cpuacct_charge (1 samples, 0.02%)</title><rect x="99.3117%" y="501" width="0.0246%" height="15" fill="rgb(248,54,15)" fg:x="4040" fg:w="1"/><text x="99.5617%" y="511.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.02%)</title><rect x="99.3363%" y="629" width="0.0246%" height="15" fill="rgb(223,116,6)" fg:x="4041" fg:w="1"/><text x="99.5863%" y="639.50"></text></g><g><title>do_execveat_common.isra.0 (1 samples, 0.02%)</title><rect x="99.3363%" y="613" width="0.0246%" height="15" fill="rgb(205,125,38)" fg:x="4041" fg:w="1"/><text x="99.5863%" y="623.50"></text></g><g><title>bprm_execve (1 samples, 0.02%)</title><rect x="99.3363%" y="597" width="0.0246%" height="15" fill="rgb(251,78,38)" fg:x="4041" fg:w="1"/><text x="99.5863%" y="607.50"></text></g><g><title>load_elf_binary (1 samples, 0.02%)</title><rect x="99.3363%" y="581" width="0.0246%" height="15" fill="rgb(253,78,28)" fg:x="4041" fg:w="1"/><text x="99.5863%" y="591.50"></text></g><g><title>setup_new_exec (1 samples, 0.02%)</title><rect x="99.3363%" y="565" width="0.0246%" height="15" fill="rgb(209,120,3)" fg:x="4041" fg:w="1"/><text x="99.5863%" y="575.50"></text></g><g><title>arch_pick_mmap_layout (1 samples, 0.02%)</title><rect x="99.3363%" y="549" width="0.0246%" height="15" fill="rgb(238,229,9)" fg:x="4041" fg:w="1"/><text x="99.5863%" y="559.50"></text></g><g><title>get_random_u64 (1 samples, 0.02%)</title><rect x="99.3363%" y="533" width="0.0246%" height="15" fill="rgb(253,159,18)" fg:x="4041" fg:w="1"/><text x="99.5863%" y="543.50"></text></g><g><title>__x64_sys_getrandom (2 samples, 0.05%)</title><rect x="99.3609%" y="629" width="0.0492%" height="15" fill="rgb(244,42,34)" fg:x="4042" fg:w="2"/><text x="99.6109%" y="639.50"></text></g><g><title>get_random_bytes_user (2 samples, 0.05%)</title><rect x="99.3609%" y="613" width="0.0492%" height="15" fill="rgb(224,8,7)" fg:x="4042" fg:w="2"/><text x="99.6109%" y="623.50"></text></g><g><title>crng_make_state (2 samples, 0.05%)</title><rect x="99.3609%" y="597" width="0.0492%" height="15" fill="rgb(210,201,45)" fg:x="4042" fg:w="2"/><text x="99.6109%" y="607.50"></text></g><g><title>crng_fast_key_erasure (2 samples, 0.05%)</title><rect x="99.3609%" y="581" width="0.0492%" height="15" fill="rgb(252,185,21)" fg:x="4042" fg:w="2"/><text x="99.6109%" y="591.50"></text></g><g><title>chacha_block_generic (2 samples, 0.05%)</title><rect x="99.3609%" y="565" width="0.0492%" height="15" fill="rgb(223,131,1)" fg:x="4042" fg:w="2"/><text x="99.6109%" y="575.50"></text></g><g><title>chacha_permute (2 samples, 0.05%)</title><rect x="99.3609%" y="549" width="0.0492%" height="15" fill="rgb(245,141,16)" fg:x="4042" fg:w="2"/><text x="99.6109%" y="559.50"></text></g><g><title>__check_object_size (2 samples, 0.05%)</title><rect x="99.4346%" y="549" width="0.0492%" height="15" fill="rgb(229,55,45)" fg:x="4045" fg:w="2"/><text x="99.6846%" y="559.50"></text></g><g><title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="99.4592%" y="533" width="0.0246%" height="15" fill="rgb(208,92,15)" fg:x="4046" fg:w="1"/><text x="99.7092%" y="543.50"></text></g><g><title>__skb_recv_udp (1 samples, 0.02%)</title><rect x="99.4838%" y="549" width="0.0246%" height="15" fill="rgb(234,185,47)" fg:x="4047" fg:w="1"/><text x="99.7338%" y="559.50"></text></g><g><title>inet_recvmsg (4 samples, 0.10%)</title><rect x="99.4346%" y="581" width="0.0983%" height="15" fill="rgb(253,104,50)" fg:x="4045" fg:w="4"/><text x="99.6846%" y="591.50"></text></g><g><title>udp_recvmsg (4 samples, 0.10%)</title><rect x="99.4346%" y="565" width="0.0983%" height="15" fill="rgb(205,70,7)" fg:x="4045" fg:w="4"/><text x="99.6846%" y="575.50"></text></g><g><title>_copy_to_iter (1 samples, 0.02%)</title><rect x="99.5084%" y="549" width="0.0246%" height="15" fill="rgb(240,178,43)" fg:x="4048" fg:w="1"/><text x="99.7584%" y="559.50"></text></g><g><title>copy_user_generic_string (1 samples, 0.02%)</title><rect x="99.5084%" y="533" width="0.0246%" height="15" fill="rgb(214,112,2)" fg:x="4048" fg:w="1"/><text x="99.7584%" y="543.50"></text></g><g><title>aa_sk_perm (1 samples, 0.02%)</title><rect x="99.5329%" y="565" width="0.0246%" height="15" fill="rgb(206,46,17)" fg:x="4049" fg:w="1"/><text x="99.7829%" y="575.50"></text></g><g><title>__x64_sys_recvfrom (7 samples, 0.17%)</title><rect x="99.4100%" y="629" width="0.1721%" height="15" fill="rgb(225,220,16)" fg:x="4044" fg:w="7"/><text x="99.6600%" y="639.50"></text></g><g><title>__sys_recvfrom (7 samples, 0.17%)</title><rect x="99.4100%" y="613" width="0.1721%" height="15" fill="rgb(238,65,40)" fg:x="4044" fg:w="7"/><text x="99.6600%" y="623.50"></text></g><g><title>sock_recvmsg (6 samples, 0.15%)</title><rect x="99.4346%" y="597" width="0.1475%" height="15" fill="rgb(230,151,21)" fg:x="4045" fg:w="6"/><text x="99.6846%" y="607.50"></text></g><g><title>security_socket_recvmsg (2 samples, 0.05%)</title><rect x="99.5329%" y="581" width="0.0492%" height="15" fill="rgb(218,58,49)" fg:x="4049" fg:w="2"/><text x="99.7829%" y="591.50"></text></g><g><title>bpf_lsm_socket_recvmsg (1 samples, 0.02%)</title><rect x="99.5575%" y="565" width="0.0246%" height="15" fill="rgb(219,179,14)" fg:x="4050" fg:w="1"/><text x="99.8075%" y="575.50"></text></g><g><title>security_socket_sendmsg (1 samples, 0.02%)</title><rect x="99.6067%" y="581" width="0.0246%" height="15" fill="rgb(223,72,1)" fg:x="4052" fg:w="1"/><text x="99.8567%" y="591.50"></text></g><g><title>tomoyo_socket_sendmsg_permission (1 samples, 0.02%)</title><rect x="99.6067%" y="565" width="0.0246%" height="15" fill="rgb(238,126,10)" fg:x="4052" fg:w="1"/><text x="99.8567%" y="575.50"></text></g><g><title>tomoyo_check_inet_address (1 samples, 0.02%)</title><rect x="99.6067%" y="549" width="0.0246%" height="15" fill="rgb(224,206,38)" fg:x="4052" fg:w="1"/><text x="99.8567%" y="559.50"></text></g><g><title>tomoyo_init_request_info (1 samples, 0.02%)</title><rect x="99.6067%" y="533" width="0.0246%" height="15" fill="rgb(212,201,54)" fg:x="4052" fg:w="1"/><text x="99.8567%" y="543.50"></text></g><g><title>__x64_sys_sendto (5 samples, 0.12%)</title><rect x="99.5821%" y="629" width="0.1229%" height="15" fill="rgb(218,154,48)" fg:x="4051" fg:w="5"/><text x="99.8321%" y="639.50"></text></g><g><title>__sys_sendto (4 samples, 0.10%)</title><rect x="99.6067%" y="613" width="0.0983%" height="15" fill="rgb(232,93,24)" fg:x="4052" fg:w="4"/><text x="99.8567%" y="623.50"></text></g><g><title>sock_sendmsg (4 samples, 0.10%)</title><rect x="99.6067%" y="597" width="0.0983%" height="15" fill="rgb(245,30,21)" fg:x="4052" fg:w="4"/><text x="99.8567%" y="607.50"></text></g><g><title>udp_sendmsg (3 samples, 0.07%)</title><rect x="99.6313%" y="581" width="0.0737%" height="15" fill="rgb(242,148,29)" fg:x="4053" fg:w="3"/><text x="99.8813%" y="591.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.02%)</title><rect x="99.6804%" y="565" width="0.0246%" height="15" fill="rgb(244,153,54)" fg:x="4055" fg:w="1"/><text x="99.9304%" y="575.50"></text></g><g><title>__x64_sys_timerfd_settime (2 samples, 0.05%)</title><rect x="99.7050%" y="629" width="0.0492%" height="15" fill="rgb(252,87,22)" fg:x="4056" fg:w="2"/><text x="99.9550%" y="639.50"></text></g><g><title>do_timerfd_settime (1 samples, 0.02%)</title><rect x="99.7296%" y="613" width="0.0246%" height="15" fill="rgb(210,51,29)" fg:x="4057" fg:w="1"/><text x="99.9796%" y="623.50"></text></g><g><title>hrtimer_start_range_ns (1 samples, 0.02%)</title><rect x="99.7296%" y="597" width="0.0246%" height="15" fill="rgb(242,136,47)" fg:x="4057" fg:w="1"/><text x="99.9796%" y="607.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="99.7296%" y="581" width="0.0246%" height="15" fill="rgb(238,68,4)" fg:x="4057" fg:w="1"/><text x="99.9796%" y="591.50"></text></g><g><title>ksys_read (1 samples, 0.02%)</title><rect x="99.7542%" y="629" width="0.0246%" height="15" fill="rgb(242,161,30)" fg:x="4058" fg:w="1"/><text x="100.0042%" y="639.50"></text></g><g><title>vfs_read (1 samples, 0.02%)</title><rect x="99.7542%" y="613" width="0.0246%" height="15" fill="rgb(218,58,44)" fg:x="4058" fg:w="1"/><text x="100.0042%" y="623.50"></text></g><g><title>copy_page_from_iter_atomic (1 samples, 0.02%)</title><rect x="99.7788%" y="565" width="0.0246%" height="15" fill="rgb(252,125,32)" fg:x="4059" fg:w="1"/><text x="100.0288%" y="575.50"></text></g><g><title>ext4_nonda_switch (1 samples, 0.02%)</title><rect x="99.8033%" y="549" width="0.0246%" height="15" fill="rgb(219,178,0)" fg:x="4060" fg:w="1"/><text x="100.0533%" y="559.50"></text></g><g><title>ext4_buffered_write_iter (3 samples, 0.07%)</title><rect x="99.7788%" y="597" width="0.0737%" height="15" fill="rgb(213,152,7)" fg:x="4059" fg:w="3"/><text x="100.0288%" y="607.50"></text></g><g><title>generic_perform_write (3 samples, 0.07%)</title><rect x="99.7788%" y="581" width="0.0737%" height="15" fill="rgb(249,109,34)" fg:x="4059" fg:w="3"/><text x="100.0288%" y="591.50"></text></g><g><title>ext4_da_write_begin (2 samples, 0.05%)</title><rect x="99.8033%" y="565" width="0.0492%" height="15" fill="rgb(232,96,21)" fg:x="4060" fg:w="2"/><text x="100.0533%" y="575.50"></text></g><g><title>pagecache_get_page (1 samples, 0.02%)</title><rect x="99.8279%" y="549" width="0.0246%" height="15" fill="rgb(228,27,39)" fg:x="4061" fg:w="1"/><text x="100.0779%" y="559.50"></text></g><g><title>__filemap_get_folio (1 samples, 0.02%)</title><rect x="99.8279%" y="533" width="0.0246%" height="15" fill="rgb(211,182,52)" fg:x="4061" fg:w="1"/><text x="100.0779%" y="543.50"></text></g><g><title>__rcu_read_unlock (1 samples, 0.02%)</title><rect x="99.8279%" y="517" width="0.0246%" height="15" fill="rgb(234,178,38)" fg:x="4061" fg:w="1"/><text x="100.0779%" y="527.50"></text></g><g><title>ksys_write (4 samples, 0.10%)</title><rect x="99.7788%" y="629" width="0.0983%" height="15" fill="rgb(221,111,3)" fg:x="4059" fg:w="4"/><text x="100.0288%" y="639.50"></text></g><g><title>vfs_write (4 samples, 0.10%)</title><rect x="99.7788%" y="613" width="0.0983%" height="15" fill="rgb(228,175,21)" fg:x="4059" fg:w="4"/><text x="100.0288%" y="623.50"></text></g><g><title>security_file_permission (1 samples, 0.02%)</title><rect x="99.8525%" y="597" width="0.0246%" height="15" fill="rgb(228,174,43)" fg:x="4062" fg:w="1"/><text x="100.1025%" y="607.50"></text></g><g><title>bpf_lsm_file_permission (1 samples, 0.02%)</title><rect x="99.8525%" y="581" width="0.0246%" height="15" fill="rgb(211,191,0)" fg:x="4062" fg:w="1"/><text x="100.1025%" y="591.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (34 samples, 0.84%)</title><rect x="99.1396%" y="661" width="0.8358%" height="15" fill="rgb(253,117,3)" fg:x="4033" fg:w="34"/><text x="99.3896%" y="671.50"></text></g><g><title>do_syscall_64 (34 samples, 0.84%)</title><rect x="99.1396%" y="645" width="0.8358%" height="15" fill="rgb(241,127,19)" fg:x="4033" fg:w="34"/><text x="99.3896%" y="655.50"></text></g><g><title>syscall_exit_to_user_mode (4 samples, 0.10%)</title><rect x="99.8771%" y="629" width="0.0983%" height="15" fill="rgb(218,103,12)" fg:x="4063" fg:w="4"/><text x="100.1271%" y="639.50"></text></g><g><title>exit_to_user_mode_prepare (4 samples, 0.10%)</title><rect x="99.8771%" y="613" width="0.0983%" height="15" fill="rgb(236,214,43)" fg:x="4063" fg:w="4"/><text x="100.1271%" y="623.50"></text></g><g><title>fpregs_assert_state_consistent (2 samples, 0.05%)</title><rect x="99.9263%" y="597" width="0.0492%" height="15" fill="rgb(244,144,19)" fg:x="4065" fg:w="2"/><text x="100.1763%" y="607.50"></text></g><g><title>check_preemption_disabled (1 samples, 0.02%)</title><rect x="99.9508%" y="581" width="0.0246%" height="15" fill="rgb(246,188,10)" fg:x="4066" fg:w="1"/><text x="100.2008%" y="591.50"></text></g><g><title>all (4,068 samples, 100%)</title><rect x="0.0000%" y="693" width="100.0000%" height="15" fill="rgb(212,193,33)" fg:x="0" fg:w="4068"/><text x="0.2500%" y="703.50"></text></g><g><title>tftp (4,064 samples, 99.90%)</title><rect x="0.0983%" y="677" width="99.9017%" height="15" fill="rgb(241,51,29)" fg:x="4" fg:w="4064"/><text x="0.3483%" y="687.50">tftp</text></g><g><title>poly1305::backend::avx2::helpers::SpacedMultiplier4x130::new (1 samples, 0.02%)</title><rect x="99.9754%" y="661" width="0.0246%" height="15" fill="rgb(211,58,19)" fg:x="4067" fg:w="1"/><text x="100.2254%" y="671.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi64 (1 samples, 0.02%)</title><rect x="99.9754%" y="645" width="0.0246%" height="15" fill="rgb(229,111,26)" fg:x="4067" fg:w="1"/><text x="100.2254%" y="655.50"></text></g></svg></svg>